define(["exports","./Matrix2-92b7fb9d","./PolylineVolumeGeometryLibrary-b9fa2b05","./when-8166c7dd","./ComponentDatatype-9ed50558","./PolylinePipeline-fd9260c9","./Transforms-62a339c3"],(function(a,e,r,n,t,i,s){"use strict";var o={},C=new e.Cartesian3,l=new e.Cartesian3,y=new e.Cartesian3,u=new e.Cartesian3,c=[new e.Cartesian3,new e.Cartesian3],d=new e.Cartesian3,p=new e.Cartesian3,m=new e.Cartesian3,g=new e.Cartesian3,f=new e.Cartesian3,h=new e.Cartesian3,w=new e.Cartesian3,x=new e.Cartesian3,z=new e.Cartesian3,v=new e.Cartesian3,P=new s.Quaternion,A=new e.Matrix3;function B(a,n,i,o,y){var u,c=e.Cartesian3.angleBetween(e.Cartesian3.subtract(n,a,C),e.Cartesian3.subtract(i,a,l)),d=o===r.CornerType.BEVELED?1:Math.ceil(c/t.CesiumMath.toRadians(5))+1,p=3*d,m=new Array(p);m[p-3]=i.x,m[p-2]=i.y,m[p-1]=i.z,u=y?e.Matrix3.fromQuaternion(s.Quaternion.fromAxisAngle(e.Cartesian3.negate(a,C),c/d,P),A):e.Matrix3.fromQuaternion(s.Quaternion.fromAxisAngle(a,c/d,P),A);var g=0;n=e.Cartesian3.clone(n,C);for(var f=0;f<d;f++)n=e.Matrix3.multiplyByVector(u,n,n),m[g++]=n.x,m[g++]=n.y,m[g++]=n.z;return m}function b(a){var n=d,t=p,i=m,s=a[1];t=e.Cartesian3.fromArray(a[1],s.length-3,t),i=e.Cartesian3.fromArray(a[0],0,i),n=e.Cartesian3.midpoint(t,i,n);var o=B(n,t,i,r.CornerType.ROUNDED,!1),C=a.length-1,l=a[C-1];s=a[C],t=e.Cartesian3.fromArray(l,l.length-3,t),i=e.Cartesian3.fromArray(s,0,i),n=e.Cartesian3.midpoint(t,i,n);var y=B(n,t,i,r.CornerType.ROUNDED,!1);return[o,y]}function E(a,r,n,t){var i=C;return t||(r=e.Cartesian3.negate(r,r)),i=e.Cartesian3.add(a,r,i),[i.x,i.y,i.z,n.x,n.y,n.z]}function S(a,r,n,t){for(var i=new Array(a.length),s=new Array(a.length),o=e.Cartesian3.multiplyByScalar(r,n,C),c=e.Cartesian3.negate(o,l),d=0,p=a.length-1,m=0;m<a.length;m+=3){var g=e.Cartesian3.fromArray(a,m,y),f=e.Cartesian3.add(g,c,u);i[d++]=f.x,i[d++]=f.y,i[d++]=f.z;var h=e.Cartesian3.add(g,o,u);s[p--]=h.z,s[p--]=h.y,s[p--]=h.x}return t.push(i,s),t}o.addAttribute=function(a,e,r,t){var i=e.x,s=e.y,o=e.z;n.defined(r)&&(a[r]=i,a[r+1]=s,a[r+2]=o),n.defined(t)&&(a[t]=o,a[t-1]=s,a[t-2]=i)};var D=new e.Cartesian3,M=new e.Cartesian3;o.computePositions=function(a){var n,s=a.granularity,o=a.positions,l=a.ellipsoid,y=a.width/2,u=a.cornerType,P=a.saveAttributes,A=d,T=p,N=m,L=g,O=f,R=h,V=w,Q=x,U=z,G=v,I=[],q=P?[]:void 0,j=P?[]:void 0,k=o[0],F=o[1];T=e.Cartesian3.normalize(e.Cartesian3.subtract(F,k,T),T),A=l.geodeticSurfaceNormal(k,A),L=e.Cartesian3.normalize(e.Cartesian3.cross(A,T,L),L),P&&(q.push(L.x,L.y,L.z),j.push(A.x,A.y,A.z)),V=e.Cartesian3.clone(k,V),k=F,N=e.Cartesian3.negate(T,N);var H,J,K=[],W=o.length;for(H=1;H<W-1;H++){A=l.geodeticSurfaceNormal(k,A),F=o[H+1],T=e.Cartesian3.normalize(e.Cartesian3.subtract(F,k,T),T),O=e.Cartesian3.normalize(e.Cartesian3.add(T,N,O),O);var X=e.Cartesian3.multiplyByScalar(A,e.Cartesian3.dot(T,A),D);e.Cartesian3.subtract(T,X,X),e.Cartesian3.normalize(X,X);var Y=e.Cartesian3.multiplyByScalar(A,e.Cartesian3.dot(N,A),M);e.Cartesian3.subtract(N,Y,Y),e.Cartesian3.normalize(Y,Y);var Z=!t.CesiumMath.equalsEpsilon(Math.abs(e.Cartesian3.dot(X,Y)),1,t.CesiumMath.EPSILON7);if(Z){O=e.Cartesian3.cross(O,A,O),O=e.Cartesian3.cross(A,O,O),O=e.Cartesian3.normalize(O,O);var $=y/Math.max(.25,e.Cartesian3.magnitude(e.Cartesian3.cross(O,N,C))),_=r.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(T,N,k,l);O=e.Cartesian3.multiplyByScalar(O,$,O),_?(Q=e.Cartesian3.add(k,O,Q),G=e.Cartesian3.add(Q,e.Cartesian3.multiplyByScalar(L,y,G),G),U=e.Cartesian3.add(Q,e.Cartesian3.multiplyByScalar(L,2*y,U),U),c[0]=e.Cartesian3.clone(V,c[0]),c[1]=e.Cartesian3.clone(G,c[1]),n=i.PolylinePipeline.generateArc({positions:c,granularity:s,ellipsoid:l}),I=S(n,L,y,I),P&&(q.push(L.x,L.y,L.z),j.push(A.x,A.y,A.z)),R=e.Cartesian3.clone(U,R),L=e.Cartesian3.normalize(e.Cartesian3.cross(A,T,L),L),U=e.Cartesian3.add(Q,e.Cartesian3.multiplyByScalar(L,2*y,U),U),V=e.Cartesian3.add(Q,e.Cartesian3.multiplyByScalar(L,y,V),V),u===r.CornerType.ROUNDED||u===r.CornerType.BEVELED?K.push({leftPositions:B(Q,R,U,u,_)}):K.push({leftPositions:E(k,e.Cartesian3.negate(O,O),U,_)})):(U=e.Cartesian3.add(k,O,U),G=e.Cartesian3.add(U,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(L,y,G),G),G),Q=e.Cartesian3.add(U,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(L,2*y,Q),Q),Q),c[0]=e.Cartesian3.clone(V,c[0]),c[1]=e.Cartesian3.clone(G,c[1]),n=i.PolylinePipeline.generateArc({positions:c,granularity:s,ellipsoid:l}),I=S(n,L,y,I),P&&(q.push(L.x,L.y,L.z),j.push(A.x,A.y,A.z)),R=e.Cartesian3.clone(Q,R),L=e.Cartesian3.normalize(e.Cartesian3.cross(A,T,L),L),Q=e.Cartesian3.add(U,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(L,2*y,Q),Q),Q),V=e.Cartesian3.add(U,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(L,y,V),V),V),u===r.CornerType.ROUNDED||u===r.CornerType.BEVELED?K.push({rightPositions:B(U,R,Q,u,_)}):K.push({rightPositions:E(k,O,Q,_)})),N=e.Cartesian3.negate(T,N)}k=F}return A=l.geodeticSurfaceNormal(k,A),c[0]=e.Cartesian3.clone(V,c[0]),c[1]=e.Cartesian3.clone(k,c[1]),n=i.PolylinePipeline.generateArc({positions:c,granularity:s,ellipsoid:l}),I=S(n,L,y,I),P&&(q.push(L.x,L.y,L.z),j.push(A.x,A.y,A.z)),u===r.CornerType.ROUNDED&&(J=b(I)),{positions:I,corners:K,lefts:q,normals:j,endPositions:J}},a.CorridorGeometryLibrary=o}));