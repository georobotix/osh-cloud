define(["./when-8166c7dd","./Matrix2-92b7fb9d","./ArcType-13a53523","./arrayRemoveDuplicates-198208a4","./Transforms-62a339c3","./Color-0181dacd","./ComponentDatatype-9ed50558","./RuntimeError-4fdc4459","./GeometryAttribute-6f4c3b93","./GeometryAttributes-50becc99","./IndexDatatype-797210ca","./PolylinePipeline-fd9260c9","./VertexFormat-c0801687","./combine-a5c4cc47","./WebGLConstants-0664004c","./EllipsoidGeodesic-133bd147","./EllipsoidRhumbLine-51654311","./IntersectionTests-4f28a69c","./Plane-049255eb"],(function(e,t,r,o,a,n,i,l,s,p,d,c,u,y,m,f,h,v,C){"use strict";var g=[];function w(e,t,r,o,a){var i,l=g;l.length=a;var s=r.red,p=r.green,d=r.blue,c=r.alpha,u=o.red,y=o.green,m=o.blue,f=o.alpha;if(n.Color.equals(r,o)){for(i=0;i<a;i++)l[i]=n.Color.clone(r);return l}var h=(u-s)/a,v=(y-p)/a,C=(m-d)/a,w=(f-c)/a;for(i=0;i<a;i++)l[i]=new n.Color(s+i*h,p+i*v,d+i*C,c+i*w);return l}function E(o){o=e.defaultValue(o,e.defaultValue.EMPTY_OBJECT);var a=o.positions,s=o.colors,p=e.defaultValue(o.width,1),d=e.defaultValue(o.colorsPerVertex,!1);if(!e.defined(a)||a.length<2)throw new l.DeveloperError("At least two positions are required.");if("number"!==typeof p)throw new l.DeveloperError("width must be a number");if(e.defined(s)&&(d&&s.length<a.length||!d&&s.length<a.length-1))throw new l.DeveloperError("colors has an invalid length.");this._positions=a,this._colors=s,this._width=p,this._colorsPerVertex=d,this._vertexFormat=u.VertexFormat.clone(e.defaultValue(o.vertexFormat,u.VertexFormat.DEFAULT)),this._arcType=e.defaultValue(o.arcType,r.ArcType.GEODESIC),this._granularity=e.defaultValue(o.granularity,i.CesiumMath.RADIANS_PER_DEGREE),this._ellipsoid=t.Ellipsoid.clone(e.defaultValue(o.ellipsoid,t.Ellipsoid.WGS84)),this._workerName="createPolylineGeometry";var c=1+a.length*t.Cartesian3.packedLength;c+=e.defined(s)?1+s.length*n.Color.packedLength:1,this.packedLength=c+t.Ellipsoid.packedLength+u.VertexFormat.packedLength+4}E.pack=function(r,o,a){if(!e.defined(r))throw new l.DeveloperError("value is required");if(!e.defined(o))throw new l.DeveloperError("array is required");var i;a=e.defaultValue(a,0);var s=r._positions,p=s.length;for(o[a++]=p,i=0;i<p;++i,a+=t.Cartesian3.packedLength)t.Cartesian3.pack(s[i],o,a);var d=r._colors;for(p=e.defined(d)?d.length:0,o[a++]=p,i=0;i<p;++i,a+=n.Color.packedLength)n.Color.pack(d[i],o,a);return t.Ellipsoid.pack(r._ellipsoid,o,a),a+=t.Ellipsoid.packedLength,u.VertexFormat.pack(r._vertexFormat,o,a),a+=u.VertexFormat.packedLength,o[a++]=r._width,o[a++]=r._colorsPerVertex?1:0,o[a++]=r._arcType,o[a]=r._granularity,o};var _=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),A=new u.VertexFormat,b={positions:void 0,colors:void 0,ellipsoid:_,vertexFormat:A,width:void 0,colorsPerVertex:void 0,arcType:void 0,granularity:void 0};E.unpack=function(r,o,a){if(!e.defined(r))throw new l.DeveloperError("array is required");var i;o=e.defaultValue(o,0);var s=r[o++],p=new Array(s);for(i=0;i<s;++i,o+=t.Cartesian3.packedLength)p[i]=t.Cartesian3.unpack(r,o);s=r[o++];var d=s>0?new Array(s):void 0;for(i=0;i<s;++i,o+=n.Color.packedLength)d[i]=n.Color.unpack(r,o);var c=t.Ellipsoid.unpack(r,o,_);o+=t.Ellipsoid.packedLength;var y=u.VertexFormat.unpack(r,o,A);o+=u.VertexFormat.packedLength;var m=r[o++],f=1===r[o++],h=r[o++],v=r[o];return e.defined(a)?(a._positions=p,a._colors=d,a._ellipsoid=t.Ellipsoid.clone(c,a._ellipsoid),a._vertexFormat=u.VertexFormat.clone(y,a._vertexFormat),a._width=m,a._colorsPerVertex=f,a._arcType=h,a._granularity=v,a):(b.positions=p,b.colors=d,b.width=m,b.colorsPerVertex=f,b.arcType=h,b.granularity=v,new E(b))};var P=new t.Cartesian3,D=new t.Cartesian3,x=new t.Cartesian3,T=new t.Cartesian3;function k(r,o){return e.defined(o)&&(r=E.unpack(r,o)),r._ellipsoid=t.Ellipsoid.clone(r._ellipsoid),E.createGeometry(r)}return E.createGeometry=function(l){var u,y,m,f=l._width,h=l._vertexFormat,v=l._colors,C=l._colorsPerVertex,E=l._arcType,_=l._granularity,A=l._ellipsoid,b=[],k=o.arrayRemoveDuplicates(l._positions,t.Cartesian3.equalsEpsilon,!1,b);if(e.defined(v)&&b.length>0){var V=0,L=b[0];v=v.filter((function(e,t){var r=!1;return r=C?t===L||0===t&&1===L:t+1===L,!r||(V++,L=b[V],!1)}))}var F=k.length;if(!(F<2||f<=0)){if(E===r.ArcType.GEODESIC||E===r.ArcType.RHUMB){var G,O;E===r.ArcType.GEODESIC?(G=i.CesiumMath.chordLength(_,A.maximumRadius),O=c.PolylinePipeline.numberOfPoints):(G=_,O=c.PolylinePipeline.numberOfPointsRhumbLine);var R=c.PolylinePipeline.extractHeights(k,A);if(e.defined(v)){var I=1;for(u=0;u<F-1;++u)I+=O(k[u],k[u+1],G);var S=new Array(I),B=0;for(u=0;u<F-1;++u){var U=k[u],N=k[u+1],q=v[u],M=O(U,N,G);if(C&&u<I){var H=v[u+1],W=w(U,N,q,H,M),Y=W.length;for(y=0;y<Y;++y)S[B++]=W[y]}else for(y=0;y<M;++y)S[B++]=n.Color.clone(q)}S[B]=n.Color.clone(v[v.length-1]),v=S,g.length=0}k=E===r.ArcType.GEODESIC?c.PolylinePipeline.generateCartesianArc({positions:k,minDistance:G,ellipsoid:A,height:R}):c.PolylinePipeline.generateCartesianRhumbArc({positions:k,granularity:G,ellipsoid:A,height:R})}F=k.length;var z,J=4*F-4,j=new Float64Array(3*J),K=new Float64Array(3*J),Q=new Float64Array(3*J),X=new Float32Array(2*J),Z=h.st?new Float32Array(2*J):void 0,$=e.defined(v)?new Uint8Array(4*J):void 0,ee=0,te=0,re=0,oe=0;for(y=0;y<F;++y){var ae,ne;0===y?(z=P,t.Cartesian3.subtract(k[0],k[1],z),t.Cartesian3.add(k[0],z,z)):z=k[y-1],t.Cartesian3.clone(z,x),t.Cartesian3.clone(k[y],D),y===F-1?(z=P,t.Cartesian3.subtract(k[F-1],k[F-2],z),t.Cartesian3.add(k[F-1],z,z)):z=k[y+1],t.Cartesian3.clone(z,T),e.defined($)&&(ae=0===y||C?v[y]:v[y-1],y!==F-1&&(ne=v[y]));var ie=0===y?2:0,le=y===F-1?2:4;for(m=ie;m<le;++m){t.Cartesian3.pack(D,j,ee),t.Cartesian3.pack(x,K,ee),t.Cartesian3.pack(T,Q,ee),ee+=3;var se=m-2<0?-1:1;if(X[te++]=m%2*2-1,X[te++]=se*f,h.st&&(Z[re++]=y/(F-1),Z[re++]=Math.max(X[te-2],0)),e.defined($)){var pe=m<2?ae:ne;$[oe++]=n.Color.floatToByte(pe.red),$[oe++]=n.Color.floatToByte(pe.green),$[oe++]=n.Color.floatToByte(pe.blue),$[oe++]=n.Color.floatToByte(pe.alpha)}}}var de=new p.GeometryAttributes;de.position=new s.GeometryAttribute({componentDatatype:i.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:j}),de.prevPosition=new s.GeometryAttribute({componentDatatype:i.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:K}),de.nextPosition=new s.GeometryAttribute({componentDatatype:i.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:Q}),de.expandAndWidth=new s.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:X}),h.st&&(de.st=new s.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:Z})),e.defined($)&&(de.color=new s.GeometryAttribute({componentDatatype:i.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:4,values:$,normalize:!0}));var ce=d.IndexDatatype.createTypedArray(J,6*F-6),ue=0,ye=0,me=F-1;for(y=0;y<me;++y)ce[ye++]=ue,ce[ye++]=ue+2,ce[ye++]=ue+1,ce[ye++]=ue+1,ce[ye++]=ue+2,ce[ye++]=ue+3,ue+=4;return new s.Geometry({attributes:de,indices:ce,primitiveType:s.PrimitiveType.TRIANGLES,boundingSphere:a.BoundingSphere.fromPoints(k),geometryType:s.GeometryType.POLYLINES})}},k}));