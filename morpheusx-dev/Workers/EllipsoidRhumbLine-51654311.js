define(["exports","./Matrix2-92b7fb9d","./RuntimeError-4fdc4459","./when-8166c7dd","./ComponentDatatype-9ed50558"],(function(t,i,e,a,n){"use strict";function s(t,i,e){if(0===t)return i*e;var a=t*t,n=a*a,s=n*a,h=s*a,r=h*a,u=r*a,d=e,o=Math.sin(2*d),l=Math.sin(4*d),c=Math.sin(6*d),M=Math.sin(8*d),m=Math.sin(10*d),_=Math.sin(12*d);return i*((1-a/4-3*n/64-5*s/256-175*h/16384-441*r/65536-4851*u/1048576)*d-(3*a/8+3*n/32+45*s/1024+105*h/4096+2205*r/131072+6237*u/524288)*o+(15*n/256+45*s/1024+525*h/16384+1575*r/65536+155925*u/8388608)*l-(35*s/3072+175*h/12288+3675*r/262144+13475*u/1048576)*c+(315*h/131072+2205*r/524288+43659*u/8388608)*M-(693*r/1310720+6237*u/5242880)*m+1001*u/8388608*_)}function h(t,i,e){var a=t/e;if(0===i)return a;var n=a*a,s=n*a,h=s*a,r=i,u=r*r,d=u*u,o=d*u,l=o*u,c=l*u,M=c*u,m=Math.sin(2*a),_=Math.cos(2*a),g=Math.sin(4*a),p=Math.cos(4*a),f=Math.sin(6*a),C=Math.cos(6*a),v=Math.sin(8*a),P=Math.cos(8*a),E=Math.sin(10*a),O=Math.cos(10*a),y=Math.sin(12*a);return a+a*u/4+7*a*d/64+15*a*o/256+579*a*l/16384+1515*a*c/65536+16837*a*M/1048576+(3*a*d/16+45*a*o/256-a*(32*n-561)*l/4096-a*(232*n-1677)*c/16384+a*(399985-90560*n+512*h)*M/5242880)*_+(21*a*o/256+483*a*l/4096-a*(224*n-1969)*c/16384-a*(33152*n-112599)*M/1048576)*p+(151*a*l/4096+4681*a*c/65536+1479*a*M/16384-453*s*M/32768)*C+(1097*a*c/65536+42783*a*M/1048576)*P+8011*a*M/1048576*O+(3*u/8+3*d/16+213*o/2048-3*n*o/64+255*l/4096-33*n*l/512+20861*c/524288-33*n*c/512+h*c/1024+28273*M/1048576-471*n*M/8192+9*h*M/4096)*m+(21*d/256+21*o/256+533*l/8192-21*n*l/512+197*c/4096-315*n*c/4096+584039*M/16777216-12517*n*M/131072+7*h*M/2048)*g+(151*o/6144+151*l/4096+5019*c/131072-453*n*c/16384+26965*M/786432-8607*n*M/131072)*f+(1097*l/131072+1097*c/65536+225797*M/10485760-1097*n*M/65536)*v+(8011*c/2621440+8011*M/1048576)*E+293393*M/251658240*y}function r(t,i){if(0===t)return Math.log(Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+i)));var e=t*Math.sin(i);return Math.log(Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+i)))-t/2*Math.log((1+e)/(1-e))}function u(t,i,e,a,s){var h=r(t._ellipticity,e),u=r(t._ellipticity,s);return Math.atan2(n.CesiumMath.negativePiToPi(a-i),u-h)}function d(t,i,e,a,h,r,u){var d=t._heading,o=r-a,l=0;if(n.CesiumMath.equalsEpsilon(Math.abs(d),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8))if(i===e)l=i*Math.cos(h)*n.CesiumMath.negativePiToPi(o);else{var c=Math.sin(h);l=i*Math.cos(h)*n.CesiumMath.negativePiToPi(o)/Math.sqrt(1-t._ellipticitySquared*c*c)}else{var M=s(t._ellipticity,i,h),m=s(t._ellipticity,i,u);l=(m-M)/Math.cos(d)}return Math.abs(l)}var o=new i.Cartesian3,l=new i.Cartesian3;function c(t,a,n,s){var h=i.Cartesian3.normalize(s.cartographicToCartesian(a,l),o),r=i.Cartesian3.normalize(s.cartographicToCartesian(n,l),l);e.Check.typeOf.number.greaterThanOrEquals("value",Math.abs(Math.abs(i.Cartesian3.angleBetween(h,r))-Math.PI),.0125);var c=s.maximumRadius,M=s.minimumRadius,m=c*c,_=M*M;t._ellipticitySquared=(m-_)/m,t._ellipticity=Math.sqrt(t._ellipticitySquared),t._start=i.Cartographic.clone(a,t._start),t._start.height=0,t._end=i.Cartographic.clone(n,t._end),t._end.height=0,t._heading=u(t,a.longitude,a.latitude,n.longitude,n.latitude),t._distance=d(t,s.maximumRadius,s.minimumRadius,a.longitude,a.latitude,n.longitude,n.latitude)}function M(t,e,u,d,o,l){if(0===u)return i.Cartographic.clone(t,l);var c,M,m,_=o*o;if(Math.abs(n.CesiumMath.PI_OVER_TWO-Math.abs(e))>n.CesiumMath.EPSILON8){var g=s(o,d,t.latitude),p=u*Math.cos(e),f=g+p;M=h(f,o,d);var C=r(o,t.latitude),v=r(o,M);m=Math.tan(e)*(v-C),c=n.CesiumMath.negativePiToPi(t.longitude+m)}else{var P;if(M=t.latitude,0===o)P=d*Math.cos(t.latitude);else{var E=Math.sin(t.latitude);P=d*Math.cos(t.latitude)/Math.sqrt(1-_*E*E)}m=u/P,c=e>0?n.CesiumMath.negativePiToPi(t.longitude+m):n.CesiumMath.negativePiToPi(t.longitude-m)}return a.defined(l)?(l.longitude=c,l.latitude=M,l.height=0,l):new i.Cartographic(c,M,0)}function m(t,e,n){var s=a.defaultValue(n,i.Ellipsoid.WGS84);this._ellipsoid=s,this._start=new i.Cartographic,this._end=new i.Cartographic,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,a.defined(t)&&a.defined(e)&&c(this,t,e,s)}Object.defineProperties(m.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return e.Check.defined("distance",this._distance),this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return e.Check.defined("distance",this._distance),this._heading}}}),m.fromStartHeadingDistance=function(t,s,h,r,u){e.Check.defined("start",t),e.Check.defined("heading",s),e.Check.defined("distance",h),e.Check.typeOf.number.greaterThan("distance",h,0);var d=a.defaultValue(r,i.Ellipsoid.WGS84),o=d.maximumRadius,l=d.minimumRadius,c=o*o,_=l*l,g=Math.sqrt((c-_)/c);s=n.CesiumMath.negativePiToPi(s);var p=M(t,s,h,d.maximumRadius,g);return!a.defined(u)||a.defined(r)&&!r.equals(u.ellipsoid)?new m(t,p,d):(u.setEndPoints(t,p),u)},m.prototype.setEndPoints=function(t,i){e.Check.defined("start",t),e.Check.defined("end",i),c(this,t,i,this._ellipsoid)},m.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},m.prototype.interpolateUsingSurfaceDistance=function(t,i){if(e.Check.typeOf.number("distance",t),!a.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");return M(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,i)},m.prototype.findIntersectionWithLongitude=function(t,s){if(e.Check.typeOf.number("intersectionLongitude",t),!a.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");var h=this._ellipticity,r=this._heading,u=Math.abs(r),d=this._start;if(t=n.CesiumMath.negativePiToPi(t),n.CesiumMath.equalsEpsilon(Math.abs(t),Math.PI,n.CesiumMath.EPSILON14)&&(t=n.CesiumMath.sign(d.longitude)*Math.PI),a.defined(s)||(s=new i.Cartographic),Math.abs(n.CesiumMath.PI_OVER_TWO-u)<=n.CesiumMath.EPSILON8)return s.longitude=t,s.latitude=d.latitude,s.height=0,s;if(n.CesiumMath.equalsEpsilon(Math.abs(n.CesiumMath.PI_OVER_TWO-u),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8)){if(n.CesiumMath.equalsEpsilon(t,d.longitude,n.CesiumMath.EPSILON12))return;return s.longitude=t,s.latitude=n.CesiumMath.PI_OVER_TWO*n.CesiumMath.sign(n.CesiumMath.PI_OVER_TWO-r),s.height=0,s}var o,l=d.latitude,c=h*Math.sin(l),M=Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+l))*Math.exp((t-d.longitude)/Math.tan(r)),m=(1+c)/(1-c),_=d.latitude;do{o=_;var g=h*Math.sin(o),p=(1+g)/(1-g);_=2*Math.atan(M*Math.pow(p/m,h/2))-n.CesiumMath.PI_OVER_TWO}while(!n.CesiumMath.equalsEpsilon(_,o,n.CesiumMath.EPSILON12));return s.longitude=t,s.latitude=_,s.height=0,s},m.prototype.findIntersectionWithLatitude=function(t,s){if(e.Check.typeOf.number("intersectionLatitude",t),!a.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");var h=this._ellipticity,u=this._heading,d=this._start;if(!n.CesiumMath.equalsEpsilon(Math.abs(u),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8)){var o=r(h,d.latitude),l=r(h,t),c=Math.tan(u)*(l-o),M=n.CesiumMath.negativePiToPi(d.longitude+c);return a.defined(s)?(s.longitude=M,s.latitude=t,s.height=0,s):new i.Cartographic(M,t,0)}},t.EllipsoidRhumbLine=m}));