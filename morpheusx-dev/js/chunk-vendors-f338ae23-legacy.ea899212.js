"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[5691],{52975:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ThirdParty_dompurify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90634);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n\n\n\n\n\nvar nextCreditId = 0;\nvar creditToId = {};\n\n/**\n * A credit contains data pertaining to how to display attributions/credits for certain content on the screen.\n * @param {String} html An string representing an html code snippet\n * @param {Boolean} [showOnScreen=false] If true, the credit will be visible in the main credit container.  Otherwise, it will appear in a popover\n *\n * @alias Credit\n * @constructor\n *\n * @exception {DeveloperError} html is required.\n *\n * @example\n * //Create a credit with a tooltip, image and link\n * var credit = new Cesium.Credit(\'<a href="https://cesium.com/" target="_blank"><img src="/images/cesium_logo.png" title="Cesium"/></a>\');\n */\nfunction Credit(html, showOnScreen) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.string */ .Z.typeOf.string("html", html);\n  //>>includeEnd(\'debug\');\n  var id;\n  var key = html;\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(creditToId[key])) {\n    id = creditToId[key];\n  } else {\n    id = nextCreditId++;\n    creditToId[key] = id;\n  }\n\n  showOnScreen = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(showOnScreen, false);\n\n  // Credits are immutable so generate an id to use to optimize equal()\n  this._id = id;\n  this._html = html;\n  this._showOnScreen = showOnScreen;\n  this._element = undefined;\n}\n\nObject.defineProperties(Credit.prototype, {\n  /**\n   * The credit content\n   * @memberof Credit.prototype\n   * @type {String}\n   * @readonly\n   */\n  html: {\n    get: function () {\n      return this._html;\n    },\n  },\n\n  /**\n   * @memberof Credit.prototype\n   * @type {Number}\n   * @readonly\n   *\n   * @private\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n\n  /**\n   * Whether the credit should be displayed on screen or in a lightbox\n   * @memberof Credit.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  showOnScreen: {\n    get: function () {\n      return this._showOnScreen;\n    },\n  },\n\n  /**\n   * Gets the credit element\n   * @memberof Credit.prototype\n   * @type {HTMLElement}\n   * @readonly\n   */\n  element: {\n    get: function () {\n      if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this._element)) {\n        var html = _ThirdParty_dompurify_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].sanitize */ .Z.sanitize(this._html);\n\n        var div = document.createElement("div");\n        div._creditId = this._id;\n        div.style.display = "inline";\n        div.innerHTML = html;\n\n        var links = div.querySelectorAll("a");\n        for (var i = 0; i < links.length; i++) {\n          links[i].setAttribute("target", "_blank");\n        }\n\n        this._element = div;\n      }\n      return this._element;\n    },\n  },\n});\n\n/**\n * Returns true if the credits are equal\n *\n * @param {Credit} left The first credit\n * @param {Credit} right The second credit\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCredit.equals = function (left, right) {\n  return (\n    left === right ||\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(left) && (0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(right) && left._id === right._id)\n  );\n};\n\n/**\n * Returns true if the credits are equal\n *\n * @param {Credit} credit The credit to compare to.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCredit.prototype.equals = function (credit) {\n  return Credit.equals(this, credit);\n};\n\n/**\n * @private\n * @param attribution\n * @return {Credit}\n */\nCredit.getIonCredit = function (attribution) {\n  var showOnScreen =\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(attribution.collapsible) && !attribution.collapsible;\n  var credit = new Credit(attribution.html, showOnScreen);\n\n  credit._isIon = credit.html.indexOf("ion-credit.png") !== -1;\n  return credit;\n};\n\n/**\n * Duplicates a Credit instance.\n *\n * @param {Credit} [credit] The Credit to duplicate.\n * @returns {Credit} A new Credit instance that is a duplicate of the one provided. (Returns undefined if the credit is undefined)\n */\nCredit.clone = function (credit) {\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(credit)) {\n    return new Credit(credit.html, credit.showOnScreen);\n  }\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Credit);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTI5NzUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFtRDtBQUNwQjtBQUNjO0FBQ1Y7O0FBRW5DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc0ZBQW1CO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLGdFQUFPO0FBQ2I7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixxRUFBWTs7QUFFN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFPO0FBQ2xCLG1CQUFtQiwyRkFBa0I7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZ0VBQU8sVUFBVSxnRUFBTztBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLElBQUksZ0VBQU87QUFDWDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsTUFBTSxnRUFBTztBQUNiO0FBQ0E7QUFDQTtBQUNBLHlEQUFlLE1BQU0sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL0NyZWRpdC5qcz8zMjQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBET01QdXJpZnkgZnJvbSBcIi4uL1RoaXJkUGFydHkvZG9tcHVyaWZ5LmpzXCI7XG5pbXBvcnQgQ2hlY2sgZnJvbSBcIi4vQ2hlY2suanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4vZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi9kZWZpbmVkLmpzXCI7XG5cbnZhciBuZXh0Q3JlZGl0SWQgPSAwO1xudmFyIGNyZWRpdFRvSWQgPSB7fTtcblxuLyoqXG4gKiBBIGNyZWRpdCBjb250YWlucyBkYXRhIHBlcnRhaW5pbmcgdG8gaG93IHRvIGRpc3BsYXkgYXR0cmlidXRpb25zL2NyZWRpdHMgZm9yIGNlcnRhaW4gY29udGVudCBvbiB0aGUgc2NyZWVuLlxuICogQHBhcmFtIHtTdHJpbmd9IGh0bWwgQW4gc3RyaW5nIHJlcHJlc2VudGluZyBhbiBodG1sIGNvZGUgc25pcHBldFxuICogQHBhcmFtIHtCb29sZWFufSBbc2hvd09uU2NyZWVuPWZhbHNlXSBJZiB0cnVlLCB0aGUgY3JlZGl0IHdpbGwgYmUgdmlzaWJsZSBpbiB0aGUgbWFpbiBjcmVkaXQgY29udGFpbmVyLiAgT3RoZXJ3aXNlLCBpdCB3aWxsIGFwcGVhciBpbiBhIHBvcG92ZXJcbiAqXG4gKiBAYWxpYXMgQ3JlZGl0XG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gaHRtbCBpcyByZXF1aXJlZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy9DcmVhdGUgYSBjcmVkaXQgd2l0aCBhIHRvb2x0aXAsIGltYWdlIGFuZCBsaW5rXG4gKiB2YXIgY3JlZGl0ID0gbmV3IENlc2l1bS5DcmVkaXQoJzxhIGhyZWY9XCJodHRwczovL2Nlc2l1bS5jb20vXCIgdGFyZ2V0PVwiX2JsYW5rXCI+PGltZyBzcmM9XCIvaW1hZ2VzL2Nlc2l1bV9sb2dvLnBuZ1wiIHRpdGxlPVwiQ2VzaXVtXCIvPjwvYT4nKTtcbiAqL1xuZnVuY3Rpb24gQ3JlZGl0KGh0bWwsIHNob3dPblNjcmVlbikge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay50eXBlT2Yuc3RyaW5nKFwiaHRtbFwiLCBodG1sKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG4gIHZhciBpZDtcbiAgdmFyIGtleSA9IGh0bWw7XG5cbiAgaWYgKGRlZmluZWQoY3JlZGl0VG9JZFtrZXldKSkge1xuICAgIGlkID0gY3JlZGl0VG9JZFtrZXldO1xuICB9IGVsc2Uge1xuICAgIGlkID0gbmV4dENyZWRpdElkKys7XG4gICAgY3JlZGl0VG9JZFtrZXldID0gaWQ7XG4gIH1cblxuICBzaG93T25TY3JlZW4gPSBkZWZhdWx0VmFsdWUoc2hvd09uU2NyZWVuLCBmYWxzZSk7XG5cbiAgLy8gQ3JlZGl0cyBhcmUgaW1tdXRhYmxlIHNvIGdlbmVyYXRlIGFuIGlkIHRvIHVzZSB0byBvcHRpbWl6ZSBlcXVhbCgpXG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX2h0bWwgPSBodG1sO1xuICB0aGlzLl9zaG93T25TY3JlZW4gPSBzaG93T25TY3JlZW47XG4gIHRoaXMuX2VsZW1lbnQgPSB1bmRlZmluZWQ7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKENyZWRpdC5wcm90b3R5cGUsIHtcbiAgLyoqXG4gICAqIFRoZSBjcmVkaXQgY29udGVudFxuICAgKiBAbWVtYmVyb2YgQ3JlZGl0LnByb3RvdHlwZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIGh0bWw6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9odG1sO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBDcmVkaXQucHJvdG90eXBlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEByZWFkb25seVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgaWQ6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pZDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBjcmVkaXQgc2hvdWxkIGJlIGRpc3BsYXllZCBvbiBzY3JlZW4gb3IgaW4gYSBsaWdodGJveFxuICAgKiBAbWVtYmVyb2YgQ3JlZGl0LnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICBzaG93T25TY3JlZW46IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9zaG93T25TY3JlZW47XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogR2V0cyB0aGUgY3JlZGl0IGVsZW1lbnRcbiAgICogQG1lbWJlcm9mIENyZWRpdC5wcm90b3R5cGVcbiAgICogQHR5cGUge0hUTUxFbGVtZW50fVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIGVsZW1lbnQ6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghZGVmaW5lZCh0aGlzLl9lbGVtZW50KSkge1xuICAgICAgICB2YXIgaHRtbCA9IERPTVB1cmlmeS5zYW5pdGl6ZSh0aGlzLl9odG1sKTtcblxuICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgZGl2Ll9jcmVkaXRJZCA9IHRoaXMuX2lkO1xuICAgICAgICBkaXYuc3R5bGUuZGlzcGxheSA9IFwiaW5saW5lXCI7XG4gICAgICAgIGRpdi5pbm5lckhUTUwgPSBodG1sO1xuXG4gICAgICAgIHZhciBsaW5rcyA9IGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiYVwiKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5rcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGxpbmtzW2ldLnNldEF0dHJpYnV0ZShcInRhcmdldFwiLCBcIl9ibGFua1wiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSBkaXY7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgICB9LFxuICB9LFxufSk7XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBjcmVkaXRzIGFyZSBlcXVhbFxuICpcbiAqIEBwYXJhbSB7Q3JlZGl0fSBsZWZ0IFRoZSBmaXJzdCBjcmVkaXRcbiAqIEBwYXJhbSB7Q3JlZGl0fSByaWdodCBUaGUgc2Vjb25kIGNyZWRpdFxuICogQHJldHVybnMge0Jvb2xlYW59IDxjb2RlPnRydWU8L2NvZGU+IGlmIGxlZnQgYW5kIHJpZ2h0IGFyZSBlcXVhbCwgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS5cbiAqL1xuQ3JlZGl0LmVxdWFscyA9IGZ1bmN0aW9uIChsZWZ0LCByaWdodCkge1xuICByZXR1cm4gKFxuICAgIGxlZnQgPT09IHJpZ2h0IHx8XG4gICAgKGRlZmluZWQobGVmdCkgJiYgZGVmaW5lZChyaWdodCkgJiYgbGVmdC5faWQgPT09IHJpZ2h0Ll9pZClcbiAgKTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBjcmVkaXRzIGFyZSBlcXVhbFxuICpcbiAqIEBwYXJhbSB7Q3JlZGl0fSBjcmVkaXQgVGhlIGNyZWRpdCB0byBjb21wYXJlIHRvLlxuICogQHJldHVybnMge0Jvb2xlYW59IDxjb2RlPnRydWU8L2NvZGU+IGlmIGxlZnQgYW5kIHJpZ2h0IGFyZSBlcXVhbCwgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS5cbiAqL1xuQ3JlZGl0LnByb3RvdHlwZS5lcXVhbHMgPSBmdW5jdGlvbiAoY3JlZGl0KSB7XG4gIHJldHVybiBDcmVkaXQuZXF1YWxzKHRoaXMsIGNyZWRpdCk7XG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0gYXR0cmlidXRpb25cbiAqIEByZXR1cm4ge0NyZWRpdH1cbiAqL1xuQ3JlZGl0LmdldElvbkNyZWRpdCA9IGZ1bmN0aW9uIChhdHRyaWJ1dGlvbikge1xuICB2YXIgc2hvd09uU2NyZWVuID1cbiAgICBkZWZpbmVkKGF0dHJpYnV0aW9uLmNvbGxhcHNpYmxlKSAmJiAhYXR0cmlidXRpb24uY29sbGFwc2libGU7XG4gIHZhciBjcmVkaXQgPSBuZXcgQ3JlZGl0KGF0dHJpYnV0aW9uLmh0bWwsIHNob3dPblNjcmVlbik7XG5cbiAgY3JlZGl0Ll9pc0lvbiA9IGNyZWRpdC5odG1sLmluZGV4T2YoXCJpb24tY3JlZGl0LnBuZ1wiKSAhPT0gLTE7XG4gIHJldHVybiBjcmVkaXQ7XG59O1xuXG4vKipcbiAqIER1cGxpY2F0ZXMgYSBDcmVkaXQgaW5zdGFuY2UuXG4gKlxuICogQHBhcmFtIHtDcmVkaXR9IFtjcmVkaXRdIFRoZSBDcmVkaXQgdG8gZHVwbGljYXRlLlxuICogQHJldHVybnMge0NyZWRpdH0gQSBuZXcgQ3JlZGl0IGluc3RhbmNlIHRoYXQgaXMgYSBkdXBsaWNhdGUgb2YgdGhlIG9uZSBwcm92aWRlZC4gKFJldHVybnMgdW5kZWZpbmVkIGlmIHRoZSBjcmVkaXQgaXMgdW5kZWZpbmVkKVxuICovXG5DcmVkaXQuY2xvbmUgPSBmdW5jdGlvbiAoY3JlZGl0KSB7XG4gIGlmIChkZWZpbmVkKGNyZWRpdCkpIHtcbiAgICByZXR1cm4gbmV3IENyZWRpdChjcmVkaXQuaHRtbCwgY3JlZGl0LnNob3dPblNjcmVlbik7XG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBDcmVkaXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///52975\n')},13752:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n/* harmony import */ var _QuadraticRealPolynomial_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46003);\n\n\n\n/**\n * Defines functions for 3rd order polynomial functions of one variable with only real coefficients.\n *\n * @namespace CubicRealPolynomial\n */\nvar CubicRealPolynomial = {};\n\n/**\n * Provides the discriminant of the cubic equation from the supplied coefficients.\n *\n * @param {Number} a The coefficient of the 3rd order monomial.\n * @param {Number} b The coefficient of the 2nd order monomial.\n * @param {Number} c The coefficient of the 1st order monomial.\n * @param {Number} d The coefficient of the 0th order monomial.\n * @returns {Number} The value of the discriminant.\n */\nCubicRealPolynomial.computeDiscriminant = function (a, b, c, d) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (typeof a !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("a is a required number.");\n  }\n  if (typeof b !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("b is a required number.");\n  }\n  if (typeof c !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("c is a required number.");\n  }\n  if (typeof d !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("d is a required number.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var a2 = a * a;\n  var b2 = b * b;\n  var c2 = c * c;\n  var d2 = d * d;\n\n  var discriminant =\n    18.0 * a * b * c * d +\n    b2 * c2 -\n    27.0 * a2 * d2 -\n    4.0 * (a * c2 * c + b2 * b * d);\n  return discriminant;\n};\n\nfunction computeRealRoots(a, b, c, d) {\n  var A = a;\n  var B = b / 3.0;\n  var C = c / 3.0;\n  var D = d;\n\n  var AC = A * C;\n  var BD = B * D;\n  var B2 = B * B;\n  var C2 = C * C;\n  var delta1 = A * C - B2;\n  var delta2 = A * D - B * C;\n  var delta3 = B * D - C2;\n\n  var discriminant = 4.0 * delta1 * delta3 - delta2 * delta2;\n  var temp;\n  var temp1;\n\n  if (discriminant < 0.0) {\n    var ABar;\n    var CBar;\n    var DBar;\n\n    if (B2 * BD >= AC * C2) {\n      ABar = A;\n      CBar = delta1;\n      DBar = -2.0 * B * delta1 + A * delta2;\n    } else {\n      ABar = D;\n      CBar = delta3;\n      DBar = -D * delta2 + 2.0 * C * delta3;\n    }\n\n    var s = DBar < 0.0 ? -1.0 : 1.0; // This is not Math.Sign()!\n    var temp0 = -s * Math.abs(ABar) * Math.sqrt(-discriminant);\n    temp1 = -DBar + temp0;\n\n    var x = temp1 / 2.0;\n    var p = x < 0.0 ? -Math.pow(-x, 1.0 / 3.0) : Math.pow(x, 1.0 / 3.0);\n    var q = temp1 === temp0 ? -p : -CBar / p;\n\n    temp = CBar <= 0.0 ? p + q : -DBar / (p * p + q * q + CBar);\n\n    if (B2 * BD >= AC * C2) {\n      return [(temp - B) / A];\n    }\n\n    return [-D / (temp + C)];\n  }\n\n  var CBarA = delta1;\n  var DBarA = -2.0 * B * delta1 + A * delta2;\n\n  var CBarD = delta3;\n  var DBarD = -D * delta2 + 2.0 * C * delta3;\n\n  var squareRootOfDiscriminant = Math.sqrt(discriminant);\n  var halfSquareRootOf3 = Math.sqrt(3.0) / 2.0;\n\n  var theta = Math.abs(Math.atan2(A * squareRootOfDiscriminant, -DBarA) / 3.0);\n  temp = 2.0 * Math.sqrt(-CBarA);\n  var cosine = Math.cos(theta);\n  temp1 = temp * cosine;\n  var temp3 = temp * (-cosine / 2.0 - halfSquareRootOf3 * Math.sin(theta));\n\n  var numeratorLarge = temp1 + temp3 > 2.0 * B ? temp1 - B : temp3 - B;\n  var denominatorLarge = A;\n\n  var root1 = numeratorLarge / denominatorLarge;\n\n  theta = Math.abs(Math.atan2(D * squareRootOfDiscriminant, -DBarD) / 3.0);\n  temp = 2.0 * Math.sqrt(-CBarD);\n  cosine = Math.cos(theta);\n  temp1 = temp * cosine;\n  temp3 = temp * (-cosine / 2.0 - halfSquareRootOf3 * Math.sin(theta));\n\n  var numeratorSmall = -D;\n  var denominatorSmall = temp1 + temp3 < 2.0 * C ? temp1 + C : temp3 + C;\n\n  var root3 = numeratorSmall / denominatorSmall;\n\n  var E = denominatorLarge * denominatorSmall;\n  var F =\n    -numeratorLarge * denominatorSmall - denominatorLarge * numeratorSmall;\n  var G = numeratorLarge * numeratorSmall;\n\n  var root2 = (C * F - B * G) / (-B * F + C * E);\n\n  if (root1 <= root2) {\n    if (root1 <= root3) {\n      if (root2 <= root3) {\n        return [root1, root2, root3];\n      }\n      return [root1, root3, root2];\n    }\n    return [root3, root1, root2];\n  }\n  if (root1 <= root3) {\n    return [root2, root1, root3];\n  }\n  if (root2 <= root3) {\n    return [root2, root3, root1];\n  }\n  return [root3, root2, root1];\n}\n\n/**\n * Provides the real valued roots of the cubic polynomial with the provided coefficients.\n *\n * @param {Number} a The coefficient of the 3rd order monomial.\n * @param {Number} b The coefficient of the 2nd order monomial.\n * @param {Number} c The coefficient of the 1st order monomial.\n * @param {Number} d The coefficient of the 0th order monomial.\n * @returns {Number[]} The real valued roots.\n */\nCubicRealPolynomial.computeRealRoots = function (a, b, c, d) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (typeof a !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("a is a required number.");\n  }\n  if (typeof b !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("b is a required number.");\n  }\n  if (typeof c !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("c is a required number.");\n  }\n  if (typeof d !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("d is a required number.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var roots;\n  var ratio;\n  if (a === 0.0) {\n    // Quadratic function: b * x^2 + c * x + d = 0.\n    return _QuadraticRealPolynomial_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].computeRealRoots */ .Z.computeRealRoots(b, c, d);\n  } else if (b === 0.0) {\n    if (c === 0.0) {\n      if (d === 0.0) {\n        // 3rd order monomial: a * x^3 = 0.\n        return [0.0, 0.0, 0.0];\n      }\n\n      // a * x^3 + d = 0\n      ratio = -d / a;\n      var root =\n        ratio < 0.0 ? -Math.pow(-ratio, 1.0 / 3.0) : Math.pow(ratio, 1.0 / 3.0);\n      return [root, root, root];\n    } else if (d === 0.0) {\n      // x * (a * x^2 + c) = 0.\n      roots = _QuadraticRealPolynomial_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].computeRealRoots */ .Z.computeRealRoots(a, 0, c);\n\n      // Return the roots in ascending order.\n      if (roots.Length === 0) {\n        return [0.0];\n      }\n      return [roots[0], 0.0, roots[1]];\n    }\n\n    // Deflated cubic polynomial: a * x^3 + c * x + d= 0.\n    return computeRealRoots(a, 0, c, d);\n  } else if (c === 0.0) {\n    if (d === 0.0) {\n      // x^2 * (a * x + b) = 0.\n      ratio = -b / a;\n      if (ratio < 0.0) {\n        return [ratio, 0.0, 0.0];\n      }\n      return [0.0, 0.0, ratio];\n    }\n    // a * x^3 + b * x^2 + d = 0.\n    return computeRealRoots(a, b, 0, d);\n  } else if (d === 0.0) {\n    // x * (a * x^2 + b * x + c) = 0\n    roots = _QuadraticRealPolynomial_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].computeRealRoots */ .Z.computeRealRoots(a, b, c);\n\n    // Return the roots in ascending order.\n    if (roots.length === 0) {\n      return [0.0];\n    } else if (roots[1] <= 0.0) {\n      return [roots[0], roots[1], 0.0];\n    } else if (roots[0] >= 0.0) {\n      return [0.0, roots[0], roots[1]];\n    }\n    return [roots[0], 0.0, roots[1]];\n  }\n\n  return computeRealRoots(a, b, c, d);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CubicRealPolynomial);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13752\n')},17711:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63367);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Intersect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84935);\n/* harmony import */ var _Plane_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7749);\n\n\n\n\n\n\n\n\n/**\n * The culling volume defined by planes.\n *\n * @alias CullingVolume\n * @constructor\n *\n * @param {Cartesian4[]} [planes] An array of clipping planes.\n */\nfunction CullingVolume(planes) {\n  /**\n   * Each plane is represented by a Cartesian4 object, where the x, y, and z components\n   * define the unit vector normal to the plane, and the w component is the distance of the\n   * plane from the origin.\n   * @type {Cartesian4[]}\n   * @default []\n   */\n  this.planes = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(planes, []);\n}\n\nvar faces = [new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(), new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(), new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z()];\n_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_X */ .Z.UNIT_X, faces[0]);\n_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_Y */ .Z.UNIT_Y, faces[1]);\n_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_Z */ .Z.UNIT_Z, faces[2]);\n\nvar scratchPlaneCenter = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchPlaneNormal = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchPlane = new _Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(1.0, 0.0, 0.0), 0.0);\n\n/**\n * Constructs a culling volume from a bounding sphere. Creates six planes that create a box containing the sphere.\n * The planes are aligned to the x, y, and z axes in world coordinates.\n *\n * @param {BoundingSphere} boundingSphere The bounding sphere used to create the culling volume.\n * @param {CullingVolume} [result] The object onto which to store the result.\n * @returns {CullingVolume} The culling volume created from the bounding sphere.\n */\nCullingVolume.fromBoundingSphere = function (boundingSphere, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(boundingSphere)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("boundingSphere is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(result)) {\n    result = new CullingVolume();\n  }\n\n  var length = faces.length;\n  var planes = result.planes;\n  planes.length = 2 * length;\n\n  var center = boundingSphere.center;\n  var radius = boundingSphere.radius;\n\n  var planeIndex = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var faceNormal = faces[i];\n\n    var plane0 = planes[planeIndex];\n    var plane1 = planes[planeIndex + 1];\n\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(plane0)) {\n      plane0 = planes[planeIndex] = new _Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n    }\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(plane1)) {\n      plane1 = planes[planeIndex + 1] = new _Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n    }\n\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(faceNormal, -radius, scratchPlaneCenter);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(center, scratchPlaneCenter, scratchPlaneCenter);\n\n    plane0.x = faceNormal.x;\n    plane0.y = faceNormal.y;\n    plane0.z = faceNormal.z;\n    plane0.w = -_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(faceNormal, scratchPlaneCenter);\n\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(faceNormal, radius, scratchPlaneCenter);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(center, scratchPlaneCenter, scratchPlaneCenter);\n\n    plane1.x = -faceNormal.x;\n    plane1.y = -faceNormal.y;\n    plane1.z = -faceNormal.z;\n    plane1.w = -_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(faceNormal, scratchPlaneNormal),\n      scratchPlaneCenter\n    );\n\n    planeIndex += 2;\n  }\n\n  return result;\n};\n\n/**\n * Determines whether a bounding volume intersects the culling volume.\n *\n * @param {Object} boundingVolume The bounding volume whose intersection with the culling volume is to be tested.\n * @returns {Intersect}  Intersect.OUTSIDE, Intersect.INTERSECTING, or Intersect.INSIDE.\n */\nCullingVolume.prototype.computeVisibility = function (boundingVolume) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(boundingVolume)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("boundingVolume is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var planes = this.planes;\n  var intersecting = false;\n  for (var k = 0, len = planes.length; k < len; ++k) {\n    var result = boundingVolume.intersectPlane(\n      _Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromCartesian4 */ .Z.fromCartesian4(planes[k], scratchPlane)\n    );\n    if (result === _Intersect_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].OUTSIDE */ .Z.OUTSIDE) {\n      return _Intersect_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].OUTSIDE */ .Z.OUTSIDE;\n    } else if (result === _Intersect_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].INTERSECTING */ .Z.INTERSECTING) {\n      intersecting = true;\n    }\n  }\n\n  return intersecting ? _Intersect_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].INTERSECTING */ .Z.INTERSECTING : _Intersect_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].INSIDE */ .Z.INSIDE;\n};\n\n/**\n * Determines whether a bounding volume intersects the culling volume.\n *\n * @param {Object} boundingVolume The bounding volume whose intersection with the culling volume is to be tested.\n * @param {Number} parentPlaneMask A bit mask from the boundingVolume\'s parent\'s check against the same culling\n *                                 volume, such that if (planeMask & (1 << planeIndex) === 0), for k < 31, then\n *                                 the parent (and therefore this) volume is completely inside plane[planeIndex]\n *                                 and that plane check can be skipped.\n * @returns {Number} A plane mask as described above (which can be applied to this boundingVolume\'s children).\n *\n * @private\n */\nCullingVolume.prototype.computeVisibilityWithPlaneMask = function (\n  boundingVolume,\n  parentPlaneMask\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(boundingVolume)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("boundingVolume is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(parentPlaneMask)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("parentPlaneMask is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (\n    parentPlaneMask === CullingVolume.MASK_OUTSIDE ||\n    parentPlaneMask === CullingVolume.MASK_INSIDE\n  ) {\n    // parent is completely outside or completely inside, so this child is as well.\n    return parentPlaneMask;\n  }\n\n  // Start with MASK_INSIDE (all zeros) so that after the loop, the return value can be compared with MASK_INSIDE.\n  // (Because if there are fewer than 31 planes, the upper bits wont be changed.)\n  var mask = CullingVolume.MASK_INSIDE;\n\n  var planes = this.planes;\n  for (var k = 0, len = planes.length; k < len; ++k) {\n    // For k greater than 31 (since 31 is the maximum number of INSIDE/INTERSECTING bits we can store), skip the optimization.\n    var flag = k < 31 ? 1 << k : 0;\n    if (k < 31 && (parentPlaneMask & flag) === 0) {\n      // boundingVolume is known to be INSIDE this plane.\n      continue;\n    }\n\n    var result = boundingVolume.intersectPlane(\n      _Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromCartesian4 */ .Z.fromCartesian4(planes[k], scratchPlane)\n    );\n    if (result === _Intersect_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].OUTSIDE */ .Z.OUTSIDE) {\n      return CullingVolume.MASK_OUTSIDE;\n    } else if (result === _Intersect_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].INTERSECTING */ .Z.INTERSECTING) {\n      mask |= flag;\n    }\n  }\n\n  return mask;\n};\n\n/**\n * For plane masks (as used in {@link CullingVolume#computeVisibilityWithPlaneMask}), this special value\n * represents the case where the object bounding volume is entirely outside the culling volume.\n *\n * @type {Number}\n * @private\n */\nCullingVolume.MASK_OUTSIDE = 0xffffffff;\n\n/**\n * For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n * represents the case where the object bounding volume is entirely inside the culling volume.\n *\n * @type {Number}\n * @private\n */\nCullingVolume.MASK_INSIDE = 0x00000000;\n\n/**\n * For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n * represents the case where the object bounding volume (may) intersect all planes of the culling volume.\n *\n * @type {Number}\n * @private\n */\nCullingVolume.MASK_INDETERMINATE = 0x7fffffff;\n/* harmony default export */ __webpack_exports__["Z"] = (CullingVolume);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17711\n')},80074:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13222);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _Credit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52975);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50491);\n/* harmony import */ var _Event_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(14459);\n/* harmony import */ var _GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(71351);\n/* harmony import */ var _HeightmapTerrainData_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(57134);\n/* harmony import */ var _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(1497);\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @callback CustomHeightmapTerrainProvider.GeometryCallback\n * @param {Number} x The X coordinate of the tile for which to request geometry.\n * @param {Number} y The Y coordinate of the tile for which to request geometry.\n * @param {Number} level The level of the tile for which to request geometry.\n * @returns {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array|Number[]|Promise.<Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array|Number[]>|undefined} An array or a promise to an array of heights in row-major order. If undefined, the globe will render the parent tile.\n */\n\n/**\n * A simple {@link TerrainProvider} that gets height values from a callback function.\n * It can be used for procedurally generated terrain or as a way to load custom\n * heightmap data without creating a subclass of {@link TerrainProvider}.\n *\n * There are some limitations such as no water mask, no vertex normals, and no\n * availability, so a full-fledged {@link TerrainProvider} subclass is better suited\n * for these more sophisticated use cases.\n *\n * @alias CustomHeightmapTerrainProvider\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {CustomHeightmapTerrainProvider.GeometryCallback} options.callback The callback function for requesting tile geometry.\n * @param {Number} options.width The number of columns per heightmap tile.\n * @param {Number} options.height The number of rows per heightmap tile.\n * @param {TilingScheme} [options.tilingScheme] The tiling scheme specifying how the ellipsoidal\n * surface is broken into tiles. If this parameter is not provided, a {@link GeographicTilingScheme}\n * is used.\n * @param {Ellipsoid} [options.ellipsoid] The ellipsoid.  If the tilingScheme is specified,\n * this parameter is ignored and the tiling scheme\'s ellipsoid is used instead. If neither\n * parameter is specified, the WGS84 ellipsoid is used.\n * @param {Credit|String} [options.credit] A credit for the data source, which is displayed on the canvas.\n *\n * @example\n * var viewer = new Cesium.Viewer("cesiumContainer", {\n *   terrainProvider: new Cesium.CustomHeightmapTerrainProvider({\n *     width: 32,\n *     height: 32,\n *     callback: function (x, y, level) {\n *       return new Float32Array(32 * 32); // all zeros\n *     },\n *   }),\n * });\n *\n * @see TerrainProvider\n */\nfunction CustomHeightmapTerrainProvider(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defined */ .Z.defined("options.callback", options.callback);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defined */ .Z.defined("options.width", options.width);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defined */ .Z.defined("options.height", options.height);\n  //>>includeEnd(\'debug\');\n\n  this._callback = options.callback;\n\n  this._tilingScheme = options.tilingScheme;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._tilingScheme)) {\n    this._tilingScheme = new _GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n      ellipsoid: (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WGS84 */ .Z.WGS84),\n    });\n  }\n\n  this._width = options.width;\n  this._height = options.height;\n  var maxTileDimensions = Math.max(this._width, this._height);\n\n  this._levelZeroMaximumGeometricError = _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].getEstimatedLevelZeroGeometricErrorForAHeightmap */ .Z.getEstimatedLevelZeroGeometricErrorForAHeightmap(\n    this._tilingScheme.ellipsoid,\n    maxTileDimensions,\n    this._tilingScheme.getNumberOfXTilesAtLevel(0)\n  );\n\n  this._errorEvent = new _Event_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n\n  var credit = options.credit;\n  if (typeof credit === "string") {\n    credit = new _Credit_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(credit);\n  }\n  this._credit = credit;\n\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].resolve */ .Z.resolve(true);\n}\n\nObject.defineProperties(CustomHeightmapTerrainProvider.prototype, {\n  /**\n   * Gets an event that is raised when the terrain provider encounters an asynchronous error. By subscribing\n   * to the event, you will be notified of the error and can potentially recover from it. Event listeners\n   * are passed an instance of {@link TileProviderError}.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {Event}\n   * @readonly\n   */\n  errorEvent: {\n    get: function () {\n      return this._errorEvent;\n    },\n  },\n\n  /**\n   * Gets the credit to display when this terrain provider is active. Typically this is used to credit\n   * the source of the terrain.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {Credit}\n   * @readonly\n   */\n  credit: {\n    get: function () {\n      return this._credit;\n    },\n  },\n\n  /**\n   * Gets the tiling scheme used by this provider.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {TilingScheme}\n   * @readonly\n   */\n  tilingScheme: {\n    get: function () {\n      return this._tilingScheme;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the provider is ready for use.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return true;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves to true when the provider is ready for use.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {Promise.<Boolean>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the provider includes a water mask. The water mask\n   * indicates which areas of the globe are water rather than land, so they can be rendered\n   * as a reflective surface with animated waves.\n   * Water mask is not supported by {@link CustomHeightmapTerrainProvider}, so the return\n   * value will always be false.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  hasWaterMask: {\n    get: function () {\n      return false;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the requested tiles include vertex normals.\n   * Vertex normals are not supported by {@link CustomHeightmapTerrainProvider}, so the return\n   * value will always be false.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  hasVertexNormals: {\n    get: function () {\n      return false;\n    },\n  },\n\n  /**\n   * Gets the number of columns per heightmap tile.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  width: {\n    get: function () {\n      return this._width;\n    },\n  },\n\n  /**\n   * Gets the number of rows per heightmap tile.\n   * @memberof CustomHeightmapTerrainProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  height: {\n    get: function () {\n      return this._height;\n    },\n  },\n});\n\n/**\n * Requests the geometry for a given tile. The result includes terrain\n * data and indicates that all child tiles are available.\n *\n * @param {Number} x The X coordinate of the tile for which to request geometry.\n * @param {Number} y The Y coordinate of the tile for which to request geometry.\n * @param {Number} level The level of the tile for which to request geometry.\n * @param {Request} [request] The request object. Intended for internal use only.\n *\n * @returns {Promise.<TerrainData>|undefined} A promise for the requested geometry. If this method\n *          returns undefined instead of a promise, it is an indication that too many requests are already\n *          pending and the request will be retried later.\n */\nCustomHeightmapTerrainProvider.prototype.requestTileGeometry = function (\n  x,\n  y,\n  level,\n  request\n) {\n  var promise = this._callback(x, y, level);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(promise)) {\n    return undefined;\n  }\n\n  var width = this._width;\n  var height = this._height;\n\n  return (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(promise).then(function (heightmapData) {\n    var buffer = heightmapData;\n    if (Array.isArray(buffer)) {\n      // HeightmapTerrainData expects a TypedArray, so convert from Number[] to Float64Array\n      buffer = new Float64Array(buffer);\n    }\n\n    return new _HeightmapTerrainData_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n      buffer: buffer,\n      width: width,\n      height: height,\n    });\n  });\n};\n\n/**\n * Gets the maximum geometric error allowed in a tile at a given level.\n *\n * @param {Number} level The tile level for which to get the maximum geometric error.\n * @returns {Number} The maximum geometric error.\n */\nCustomHeightmapTerrainProvider.prototype.getLevelMaximumGeometricError = function (\n  level\n) {\n  return this._levelZeroMaximumGeometricError / (1 << level);\n};\n\n/**\n * Determines whether data for a tile is available to be loaded.\n *\n * @param {Number} x The X coordinate of the tile for which to request geometry.\n * @param {Number} y The Y coordinate of the tile for which to request geometry.\n * @param {Number} level The level of the tile for which to request geometry.\n * @returns {Boolean|undefined} Undefined if not supported, otherwise true or false.\n */\nCustomHeightmapTerrainProvider.prototype.getTileDataAvailable = function (\n  x,\n  y,\n  level\n) {\n  return undefined;\n};\n\n/**\n * Makes sure we load availability data for a tile\n *\n * @param {Number} x The X coordinate of the tile for which to request geometry.\n * @param {Number} y The Y coordinate of the tile for which to request geometry.\n * @param {Number} level The level of the tile for which to request geometry.\n * @returns {undefined|Promise<void>} Undefined if nothing need to be loaded or a Promise that resolves when all required tiles are loaded\n */\nCustomHeightmapTerrainProvider.prototype.loadTileDataAvailability = function (\n  x,\n  y,\n  level\n) {\n  return undefined;\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (CustomHeightmapTerrainProvider)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///80074\n')},81708:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23401);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60216);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84828);\n/* harmony import */ var _CylinderGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89540);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(12572);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(87379);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(99417);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(97264);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(67252);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar radiusScratch = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar normalScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar bitangentScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar tangentScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar positionScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\n/**\n * A description of a cylinder.\n *\n * @alias CylinderGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Number} options.length The length of the cylinder.\n * @param {Number} options.topRadius The radius of the top of the cylinder.\n * @param {Number} options.bottomRadius The radius of the bottom of the cylinder.\n * @param {Number} [options.slices=128] The number of edges around the perimeter of the cylinder.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n *\n * @exception {DeveloperError} options.slices must be greater than or equal to 3.\n *\n * @see CylinderGeometry.createGeometry\n *\n * @example\n * // create cylinder geometry\n * var cylinder = new Cesium.CylinderGeometry({\n *     length: 200000,\n *     topRadius: 80000,\n *     bottomRadius: 200000,\n * });\n * var geometry = Cesium.CylinderGeometry.createGeometry(cylinder);\n */\nfunction CylinderGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var length = options.length;\n  var topRadius = options.topRadius;\n  var bottomRadius = options.bottomRadius;\n  var vertexFormat = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.vertexFormat, _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].DEFAULT */ .Z.DEFAULT);\n  var slices = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.slices, 128);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(length)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("options.length must be defined.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(topRadius)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("options.topRadius must be defined.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(bottomRadius)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("options.bottomRadius must be defined.");\n  }\n  if (slices < 3) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(\n      "options.slices must be greater than or equal to 3."\n    );\n  }\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(options.offsetAttribute) &&\n    options.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].TOP */ .Z.TOP\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(\n      "GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this._length = length;\n  this._topRadius = topRadius;\n  this._bottomRadius = bottomRadius;\n  this._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].clone */ .Z.clone(vertexFormat);\n  this._slices = slices;\n  this._offsetAttribute = options.offsetAttribute;\n  this._workerName = "createCylinderGeometry";\n}\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nCylinderGeometry.packedLength = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].packedLength */ .Z.packedLength + 5;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {CylinderGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nCylinderGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(value)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("value is required");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(startingIndex, 0);\n\n  _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].pack */ .Z.pack(value._vertexFormat, array, startingIndex);\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._length;\n  array[startingIndex++] = value._topRadius;\n  array[startingIndex++] = value._bottomRadius;\n  array[startingIndex++] = value._slices;\n  array[startingIndex] = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(value._offsetAttribute, -1);\n\n  return array;\n};\n\nvar scratchVertexFormat = new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z();\nvar scratchOptions = {\n  vertexFormat: scratchVertexFormat,\n  length: undefined,\n  topRadius: undefined,\n  bottomRadius: undefined,\n  slices: undefined,\n  offsetAttribute: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {CylinderGeometry} [result] The object into which to store the result.\n * @returns {CylinderGeometry} The modified result parameter or a new CylinderGeometry instance if one was not provided.\n */\nCylinderGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchVertexFormat\n  );\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].packedLength */ .Z.packedLength;\n\n  var length = array[startingIndex++];\n  var topRadius = array[startingIndex++];\n  var bottomRadius = array[startingIndex++];\n  var slices = array[startingIndex++];\n  var offsetAttribute = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(result)) {\n    scratchOptions.length = length;\n    scratchOptions.topRadius = topRadius;\n    scratchOptions.bottomRadius = bottomRadius;\n    scratchOptions.slices = slices;\n    scratchOptions.offsetAttribute =\n      offsetAttribute === -1 ? undefined : offsetAttribute;\n    return new CylinderGeometry(scratchOptions);\n  }\n\n  result._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].clone */ .Z.clone(vertexFormat, result._vertexFormat);\n  result._length = length;\n  result._topRadius = topRadius;\n  result._bottomRadius = bottomRadius;\n  result._slices = slices;\n  result._offsetAttribute =\n    offsetAttribute === -1 ? undefined : offsetAttribute;\n\n  return result;\n};\n\n/**\n * Computes the geometric representation of a cylinder, including its vertices, indices, and a bounding sphere.\n *\n * @param {CylinderGeometry} cylinderGeometry A description of the cylinder.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nCylinderGeometry.createGeometry = function (cylinderGeometry) {\n  var length = cylinderGeometry._length;\n  var topRadius = cylinderGeometry._topRadius;\n  var bottomRadius = cylinderGeometry._bottomRadius;\n  var vertexFormat = cylinderGeometry._vertexFormat;\n  var slices = cylinderGeometry._slices;\n\n  if (\n    length <= 0 ||\n    topRadius < 0 ||\n    bottomRadius < 0 ||\n    (topRadius === 0 && bottomRadius === 0)\n  ) {\n    return;\n  }\n\n  var twoSlices = slices + slices;\n  var threeSlices = slices + twoSlices;\n  var numVertices = twoSlices + twoSlices;\n\n  var positions = _CylinderGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].computePositions */ .Z.computePositions(\n    length,\n    topRadius,\n    bottomRadius,\n    slices,\n    true\n  );\n\n  var st = vertexFormat.st ? new Float32Array(numVertices * 2) : undefined;\n  var normals = vertexFormat.normal\n    ? new Float32Array(numVertices * 3)\n    : undefined;\n  var tangents = vertexFormat.tangent\n    ? new Float32Array(numVertices * 3)\n    : undefined;\n  var bitangents = vertexFormat.bitangent\n    ? new Float32Array(numVertices * 3)\n    : undefined;\n\n  var i;\n  var computeNormal =\n    vertexFormat.normal || vertexFormat.tangent || vertexFormat.bitangent;\n\n  if (computeNormal) {\n    var computeTangent = vertexFormat.tangent || vertexFormat.bitangent;\n\n    var normalIndex = 0;\n    var tangentIndex = 0;\n    var bitangentIndex = 0;\n\n    var theta = Math.atan2(bottomRadius - topRadius, length);\n    var normal = normalScratch;\n    normal.z = Math.sin(theta);\n    var normalScale = Math.cos(theta);\n    var tangent = tangentScratch;\n    var bitangent = bitangentScratch;\n\n    for (i = 0; i < slices; i++) {\n      var angle = (i / slices) * _Math_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TWO_PI */ .Z.TWO_PI;\n      var x = normalScale * Math.cos(angle);\n      var y = normalScale * Math.sin(angle);\n      if (computeNormal) {\n        normal.x = x;\n        normal.y = y;\n\n        if (computeTangent) {\n          tangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].cross */ .Z.cross(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].UNIT_Z */ .Z.UNIT_Z, normal, tangent),\n            tangent\n          );\n        }\n\n        if (vertexFormat.normal) {\n          normals[normalIndex++] = normal.x;\n          normals[normalIndex++] = normal.y;\n          normals[normalIndex++] = normal.z;\n          normals[normalIndex++] = normal.x;\n          normals[normalIndex++] = normal.y;\n          normals[normalIndex++] = normal.z;\n        }\n\n        if (vertexFormat.tangent) {\n          tangents[tangentIndex++] = tangent.x;\n          tangents[tangentIndex++] = tangent.y;\n          tangents[tangentIndex++] = tangent.z;\n          tangents[tangentIndex++] = tangent.x;\n          tangents[tangentIndex++] = tangent.y;\n          tangents[tangentIndex++] = tangent.z;\n        }\n\n        if (vertexFormat.bitangent) {\n          bitangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].cross */ .Z.cross(normal, tangent, bitangent),\n            bitangent\n          );\n          bitangents[bitangentIndex++] = bitangent.x;\n          bitangents[bitangentIndex++] = bitangent.y;\n          bitangents[bitangentIndex++] = bitangent.z;\n          bitangents[bitangentIndex++] = bitangent.x;\n          bitangents[bitangentIndex++] = bitangent.y;\n          bitangents[bitangentIndex++] = bitangent.z;\n        }\n      }\n    }\n\n    for (i = 0; i < slices; i++) {\n      if (vertexFormat.normal) {\n        normals[normalIndex++] = 0;\n        normals[normalIndex++] = 0;\n        normals[normalIndex++] = -1;\n      }\n      if (vertexFormat.tangent) {\n        tangents[tangentIndex++] = 1;\n        tangents[tangentIndex++] = 0;\n        tangents[tangentIndex++] = 0;\n      }\n      if (vertexFormat.bitangent) {\n        bitangents[bitangentIndex++] = 0;\n        bitangents[bitangentIndex++] = -1;\n        bitangents[bitangentIndex++] = 0;\n      }\n    }\n\n    for (i = 0; i < slices; i++) {\n      if (vertexFormat.normal) {\n        normals[normalIndex++] = 0;\n        normals[normalIndex++] = 0;\n        normals[normalIndex++] = 1;\n      }\n      if (vertexFormat.tangent) {\n        tangents[tangentIndex++] = 1;\n        tangents[tangentIndex++] = 0;\n        tangents[tangentIndex++] = 0;\n      }\n      if (vertexFormat.bitangent) {\n        bitangents[bitangentIndex++] = 0;\n        bitangents[bitangentIndex++] = 1;\n        bitangents[bitangentIndex++] = 0;\n      }\n    }\n  }\n\n  var numIndices = 12 * slices - 12;\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createTypedArray */ .Z.createTypedArray(numVertices, numIndices);\n  var index = 0;\n  var j = 0;\n  for (i = 0; i < slices - 1; i++) {\n    indices[index++] = j;\n    indices[index++] = j + 2;\n    indices[index++] = j + 3;\n\n    indices[index++] = j;\n    indices[index++] = j + 3;\n    indices[index++] = j + 1;\n\n    j += 2;\n  }\n\n  indices[index++] = twoSlices - 2;\n  indices[index++] = 0;\n  indices[index++] = 1;\n  indices[index++] = twoSlices - 2;\n  indices[index++] = 1;\n  indices[index++] = twoSlices - 1;\n\n  for (i = 1; i < slices - 1; i++) {\n    indices[index++] = twoSlices + i + 1;\n    indices[index++] = twoSlices + i;\n    indices[index++] = twoSlices;\n  }\n\n  for (i = 1; i < slices - 1; i++) {\n    indices[index++] = threeSlices;\n    indices[index++] = threeSlices + i;\n    indices[index++] = threeSlices + i + 1;\n  }\n\n  var textureCoordIndex = 0;\n  if (vertexFormat.st) {\n    var rad = Math.max(topRadius, bottomRadius);\n    for (i = 0; i < numVertices; i++) {\n      var position = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(positions, i * 3, positionScratch);\n      st[textureCoordIndex++] = (position.x + rad) / (2.0 * rad);\n      st[textureCoordIndex++] = (position.y + rad) / (2.0 * rad);\n    }\n  }\n\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n  if (vertexFormat.position) {\n    attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DOUBLE */ .Z.DOUBLE,\n      componentsPerAttribute: 3,\n      values: positions,\n    });\n  }\n\n  if (vertexFormat.normal) {\n    attributes.normal = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: normals,\n    });\n  }\n\n  if (vertexFormat.tangent) {\n    attributes.tangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: tangents,\n    });\n  }\n\n  if (vertexFormat.bitangent) {\n    attributes.bitangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: bitangents,\n    });\n  }\n\n  if (vertexFormat.st) {\n    attributes.st = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 2,\n      values: st,\n    });\n  }\n\n  radiusScratch.x = length * 0.5;\n  radiusScratch.y = Math.max(bottomRadius, topRadius);\n\n  var boundingSphere = new _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].ZERO */ .Z.ZERO,\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitude */ .Z.magnitude(radiusScratch)\n  );\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(cylinderGeometry._offsetAttribute)) {\n    length = positions.length;\n    var applyOffset = new Uint8Array(length / 3);\n    var offsetValue =\n      cylinderGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].NONE */ .Z.NONE\n        ? 0\n        : 1;\n    (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, offsetValue);\n    attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 1,\n      values: applyOffset,\n    });\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n    boundingSphere: boundingSphere,\n    offsetAttribute: cylinderGeometry._offsetAttribute,\n  });\n};\n\nvar unitCylinderGeometry;\n\n/**\n * Returns the geometric representation of a unit cylinder, including its vertices, indices, and a bounding sphere.\n * @returns {Geometry} The computed vertices and indices.\n *\n * @private\n */\nCylinderGeometry.getUnitCylinder = function () {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(unitCylinderGeometry)) {\n    unitCylinderGeometry = CylinderGeometry.createGeometry(\n      new CylinderGeometry({\n        topRadius: 1.0,\n        bottomRadius: 1.0,\n        length: 1.0,\n        vertexFormat: _VertexFormat_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].POSITION_ONLY */ .Z.POSITION_ONLY,\n      })\n    );\n  }\n  return unitCylinderGeometry;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CylinderGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9DeWxpbmRlckdlb21ldHJ5LmpzPzFiYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5RmlsbCBmcm9tIFwiLi9hcnJheUZpbGwuanNcIjtcbmltcG9ydCBCb3VuZGluZ1NwaGVyZSBmcm9tIFwiLi9Cb3VuZGluZ1NwaGVyZS5qc1wiO1xuaW1wb3J0IENhcnRlc2lhbjIgZnJvbSBcIi4vQ2FydGVzaWFuMi5qc1wiO1xuaW1wb3J0IENhcnRlc2lhbjMgZnJvbSBcIi4vQ2FydGVzaWFuMy5qc1wiO1xuaW1wb3J0IENvbXBvbmVudERhdGF0eXBlIGZyb20gXCIuL0NvbXBvbmVudERhdGF0eXBlLmpzXCI7XG5pbXBvcnQgQ3lsaW5kZXJHZW9tZXRyeUxpYnJhcnkgZnJvbSBcIi4vQ3lsaW5kZXJHZW9tZXRyeUxpYnJhcnkuanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4vZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4vRGV2ZWxvcGVyRXJyb3IuanNcIjtcbmltcG9ydCBHZW9tZXRyeSBmcm9tIFwiLi9HZW9tZXRyeS5qc1wiO1xuaW1wb3J0IEdlb21ldHJ5QXR0cmlidXRlIGZyb20gXCIuL0dlb21ldHJ5QXR0cmlidXRlLmpzXCI7XG5pbXBvcnQgR2VvbWV0cnlBdHRyaWJ1dGVzIGZyb20gXCIuL0dlb21ldHJ5QXR0cmlidXRlcy5qc1wiO1xuaW1wb3J0IEdlb21ldHJ5T2Zmc2V0QXR0cmlidXRlIGZyb20gXCIuL0dlb21ldHJ5T2Zmc2V0QXR0cmlidXRlLmpzXCI7XG5pbXBvcnQgSW5kZXhEYXRhdHlwZSBmcm9tIFwiLi9JbmRleERhdGF0eXBlLmpzXCI7XG5pbXBvcnQgQ2VzaXVtTWF0aCBmcm9tIFwiLi9NYXRoLmpzXCI7XG5pbXBvcnQgUHJpbWl0aXZlVHlwZSBmcm9tIFwiLi9QcmltaXRpdmVUeXBlLmpzXCI7XG5pbXBvcnQgVmVydGV4Rm9ybWF0IGZyb20gXCIuL1ZlcnRleEZvcm1hdC5qc1wiO1xuXG52YXIgcmFkaXVzU2NyYXRjaCA9IG5ldyBDYXJ0ZXNpYW4yKCk7XG52YXIgbm9ybWFsU2NyYXRjaCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG52YXIgYml0YW5nZW50U2NyYXRjaCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG52YXIgdGFuZ2VudFNjcmF0Y2ggPSBuZXcgQ2FydGVzaWFuMygpO1xudmFyIHBvc2l0aW9uU2NyYXRjaCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG5cbi8qKlxuICogQSBkZXNjcmlwdGlvbiBvZiBhIGN5bGluZGVyLlxuICpcbiAqIEBhbGlhcyBDeWxpbmRlckdlb21ldHJ5XG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBPYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5sZW5ndGggVGhlIGxlbmd0aCBvZiB0aGUgY3lsaW5kZXIuXG4gKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy50b3BSYWRpdXMgVGhlIHJhZGl1cyBvZiB0aGUgdG9wIG9mIHRoZSBjeWxpbmRlci5cbiAqIEBwYXJhbSB7TnVtYmVyfSBvcHRpb25zLmJvdHRvbVJhZGl1cyBUaGUgcmFkaXVzIG9mIHRoZSBib3R0b20gb2YgdGhlIGN5bGluZGVyLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnNsaWNlcz0xMjhdIFRoZSBudW1iZXIgb2YgZWRnZXMgYXJvdW5kIHRoZSBwZXJpbWV0ZXIgb2YgdGhlIGN5bGluZGVyLlxuICogQHBhcmFtIHtWZXJ0ZXhGb3JtYXR9IFtvcHRpb25zLnZlcnRleEZvcm1hdD1WZXJ0ZXhGb3JtYXQuREVGQVVMVF0gVGhlIHZlcnRleCBhdHRyaWJ1dGVzIHRvIGJlIGNvbXB1dGVkLlxuICpcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBvcHRpb25zLnNsaWNlcyBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAzLlxuICpcbiAqIEBzZWUgQ3lsaW5kZXJHZW9tZXRyeS5jcmVhdGVHZW9tZXRyeVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBjcmVhdGUgY3lsaW5kZXIgZ2VvbWV0cnlcbiAqIHZhciBjeWxpbmRlciA9IG5ldyBDZXNpdW0uQ3lsaW5kZXJHZW9tZXRyeSh7XG4gKiAgICAgbGVuZ3RoOiAyMDAwMDAsXG4gKiAgICAgdG9wUmFkaXVzOiA4MDAwMCxcbiAqICAgICBib3R0b21SYWRpdXM6IDIwMDAwMCxcbiAqIH0pO1xuICogdmFyIGdlb21ldHJ5ID0gQ2VzaXVtLkN5bGluZGVyR2VvbWV0cnkuY3JlYXRlR2VvbWV0cnkoY3lsaW5kZXIpO1xuICovXG5mdW5jdGlvbiBDeWxpbmRlckdlb21ldHJ5KG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcblxuICB2YXIgbGVuZ3RoID0gb3B0aW9ucy5sZW5ndGg7XG4gIHZhciB0b3BSYWRpdXMgPSBvcHRpb25zLnRvcFJhZGl1cztcbiAgdmFyIGJvdHRvbVJhZGl1cyA9IG9wdGlvbnMuYm90dG9tUmFkaXVzO1xuICB2YXIgdmVydGV4Rm9ybWF0ID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMudmVydGV4Rm9ybWF0LCBWZXJ0ZXhGb3JtYXQuREVGQVVMVCk7XG4gIHZhciBzbGljZXMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5zbGljZXMsIDEyOCk7XG5cbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGxlbmd0aCkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJvcHRpb25zLmxlbmd0aCBtdXN0IGJlIGRlZmluZWQuXCIpO1xuICB9XG4gIGlmICghZGVmaW5lZCh0b3BSYWRpdXMpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwib3B0aW9ucy50b3BSYWRpdXMgbXVzdCBiZSBkZWZpbmVkLlwiKTtcbiAgfVxuICBpZiAoIWRlZmluZWQoYm90dG9tUmFkaXVzKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIm9wdGlvbnMuYm90dG9tUmFkaXVzIG11c3QgYmUgZGVmaW5lZC5cIik7XG4gIH1cbiAgaWYgKHNsaWNlcyA8IDMpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIm9wdGlvbnMuc2xpY2VzIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDMuXCJcbiAgICApO1xuICB9XG4gIGlmIChcbiAgICBkZWZpbmVkKG9wdGlvbnMub2Zmc2V0QXR0cmlidXRlKSAmJlxuICAgIG9wdGlvbnMub2Zmc2V0QXR0cmlidXRlID09PSBHZW9tZXRyeU9mZnNldEF0dHJpYnV0ZS5UT1BcbiAgKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFxuICAgICAgXCJHZW9tZXRyeU9mZnNldEF0dHJpYnV0ZS5UT1AgaXMgbm90IGEgc3VwcG9ydGVkIG9wdGlvbnMub2Zmc2V0QXR0cmlidXRlIGZvciB0aGlzIGdlb21ldHJ5LlwiXG4gICAgKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB0aGlzLl9sZW5ndGggPSBsZW5ndGg7XG4gIHRoaXMuX3RvcFJhZGl1cyA9IHRvcFJhZGl1cztcbiAgdGhpcy5fYm90dG9tUmFkaXVzID0gYm90dG9tUmFkaXVzO1xuICB0aGlzLl92ZXJ0ZXhGb3JtYXQgPSBWZXJ0ZXhGb3JtYXQuY2xvbmUodmVydGV4Rm9ybWF0KTtcbiAgdGhpcy5fc2xpY2VzID0gc2xpY2VzO1xuICB0aGlzLl9vZmZzZXRBdHRyaWJ1dGUgPSBvcHRpb25zLm9mZnNldEF0dHJpYnV0ZTtcbiAgdGhpcy5fd29ya2VyTmFtZSA9IFwiY3JlYXRlQ3lsaW5kZXJHZW9tZXRyeVwiO1xufVxuXG4vKipcbiAqIFRoZSBudW1iZXIgb2YgZWxlbWVudHMgdXNlZCB0byBwYWNrIHRoZSBvYmplY3QgaW50byBhbiBhcnJheS5cbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKi9cbkN5bGluZGVyR2VvbWV0cnkucGFja2VkTGVuZ3RoID0gVmVydGV4Rm9ybWF0LnBhY2tlZExlbmd0aCArIDU7XG5cbi8qKlxuICogU3RvcmVzIHRoZSBwcm92aWRlZCBpbnN0YW5jZSBpbnRvIHRoZSBwcm92aWRlZCBhcnJheS5cbiAqXG4gKiBAcGFyYW0ge0N5bGluZGVyR2VvbWV0cnl9IHZhbHVlIFRoZSB2YWx1ZSB0byBwYWNrLlxuICogQHBhcmFtIHtOdW1iZXJbXX0gYXJyYXkgVGhlIGFycmF5IHRvIHBhY2sgaW50by5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbc3RhcnRpbmdJbmRleD0wXSBUaGUgaW5kZXggaW50byB0aGUgYXJyYXkgYXQgd2hpY2ggdG8gc3RhcnQgcGFja2luZyB0aGUgZWxlbWVudHMuXG4gKlxuICogQHJldHVybnMge051bWJlcltdfSBUaGUgYXJyYXkgdGhhdCB3YXMgcGFja2VkIGludG9cbiAqL1xuQ3lsaW5kZXJHZW9tZXRyeS5wYWNrID0gZnVuY3Rpb24gKHZhbHVlLCBhcnJheSwgc3RhcnRpbmdJbmRleCkge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIWRlZmluZWQodmFsdWUpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwidmFsdWUgaXMgcmVxdWlyZWRcIik7XG4gIH1cbiAgaWYgKCFkZWZpbmVkKGFycmF5KSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImFycmF5IGlzIHJlcXVpcmVkXCIpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHN0YXJ0aW5nSW5kZXggPSBkZWZhdWx0VmFsdWUoc3RhcnRpbmdJbmRleCwgMCk7XG5cbiAgVmVydGV4Rm9ybWF0LnBhY2sodmFsdWUuX3ZlcnRleEZvcm1hdCwgYXJyYXksIHN0YXJ0aW5nSW5kZXgpO1xuICBzdGFydGluZ0luZGV4ICs9IFZlcnRleEZvcm1hdC5wYWNrZWRMZW5ndGg7XG5cbiAgYXJyYXlbc3RhcnRpbmdJbmRleCsrXSA9IHZhbHVlLl9sZW5ndGg7XG4gIGFycmF5W3N0YXJ0aW5nSW5kZXgrK10gPSB2YWx1ZS5fdG9wUmFkaXVzO1xuICBhcnJheVtzdGFydGluZ0luZGV4KytdID0gdmFsdWUuX2JvdHRvbVJhZGl1cztcbiAgYXJyYXlbc3RhcnRpbmdJbmRleCsrXSA9IHZhbHVlLl9zbGljZXM7XG4gIGFycmF5W3N0YXJ0aW5nSW5kZXhdID0gZGVmYXVsdFZhbHVlKHZhbHVlLl9vZmZzZXRBdHRyaWJ1dGUsIC0xKTtcblxuICByZXR1cm4gYXJyYXk7XG59O1xuXG52YXIgc2NyYXRjaFZlcnRleEZvcm1hdCA9IG5ldyBWZXJ0ZXhGb3JtYXQoKTtcbnZhciBzY3JhdGNoT3B0aW9ucyA9IHtcbiAgdmVydGV4Rm9ybWF0OiBzY3JhdGNoVmVydGV4Rm9ybWF0LFxuICBsZW5ndGg6IHVuZGVmaW5lZCxcbiAgdG9wUmFkaXVzOiB1bmRlZmluZWQsXG4gIGJvdHRvbVJhZGl1czogdW5kZWZpbmVkLFxuICBzbGljZXM6IHVuZGVmaW5lZCxcbiAgb2Zmc2V0QXR0cmlidXRlOiB1bmRlZmluZWQsXG59O1xuXG4vKipcbiAqIFJldHJpZXZlcyBhbiBpbnN0YW5jZSBmcm9tIGEgcGFja2VkIGFycmF5LlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyW119IGFycmF5IFRoZSBwYWNrZWQgYXJyYXkuXG4gKiBAcGFyYW0ge051bWJlcn0gW3N0YXJ0aW5nSW5kZXg9MF0gVGhlIHN0YXJ0aW5nIGluZGV4IG9mIHRoZSBlbGVtZW50IHRvIGJlIHVucGFja2VkLlxuICogQHBhcmFtIHtDeWxpbmRlckdlb21ldHJ5fSBbcmVzdWx0XSBUaGUgb2JqZWN0IGludG8gd2hpY2ggdG8gc3RvcmUgdGhlIHJlc3VsdC5cbiAqIEByZXR1cm5zIHtDeWxpbmRlckdlb21ldHJ5fSBUaGUgbW9kaWZpZWQgcmVzdWx0IHBhcmFtZXRlciBvciBhIG5ldyBDeWxpbmRlckdlb21ldHJ5IGluc3RhbmNlIGlmIG9uZSB3YXMgbm90IHByb3ZpZGVkLlxuICovXG5DeWxpbmRlckdlb21ldHJ5LnVucGFjayA9IGZ1bmN0aW9uIChhcnJheSwgc3RhcnRpbmdJbmRleCwgcmVzdWx0KSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICghZGVmaW5lZChhcnJheSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJhcnJheSBpcyByZXF1aXJlZFwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICBzdGFydGluZ0luZGV4ID0gZGVmYXVsdFZhbHVlKHN0YXJ0aW5nSW5kZXgsIDApO1xuXG4gIHZhciB2ZXJ0ZXhGb3JtYXQgPSBWZXJ0ZXhGb3JtYXQudW5wYWNrKFxuICAgIGFycmF5LFxuICAgIHN0YXJ0aW5nSW5kZXgsXG4gICAgc2NyYXRjaFZlcnRleEZvcm1hdFxuICApO1xuICBzdGFydGluZ0luZGV4ICs9IFZlcnRleEZvcm1hdC5wYWNrZWRMZW5ndGg7XG5cbiAgdmFyIGxlbmd0aCA9IGFycmF5W3N0YXJ0aW5nSW5kZXgrK107XG4gIHZhciB0b3BSYWRpdXMgPSBhcnJheVtzdGFydGluZ0luZGV4KytdO1xuICB2YXIgYm90dG9tUmFkaXVzID0gYXJyYXlbc3RhcnRpbmdJbmRleCsrXTtcbiAgdmFyIHNsaWNlcyA9IGFycmF5W3N0YXJ0aW5nSW5kZXgrK107XG4gIHZhciBvZmZzZXRBdHRyaWJ1dGUgPSBhcnJheVtzdGFydGluZ0luZGV4XTtcblxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHNjcmF0Y2hPcHRpb25zLmxlbmd0aCA9IGxlbmd0aDtcbiAgICBzY3JhdGNoT3B0aW9ucy50b3BSYWRpdXMgPSB0b3BSYWRpdXM7XG4gICAgc2NyYXRjaE9wdGlvbnMuYm90dG9tUmFkaXVzID0gYm90dG9tUmFkaXVzO1xuICAgIHNjcmF0Y2hPcHRpb25zLnNsaWNlcyA9IHNsaWNlcztcbiAgICBzY3JhdGNoT3B0aW9ucy5vZmZzZXRBdHRyaWJ1dGUgPVxuICAgICAgb2Zmc2V0QXR0cmlidXRlID09PSAtMSA/IHVuZGVmaW5lZCA6IG9mZnNldEF0dHJpYnV0ZTtcbiAgICByZXR1cm4gbmV3IEN5bGluZGVyR2VvbWV0cnkoc2NyYXRjaE9wdGlvbnMpO1xuICB9XG5cbiAgcmVzdWx0Ll92ZXJ0ZXhGb3JtYXQgPSBWZXJ0ZXhGb3JtYXQuY2xvbmUodmVydGV4Rm9ybWF0LCByZXN1bHQuX3ZlcnRleEZvcm1hdCk7XG4gIHJlc3VsdC5fbGVuZ3RoID0gbGVuZ3RoO1xuICByZXN1bHQuX3RvcFJhZGl1cyA9IHRvcFJhZGl1cztcbiAgcmVzdWx0Ll9ib3R0b21SYWRpdXMgPSBib3R0b21SYWRpdXM7XG4gIHJlc3VsdC5fc2xpY2VzID0gc2xpY2VzO1xuICByZXN1bHQuX29mZnNldEF0dHJpYnV0ZSA9XG4gICAgb2Zmc2V0QXR0cmlidXRlID09PSAtMSA/IHVuZGVmaW5lZCA6IG9mZnNldEF0dHJpYnV0ZTtcblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgZ2VvbWV0cmljIHJlcHJlc2VudGF0aW9uIG9mIGEgY3lsaW5kZXIsIGluY2x1ZGluZyBpdHMgdmVydGljZXMsIGluZGljZXMsIGFuZCBhIGJvdW5kaW5nIHNwaGVyZS5cbiAqXG4gKiBAcGFyYW0ge0N5bGluZGVyR2VvbWV0cnl9IGN5bGluZGVyR2VvbWV0cnkgQSBkZXNjcmlwdGlvbiBvZiB0aGUgY3lsaW5kZXIuXG4gKiBAcmV0dXJucyB7R2VvbWV0cnl8dW5kZWZpbmVkfSBUaGUgY29tcHV0ZWQgdmVydGljZXMgYW5kIGluZGljZXMuXG4gKi9cbkN5bGluZGVyR2VvbWV0cnkuY3JlYXRlR2VvbWV0cnkgPSBmdW5jdGlvbiAoY3lsaW5kZXJHZW9tZXRyeSkge1xuICB2YXIgbGVuZ3RoID0gY3lsaW5kZXJHZW9tZXRyeS5fbGVuZ3RoO1xuICB2YXIgdG9wUmFkaXVzID0gY3lsaW5kZXJHZW9tZXRyeS5fdG9wUmFkaXVzO1xuICB2YXIgYm90dG9tUmFkaXVzID0gY3lsaW5kZXJHZW9tZXRyeS5fYm90dG9tUmFkaXVzO1xuICB2YXIgdmVydGV4Rm9ybWF0ID0gY3lsaW5kZXJHZW9tZXRyeS5fdmVydGV4Rm9ybWF0O1xuICB2YXIgc2xpY2VzID0gY3lsaW5kZXJHZW9tZXRyeS5fc2xpY2VzO1xuXG4gIGlmIChcbiAgICBsZW5ndGggPD0gMCB8fFxuICAgIHRvcFJhZGl1cyA8IDAgfHxcbiAgICBib3R0b21SYWRpdXMgPCAwIHx8XG4gICAgKHRvcFJhZGl1cyA9PT0gMCAmJiBib3R0b21SYWRpdXMgPT09IDApXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciB0d29TbGljZXMgPSBzbGljZXMgKyBzbGljZXM7XG4gIHZhciB0aHJlZVNsaWNlcyA9IHNsaWNlcyArIHR3b1NsaWNlcztcbiAgdmFyIG51bVZlcnRpY2VzID0gdHdvU2xpY2VzICsgdHdvU2xpY2VzO1xuXG4gIHZhciBwb3NpdGlvbnMgPSBDeWxpbmRlckdlb21ldHJ5TGlicmFyeS5jb21wdXRlUG9zaXRpb25zKFxuICAgIGxlbmd0aCxcbiAgICB0b3BSYWRpdXMsXG4gICAgYm90dG9tUmFkaXVzLFxuICAgIHNsaWNlcyxcbiAgICB0cnVlXG4gICk7XG5cbiAgdmFyIHN0ID0gdmVydGV4Rm9ybWF0LnN0ID8gbmV3IEZsb2F0MzJBcnJheShudW1WZXJ0aWNlcyAqIDIpIDogdW5kZWZpbmVkO1xuICB2YXIgbm9ybWFscyA9IHZlcnRleEZvcm1hdC5ub3JtYWxcbiAgICA/IG5ldyBGbG9hdDMyQXJyYXkobnVtVmVydGljZXMgKiAzKVxuICAgIDogdW5kZWZpbmVkO1xuICB2YXIgdGFuZ2VudHMgPSB2ZXJ0ZXhGb3JtYXQudGFuZ2VudFxuICAgID8gbmV3IEZsb2F0MzJBcnJheShudW1WZXJ0aWNlcyAqIDMpXG4gICAgOiB1bmRlZmluZWQ7XG4gIHZhciBiaXRhbmdlbnRzID0gdmVydGV4Rm9ybWF0LmJpdGFuZ2VudFxuICAgID8gbmV3IEZsb2F0MzJBcnJheShudW1WZXJ0aWNlcyAqIDMpXG4gICAgOiB1bmRlZmluZWQ7XG5cbiAgdmFyIGk7XG4gIHZhciBjb21wdXRlTm9ybWFsID1cbiAgICB2ZXJ0ZXhGb3JtYXQubm9ybWFsIHx8IHZlcnRleEZvcm1hdC50YW5nZW50IHx8IHZlcnRleEZvcm1hdC5iaXRhbmdlbnQ7XG5cbiAgaWYgKGNvbXB1dGVOb3JtYWwpIHtcbiAgICB2YXIgY29tcHV0ZVRhbmdlbnQgPSB2ZXJ0ZXhGb3JtYXQudGFuZ2VudCB8fCB2ZXJ0ZXhGb3JtYXQuYml0YW5nZW50O1xuXG4gICAgdmFyIG5vcm1hbEluZGV4ID0gMDtcbiAgICB2YXIgdGFuZ2VudEluZGV4ID0gMDtcbiAgICB2YXIgYml0YW5nZW50SW5kZXggPSAwO1xuXG4gICAgdmFyIHRoZXRhID0gTWF0aC5hdGFuMihib3R0b21SYWRpdXMgLSB0b3BSYWRpdXMsIGxlbmd0aCk7XG4gICAgdmFyIG5vcm1hbCA9IG5vcm1hbFNjcmF0Y2g7XG4gICAgbm9ybWFsLnogPSBNYXRoLnNpbih0aGV0YSk7XG4gICAgdmFyIG5vcm1hbFNjYWxlID0gTWF0aC5jb3ModGhldGEpO1xuICAgIHZhciB0YW5nZW50ID0gdGFuZ2VudFNjcmF0Y2g7XG4gICAgdmFyIGJpdGFuZ2VudCA9IGJpdGFuZ2VudFNjcmF0Y2g7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgc2xpY2VzOyBpKyspIHtcbiAgICAgIHZhciBhbmdsZSA9IChpIC8gc2xpY2VzKSAqIENlc2l1bU1hdGguVFdPX1BJO1xuICAgICAgdmFyIHggPSBub3JtYWxTY2FsZSAqIE1hdGguY29zKGFuZ2xlKTtcbiAgICAgIHZhciB5ID0gbm9ybWFsU2NhbGUgKiBNYXRoLnNpbihhbmdsZSk7XG4gICAgICBpZiAoY29tcHV0ZU5vcm1hbCkge1xuICAgICAgICBub3JtYWwueCA9IHg7XG4gICAgICAgIG5vcm1hbC55ID0geTtcblxuICAgICAgICBpZiAoY29tcHV0ZVRhbmdlbnQpIHtcbiAgICAgICAgICB0YW5nZW50ID0gQ2FydGVzaWFuMy5ub3JtYWxpemUoXG4gICAgICAgICAgICBDYXJ0ZXNpYW4zLmNyb3NzKENhcnRlc2lhbjMuVU5JVF9aLCBub3JtYWwsIHRhbmdlbnQpLFxuICAgICAgICAgICAgdGFuZ2VudFxuICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmVydGV4Rm9ybWF0Lm5vcm1hbCkge1xuICAgICAgICAgIG5vcm1hbHNbbm9ybWFsSW5kZXgrK10gPSBub3JtYWwueDtcbiAgICAgICAgICBub3JtYWxzW25vcm1hbEluZGV4KytdID0gbm9ybWFsLnk7XG4gICAgICAgICAgbm9ybWFsc1tub3JtYWxJbmRleCsrXSA9IG5vcm1hbC56O1xuICAgICAgICAgIG5vcm1hbHNbbm9ybWFsSW5kZXgrK10gPSBub3JtYWwueDtcbiAgICAgICAgICBub3JtYWxzW25vcm1hbEluZGV4KytdID0gbm9ybWFsLnk7XG4gICAgICAgICAgbm9ybWFsc1tub3JtYWxJbmRleCsrXSA9IG5vcm1hbC56O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZlcnRleEZvcm1hdC50YW5nZW50KSB7XG4gICAgICAgICAgdGFuZ2VudHNbdGFuZ2VudEluZGV4KytdID0gdGFuZ2VudC54O1xuICAgICAgICAgIHRhbmdlbnRzW3RhbmdlbnRJbmRleCsrXSA9IHRhbmdlbnQueTtcbiAgICAgICAgICB0YW5nZW50c1t0YW5nZW50SW5kZXgrK10gPSB0YW5nZW50Lno7XG4gICAgICAgICAgdGFuZ2VudHNbdGFuZ2VudEluZGV4KytdID0gdGFuZ2VudC54O1xuICAgICAgICAgIHRhbmdlbnRzW3RhbmdlbnRJbmRleCsrXSA9IHRhbmdlbnQueTtcbiAgICAgICAgICB0YW5nZW50c1t0YW5nZW50SW5kZXgrK10gPSB0YW5nZW50Lno7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmVydGV4Rm9ybWF0LmJpdGFuZ2VudCkge1xuICAgICAgICAgIGJpdGFuZ2VudCA9IENhcnRlc2lhbjMubm9ybWFsaXplKFxuICAgICAgICAgICAgQ2FydGVzaWFuMy5jcm9zcyhub3JtYWwsIHRhbmdlbnQsIGJpdGFuZ2VudCksXG4gICAgICAgICAgICBiaXRhbmdlbnRcbiAgICAgICAgICApO1xuICAgICAgICAgIGJpdGFuZ2VudHNbYml0YW5nZW50SW5kZXgrK10gPSBiaXRhbmdlbnQueDtcbiAgICAgICAgICBiaXRhbmdlbnRzW2JpdGFuZ2VudEluZGV4KytdID0gYml0YW5nZW50Lnk7XG4gICAgICAgICAgYml0YW5nZW50c1tiaXRhbmdlbnRJbmRleCsrXSA9IGJpdGFuZ2VudC56O1xuICAgICAgICAgIGJpdGFuZ2VudHNbYml0YW5nZW50SW5kZXgrK10gPSBiaXRhbmdlbnQueDtcbiAgICAgICAgICBiaXRhbmdlbnRzW2JpdGFuZ2VudEluZGV4KytdID0gYml0YW5nZW50Lnk7XG4gICAgICAgICAgYml0YW5nZW50c1tiaXRhbmdlbnRJbmRleCsrXSA9IGJpdGFuZ2VudC56O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMDsgaSA8IHNsaWNlczsgaSsrKSB7XG4gICAgICBpZiAodmVydGV4Rm9ybWF0Lm5vcm1hbCkge1xuICAgICAgICBub3JtYWxzW25vcm1hbEluZGV4KytdID0gMDtcbiAgICAgICAgbm9ybWFsc1tub3JtYWxJbmRleCsrXSA9IDA7XG4gICAgICAgIG5vcm1hbHNbbm9ybWFsSW5kZXgrK10gPSAtMTtcbiAgICAgIH1cbiAgICAgIGlmICh2ZXJ0ZXhGb3JtYXQudGFuZ2VudCkge1xuICAgICAgICB0YW5nZW50c1t0YW5nZW50SW5kZXgrK10gPSAxO1xuICAgICAgICB0YW5nZW50c1t0YW5nZW50SW5kZXgrK10gPSAwO1xuICAgICAgICB0YW5nZW50c1t0YW5nZW50SW5kZXgrK10gPSAwO1xuICAgICAgfVxuICAgICAgaWYgKHZlcnRleEZvcm1hdC5iaXRhbmdlbnQpIHtcbiAgICAgICAgYml0YW5nZW50c1tiaXRhbmdlbnRJbmRleCsrXSA9IDA7XG4gICAgICAgIGJpdGFuZ2VudHNbYml0YW5nZW50SW5kZXgrK10gPSAtMTtcbiAgICAgICAgYml0YW5nZW50c1tiaXRhbmdlbnRJbmRleCsrXSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMDsgaSA8IHNsaWNlczsgaSsrKSB7XG4gICAgICBpZiAodmVydGV4Rm9ybWF0Lm5vcm1hbCkge1xuICAgICAgICBub3JtYWxzW25vcm1hbEluZGV4KytdID0gMDtcbiAgICAgICAgbm9ybWFsc1tub3JtYWxJbmRleCsrXSA9IDA7XG4gICAgICAgIG5vcm1hbHNbbm9ybWFsSW5kZXgrK10gPSAxO1xuICAgICAgfVxuICAgICAgaWYgKHZlcnRleEZvcm1hdC50YW5nZW50KSB7XG4gICAgICAgIHRhbmdlbnRzW3RhbmdlbnRJbmRleCsrXSA9IDE7XG4gICAgICAgIHRhbmdlbnRzW3RhbmdlbnRJbmRleCsrXSA9IDA7XG4gICAgICAgIHRhbmdlbnRzW3RhbmdlbnRJbmRleCsrXSA9IDA7XG4gICAgICB9XG4gICAgICBpZiAodmVydGV4Rm9ybWF0LmJpdGFuZ2VudCkge1xuICAgICAgICBiaXRhbmdlbnRzW2JpdGFuZ2VudEluZGV4KytdID0gMDtcbiAgICAgICAgYml0YW5nZW50c1tiaXRhbmdlbnRJbmRleCsrXSA9IDE7XG4gICAgICAgIGJpdGFuZ2VudHNbYml0YW5nZW50SW5kZXgrK10gPSAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHZhciBudW1JbmRpY2VzID0gMTIgKiBzbGljZXMgLSAxMjtcbiAgdmFyIGluZGljZXMgPSBJbmRleERhdGF0eXBlLmNyZWF0ZVR5cGVkQXJyYXkobnVtVmVydGljZXMsIG51bUluZGljZXMpO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgaiA9IDA7XG4gIGZvciAoaSA9IDA7IGkgPCBzbGljZXMgLSAxOyBpKyspIHtcbiAgICBpbmRpY2VzW2luZGV4KytdID0gajtcbiAgICBpbmRpY2VzW2luZGV4KytdID0gaiArIDI7XG4gICAgaW5kaWNlc1tpbmRleCsrXSA9IGogKyAzO1xuXG4gICAgaW5kaWNlc1tpbmRleCsrXSA9IGo7XG4gICAgaW5kaWNlc1tpbmRleCsrXSA9IGogKyAzO1xuICAgIGluZGljZXNbaW5kZXgrK10gPSBqICsgMTtcblxuICAgIGogKz0gMjtcbiAgfVxuXG4gIGluZGljZXNbaW5kZXgrK10gPSB0d29TbGljZXMgLSAyO1xuICBpbmRpY2VzW2luZGV4KytdID0gMDtcbiAgaW5kaWNlc1tpbmRleCsrXSA9IDE7XG4gIGluZGljZXNbaW5kZXgrK10gPSB0d29TbGljZXMgLSAyO1xuICBpbmRpY2VzW2luZGV4KytdID0gMTtcbiAgaW5kaWNlc1tpbmRleCsrXSA9IHR3b1NsaWNlcyAtIDE7XG5cbiAgZm9yIChpID0gMTsgaSA8IHNsaWNlcyAtIDE7IGkrKykge1xuICAgIGluZGljZXNbaW5kZXgrK10gPSB0d29TbGljZXMgKyBpICsgMTtcbiAgICBpbmRpY2VzW2luZGV4KytdID0gdHdvU2xpY2VzICsgaTtcbiAgICBpbmRpY2VzW2luZGV4KytdID0gdHdvU2xpY2VzO1xuICB9XG5cbiAgZm9yIChpID0gMTsgaSA8IHNsaWNlcyAtIDE7IGkrKykge1xuICAgIGluZGljZXNbaW5kZXgrK10gPSB0aHJlZVNsaWNlcztcbiAgICBpbmRpY2VzW2luZGV4KytdID0gdGhyZWVTbGljZXMgKyBpO1xuICAgIGluZGljZXNbaW5kZXgrK10gPSB0aHJlZVNsaWNlcyArIGkgKyAxO1xuICB9XG5cbiAgdmFyIHRleHR1cmVDb29yZEluZGV4ID0gMDtcbiAgaWYgKHZlcnRleEZvcm1hdC5zdCkge1xuICAgIHZhciByYWQgPSBNYXRoLm1heCh0b3BSYWRpdXMsIGJvdHRvbVJhZGl1cyk7XG4gICAgZm9yIChpID0gMDsgaSA8IG51bVZlcnRpY2VzOyBpKyspIHtcbiAgICAgIHZhciBwb3NpdGlvbiA9IENhcnRlc2lhbjMuZnJvbUFycmF5KHBvc2l0aW9ucywgaSAqIDMsIHBvc2l0aW9uU2NyYXRjaCk7XG4gICAgICBzdFt0ZXh0dXJlQ29vcmRJbmRleCsrXSA9IChwb3NpdGlvbi54ICsgcmFkKSAvICgyLjAgKiByYWQpO1xuICAgICAgc3RbdGV4dHVyZUNvb3JkSW5kZXgrK10gPSAocG9zaXRpb24ueSArIHJhZCkgLyAoMi4wICogcmFkKTtcbiAgICB9XG4gIH1cblxuICB2YXIgYXR0cmlidXRlcyA9IG5ldyBHZW9tZXRyeUF0dHJpYnV0ZXMoKTtcbiAgaWYgKHZlcnRleEZvcm1hdC5wb3NpdGlvbikge1xuICAgIGF0dHJpYnV0ZXMucG9zaXRpb24gPSBuZXcgR2VvbWV0cnlBdHRyaWJ1dGUoe1xuICAgICAgY29tcG9uZW50RGF0YXR5cGU6IENvbXBvbmVudERhdGF0eXBlLkRPVUJMRSxcbiAgICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDMsXG4gICAgICB2YWx1ZXM6IHBvc2l0aW9ucyxcbiAgICB9KTtcbiAgfVxuXG4gIGlmICh2ZXJ0ZXhGb3JtYXQubm9ybWFsKSB7XG4gICAgYXR0cmlidXRlcy5ub3JtYWwgPSBuZXcgR2VvbWV0cnlBdHRyaWJ1dGUoe1xuICAgICAgY29tcG9uZW50RGF0YXR5cGU6IENvbXBvbmVudERhdGF0eXBlLkZMT0FULFxuICAgICAgY29tcG9uZW50c1BlckF0dHJpYnV0ZTogMyxcbiAgICAgIHZhbHVlczogbm9ybWFscyxcbiAgICB9KTtcbiAgfVxuXG4gIGlmICh2ZXJ0ZXhGb3JtYXQudGFuZ2VudCkge1xuICAgIGF0dHJpYnV0ZXMudGFuZ2VudCA9IG5ldyBHZW9tZXRyeUF0dHJpYnV0ZSh7XG4gICAgICBjb21wb25lbnREYXRhdHlwZTogQ29tcG9uZW50RGF0YXR5cGUuRkxPQVQsXG4gICAgICBjb21wb25lbnRzUGVyQXR0cmlidXRlOiAzLFxuICAgICAgdmFsdWVzOiB0YW5nZW50cyxcbiAgICB9KTtcbiAgfVxuXG4gIGlmICh2ZXJ0ZXhGb3JtYXQuYml0YW5nZW50KSB7XG4gICAgYXR0cmlidXRlcy5iaXRhbmdlbnQgPSBuZXcgR2VvbWV0cnlBdHRyaWJ1dGUoe1xuICAgICAgY29tcG9uZW50RGF0YXR5cGU6IENvbXBvbmVudERhdGF0eXBlLkZMT0FULFxuICAgICAgY29tcG9uZW50c1BlckF0dHJpYnV0ZTogMyxcbiAgICAgIHZhbHVlczogYml0YW5nZW50cyxcbiAgICB9KTtcbiAgfVxuXG4gIGlmICh2ZXJ0ZXhGb3JtYXQuc3QpIHtcbiAgICBhdHRyaWJ1dGVzLnN0ID0gbmV3IEdlb21ldHJ5QXR0cmlidXRlKHtcbiAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5GTE9BVCxcbiAgICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDIsXG4gICAgICB2YWx1ZXM6IHN0LFxuICAgIH0pO1xuICB9XG5cbiAgcmFkaXVzU2NyYXRjaC54ID0gbGVuZ3RoICogMC41O1xuICByYWRpdXNTY3JhdGNoLnkgPSBNYXRoLm1heChib3R0b21SYWRpdXMsIHRvcFJhZGl1cyk7XG5cbiAgdmFyIGJvdW5kaW5nU3BoZXJlID0gbmV3IEJvdW5kaW5nU3BoZXJlKFxuICAgIENhcnRlc2lhbjMuWkVSTyxcbiAgICBDYXJ0ZXNpYW4yLm1hZ25pdHVkZShyYWRpdXNTY3JhdGNoKVxuICApO1xuXG4gIGlmIChkZWZpbmVkKGN5bGluZGVyR2VvbWV0cnkuX29mZnNldEF0dHJpYnV0ZSkpIHtcbiAgICBsZW5ndGggPSBwb3NpdGlvbnMubGVuZ3RoO1xuICAgIHZhciBhcHBseU9mZnNldCA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCAvIDMpO1xuICAgIHZhciBvZmZzZXRWYWx1ZSA9XG4gICAgICBjeWxpbmRlckdlb21ldHJ5Ll9vZmZzZXRBdHRyaWJ1dGUgPT09IEdlb21ldHJ5T2Zmc2V0QXR0cmlidXRlLk5PTkVcbiAgICAgICAgPyAwXG4gICAgICAgIDogMTtcbiAgICBhcnJheUZpbGwoYXBwbHlPZmZzZXQsIG9mZnNldFZhbHVlKTtcbiAgICBhdHRyaWJ1dGVzLmFwcGx5T2Zmc2V0ID0gbmV3IEdlb21ldHJ5QXR0cmlidXRlKHtcbiAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5VTlNJR05FRF9CWVRFLFxuICAgICAgY29tcG9uZW50c1BlckF0dHJpYnV0ZTogMSxcbiAgICAgIHZhbHVlczogYXBwbHlPZmZzZXQsXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gbmV3IEdlb21ldHJ5KHtcbiAgICBhdHRyaWJ1dGVzOiBhdHRyaWJ1dGVzLFxuICAgIGluZGljZXM6IGluZGljZXMsXG4gICAgcHJpbWl0aXZlVHlwZTogUHJpbWl0aXZlVHlwZS5UUklBTkdMRVMsXG4gICAgYm91bmRpbmdTcGhlcmU6IGJvdW5kaW5nU3BoZXJlLFxuICAgIG9mZnNldEF0dHJpYnV0ZTogY3lsaW5kZXJHZW9tZXRyeS5fb2Zmc2V0QXR0cmlidXRlLFxuICB9KTtcbn07XG5cbnZhciB1bml0Q3lsaW5kZXJHZW9tZXRyeTtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBnZW9tZXRyaWMgcmVwcmVzZW50YXRpb24gb2YgYSB1bml0IGN5bGluZGVyLCBpbmNsdWRpbmcgaXRzIHZlcnRpY2VzLCBpbmRpY2VzLCBhbmQgYSBib3VuZGluZyBzcGhlcmUuXG4gKiBAcmV0dXJucyB7R2VvbWV0cnl9IFRoZSBjb21wdXRlZCB2ZXJ0aWNlcyBhbmQgaW5kaWNlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5DeWxpbmRlckdlb21ldHJ5LmdldFVuaXRDeWxpbmRlciA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKCFkZWZpbmVkKHVuaXRDeWxpbmRlckdlb21ldHJ5KSkge1xuICAgIHVuaXRDeWxpbmRlckdlb21ldHJ5ID0gQ3lsaW5kZXJHZW9tZXRyeS5jcmVhdGVHZW9tZXRyeShcbiAgICAgIG5ldyBDeWxpbmRlckdlb21ldHJ5KHtcbiAgICAgICAgdG9wUmFkaXVzOiAxLjAsXG4gICAgICAgIGJvdHRvbVJhZGl1czogMS4wLFxuICAgICAgICBsZW5ndGg6IDEuMCxcbiAgICAgICAgdmVydGV4Rm9ybWF0OiBWZXJ0ZXhGb3JtYXQuUE9TSVRJT05fT05MWSxcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICByZXR1cm4gdW5pdEN5bGluZGVyR2VvbWV0cnk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQ3lsaW5kZXJHZW9tZXRyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///81708\n')},89540:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99417);\n\n\n/**\n * @private\n */\nvar CylinderGeometryLibrary = {};\n\n/**\n * @private\n */\nCylinderGeometryLibrary.computePositions = function (\n  length,\n  topRadius,\n  bottomRadius,\n  slices,\n  fill\n) {\n  var topZ = length * 0.5;\n  var bottomZ = -topZ;\n\n  var twoSlice = slices + slices;\n  var size = fill ? 2 * twoSlice : twoSlice;\n  var positions = new Float64Array(size * 3);\n  var i;\n  var index = 0;\n  var tbIndex = 0;\n  var bottomOffset = fill ? twoSlice * 3 : 0;\n  var topOffset = fill ? (twoSlice + slices) * 3 : slices * 3;\n\n  for (i = 0; i < slices; i++) {\n    var angle = (i / slices) * _Math_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].TWO_PI */ .Z.TWO_PI;\n    var x = Math.cos(angle);\n    var y = Math.sin(angle);\n    var bottomX = x * bottomRadius;\n    var bottomY = y * bottomRadius;\n    var topX = x * topRadius;\n    var topY = y * topRadius;\n\n    positions[tbIndex + bottomOffset] = bottomX;\n    positions[tbIndex + bottomOffset + 1] = bottomY;\n    positions[tbIndex + bottomOffset + 2] = bottomZ;\n\n    positions[tbIndex + topOffset] = topX;\n    positions[tbIndex + topOffset + 1] = topY;\n    positions[tbIndex + topOffset + 2] = topZ;\n    tbIndex += 3;\n    if (fill) {\n      positions[index++] = bottomX;\n      positions[index++] = bottomY;\n      positions[index++] = bottomZ;\n      positions[index++] = topX;\n      positions[index++] = topY;\n      positions[index++] = topZ;\n    }\n  }\n\n  return positions;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CylinderGeometryLibrary);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODk1NDAuanMiLCJtYXBwaW5ncyI6IjtBQUFtQzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxZQUFZO0FBQzFCLCtCQUErQix1RUFBaUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EseURBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9DeWxpbmRlckdlb21ldHJ5TGlicmFyeS5qcz80MTRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDZXNpdW1NYXRoIGZyb20gXCIuL01hdGguanNcIjtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG52YXIgQ3lsaW5kZXJHZW9tZXRyeUxpYnJhcnkgPSB7fTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5DeWxpbmRlckdlb21ldHJ5TGlicmFyeS5jb21wdXRlUG9zaXRpb25zID0gZnVuY3Rpb24gKFxuICBsZW5ndGgsXG4gIHRvcFJhZGl1cyxcbiAgYm90dG9tUmFkaXVzLFxuICBzbGljZXMsXG4gIGZpbGxcbikge1xuICB2YXIgdG9wWiA9IGxlbmd0aCAqIDAuNTtcbiAgdmFyIGJvdHRvbVogPSAtdG9wWjtcblxuICB2YXIgdHdvU2xpY2UgPSBzbGljZXMgKyBzbGljZXM7XG4gIHZhciBzaXplID0gZmlsbCA/IDIgKiB0d29TbGljZSA6IHR3b1NsaWNlO1xuICB2YXIgcG9zaXRpb25zID0gbmV3IEZsb2F0NjRBcnJheShzaXplICogMyk7XG4gIHZhciBpO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgdGJJbmRleCA9IDA7XG4gIHZhciBib3R0b21PZmZzZXQgPSBmaWxsID8gdHdvU2xpY2UgKiAzIDogMDtcbiAgdmFyIHRvcE9mZnNldCA9IGZpbGwgPyAodHdvU2xpY2UgKyBzbGljZXMpICogMyA6IHNsaWNlcyAqIDM7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNsaWNlczsgaSsrKSB7XG4gICAgdmFyIGFuZ2xlID0gKGkgLyBzbGljZXMpICogQ2VzaXVtTWF0aC5UV09fUEk7XG4gICAgdmFyIHggPSBNYXRoLmNvcyhhbmdsZSk7XG4gICAgdmFyIHkgPSBNYXRoLnNpbihhbmdsZSk7XG4gICAgdmFyIGJvdHRvbVggPSB4ICogYm90dG9tUmFkaXVzO1xuICAgIHZhciBib3R0b21ZID0geSAqIGJvdHRvbVJhZGl1cztcbiAgICB2YXIgdG9wWCA9IHggKiB0b3BSYWRpdXM7XG4gICAgdmFyIHRvcFkgPSB5ICogdG9wUmFkaXVzO1xuXG4gICAgcG9zaXRpb25zW3RiSW5kZXggKyBib3R0b21PZmZzZXRdID0gYm90dG9tWDtcbiAgICBwb3NpdGlvbnNbdGJJbmRleCArIGJvdHRvbU9mZnNldCArIDFdID0gYm90dG9tWTtcbiAgICBwb3NpdGlvbnNbdGJJbmRleCArIGJvdHRvbU9mZnNldCArIDJdID0gYm90dG9tWjtcblxuICAgIHBvc2l0aW9uc1t0YkluZGV4ICsgdG9wT2Zmc2V0XSA9IHRvcFg7XG4gICAgcG9zaXRpb25zW3RiSW5kZXggKyB0b3BPZmZzZXQgKyAxXSA9IHRvcFk7XG4gICAgcG9zaXRpb25zW3RiSW5kZXggKyB0b3BPZmZzZXQgKyAyXSA9IHRvcFo7XG4gICAgdGJJbmRleCArPSAzO1xuICAgIGlmIChmaWxsKSB7XG4gICAgICBwb3NpdGlvbnNbaW5kZXgrK10gPSBib3R0b21YO1xuICAgICAgcG9zaXRpb25zW2luZGV4KytdID0gYm90dG9tWTtcbiAgICAgIHBvc2l0aW9uc1tpbmRleCsrXSA9IGJvdHRvbVo7XG4gICAgICBwb3NpdGlvbnNbaW5kZXgrK10gPSB0b3BYO1xuICAgICAgcG9zaXRpb25zW2luZGV4KytdID0gdG9wWTtcbiAgICAgIHBvc2l0aW9uc1tpbmRleCsrXSA9IHRvcFo7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBvc2l0aW9ucztcbn07XG5leHBvcnQgZGVmYXVsdCBDeWxpbmRlckdlb21ldHJ5TGlicmFyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///89540\n')},35248:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23401);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84828);\n/* harmony import */ var _CylinderGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(89540);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(12572);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(87379);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(22832);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(97264);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar radiusScratch = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n/**\n * A description of the outline of a cylinder.\n *\n * @alias CylinderOutlineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Number} options.length The length of the cylinder.\n * @param {Number} options.topRadius The radius of the top of the cylinder.\n * @param {Number} options.bottomRadius The radius of the bottom of the cylinder.\n * @param {Number} [options.slices=128] The number of edges around the perimeter of the cylinder.\n * @param {Number} [options.numberOfVerticalLines=16] Number of lines to draw between the top and bottom surfaces of the cylinder.\n *\n * @exception {DeveloperError} options.length must be greater than 0.\n * @exception {DeveloperError} options.topRadius must be greater than 0.\n * @exception {DeveloperError} options.bottomRadius must be greater than 0.\n * @exception {DeveloperError} bottomRadius and topRadius cannot both equal 0.\n * @exception {DeveloperError} options.slices must be greater than or equal to 3.\n *\n * @see CylinderOutlineGeometry.createGeometry\n *\n * @example\n * // create cylinder geometry\n * var cylinder = new Cesium.CylinderOutlineGeometry({\n *     length: 200000,\n *     topRadius: 80000,\n *     bottomRadius: 200000,\n * });\n * var geometry = Cesium.CylinderOutlineGeometry.createGeometry(cylinder);\n */\nfunction CylinderOutlineGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var length = options.length;\n  var topRadius = options.topRadius;\n  var bottomRadius = options.bottomRadius;\n  var slices = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.slices, 128);\n  var numberOfVerticalLines = Math.max(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.numberOfVerticalLines, 16),\n    0\n  );\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number */ .Z.typeOf.number("options.positions", length);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number */ .Z.typeOf.number("options.topRadius", topRadius);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number */ .Z.typeOf.number("options.bottomRadius", bottomRadius);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("options.slices", slices, 3);\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options.offsetAttribute) &&\n    options.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].TOP */ .Z.TOP\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(\n      "GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this._length = length;\n  this._topRadius = topRadius;\n  this._bottomRadius = bottomRadius;\n  this._slices = slices;\n  this._numberOfVerticalLines = numberOfVerticalLines;\n  this._offsetAttribute = options.offsetAttribute;\n  this._workerName = "createCylinderOutlineGeometry";\n}\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nCylinderOutlineGeometry.packedLength = 6;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {CylinderOutlineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nCylinderOutlineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startingIndex, 0);\n\n  array[startingIndex++] = value._length;\n  array[startingIndex++] = value._topRadius;\n  array[startingIndex++] = value._bottomRadius;\n  array[startingIndex++] = value._slices;\n  array[startingIndex++] = value._numberOfVerticalLines;\n  array[startingIndex] = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(value._offsetAttribute, -1);\n\n  return array;\n};\n\nvar scratchOptions = {\n  length: undefined,\n  topRadius: undefined,\n  bottomRadius: undefined,\n  slices: undefined,\n  numberOfVerticalLines: undefined,\n  offsetAttribute: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {CylinderOutlineGeometry} [result] The object into which to store the result.\n * @returns {CylinderOutlineGeometry} The modified result parameter or a new CylinderOutlineGeometry instance if one was not provided.\n */\nCylinderOutlineGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var length = array[startingIndex++];\n  var topRadius = array[startingIndex++];\n  var bottomRadius = array[startingIndex++];\n  var slices = array[startingIndex++];\n  var numberOfVerticalLines = array[startingIndex++];\n  var offsetAttribute = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(result)) {\n    scratchOptions.length = length;\n    scratchOptions.topRadius = topRadius;\n    scratchOptions.bottomRadius = bottomRadius;\n    scratchOptions.slices = slices;\n    scratchOptions.numberOfVerticalLines = numberOfVerticalLines;\n    scratchOptions.offsetAttribute =\n      offsetAttribute === -1 ? undefined : offsetAttribute;\n    return new CylinderOutlineGeometry(scratchOptions);\n  }\n\n  result._length = length;\n  result._topRadius = topRadius;\n  result._bottomRadius = bottomRadius;\n  result._slices = slices;\n  result._numberOfVerticalLines = numberOfVerticalLines;\n  result._offsetAttribute =\n    offsetAttribute === -1 ? undefined : offsetAttribute;\n\n  return result;\n};\n\n/**\n * Computes the geometric representation of an outline of a cylinder, including its vertices, indices, and a bounding sphere.\n *\n * @param {CylinderOutlineGeometry} cylinderGeometry A description of the cylinder outline.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nCylinderOutlineGeometry.createGeometry = function (cylinderGeometry) {\n  var length = cylinderGeometry._length;\n  var topRadius = cylinderGeometry._topRadius;\n  var bottomRadius = cylinderGeometry._bottomRadius;\n  var slices = cylinderGeometry._slices;\n  var numberOfVerticalLines = cylinderGeometry._numberOfVerticalLines;\n\n  if (\n    length <= 0 ||\n    topRadius < 0 ||\n    bottomRadius < 0 ||\n    (topRadius === 0 && bottomRadius === 0)\n  ) {\n    return;\n  }\n\n  var numVertices = slices * 2;\n\n  var positions = _CylinderGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].computePositions */ .Z.computePositions(\n    length,\n    topRadius,\n    bottomRadius,\n    slices,\n    false\n  );\n  var numIndices = slices * 2;\n  var numSide;\n  if (numberOfVerticalLines > 0) {\n    var numSideLines = Math.min(numberOfVerticalLines, slices);\n    numSide = Math.round(slices / numSideLines);\n    numIndices += numSideLines;\n  }\n\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].createTypedArray */ .Z.createTypedArray(numVertices, numIndices * 2);\n  var index = 0;\n  var i;\n  for (i = 0; i < slices - 1; i++) {\n    indices[index++] = i;\n    indices[index++] = i + 1;\n    indices[index++] = i + slices;\n    indices[index++] = i + 1 + slices;\n  }\n\n  indices[index++] = slices - 1;\n  indices[index++] = 0;\n  indices[index++] = slices + slices - 1;\n  indices[index++] = slices;\n\n  if (numberOfVerticalLines > 0) {\n    for (i = 0; i < slices; i += numSide) {\n      indices[index++] = i;\n      indices[index++] = i + slices;\n    }\n  }\n\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n  attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: positions,\n  });\n\n  radiusScratch.x = length * 0.5;\n  radiusScratch.y = Math.max(bottomRadius, topRadius);\n\n  var boundingSphere = new _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].ZERO */ .Z.ZERO,\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitude */ .Z.magnitude(radiusScratch)\n  );\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(cylinderGeometry._offsetAttribute)) {\n    length = positions.length;\n    var applyOffset = new Uint8Array(length / 3);\n    var offsetValue =\n      cylinderGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].NONE */ .Z.NONE\n        ? 0\n        : 1;\n    (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, offsetValue);\n    attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 1,\n      values: applyOffset,\n    });\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].LINES */ .Z.LINES,\n    boundingSphere: boundingSphere,\n    offsetAttribute: cylinderGeometry._offsetAttribute,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CylinderOutlineGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///35248\n')}}]);