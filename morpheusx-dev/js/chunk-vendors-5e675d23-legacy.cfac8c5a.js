"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[3402],{70544:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ArcType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11491);\n/* harmony import */ var _arrayFill_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23401);\n/* harmony import */ var _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(88108);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60216);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(51688);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(50491);\n/* harmony import */ var _EllipsoidGeodesic_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(39043);\n/* harmony import */ var _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(74744);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(26865);\n/* harmony import */ var _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(87379);\n/* harmony import */ var _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(57552);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(68201);\n/* harmony import */ var _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(38425);\n/* harmony import */ var _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(78284);\n/* harmony import */ var _Quaternion_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(87811);\n/* harmony import */ var _Rectangle_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(96190);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(67252);\n/* harmony import */ var _WindingOrder_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(32441);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar scratchCarto1 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar scratchCarto2 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nfunction adjustPosHeightsForNormal(position, p1, p2, ellipsoid) {\n  var carto1 = ellipsoid.cartesianToCartographic(position, scratchCarto1);\n  var height = carto1.height;\n  var p1Carto = ellipsoid.cartesianToCartographic(p1, scratchCarto2);\n  p1Carto.height = height;\n  ellipsoid.cartographicToCartesian(p1Carto, p1);\n\n  var p2Carto = ellipsoid.cartesianToCartographic(p2, scratchCarto2);\n  p2Carto.height = height - 100;\n  ellipsoid.cartographicToCartesian(p2Carto, p2);\n}\n\nvar scratchBoundingRectangle = new _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchPosition = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar scratchNormal = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar scratchTangent = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar scratchBitangent = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar p1Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar p2Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar scratchPerPosNormal = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar scratchPerPosTangent = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar scratchPerPosBitangent = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n\nvar appendTextureCoordinatesOrigin = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar appendTextureCoordinatesCartesian2 = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar appendTextureCoordinatesCartesian3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar appendTextureCoordinatesQuaternion = new _Quaternion_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z();\nvar appendTextureCoordinatesMatrix3 = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z();\nvar tangentMatrixScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z();\n\nfunction computeAttributes(options) {\n  var vertexFormat = options.vertexFormat;\n  var geometry = options.geometry;\n  var shadowVolume = options.shadowVolume;\n  var flatPositions = geometry.attributes.position.values;\n  var length = flatPositions.length;\n  var wall = options.wall;\n  var top = options.top || wall;\n  var bottom = options.bottom || wall;\n  if (\n    vertexFormat.st ||\n    vertexFormat.normal ||\n    vertexFormat.tangent ||\n    vertexFormat.bitangent ||\n    shadowVolume\n  ) {\n    // PERFORMANCE_IDEA: Compute before subdivision, then just interpolate during subdivision.\n    // PERFORMANCE_IDEA: Compute with createGeometryFromPositions() for fast path when there\'s no holes.\n    var boundingRectangle = options.boundingRectangle;\n    var tangentPlane = options.tangentPlane;\n    var ellipsoid = options.ellipsoid;\n    var stRotation = options.stRotation;\n    var perPositionHeight = options.perPositionHeight;\n\n    var origin = appendTextureCoordinatesOrigin;\n    origin.x = boundingRectangle.x;\n    origin.y = boundingRectangle.y;\n\n    var textureCoordinates = vertexFormat.st\n      ? new Float32Array(2 * (length / 3))\n      : undefined;\n    var normals;\n    if (vertexFormat.normal) {\n      if (perPositionHeight && top && !wall) {\n        normals = geometry.attributes.normal.values;\n      } else {\n        normals = new Float32Array(length);\n      }\n    }\n    var tangents = vertexFormat.tangent ? new Float32Array(length) : undefined;\n    var bitangents = vertexFormat.bitangent\n      ? new Float32Array(length)\n      : undefined;\n    var extrudeNormals = shadowVolume ? new Float32Array(length) : undefined;\n\n    var textureCoordIndex = 0;\n    var attrIndex = 0;\n\n    var normal = scratchNormal;\n    var tangent = scratchTangent;\n    var bitangent = scratchBitangent;\n    var recomputeNormal = true;\n\n    var textureMatrix = appendTextureCoordinatesMatrix3;\n    var tangentRotationMatrix = tangentMatrixScratch;\n    if (stRotation !== 0.0) {\n      var rotation = _Quaternion_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(\n        tangentPlane._plane.normal,\n        stRotation,\n        appendTextureCoordinatesQuaternion\n      );\n      textureMatrix = _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].fromQuaternion */ .Z.fromQuaternion(rotation, textureMatrix);\n\n      rotation = _Quaternion_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(\n        tangentPlane._plane.normal,\n        -stRotation,\n        appendTextureCoordinatesQuaternion\n      );\n      tangentRotationMatrix = _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].fromQuaternion */ .Z.fromQuaternion(\n        rotation,\n        tangentRotationMatrix\n      );\n    } else {\n      textureMatrix = _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].clone */ .Z.clone(_Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].IDENTITY */ .Z.IDENTITY, textureMatrix);\n      tangentRotationMatrix = _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].clone */ .Z.clone(\n        _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].IDENTITY */ .Z.IDENTITY,\n        tangentRotationMatrix\n      );\n    }\n\n    var bottomOffset = 0;\n    var bottomOffset2 = 0;\n\n    if (top && bottom) {\n      bottomOffset = length / 2;\n      bottomOffset2 = length / 3;\n\n      length /= 2;\n    }\n\n    for (var i = 0; i < length; i += 3) {\n      var position = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromArray */ .Z.fromArray(\n        flatPositions,\n        i,\n        appendTextureCoordinatesCartesian3\n      );\n\n      if (vertexFormat.st) {\n        var p = _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n          textureMatrix,\n          position,\n          scratchPosition\n        );\n        p = ellipsoid.scaleToGeodeticSurface(p, p);\n        var st = tangentPlane.projectPointOntoPlane(\n          p,\n          appendTextureCoordinatesCartesian2\n        );\n        _Cartesian2_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].subtract */ .Z.subtract(st, origin, st);\n\n        var stx = _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].clamp */ .Z.clamp(st.x / boundingRectangle.width, 0, 1);\n        var sty = _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].clamp */ .Z.clamp(st.y / boundingRectangle.height, 0, 1);\n        if (bottom) {\n          textureCoordinates[textureCoordIndex + bottomOffset2] = stx;\n          textureCoordinates[textureCoordIndex + 1 + bottomOffset2] = sty;\n        }\n        if (top) {\n          textureCoordinates[textureCoordIndex] = stx;\n          textureCoordinates[textureCoordIndex + 1] = sty;\n        }\n\n        textureCoordIndex += 2;\n      }\n\n      if (\n        vertexFormat.normal ||\n        vertexFormat.tangent ||\n        vertexFormat.bitangent ||\n        shadowVolume\n      ) {\n        var attrIndex1 = attrIndex + 1;\n        var attrIndex2 = attrIndex + 2;\n\n        if (wall) {\n          if (i + 3 < length) {\n            var p1 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromArray */ .Z.fromArray(flatPositions, i + 3, p1Scratch);\n\n            if (recomputeNormal) {\n              var p2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromArray */ .Z.fromArray(\n                flatPositions,\n                i + length,\n                p2Scratch\n              );\n              if (perPositionHeight) {\n                adjustPosHeightsForNormal(position, p1, p2, ellipsoid);\n              }\n              _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].subtract */ .Z.subtract(p1, position, p1);\n              _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].subtract */ .Z.subtract(p2, position, p2);\n              normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].normalize */ .Z.normalize(\n                _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].cross */ .Z.cross(p2, p1, normal),\n                normal\n              );\n              recomputeNormal = false;\n            }\n\n            if (_Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(p1, position, _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].EPSILON10 */ .Z.EPSILON10)) {\n              // if we\'ve reached a corner\n              recomputeNormal = true;\n            }\n          }\n\n          if (vertexFormat.tangent || vertexFormat.bitangent) {\n            bitangent = ellipsoid.geodeticSurfaceNormal(position, bitangent);\n            if (vertexFormat.tangent) {\n              tangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].normalize */ .Z.normalize(\n                _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].cross */ .Z.cross(bitangent, normal, tangent),\n                tangent\n              );\n            }\n          }\n        } else {\n          normal = ellipsoid.geodeticSurfaceNormal(position, normal);\n          if (vertexFormat.tangent || vertexFormat.bitangent) {\n            if (perPositionHeight) {\n              scratchPerPosNormal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromArray */ .Z.fromArray(\n                normals,\n                attrIndex,\n                scratchPerPosNormal\n              );\n              scratchPerPosTangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].cross */ .Z.cross(\n                _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNIT_Z */ .Z.UNIT_Z,\n                scratchPerPosNormal,\n                scratchPerPosTangent\n              );\n              scratchPerPosTangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].normalize */ .Z.normalize(\n                _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n                  tangentRotationMatrix,\n                  scratchPerPosTangent,\n                  scratchPerPosTangent\n                ),\n                scratchPerPosTangent\n              );\n              if (vertexFormat.bitangent) {\n                scratchPerPosBitangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].normalize */ .Z.normalize(\n                  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].cross */ .Z.cross(\n                    scratchPerPosNormal,\n                    scratchPerPosTangent,\n                    scratchPerPosBitangent\n                  ),\n                  scratchPerPosBitangent\n                );\n              }\n            }\n\n            tangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].cross */ .Z.cross(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNIT_Z */ .Z.UNIT_Z, normal, tangent);\n            tangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].normalize */ .Z.normalize(\n              _Matrix3_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].multiplyByVector */ .Z.multiplyByVector(tangentRotationMatrix, tangent, tangent),\n              tangent\n            );\n            if (vertexFormat.bitangent) {\n              bitangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].normalize */ .Z.normalize(\n                _Cartesian3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].cross */ .Z.cross(normal, tangent, bitangent),\n                bitangent\n              );\n            }\n          }\n        }\n\n        if (vertexFormat.normal) {\n          if (options.wall) {\n            normals[attrIndex + bottomOffset] = normal.x;\n            normals[attrIndex1 + bottomOffset] = normal.y;\n            normals[attrIndex2 + bottomOffset] = normal.z;\n          } else if (bottom) {\n            normals[attrIndex + bottomOffset] = -normal.x;\n            normals[attrIndex1 + bottomOffset] = -normal.y;\n            normals[attrIndex2 + bottomOffset] = -normal.z;\n          }\n\n          if ((top && !perPositionHeight) || wall) {\n            normals[attrIndex] = normal.x;\n            normals[attrIndex1] = normal.y;\n            normals[attrIndex2] = normal.z;\n          }\n        }\n\n        if (shadowVolume) {\n          if (wall) {\n            normal = ellipsoid.geodeticSurfaceNormal(position, normal);\n          }\n          extrudeNormals[attrIndex + bottomOffset] = -normal.x;\n          extrudeNormals[attrIndex1 + bottomOffset] = -normal.y;\n          extrudeNormals[attrIndex2 + bottomOffset] = -normal.z;\n        }\n\n        if (vertexFormat.tangent) {\n          if (options.wall) {\n            tangents[attrIndex + bottomOffset] = tangent.x;\n            tangents[attrIndex1 + bottomOffset] = tangent.y;\n            tangents[attrIndex2 + bottomOffset] = tangent.z;\n          } else if (bottom) {\n            tangents[attrIndex + bottomOffset] = -tangent.x;\n            tangents[attrIndex1 + bottomOffset] = -tangent.y;\n            tangents[attrIndex2 + bottomOffset] = -tangent.z;\n          }\n\n          if (top) {\n            if (perPositionHeight) {\n              tangents[attrIndex] = scratchPerPosTangent.x;\n              tangents[attrIndex1] = scratchPerPosTangent.y;\n              tangents[attrIndex2] = scratchPerPosTangent.z;\n            } else {\n              tangents[attrIndex] = tangent.x;\n              tangents[attrIndex1] = tangent.y;\n              tangents[attrIndex2] = tangent.z;\n            }\n          }\n        }\n\n        if (vertexFormat.bitangent) {\n          if (bottom) {\n            bitangents[attrIndex + bottomOffset] = bitangent.x;\n            bitangents[attrIndex1 + bottomOffset] = bitangent.y;\n            bitangents[attrIndex2 + bottomOffset] = bitangent.z;\n          }\n          if (top) {\n            if (perPositionHeight) {\n              bitangents[attrIndex] = scratchPerPosBitangent.x;\n              bitangents[attrIndex1] = scratchPerPosBitangent.y;\n              bitangents[attrIndex2] = scratchPerPosBitangent.z;\n            } else {\n              bitangents[attrIndex] = bitangent.x;\n              bitangents[attrIndex1] = bitangent.y;\n              bitangents[attrIndex2] = bitangent.z;\n            }\n          }\n        }\n        attrIndex += 3;\n      }\n    }\n\n    if (vertexFormat.st) {\n      geometry.attributes.st = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 2,\n        values: textureCoordinates,\n      });\n    }\n\n    if (vertexFormat.normal) {\n      geometry.attributes.normal = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n        values: normals,\n      });\n    }\n\n    if (vertexFormat.tangent) {\n      geometry.attributes.tangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n        values: tangents,\n      });\n    }\n\n    if (vertexFormat.bitangent) {\n      geometry.attributes.bitangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n        values: bitangents,\n      });\n    }\n\n    if (shadowVolume) {\n      geometry.attributes.extrudeDirection = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n        values: extrudeNormals,\n      });\n    }\n  }\n\n  if (options.extrude && (0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.offsetAttribute)) {\n    var size = flatPositions.length / 3;\n    var offsetAttribute = new Uint8Array(size);\n\n    if (options.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].TOP */ .Z.TOP) {\n      if ((top && bottom) || wall) {\n        offsetAttribute = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(offsetAttribute, 1, 0, size / 2);\n      } else if (top) {\n        offsetAttribute = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(offsetAttribute, 1);\n      }\n    } else {\n      var offsetValue =\n        options.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].NONE */ .Z.NONE ? 0 : 1;\n      offsetAttribute = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(offsetAttribute, offsetValue);\n    }\n\n    geometry.attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 1,\n      values: offsetAttribute,\n    });\n  }\n\n  return geometry;\n}\n\nvar startCartographicScratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar endCartographicScratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar idlCross = {\n  westOverIDL: 0.0,\n  eastOverIDL: 0.0,\n};\nvar ellipsoidGeodesic = new _EllipsoidGeodesic_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\nfunction computeRectangle(positions, ellipsoid, arcType, granularity, result) {\n  result = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(result, new _Rectangle_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z());\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(positions) || positions.length < 3) {\n    result.west = 0.0;\n    result.north = 0.0;\n    result.south = 0.0;\n    result.east = 0.0;\n    return result;\n  }\n\n  if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n    return _Rectangle_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"].fromCartesianArray */ .Z.fromCartesianArray(positions, ellipsoid, result);\n  }\n\n  if (!ellipsoidGeodesic.ellipsoid.equals(ellipsoid)) {\n    ellipsoidGeodesic = new _EllipsoidGeodesic_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z(undefined, undefined, ellipsoid);\n  }\n\n  result.west = Number.POSITIVE_INFINITY;\n  result.east = Number.NEGATIVE_INFINITY;\n  result.south = Number.POSITIVE_INFINITY;\n  result.north = Number.NEGATIVE_INFINITY;\n\n  idlCross.westOverIDL = Number.POSITIVE_INFINITY;\n  idlCross.eastOverIDL = Number.NEGATIVE_INFINITY;\n\n  var inverseChordLength =\n    1.0 / _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].chordLength */ .Z.chordLength(granularity, ellipsoid.maximumRadius);\n  var positionsLength = positions.length;\n  var endCartographic = ellipsoid.cartesianToCartographic(\n    positions[0],\n    endCartographicScratch\n  );\n  var startCartographic = startCartographicScratch;\n  var swap;\n\n  for (var i = 1; i < positionsLength; i++) {\n    swap = startCartographic;\n    startCartographic = endCartographic;\n    endCartographic = ellipsoid.cartesianToCartographic(positions[i], swap);\n    ellipsoidGeodesic.setEndPoints(startCartographic, endCartographic);\n    interpolateAndGrowRectangle(\n      ellipsoidGeodesic,\n      inverseChordLength,\n      result,\n      idlCross\n    );\n  }\n\n  swap = startCartographic;\n  startCartographic = endCartographic;\n  endCartographic = ellipsoid.cartesianToCartographic(positions[0], swap);\n  ellipsoidGeodesic.setEndPoints(startCartographic, endCartographic);\n  interpolateAndGrowRectangle(\n    ellipsoidGeodesic,\n    inverseChordLength,\n    result,\n    idlCross\n  );\n\n  if (result.east - result.west > idlCross.eastOverIDL - idlCross.westOverIDL) {\n    result.west = idlCross.westOverIDL;\n    result.east = idlCross.eastOverIDL;\n\n    if (result.east > _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].PI */ .Z.PI) {\n      result.east = result.east - _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].TWO_PI */ .Z.TWO_PI;\n    }\n    if (result.west > _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].PI */ .Z.PI) {\n      result.west = result.west - _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].TWO_PI */ .Z.TWO_PI;\n    }\n  }\n\n  return result;\n}\n\nvar interpolatedCartographicScratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nfunction interpolateAndGrowRectangle(\n  ellipsoidGeodesic,\n  inverseChordLength,\n  result,\n  idlCross\n) {\n  var segmentLength = ellipsoidGeodesic.surfaceDistance;\n\n  var numPoints = Math.ceil(segmentLength * inverseChordLength);\n  var subsegmentDistance =\n    numPoints > 0 ? segmentLength / (numPoints - 1) : Number.POSITIVE_INFINITY;\n  var interpolationDistance = 0.0;\n\n  for (var i = 0; i < numPoints; i++) {\n    var interpolatedCartographic = ellipsoidGeodesic.interpolateUsingSurfaceDistance(\n      interpolationDistance,\n      interpolatedCartographicScratch\n    );\n    interpolationDistance += subsegmentDistance;\n    var longitude = interpolatedCartographic.longitude;\n    var latitude = interpolatedCartographic.latitude;\n\n    result.west = Math.min(result.west, longitude);\n    result.east = Math.max(result.east, longitude);\n    result.south = Math.min(result.south, latitude);\n    result.north = Math.max(result.north, latitude);\n\n    var lonAdjusted =\n      longitude >= 0 ? longitude : longitude + _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].TWO_PI */ .Z.TWO_PI;\n    idlCross.westOverIDL = Math.min(idlCross.westOverIDL, lonAdjusted);\n    idlCross.eastOverIDL = Math.max(idlCross.eastOverIDL, lonAdjusted);\n  }\n}\n\nvar createGeometryFromPositionsExtrudedPositions = [];\n\nfunction createGeometryFromPositionsExtruded(\n  ellipsoid,\n  polygon,\n  granularity,\n  hierarchy,\n  perPositionHeight,\n  closeTop,\n  closeBottom,\n  vertexFormat,\n  arcType\n) {\n  var geos = {\n    walls: [],\n  };\n  var i;\n\n  if (closeTop || closeBottom) {\n    var topGeo = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].createGeometryFromPositions */ .Z.createGeometryFromPositions(\n      ellipsoid,\n      polygon,\n      granularity,\n      perPositionHeight,\n      vertexFormat,\n      arcType\n    );\n\n    var edgePoints = topGeo.attributes.position.values;\n    var indices = topGeo.indices;\n    var numPositions;\n    var newIndices;\n\n    if (closeTop && closeBottom) {\n      var topBottomPositions = edgePoints.concat(edgePoints);\n\n      numPositions = topBottomPositions.length / 3;\n\n      newIndices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].createTypedArray */ .Z.createTypedArray(\n        numPositions,\n        indices.length * 2\n      );\n      newIndices.set(indices);\n      var ilength = indices.length;\n\n      var length = numPositions / 2;\n\n      for (i = 0; i < ilength; i += 3) {\n        var i0 = newIndices[i] + length;\n        var i1 = newIndices[i + 1] + length;\n        var i2 = newIndices[i + 2] + length;\n\n        newIndices[i + ilength] = i2;\n        newIndices[i + 1 + ilength] = i1;\n        newIndices[i + 2 + ilength] = i0;\n      }\n\n      topGeo.attributes.position.values = topBottomPositions;\n      if (perPositionHeight && vertexFormat.normal) {\n        var normals = topGeo.attributes.normal.values;\n        topGeo.attributes.normal.values = new Float32Array(\n          topBottomPositions.length\n        );\n        topGeo.attributes.normal.values.set(normals);\n      }\n      topGeo.indices = newIndices;\n    } else if (closeBottom) {\n      numPositions = edgePoints.length / 3;\n      newIndices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].createTypedArray */ .Z.createTypedArray(numPositions, indices.length);\n\n      for (i = 0; i < indices.length; i += 3) {\n        newIndices[i] = indices[i + 2];\n        newIndices[i + 1] = indices[i + 1];\n        newIndices[i + 2] = indices[i];\n      }\n\n      topGeo.indices = newIndices;\n    }\n\n    geos.topAndBottom = new _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z({\n      geometry: topGeo,\n    });\n  }\n\n  var outerRing = hierarchy.outerRing;\n  var tangentPlane = _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromPoints */ .Z.fromPoints(outerRing, ellipsoid);\n  var positions2D = tangentPlane.projectPointsOntoPlane(\n    outerRing,\n    createGeometryFromPositionsExtrudedPositions\n  );\n\n  var windingOrder = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].computeWindingOrder2D */ .Z.computeWindingOrder2D(positions2D);\n  if (windingOrder === _WindingOrder_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].CLOCKWISE */ .Z.CLOCKWISE) {\n    outerRing = outerRing.slice().reverse();\n  }\n\n  var wallGeo = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].computeWallGeometry */ .Z.computeWallGeometry(\n    outerRing,\n    ellipsoid,\n    granularity,\n    perPositionHeight,\n    arcType\n  );\n  geos.walls.push(\n    new _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z({\n      geometry: wallGeo,\n    })\n  );\n\n  var holes = hierarchy.holes;\n  for (i = 0; i < holes.length; i++) {\n    var hole = holes[i];\n\n    tangentPlane = _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromPoints */ .Z.fromPoints(hole, ellipsoid);\n    positions2D = tangentPlane.projectPointsOntoPlane(\n      hole,\n      createGeometryFromPositionsExtrudedPositions\n    );\n\n    windingOrder = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].computeWindingOrder2D */ .Z.computeWindingOrder2D(positions2D);\n    if (windingOrder === _WindingOrder_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].COUNTER_CLOCKWISE */ .Z.COUNTER_CLOCKWISE) {\n      hole = hole.slice().reverse();\n    }\n\n    wallGeo = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].computeWallGeometry */ .Z.computeWallGeometry(\n      hole,\n      ellipsoid,\n      granularity,\n      perPositionHeight,\n      arcType\n    );\n    geos.walls.push(\n      new _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z({\n        geometry: wallGeo,\n      })\n    );\n  }\n\n  return geos;\n}\n\n/**\n * A description of a polygon on the ellipsoid. The polygon is defined by a polygon hierarchy. Polygon geometry can be rendered with both {@link Primitive} and {@link GroundPrimitive}.\n *\n * @alias PolygonGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {PolygonHierarchy} options.polygonHierarchy A polygon hierarchy that can include holes.\n * @param {Number} [options.height=0.0] The distance in meters between the polygon and the ellipsoid surface.\n * @param {Number} [options.extrudedHeight] The distance in meters between the polygon\'s extruded face and the ellipsoid surface.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {Number} [options.stRotation=0.0] The rotation of the texture coordinates, in radians. A positive rotation is counter-clockwise.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Boolean} [options.perPositionHeight=false] Use the height of options.positions for each position instead of using options.height to determine the height.\n * @param {Boolean} [options.closeTop=true] When false, leaves off the top of an extruded polygon open.\n * @param {Boolean} [options.closeBottom=true] When false, leaves off the bottom of an extruded polygon open.\n * @param {ArcType} [options.arcType=ArcType.GEODESIC] The type of line the polygon edges must follow. Valid options are {@link ArcType.GEODESIC} and {@link ArcType.RHUMB}.\n *\n * @see PolygonGeometry#createGeometry\n * @see PolygonGeometry#fromPositions\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Polygon.html|Cesium Sandcastle Polygon Demo}\n *\n * @example\n * // 1. create a polygon from points\n * var polygon = new Cesium.PolygonGeometry({\n *   polygonHierarchy : new Cesium.PolygonHierarchy(\n *     Cesium.Cartesian3.fromDegreesArray([\n *       -72.0, 40.0,\n *       -70.0, 35.0,\n *       -75.0, 30.0,\n *       -70.0, 30.0,\n *       -68.0, 40.0\n *     ])\n *   )\n * });\n * var geometry = Cesium.PolygonGeometry.createGeometry(polygon);\n *\n * // 2. create a nested polygon with holes\n * var polygonWithHole = new Cesium.PolygonGeometry({\n *   polygonHierarchy : new Cesium.PolygonHierarchy(\n *     Cesium.Cartesian3.fromDegreesArray([\n *       -109.0, 30.0,\n *       -95.0, 30.0,\n *       -95.0, 40.0,\n *       -109.0, 40.0\n *     ]),\n *     [new Cesium.PolygonHierarchy(\n *       Cesium.Cartesian3.fromDegreesArray([\n *         -107.0, 31.0,\n *         -107.0, 39.0,\n *         -97.0, 39.0,\n *         -97.0, 31.0\n *       ]),\n *       [new Cesium.PolygonHierarchy(\n *         Cesium.Cartesian3.fromDegreesArray([\n *           -105.0, 33.0,\n *           -99.0, 33.0,\n *           -99.0, 37.0,\n *           -105.0, 37.0\n *         ]),\n *         [new Cesium.PolygonHierarchy(\n *           Cesium.Cartesian3.fromDegreesArray([\n *             -103.0, 34.0,\n *             -101.0, 34.0,\n *             -101.0, 36.0,\n *             -103.0, 36.0\n *           ])\n *         )]\n *       )]\n *     )]\n *   )\n * });\n * var geometry = Cesium.PolygonGeometry.createGeometry(polygonWithHole);\n *\n * // 3. create extruded polygon\n * var extrudedPolygon = new Cesium.PolygonGeometry({\n *   polygonHierarchy : new Cesium.PolygonHierarchy(\n *     Cesium.Cartesian3.fromDegreesArray([\n *       -72.0, 40.0,\n *       -70.0, 35.0,\n *       -75.0, 30.0,\n *       -70.0, 30.0,\n *       -68.0, 40.0\n *     ])\n *   ),\n *   extrudedHeight: 300000\n * });\n * var geometry = Cesium.PolygonGeometry.createGeometry(extrudedPolygon);\n */\nfunction PolygonGeometry(options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].typeOf.object */ .Z.typeOf.object("options", options);\n  _Check_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].typeOf.object */ .Z.typeOf.object("options.polygonHierarchy", options.polygonHierarchy);\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.perPositionHeight) &&\n    options.perPositionHeight &&\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.height)\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n      "Cannot use both options.perPositionHeight and options.height"\n    );\n  }\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.arcType) &&\n    options.arcType !== _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC &&\n    options.arcType !== _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n      "Invalid arcType. Valid options are ArcType.GEODESIC and ArcType.RHUMB."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var polygonHierarchy = options.polygonHierarchy;\n  var vertexFormat = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.vertexFormat, _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].DEFAULT */ .Z.DEFAULT);\n  var ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].WGS84 */ .Z.WGS84);\n  var granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  var stRotation = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.stRotation, 0.0);\n  var perPositionHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.perPositionHeight, false);\n  var perPositionHeightExtrude =\n    perPositionHeight && (0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.extrudedHeight);\n  var height = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.height, 0.0);\n  var extrudedHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.extrudedHeight, height);\n\n  if (!perPositionHeightExtrude) {\n    var h = Math.max(height, extrudedHeight);\n    extrudedHeight = Math.min(height, extrudedHeight);\n    height = h;\n  }\n\n  this._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].clone */ .Z.clone(vertexFormat);\n  this._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(ellipsoid);\n  this._granularity = granularity;\n  this._stRotation = stRotation;\n  this._height = height;\n  this._extrudedHeight = extrudedHeight;\n  this._closeTop = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.closeTop, true);\n  this._closeBottom = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.closeBottom, true);\n  this._polygonHierarchy = polygonHierarchy;\n  this._perPositionHeight = perPositionHeight;\n  this._perPositionHeightExtrude = perPositionHeightExtrude;\n  this._shadowVolume = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.shadowVolume, false);\n  this._workerName = "createPolygonGeometry";\n  this._offsetAttribute = options.offsetAttribute;\n  this._arcType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.arcType, _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC);\n\n  this._rectangle = undefined;\n  this._textureCoordinateRotationPoints = undefined;\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength =\n    _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].computeHierarchyPackedLength */ .Z.computeHierarchyPackedLength(polygonHierarchy) +\n    _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].packedLength */ .Z.packedLength +\n    _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].packedLength */ .Z.packedLength +\n    12;\n}\n\n/**\n * A description of a polygon from an array of positions. Polygon geometry can be rendered with both {@link Primitive} and {@link GroundPrimitive}.\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of positions that defined the corner points of the polygon.\n * @param {Number} [options.height=0.0] The height of the polygon.\n * @param {Number} [options.extrudedHeight] The height of the polygon extrusion.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {Number} [options.stRotation=0.0] The rotation of the texture coordinates, in radians. A positive rotation is counter-clockwise.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Boolean} [options.perPositionHeight=false] Use the height of options.positions for each position instead of using options.height to determine the height.\n * @param {Boolean} [options.closeTop=true] When false, leaves off the top of an extruded polygon open.\n * @param {Boolean} [options.closeBottom=true] When false, leaves off the bottom of an extruded polygon open.\n * @param {ArcType} [options.arcType=ArcType.GEODESIC] The type of line the polygon edges must follow. Valid options are {@link ArcType.GEODESIC} and {@link ArcType.RHUMB}.\n * @returns {PolygonGeometry}\n *\n *\n * @example\n * // create a polygon from points\n * var polygon = Cesium.PolygonGeometry.fromPositions({\n *   positions : Cesium.Cartesian3.fromDegreesArray([\n *     -72.0, 40.0,\n *     -70.0, 35.0,\n *     -75.0, 30.0,\n *     -70.0, 30.0,\n *     -68.0, 40.0\n *   ])\n * });\n * var geometry = Cesium.PolygonGeometry.createGeometry(polygon);\n *\n * @see PolygonGeometry#createGeometry\n */\nPolygonGeometry.fromPositions = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].defined */ .Z.defined("options.positions", options.positions);\n  //>>includeEnd(\'debug\');\n\n  var newOptions = {\n    polygonHierarchy: {\n      positions: options.positions,\n    },\n    height: options.height,\n    extrudedHeight: options.extrudedHeight,\n    vertexFormat: options.vertexFormat,\n    stRotation: options.stRotation,\n    ellipsoid: options.ellipsoid,\n    granularity: options.granularity,\n    perPositionHeight: options.perPositionHeight,\n    closeTop: options.closeTop,\n    closeBottom: options.closeBottom,\n    offsetAttribute: options.offsetAttribute,\n    arcType: options.arcType,\n  };\n  return new PolygonGeometry(newOptions);\n};\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {PolygonGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nPolygonGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(startingIndex, 0);\n\n  startingIndex = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].packPolygonHierarchy */ .Z.packPolygonHierarchy(\n    value._polygonHierarchy,\n    array,\n    startingIndex\n  );\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].packedLength */ .Z.packedLength;\n\n  _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].pack */ .Z.pack(value._vertexFormat, array, startingIndex);\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._height;\n  array[startingIndex++] = value._extrudedHeight;\n  array[startingIndex++] = value._granularity;\n  array[startingIndex++] = value._stRotation;\n  array[startingIndex++] = value._perPositionHeightExtrude ? 1.0 : 0.0;\n  array[startingIndex++] = value._perPositionHeight ? 1.0 : 0.0;\n  array[startingIndex++] = value._closeTop ? 1.0 : 0.0;\n  array[startingIndex++] = value._closeBottom ? 1.0 : 0.0;\n  array[startingIndex++] = value._shadowVolume ? 1.0 : 0.0;\n  array[startingIndex++] = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(value._offsetAttribute, -1);\n  array[startingIndex++] = value._arcType;\n  array[startingIndex] = value.packedLength;\n\n  return array;\n};\n\nvar scratchEllipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE);\nvar scratchVertexFormat = new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z();\n\n//Only used to avoid inability to default construct.\nvar dummyOptions = {\n  polygonHierarchy: {},\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {PolygonGeometry} [result] The object into which to store the result.\n */\nPolygonGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var polygonHierarchy = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].unpackPolygonHierarchy */ .Z.unpackPolygonHierarchy(\n    array,\n    startingIndex\n  );\n  startingIndex = polygonHierarchy.startingIndex;\n  delete polygonHierarchy.startingIndex;\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchEllipsoid);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].packedLength */ .Z.packedLength;\n\n  var vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchVertexFormat\n  );\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].packedLength */ .Z.packedLength;\n\n  var height = array[startingIndex++];\n  var extrudedHeight = array[startingIndex++];\n  var granularity = array[startingIndex++];\n  var stRotation = array[startingIndex++];\n  var perPositionHeightExtrude = array[startingIndex++] === 1.0;\n  var perPositionHeight = array[startingIndex++] === 1.0;\n  var closeTop = array[startingIndex++] === 1.0;\n  var closeBottom = array[startingIndex++] === 1.0;\n  var shadowVolume = array[startingIndex++] === 1.0;\n  var offsetAttribute = array[startingIndex++];\n  var arcType = array[startingIndex++];\n  var packedLength = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(result)) {\n    result = new PolygonGeometry(dummyOptions);\n  }\n\n  result._polygonHierarchy = polygonHierarchy;\n  result._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(ellipsoid, result._ellipsoid);\n  result._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].clone */ .Z.clone(vertexFormat, result._vertexFormat);\n  result._height = height;\n  result._extrudedHeight = extrudedHeight;\n  result._granularity = granularity;\n  result._stRotation = stRotation;\n  result._perPositionHeightExtrude = perPositionHeightExtrude;\n  result._perPositionHeight = perPositionHeight;\n  result._closeTop = closeTop;\n  result._closeBottom = closeBottom;\n  result._shadowVolume = shadowVolume;\n  result._offsetAttribute =\n    offsetAttribute === -1 ? undefined : offsetAttribute;\n  result._arcType = arcType;\n  result.packedLength = packedLength;\n  return result;\n};\n\n/**\n * Returns the bounding rectangle given the provided options\n *\n * @param {Object} options Object with the following properties:\n * @param {PolygonHierarchy} options.polygonHierarchy A polygon hierarchy that can include holes.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions sampled.\n * @param {ArcType} [options.arcType=ArcType.GEODESIC] The type of line the polygon edges must follow. Valid options are {@link ArcType.GEODESIC} and {@link ArcType.RHUMB}.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Rectangle} [result] An object in which to store the result.\n *\n * @returns {Rectangle} The result rectangle\n */\nPolygonGeometry.computeRectangle = function (options, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].typeOf.object */ .Z.typeOf.object("options", options);\n  _Check_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].typeOf.object */ .Z.typeOf.object("options.polygonHierarchy", options.polygonHierarchy);\n  //>>includeEnd(\'debug\');\n\n  var granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  var arcType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.arcType, _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC);\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (arcType !== _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC && arcType !== _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n      "Invalid arcType. Valid options are ArcType.GEODESIC and ArcType.RHUMB."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var polygonHierarchy = options.polygonHierarchy;\n  var ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].WGS84 */ .Z.WGS84);\n\n  return computeRectangle(\n    polygonHierarchy.positions,\n    ellipsoid,\n    arcType,\n    granularity,\n    result\n  );\n};\n\n/**\n * Computes the geometric representation of a polygon, including its vertices, indices, and a bounding sphere.\n *\n * @param {PolygonGeometry} polygonGeometry A description of the polygon.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nPolygonGeometry.createGeometry = function (polygonGeometry) {\n  var vertexFormat = polygonGeometry._vertexFormat;\n  var ellipsoid = polygonGeometry._ellipsoid;\n  var granularity = polygonGeometry._granularity;\n  var stRotation = polygonGeometry._stRotation;\n  var polygonHierarchy = polygonGeometry._polygonHierarchy;\n  var perPositionHeight = polygonGeometry._perPositionHeight;\n  var closeTop = polygonGeometry._closeTop;\n  var closeBottom = polygonGeometry._closeBottom;\n  var arcType = polygonGeometry._arcType;\n\n  var outerPositions = polygonHierarchy.positions;\n  if (outerPositions.length < 3) {\n    return;\n  }\n\n  var tangentPlane = _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromPoints */ .Z.fromPoints(\n    outerPositions,\n    ellipsoid\n  );\n\n  var results = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].polygonsFromHierarchy */ .Z.polygonsFromHierarchy(\n    polygonHierarchy,\n    tangentPlane.projectPointsOntoPlane.bind(tangentPlane),\n    !perPositionHeight,\n    ellipsoid\n  );\n\n  var hierarchy = results.hierarchy;\n  var polygons = results.polygons;\n\n  if (hierarchy.length === 0) {\n    return;\n  }\n\n  outerPositions = hierarchy[0].outerRing;\n  var boundingRectangle = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].computeBoundingRectangle */ .Z.computeBoundingRectangle(\n    tangentPlane.plane.normal,\n    tangentPlane.projectPointOntoPlane.bind(tangentPlane),\n    outerPositions,\n    stRotation,\n    scratchBoundingRectangle\n  );\n\n  var geometries = [];\n\n  var height = polygonGeometry._height;\n  var extrudedHeight = polygonGeometry._extrudedHeight;\n  var extrude =\n    polygonGeometry._perPositionHeightExtrude ||\n    !_Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(height, extrudedHeight, 0, _Math_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].EPSILON2 */ .Z.EPSILON2);\n\n  var options = {\n    perPositionHeight: perPositionHeight,\n    vertexFormat: vertexFormat,\n    geometry: undefined,\n    tangentPlane: tangentPlane,\n    boundingRectangle: boundingRectangle,\n    ellipsoid: ellipsoid,\n    stRotation: stRotation,\n    bottom: false,\n    top: true,\n    wall: false,\n    extrude: false,\n    arcType: arcType,\n  };\n\n  var i;\n\n  if (extrude) {\n    options.extrude = true;\n    options.top = closeTop;\n    options.bottom = closeBottom;\n    options.shadowVolume = polygonGeometry._shadowVolume;\n    options.offsetAttribute = polygonGeometry._offsetAttribute;\n    for (i = 0; i < polygons.length; i++) {\n      var splitGeometry = createGeometryFromPositionsExtruded(\n        ellipsoid,\n        polygons[i],\n        granularity,\n        hierarchy[i],\n        perPositionHeight,\n        closeTop,\n        closeBottom,\n        vertexFormat,\n        arcType\n      );\n\n      var topAndBottom;\n      if (closeTop && closeBottom) {\n        topAndBottom = splitGeometry.topAndBottom;\n        options.geometry = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].scaleToGeodeticHeightExtruded */ .Z.scaleToGeodeticHeightExtruded(\n          topAndBottom.geometry,\n          height,\n          extrudedHeight,\n          ellipsoid,\n          perPositionHeight\n        );\n      } else if (closeTop) {\n        topAndBottom = splitGeometry.topAndBottom;\n        topAndBottom.geometry.attributes.position.values = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n          topAndBottom.geometry.attributes.position.values,\n          height,\n          ellipsoid,\n          !perPositionHeight\n        );\n        options.geometry = topAndBottom.geometry;\n      } else if (closeBottom) {\n        topAndBottom = splitGeometry.topAndBottom;\n        topAndBottom.geometry.attributes.position.values = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n          topAndBottom.geometry.attributes.position.values,\n          extrudedHeight,\n          ellipsoid,\n          true\n        );\n        options.geometry = topAndBottom.geometry;\n      }\n      if (closeTop || closeBottom) {\n        options.wall = false;\n        topAndBottom.geometry = computeAttributes(options);\n        geometries.push(topAndBottom);\n      }\n\n      var walls = splitGeometry.walls;\n      options.wall = true;\n      for (var k = 0; k < walls.length; k++) {\n        var wall = walls[k];\n        options.geometry = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].scaleToGeodeticHeightExtruded */ .Z.scaleToGeodeticHeightExtruded(\n          wall.geometry,\n          height,\n          extrudedHeight,\n          ellipsoid,\n          perPositionHeight\n        );\n        wall.geometry = computeAttributes(options);\n        geometries.push(wall);\n      }\n    }\n  } else {\n    for (i = 0; i < polygons.length; i++) {\n      var geometryInstance = new _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z({\n        geometry: _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].createGeometryFromPositions */ .Z.createGeometryFromPositions(\n          ellipsoid,\n          polygons[i],\n          granularity,\n          perPositionHeight,\n          vertexFormat,\n          arcType\n        ),\n      });\n      geometryInstance.geometry.attributes.position.values = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n        geometryInstance.geometry.attributes.position.values,\n        height,\n        ellipsoid,\n        !perPositionHeight\n      );\n      options.geometry = geometryInstance.geometry;\n      geometryInstance.geometry = computeAttributes(options);\n\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(polygonGeometry._offsetAttribute)) {\n        var length =\n          geometryInstance.geometry.attributes.position.values.length;\n        var applyOffset = new Uint8Array(length / 3);\n        var offsetValue =\n          polygonGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].NONE */ .Z.NONE\n            ? 0\n            : 1;\n        (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(applyOffset, offsetValue);\n        geometryInstance.geometry.attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z(\n          {\n            componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n            componentsPerAttribute: 1,\n            values: applyOffset,\n          }\n        );\n      }\n\n      geometries.push(geometryInstance);\n    }\n  }\n\n  var geometry = _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].combineInstances */ .Z.combineInstances(geometries)[0];\n  geometry.attributes.position.values = new Float64Array(\n    geometry.attributes.position.values\n  );\n  geometry.indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    geometry.attributes.position.values.length / 3,\n    geometry.indices\n  );\n\n  var attributes = geometry.attributes;\n  var boundingSphere = _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromVertices */ .Z.fromVertices(attributes.position.values);\n\n  if (!vertexFormat.position) {\n    delete attributes.position;\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: geometry.indices,\n    primitiveType: geometry.primitiveType,\n    boundingSphere: boundingSphere,\n    offsetAttribute: polygonGeometry._offsetAttribute,\n  });\n};\n\n/**\n * @private\n */\nPolygonGeometry.createShadowVolume = function (\n  polygonGeometry,\n  minHeightFunc,\n  maxHeightFunc\n) {\n  var granularity = polygonGeometry._granularity;\n  var ellipsoid = polygonGeometry._ellipsoid;\n\n  var minHeight = minHeightFunc(granularity, ellipsoid);\n  var maxHeight = maxHeightFunc(granularity, ellipsoid);\n\n  return new PolygonGeometry({\n    polygonHierarchy: polygonGeometry._polygonHierarchy,\n    ellipsoid: ellipsoid,\n    stRotation: polygonGeometry._stRotation,\n    granularity: granularity,\n    perPositionHeight: false,\n    extrudedHeight: minHeight,\n    height: maxHeight,\n    vertexFormat: _VertexFormat_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].POSITION_ONLY */ .Z.POSITION_ONLY,\n    shadowVolume: true,\n    arcType: polygonGeometry._arcType,\n  });\n};\n\nfunction textureCoordinateRotationPoints(polygonGeometry) {\n  var stRotation = -polygonGeometry._stRotation;\n  if (stRotation === 0.0) {\n    return [0, 0, 0, 1, 1, 0];\n  }\n  var ellipsoid = polygonGeometry._ellipsoid;\n  var positions = polygonGeometry._polygonHierarchy.positions;\n  var boundingRectangle = polygonGeometry.rectangle;\n  return _Geometry_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"]._textureCoordinateRotationPoints */ .Z._textureCoordinateRotationPoints(\n    positions,\n    stRotation,\n    ellipsoid,\n    boundingRectangle\n  );\n}\n\nObject.defineProperties(PolygonGeometry.prototype, {\n  /**\n   * @private\n   */\n  rectangle: {\n    get: function () {\n      if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(this._rectangle)) {\n        var positions = this._polygonHierarchy.positions;\n        this._rectangle = computeRectangle(\n          positions,\n          this._ellipsoid,\n          this._arcType,\n          this._granularity\n        );\n      }\n\n      return this._rectangle;\n    },\n  },\n  /**\n   * For remapping texture coordinates when rendering PolygonGeometries as GroundPrimitives.\n   * @private\n   */\n  textureCoordinateRotationPoints: {\n    get: function () {\n      if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(this._textureCoordinateRotationPoints)) {\n        this._textureCoordinateRotationPoints = textureCoordinateRotationPoints(\n          this\n        );\n      }\n      return this._textureCoordinateRotationPoints;\n    },\n  },\n});\n/* harmony default export */ __webpack_exports__["Z"] = (PolygonGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///70544\n')},38425:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ArcType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11491);\n/* harmony import */ var _arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(32378);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60216);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51688);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(82982);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50491);\n/* harmony import */ var _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(8398);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(57552);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(68201);\n/* harmony import */ var _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(78284);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(97264);\n/* harmony import */ var _Quaternion_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(87811);\n/* harmony import */ var _Queue_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(79120);\n/* harmony import */ var _WindingOrder_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(32441);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nvar PolygonGeometryLibrary = {};\n\nPolygonGeometryLibrary.computeHierarchyPackedLength = function (\n  polygonHierarchy\n) {\n  var numComponents = 0;\n  var stack = [polygonHierarchy];\n  while (stack.length > 0) {\n    var hierarchy = stack.pop();\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(hierarchy)) {\n      continue;\n    }\n\n    numComponents += 2;\n\n    var positions = hierarchy.positions;\n    var holes = hierarchy.holes;\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(positions)) {\n      numComponents += positions.length * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n    }\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(holes)) {\n      var length = holes.length;\n      for (var i = 0; i < length; ++i) {\n        stack.push(holes[i]);\n      }\n    }\n  }\n\n  return numComponents;\n};\n\nPolygonGeometryLibrary.packPolygonHierarchy = function (\n  polygonHierarchy,\n  array,\n  startingIndex\n) {\n  var stack = [polygonHierarchy];\n  while (stack.length > 0) {\n    var hierarchy = stack.pop();\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(hierarchy)) {\n      continue;\n    }\n\n    var positions = hierarchy.positions;\n    var holes = hierarchy.holes;\n\n    array[startingIndex++] = (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(positions) ? positions.length : 0;\n    array[startingIndex++] = (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(holes) ? holes.length : 0;\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(positions)) {\n      var positionsLength = positions.length;\n      for (var i = 0; i < positionsLength; ++i, startingIndex += 3) {\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(positions[i], array, startingIndex);\n      }\n    }\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(holes)) {\n      var holesLength = holes.length;\n      for (var j = 0; j < holesLength; ++j) {\n        stack.push(holes[j]);\n      }\n    }\n  }\n\n  return startingIndex;\n};\n\nPolygonGeometryLibrary.unpackPolygonHierarchy = function (\n  array,\n  startingIndex\n) {\n  var positionsLength = array[startingIndex++];\n  var holesLength = array[startingIndex++];\n\n  var positions = new Array(positionsLength);\n  var holes = holesLength > 0 ? new Array(holesLength) : undefined;\n\n  for (\n    var i = 0;\n    i < positionsLength;\n    ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength\n  ) {\n    positions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  for (var j = 0; j < holesLength; ++j) {\n    holes[j] = PolygonGeometryLibrary.unpackPolygonHierarchy(\n      array,\n      startingIndex\n    );\n    startingIndex = holes[j].startingIndex;\n    delete holes[j].startingIndex;\n  }\n\n  return {\n    positions: positions,\n    holes: holes,\n    startingIndex: startingIndex,\n  };\n};\n\nvar distanceScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nfunction getPointAtDistance(p0, p1, distance, length) {\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(p1, p0, distanceScratch);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    distanceScratch,\n    distance / length,\n    distanceScratch\n  );\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(p0, distanceScratch, distanceScratch);\n  return [distanceScratch.x, distanceScratch.y, distanceScratch.z];\n}\n\nPolygonGeometryLibrary.subdivideLineCount = function (p0, p1, minDistance) {\n  var distance = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].distance */ .Z.distance(p0, p1);\n  var n = distance / minDistance;\n  var countDivide = Math.max(0, Math.ceil(_Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].log2 */ .Z.log2(n)));\n  return Math.pow(2, countDivide);\n};\n\nvar scratchCartographic0 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchCartographic1 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchCartographic2 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchCartesian0 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nPolygonGeometryLibrary.subdivideRhumbLineCount = function (\n  ellipsoid,\n  p0,\n  p1,\n  minDistance\n) {\n  var c0 = ellipsoid.cartesianToCartographic(p0, scratchCartographic0);\n  var c1 = ellipsoid.cartesianToCartographic(p1, scratchCartographic1);\n  var rhumb = new _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(c0, c1, ellipsoid);\n  var n = rhumb.surfaceDistance / minDistance;\n  var countDivide = Math.max(0, Math.ceil(_Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].log2 */ .Z.log2(n)));\n  return Math.pow(2, countDivide);\n};\n\nPolygonGeometryLibrary.subdivideLine = function (p0, p1, minDistance, result) {\n  var numVertices = PolygonGeometryLibrary.subdivideLineCount(\n    p0,\n    p1,\n    minDistance\n  );\n  var length = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].distance */ .Z.distance(p0, p1);\n  var distanceBetweenVertices = length / numVertices;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(result)) {\n    result = [];\n  }\n\n  var positions = result;\n  positions.length = numVertices * 3;\n\n  var index = 0;\n  for (var i = 0; i < numVertices; i++) {\n    var p = getPointAtDistance(p0, p1, i * distanceBetweenVertices, length);\n    positions[index++] = p[0];\n    positions[index++] = p[1];\n    positions[index++] = p[2];\n  }\n\n  return positions;\n};\n\nPolygonGeometryLibrary.subdivideRhumbLine = function (\n  ellipsoid,\n  p0,\n  p1,\n  minDistance,\n  result\n) {\n  var c0 = ellipsoid.cartesianToCartographic(p0, scratchCartographic0);\n  var c1 = ellipsoid.cartesianToCartographic(p1, scratchCartographic1);\n  var rhumb = new _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(c0, c1, ellipsoid);\n\n  var n = rhumb.surfaceDistance / minDistance;\n  var countDivide = Math.max(0, Math.ceil(_Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].log2 */ .Z.log2(n)));\n  var numVertices = Math.pow(2, countDivide);\n  var distanceBetweenVertices = rhumb.surfaceDistance / numVertices;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(result)) {\n    result = [];\n  }\n\n  var positions = result;\n  positions.length = numVertices * 3;\n\n  var index = 0;\n  for (var i = 0; i < numVertices; i++) {\n    var c = rhumb.interpolateUsingSurfaceDistance(\n      i * distanceBetweenVertices,\n      scratchCartographic2\n    );\n    var p = ellipsoid.cartographicToCartesian(c, scratchCartesian0);\n    positions[index++] = p.x;\n    positions[index++] = p.y;\n    positions[index++] = p.z;\n  }\n\n  return positions;\n};\n\nvar scaleToGeodeticHeightN1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scaleToGeodeticHeightN2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scaleToGeodeticHeightP1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scaleToGeodeticHeightP2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nPolygonGeometryLibrary.scaleToGeodeticHeightExtruded = function (\n  geometry,\n  maxHeight,\n  minHeight,\n  ellipsoid,\n  perPositionHeight\n) {\n  ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].WGS84 */ .Z.WGS84);\n\n  var n1 = scaleToGeodeticHeightN1;\n  var n2 = scaleToGeodeticHeightN2;\n  var p = scaleToGeodeticHeightP1;\n  var p2 = scaleToGeodeticHeightP2;\n\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(geometry) &&\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(geometry.attributes) &&\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(geometry.attributes.position)\n  ) {\n    var positions = geometry.attributes.position.values;\n    var length = positions.length / 2;\n\n    for (var i = 0; i < length; i += 3) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(positions, i, p);\n\n      ellipsoid.geodeticSurfaceNormal(p, n1);\n      p2 = ellipsoid.scaleToGeodeticSurface(p, p2);\n      n2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(n1, minHeight, n2);\n      n2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(p2, n2, n2);\n      positions[i + length] = n2.x;\n      positions[i + 1 + length] = n2.y;\n      positions[i + 2 + length] = n2.z;\n\n      if (perPositionHeight) {\n        p2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(p, p2);\n      }\n      n2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(n1, maxHeight, n2);\n      n2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(p2, n2, n2);\n      positions[i] = n2.x;\n      positions[i + 1] = n2.y;\n      positions[i + 2] = n2.z;\n    }\n  }\n  return geometry;\n};\n\nPolygonGeometryLibrary.polygonOutlinesFromHierarchy = function (\n  polygonHierarchy,\n  scaleToEllipsoidSurface,\n  ellipsoid\n) {\n  // create from a polygon hierarchy\n  // Algorithm adapted from http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf\n  var polygons = [];\n  var queue = new _Queue_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n  queue.enqueue(polygonHierarchy);\n  var i;\n  var j;\n  var length;\n  while (queue.length !== 0) {\n    var outerNode = queue.dequeue();\n    var outerRing = outerNode.positions;\n    if (scaleToEllipsoidSurface) {\n      length = outerRing.length;\n      for (i = 0; i < length; i++) {\n        ellipsoid.scaleToGeodeticSurface(outerRing[i], outerRing[i]);\n      }\n    }\n    outerRing = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n      outerRing,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon,\n      true\n    );\n    if (outerRing.length < 3) {\n      continue;\n    }\n\n    var numChildren = outerNode.holes ? outerNode.holes.length : 0;\n    // The outer polygon contains inner polygons\n    for (i = 0; i < numChildren; i++) {\n      var hole = outerNode.holes[i];\n      var holePositions = hole.positions;\n      if (scaleToEllipsoidSurface) {\n        length = holePositions.length;\n        for (j = 0; j < length; ++j) {\n          ellipsoid.scaleToGeodeticSurface(holePositions[j], holePositions[j]);\n        }\n      }\n      holePositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n        holePositions,\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon,\n        true\n      );\n      if (holePositions.length < 3) {\n        continue;\n      }\n      polygons.push(holePositions);\n\n      var numGrandchildren = 0;\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(hole.holes)) {\n        numGrandchildren = hole.holes.length;\n      }\n\n      for (j = 0; j < numGrandchildren; j++) {\n        queue.enqueue(hole.holes[j]);\n      }\n    }\n\n    polygons.push(outerRing);\n  }\n\n  return polygons;\n};\n\nPolygonGeometryLibrary.polygonsFromHierarchy = function (\n  polygonHierarchy,\n  projectPointsTo2D,\n  scaleToEllipsoidSurface,\n  ellipsoid\n) {\n  // create from a polygon hierarchy\n  // Algorithm adapted from http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf\n  var hierarchy = [];\n  var polygons = [];\n\n  var queue = new _Queue_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n  queue.enqueue(polygonHierarchy);\n\n  while (queue.length !== 0) {\n    var outerNode = queue.dequeue();\n    var outerRing = outerNode.positions;\n    var holes = outerNode.holes;\n\n    var i;\n    var length;\n    if (scaleToEllipsoidSurface) {\n      length = outerRing.length;\n      for (i = 0; i < length; i++) {\n        ellipsoid.scaleToGeodeticSurface(outerRing[i], outerRing[i]);\n      }\n    }\n\n    outerRing = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n      outerRing,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon,\n      true\n    );\n    if (outerRing.length < 3) {\n      continue;\n    }\n\n    var positions2D = projectPointsTo2D(outerRing);\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(positions2D)) {\n      continue;\n    }\n    var holeIndices = [];\n\n    var originalWindingOrder = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].computeWindingOrder2D */ .Z.computeWindingOrder2D(\n      positions2D\n    );\n    if (originalWindingOrder === _WindingOrder_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].CLOCKWISE */ .Z.CLOCKWISE) {\n      positions2D.reverse();\n      outerRing = outerRing.slice().reverse();\n    }\n\n    var positions = outerRing.slice();\n    var numChildren = (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(holes) ? holes.length : 0;\n    var polygonHoles = [];\n    var j;\n\n    for (i = 0; i < numChildren; i++) {\n      var hole = holes[i];\n      var holePositions = hole.positions;\n      if (scaleToEllipsoidSurface) {\n        length = holePositions.length;\n        for (j = 0; j < length; ++j) {\n          ellipsoid.scaleToGeodeticSurface(holePositions[j], holePositions[j]);\n        }\n      }\n\n      holePositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n        holePositions,\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon,\n        true\n      );\n      if (holePositions.length < 3) {\n        continue;\n      }\n\n      var holePositions2D = projectPointsTo2D(holePositions);\n      if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(holePositions2D)) {\n        continue;\n      }\n\n      originalWindingOrder = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].computeWindingOrder2D */ .Z.computeWindingOrder2D(\n        holePositions2D\n      );\n      if (originalWindingOrder === _WindingOrder_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].CLOCKWISE */ .Z.CLOCKWISE) {\n        holePositions2D.reverse();\n        holePositions = holePositions.slice().reverse();\n      }\n\n      polygonHoles.push(holePositions);\n      holeIndices.push(positions.length);\n      positions = positions.concat(holePositions);\n      positions2D = positions2D.concat(holePositions2D);\n\n      var numGrandchildren = 0;\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(hole.holes)) {\n        numGrandchildren = hole.holes.length;\n      }\n\n      for (j = 0; j < numGrandchildren; j++) {\n        queue.enqueue(hole.holes[j]);\n      }\n    }\n\n    hierarchy.push({\n      outerRing: outerRing,\n      holes: polygonHoles,\n    });\n    polygons.push({\n      positions: positions,\n      positions2D: positions2D,\n      holes: holeIndices,\n    });\n  }\n\n  return {\n    hierarchy: hierarchy,\n    polygons: polygons,\n  };\n};\n\nvar computeBoundingRectangleCartesian2 = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar computeBoundingRectangleCartesian3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar computeBoundingRectangleQuaternion = new _Quaternion_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z();\nvar computeBoundingRectangleMatrix3 = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z();\nPolygonGeometryLibrary.computeBoundingRectangle = function (\n  planeNormal,\n  projectPointTo2D,\n  positions,\n  angle,\n  result\n) {\n  var rotation = _Quaternion_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(\n    planeNormal,\n    angle,\n    computeBoundingRectangleQuaternion\n  );\n  var textureMatrix = _Matrix3_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].fromQuaternion */ .Z.fromQuaternion(\n    rotation,\n    computeBoundingRectangleMatrix3\n  );\n\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = Number.NEGATIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = Number.NEGATIVE_INFINITY;\n\n  var length = positions.length;\n  for (var i = 0; i < length; ++i) {\n    var p = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(positions[i], computeBoundingRectangleCartesian3);\n    _Matrix3_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].multiplyByVector */ .Z.multiplyByVector(textureMatrix, p, p);\n    var st = projectPointTo2D(p, computeBoundingRectangleCartesian2);\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(st)) {\n      minX = Math.min(minX, st.x);\n      maxX = Math.max(maxX, st.x);\n\n      minY = Math.min(minY, st.y);\n      maxY = Math.max(maxY, st.y);\n    }\n  }\n\n  result.x = minX;\n  result.y = minY;\n  result.width = maxX - minX;\n  result.height = maxY - minY;\n  return result;\n};\n\nPolygonGeometryLibrary.createGeometryFromPositions = function (\n  ellipsoid,\n  polygon,\n  granularity,\n  perPositionHeight,\n  vertexFormat,\n  arcType\n) {\n  var indices = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].triangulate */ .Z.triangulate(polygon.positions2D, polygon.holes);\n\n  /* If polygon is completely unrenderable, just use the first three vertices */\n  if (indices.length < 3) {\n    indices = [0, 1, 2];\n  }\n\n  var positions = polygon.positions;\n\n  if (perPositionHeight) {\n    var length = positions.length;\n    var flattenedPositions = new Array(length * 3);\n    var index = 0;\n    for (var i = 0; i < length; i++) {\n      var p = positions[i];\n      flattenedPositions[index++] = p.x;\n      flattenedPositions[index++] = p.y;\n      flattenedPositions[index++] = p.z;\n    }\n    var geometry = new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      attributes: {\n        position: new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n          componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n          componentsPerAttribute: 3,\n          values: flattenedPositions,\n        }),\n      },\n      indices: indices,\n      primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n    });\n\n    if (vertexFormat.normal) {\n      return _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].computeNormal */ .Z.computeNormal(geometry);\n    }\n\n    return geometry;\n  }\n\n  if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n    return _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].computeSubdivision */ .Z.computeSubdivision(\n      ellipsoid,\n      positions,\n      indices,\n      granularity\n    );\n  } else if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n    return _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].computeRhumbLineSubdivision */ .Z.computeRhumbLineSubdivision(\n      ellipsoid,\n      positions,\n      indices,\n      granularity\n    );\n  }\n};\n\nvar computeWallIndicesSubdivided = [];\nvar p1Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar p2Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nPolygonGeometryLibrary.computeWallGeometry = function (\n  positions,\n  ellipsoid,\n  granularity,\n  perPositionHeight,\n  arcType\n) {\n  var edgePositions;\n  var topEdgeLength;\n  var i;\n  var p1;\n  var p2;\n\n  var length = positions.length;\n  var index = 0;\n\n  if (!perPositionHeight) {\n    var minDistance = _Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].chordLength */ .Z.chordLength(\n      granularity,\n      ellipsoid.maximumRadius\n    );\n\n    var numVertices = 0;\n    if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n      for (i = 0; i < length; i++) {\n        numVertices += PolygonGeometryLibrary.subdivideLineCount(\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance\n        );\n      }\n    } else if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n      for (i = 0; i < length; i++) {\n        numVertices += PolygonGeometryLibrary.subdivideRhumbLineCount(\n          ellipsoid,\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance\n        );\n      }\n    }\n\n    topEdgeLength = (numVertices + length) * 3;\n    edgePositions = new Array(topEdgeLength * 2);\n    for (i = 0; i < length; i++) {\n      p1 = positions[i];\n      p2 = positions[(i + 1) % length];\n\n      var tempPositions;\n      if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n        tempPositions = PolygonGeometryLibrary.subdivideLine(\n          p1,\n          p2,\n          minDistance,\n          computeWallIndicesSubdivided\n        );\n      } else if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n        tempPositions = PolygonGeometryLibrary.subdivideRhumbLine(\n          ellipsoid,\n          p1,\n          p2,\n          minDistance,\n          computeWallIndicesSubdivided\n        );\n      }\n      var tempPositionsLength = tempPositions.length;\n      for (var j = 0; j < tempPositionsLength; ++j, ++index) {\n        edgePositions[index] = tempPositions[j];\n        edgePositions[index + topEdgeLength] = tempPositions[j];\n      }\n\n      edgePositions[index] = p2.x;\n      edgePositions[index + topEdgeLength] = p2.x;\n      ++index;\n\n      edgePositions[index] = p2.y;\n      edgePositions[index + topEdgeLength] = p2.y;\n      ++index;\n\n      edgePositions[index] = p2.z;\n      edgePositions[index + topEdgeLength] = p2.z;\n      ++index;\n    }\n  } else {\n    topEdgeLength = length * 3 * 2;\n    edgePositions = new Array(topEdgeLength * 2);\n    for (i = 0; i < length; i++) {\n      p1 = positions[i];\n      p2 = positions[(i + 1) % length];\n      edgePositions[index] = edgePositions[index + topEdgeLength] = p1.x;\n      ++index;\n      edgePositions[index] = edgePositions[index + topEdgeLength] = p1.y;\n      ++index;\n      edgePositions[index] = edgePositions[index + topEdgeLength] = p1.z;\n      ++index;\n      edgePositions[index] = edgePositions[index + topEdgeLength] = p2.x;\n      ++index;\n      edgePositions[index] = edgePositions[index + topEdgeLength] = p2.y;\n      ++index;\n      edgePositions[index] = edgePositions[index + topEdgeLength] = p2.z;\n      ++index;\n    }\n  }\n\n  length = edgePositions.length;\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    length / 3,\n    length - positions.length * 6\n  );\n  var edgeIndex = 0;\n  length /= 6;\n\n  for (i = 0; i < length; i++) {\n    var UL = i;\n    var UR = UL + 1;\n    var LL = UL + length;\n    var LR = LL + 1;\n\n    p1 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(edgePositions, UL * 3, p1Scratch);\n    p2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(edgePositions, UR * 3, p2Scratch);\n    if (\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n        p1,\n        p2,\n        _Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].EPSILON10 */ .Z.EPSILON10,\n        _Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].EPSILON10 */ .Z.EPSILON10\n      )\n    ) {\n      //skip corner\n      continue;\n    }\n\n    indices[edgeIndex++] = UL;\n    indices[edgeIndex++] = LL;\n    indices[edgeIndex++] = UR;\n    indices[edgeIndex++] = UR;\n    indices[edgeIndex++] = LL;\n    indices[edgeIndex++] = LR;\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    attributes: new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      position: new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n        componentsPerAttribute: 3,\n        values: edgePositions,\n      }),\n    }),\n    indices: indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolygonGeometryLibrary);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///38425\n')},78757:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82982);\n\n\n/**\n * An hierarchy of linear rings which define a polygon and its holes.\n * The holes themselves may also have holes which nest inner polygons.\n * @alias PolygonHierarchy\n * @constructor\n *\n * @param {Cartesian3[]} [positions] A linear ring defining the outer boundary of the polygon or hole.\n * @param {PolygonHierarchy[]} [holes] An array of polygon hierarchies defining holes in the polygon.\n */\nfunction PolygonHierarchy(positions, holes) {\n  /**\n   * A linear ring defining the outer boundary of the polygon or hole.\n   * @type {Cartesian3[]}\n   */\n  this.positions = (0,_defined_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(positions) ? positions : [];\n\n  /**\n   * An array of polygon hierarchies defining holes in the polygon.\n   * @type {PolygonHierarchy[]}\n   */\n  this.holes = (0,_defined_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(holes) ? holes : [];\n}\n/* harmony default export */ __webpack_exports__["Z"] = (PolygonHierarchy);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzg3NTcuanMiLCJtYXBwaW5ncyI6IjtBQUFtQzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsb0JBQW9CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsbUJBQW1CLGdFQUFPOztBQUUxQjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsZUFBZSxnRUFBTztBQUN0QjtBQUNBLHlEQUFlLGdCQUFnQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvUG9seWdvbkhpZXJhcmNoeS5qcz82MTU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcblxuLyoqXG4gKiBBbiBoaWVyYXJjaHkgb2YgbGluZWFyIHJpbmdzIHdoaWNoIGRlZmluZSBhIHBvbHlnb24gYW5kIGl0cyBob2xlcy5cbiAqIFRoZSBob2xlcyB0aGVtc2VsdmVzIG1heSBhbHNvIGhhdmUgaG9sZXMgd2hpY2ggbmVzdCBpbm5lciBwb2x5Z29ucy5cbiAqIEBhbGlhcyBQb2x5Z29uSGllcmFyY2h5XG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge0NhcnRlc2lhbjNbXX0gW3Bvc2l0aW9uc10gQSBsaW5lYXIgcmluZyBkZWZpbmluZyB0aGUgb3V0ZXIgYm91bmRhcnkgb2YgdGhlIHBvbHlnb24gb3IgaG9sZS5cbiAqIEBwYXJhbSB7UG9seWdvbkhpZXJhcmNoeVtdfSBbaG9sZXNdIEFuIGFycmF5IG9mIHBvbHlnb24gaGllcmFyY2hpZXMgZGVmaW5pbmcgaG9sZXMgaW4gdGhlIHBvbHlnb24uXG4gKi9cbmZ1bmN0aW9uIFBvbHlnb25IaWVyYXJjaHkocG9zaXRpb25zLCBob2xlcykge1xuICAvKipcbiAgICogQSBsaW5lYXIgcmluZyBkZWZpbmluZyB0aGUgb3V0ZXIgYm91bmRhcnkgb2YgdGhlIHBvbHlnb24gb3IgaG9sZS5cbiAgICogQHR5cGUge0NhcnRlc2lhbjNbXX1cbiAgICovXG4gIHRoaXMucG9zaXRpb25zID0gZGVmaW5lZChwb3NpdGlvbnMpID8gcG9zaXRpb25zIDogW107XG5cbiAgLyoqXG4gICAqIEFuIGFycmF5IG9mIHBvbHlnb24gaGllcmFyY2hpZXMgZGVmaW5pbmcgaG9sZXMgaW4gdGhlIHBvbHlnb24uXG4gICAqIEB0eXBlIHtQb2x5Z29uSGllcmFyY2h5W119XG4gICAqL1xuICB0aGlzLmhvbGVzID0gZGVmaW5lZChob2xlcykgPyBob2xlcyA6IFtdO1xufVxuZXhwb3J0IGRlZmF1bHQgUG9seWdvbkhpZXJhcmNoeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///78757\n')},29895:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ArcType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11491);\n/* harmony import */ var _arrayFill_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23401);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48243);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50491);\n/* harmony import */ var _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(74744);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(26865);\n/* harmony import */ var _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(87379);\n/* harmony import */ var _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(57552);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(99417);\n/* harmony import */ var _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(38425);\n/* harmony import */ var _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(78284);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(97264);\n/* harmony import */ var _WindingOrder_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(32441);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar createGeometryFromPositionsPositions = [];\nvar createGeometryFromPositionsSubdivided = [];\n\nfunction createGeometryFromPositions(\n  ellipsoid,\n  positions,\n  minDistance,\n  perPositionHeight,\n  arcType\n) {\n  var tangentPlane = _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].fromPoints */ .Z.fromPoints(positions, ellipsoid);\n  var positions2D = tangentPlane.projectPointsOntoPlane(\n    positions,\n    createGeometryFromPositionsPositions\n  );\n\n  var originalWindingOrder = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].computeWindingOrder2D */ .Z.computeWindingOrder2D(positions2D);\n  if (originalWindingOrder === _WindingOrder_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].CLOCKWISE */ .Z.CLOCKWISE) {\n    positions2D.reverse();\n    positions = positions.slice().reverse();\n  }\n\n  var subdividedPositions;\n  var i;\n\n  var length = positions.length;\n  var index = 0;\n\n  if (!perPositionHeight) {\n    var numVertices = 0;\n    if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n      for (i = 0; i < length; i++) {\n        numVertices += _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].subdivideLineCount */ .Z.subdivideLineCount(\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance\n        );\n      }\n    } else if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n      for (i = 0; i < length; i++) {\n        numVertices += _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].subdivideRhumbLineCount */ .Z.subdivideRhumbLineCount(\n          ellipsoid,\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance\n        );\n      }\n    }\n    subdividedPositions = new Float64Array(numVertices * 3);\n    for (i = 0; i < length; i++) {\n      var tempPositions;\n      if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n        tempPositions = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].subdivideLine */ .Z.subdivideLine(\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance,\n          createGeometryFromPositionsSubdivided\n        );\n      } else if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n        tempPositions = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].subdivideRhumbLine */ .Z.subdivideRhumbLine(\n          ellipsoid,\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance,\n          createGeometryFromPositionsSubdivided\n        );\n      }\n      var tempPositionsLength = tempPositions.length;\n      for (var j = 0; j < tempPositionsLength; ++j) {\n        subdividedPositions[index++] = tempPositions[j];\n      }\n    }\n  } else {\n    subdividedPositions = new Float64Array(length * 2 * 3);\n    for (i = 0; i < length; i++) {\n      var p0 = positions[i];\n      var p1 = positions[(i + 1) % length];\n      subdividedPositions[index++] = p0.x;\n      subdividedPositions[index++] = p0.y;\n      subdividedPositions[index++] = p0.z;\n      subdividedPositions[index++] = p1.x;\n      subdividedPositions[index++] = p1.y;\n      subdividedPositions[index++] = p1.z;\n    }\n  }\n\n  length = subdividedPositions.length / 3;\n  var indicesSize = length * 2;\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createTypedArray */ .Z.createTypedArray(length, indicesSize);\n  index = 0;\n  for (i = 0; i < length - 1; i++) {\n    indices[index++] = i;\n    indices[index++] = i + 1;\n  }\n  indices[index++] = length - 1;\n  indices[index++] = 0;\n\n  return new _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    geometry: new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      attributes: new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n        position: new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n          componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DOUBLE */ .Z.DOUBLE,\n          componentsPerAttribute: 3,\n          values: subdividedPositions,\n        }),\n      }),\n      indices: indices,\n      primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].LINES */ .Z.LINES,\n    }),\n  });\n}\n\nfunction createGeometryFromPositionsExtruded(\n  ellipsoid,\n  positions,\n  minDistance,\n  perPositionHeight,\n  arcType\n) {\n  var tangentPlane = _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].fromPoints */ .Z.fromPoints(positions, ellipsoid);\n  var positions2D = tangentPlane.projectPointsOntoPlane(\n    positions,\n    createGeometryFromPositionsPositions\n  );\n\n  var originalWindingOrder = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].computeWindingOrder2D */ .Z.computeWindingOrder2D(positions2D);\n  if (originalWindingOrder === _WindingOrder_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].CLOCKWISE */ .Z.CLOCKWISE) {\n    positions2D.reverse();\n    positions = positions.slice().reverse();\n  }\n\n  var subdividedPositions;\n  var i;\n\n  var length = positions.length;\n  var corners = new Array(length);\n  var index = 0;\n\n  if (!perPositionHeight) {\n    var numVertices = 0;\n    if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n      for (i = 0; i < length; i++) {\n        numVertices += _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].subdivideLineCount */ .Z.subdivideLineCount(\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance\n        );\n      }\n    } else if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n      for (i = 0; i < length; i++) {\n        numVertices += _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].subdivideRhumbLineCount */ .Z.subdivideRhumbLineCount(\n          ellipsoid,\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance\n        );\n      }\n    }\n\n    subdividedPositions = new Float64Array(numVertices * 3 * 2);\n    for (i = 0; i < length; ++i) {\n      corners[i] = index / 3;\n      var tempPositions;\n      if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n        tempPositions = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].subdivideLine */ .Z.subdivideLine(\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance,\n          createGeometryFromPositionsSubdivided\n        );\n      } else if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n        tempPositions = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].subdivideRhumbLine */ .Z.subdivideRhumbLine(\n          ellipsoid,\n          positions[i],\n          positions[(i + 1) % length],\n          minDistance,\n          createGeometryFromPositionsSubdivided\n        );\n      }\n      var tempPositionsLength = tempPositions.length;\n      for (var j = 0; j < tempPositionsLength; ++j) {\n        subdividedPositions[index++] = tempPositions[j];\n      }\n    }\n  } else {\n    subdividedPositions = new Float64Array(length * 2 * 3 * 2);\n    for (i = 0; i < length; ++i) {\n      corners[i] = index / 3;\n      var p0 = positions[i];\n      var p1 = positions[(i + 1) % length];\n\n      subdividedPositions[index++] = p0.x;\n      subdividedPositions[index++] = p0.y;\n      subdividedPositions[index++] = p0.z;\n      subdividedPositions[index++] = p1.x;\n      subdividedPositions[index++] = p1.y;\n      subdividedPositions[index++] = p1.z;\n    }\n  }\n\n  length = subdividedPositions.length / (3 * 2);\n  var cornersLength = corners.length;\n\n  var indicesSize = (length * 2 + cornersLength) * 2;\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    length + cornersLength,\n    indicesSize\n  );\n\n  index = 0;\n  for (i = 0; i < length; ++i) {\n    indices[index++] = i;\n    indices[index++] = (i + 1) % length;\n    indices[index++] = i + length;\n    indices[index++] = ((i + 1) % length) + length;\n  }\n\n  for (i = 0; i < cornersLength; i++) {\n    var corner = corners[i];\n    indices[index++] = corner;\n    indices[index++] = corner + length;\n  }\n\n  return new _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    geometry: new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      attributes: new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n        position: new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n          componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DOUBLE */ .Z.DOUBLE,\n          componentsPerAttribute: 3,\n          values: subdividedPositions,\n        }),\n      }),\n      indices: indices,\n      primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].LINES */ .Z.LINES,\n    }),\n  });\n}\n\n/**\n * A description of the outline of a polygon on the ellipsoid. The polygon is defined by a polygon hierarchy.\n *\n * @alias PolygonOutlineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {PolygonHierarchy} options.polygonHierarchy A polygon hierarchy that can include holes.\n * @param {Number} [options.height=0.0] The distance in meters between the polygon and the ellipsoid surface.\n * @param {Number} [options.extrudedHeight] The distance in meters between the polygon\'s extruded face and the ellipsoid surface.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Boolean} [options.perPositionHeight=false] Use the height of options.positions for each position instead of using options.height to determine the height.\n * @param {ArcType} [options.arcType=ArcType.GEODESIC] The type of path the outline must follow. Valid options are {@link ArcType.GEODESIC} and {@link ArcType.RHUMB}.\n *\n * @see PolygonOutlineGeometry#createGeometry\n * @see PolygonOutlineGeometry#fromPositions\n *\n * @example\n * // 1. create a polygon outline from points\n * var polygon = new Cesium.PolygonOutlineGeometry({\n *   polygonHierarchy : new Cesium.PolygonHierarchy(\n *     Cesium.Cartesian3.fromDegreesArray([\n *       -72.0, 40.0,\n *       -70.0, 35.0,\n *       -75.0, 30.0,\n *       -70.0, 30.0,\n *       -68.0, 40.0\n *     ])\n *   )\n * });\n * var geometry = Cesium.PolygonOutlineGeometry.createGeometry(polygon);\n *\n * // 2. create a nested polygon with holes outline\n * var polygonWithHole = new Cesium.PolygonOutlineGeometry({\n *   polygonHierarchy : new Cesium.PolygonHierarchy(\n *     Cesium.Cartesian3.fromDegreesArray([\n *       -109.0, 30.0,\n *       -95.0, 30.0,\n *       -95.0, 40.0,\n *       -109.0, 40.0\n *     ]),\n *     [new Cesium.PolygonHierarchy(\n *       Cesium.Cartesian3.fromDegreesArray([\n *         -107.0, 31.0,\n *         -107.0, 39.0,\n *         -97.0, 39.0,\n *         -97.0, 31.0\n *       ]),\n *       [new Cesium.PolygonHierarchy(\n *         Cesium.Cartesian3.fromDegreesArray([\n *           -105.0, 33.0,\n *           -99.0, 33.0,\n *           -99.0, 37.0,\n *           -105.0, 37.0\n *         ]),\n *         [new Cesium.PolygonHierarchy(\n *           Cesium.Cartesian3.fromDegreesArray([\n *             -103.0, 34.0,\n *             -101.0, 34.0,\n *             -101.0, 36.0,\n *             -103.0, 36.0\n *           ])\n *         )]\n *       )]\n *     )]\n *   )\n * });\n * var geometry = Cesium.PolygonOutlineGeometry.createGeometry(polygonWithHole);\n *\n * // 3. create extruded polygon outline\n * var extrudedPolygon = new Cesium.PolygonOutlineGeometry({\n *   polygonHierarchy : new Cesium.PolygonHierarchy(\n *     Cesium.Cartesian3.fromDegreesArray([\n *       -72.0, 40.0,\n *       -70.0, 35.0,\n *       -75.0, 30.0,\n *       -70.0, 30.0,\n *       -68.0, 40.0\n *     ])\n *   ),\n *   extrudedHeight: 300000\n * });\n * var geometry = Cesium.PolygonOutlineGeometry.createGeometry(extrudedPolygon);\n */\nfunction PolygonOutlineGeometry(options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("options", options);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("options.polygonHierarchy", options.polygonHierarchy);\n\n  if (options.perPositionHeight && (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(options.height)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "Cannot use both options.perPositionHeight and options.height"\n    );\n  }\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(options.arcType) &&\n    options.arcType !== _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC &&\n    options.arcType !== _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "Invalid arcType. Valid options are ArcType.GEODESIC and ArcType.RHUMB."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var polygonHierarchy = options.polygonHierarchy;\n  var ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].WGS84 */ .Z.WGS84);\n  var granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  var perPositionHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.perPositionHeight, false);\n  var perPositionHeightExtrude =\n    perPositionHeight && (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(options.extrudedHeight);\n  var arcType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.arcType, _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC);\n\n  var height = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.height, 0.0);\n  var extrudedHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.extrudedHeight, height);\n\n  if (!perPositionHeightExtrude) {\n    var h = Math.max(height, extrudedHeight);\n    extrudedHeight = Math.min(height, extrudedHeight);\n    height = h;\n  }\n\n  this._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(ellipsoid);\n  this._granularity = granularity;\n  this._height = height;\n  this._extrudedHeight = extrudedHeight;\n  this._arcType = arcType;\n  this._polygonHierarchy = polygonHierarchy;\n  this._perPositionHeight = perPositionHeight;\n  this._perPositionHeightExtrude = perPositionHeightExtrude;\n  this._offsetAttribute = options.offsetAttribute;\n  this._workerName = "createPolygonOutlineGeometry";\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength =\n    _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].computeHierarchyPackedLength */ .Z.computeHierarchyPackedLength(polygonHierarchy) +\n    _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].packedLength */ .Z.packedLength +\n    8;\n}\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {PolygonOutlineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nPolygonOutlineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startingIndex, 0);\n\n  startingIndex = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].packPolygonHierarchy */ .Z.packPolygonHierarchy(\n    value._polygonHierarchy,\n    array,\n    startingIndex\n  );\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._height;\n  array[startingIndex++] = value._extrudedHeight;\n  array[startingIndex++] = value._granularity;\n  array[startingIndex++] = value._perPositionHeightExtrude ? 1.0 : 0.0;\n  array[startingIndex++] = value._perPositionHeight ? 1.0 : 0.0;\n  array[startingIndex++] = value._arcType;\n  array[startingIndex++] = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(value._offsetAttribute, -1);\n  array[startingIndex] = value.packedLength;\n\n  return array;\n};\n\nvar scratchEllipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE);\nvar dummyOptions = {\n  polygonHierarchy: {},\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {PolygonOutlineGeometry} [result] The object into which to store the result.\n * @returns {PolygonOutlineGeometry} The modified result parameter or a new PolygonOutlineGeometry instance if one was not provided.\n */\nPolygonOutlineGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var polygonHierarchy = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].unpackPolygonHierarchy */ .Z.unpackPolygonHierarchy(\n    array,\n    startingIndex\n  );\n  startingIndex = polygonHierarchy.startingIndex;\n  delete polygonHierarchy.startingIndex;\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchEllipsoid);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].packedLength */ .Z.packedLength;\n\n  var height = array[startingIndex++];\n  var extrudedHeight = array[startingIndex++];\n  var granularity = array[startingIndex++];\n  var perPositionHeightExtrude = array[startingIndex++] === 1.0;\n  var perPositionHeight = array[startingIndex++] === 1.0;\n  var arcType = array[startingIndex++];\n  var offsetAttribute = array[startingIndex++];\n  var packedLength = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(result)) {\n    result = new PolygonOutlineGeometry(dummyOptions);\n  }\n\n  result._polygonHierarchy = polygonHierarchy;\n  result._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(ellipsoid, result._ellipsoid);\n  result._height = height;\n  result._extrudedHeight = extrudedHeight;\n  result._granularity = granularity;\n  result._perPositionHeight = perPositionHeight;\n  result._perPositionHeightExtrude = perPositionHeightExtrude;\n  result._arcType = arcType;\n  result._offsetAttribute =\n    offsetAttribute === -1 ? undefined : offsetAttribute;\n  result.packedLength = packedLength;\n\n  return result;\n};\n\n/**\n * A description of a polygon outline from an array of positions.\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of positions that defined the corner points of the polygon.\n * @param {Number} [options.height=0.0] The height of the polygon.\n * @param {Number} [options.extrudedHeight] The height of the polygon extrusion.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Boolean} [options.perPositionHeight=false] Use the height of options.positions for each position instead of using options.height to determine the height.\n * @param {ArcType} [options.arcType=ArcType.GEODESIC] The type of path the outline must follow. Valid options are {@link LinkType.GEODESIC} and {@link ArcType.RHUMB}.\n * @returns {PolygonOutlineGeometry}\n *\n *\n * @example\n * // create a polygon from points\n * var polygon = Cesium.PolygonOutlineGeometry.fromPositions({\n *   positions : Cesium.Cartesian3.fromDegreesArray([\n *     -72.0, 40.0,\n *     -70.0, 35.0,\n *     -75.0, 30.0,\n *     -70.0, 30.0,\n *     -68.0, 40.0\n *   ])\n * });\n * var geometry = Cesium.PolygonOutlineGeometry.createGeometry(polygon);\n *\n * @see PolygonOutlineGeometry#createGeometry\n */\nPolygonOutlineGeometry.fromPositions = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("options.positions", options.positions);\n  //>>includeEnd(\'debug\');\n\n  var newOptions = {\n    polygonHierarchy: {\n      positions: options.positions,\n    },\n    height: options.height,\n    extrudedHeight: options.extrudedHeight,\n    ellipsoid: options.ellipsoid,\n    granularity: options.granularity,\n    perPositionHeight: options.perPositionHeight,\n    arcType: options.arcType,\n    offsetAttribute: options.offsetAttribute,\n  };\n  return new PolygonOutlineGeometry(newOptions);\n};\n\n/**\n * Computes the geometric representation of a polygon outline, including its vertices, indices, and a bounding sphere.\n *\n * @param {PolygonOutlineGeometry} polygonGeometry A description of the polygon outline.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nPolygonOutlineGeometry.createGeometry = function (polygonGeometry) {\n  var ellipsoid = polygonGeometry._ellipsoid;\n  var granularity = polygonGeometry._granularity;\n  var polygonHierarchy = polygonGeometry._polygonHierarchy;\n  var perPositionHeight = polygonGeometry._perPositionHeight;\n  var arcType = polygonGeometry._arcType;\n\n  var polygons = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].polygonOutlinesFromHierarchy */ .Z.polygonOutlinesFromHierarchy(\n    polygonHierarchy,\n    !perPositionHeight,\n    ellipsoid\n  );\n\n  if (polygons.length === 0) {\n    return undefined;\n  }\n\n  var geometryInstance;\n  var geometries = [];\n  var minDistance = _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].chordLength */ .Z.chordLength(\n    granularity,\n    ellipsoid.maximumRadius\n  );\n\n  var height = polygonGeometry._height;\n  var extrudedHeight = polygonGeometry._extrudedHeight;\n  var extrude =\n    polygonGeometry._perPositionHeightExtrude ||\n    !_Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(height, extrudedHeight, 0, _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].EPSILON2 */ .Z.EPSILON2);\n  var offsetValue;\n  var i;\n  if (extrude) {\n    for (i = 0; i < polygons.length; i++) {\n      geometryInstance = createGeometryFromPositionsExtruded(\n        ellipsoid,\n        polygons[i],\n        minDistance,\n        perPositionHeight,\n        arcType\n      );\n      geometryInstance.geometry = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].scaleToGeodeticHeightExtruded */ .Z.scaleToGeodeticHeightExtruded(\n        geometryInstance.geometry,\n        height,\n        extrudedHeight,\n        ellipsoid,\n        perPositionHeight\n      );\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(polygonGeometry._offsetAttribute)) {\n        var size =\n          geometryInstance.geometry.attributes.position.values.length / 3;\n        var offsetAttribute = new Uint8Array(size);\n        if (polygonGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TOP */ .Z.TOP) {\n          offsetAttribute = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(offsetAttribute, 1, 0, size / 2);\n        } else {\n          offsetValue =\n            polygonGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].NONE */ .Z.NONE\n              ? 0\n              : 1;\n          offsetAttribute = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(offsetAttribute, offsetValue);\n        }\n\n        geometryInstance.geometry.attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n          {\n            componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n            componentsPerAttribute: 1,\n            values: offsetAttribute,\n          }\n        );\n      }\n      geometries.push(geometryInstance);\n    }\n  } else {\n    for (i = 0; i < polygons.length; i++) {\n      geometryInstance = createGeometryFromPositions(\n        ellipsoid,\n        polygons[i],\n        minDistance,\n        perPositionHeight,\n        arcType\n      );\n      geometryInstance.geometry.attributes.position.values = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n        geometryInstance.geometry.attributes.position.values,\n        height,\n        ellipsoid,\n        !perPositionHeight\n      );\n\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(polygonGeometry._offsetAttribute)) {\n        var length =\n          geometryInstance.geometry.attributes.position.values.length;\n        var applyOffset = new Uint8Array(length / 3);\n        offsetValue =\n          polygonGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].NONE */ .Z.NONE\n            ? 0\n            : 1;\n        (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(applyOffset, offsetValue);\n        geometryInstance.geometry.attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n          {\n            componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n            componentsPerAttribute: 1,\n            values: applyOffset,\n          }\n        );\n      }\n\n      geometries.push(geometryInstance);\n    }\n  }\n\n  var geometry = _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].combineInstances */ .Z.combineInstances(geometries)[0];\n  var boundingSphere = _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromVertices */ .Z.fromVertices(\n    geometry.attributes.position.values\n  );\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    attributes: geometry.attributes,\n    indices: geometry.indices,\n    primitiveType: geometry.primitiveType,\n    boundingSphere: boundingSphere,\n    offsetAttribute: polygonGeometry._offsetAttribute,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolygonOutlineGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29895\n')},78284:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ThirdParty_earcut_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3733);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(51688);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(82982);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50491);\n/* harmony import */ var _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(8398);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(13616);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(99417);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(97264);\n/* harmony import */ var _WindingOrder_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(32441);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar scaleToGeodeticHeightN = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scaleToGeodeticHeightP = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n/**\n * @private\n */\nvar PolygonPipeline = {};\n\n/**\n * @exception {DeveloperError} At least three positions are required.\n */\nPolygonPipeline.computeArea2D = function (positions) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].defined */ .Z.defined("positions", positions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals(\n    "positions.length",\n    positions.length,\n    3\n  );\n  //>>includeEnd(\'debug\');\n\n  var length = positions.length;\n  var area = 0.0;\n\n  for (var i0 = length - 1, i1 = 0; i1 < length; i0 = i1++) {\n    var v0 = positions[i0];\n    var v1 = positions[i1];\n\n    area += v0.x * v1.y - v1.x * v0.y;\n  }\n\n  return area * 0.5;\n};\n\n/**\n * @returns {WindingOrder} The winding order.\n *\n * @exception {DeveloperError} At least three positions are required.\n */\nPolygonPipeline.computeWindingOrder2D = function (positions) {\n  var area = PolygonPipeline.computeArea2D(positions);\n  return area > 0.0 ? _WindingOrder_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].COUNTER_CLOCKWISE */ .Z.COUNTER_CLOCKWISE : _WindingOrder_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].CLOCKWISE */ .Z.CLOCKWISE;\n};\n\n/**\n * Triangulate a polygon.\n *\n * @param {Cartesian2[]} positions Cartesian2 array containing the vertices of the polygon\n * @param {Number[]} [holes] An array of the staring indices of the holes.\n * @returns {Number[]} Index array representing triangles that fill the polygon\n */\nPolygonPipeline.triangulate = function (positions, holes) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].defined */ .Z.defined("positions", positions);\n  //>>includeEnd(\'debug\');\n\n  var flattenedPositions = _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].packArray */ .Z.packArray(positions);\n  return (0,_ThirdParty_earcut_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(flattenedPositions, holes, 2);\n};\n\nvar subdivisionV0Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar subdivisionV1Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar subdivisionV2Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar subdivisionS0Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar subdivisionS1Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar subdivisionS2Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar subdivisionMidScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n/**\n * Subdivides positions and raises points to the surface of the ellipsoid.\n *\n * @param {Ellipsoid} ellipsoid The ellipsoid the polygon in on.\n * @param {Cartesian3[]} positions An array of {@link Cartesian3} positions of the polygon.\n * @param {Number[]} indices An array of indices that determines the triangles in the polygon.\n * @param {Number} [granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n *\n * @exception {DeveloperError} At least three indices are required.\n * @exception {DeveloperError} The number of indices must be divisable by three.\n * @exception {DeveloperError} Granularity must be greater than zero.\n */\nPolygonPipeline.computeSubdivision = function (\n  ellipsoid,\n  positions,\n  indices,\n  granularity\n) {\n  granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(granularity, _Math_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.object */ .Z.typeOf.object("ellipsoid", ellipsoid);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].defined */ .Z.defined("positions", positions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].defined */ .Z.defined("indices", indices);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("indices.length", indices.length, 3);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number.equals */ .Z.typeOf.number.equals("indices.length % 3", "0", indices.length % 3, 0);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("granularity", granularity, 0.0);\n  //>>includeEnd(\'debug\');\n\n  // triangles that need (or might need) to be subdivided.\n  var triangles = indices.slice(0);\n\n  // New positions due to edge splits are appended to the positions list.\n  var i;\n  var length = positions.length;\n  var subdividedPositions = new Array(length * 3);\n  var q = 0;\n  for (i = 0; i < length; i++) {\n    var item = positions[i];\n    subdividedPositions[q++] = item.x;\n    subdividedPositions[q++] = item.y;\n    subdividedPositions[q++] = item.z;\n  }\n\n  var subdividedIndices = [];\n\n  // Used to make sure shared edges are not split more than once.\n  var edges = {};\n\n  var radius = ellipsoid.maximumRadius;\n  var minDistance = _Math_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].chordLength */ .Z.chordLength(granularity, radius);\n  var minDistanceSqrd = minDistance * minDistance;\n\n  while (triangles.length > 0) {\n    var i2 = triangles.pop();\n    var i1 = triangles.pop();\n    var i0 = triangles.pop();\n\n    var v0 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromArray */ .Z.fromArray(\n      subdividedPositions,\n      i0 * 3,\n      subdivisionV0Scratch\n    );\n    var v1 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromArray */ .Z.fromArray(\n      subdividedPositions,\n      i1 * 3,\n      subdivisionV1Scratch\n    );\n    var v2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromArray */ .Z.fromArray(\n      subdividedPositions,\n      i2 * 3,\n      subdivisionV2Scratch\n    );\n\n    var s0 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].normalize */ .Z.normalize(v0, subdivisionS0Scratch),\n      radius,\n      subdivisionS0Scratch\n    );\n    var s1 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].normalize */ .Z.normalize(v1, subdivisionS1Scratch),\n      radius,\n      subdivisionS1Scratch\n    );\n    var s2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].normalize */ .Z.normalize(v2, subdivisionS2Scratch),\n      radius,\n      subdivisionS2Scratch\n    );\n\n    var g0 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(s0, s1, subdivisionMidScratch)\n    );\n    var g1 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(s1, s2, subdivisionMidScratch)\n    );\n    var g2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(s2, s0, subdivisionMidScratch)\n    );\n\n    var max = Math.max(g0, g1, g2);\n    var edge;\n    var mid;\n\n    // if the max length squared of a triangle edge is greater than the chord length of squared\n    // of the granularity, subdivide the triangle\n    if (max > minDistanceSqrd) {\n      if (g0 === max) {\n        edge = Math.min(i0, i1) + " " + Math.max(i0, i1);\n\n        i = edges[edge];\n        if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(i)) {\n          mid = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(v0, v1, subdivisionMidScratch);\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(mid, 0.5, mid);\n          subdividedPositions.push(mid.x, mid.y, mid.z);\n          i = subdividedPositions.length / 3 - 1;\n          edges[edge] = i;\n        }\n\n        triangles.push(i0, i, i2);\n        triangles.push(i, i1, i2);\n      } else if (g1 === max) {\n        edge = Math.min(i1, i2) + " " + Math.max(i1, i2);\n\n        i = edges[edge];\n        if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(i)) {\n          mid = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(v1, v2, subdivisionMidScratch);\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(mid, 0.5, mid);\n          subdividedPositions.push(mid.x, mid.y, mid.z);\n          i = subdividedPositions.length / 3 - 1;\n          edges[edge] = i;\n        }\n\n        triangles.push(i1, i, i0);\n        triangles.push(i, i2, i0);\n      } else if (g2 === max) {\n        edge = Math.min(i2, i0) + " " + Math.max(i2, i0);\n\n        i = edges[edge];\n        if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(i)) {\n          mid = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(v2, v0, subdivisionMidScratch);\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(mid, 0.5, mid);\n          subdividedPositions.push(mid.x, mid.y, mid.z);\n          i = subdividedPositions.length / 3 - 1;\n          edges[edge] = i;\n        }\n\n        triangles.push(i2, i, i1);\n        triangles.push(i, i0, i1);\n      }\n    } else {\n      subdividedIndices.push(i0);\n      subdividedIndices.push(i1);\n      subdividedIndices.push(i2);\n    }\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    attributes: {\n      position: new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n        componentsPerAttribute: 3,\n        values: subdividedPositions,\n      }),\n    },\n    indices: subdividedIndices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n  });\n};\n\nvar subdivisionC0Scratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar subdivisionC1Scratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar subdivisionC2Scratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar subdivisionCartographicScratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\n/**\n * Subdivides positions on rhumb lines and raises points to the surface of the ellipsoid.\n *\n * @param {Ellipsoid} ellipsoid The ellipsoid the polygon in on.\n * @param {Cartesian3[]} positions An array of {@link Cartesian3} positions of the polygon.\n * @param {Number[]} indices An array of indices that determines the triangles in the polygon.\n * @param {Number} [granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n *\n * @exception {DeveloperError} At least three indices are required.\n * @exception {DeveloperError} The number of indices must be divisable by three.\n * @exception {DeveloperError} Granularity must be greater than zero.\n */\nPolygonPipeline.computeRhumbLineSubdivision = function (\n  ellipsoid,\n  positions,\n  indices,\n  granularity\n) {\n  granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(granularity, _Math_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.object */ .Z.typeOf.object("ellipsoid", ellipsoid);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].defined */ .Z.defined("positions", positions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].defined */ .Z.defined("indices", indices);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("indices.length", indices.length, 3);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number.equals */ .Z.typeOf.number.equals("indices.length % 3", "0", indices.length % 3, 0);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("granularity", granularity, 0.0);\n  //>>includeEnd(\'debug\');\n\n  // triangles that need (or might need) to be subdivided.\n  var triangles = indices.slice(0);\n\n  // New positions due to edge splits are appended to the positions list.\n  var i;\n  var length = positions.length;\n  var subdividedPositions = new Array(length * 3);\n  var q = 0;\n  for (i = 0; i < length; i++) {\n    var item = positions[i];\n    subdividedPositions[q++] = item.x;\n    subdividedPositions[q++] = item.y;\n    subdividedPositions[q++] = item.z;\n  }\n\n  var subdividedIndices = [];\n\n  // Used to make sure shared edges are not split more than once.\n  var edges = {};\n\n  var radius = ellipsoid.maximumRadius;\n  var minDistance = _Math_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].chordLength */ .Z.chordLength(granularity, radius);\n\n  var rhumb0 = new _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(undefined, undefined, ellipsoid);\n  var rhumb1 = new _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(undefined, undefined, ellipsoid);\n  var rhumb2 = new _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(undefined, undefined, ellipsoid);\n\n  while (triangles.length > 0) {\n    var i2 = triangles.pop();\n    var i1 = triangles.pop();\n    var i0 = triangles.pop();\n\n    var v0 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromArray */ .Z.fromArray(\n      subdividedPositions,\n      i0 * 3,\n      subdivisionV0Scratch\n    );\n    var v1 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromArray */ .Z.fromArray(\n      subdividedPositions,\n      i1 * 3,\n      subdivisionV1Scratch\n    );\n    var v2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromArray */ .Z.fromArray(\n      subdividedPositions,\n      i2 * 3,\n      subdivisionV2Scratch\n    );\n\n    var c0 = ellipsoid.cartesianToCartographic(v0, subdivisionC0Scratch);\n    var c1 = ellipsoid.cartesianToCartographic(v1, subdivisionC1Scratch);\n    var c2 = ellipsoid.cartesianToCartographic(v2, subdivisionC2Scratch);\n\n    rhumb0.setEndPoints(c0, c1);\n    var g0 = rhumb0.surfaceDistance;\n    rhumb1.setEndPoints(c1, c2);\n    var g1 = rhumb1.surfaceDistance;\n    rhumb2.setEndPoints(c2, c0);\n    var g2 = rhumb2.surfaceDistance;\n\n    var max = Math.max(g0, g1, g2);\n    var edge;\n    var mid;\n    var midHeight;\n    var midCartesian3;\n\n    // if the max length squared of a triangle edge is greater than granularity, subdivide the triangle\n    if (max > minDistance) {\n      if (g0 === max) {\n        edge = Math.min(i0, i1) + " " + Math.max(i0, i1);\n\n        i = edges[edge];\n        if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(i)) {\n          mid = rhumb0.interpolateUsingFraction(\n            0.5,\n            subdivisionCartographicScratch\n          );\n          midHeight = (c0.height + c1.height) * 0.5;\n          midCartesian3 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromRadians */ .Z.fromRadians(\n            mid.longitude,\n            mid.latitude,\n            midHeight,\n            ellipsoid,\n            subdivisionMidScratch\n          );\n          subdividedPositions.push(\n            midCartesian3.x,\n            midCartesian3.y,\n            midCartesian3.z\n          );\n          i = subdividedPositions.length / 3 - 1;\n          edges[edge] = i;\n        }\n\n        triangles.push(i0, i, i2);\n        triangles.push(i, i1, i2);\n      } else if (g1 === max) {\n        edge = Math.min(i1, i2) + " " + Math.max(i1, i2);\n\n        i = edges[edge];\n        if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(i)) {\n          mid = rhumb1.interpolateUsingFraction(\n            0.5,\n            subdivisionCartographicScratch\n          );\n          midHeight = (c1.height + c2.height) * 0.5;\n          midCartesian3 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromRadians */ .Z.fromRadians(\n            mid.longitude,\n            mid.latitude,\n            midHeight,\n            ellipsoid,\n            subdivisionMidScratch\n          );\n          subdividedPositions.push(\n            midCartesian3.x,\n            midCartesian3.y,\n            midCartesian3.z\n          );\n          i = subdividedPositions.length / 3 - 1;\n          edges[edge] = i;\n        }\n\n        triangles.push(i1, i, i0);\n        triangles.push(i, i2, i0);\n      } else if (g2 === max) {\n        edge = Math.min(i2, i0) + " " + Math.max(i2, i0);\n\n        i = edges[edge];\n        if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(i)) {\n          mid = rhumb2.interpolateUsingFraction(\n            0.5,\n            subdivisionCartographicScratch\n          );\n          midHeight = (c2.height + c0.height) * 0.5;\n          midCartesian3 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromRadians */ .Z.fromRadians(\n            mid.longitude,\n            mid.latitude,\n            midHeight,\n            ellipsoid,\n            subdivisionMidScratch\n          );\n          subdividedPositions.push(\n            midCartesian3.x,\n            midCartesian3.y,\n            midCartesian3.z\n          );\n          i = subdividedPositions.length / 3 - 1;\n          edges[edge] = i;\n        }\n\n        triangles.push(i2, i, i1);\n        triangles.push(i, i0, i1);\n      }\n    } else {\n      subdividedIndices.push(i0);\n      subdividedIndices.push(i1);\n      subdividedIndices.push(i2);\n    }\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    attributes: {\n      position: new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n        componentsPerAttribute: 3,\n        values: subdividedPositions,\n      }),\n    },\n    indices: subdividedIndices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n  });\n};\n\n/**\n * Scales each position of a geometry\'s position attribute to a height, in place.\n *\n * @param {Number[]} positions The array of numbers representing the positions to be scaled\n * @param {Number} [height=0.0] The desired height to add to the positions\n * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the positions lie.\n * @param {Boolean} [scaleToSurface=true] <code>true</code> if the positions need to be scaled to the surface before the height is added.\n * @returns {Number[]} The input array of positions, scaled to height\n */\nPolygonPipeline.scaleToGeodeticHeight = function (\n  positions,\n  height,\n  ellipsoid,\n  scaleToSurface\n) {\n  ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].WGS84 */ .Z.WGS84);\n\n  var n = scaleToGeodeticHeightN;\n  var p = scaleToGeodeticHeightP;\n\n  height = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(height, 0.0);\n  scaleToSurface = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(scaleToSurface, true);\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(positions)) {\n    var length = positions.length;\n\n    for (var i = 0; i < length; i += 3) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromArray */ .Z.fromArray(positions, i, p);\n\n      if (scaleToSurface) {\n        p = ellipsoid.scaleToGeodeticSurface(p, p);\n      }\n\n      if (height !== 0) {\n        n = ellipsoid.geodeticSurfaceNormal(p, n);\n\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(n, height, n);\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(p, n, p);\n      }\n\n      positions[i] = p.x;\n      positions[i + 1] = p.y;\n      positions[i + 2] = p.z;\n    }\n  }\n\n  return positions;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolygonPipeline);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///78284\n')},80593:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ArcType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11491);\n/* harmony import */ var _arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(32378);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60216);\n/* harmony import */ var _Color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(59947);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(50491);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryType_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(51318);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(99417);\n/* harmony import */ var _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(61733);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(97264);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(67252);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar scratchInterpolateColorsArray = [];\n\nfunction interpolateColors(p0, p1, color0, color1, numPoints) {\n  var colors = scratchInterpolateColorsArray;\n  colors.length = numPoints;\n  var i;\n\n  var r0 = color0.red;\n  var g0 = color0.green;\n  var b0 = color0.blue;\n  var a0 = color0.alpha;\n\n  var r1 = color1.red;\n  var g1 = color1.green;\n  var b1 = color1.blue;\n  var a1 = color1.alpha;\n\n  if (_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equals */ .Z.equals(color0, color1)) {\n    for (i = 0; i < numPoints; i++) {\n      colors[i] = _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(color0);\n    }\n    return colors;\n  }\n\n  var redPerVertex = (r1 - r0) / numPoints;\n  var greenPerVertex = (g1 - g0) / numPoints;\n  var bluePerVertex = (b1 - b0) / numPoints;\n  var alphaPerVertex = (a1 - a0) / numPoints;\n\n  for (i = 0; i < numPoints; i++) {\n    colors[i] = new _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      r0 + i * redPerVertex,\n      g0 + i * greenPerVertex,\n      b0 + i * bluePerVertex,\n      a0 + i * alphaPerVertex\n    );\n  }\n\n  return colors;\n}\n\n/**\n * A description of a polyline modeled as a line strip; the first two positions define a line segment,\n * and each additional position defines a line segment from the previous position. The polyline is capable of\n * displaying with a material.\n *\n * @alias PolylineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of {@link Cartesian3} defining the positions in the polyline as a line strip.\n * @param {Number} [options.width=1.0] The width in pixels.\n * @param {Color[]} [options.colors] An Array of {@link Color} defining the per vertex or per segment colors.\n * @param {Boolean} [options.colorsPerVertex=false] A boolean that determines whether the colors will be flat across each segment of the line or interpolated across the vertices.\n * @param {ArcType} [options.arcType=ArcType.GEODESIC] The type of line the polyline segments must follow.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude if options.arcType is not ArcType.NONE. Determines the number of positions in the buffer.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n *\n * @exception {DeveloperError} At least two positions are required.\n * @exception {DeveloperError} width must be greater than or equal to one.\n * @exception {DeveloperError} colors has an invalid length.\n *\n * @see PolylineGeometry#createGeometry\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Polyline.html|Cesium Sandcastle Polyline Demo}\n *\n * @example\n * // A polyline with two connected line segments\n * var polyline = new Cesium.PolylineGeometry({\n *   positions : Cesium.Cartesian3.fromDegreesArray([\n *     0.0, 0.0,\n *     5.0, 0.0,\n *     5.0, 5.0\n *   ]),\n *   width : 10.0\n * });\n * var geometry = Cesium.PolylineGeometry.createGeometry(polyline);\n */\nfunction PolylineGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var positions = options.positions;\n  var colors = options.colors;\n  var width = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.width, 1.0);\n  var colorsPerVertex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.colorsPerVertex, false);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(positions) || positions.length < 2) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("At least two positions are required.");\n  }\n  if (typeof width !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("width must be a number");\n  }\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(colors) &&\n    ((colorsPerVertex && colors.length < positions.length) ||\n      (!colorsPerVertex && colors.length < positions.length - 1))\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("colors has an invalid length.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._positions = positions;\n  this._colors = colors;\n  this._width = width;\n  this._colorsPerVertex = colorsPerVertex;\n  this._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.vertexFormat, _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].DEFAULT */ .Z.DEFAULT)\n  );\n\n  this._arcType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.arcType, _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC);\n  this._granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  this._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].WGS84 */ .Z.WGS84)\n  );\n  this._workerName = "createPolylineGeometry";\n\n  var numComponents = 1 + positions.length * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n  numComponents += (0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(colors) ? 1 + colors.length * _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength : 1;\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength =\n    numComponents + _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].packedLength */ .Z.packedLength + _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].packedLength */ .Z.packedLength + 4;\n}\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {PolylineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nPolylineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(value)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("value is required");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var i;\n\n  var positions = value._positions;\n  var length = positions.length;\n  array[startingIndex++] = length;\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(positions[i], array, startingIndex);\n  }\n\n  var colors = value._colors;\n  length = (0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(colors) ? colors.length : 0.0;\n  array[startingIndex++] = length;\n\n  for (i = 0; i < length; ++i, startingIndex += _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength) {\n    _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].pack */ .Z.pack(colors[i], array, startingIndex);\n  }\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].packedLength */ .Z.packedLength;\n\n  _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].pack */ .Z.pack(value._vertexFormat, array, startingIndex);\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._width;\n  array[startingIndex++] = value._colorsPerVertex ? 1.0 : 0.0;\n  array[startingIndex++] = value._arcType;\n  array[startingIndex] = value._granularity;\n\n  return array;\n};\n\nvar scratchEllipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE);\nvar scratchVertexFormat = new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z();\nvar scratchOptions = {\n  positions: undefined,\n  colors: undefined,\n  ellipsoid: scratchEllipsoid,\n  vertexFormat: scratchVertexFormat,\n  width: undefined,\n  colorsPerVertex: undefined,\n  arcType: undefined,\n  granularity: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {PolylineGeometry} [result] The object into which to store the result.\n * @returns {PolylineGeometry} The modified result parameter or a new PolylineGeometry instance if one was not provided.\n */\nPolylineGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var i;\n\n  var length = array[startingIndex++];\n  var positions = new Array(length);\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    positions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  length = array[startingIndex++];\n  var colors = length > 0 ? new Array(length) : undefined;\n\n  for (i = 0; i < length; ++i, startingIndex += _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength) {\n    colors[i] = _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchEllipsoid);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].packedLength */ .Z.packedLength;\n\n  var vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchVertexFormat\n  );\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].packedLength */ .Z.packedLength;\n\n  var width = array[startingIndex++];\n  var colorsPerVertex = array[startingIndex++] === 1.0;\n  var arcType = array[startingIndex++];\n  var granularity = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(result)) {\n    scratchOptions.positions = positions;\n    scratchOptions.colors = colors;\n    scratchOptions.width = width;\n    scratchOptions.colorsPerVertex = colorsPerVertex;\n    scratchOptions.arcType = arcType;\n    scratchOptions.granularity = granularity;\n    return new PolylineGeometry(scratchOptions);\n  }\n\n  result._positions = positions;\n  result._colors = colors;\n  result._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].clone */ .Z.clone(ellipsoid, result._ellipsoid);\n  result._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].clone */ .Z.clone(vertexFormat, result._vertexFormat);\n  result._width = width;\n  result._colorsPerVertex = colorsPerVertex;\n  result._arcType = arcType;\n  result._granularity = granularity;\n\n  return result;\n};\n\nvar scratchCartesian3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchPosition = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchPrevPosition = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchNextPosition = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\n/**\n * Computes the geometric representation of a polyline, including its vertices, indices, and a bounding sphere.\n *\n * @param {PolylineGeometry} polylineGeometry A description of the polyline.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nPolylineGeometry.createGeometry = function (polylineGeometry) {\n  var width = polylineGeometry._width;\n  var vertexFormat = polylineGeometry._vertexFormat;\n  var colors = polylineGeometry._colors;\n  var colorsPerVertex = polylineGeometry._colorsPerVertex;\n  var arcType = polylineGeometry._arcType;\n  var granularity = polylineGeometry._granularity;\n  var ellipsoid = polylineGeometry._ellipsoid;\n\n  var i;\n  var j;\n  var k;\n\n  var removedIndices = [];\n  var positions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    polylineGeometry._positions,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon,\n    false,\n    removedIndices\n  );\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(colors) && removedIndices.length > 0) {\n    var removedArrayIndex = 0;\n    var nextRemovedIndex = removedIndices[0];\n    colors = colors.filter(function (color, index) {\n      var remove = false;\n      if (colorsPerVertex) {\n        remove =\n          index === nextRemovedIndex || (index === 0 && nextRemovedIndex === 1);\n      } else {\n        remove = index + 1 === nextRemovedIndex;\n      }\n\n      if (remove) {\n        removedArrayIndex++;\n        nextRemovedIndex = removedIndices[removedArrayIndex];\n        return false;\n      }\n      return true;\n    });\n  }\n\n  var positionsLength = positions.length;\n\n  // A width of a pixel or less is not a valid geometry, but in order to support external data\n  // that may have errors we treat this as an empty geometry.\n  if (positionsLength < 2 || width <= 0.0) {\n    return undefined;\n  }\n\n  if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC || arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n    var subdivisionSize;\n    var numberOfPointsFunction;\n    if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n      subdivisionSize = _Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].chordLength */ .Z.chordLength(\n        granularity,\n        ellipsoid.maximumRadius\n      );\n      numberOfPointsFunction = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].numberOfPoints */ .Z.numberOfPoints;\n    } else {\n      subdivisionSize = granularity;\n      numberOfPointsFunction = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].numberOfPointsRhumbLine */ .Z.numberOfPointsRhumbLine;\n    }\n\n    var heights = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].extractHeights */ .Z.extractHeights(positions, ellipsoid);\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(colors)) {\n      var colorLength = 1;\n      for (i = 0; i < positionsLength - 1; ++i) {\n        colorLength += numberOfPointsFunction(\n          positions[i],\n          positions[i + 1],\n          subdivisionSize\n        );\n      }\n\n      var newColors = new Array(colorLength);\n      var newColorIndex = 0;\n\n      for (i = 0; i < positionsLength - 1; ++i) {\n        var p0 = positions[i];\n        var p1 = positions[i + 1];\n        var c0 = colors[i];\n\n        var numColors = numberOfPointsFunction(p0, p1, subdivisionSize);\n        if (colorsPerVertex && i < colorLength) {\n          var c1 = colors[i + 1];\n          var interpolatedColors = interpolateColors(p0, p1, c0, c1, numColors);\n          var interpolatedColorsLength = interpolatedColors.length;\n          for (j = 0; j < interpolatedColorsLength; ++j) {\n            newColors[newColorIndex++] = interpolatedColors[j];\n          }\n        } else {\n          for (j = 0; j < numColors; ++j) {\n            newColors[newColorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(c0);\n          }\n        }\n      }\n\n      newColors[newColorIndex] = _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(colors[colors.length - 1]);\n      colors = newColors;\n\n      scratchInterpolateColorsArray.length = 0;\n    }\n\n    if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n      positions = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].generateCartesianArc */ .Z.generateCartesianArc({\n        positions: positions,\n        minDistance: subdivisionSize,\n        ellipsoid: ellipsoid,\n        height: heights,\n      });\n    } else {\n      positions = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].generateCartesianRhumbArc */ .Z.generateCartesianRhumbArc({\n        positions: positions,\n        granularity: subdivisionSize,\n        ellipsoid: ellipsoid,\n        height: heights,\n      });\n    }\n  }\n\n  positionsLength = positions.length;\n  var size = positionsLength * 4.0 - 4.0;\n\n  var finalPositions = new Float64Array(size * 3);\n  var prevPositions = new Float64Array(size * 3);\n  var nextPositions = new Float64Array(size * 3);\n  var expandAndWidth = new Float32Array(size * 2);\n  var st = vertexFormat.st ? new Float32Array(size * 2) : undefined;\n  var finalColors = (0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(colors) ? new Uint8Array(size * 4) : undefined;\n\n  var positionIndex = 0;\n  var expandAndWidthIndex = 0;\n  var stIndex = 0;\n  var colorIndex = 0;\n  var position;\n\n  for (j = 0; j < positionsLength; ++j) {\n    if (j === 0) {\n      position = scratchCartesian3;\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(positions[0], positions[1], position);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(positions[0], position, position);\n    } else {\n      position = positions[j - 1];\n    }\n\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(position, scratchPrevPosition);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(positions[j], scratchPosition);\n\n    if (j === positionsLength - 1) {\n      position = scratchCartesian3;\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(\n        positions[positionsLength - 1],\n        positions[positionsLength - 2],\n        position\n      );\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(positions[positionsLength - 1], position, position);\n    } else {\n      position = positions[j + 1];\n    }\n\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(position, scratchNextPosition);\n\n    var color0, color1;\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(finalColors)) {\n      if (j !== 0 && !colorsPerVertex) {\n        color0 = colors[j - 1];\n      } else {\n        color0 = colors[j];\n      }\n\n      if (j !== positionsLength - 1) {\n        color1 = colors[j];\n      }\n    }\n\n    var startK = j === 0 ? 2 : 0;\n    var endK = j === positionsLength - 1 ? 2 : 4;\n\n    for (k = startK; k < endK; ++k) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(scratchPosition, finalPositions, positionIndex);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(scratchPrevPosition, prevPositions, positionIndex);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(scratchNextPosition, nextPositions, positionIndex);\n      positionIndex += 3;\n\n      var direction = k - 2 < 0 ? -1.0 : 1.0;\n      expandAndWidth[expandAndWidthIndex++] = 2 * (k % 2) - 1; // expand direction\n      expandAndWidth[expandAndWidthIndex++] = direction * width;\n\n      if (vertexFormat.st) {\n        st[stIndex++] = j / (positionsLength - 1);\n        st[stIndex++] = Math.max(expandAndWidth[expandAndWidthIndex - 2], 0.0);\n      }\n\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(finalColors)) {\n        var color = k < 2 ? color0 : color1;\n\n        finalColors[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].floatToByte */ .Z.floatToByte(color.red);\n        finalColors[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].floatToByte */ .Z.floatToByte(color.green);\n        finalColors[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].floatToByte */ .Z.floatToByte(color.blue);\n        finalColors[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].floatToByte */ .Z.floatToByte(color.alpha);\n      }\n    }\n  }\n\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: finalPositions,\n  });\n\n  attributes.prevPosition = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: prevPositions,\n  });\n\n  attributes.nextPosition = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: nextPositions,\n  });\n\n  attributes.expandAndWidth = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 2,\n    values: expandAndWidth,\n  });\n\n  if (vertexFormat.st) {\n    attributes.st = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 2,\n      values: st,\n    });\n  }\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(finalColors)) {\n    attributes.color = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 4,\n      values: finalColors,\n      normalize: true,\n    });\n  }\n\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].createTypedArray */ .Z.createTypedArray(size, positionsLength * 6 - 6);\n  var index = 0;\n  var indicesIndex = 0;\n  var length = positionsLength - 1.0;\n  for (j = 0; j < length; ++j) {\n    indices[indicesIndex++] = index;\n    indices[indicesIndex++] = index + 2;\n    indices[indicesIndex++] = index + 1;\n\n    indices[indicesIndex++] = index + 1;\n    indices[indicesIndex++] = index + 2;\n    indices[indicesIndex++] = index + 3;\n\n    index += 4;\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n    boundingSphere: _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromPoints */ .Z.fromPoints(positions),\n    geometryType: _GeometryType_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].POLYLINES */ .Z.POLYLINES,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolylineGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///80593\n')},61733:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51688);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50491);\n/* harmony import */ var _EllipsoidGeodesic_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39043);\n/* harmony import */ var _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(8398);\n/* harmony import */ var _IntersectionTests_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(67627);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(72248);\n/* harmony import */ var _Plane_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(7749);\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nvar PolylinePipeline = {};\n\nPolylinePipeline.numberOfPoints = function (p0, p1, minDistance) {\n  var distance = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(p0, p1);\n  return Math.ceil(distance / minDistance);\n};\n\nPolylinePipeline.numberOfPointsRhumbLine = function (p0, p1, granularity) {\n  var radiansDistanceSquared =\n    Math.pow(p0.longitude - p1.longitude, 2) +\n    Math.pow(p0.latitude - p1.latitude, 2);\n\n  return Math.max(\n    1,\n    Math.ceil(Math.sqrt(radiansDistanceSquared / (granularity * granularity)))\n  );\n};\n\nvar cartoScratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nPolylinePipeline.extractHeights = function (positions, ellipsoid) {\n  var length = positions.length;\n  var heights = new Array(length);\n  for (var i = 0; i < length; i++) {\n    var p = positions[i];\n    heights[i] = ellipsoid.cartesianToCartographic(p, cartoScratch).height;\n  }\n  return heights;\n};\n\nvar wrapLongitudeInversMatrix = new _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\nvar wrapLongitudeOrigin = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar wrapLongitudeXZNormal = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar wrapLongitudeXZPlane = new _Plane_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_X */ .Z.UNIT_X, 0.0);\nvar wrapLongitudeYZNormal = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar wrapLongitudeYZPlane = new _Plane_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_X */ .Z.UNIT_X, 0.0);\nvar wrapLongitudeIntersection = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar wrapLongitudeOffset = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nvar subdivideHeightsScratchArray = [];\n\nfunction subdivideHeights(numPoints, h0, h1) {\n  var heights = subdivideHeightsScratchArray;\n  heights.length = numPoints;\n\n  var i;\n  if (h0 === h1) {\n    for (i = 0; i < numPoints; i++) {\n      heights[i] = h0;\n    }\n    return heights;\n  }\n\n  var dHeight = h1 - h0;\n  var heightPerVertex = dHeight / numPoints;\n\n  for (i = 0; i < numPoints; i++) {\n    var h = h0 + i * heightPerVertex;\n    heights[i] = h;\n  }\n\n  return heights;\n}\n\nvar carto1 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar carto2 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar cartesian = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scaleFirst = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scaleLast = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar ellipsoidGeodesic = new _EllipsoidGeodesic_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar ellipsoidRhumb = new _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\n\n//Returns subdivided line scaled to ellipsoid surface starting at p1 and ending at p2.\n//Result includes p1, but not include p2.  This function is called for a sequence of line segments,\n//and this prevents duplication of end point.\nfunction generateCartesianArc(\n  p0,\n  p1,\n  minDistance,\n  ellipsoid,\n  h0,\n  h1,\n  array,\n  offset\n) {\n  var first = ellipsoid.scaleToGeodeticSurface(p0, scaleFirst);\n  var last = ellipsoid.scaleToGeodeticSurface(p1, scaleLast);\n  var numPoints = PolylinePipeline.numberOfPoints(p0, p1, minDistance);\n  var start = ellipsoid.cartesianToCartographic(first, carto1);\n  var end = ellipsoid.cartesianToCartographic(last, carto2);\n  var heights = subdivideHeights(numPoints, h0, h1);\n\n  ellipsoidGeodesic.setEndPoints(start, end);\n  var surfaceDistanceBetweenPoints =\n    ellipsoidGeodesic.surfaceDistance / numPoints;\n\n  var index = offset;\n  start.height = h0;\n  var cart = ellipsoid.cartographicToCartesian(start, cartesian);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(cart, array, index);\n  index += 3;\n\n  for (var i = 1; i < numPoints; i++) {\n    var carto = ellipsoidGeodesic.interpolateUsingSurfaceDistance(\n      i * surfaceDistanceBetweenPoints,\n      carto2\n    );\n    carto.height = heights[i];\n    cart = ellipsoid.cartographicToCartesian(carto, cartesian);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(cart, array, index);\n    index += 3;\n  }\n\n  return index;\n}\n\n//Returns subdivided line scaled to ellipsoid surface starting at p1 and ending at p2.\n//Result includes p1, but not include p2.  This function is called for a sequence of line segments,\n//and this prevents duplication of end point.\nfunction generateCartesianRhumbArc(\n  p0,\n  p1,\n  granularity,\n  ellipsoid,\n  h0,\n  h1,\n  array,\n  offset\n) {\n  var start = ellipsoid.cartesianToCartographic(p0, carto1);\n  var end = ellipsoid.cartesianToCartographic(p1, carto2);\n  var numPoints = PolylinePipeline.numberOfPointsRhumbLine(\n    start,\n    end,\n    granularity\n  );\n  start.height = 0.0;\n  end.height = 0.0;\n  var heights = subdivideHeights(numPoints, h0, h1);\n\n  if (!ellipsoidRhumb.ellipsoid.equals(ellipsoid)) {\n    ellipsoidRhumb = new _EllipsoidRhumbLine_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(undefined, undefined, ellipsoid);\n  }\n  ellipsoidRhumb.setEndPoints(start, end);\n  var surfaceDistanceBetweenPoints = ellipsoidRhumb.surfaceDistance / numPoints;\n\n  var index = offset;\n  start.height = h0;\n  var cart = ellipsoid.cartographicToCartesian(start, cartesian);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(cart, array, index);\n  index += 3;\n\n  for (var i = 1; i < numPoints; i++) {\n    var carto = ellipsoidRhumb.interpolateUsingSurfaceDistance(\n      i * surfaceDistanceBetweenPoints,\n      carto2\n    );\n    carto.height = heights[i];\n    cart = ellipsoid.cartographicToCartesian(carto, cartesian);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(cart, array, index);\n    index += 3;\n  }\n\n  return index;\n}\n\n/**\n * Breaks a {@link Polyline} into segments such that it does not cross the &plusmn;180 degree meridian of an ellipsoid.\n *\n * @param {Cartesian3[]} positions The polyline\'s Cartesian positions.\n * @param {Matrix4} [modelMatrix=Matrix4.IDENTITY] The polyline\'s model matrix. Assumed to be an affine\n * transformation matrix, where the upper left 3x3 elements are a rotation matrix, and\n * the upper three elements in the fourth column are the translation.  The bottom row is assumed to be [0, 0, 0, 1].\n * The matrix is not verified to be in the proper form.\n * @returns {Object} An object with a <code>positions</code> property that is an array of positions and a\n * <code>segments</code> property.\n *\n *\n * @example\n * var polylines = new Cesium.PolylineCollection();\n * var polyline = polylines.add(...);\n * var positions = polyline.positions;\n * var modelMatrix = polylines.modelMatrix;\n * var segments = Cesium.PolylinePipeline.wrapLongitude(positions, modelMatrix);\n *\n * @see PolygonPipeline.wrapLongitude\n * @see Polyline\n * @see PolylineCollection\n */\nPolylinePipeline.wrapLongitude = function (positions, modelMatrix) {\n  var cartesians = [];\n  var segments = [];\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(positions) && positions.length > 0) {\n    modelMatrix = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(modelMatrix, _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].IDENTITY */ .Z.IDENTITY);\n    var inverseModelMatrix = _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].inverseTransformation */ .Z.inverseTransformation(\n      modelMatrix,\n      wrapLongitudeInversMatrix\n    );\n\n    var origin = _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n      inverseModelMatrix,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO,\n      wrapLongitudeOrigin\n    );\n    var xzNormal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n      _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPointAsVector */ .Z.multiplyByPointAsVector(\n        inverseModelMatrix,\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_Y */ .Z.UNIT_Y,\n        wrapLongitudeXZNormal\n      ),\n      wrapLongitudeXZNormal\n    );\n    var xzPlane = _Plane_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].fromPointNormal */ .Z.fromPointNormal(origin, xzNormal, wrapLongitudeXZPlane);\n    var yzNormal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n      _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPointAsVector */ .Z.multiplyByPointAsVector(\n        inverseModelMatrix,\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_X */ .Z.UNIT_X,\n        wrapLongitudeYZNormal\n      ),\n      wrapLongitudeYZNormal\n    );\n    var yzPlane = _Plane_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].fromPointNormal */ .Z.fromPointNormal(origin, yzNormal, wrapLongitudeYZPlane);\n\n    var count = 1;\n    cartesians.push(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(positions[0]));\n    var prev = cartesians[0];\n\n    var length = positions.length;\n    for (var i = 1; i < length; ++i) {\n      var cur = positions[i];\n\n      // intersects the IDL if either endpoint is on the negative side of the yz-plane\n      if (\n        _Plane_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getPointDistance */ .Z.getPointDistance(yzPlane, prev) < 0.0 ||\n        _Plane_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getPointDistance */ .Z.getPointDistance(yzPlane, cur) < 0.0\n      ) {\n        // and intersects the xz-plane\n        var intersection = _IntersectionTests_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].lineSegmentPlane */ .Z.lineSegmentPlane(\n          prev,\n          cur,\n          xzPlane,\n          wrapLongitudeIntersection\n        );\n        if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(intersection)) {\n          // move point on the xz-plane slightly away from the plane\n          var offset = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n            xzNormal,\n            5.0e-9,\n            wrapLongitudeOffset\n          );\n          if (_Plane_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getPointDistance */ .Z.getPointDistance(xzPlane, prev) < 0.0) {\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(offset, offset);\n          }\n\n          cartesians.push(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(intersection, offset, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z())\n          );\n          segments.push(count + 1);\n\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(offset, offset);\n          cartesians.push(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(intersection, offset, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z())\n          );\n          count = 1;\n        }\n      }\n\n      cartesians.push(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(positions[i]));\n      count++;\n\n      prev = cur;\n    }\n\n    segments.push(count);\n  }\n\n  return {\n    positions: cartesians,\n    lengths: segments,\n  };\n};\n\n/**\n * Subdivides polyline and raises all points to the specified height.  Returns an array of numbers to represent the positions.\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions The array of type {Cartesian3} representing positions.\n * @param {Number|Number[]} [options.height=0.0] A number or array of numbers representing the heights of each position.\n * @param {Number} [options.granularity = CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the positions lie.\n * @returns {Number[]} A new array of positions of type {Number} that have been subdivided and raised to the surface of the ellipsoid.\n *\n * @example\n * var positions = Cesium.Cartesian3.fromDegreesArray([\n *   -105.0, 40.0,\n *   -100.0, 38.0,\n *   -105.0, 35.0,\n *   -100.0, 32.0\n * ]);\n * var surfacePositions = Cesium.PolylinePipeline.generateArc({\n *   positons: positions\n * });\n */\nPolylinePipeline.generateArc = function (options) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options)) {\n    options = {};\n  }\n  var positions = options.positions;\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(positions)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("options.positions is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var length = positions.length;\n  var ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WGS84 */ .Z.WGS84);\n  var height = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.height, 0);\n  var hasHeightArray = Array.isArray(height);\n\n  if (length < 1) {\n    return [];\n  } else if (length === 1) {\n    var p = ellipsoid.scaleToGeodeticSurface(positions[0], scaleFirst);\n    height = hasHeightArray ? height[0] : height;\n    if (height !== 0) {\n      var n = ellipsoid.geodeticSurfaceNormal(p, cartesian);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(n, height, n);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(p, n, p);\n    }\n\n    return [p.x, p.y, p.z];\n  }\n\n  var minDistance = options.minDistance;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(minDistance)) {\n    var granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n      options.granularity,\n      _Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n    );\n    minDistance = _Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].chordLength */ .Z.chordLength(granularity, ellipsoid.maximumRadius);\n  }\n\n  var numPoints = 0;\n  var i;\n\n  for (i = 0; i < length - 1; i++) {\n    numPoints += PolylinePipeline.numberOfPoints(\n      positions[i],\n      positions[i + 1],\n      minDistance\n    );\n  }\n\n  var arrayLength = (numPoints + 1) * 3;\n  var newPositions = new Array(arrayLength);\n  var offset = 0;\n\n  for (i = 0; i < length - 1; i++) {\n    var p0 = positions[i];\n    var p1 = positions[i + 1];\n\n    var h0 = hasHeightArray ? height[i] : height;\n    var h1 = hasHeightArray ? height[i + 1] : height;\n\n    offset = generateCartesianArc(\n      p0,\n      p1,\n      minDistance,\n      ellipsoid,\n      h0,\n      h1,\n      newPositions,\n      offset\n    );\n  }\n\n  subdivideHeightsScratchArray.length = 0;\n\n  var lastPoint = positions[length - 1];\n  var carto = ellipsoid.cartesianToCartographic(lastPoint, carto1);\n  carto.height = hasHeightArray ? height[length - 1] : height;\n  var cart = ellipsoid.cartographicToCartesian(carto, cartesian);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(cart, newPositions, arrayLength - 3);\n\n  return newPositions;\n};\n\nvar scratchCartographic0 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartographic1 = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n/**\n * Subdivides polyline and raises all points to the specified height using Rhumb lines.  Returns an array of numbers to represent the positions.\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions The array of type {Cartesian3} representing positions.\n * @param {Number|Number[]} [options.height=0.0] A number or array of numbers representing the heights of each position.\n * @param {Number} [options.granularity = CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the positions lie.\n * @returns {Number[]} A new array of positions of type {Number} that have been subdivided and raised to the surface of the ellipsoid.\n *\n * @example\n * var positions = Cesium.Cartesian3.fromDegreesArray([\n *   -105.0, 40.0,\n *   -100.0, 38.0,\n *   -105.0, 35.0,\n *   -100.0, 32.0\n * ]);\n * var surfacePositions = Cesium.PolylinePipeline.generateRhumbArc({\n *   positons: positions\n * });\n */\nPolylinePipeline.generateRhumbArc = function (options) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options)) {\n    options = {};\n  }\n  var positions = options.positions;\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(positions)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("options.positions is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var length = positions.length;\n  var ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WGS84 */ .Z.WGS84);\n  var height = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.height, 0);\n  var hasHeightArray = Array.isArray(height);\n\n  if (length < 1) {\n    return [];\n  } else if (length === 1) {\n    var p = ellipsoid.scaleToGeodeticSurface(positions[0], scaleFirst);\n    height = hasHeightArray ? height[0] : height;\n    if (height !== 0) {\n      var n = ellipsoid.geodeticSurfaceNormal(p, cartesian);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(n, height, n);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(p, n, p);\n    }\n\n    return [p.x, p.y, p.z];\n  }\n\n  var granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n\n  var numPoints = 0;\n  var i;\n\n  var c0 = ellipsoid.cartesianToCartographic(\n    positions[0],\n    scratchCartographic0\n  );\n  var c1;\n  for (i = 0; i < length - 1; i++) {\n    c1 = ellipsoid.cartesianToCartographic(\n      positions[i + 1],\n      scratchCartographic1\n    );\n    numPoints += PolylinePipeline.numberOfPointsRhumbLine(c0, c1, granularity);\n    c0 = _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(c1, scratchCartographic0);\n  }\n\n  var arrayLength = (numPoints + 1) * 3;\n  var newPositions = new Array(arrayLength);\n  var offset = 0;\n\n  for (i = 0; i < length - 1; i++) {\n    var p0 = positions[i];\n    var p1 = positions[i + 1];\n\n    var h0 = hasHeightArray ? height[i] : height;\n    var h1 = hasHeightArray ? height[i + 1] : height;\n\n    offset = generateCartesianRhumbArc(\n      p0,\n      p1,\n      granularity,\n      ellipsoid,\n      h0,\n      h1,\n      newPositions,\n      offset\n    );\n  }\n\n  subdivideHeightsScratchArray.length = 0;\n\n  var lastPoint = positions[length - 1];\n  var carto = ellipsoid.cartesianToCartographic(lastPoint, carto1);\n  carto.height = hasHeightArray ? height[length - 1] : height;\n  var cart = ellipsoid.cartographicToCartesian(carto, cartesian);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(cart, newPositions, arrayLength - 3);\n\n  return newPositions;\n};\n\n/**\n * Subdivides polyline and raises all points to the specified height. Returns an array of new {Cartesian3} positions.\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions The array of type {Cartesian3} representing positions.\n * @param {Number|Number[]} [options.height=0.0] A number or array of numbers representing the heights of each position.\n * @param {Number} [options.granularity = CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the positions lie.\n * @returns {Cartesian3[]} A new array of cartesian3 positions that have been subdivided and raised to the surface of the ellipsoid.\n *\n * @example\n * var positions = Cesium.Cartesian3.fromDegreesArray([\n *   -105.0, 40.0,\n *   -100.0, 38.0,\n *   -105.0, 35.0,\n *   -100.0, 32.0\n * ]);\n * var surfacePositions = Cesium.PolylinePipeline.generateCartesianArc({\n *   positons: positions\n * });\n */\nPolylinePipeline.generateCartesianArc = function (options) {\n  var numberArray = PolylinePipeline.generateArc(options);\n  var size = numberArray.length / 3;\n  var newPositions = new Array(size);\n  for (var i = 0; i < size; i++) {\n    newPositions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(numberArray, i * 3);\n  }\n  return newPositions;\n};\n\n/**\n * Subdivides polyline and raises all points to the specified height using Rhumb Lines. Returns an array of new {Cartesian3} positions.\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions The array of type {Cartesian3} representing positions.\n * @param {Number|Number[]} [options.height=0.0] A number or array of numbers representing the heights of each position.\n * @param {Number} [options.granularity = CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the positions lie.\n * @returns {Cartesian3[]} A new array of cartesian3 positions that have been subdivided and raised to the surface of the ellipsoid.\n *\n * @example\n * var positions = Cesium.Cartesian3.fromDegreesArray([\n *   -105.0, 40.0,\n *   -100.0, 38.0,\n *   -105.0, 35.0,\n *   -100.0, 32.0\n * ]);\n * var surfacePositions = Cesium.PolylinePipeline.generateCartesianRhumbArc({\n *   positons: positions\n * });\n */\nPolylinePipeline.generateCartesianRhumbArc = function (options) {\n  var numberArray = PolylinePipeline.generateRhumbArc(options);\n  var size = numberArray.length / 3;\n  var newPositions = new Array(size);\n  for (var i = 0; i < size; i++) {\n    newPositions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(numberArray, i * 3);\n  }\n  return newPositions;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolylinePipeline);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjE3MzMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXlDO0FBQ0k7QUFDQTtBQUNWO0FBQ2M7QUFDVjtBQUNnQjtBQUNFO0FBQ0Y7QUFDcEI7QUFDQTtBQUNKOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQixpRkFBbUI7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixpRUFBWTtBQUNuQztBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9DQUFvQyw0REFBTztBQUMzQyw4QkFBOEIsK0RBQVU7QUFDeEMsZ0NBQWdDLCtEQUFVO0FBQzFDLCtCQUErQiwyREFBSyxDQUFDLDZFQUFpQjtBQUN0RCxnQ0FBZ0MsK0RBQVU7QUFDMUMsK0JBQStCLDJEQUFLLENBQUMsNkVBQWlCO0FBQ3RELG9DQUFvQywrREFBVTtBQUM5Qyw4QkFBOEIsK0RBQVU7O0FBRXhDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxjQUFjLGVBQWU7QUFDN0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCLGlFQUFZO0FBQzdCLGlCQUFpQixpRUFBWTtBQUM3QixvQkFBb0IsK0RBQVU7QUFDOUIscUJBQXFCLCtEQUFVO0FBQy9CLG9CQUFvQiwrREFBVTtBQUM5Qiw0QkFBNEIsc0VBQWlCO0FBQzdDLHlCQUF5Qix1RUFBa0I7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHlFQUFlO0FBQ2pCOztBQUVBLGtCQUFrQixlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkseUVBQWU7QUFDbkI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsdUVBQWtCO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHlFQUFlO0FBQ2pCOztBQUVBLGtCQUFrQixlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkseUVBQWU7QUFDbkI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxnQkFBZ0Isc0RBQXNEO0FBQ25GO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsU0FBUztBQUNwQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLGlFQUFPO0FBQ2Isa0JBQWtCLHFFQUFZLGNBQWMsOEVBQWdCO0FBQzVELDZCQUE2Qix3R0FBNkI7QUFDMUQ7QUFDQTtBQUNBOztBQUVBLGlCQUFpQiw0RkFBdUI7QUFDeEM7QUFDQSxNQUFNLHlFQUFlO0FBQ3JCO0FBQ0E7QUFDQSxtQkFBbUIsbUZBQW9CO0FBQ3ZDLE1BQU0sNEdBQStCO0FBQ3JDO0FBQ0EsUUFBUSw2RUFBaUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMkZBQXFCO0FBQ3ZDLG1CQUFtQixtRkFBb0I7QUFDdkMsTUFBTSw0R0FBK0I7QUFDckM7QUFDQSxRQUFRLDZFQUFpQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyRkFBcUI7O0FBRXZDO0FBQ0Esb0JBQW9CLDJFQUFnQjtBQUNwQzs7QUFFQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSxRQUFRLDZGQUFzQjtBQUM5QixRQUFRLDZGQUFzQjtBQUM5QjtBQUNBO0FBQ0EsMkJBQTJCLHdHQUFrQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpRUFBTztBQUNuQjtBQUNBLHVCQUF1QixpR0FBMkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDZGQUFzQjtBQUNwQyxZQUFZLDZFQUFpQjtBQUM3Qjs7QUFFQTtBQUNBLFlBQVksdUVBQWMsMkJBQTJCLCtEQUFVO0FBQy9EO0FBQ0E7O0FBRUEsVUFBVSw2RUFBaUI7QUFDM0I7QUFDQSxZQUFZLHVFQUFjLDJCQUEyQiwrREFBVTtBQUMvRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0IsMkVBQWdCO0FBQ3RDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxjQUFjLHFDQUFxQyxZQUFZO0FBQzFFLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFdBQVc7QUFDdEIsYUFBYSxVQUFVLGtDQUFrQyxRQUFRO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxPQUFPLGlFQUFPO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLGlFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLHFFQUFZLG9CQUFvQiwwRUFBZTtBQUNqRSxlQUFlLHFFQUFZO0FBQzNCOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLGlHQUEyQjtBQUNqQyxNQUFNLHVFQUFjO0FBQ3BCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPLGlFQUFPO0FBQ2Qsc0JBQXNCLHFFQUFZO0FBQ2xDO0FBQ0EsTUFBTSwrRkFBNkI7QUFDbkM7QUFDQSxrQkFBa0IsaUZBQXNCO0FBQ3hDOztBQUVBO0FBQ0E7O0FBRUEsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLGdCQUFnQjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUseUVBQWU7O0FBRWpCO0FBQ0E7O0FBRUEsK0JBQStCLGlFQUFZO0FBQzNDLCtCQUErQixpRUFBWTs7QUFFM0M7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLGNBQWMscUNBQXFDLFlBQVk7QUFDMUUsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsV0FBVztBQUN0QixhQUFhLFVBQVUsa0NBQWtDLFFBQVE7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLE9BQU8saUVBQU87QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8saUVBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IscUVBQVksb0JBQW9CLDBFQUFlO0FBQ2pFLGVBQWUscUVBQVk7QUFDM0I7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0saUdBQTJCO0FBQ2pDLE1BQU0sdUVBQWM7QUFDcEI7O0FBRUE7QUFDQTs7QUFFQSxvQkFBb0IscUVBQVk7QUFDaEM7QUFDQSxJQUFJLCtGQUE2QjtBQUNqQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw2RUFBa0I7QUFDM0I7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGNBQWMsZ0JBQWdCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSx5RUFBZTs7QUFFakI7QUFDQTs7QUFFQTtBQUNBLCtGQUErRixZQUFZO0FBQzNHLFdBQVcsUUFBUTtBQUNuQixXQUFXLGNBQWMscUNBQXFDLFlBQVk7QUFDMUUsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsV0FBVztBQUN0QixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixVQUFVO0FBQzVCLHNCQUFzQiw2RUFBaUI7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUhBQWlILFlBQVk7QUFDN0gsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYyxxQ0FBcUMsWUFBWTtBQUMxRSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxXQUFXO0FBQ3RCLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFVBQVU7QUFDNUIsc0JBQXNCLDZFQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQSx5REFBZSxnQkFBZ0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL1BvbHlsaW5lUGlwZWxpbmUuanM/OTBlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2FydGVzaWFuMyBmcm9tIFwiLi9DYXJ0ZXNpYW4zLmpzXCI7XG5pbXBvcnQgQ2FydG9ncmFwaGljIGZyb20gXCIuL0NhcnRvZ3JhcGhpYy5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi9EZXZlbG9wZXJFcnJvci5qc1wiO1xuaW1wb3J0IEVsbGlwc29pZCBmcm9tIFwiLi9FbGxpcHNvaWQuanNcIjtcbmltcG9ydCBFbGxpcHNvaWRHZW9kZXNpYyBmcm9tIFwiLi9FbGxpcHNvaWRHZW9kZXNpYy5qc1wiO1xuaW1wb3J0IEVsbGlwc29pZFJodW1iTGluZSBmcm9tIFwiLi9FbGxpcHNvaWRSaHVtYkxpbmUuanNcIjtcbmltcG9ydCBJbnRlcnNlY3Rpb25UZXN0cyBmcm9tIFwiLi9JbnRlcnNlY3Rpb25UZXN0cy5qc1wiO1xuaW1wb3J0IENlc2l1bU1hdGggZnJvbSBcIi4vTWF0aC5qc1wiO1xuaW1wb3J0IE1hdHJpeDQgZnJvbSBcIi4vTWF0cml4NC5qc1wiO1xuaW1wb3J0IFBsYW5lIGZyb20gXCIuL1BsYW5lLmpzXCI7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xudmFyIFBvbHlsaW5lUGlwZWxpbmUgPSB7fTtcblxuUG9seWxpbmVQaXBlbGluZS5udW1iZXJPZlBvaW50cyA9IGZ1bmN0aW9uIChwMCwgcDEsIG1pbkRpc3RhbmNlKSB7XG4gIHZhciBkaXN0YW5jZSA9IENhcnRlc2lhbjMuZGlzdGFuY2UocDAsIHAxKTtcbiAgcmV0dXJuIE1hdGguY2VpbChkaXN0YW5jZSAvIG1pbkRpc3RhbmNlKTtcbn07XG5cblBvbHlsaW5lUGlwZWxpbmUubnVtYmVyT2ZQb2ludHNSaHVtYkxpbmUgPSBmdW5jdGlvbiAocDAsIHAxLCBncmFudWxhcml0eSkge1xuICB2YXIgcmFkaWFuc0Rpc3RhbmNlU3F1YXJlZCA9XG4gICAgTWF0aC5wb3cocDAubG9uZ2l0dWRlIC0gcDEubG9uZ2l0dWRlLCAyKSArXG4gICAgTWF0aC5wb3cocDAubGF0aXR1ZGUgLSBwMS5sYXRpdHVkZSwgMik7XG5cbiAgcmV0dXJuIE1hdGgubWF4KFxuICAgIDEsXG4gICAgTWF0aC5jZWlsKE1hdGguc3FydChyYWRpYW5zRGlzdGFuY2VTcXVhcmVkIC8gKGdyYW51bGFyaXR5ICogZ3JhbnVsYXJpdHkpKSlcbiAgKTtcbn07XG5cbnZhciBjYXJ0b1NjcmF0Y2ggPSBuZXcgQ2FydG9ncmFwaGljKCk7XG5Qb2x5bGluZVBpcGVsaW5lLmV4dHJhY3RIZWlnaHRzID0gZnVuY3Rpb24gKHBvc2l0aW9ucywgZWxsaXBzb2lkKSB7XG4gIHZhciBsZW5ndGggPSBwb3NpdGlvbnMubGVuZ3RoO1xuICB2YXIgaGVpZ2h0cyA9IG5ldyBBcnJheShsZW5ndGgpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHAgPSBwb3NpdGlvbnNbaV07XG4gICAgaGVpZ2h0c1tpXSA9IGVsbGlwc29pZC5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhwLCBjYXJ0b1NjcmF0Y2gpLmhlaWdodDtcbiAgfVxuICByZXR1cm4gaGVpZ2h0cztcbn07XG5cbnZhciB3cmFwTG9uZ2l0dWRlSW52ZXJzTWF0cml4ID0gbmV3IE1hdHJpeDQoKTtcbnZhciB3cmFwTG9uZ2l0dWRlT3JpZ2luID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciB3cmFwTG9uZ2l0dWRlWFpOb3JtYWwgPSBuZXcgQ2FydGVzaWFuMygpO1xudmFyIHdyYXBMb25naXR1ZGVYWlBsYW5lID0gbmV3IFBsYW5lKENhcnRlc2lhbjMuVU5JVF9YLCAwLjApO1xudmFyIHdyYXBMb25naXR1ZGVZWk5vcm1hbCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG52YXIgd3JhcExvbmdpdHVkZVlaUGxhbmUgPSBuZXcgUGxhbmUoQ2FydGVzaWFuMy5VTklUX1gsIDAuMCk7XG52YXIgd3JhcExvbmdpdHVkZUludGVyc2VjdGlvbiA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG52YXIgd3JhcExvbmdpdHVkZU9mZnNldCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG5cbnZhciBzdWJkaXZpZGVIZWlnaHRzU2NyYXRjaEFycmF5ID0gW107XG5cbmZ1bmN0aW9uIHN1YmRpdmlkZUhlaWdodHMobnVtUG9pbnRzLCBoMCwgaDEpIHtcbiAgdmFyIGhlaWdodHMgPSBzdWJkaXZpZGVIZWlnaHRzU2NyYXRjaEFycmF5O1xuICBoZWlnaHRzLmxlbmd0aCA9IG51bVBvaW50cztcblxuICB2YXIgaTtcbiAgaWYgKGgwID09PSBoMSkge1xuICAgIGZvciAoaSA9IDA7IGkgPCBudW1Qb2ludHM7IGkrKykge1xuICAgICAgaGVpZ2h0c1tpXSA9IGgwO1xuICAgIH1cbiAgICByZXR1cm4gaGVpZ2h0cztcbiAgfVxuXG4gIHZhciBkSGVpZ2h0ID0gaDEgLSBoMDtcbiAgdmFyIGhlaWdodFBlclZlcnRleCA9IGRIZWlnaHQgLyBudW1Qb2ludHM7XG5cbiAgZm9yIChpID0gMDsgaSA8IG51bVBvaW50czsgaSsrKSB7XG4gICAgdmFyIGggPSBoMCArIGkgKiBoZWlnaHRQZXJWZXJ0ZXg7XG4gICAgaGVpZ2h0c1tpXSA9IGg7XG4gIH1cblxuICByZXR1cm4gaGVpZ2h0cztcbn1cblxudmFyIGNhcnRvMSA9IG5ldyBDYXJ0b2dyYXBoaWMoKTtcbnZhciBjYXJ0bzIgPSBuZXcgQ2FydG9ncmFwaGljKCk7XG52YXIgY2FydGVzaWFuID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciBzY2FsZUZpcnN0ID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciBzY2FsZUxhc3QgPSBuZXcgQ2FydGVzaWFuMygpO1xudmFyIGVsbGlwc29pZEdlb2Rlc2ljID0gbmV3IEVsbGlwc29pZEdlb2Rlc2ljKCk7XG52YXIgZWxsaXBzb2lkUmh1bWIgPSBuZXcgRWxsaXBzb2lkUmh1bWJMaW5lKCk7XG5cbi8vUmV0dXJucyBzdWJkaXZpZGVkIGxpbmUgc2NhbGVkIHRvIGVsbGlwc29pZCBzdXJmYWNlIHN0YXJ0aW5nIGF0IHAxIGFuZCBlbmRpbmcgYXQgcDIuXG4vL1Jlc3VsdCBpbmNsdWRlcyBwMSwgYnV0IG5vdCBpbmNsdWRlIHAyLiAgVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgZm9yIGEgc2VxdWVuY2Ugb2YgbGluZSBzZWdtZW50cyxcbi8vYW5kIHRoaXMgcHJldmVudHMgZHVwbGljYXRpb24gb2YgZW5kIHBvaW50LlxuZnVuY3Rpb24gZ2VuZXJhdGVDYXJ0ZXNpYW5BcmMoXG4gIHAwLFxuICBwMSxcbiAgbWluRGlzdGFuY2UsXG4gIGVsbGlwc29pZCxcbiAgaDAsXG4gIGgxLFxuICBhcnJheSxcbiAgb2Zmc2V0XG4pIHtcbiAgdmFyIGZpcnN0ID0gZWxsaXBzb2lkLnNjYWxlVG9HZW9kZXRpY1N1cmZhY2UocDAsIHNjYWxlRmlyc3QpO1xuICB2YXIgbGFzdCA9IGVsbGlwc29pZC5zY2FsZVRvR2VvZGV0aWNTdXJmYWNlKHAxLCBzY2FsZUxhc3QpO1xuICB2YXIgbnVtUG9pbnRzID0gUG9seWxpbmVQaXBlbGluZS5udW1iZXJPZlBvaW50cyhwMCwgcDEsIG1pbkRpc3RhbmNlKTtcbiAgdmFyIHN0YXJ0ID0gZWxsaXBzb2lkLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGZpcnN0LCBjYXJ0bzEpO1xuICB2YXIgZW5kID0gZWxsaXBzb2lkLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGxhc3QsIGNhcnRvMik7XG4gIHZhciBoZWlnaHRzID0gc3ViZGl2aWRlSGVpZ2h0cyhudW1Qb2ludHMsIGgwLCBoMSk7XG5cbiAgZWxsaXBzb2lkR2VvZGVzaWMuc2V0RW5kUG9pbnRzKHN0YXJ0LCBlbmQpO1xuICB2YXIgc3VyZmFjZURpc3RhbmNlQmV0d2VlblBvaW50cyA9XG4gICAgZWxsaXBzb2lkR2VvZGVzaWMuc3VyZmFjZURpc3RhbmNlIC8gbnVtUG9pbnRzO1xuXG4gIHZhciBpbmRleCA9IG9mZnNldDtcbiAgc3RhcnQuaGVpZ2h0ID0gaDA7XG4gIHZhciBjYXJ0ID0gZWxsaXBzb2lkLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKHN0YXJ0LCBjYXJ0ZXNpYW4pO1xuICBDYXJ0ZXNpYW4zLnBhY2soY2FydCwgYXJyYXksIGluZGV4KTtcbiAgaW5kZXggKz0gMztcblxuICBmb3IgKHZhciBpID0gMTsgaSA8IG51bVBvaW50czsgaSsrKSB7XG4gICAgdmFyIGNhcnRvID0gZWxsaXBzb2lkR2VvZGVzaWMuaW50ZXJwb2xhdGVVc2luZ1N1cmZhY2VEaXN0YW5jZShcbiAgICAgIGkgKiBzdXJmYWNlRGlzdGFuY2VCZXR3ZWVuUG9pbnRzLFxuICAgICAgY2FydG8yXG4gICAgKTtcbiAgICBjYXJ0by5oZWlnaHQgPSBoZWlnaHRzW2ldO1xuICAgIGNhcnQgPSBlbGxpcHNvaWQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oY2FydG8sIGNhcnRlc2lhbik7XG4gICAgQ2FydGVzaWFuMy5wYWNrKGNhcnQsIGFycmF5LCBpbmRleCk7XG4gICAgaW5kZXggKz0gMztcbiAgfVxuXG4gIHJldHVybiBpbmRleDtcbn1cblxuLy9SZXR1cm5zIHN1YmRpdmlkZWQgbGluZSBzY2FsZWQgdG8gZWxsaXBzb2lkIHN1cmZhY2Ugc3RhcnRpbmcgYXQgcDEgYW5kIGVuZGluZyBhdCBwMi5cbi8vUmVzdWx0IGluY2x1ZGVzIHAxLCBidXQgbm90IGluY2x1ZGUgcDIuICBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBmb3IgYSBzZXF1ZW5jZSBvZiBsaW5lIHNlZ21lbnRzLFxuLy9hbmQgdGhpcyBwcmV2ZW50cyBkdXBsaWNhdGlvbiBvZiBlbmQgcG9pbnQuXG5mdW5jdGlvbiBnZW5lcmF0ZUNhcnRlc2lhblJodW1iQXJjKFxuICBwMCxcbiAgcDEsXG4gIGdyYW51bGFyaXR5LFxuICBlbGxpcHNvaWQsXG4gIGgwLFxuICBoMSxcbiAgYXJyYXksXG4gIG9mZnNldFxuKSB7XG4gIHZhciBzdGFydCA9IGVsbGlwc29pZC5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhwMCwgY2FydG8xKTtcbiAgdmFyIGVuZCA9IGVsbGlwc29pZC5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhwMSwgY2FydG8yKTtcbiAgdmFyIG51bVBvaW50cyA9IFBvbHlsaW5lUGlwZWxpbmUubnVtYmVyT2ZQb2ludHNSaHVtYkxpbmUoXG4gICAgc3RhcnQsXG4gICAgZW5kLFxuICAgIGdyYW51bGFyaXR5XG4gICk7XG4gIHN0YXJ0LmhlaWdodCA9IDAuMDtcbiAgZW5kLmhlaWdodCA9IDAuMDtcbiAgdmFyIGhlaWdodHMgPSBzdWJkaXZpZGVIZWlnaHRzKG51bVBvaW50cywgaDAsIGgxKTtcblxuICBpZiAoIWVsbGlwc29pZFJodW1iLmVsbGlwc29pZC5lcXVhbHMoZWxsaXBzb2lkKSkge1xuICAgIGVsbGlwc29pZFJodW1iID0gbmV3IEVsbGlwc29pZFJodW1iTGluZSh1bmRlZmluZWQsIHVuZGVmaW5lZCwgZWxsaXBzb2lkKTtcbiAgfVxuICBlbGxpcHNvaWRSaHVtYi5zZXRFbmRQb2ludHMoc3RhcnQsIGVuZCk7XG4gIHZhciBzdXJmYWNlRGlzdGFuY2VCZXR3ZWVuUG9pbnRzID0gZWxsaXBzb2lkUmh1bWIuc3VyZmFjZURpc3RhbmNlIC8gbnVtUG9pbnRzO1xuXG4gIHZhciBpbmRleCA9IG9mZnNldDtcbiAgc3RhcnQuaGVpZ2h0ID0gaDA7XG4gIHZhciBjYXJ0ID0gZWxsaXBzb2lkLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKHN0YXJ0LCBjYXJ0ZXNpYW4pO1xuICBDYXJ0ZXNpYW4zLnBhY2soY2FydCwgYXJyYXksIGluZGV4KTtcbiAgaW5kZXggKz0gMztcblxuICBmb3IgKHZhciBpID0gMTsgaSA8IG51bVBvaW50czsgaSsrKSB7XG4gICAgdmFyIGNhcnRvID0gZWxsaXBzb2lkUmh1bWIuaW50ZXJwb2xhdGVVc2luZ1N1cmZhY2VEaXN0YW5jZShcbiAgICAgIGkgKiBzdXJmYWNlRGlzdGFuY2VCZXR3ZWVuUG9pbnRzLFxuICAgICAgY2FydG8yXG4gICAgKTtcbiAgICBjYXJ0by5oZWlnaHQgPSBoZWlnaHRzW2ldO1xuICAgIGNhcnQgPSBlbGxpcHNvaWQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oY2FydG8sIGNhcnRlc2lhbik7XG4gICAgQ2FydGVzaWFuMy5wYWNrKGNhcnQsIGFycmF5LCBpbmRleCk7XG4gICAgaW5kZXggKz0gMztcbiAgfVxuXG4gIHJldHVybiBpbmRleDtcbn1cblxuLyoqXG4gKiBCcmVha3MgYSB7QGxpbmsgUG9seWxpbmV9IGludG8gc2VnbWVudHMgc3VjaCB0aGF0IGl0IGRvZXMgbm90IGNyb3NzIHRoZSAmcGx1c21uOzE4MCBkZWdyZWUgbWVyaWRpYW4gb2YgYW4gZWxsaXBzb2lkLlxuICpcbiAqIEBwYXJhbSB7Q2FydGVzaWFuM1tdfSBwb3NpdGlvbnMgVGhlIHBvbHlsaW5lJ3MgQ2FydGVzaWFuIHBvc2l0aW9ucy5cbiAqIEBwYXJhbSB7TWF0cml4NH0gW21vZGVsTWF0cml4PU1hdHJpeDQuSURFTlRJVFldIFRoZSBwb2x5bGluZSdzIG1vZGVsIG1hdHJpeC4gQXNzdW1lZCB0byBiZSBhbiBhZmZpbmVcbiAqIHRyYW5zZm9ybWF0aW9uIG1hdHJpeCwgd2hlcmUgdGhlIHVwcGVyIGxlZnQgM3gzIGVsZW1lbnRzIGFyZSBhIHJvdGF0aW9uIG1hdHJpeCwgYW5kXG4gKiB0aGUgdXBwZXIgdGhyZWUgZWxlbWVudHMgaW4gdGhlIGZvdXJ0aCBjb2x1bW4gYXJlIHRoZSB0cmFuc2xhdGlvbi4gIFRoZSBib3R0b20gcm93IGlzIGFzc3VtZWQgdG8gYmUgWzAsIDAsIDAsIDFdLlxuICogVGhlIG1hdHJpeCBpcyBub3QgdmVyaWZpZWQgdG8gYmUgaW4gdGhlIHByb3BlciBmb3JtLlxuICogQHJldHVybnMge09iamVjdH0gQW4gb2JqZWN0IHdpdGggYSA8Y29kZT5wb3NpdGlvbnM8L2NvZGU+IHByb3BlcnR5IHRoYXQgaXMgYW4gYXJyYXkgb2YgcG9zaXRpb25zIGFuZCBhXG4gKiA8Y29kZT5zZWdtZW50czwvY29kZT4gcHJvcGVydHkuXG4gKlxuICpcbiAqIEBleGFtcGxlXG4gKiB2YXIgcG9seWxpbmVzID0gbmV3IENlc2l1bS5Qb2x5bGluZUNvbGxlY3Rpb24oKTtcbiAqIHZhciBwb2x5bGluZSA9IHBvbHlsaW5lcy5hZGQoLi4uKTtcbiAqIHZhciBwb3NpdGlvbnMgPSBwb2x5bGluZS5wb3NpdGlvbnM7XG4gKiB2YXIgbW9kZWxNYXRyaXggPSBwb2x5bGluZXMubW9kZWxNYXRyaXg7XG4gKiB2YXIgc2VnbWVudHMgPSBDZXNpdW0uUG9seWxpbmVQaXBlbGluZS53cmFwTG9uZ2l0dWRlKHBvc2l0aW9ucywgbW9kZWxNYXRyaXgpO1xuICpcbiAqIEBzZWUgUG9seWdvblBpcGVsaW5lLndyYXBMb25naXR1ZGVcbiAqIEBzZWUgUG9seWxpbmVcbiAqIEBzZWUgUG9seWxpbmVDb2xsZWN0aW9uXG4gKi9cblBvbHlsaW5lUGlwZWxpbmUud3JhcExvbmdpdHVkZSA9IGZ1bmN0aW9uIChwb3NpdGlvbnMsIG1vZGVsTWF0cml4KSB7XG4gIHZhciBjYXJ0ZXNpYW5zID0gW107XG4gIHZhciBzZWdtZW50cyA9IFtdO1xuXG4gIGlmIChkZWZpbmVkKHBvc2l0aW9ucykgJiYgcG9zaXRpb25zLmxlbmd0aCA+IDApIHtcbiAgICBtb2RlbE1hdHJpeCA9IGRlZmF1bHRWYWx1ZShtb2RlbE1hdHJpeCwgTWF0cml4NC5JREVOVElUWSk7XG4gICAgdmFyIGludmVyc2VNb2RlbE1hdHJpeCA9IE1hdHJpeDQuaW52ZXJzZVRyYW5zZm9ybWF0aW9uKFxuICAgICAgbW9kZWxNYXRyaXgsXG4gICAgICB3cmFwTG9uZ2l0dWRlSW52ZXJzTWF0cml4XG4gICAgKTtcblxuICAgIHZhciBvcmlnaW4gPSBNYXRyaXg0Lm11bHRpcGx5QnlQb2ludChcbiAgICAgIGludmVyc2VNb2RlbE1hdHJpeCxcbiAgICAgIENhcnRlc2lhbjMuWkVSTyxcbiAgICAgIHdyYXBMb25naXR1ZGVPcmlnaW5cbiAgICApO1xuICAgIHZhciB4ek5vcm1hbCA9IENhcnRlc2lhbjMubm9ybWFsaXplKFxuICAgICAgTWF0cml4NC5tdWx0aXBseUJ5UG9pbnRBc1ZlY3RvcihcbiAgICAgICAgaW52ZXJzZU1vZGVsTWF0cml4LFxuICAgICAgICBDYXJ0ZXNpYW4zLlVOSVRfWSxcbiAgICAgICAgd3JhcExvbmdpdHVkZVhaTm9ybWFsXG4gICAgICApLFxuICAgICAgd3JhcExvbmdpdHVkZVhaTm9ybWFsXG4gICAgKTtcbiAgICB2YXIgeHpQbGFuZSA9IFBsYW5lLmZyb21Qb2ludE5vcm1hbChvcmlnaW4sIHh6Tm9ybWFsLCB3cmFwTG9uZ2l0dWRlWFpQbGFuZSk7XG4gICAgdmFyIHl6Tm9ybWFsID0gQ2FydGVzaWFuMy5ub3JtYWxpemUoXG4gICAgICBNYXRyaXg0Lm11bHRpcGx5QnlQb2ludEFzVmVjdG9yKFxuICAgICAgICBpbnZlcnNlTW9kZWxNYXRyaXgsXG4gICAgICAgIENhcnRlc2lhbjMuVU5JVF9YLFxuICAgICAgICB3cmFwTG9uZ2l0dWRlWVpOb3JtYWxcbiAgICAgICksXG4gICAgICB3cmFwTG9uZ2l0dWRlWVpOb3JtYWxcbiAgICApO1xuICAgIHZhciB5elBsYW5lID0gUGxhbmUuZnJvbVBvaW50Tm9ybWFsKG9yaWdpbiwgeXpOb3JtYWwsIHdyYXBMb25naXR1ZGVZWlBsYW5lKTtcblxuICAgIHZhciBjb3VudCA9IDE7XG4gICAgY2FydGVzaWFucy5wdXNoKENhcnRlc2lhbjMuY2xvbmUocG9zaXRpb25zWzBdKSk7XG4gICAgdmFyIHByZXYgPSBjYXJ0ZXNpYW5zWzBdO1xuXG4gICAgdmFyIGxlbmd0aCA9IHBvc2l0aW9ucy5sZW5ndGg7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGN1ciA9IHBvc2l0aW9uc1tpXTtcblxuICAgICAgLy8gaW50ZXJzZWN0cyB0aGUgSURMIGlmIGVpdGhlciBlbmRwb2ludCBpcyBvbiB0aGUgbmVnYXRpdmUgc2lkZSBvZiB0aGUgeXotcGxhbmVcbiAgICAgIGlmIChcbiAgICAgICAgUGxhbmUuZ2V0UG9pbnREaXN0YW5jZSh5elBsYW5lLCBwcmV2KSA8IDAuMCB8fFxuICAgICAgICBQbGFuZS5nZXRQb2ludERpc3RhbmNlKHl6UGxhbmUsIGN1cikgPCAwLjBcbiAgICAgICkge1xuICAgICAgICAvLyBhbmQgaW50ZXJzZWN0cyB0aGUgeHotcGxhbmVcbiAgICAgICAgdmFyIGludGVyc2VjdGlvbiA9IEludGVyc2VjdGlvblRlc3RzLmxpbmVTZWdtZW50UGxhbmUoXG4gICAgICAgICAgcHJldixcbiAgICAgICAgICBjdXIsXG4gICAgICAgICAgeHpQbGFuZSxcbiAgICAgICAgICB3cmFwTG9uZ2l0dWRlSW50ZXJzZWN0aW9uXG4gICAgICAgICk7XG4gICAgICAgIGlmIChkZWZpbmVkKGludGVyc2VjdGlvbikpIHtcbiAgICAgICAgICAvLyBtb3ZlIHBvaW50IG9uIHRoZSB4ei1wbGFuZSBzbGlnaHRseSBhd2F5IGZyb20gdGhlIHBsYW5lXG4gICAgICAgICAgdmFyIG9mZnNldCA9IENhcnRlc2lhbjMubXVsdGlwbHlCeVNjYWxhcihcbiAgICAgICAgICAgIHh6Tm9ybWFsLFxuICAgICAgICAgICAgNS4wZS05LFxuICAgICAgICAgICAgd3JhcExvbmdpdHVkZU9mZnNldFxuICAgICAgICAgICk7XG4gICAgICAgICAgaWYgKFBsYW5lLmdldFBvaW50RGlzdGFuY2UoeHpQbGFuZSwgcHJldikgPCAwLjApIHtcbiAgICAgICAgICAgIENhcnRlc2lhbjMubmVnYXRlKG9mZnNldCwgb2Zmc2V0KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjYXJ0ZXNpYW5zLnB1c2goXG4gICAgICAgICAgICBDYXJ0ZXNpYW4zLmFkZChpbnRlcnNlY3Rpb24sIG9mZnNldCwgbmV3IENhcnRlc2lhbjMoKSlcbiAgICAgICAgICApO1xuICAgICAgICAgIHNlZ21lbnRzLnB1c2goY291bnQgKyAxKTtcblxuICAgICAgICAgIENhcnRlc2lhbjMubmVnYXRlKG9mZnNldCwgb2Zmc2V0KTtcbiAgICAgICAgICBjYXJ0ZXNpYW5zLnB1c2goXG4gICAgICAgICAgICBDYXJ0ZXNpYW4zLmFkZChpbnRlcnNlY3Rpb24sIG9mZnNldCwgbmV3IENhcnRlc2lhbjMoKSlcbiAgICAgICAgICApO1xuICAgICAgICAgIGNvdW50ID0gMTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjYXJ0ZXNpYW5zLnB1c2goQ2FydGVzaWFuMy5jbG9uZShwb3NpdGlvbnNbaV0pKTtcbiAgICAgIGNvdW50Kys7XG5cbiAgICAgIHByZXYgPSBjdXI7XG4gICAgfVxuXG4gICAgc2VnbWVudHMucHVzaChjb3VudCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBvc2l0aW9uczogY2FydGVzaWFucyxcbiAgICBsZW5ndGhzOiBzZWdtZW50cyxcbiAgfTtcbn07XG5cbi8qKlxuICogU3ViZGl2aWRlcyBwb2x5bGluZSBhbmQgcmFpc2VzIGFsbCBwb2ludHMgdG8gdGhlIHNwZWNpZmllZCBoZWlnaHQuICBSZXR1cm5zIGFuIGFycmF5IG9mIG51bWJlcnMgdG8gcmVwcmVzZW50IHRoZSBwb3NpdGlvbnMuXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBPYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge0NhcnRlc2lhbjNbXX0gb3B0aW9ucy5wb3NpdGlvbnMgVGhlIGFycmF5IG9mIHR5cGUge0NhcnRlc2lhbjN9IHJlcHJlc2VudGluZyBwb3NpdGlvbnMuXG4gKiBAcGFyYW0ge051bWJlcnxOdW1iZXJbXX0gW29wdGlvbnMuaGVpZ2h0PTAuMF0gQSBudW1iZXIgb3IgYXJyYXkgb2YgbnVtYmVycyByZXByZXNlbnRpbmcgdGhlIGhlaWdodHMgb2YgZWFjaCBwb3NpdGlvbi5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5ncmFudWxhcml0eSA9IENlc2l1bU1hdGguUkFESUFOU19QRVJfREVHUkVFXSBUaGUgZGlzdGFuY2UsIGluIHJhZGlhbnMsIGJldHdlZW4gZWFjaCBsYXRpdHVkZSBhbmQgbG9uZ2l0dWRlLiBEZXRlcm1pbmVzIHRoZSBudW1iZXIgb2YgcG9zaXRpb25zIGluIHRoZSBidWZmZXIuXG4gKiBAcGFyYW0ge0VsbGlwc29pZH0gW29wdGlvbnMuZWxsaXBzb2lkPUVsbGlwc29pZC5XR1M4NF0gVGhlIGVsbGlwc29pZCBvbiB3aGljaCB0aGUgcG9zaXRpb25zIGxpZS5cbiAqIEByZXR1cm5zIHtOdW1iZXJbXX0gQSBuZXcgYXJyYXkgb2YgcG9zaXRpb25zIG9mIHR5cGUge051bWJlcn0gdGhhdCBoYXZlIGJlZW4gc3ViZGl2aWRlZCBhbmQgcmFpc2VkIHRvIHRoZSBzdXJmYWNlIG9mIHRoZSBlbGxpcHNvaWQuXG4gKlxuICogQGV4YW1wbGVcbiAqIHZhciBwb3NpdGlvbnMgPSBDZXNpdW0uQ2FydGVzaWFuMy5mcm9tRGVncmVlc0FycmF5KFtcbiAqICAgLTEwNS4wLCA0MC4wLFxuICogICAtMTAwLjAsIDM4LjAsXG4gKiAgIC0xMDUuMCwgMzUuMCxcbiAqICAgLTEwMC4wLCAzMi4wXG4gKiBdKTtcbiAqIHZhciBzdXJmYWNlUG9zaXRpb25zID0gQ2VzaXVtLlBvbHlsaW5lUGlwZWxpbmUuZ2VuZXJhdGVBcmMoe1xuICogICBwb3NpdG9uczogcG9zaXRpb25zXG4gKiB9KTtcbiAqL1xuUG9seWxpbmVQaXBlbGluZS5nZW5lcmF0ZUFyYyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIGlmICghZGVmaW5lZChvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICB2YXIgcG9zaXRpb25zID0gb3B0aW9ucy5wb3NpdGlvbnM7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICghZGVmaW5lZChwb3NpdGlvbnMpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwib3B0aW9ucy5wb3NpdGlvbnMgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBsZW5ndGggPSBwb3NpdGlvbnMubGVuZ3RoO1xuICB2YXIgZWxsaXBzb2lkID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMuZWxsaXBzb2lkLCBFbGxpcHNvaWQuV0dTODQpO1xuICB2YXIgaGVpZ2h0ID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMuaGVpZ2h0LCAwKTtcbiAgdmFyIGhhc0hlaWdodEFycmF5ID0gQXJyYXkuaXNBcnJheShoZWlnaHQpO1xuXG4gIGlmIChsZW5ndGggPCAxKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9IGVsc2UgaWYgKGxlbmd0aCA9PT0gMSkge1xuICAgIHZhciBwID0gZWxsaXBzb2lkLnNjYWxlVG9HZW9kZXRpY1N1cmZhY2UocG9zaXRpb25zWzBdLCBzY2FsZUZpcnN0KTtcbiAgICBoZWlnaHQgPSBoYXNIZWlnaHRBcnJheSA/IGhlaWdodFswXSA6IGhlaWdodDtcbiAgICBpZiAoaGVpZ2h0ICE9PSAwKSB7XG4gICAgICB2YXIgbiA9IGVsbGlwc29pZC5nZW9kZXRpY1N1cmZhY2VOb3JtYWwocCwgY2FydGVzaWFuKTtcbiAgICAgIENhcnRlc2lhbjMubXVsdGlwbHlCeVNjYWxhcihuLCBoZWlnaHQsIG4pO1xuICAgICAgQ2FydGVzaWFuMy5hZGQocCwgbiwgcCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFtwLngsIHAueSwgcC56XTtcbiAgfVxuXG4gIHZhciBtaW5EaXN0YW5jZSA9IG9wdGlvbnMubWluRGlzdGFuY2U7XG4gIGlmICghZGVmaW5lZChtaW5EaXN0YW5jZSkpIHtcbiAgICB2YXIgZ3JhbnVsYXJpdHkgPSBkZWZhdWx0VmFsdWUoXG4gICAgICBvcHRpb25zLmdyYW51bGFyaXR5LFxuICAgICAgQ2VzaXVtTWF0aC5SQURJQU5TX1BFUl9ERUdSRUVcbiAgICApO1xuICAgIG1pbkRpc3RhbmNlID0gQ2VzaXVtTWF0aC5jaG9yZExlbmd0aChncmFudWxhcml0eSwgZWxsaXBzb2lkLm1heGltdW1SYWRpdXMpO1xuICB9XG5cbiAgdmFyIG51bVBvaW50cyA9IDA7XG4gIHZhciBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGggLSAxOyBpKyspIHtcbiAgICBudW1Qb2ludHMgKz0gUG9seWxpbmVQaXBlbGluZS5udW1iZXJPZlBvaW50cyhcbiAgICAgIHBvc2l0aW9uc1tpXSxcbiAgICAgIHBvc2l0aW9uc1tpICsgMV0sXG4gICAgICBtaW5EaXN0YW5jZVxuICAgICk7XG4gIH1cblxuICB2YXIgYXJyYXlMZW5ndGggPSAobnVtUG9pbnRzICsgMSkgKiAzO1xuICB2YXIgbmV3UG9zaXRpb25zID0gbmV3IEFycmF5KGFycmF5TGVuZ3RoKTtcbiAgdmFyIG9mZnNldCA9IDA7XG5cbiAgZm9yIChpID0gMDsgaSA8IGxlbmd0aCAtIDE7IGkrKykge1xuICAgIHZhciBwMCA9IHBvc2l0aW9uc1tpXTtcbiAgICB2YXIgcDEgPSBwb3NpdGlvbnNbaSArIDFdO1xuXG4gICAgdmFyIGgwID0gaGFzSGVpZ2h0QXJyYXkgPyBoZWlnaHRbaV0gOiBoZWlnaHQ7XG4gICAgdmFyIGgxID0gaGFzSGVpZ2h0QXJyYXkgPyBoZWlnaHRbaSArIDFdIDogaGVpZ2h0O1xuXG4gICAgb2Zmc2V0ID0gZ2VuZXJhdGVDYXJ0ZXNpYW5BcmMoXG4gICAgICBwMCxcbiAgICAgIHAxLFxuICAgICAgbWluRGlzdGFuY2UsXG4gICAgICBlbGxpcHNvaWQsXG4gICAgICBoMCxcbiAgICAgIGgxLFxuICAgICAgbmV3UG9zaXRpb25zLFxuICAgICAgb2Zmc2V0XG4gICAgKTtcbiAgfVxuXG4gIHN1YmRpdmlkZUhlaWdodHNTY3JhdGNoQXJyYXkubGVuZ3RoID0gMDtcblxuICB2YXIgbGFzdFBvaW50ID0gcG9zaXRpb25zW2xlbmd0aCAtIDFdO1xuICB2YXIgY2FydG8gPSBlbGxpcHNvaWQuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMobGFzdFBvaW50LCBjYXJ0bzEpO1xuICBjYXJ0by5oZWlnaHQgPSBoYXNIZWlnaHRBcnJheSA/IGhlaWdodFtsZW5ndGggLSAxXSA6IGhlaWdodDtcbiAgdmFyIGNhcnQgPSBlbGxpcHNvaWQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oY2FydG8sIGNhcnRlc2lhbik7XG4gIENhcnRlc2lhbjMucGFjayhjYXJ0LCBuZXdQb3NpdGlvbnMsIGFycmF5TGVuZ3RoIC0gMyk7XG5cbiAgcmV0dXJuIG5ld1Bvc2l0aW9ucztcbn07XG5cbnZhciBzY3JhdGNoQ2FydG9ncmFwaGljMCA9IG5ldyBDYXJ0b2dyYXBoaWMoKTtcbnZhciBzY3JhdGNoQ2FydG9ncmFwaGljMSA9IG5ldyBDYXJ0b2dyYXBoaWMoKTtcblxuLyoqXG4gKiBTdWJkaXZpZGVzIHBvbHlsaW5lIGFuZCByYWlzZXMgYWxsIHBvaW50cyB0byB0aGUgc3BlY2lmaWVkIGhlaWdodCB1c2luZyBSaHVtYiBsaW5lcy4gIFJldHVybnMgYW4gYXJyYXkgb2YgbnVtYmVycyB0byByZXByZXNlbnQgdGhlIHBvc2l0aW9ucy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqIEBwYXJhbSB7Q2FydGVzaWFuM1tdfSBvcHRpb25zLnBvc2l0aW9ucyBUaGUgYXJyYXkgb2YgdHlwZSB7Q2FydGVzaWFuM30gcmVwcmVzZW50aW5nIHBvc2l0aW9ucy5cbiAqIEBwYXJhbSB7TnVtYmVyfE51bWJlcltdfSBbb3B0aW9ucy5oZWlnaHQ9MC4wXSBBIG51bWJlciBvciBhcnJheSBvZiBudW1iZXJzIHJlcHJlc2VudGluZyB0aGUgaGVpZ2h0cyBvZiBlYWNoIHBvc2l0aW9uLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLmdyYW51bGFyaXR5ID0gQ2VzaXVtTWF0aC5SQURJQU5TX1BFUl9ERUdSRUVdIFRoZSBkaXN0YW5jZSwgaW4gcmFkaWFucywgYmV0d2VlbiBlYWNoIGxhdGl0dWRlIGFuZCBsb25naXR1ZGUuIERldGVybWluZXMgdGhlIG51bWJlciBvZiBwb3NpdGlvbnMgaW4gdGhlIGJ1ZmZlci5cbiAqIEBwYXJhbSB7RWxsaXBzb2lkfSBbb3B0aW9ucy5lbGxpcHNvaWQ9RWxsaXBzb2lkLldHUzg0XSBUaGUgZWxsaXBzb2lkIG9uIHdoaWNoIHRoZSBwb3NpdGlvbnMgbGllLlxuICogQHJldHVybnMge051bWJlcltdfSBBIG5ldyBhcnJheSBvZiBwb3NpdGlvbnMgb2YgdHlwZSB7TnVtYmVyfSB0aGF0IGhhdmUgYmVlbiBzdWJkaXZpZGVkIGFuZCByYWlzZWQgdG8gdGhlIHN1cmZhY2Ugb2YgdGhlIGVsbGlwc29pZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogdmFyIHBvc2l0aW9ucyA9IENlc2l1bS5DYXJ0ZXNpYW4zLmZyb21EZWdyZWVzQXJyYXkoW1xuICogICAtMTA1LjAsIDQwLjAsXG4gKiAgIC0xMDAuMCwgMzguMCxcbiAqICAgLTEwNS4wLCAzNS4wLFxuICogICAtMTAwLjAsIDMyLjBcbiAqIF0pO1xuICogdmFyIHN1cmZhY2VQb3NpdGlvbnMgPSBDZXNpdW0uUG9seWxpbmVQaXBlbGluZS5nZW5lcmF0ZVJodW1iQXJjKHtcbiAqICAgcG9zaXRvbnM6IHBvc2l0aW9uc1xuICogfSk7XG4gKi9cblBvbHlsaW5lUGlwZWxpbmUuZ2VuZXJhdGVSaHVtYkFyYyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIGlmICghZGVmaW5lZChvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICB2YXIgcG9zaXRpb25zID0gb3B0aW9ucy5wb3NpdGlvbnM7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICghZGVmaW5lZChwb3NpdGlvbnMpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwib3B0aW9ucy5wb3NpdGlvbnMgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBsZW5ndGggPSBwb3NpdGlvbnMubGVuZ3RoO1xuICB2YXIgZWxsaXBzb2lkID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMuZWxsaXBzb2lkLCBFbGxpcHNvaWQuV0dTODQpO1xuICB2YXIgaGVpZ2h0ID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMuaGVpZ2h0LCAwKTtcbiAgdmFyIGhhc0hlaWdodEFycmF5ID0gQXJyYXkuaXNBcnJheShoZWlnaHQpO1xuXG4gIGlmIChsZW5ndGggPCAxKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9IGVsc2UgaWYgKGxlbmd0aCA9PT0gMSkge1xuICAgIHZhciBwID0gZWxsaXBzb2lkLnNjYWxlVG9HZW9kZXRpY1N1cmZhY2UocG9zaXRpb25zWzBdLCBzY2FsZUZpcnN0KTtcbiAgICBoZWlnaHQgPSBoYXNIZWlnaHRBcnJheSA/IGhlaWdodFswXSA6IGhlaWdodDtcbiAgICBpZiAoaGVpZ2h0ICE9PSAwKSB7XG4gICAgICB2YXIgbiA9IGVsbGlwc29pZC5nZW9kZXRpY1N1cmZhY2VOb3JtYWwocCwgY2FydGVzaWFuKTtcbiAgICAgIENhcnRlc2lhbjMubXVsdGlwbHlCeVNjYWxhcihuLCBoZWlnaHQsIG4pO1xuICAgICAgQ2FydGVzaWFuMy5hZGQocCwgbiwgcCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFtwLngsIHAueSwgcC56XTtcbiAgfVxuXG4gIHZhciBncmFudWxhcml0eSA9IGRlZmF1bHRWYWx1ZShcbiAgICBvcHRpb25zLmdyYW51bGFyaXR5LFxuICAgIENlc2l1bU1hdGguUkFESUFOU19QRVJfREVHUkVFXG4gICk7XG5cbiAgdmFyIG51bVBvaW50cyA9IDA7XG4gIHZhciBpO1xuXG4gIHZhciBjMCA9IGVsbGlwc29pZC5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhcbiAgICBwb3NpdGlvbnNbMF0sXG4gICAgc2NyYXRjaENhcnRvZ3JhcGhpYzBcbiAgKTtcbiAgdmFyIGMxO1xuICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgYzEgPSBlbGxpcHNvaWQuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMoXG4gICAgICBwb3NpdGlvbnNbaSArIDFdLFxuICAgICAgc2NyYXRjaENhcnRvZ3JhcGhpYzFcbiAgICApO1xuICAgIG51bVBvaW50cyArPSBQb2x5bGluZVBpcGVsaW5lLm51bWJlck9mUG9pbnRzUmh1bWJMaW5lKGMwLCBjMSwgZ3JhbnVsYXJpdHkpO1xuICAgIGMwID0gQ2FydG9ncmFwaGljLmNsb25lKGMxLCBzY3JhdGNoQ2FydG9ncmFwaGljMCk7XG4gIH1cblxuICB2YXIgYXJyYXlMZW5ndGggPSAobnVtUG9pbnRzICsgMSkgKiAzO1xuICB2YXIgbmV3UG9zaXRpb25zID0gbmV3IEFycmF5KGFycmF5TGVuZ3RoKTtcbiAgdmFyIG9mZnNldCA9IDA7XG5cbiAgZm9yIChpID0gMDsgaSA8IGxlbmd0aCAtIDE7IGkrKykge1xuICAgIHZhciBwMCA9IHBvc2l0aW9uc1tpXTtcbiAgICB2YXIgcDEgPSBwb3NpdGlvbnNbaSArIDFdO1xuXG4gICAgdmFyIGgwID0gaGFzSGVpZ2h0QXJyYXkgPyBoZWlnaHRbaV0gOiBoZWlnaHQ7XG4gICAgdmFyIGgxID0gaGFzSGVpZ2h0QXJyYXkgPyBoZWlnaHRbaSArIDFdIDogaGVpZ2h0O1xuXG4gICAgb2Zmc2V0ID0gZ2VuZXJhdGVDYXJ0ZXNpYW5SaHVtYkFyYyhcbiAgICAgIHAwLFxuICAgICAgcDEsXG4gICAgICBncmFudWxhcml0eSxcbiAgICAgIGVsbGlwc29pZCxcbiAgICAgIGgwLFxuICAgICAgaDEsXG4gICAgICBuZXdQb3NpdGlvbnMsXG4gICAgICBvZmZzZXRcbiAgICApO1xuICB9XG5cbiAgc3ViZGl2aWRlSGVpZ2h0c1NjcmF0Y2hBcnJheS5sZW5ndGggPSAwO1xuXG4gIHZhciBsYXN0UG9pbnQgPSBwb3NpdGlvbnNbbGVuZ3RoIC0gMV07XG4gIHZhciBjYXJ0byA9IGVsbGlwc29pZC5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhsYXN0UG9pbnQsIGNhcnRvMSk7XG4gIGNhcnRvLmhlaWdodCA9IGhhc0hlaWdodEFycmF5ID8gaGVpZ2h0W2xlbmd0aCAtIDFdIDogaGVpZ2h0O1xuICB2YXIgY2FydCA9IGVsbGlwc29pZC5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihjYXJ0bywgY2FydGVzaWFuKTtcbiAgQ2FydGVzaWFuMy5wYWNrKGNhcnQsIG5ld1Bvc2l0aW9ucywgYXJyYXlMZW5ndGggLSAzKTtcblxuICByZXR1cm4gbmV3UG9zaXRpb25zO1xufTtcblxuLyoqXG4gKiBTdWJkaXZpZGVzIHBvbHlsaW5lIGFuZCByYWlzZXMgYWxsIHBvaW50cyB0byB0aGUgc3BlY2lmaWVkIGhlaWdodC4gUmV0dXJucyBhbiBhcnJheSBvZiBuZXcge0NhcnRlc2lhbjN9IHBvc2l0aW9ucy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqIEBwYXJhbSB7Q2FydGVzaWFuM1tdfSBvcHRpb25zLnBvc2l0aW9ucyBUaGUgYXJyYXkgb2YgdHlwZSB7Q2FydGVzaWFuM30gcmVwcmVzZW50aW5nIHBvc2l0aW9ucy5cbiAqIEBwYXJhbSB7TnVtYmVyfE51bWJlcltdfSBbb3B0aW9ucy5oZWlnaHQ9MC4wXSBBIG51bWJlciBvciBhcnJheSBvZiBudW1iZXJzIHJlcHJlc2VudGluZyB0aGUgaGVpZ2h0cyBvZiBlYWNoIHBvc2l0aW9uLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLmdyYW51bGFyaXR5ID0gQ2VzaXVtTWF0aC5SQURJQU5TX1BFUl9ERUdSRUVdIFRoZSBkaXN0YW5jZSwgaW4gcmFkaWFucywgYmV0d2VlbiBlYWNoIGxhdGl0dWRlIGFuZCBsb25naXR1ZGUuIERldGVybWluZXMgdGhlIG51bWJlciBvZiBwb3NpdGlvbnMgaW4gdGhlIGJ1ZmZlci5cbiAqIEBwYXJhbSB7RWxsaXBzb2lkfSBbb3B0aW9ucy5lbGxpcHNvaWQ9RWxsaXBzb2lkLldHUzg0XSBUaGUgZWxsaXBzb2lkIG9uIHdoaWNoIHRoZSBwb3NpdGlvbnMgbGllLlxuICogQHJldHVybnMge0NhcnRlc2lhbjNbXX0gQSBuZXcgYXJyYXkgb2YgY2FydGVzaWFuMyBwb3NpdGlvbnMgdGhhdCBoYXZlIGJlZW4gc3ViZGl2aWRlZCBhbmQgcmFpc2VkIHRvIHRoZSBzdXJmYWNlIG9mIHRoZSBlbGxpcHNvaWQuXG4gKlxuICogQGV4YW1wbGVcbiAqIHZhciBwb3NpdGlvbnMgPSBDZXNpdW0uQ2FydGVzaWFuMy5mcm9tRGVncmVlc0FycmF5KFtcbiAqICAgLTEwNS4wLCA0MC4wLFxuICogICAtMTAwLjAsIDM4LjAsXG4gKiAgIC0xMDUuMCwgMzUuMCxcbiAqICAgLTEwMC4wLCAzMi4wXG4gKiBdKTtcbiAqIHZhciBzdXJmYWNlUG9zaXRpb25zID0gQ2VzaXVtLlBvbHlsaW5lUGlwZWxpbmUuZ2VuZXJhdGVDYXJ0ZXNpYW5BcmMoe1xuICogICBwb3NpdG9uczogcG9zaXRpb25zXG4gKiB9KTtcbiAqL1xuUG9seWxpbmVQaXBlbGluZS5nZW5lcmF0ZUNhcnRlc2lhbkFyYyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIHZhciBudW1iZXJBcnJheSA9IFBvbHlsaW5lUGlwZWxpbmUuZ2VuZXJhdGVBcmMob3B0aW9ucyk7XG4gIHZhciBzaXplID0gbnVtYmVyQXJyYXkubGVuZ3RoIC8gMztcbiAgdmFyIG5ld1Bvc2l0aW9ucyA9IG5ldyBBcnJheShzaXplKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaXplOyBpKyspIHtcbiAgICBuZXdQb3NpdGlvbnNbaV0gPSBDYXJ0ZXNpYW4zLnVucGFjayhudW1iZXJBcnJheSwgaSAqIDMpO1xuICB9XG4gIHJldHVybiBuZXdQb3NpdGlvbnM7XG59O1xuXG4vKipcbiAqIFN1YmRpdmlkZXMgcG9seWxpbmUgYW5kIHJhaXNlcyBhbGwgcG9pbnRzIHRvIHRoZSBzcGVjaWZpZWQgaGVpZ2h0IHVzaW5nIFJodW1iIExpbmVzLiBSZXR1cm5zIGFuIGFycmF5IG9mIG5ldyB7Q2FydGVzaWFuM30gcG9zaXRpb25zLlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgT2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICogQHBhcmFtIHtDYXJ0ZXNpYW4zW119IG9wdGlvbnMucG9zaXRpb25zIFRoZSBhcnJheSBvZiB0eXBlIHtDYXJ0ZXNpYW4zfSByZXByZXNlbnRpbmcgcG9zaXRpb25zLlxuICogQHBhcmFtIHtOdW1iZXJ8TnVtYmVyW119IFtvcHRpb25zLmhlaWdodD0wLjBdIEEgbnVtYmVyIG9yIGFycmF5IG9mIG51bWJlcnMgcmVwcmVzZW50aW5nIHRoZSBoZWlnaHRzIG9mIGVhY2ggcG9zaXRpb24uXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuZ3JhbnVsYXJpdHkgPSBDZXNpdW1NYXRoLlJBRElBTlNfUEVSX0RFR1JFRV0gVGhlIGRpc3RhbmNlLCBpbiByYWRpYW5zLCBiZXR3ZWVuIGVhY2ggbGF0aXR1ZGUgYW5kIGxvbmdpdHVkZS4gRGV0ZXJtaW5lcyB0aGUgbnVtYmVyIG9mIHBvc2l0aW9ucyBpbiB0aGUgYnVmZmVyLlxuICogQHBhcmFtIHtFbGxpcHNvaWR9IFtvcHRpb25zLmVsbGlwc29pZD1FbGxpcHNvaWQuV0dTODRdIFRoZSBlbGxpcHNvaWQgb24gd2hpY2ggdGhlIHBvc2l0aW9ucyBsaWUuXG4gKiBAcmV0dXJucyB7Q2FydGVzaWFuM1tdfSBBIG5ldyBhcnJheSBvZiBjYXJ0ZXNpYW4zIHBvc2l0aW9ucyB0aGF0IGhhdmUgYmVlbiBzdWJkaXZpZGVkIGFuZCByYWlzZWQgdG8gdGhlIHN1cmZhY2Ugb2YgdGhlIGVsbGlwc29pZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogdmFyIHBvc2l0aW9ucyA9IENlc2l1bS5DYXJ0ZXNpYW4zLmZyb21EZWdyZWVzQXJyYXkoW1xuICogICAtMTA1LjAsIDQwLjAsXG4gKiAgIC0xMDAuMCwgMzguMCxcbiAqICAgLTEwNS4wLCAzNS4wLFxuICogICAtMTAwLjAsIDMyLjBcbiAqIF0pO1xuICogdmFyIHN1cmZhY2VQb3NpdGlvbnMgPSBDZXNpdW0uUG9seWxpbmVQaXBlbGluZS5nZW5lcmF0ZUNhcnRlc2lhblJodW1iQXJjKHtcbiAqICAgcG9zaXRvbnM6IHBvc2l0aW9uc1xuICogfSk7XG4gKi9cblBvbHlsaW5lUGlwZWxpbmUuZ2VuZXJhdGVDYXJ0ZXNpYW5SaHVtYkFyYyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIHZhciBudW1iZXJBcnJheSA9IFBvbHlsaW5lUGlwZWxpbmUuZ2VuZXJhdGVSaHVtYkFyYyhvcHRpb25zKTtcbiAgdmFyIHNpemUgPSBudW1iZXJBcnJheS5sZW5ndGggLyAzO1xuICB2YXIgbmV3UG9zaXRpb25zID0gbmV3IEFycmF5KHNpemUpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgIG5ld1Bvc2l0aW9uc1tpXSA9IENhcnRlc2lhbjMudW5wYWNrKG51bWJlckFycmF5LCBpICogMyk7XG4gIH1cbiAgcmV0dXJuIG5ld1Bvc2l0aW9ucztcbn07XG5leHBvcnQgZGVmYXVsdCBQb2x5bGluZVBpcGVsaW5lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///61733\n')},23616:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32378);\n/* harmony import */ var _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88108);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60216);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84828);\n/* harmony import */ var _CornerType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(56439);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(50491);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(57552);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(99417);\n/* harmony import */ var _oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(27671);\n/* harmony import */ var _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(78284);\n/* harmony import */ var _PolylineVolumeGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(39534);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(97264);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(67252);\n/* harmony import */ var _WindingOrder_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(32441);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction computeAttributes(\n  combinedPositions,\n  shape,\n  boundingRectangle,\n  vertexFormat\n) {\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\n  if (vertexFormat.position) {\n    attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n      componentsPerAttribute: 3,\n      values: combinedPositions,\n    });\n  }\n  var shapeLength = shape.length;\n  var vertexCount = combinedPositions.length / 3;\n  var length = (vertexCount - shapeLength * 2) / (shapeLength * 2);\n  var firstEndIndices = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].triangulate */ .Z.triangulate(shape);\n\n  var indicesCount =\n    (length - 1) * shapeLength * 6 + firstEndIndices.length * 2;\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].createTypedArray */ .Z.createTypedArray(vertexCount, indicesCount);\n  var i, j;\n  var ll, ul, ur, lr;\n  var offset = shapeLength * 2;\n  var index = 0;\n  for (i = 0; i < length - 1; i++) {\n    for (j = 0; j < shapeLength - 1; j++) {\n      ll = j * 2 + i * shapeLength * 2;\n      lr = ll + offset;\n      ul = ll + 1;\n      ur = ul + offset;\n\n      indices[index++] = ul;\n      indices[index++] = ll;\n      indices[index++] = ur;\n      indices[index++] = ur;\n      indices[index++] = ll;\n      indices[index++] = lr;\n    }\n    ll = shapeLength * 2 - 2 + i * shapeLength * 2;\n    ul = ll + 1;\n    ur = ul + offset;\n    lr = ll + offset;\n\n    indices[index++] = ul;\n    indices[index++] = ll;\n    indices[index++] = ur;\n    indices[index++] = ur;\n    indices[index++] = ll;\n    indices[index++] = lr;\n  }\n\n  if (vertexFormat.st || vertexFormat.tangent || vertexFormat.bitangent) {\n    // st required for tangent/bitangent calculation\n    var st = new Float32Array(vertexCount * 2);\n    var lengthSt = 1 / (length - 1);\n    var heightSt = 1 / boundingRectangle.height;\n    var heightOffset = boundingRectangle.height / 2;\n    var s, t;\n    var stindex = 0;\n    for (i = 0; i < length; i++) {\n      s = i * lengthSt;\n      t = heightSt * (shape[0].y + heightOffset);\n      st[stindex++] = s;\n      st[stindex++] = t;\n      for (j = 1; j < shapeLength; j++) {\n        t = heightSt * (shape[j].y + heightOffset);\n        st[stindex++] = s;\n        st[stindex++] = t;\n        st[stindex++] = s;\n        st[stindex++] = t;\n      }\n      t = heightSt * (shape[0].y + heightOffset);\n      st[stindex++] = s;\n      st[stindex++] = t;\n    }\n    for (j = 0; j < shapeLength; j++) {\n      s = 0;\n      t = heightSt * (shape[j].y + heightOffset);\n      st[stindex++] = s;\n      st[stindex++] = t;\n    }\n    for (j = 0; j < shapeLength; j++) {\n      s = (length - 1) * lengthSt;\n      t = heightSt * (shape[j].y + heightOffset);\n      st[stindex++] = s;\n      st[stindex++] = t;\n    }\n\n    attributes.st = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 2,\n      values: new Float32Array(st),\n    });\n  }\n\n  var endOffset = vertexCount - shapeLength * 2;\n  for (i = 0; i < firstEndIndices.length; i += 3) {\n    var v0 = firstEndIndices[i] + endOffset;\n    var v1 = firstEndIndices[i + 1] + endOffset;\n    var v2 = firstEndIndices[i + 2] + endOffset;\n\n    indices[index++] = v0;\n    indices[index++] = v1;\n    indices[index++] = v2;\n    indices[index++] = v2 + shapeLength;\n    indices[index++] = v1 + shapeLength;\n    indices[index++] = v0 + shapeLength;\n  }\n\n  var geometry = new _Geometry_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: indices,\n    boundingSphere: _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromVertices */ .Z.fromVertices(combinedPositions),\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n  });\n\n  if (vertexFormat.normal) {\n    geometry = _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].computeNormal */ .Z.computeNormal(geometry);\n  }\n\n  if (vertexFormat.tangent || vertexFormat.bitangent) {\n    try {\n      geometry = _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].computeTangentAndBitangent */ .Z.computeTangentAndBitangent(geometry);\n    } catch (e) {\n      (0,_oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(\n        "polyline-volume-tangent-bitangent",\n        "Unable to compute tangents and bitangents for polyline volume geometry"\n      );\n      //TODO https://github.com/CesiumGS/cesium/issues/3609\n    }\n\n    if (!vertexFormat.tangent) {\n      geometry.attributes.tangent = undefined;\n    }\n    if (!vertexFormat.bitangent) {\n      geometry.attributes.bitangent = undefined;\n    }\n    if (!vertexFormat.st) {\n      geometry.attributes.st = undefined;\n    }\n  }\n\n  return geometry;\n}\n\n/**\n * A description of a polyline with a volume (a 2D shape extruded along a polyline).\n *\n * @alias PolylineVolumeGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.polylinePositions An array of {@link Cartesian3} positions that define the center of the polyline volume.\n * @param {Cartesian2[]} options.shapePositions An array of {@link Cartesian2} positions that define the shape to be extruded along the polyline\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {CornerType} [options.cornerType=CornerType.ROUNDED] Determines the style of the corners.\n *\n * @see PolylineVolumeGeometry#createGeometry\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Polyline%20Volume.html|Cesium Sandcastle Polyline Volume Demo}\n *\n * @example\n * function computeCircle(radius) {\n *   var positions = [];\n *   for (var i = 0; i < 360; i++) {\n *     var radians = Cesium.Math.toRadians(i);\n *     positions.push(new Cesium.Cartesian2(radius * Math.cos(radians), radius * Math.sin(radians)));\n *   }\n *   return positions;\n * }\n *\n * var volume = new Cesium.PolylineVolumeGeometry({\n *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY,\n *   polylinePositions : Cesium.Cartesian3.fromDegreesArray([\n *     -72.0, 40.0,\n *     -70.0, 35.0\n *   ]),\n *   shapePositions : computeCircle(100000.0)\n * });\n */\nfunction PolylineVolumeGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var positions = options.polylinePositions;\n  var shape = options.shapePositions;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z)(positions)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("options.polylinePositions is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z)(shape)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("options.shapePositions is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._positions = positions;\n  this._shape = shape;\n  this._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].WGS84 */ .Z.WGS84)\n  );\n  this._cornerType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.cornerType, _CornerType_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].ROUNDED */ .Z.ROUNDED);\n  this._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.vertexFormat, _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].DEFAULT */ .Z.DEFAULT)\n  );\n  this._granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  this._workerName = "createPolylineVolumeGeometry";\n\n  var numComponents = 1 + positions.length * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength;\n  numComponents += 1 + shape.length * _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength =\n    numComponents + _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength + _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].packedLength */ .Z.packedLength + 2;\n}\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {PolylineVolumeGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nPolylineVolumeGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z)(value)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("value is required");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var i;\n\n  var positions = value._positions;\n  var length = positions.length;\n  array[startingIndex++] = length;\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].pack */ .Z.pack(positions[i], array, startingIndex);\n  }\n\n  var shape = value._shape;\n  length = shape.length;\n  array[startingIndex++] = length;\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(shape[i], array, startingIndex);\n  }\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength;\n\n  _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].pack */ .Z.pack(value._vertexFormat, array, startingIndex);\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._cornerType;\n  array[startingIndex] = value._granularity;\n\n  return array;\n};\n\nvar scratchEllipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE);\nvar scratchVertexFormat = new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z();\nvar scratchOptions = {\n  polylinePositions: undefined,\n  shapePositions: undefined,\n  ellipsoid: scratchEllipsoid,\n  vertexFormat: scratchVertexFormat,\n  cornerType: undefined,\n  granularity: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {PolylineVolumeGeometry} [result] The object into which to store the result.\n * @returns {PolylineVolumeGeometry} The modified result parameter or a new PolylineVolumeGeometry instance if one was not provided.\n */\nPolylineVolumeGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var i;\n\n  var length = array[startingIndex++];\n  var positions = new Array(length);\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength) {\n    positions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  length = array[startingIndex++];\n  var shape = new Array(length);\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    shape[i] = _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchEllipsoid);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength;\n\n  var vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchVertexFormat\n  );\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].packedLength */ .Z.packedLength;\n\n  var cornerType = array[startingIndex++];\n  var granularity = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z)(result)) {\n    scratchOptions.polylinePositions = positions;\n    scratchOptions.shapePositions = shape;\n    scratchOptions.cornerType = cornerType;\n    scratchOptions.granularity = granularity;\n    return new PolylineVolumeGeometry(scratchOptions);\n  }\n\n  result._positions = positions;\n  result._shape = shape;\n  result._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(ellipsoid, result._ellipsoid);\n  result._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].clone */ .Z.clone(vertexFormat, result._vertexFormat);\n  result._cornerType = cornerType;\n  result._granularity = granularity;\n\n  return result;\n};\n\nvar brScratch = new _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n/**\n * Computes the geometric representation of a polyline with a volume, including its vertices, indices, and a bounding sphere.\n *\n * @param {PolylineVolumeGeometry} polylineVolumeGeometry A description of the polyline volume.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nPolylineVolumeGeometry.createGeometry = function (polylineVolumeGeometry) {\n  var positions = polylineVolumeGeometry._positions;\n  var cleanPositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    positions,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon\n  );\n  var shape2D = polylineVolumeGeometry._shape;\n  shape2D = _PolylineVolumeGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].removeDuplicatesFromShape */ .Z.removeDuplicatesFromShape(shape2D);\n\n  if (cleanPositions.length < 2 || shape2D.length < 3) {\n    return undefined;\n  }\n\n  if (\n    _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].computeWindingOrder2D */ .Z.computeWindingOrder2D(shape2D) === _WindingOrder_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].CLOCKWISE */ .Z.CLOCKWISE\n  ) {\n    shape2D.reverse();\n  }\n  var boundingRectangle = _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromPoints */ .Z.fromPoints(shape2D, brScratch);\n\n  var computedPositions = _PolylineVolumeGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].computePositions */ .Z.computePositions(\n    cleanPositions,\n    shape2D,\n    boundingRectangle,\n    polylineVolumeGeometry,\n    true\n  );\n  return computeAttributes(\n    computedPositions,\n    shape2D,\n    boundingRectangle,\n    polylineVolumeGeometry._vertexFormat\n  );\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolylineVolumeGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23616\n')},39534:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(63367);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(51688);\n/* harmony import */ var _CornerType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(56439);\n/* harmony import */ var _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(74744);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(68201);\n/* harmony import */ var _Matrix4_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(72248);\n/* harmony import */ var _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(61733);\n/* harmony import */ var _Quaternion_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(87811);\n/* harmony import */ var _Transforms_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(95555);\n/* harmony import */ var _Core_oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(27671);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar scratch2Array = [new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(), new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z()];\nvar scratchCartesian1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartesian2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartesian3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartesian4 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartesian5 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartesian6 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartesian7 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartesian8 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCartesian9 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nvar scratch1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratch2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n/**\n * @private\n */\nvar PolylineVolumeGeometryLibrary = {};\n\nvar cartographic = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nfunction scaleToSurface(positions, ellipsoid) {\n  var heights = new Array(positions.length);\n  for (var i = 0; i < positions.length; i++) {\n    var pos = positions[i];\n    cartographic = ellipsoid.cartesianToCartographic(pos, cartographic);\n    heights[i] = cartographic.height;\n    positions[i] = ellipsoid.scaleToGeodeticSurface(pos, pos);\n  }\n  return heights;\n}\n\nfunction subdivideHeights(points, h0, h1, granularity) {\n  var p0 = points[0];\n  var p1 = points[1];\n  var angleBetween = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].angleBetween */ .Z.angleBetween(p0, p1);\n  var numPoints = Math.ceil(angleBetween / granularity);\n  var heights = new Array(numPoints);\n  var i;\n  if (h0 === h1) {\n    for (i = 0; i < numPoints; i++) {\n      heights[i] = h0;\n    }\n    heights.push(h1);\n    return heights;\n  }\n\n  var dHeight = h1 - h0;\n  var heightPerVertex = dHeight / numPoints;\n\n  for (i = 1; i < numPoints; i++) {\n    var h = h0 + i * heightPerVertex;\n    heights[i] = h;\n  }\n\n  heights[0] = h0;\n  heights.push(h1);\n  return heights;\n}\n\nvar nextScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar prevScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nfunction computeRotationAngle(start, end, position, ellipsoid) {\n  var tangentPlane = new _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(position, ellipsoid);\n  var next = tangentPlane.projectPointOntoPlane(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(position, start, nextScratch),\n    nextScratch\n  );\n  var prev = tangentPlane.projectPointOntoPlane(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(position, end, prevScratch),\n    prevScratch\n  );\n  var angle = _Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].angleBetween */ .Z.angleBetween(next, prev);\n\n  return prev.x * next.y - prev.y * next.x >= 0.0 ? -angle : angle;\n}\n\nvar negativeX = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(-1, 0, 0);\nvar transform = new _Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z();\nvar translation = new _Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z();\nvar rotationZ = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\nvar scaleMatrix = _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].IDENTITY.clone */ .Z.IDENTITY.clone();\nvar westScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar finalPosScratch = new _Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar heightCartesian = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nfunction addPosition(\n  center,\n  left,\n  shape,\n  finalPositions,\n  ellipsoid,\n  height,\n  xScalar,\n  repeat\n) {\n  var west = westScratch;\n  var finalPosition = finalPosScratch;\n  transform = _Transforms_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].eastNorthUpToFixedFrame */ .Z.eastNorthUpToFixedFrame(center, ellipsoid, transform);\n\n  west = _Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].multiplyByPointAsVector */ .Z.multiplyByPointAsVector(transform, negativeX, west);\n  west = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(west, west);\n  var angle = computeRotationAngle(west, left, center, ellipsoid);\n  rotationZ = _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].fromRotationZ */ .Z.fromRotationZ(angle, rotationZ);\n\n  heightCartesian.z = height;\n  transform = _Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(\n    transform,\n    _Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].fromRotationTranslation */ .Z.fromRotationTranslation(rotationZ, heightCartesian, translation),\n    transform\n  );\n  var scale = scaleMatrix;\n  scale[0] = xScalar;\n\n  for (var j = 0; j < repeat; j++) {\n    for (var i = 0; i < shape.length; i += 3) {\n      finalPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromArray */ .Z.fromArray(shape, i, finalPosition);\n      finalPosition = _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n        scale,\n        finalPosition,\n        finalPosition\n      );\n      finalPosition = _Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n        transform,\n        finalPosition,\n        finalPosition\n      );\n      finalPositions.push(finalPosition.x, finalPosition.y, finalPosition.z);\n    }\n  }\n\n  return finalPositions;\n}\n\nvar centerScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nfunction addPositions(\n  centers,\n  left,\n  shape,\n  finalPositions,\n  ellipsoid,\n  heights,\n  xScalar\n) {\n  for (var i = 0; i < centers.length; i += 3) {\n    var center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromArray */ .Z.fromArray(centers, i, centerScratch);\n    finalPositions = addPosition(\n      center,\n      left,\n      shape,\n      finalPositions,\n      ellipsoid,\n      heights[i / 3],\n      xScalar,\n      1\n    );\n  }\n  return finalPositions;\n}\n\nfunction convertShapeTo3DDuplicate(shape2D, boundingRectangle) {\n  //orientate 2D shape to XZ plane center at (0, 0, 0), duplicate points\n  var length = shape2D.length;\n  var shape = new Array(length * 6);\n  var index = 0;\n  var xOffset = boundingRectangle.x + boundingRectangle.width / 2;\n  var yOffset = boundingRectangle.y + boundingRectangle.height / 2;\n\n  var point = shape2D[0];\n  shape[index++] = point.x - xOffset;\n  shape[index++] = 0.0;\n  shape[index++] = point.y - yOffset;\n  for (var i = 1; i < length; i++) {\n    point = shape2D[i];\n    var x = point.x - xOffset;\n    var z = point.y - yOffset;\n    shape[index++] = x;\n    shape[index++] = 0.0;\n    shape[index++] = z;\n\n    shape[index++] = x;\n    shape[index++] = 0.0;\n    shape[index++] = z;\n  }\n  point = shape2D[0];\n  shape[index++] = point.x - xOffset;\n  shape[index++] = 0.0;\n  shape[index++] = point.y - yOffset;\n\n  return shape;\n}\n\nfunction convertShapeTo3D(shape2D, boundingRectangle) {\n  //orientate 2D shape to XZ plane center at (0, 0, 0)\n  var length = shape2D.length;\n  var shape = new Array(length * 3);\n  var index = 0;\n  var xOffset = boundingRectangle.x + boundingRectangle.width / 2;\n  var yOffset = boundingRectangle.y + boundingRectangle.height / 2;\n\n  for (var i = 0; i < length; i++) {\n    shape[index++] = shape2D[i].x - xOffset;\n    shape[index++] = 0;\n    shape[index++] = shape2D[i].y - yOffset;\n  }\n\n  return shape;\n}\n\nvar quaterion = new _Quaternion_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\nvar startPointScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar rotMatrix = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\nfunction computeRoundCorner(\n  pivot,\n  startPoint,\n  endPoint,\n  cornerType,\n  leftIsOutside,\n  ellipsoid,\n  finalPositions,\n  shape,\n  height,\n  duplicatePoints\n) {\n  var angle = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].angleBetween */ .Z.angleBetween(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(startPoint, pivot, scratch1),\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(endPoint, pivot, scratch2)\n  );\n  var granularity =\n    cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].BEVELED */ .Z.BEVELED\n      ? 0\n      : Math.ceil(angle / _Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].toRadians */ .Z.toRadians(5));\n\n  var m;\n  if (leftIsOutside) {\n    m = _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].fromQuaternion */ .Z.fromQuaternion(\n      _Quaternion_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].negate */ .Z.negate(pivot, scratch1),\n        angle / (granularity + 1),\n        quaterion\n      ),\n      rotMatrix\n    );\n  } else {\n    m = _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].fromQuaternion */ .Z.fromQuaternion(\n      _Quaternion_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(pivot, angle / (granularity + 1), quaterion),\n      rotMatrix\n    );\n  }\n\n  var left;\n  var surfacePoint;\n  startPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(startPoint, startPointScratch);\n  if (granularity > 0) {\n    var repeat = duplicatePoints ? 2 : 1;\n    for (var i = 0; i < granularity; i++) {\n      startPoint = _Matrix3_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].multiplyByVector */ .Z.multiplyByVector(m, startPoint, startPoint);\n      left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(startPoint, pivot, scratch1);\n      left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(left, left);\n      if (!leftIsOutside) {\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].negate */ .Z.negate(left, left);\n      }\n      surfacePoint = ellipsoid.scaleToGeodeticSurface(startPoint, scratch2);\n      finalPositions = addPosition(\n        surfacePoint,\n        left,\n        shape,\n        finalPositions,\n        ellipsoid,\n        height,\n        1,\n        repeat\n      );\n    }\n  } else {\n    left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(startPoint, pivot, scratch1);\n    left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(left, left);\n    if (!leftIsOutside) {\n      left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].negate */ .Z.negate(left, left);\n    }\n    surfacePoint = ellipsoid.scaleToGeodeticSurface(startPoint, scratch2);\n    finalPositions = addPosition(\n      surfacePoint,\n      left,\n      shape,\n      finalPositions,\n      ellipsoid,\n      height,\n      1,\n      1\n    );\n\n    endPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(endPoint, startPointScratch);\n    left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(endPoint, pivot, scratch1);\n    left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(left, left);\n    if (!leftIsOutside) {\n      left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].negate */ .Z.negate(left, left);\n    }\n    surfacePoint = ellipsoid.scaleToGeodeticSurface(endPoint, scratch2);\n    finalPositions = addPosition(\n      surfacePoint,\n      left,\n      shape,\n      finalPositions,\n      ellipsoid,\n      height,\n      1,\n      1\n    );\n  }\n\n  return finalPositions;\n}\n\nPolylineVolumeGeometryLibrary.removeDuplicatesFromShape = function (\n  shapePositions\n) {\n  var length = shapePositions.length;\n  var cleanedPositions = [];\n  for (var i0 = length - 1, i1 = 0; i1 < length; i0 = i1++) {\n    var v0 = shapePositions[i0];\n    var v1 = shapePositions[i1];\n\n    if (!_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(v0, v1)) {\n      cleanedPositions.push(v1); // Shallow copy!\n    }\n  }\n\n  return cleanedPositions;\n};\n\nPolylineVolumeGeometryLibrary.angleIsGreaterThanPi = function (\n  forward,\n  backward,\n  position,\n  ellipsoid\n) {\n  var tangentPlane = new _EllipsoidTangentPlane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(position, ellipsoid);\n  var next = tangentPlane.projectPointOntoPlane(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(position, forward, nextScratch),\n    nextScratch\n  );\n  var prev = tangentPlane.projectPointOntoPlane(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(position, backward, prevScratch),\n    prevScratch\n  );\n\n  return prev.x * next.y - prev.y * next.x >= 0.0;\n};\n\nvar scratchForwardProjection = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchBackwardProjection = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nPolylineVolumeGeometryLibrary.computePositions = function (\n  positions,\n  shape2D,\n  boundingRectangle,\n  geometry,\n  duplicatePoints\n) {\n  var ellipsoid = geometry._ellipsoid;\n  var heights = scaleToSurface(positions, ellipsoid);\n  var granularity = geometry._granularity;\n  var cornerType = geometry._cornerType;\n  var shapeForSides = duplicatePoints\n    ? convertShapeTo3DDuplicate(shape2D, boundingRectangle)\n    : convertShapeTo3D(shape2D, boundingRectangle);\n  var shapeForEnds = duplicatePoints\n    ? convertShapeTo3D(shape2D, boundingRectangle)\n    : undefined;\n  var heightOffset = boundingRectangle.height / 2;\n  var width = boundingRectangle.width / 2;\n  var length = positions.length;\n  var finalPositions = [];\n  var ends = duplicatePoints ? [] : undefined;\n\n  var forward = scratchCartesian1;\n  var backward = scratchCartesian2;\n  var cornerDirection = scratchCartesian3;\n  var surfaceNormal = scratchCartesian4;\n  var pivot = scratchCartesian5;\n  var start = scratchCartesian6;\n  var end = scratchCartesian7;\n  var left = scratchCartesian8;\n  var previousPosition = scratchCartesian9;\n\n  var position = positions[0];\n  var nextPosition = positions[1];\n  surfaceNormal = ellipsoid.geodeticSurfaceNormal(position, surfaceNormal);\n  forward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(nextPosition, position, forward);\n  forward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(forward, forward);\n  left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(surfaceNormal, forward, left);\n  left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(left, left);\n  var h0 = heights[0];\n  var h1 = heights[1];\n  if (duplicatePoints) {\n    ends = addPosition(\n      position,\n      left,\n      shapeForEnds,\n      ends,\n      ellipsoid,\n      h0 + heightOffset,\n      1,\n      1\n    );\n  }\n  previousPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, previousPosition);\n  position = nextPosition;\n  backward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].negate */ .Z.negate(forward, backward);\n  var subdividedHeights;\n  var subdividedPositions;\n  for (var i = 1; i < length - 1; i++) {\n    var repeat = duplicatePoints ? 2 : 1;\n    nextPosition = positions[i + 1];\n    if (position.equals(nextPosition)) {\n      (0,_Core_oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(\n        "Positions are too close and are considered equivalent with rounding error."\n      );\n      continue;\n    }\n    forward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(nextPosition, position, forward);\n    forward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(forward, forward);\n    cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(forward, backward, cornerDirection);\n    cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(cornerDirection, cornerDirection);\n    surfaceNormal = ellipsoid.geodeticSurfaceNormal(position, surfaceNormal);\n\n    var forwardProjection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n      surfaceNormal,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(forward, surfaceNormal),\n      scratchForwardProjection\n    );\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(forward, forwardProjection, forwardProjection);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(forwardProjection, forwardProjection);\n\n    var backwardProjection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n      surfaceNormal,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(backward, surfaceNormal),\n      scratchBackwardProjection\n    );\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(backward, backwardProjection, backwardProjection);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(backwardProjection, backwardProjection);\n\n    var doCorner = !_Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n      Math.abs(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(forwardProjection, backwardProjection)),\n      1.0,\n      _Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].EPSILON7 */ .Z.EPSILON7\n    );\n\n    if (doCorner) {\n      cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(\n        cornerDirection,\n        surfaceNormal,\n        cornerDirection\n      );\n      cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(\n        surfaceNormal,\n        cornerDirection,\n        cornerDirection\n      );\n      cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(cornerDirection, cornerDirection);\n      var scalar =\n        1 /\n        Math.max(\n          0.25,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].magnitude */ .Z.magnitude(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(cornerDirection, backward, scratch1)\n          )\n        );\n      var leftIsOutside = PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(\n        forward,\n        backward,\n        position,\n        ellipsoid\n      );\n      if (leftIsOutside) {\n        pivot = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(\n          position,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n            cornerDirection,\n            scalar * width,\n            cornerDirection\n          ),\n          pivot\n        );\n        start = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(\n          pivot,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width, start),\n          start\n        );\n        scratch2Array[0] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(previousPosition, scratch2Array[0]);\n        scratch2Array[1] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(start, scratch2Array[1]);\n        subdividedHeights = subdivideHeights(\n          scratch2Array,\n          h0 + heightOffset,\n          h1 + heightOffset,\n          granularity\n        );\n        subdividedPositions = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].generateArc */ .Z.generateArc({\n          positions: scratch2Array,\n          granularity: granularity,\n          ellipsoid: ellipsoid,\n        });\n        finalPositions = addPositions(\n          subdividedPositions,\n          left,\n          shapeForSides,\n          finalPositions,\n          ellipsoid,\n          subdividedHeights,\n          1\n        );\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(surfaceNormal, forward, left);\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(left, left);\n        end = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(\n          pivot,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width, end),\n          end\n        );\n        if (\n          cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ROUNDED */ .Z.ROUNDED ||\n          cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].BEVELED */ .Z.BEVELED\n        ) {\n          computeRoundCorner(\n            pivot,\n            start,\n            end,\n            cornerType,\n            leftIsOutside,\n            ellipsoid,\n            finalPositions,\n            shapeForSides,\n            h1 + heightOffset,\n            duplicatePoints\n          );\n        } else {\n          cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].negate */ .Z.negate(cornerDirection, cornerDirection);\n          finalPositions = addPosition(\n            position,\n            cornerDirection,\n            shapeForSides,\n            finalPositions,\n            ellipsoid,\n            h1 + heightOffset,\n            scalar,\n            repeat\n          );\n        }\n        previousPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(end, previousPosition);\n      } else {\n        pivot = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(\n          position,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n            cornerDirection,\n            scalar * width,\n            cornerDirection\n          ),\n          pivot\n        );\n        start = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(\n          pivot,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, -width, start),\n          start\n        );\n        scratch2Array[0] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(previousPosition, scratch2Array[0]);\n        scratch2Array[1] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(start, scratch2Array[1]);\n        subdividedHeights = subdivideHeights(\n          scratch2Array,\n          h0 + heightOffset,\n          h1 + heightOffset,\n          granularity\n        );\n        subdividedPositions = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].generateArc */ .Z.generateArc({\n          positions: scratch2Array,\n          granularity: granularity,\n          ellipsoid: ellipsoid,\n        });\n        finalPositions = addPositions(\n          subdividedPositions,\n          left,\n          shapeForSides,\n          finalPositions,\n          ellipsoid,\n          subdividedHeights,\n          1\n        );\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(surfaceNormal, forward, left);\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(left, left);\n        end = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(\n          pivot,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, -width, end),\n          end\n        );\n        if (\n          cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ROUNDED */ .Z.ROUNDED ||\n          cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].BEVELED */ .Z.BEVELED\n        ) {\n          computeRoundCorner(\n            pivot,\n            start,\n            end,\n            cornerType,\n            leftIsOutside,\n            ellipsoid,\n            finalPositions,\n            shapeForSides,\n            h1 + heightOffset,\n            duplicatePoints\n          );\n        } else {\n          finalPositions = addPosition(\n            position,\n            cornerDirection,\n            shapeForSides,\n            finalPositions,\n            ellipsoid,\n            h1 + heightOffset,\n            scalar,\n            repeat\n          );\n        }\n        previousPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(end, previousPosition);\n      }\n      backward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].negate */ .Z.negate(forward, backward);\n    } else {\n      finalPositions = addPosition(\n        previousPosition,\n        left,\n        shapeForSides,\n        finalPositions,\n        ellipsoid,\n        h0 + heightOffset,\n        1,\n        1\n      );\n      previousPosition = position;\n    }\n    h0 = h1;\n    h1 = heights[i + 1];\n    position = nextPosition;\n  }\n\n  scratch2Array[0] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(previousPosition, scratch2Array[0]);\n  scratch2Array[1] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, scratch2Array[1]);\n  subdividedHeights = subdivideHeights(\n    scratch2Array,\n    h0 + heightOffset,\n    h1 + heightOffset,\n    granularity\n  );\n  subdividedPositions = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].generateArc */ .Z.generateArc({\n    positions: scratch2Array,\n    granularity: granularity,\n    ellipsoid: ellipsoid,\n  });\n  finalPositions = addPositions(\n    subdividedPositions,\n    left,\n    shapeForSides,\n    finalPositions,\n    ellipsoid,\n    subdividedHeights,\n    1\n  );\n  if (duplicatePoints) {\n    ends = addPosition(\n      position,\n      left,\n      shapeForEnds,\n      ends,\n      ellipsoid,\n      h1 + heightOffset,\n      1,\n      1\n    );\n  }\n\n  length = finalPositions.length;\n  var posLength = duplicatePoints ? length + ends.length : length;\n  var combinedPositions = new Float64Array(posLength);\n  combinedPositions.set(finalPositions);\n  if (duplicatePoints) {\n    combinedPositions.set(ends, length);\n  }\n\n  return combinedPositions;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolylineVolumeGeometryLibrary);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///39534\n')},64306:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32378);\n/* harmony import */ var _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88108);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60216);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84828);\n/* harmony import */ var _CornerType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(56439);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(50491);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(56652);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(99417);\n/* harmony import */ var _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(78284);\n/* harmony import */ var _PolylineVolumeGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(39534);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(97264);\n/* harmony import */ var _WindingOrder_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(32441);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction computeAttributes(positions, shape) {\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\n  attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: positions,\n  });\n\n  var shapeLength = shape.length;\n  var vertexCount = attributes.position.values.length / 3;\n  var positionLength = positions.length / 3;\n  var shapeCount = positionLength / shapeLength;\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    vertexCount,\n    2 * shapeLength * (shapeCount + 1)\n  );\n  var i, j;\n  var index = 0;\n  i = 0;\n  var offset = i * shapeLength;\n  for (j = 0; j < shapeLength - 1; j++) {\n    indices[index++] = j + offset;\n    indices[index++] = j + offset + 1;\n  }\n  indices[index++] = shapeLength - 1 + offset;\n  indices[index++] = offset;\n\n  i = shapeCount - 1;\n  offset = i * shapeLength;\n  for (j = 0; j < shapeLength - 1; j++) {\n    indices[index++] = j + offset;\n    indices[index++] = j + offset + 1;\n  }\n  indices[index++] = shapeLength - 1 + offset;\n  indices[index++] = offset;\n\n  for (i = 0; i < shapeCount - 1; i++) {\n    var firstOffset = shapeLength * i;\n    var secondOffset = firstOffset + shapeLength;\n    for (j = 0; j < shapeLength; j++) {\n      indices[index++] = j + firstOffset;\n      indices[index++] = j + secondOffset;\n    }\n  }\n\n  var geometry = new _Geometry_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].createTypedArray */ .Z.createTypedArray(vertexCount, indices),\n    boundingSphere: _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromVertices */ .Z.fromVertices(positions),\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].LINES */ .Z.LINES,\n  });\n\n  return geometry;\n}\n\n/**\n * A description of a polyline with a volume (a 2D shape extruded along a polyline).\n *\n * @alias PolylineVolumeOutlineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.polylinePositions An array of positions that define the center of the polyline volume.\n * @param {Cartesian2[]} options.shapePositions An array of positions that define the shape to be extruded along the polyline\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {CornerType} [options.cornerType=CornerType.ROUNDED] Determines the style of the corners.\n *\n * @see PolylineVolumeOutlineGeometry#createGeometry\n *\n * @example\n * function computeCircle(radius) {\n *   var positions = [];\n *   for (var i = 0; i < 360; i++) {\n *     var radians = Cesium.Math.toRadians(i);\n *     positions.push(new Cesium.Cartesian2(radius * Math.cos(radians), radius * Math.sin(radians)));\n *   }\n *   return positions;\n * }\n *\n * var volumeOutline = new Cesium.PolylineVolumeOutlineGeometry({\n *   polylinePositions : Cesium.Cartesian3.fromDegreesArray([\n *     -72.0, 40.0,\n *     -70.0, 35.0\n *   ]),\n *   shapePositions : computeCircle(100000.0)\n * });\n */\nfunction PolylineVolumeOutlineGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var positions = options.polylinePositions;\n  var shape = options.shapePositions;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(positions)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("options.polylinePositions is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(shape)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("options.shapePositions is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._positions = positions;\n  this._shape = shape;\n  this._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].WGS84 */ .Z.WGS84)\n  );\n  this._cornerType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.cornerType, _CornerType_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].ROUNDED */ .Z.ROUNDED);\n  this._granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  this._workerName = "createPolylineVolumeOutlineGeometry";\n\n  var numComponents = 1 + positions.length * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength;\n  numComponents += 1 + shape.length * _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength = numComponents + _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength + 2;\n}\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {PolylineVolumeOutlineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nPolylineVolumeOutlineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(value)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("value is required");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var i;\n\n  var positions = value._positions;\n  var length = positions.length;\n  array[startingIndex++] = length;\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].pack */ .Z.pack(positions[i], array, startingIndex);\n  }\n\n  var shape = value._shape;\n  length = shape.length;\n  array[startingIndex++] = length;\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(shape[i], array, startingIndex);\n  }\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._cornerType;\n  array[startingIndex] = value._granularity;\n\n  return array;\n};\n\nvar scratchEllipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE);\nvar scratchOptions = {\n  polylinePositions: undefined,\n  shapePositions: undefined,\n  ellipsoid: scratchEllipsoid,\n  height: undefined,\n  cornerType: undefined,\n  granularity: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {PolylineVolumeOutlineGeometry} [result] The object into which to store the result.\n * @returns {PolylineVolumeOutlineGeometry} The modified result parameter or a new PolylineVolumeOutlineGeometry instance if one was not provided.\n */\nPolylineVolumeOutlineGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var i;\n\n  var length = array[startingIndex++];\n  var positions = new Array(length);\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].packedLength */ .Z.packedLength) {\n    positions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  length = array[startingIndex++];\n  var shape = new Array(length);\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    shape[i] = _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchEllipsoid);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength;\n\n  var cornerType = array[startingIndex++];\n  var granularity = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(result)) {\n    scratchOptions.polylinePositions = positions;\n    scratchOptions.shapePositions = shape;\n    scratchOptions.cornerType = cornerType;\n    scratchOptions.granularity = granularity;\n    return new PolylineVolumeOutlineGeometry(scratchOptions);\n  }\n\n  result._positions = positions;\n  result._shape = shape;\n  result._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(ellipsoid, result._ellipsoid);\n  result._cornerType = cornerType;\n  result._granularity = granularity;\n\n  return result;\n};\n\nvar brScratch = new _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n/**\n * Computes the geometric representation of the outline of a polyline with a volume, including its vertices, indices, and a bounding sphere.\n *\n * @param {PolylineVolumeOutlineGeometry} polylineVolumeOutlineGeometry A description of the polyline volume outline.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nPolylineVolumeOutlineGeometry.createGeometry = function (\n  polylineVolumeOutlineGeometry\n) {\n  var positions = polylineVolumeOutlineGeometry._positions;\n  var cleanPositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    positions,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon\n  );\n  var shape2D = polylineVolumeOutlineGeometry._shape;\n  shape2D = _PolylineVolumeGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].removeDuplicatesFromShape */ .Z.removeDuplicatesFromShape(shape2D);\n\n  if (cleanPositions.length < 2 || shape2D.length < 3) {\n    return undefined;\n  }\n\n  if (\n    _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].computeWindingOrder2D */ .Z.computeWindingOrder2D(shape2D) === _WindingOrder_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].CLOCKWISE */ .Z.CLOCKWISE\n  ) {\n    shape2D.reverse();\n  }\n  var boundingRectangle = _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromPoints */ .Z.fromPoints(shape2D, brScratch);\n\n  var computedPositions = _PolylineVolumeGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].computePositions */ .Z.computePositions(\n    cleanPositions,\n    shape2D,\n    boundingRectangle,\n    polylineVolumeOutlineGeometry,\n    false\n  );\n  return computeAttributes(computedPositions, shape2D);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolylineVolumeOutlineGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///64306\n')},97264:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52200);\n\n\n/**\n * The type of a geometric primitive, i.e., points, lines, and triangles.\n *\n * @enum {Number}\n */\nvar PrimitiveType = {\n  /**\n   * Points primitive where each vertex (or index) is a separate point.\n   *\n   * @type {Number}\n   * @constant\n   */\n  POINTS: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].POINTS */ .Z.POINTS,\n\n  /**\n   * Lines primitive where each two vertices (or indices) is a line segment.  Line segments are not necessarily connected.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINES: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].LINES */ .Z.LINES,\n\n  /**\n   * Line loop primitive where each vertex (or index) after the first connects a line to\n   * the previous vertex, and the last vertex implicitly connects to the first.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINE_LOOP: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].LINE_LOOP */ .Z.LINE_LOOP,\n\n  /**\n   * Line strip primitive where each vertex (or index) after the first connects a line to the previous vertex.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINE_STRIP: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].LINE_STRIP */ .Z.LINE_STRIP,\n\n  /**\n   * Triangles primitive where each three vertices (or indices) is a triangle.  Triangles do not necessarily share edges.\n   *\n   * @type {Number}\n   * @constant\n   */\n  TRIANGLES: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n\n  /**\n   * Triangle strip primitive where each vertex (or index) after the first two connect to\n   * the previous two vertices forming a triangle.  For example, this can be used to model a wall.\n   *\n   * @type {Number}\n   * @constant\n   */\n  TRIANGLE_STRIP: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].TRIANGLE_STRIP */ .Z.TRIANGLE_STRIP,\n\n  /**\n   * Triangle fan primitive where each vertex (or index) after the first two connect to\n   * the previous vertex and the first vertex forming a triangle.  For example, this can be used\n   * to model a cone or circle.\n   *\n   * @type {Number}\n   * @constant\n   */\n  TRIANGLE_FAN: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].TRIANGLE_FAN */ .Z.TRIANGLE_FAN,\n};\n\n/**\n * @private\n */\nPrimitiveType.validate = function (primitiveType) {\n  return (\n    primitiveType === PrimitiveType.POINTS ||\n    primitiveType === PrimitiveType.LINES ||\n    primitiveType === PrimitiveType.LINE_LOOP ||\n    primitiveType === PrimitiveType.LINE_STRIP ||\n    primitiveType === PrimitiveType.TRIANGLES ||\n    primitiveType === PrimitiveType.TRIANGLE_STRIP ||\n    primitiveType === PrimitiveType.TRIANGLE_FAN\n  );\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(PrimitiveType));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcyNjQuanMiLCJtYXBwaW5ncyI6IjtBQUFpRDs7QUFFakQ7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFVBQVUsaUZBQXFCOztBQUUvQjtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFNBQVMsK0VBQW9COztBQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsYUFBYSx1RkFBd0I7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsY0FBYyx5RkFBeUI7O0FBRXZDO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsYUFBYSx1RkFBd0I7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxrQkFBa0IsaUdBQTZCOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxnQkFBZ0IsNkZBQTJCO0FBQzNDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseURBQWUsNEJBQTRCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9QcmltaXRpdmVUeXBlLmpzPzQ3YmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdlYkdMQ29uc3RhbnRzIGZyb20gXCIuL1dlYkdMQ29uc3RhbnRzLmpzXCI7XG5cbi8qKlxuICogVGhlIHR5cGUgb2YgYSBnZW9tZXRyaWMgcHJpbWl0aXZlLCBpLmUuLCBwb2ludHMsIGxpbmVzLCBhbmQgdHJpYW5nbGVzLlxuICpcbiAqIEBlbnVtIHtOdW1iZXJ9XG4gKi9cbnZhciBQcmltaXRpdmVUeXBlID0ge1xuICAvKipcbiAgICogUG9pbnRzIHByaW1pdGl2ZSB3aGVyZSBlYWNoIHZlcnRleCAob3IgaW5kZXgpIGlzIGEgc2VwYXJhdGUgcG9pbnQuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgUE9JTlRTOiBXZWJHTENvbnN0YW50cy5QT0lOVFMsXG5cbiAgLyoqXG4gICAqIExpbmVzIHByaW1pdGl2ZSB3aGVyZSBlYWNoIHR3byB2ZXJ0aWNlcyAob3IgaW5kaWNlcykgaXMgYSBsaW5lIHNlZ21lbnQuICBMaW5lIHNlZ21lbnRzIGFyZSBub3QgbmVjZXNzYXJpbHkgY29ubmVjdGVkLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIExJTkVTOiBXZWJHTENvbnN0YW50cy5MSU5FUyxcblxuICAvKipcbiAgICogTGluZSBsb29wIHByaW1pdGl2ZSB3aGVyZSBlYWNoIHZlcnRleCAob3IgaW5kZXgpIGFmdGVyIHRoZSBmaXJzdCBjb25uZWN0cyBhIGxpbmUgdG9cbiAgICogdGhlIHByZXZpb3VzIHZlcnRleCwgYW5kIHRoZSBsYXN0IHZlcnRleCBpbXBsaWNpdGx5IGNvbm5lY3RzIHRvIHRoZSBmaXJzdC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBMSU5FX0xPT1A6IFdlYkdMQ29uc3RhbnRzLkxJTkVfTE9PUCxcblxuICAvKipcbiAgICogTGluZSBzdHJpcCBwcmltaXRpdmUgd2hlcmUgZWFjaCB2ZXJ0ZXggKG9yIGluZGV4KSBhZnRlciB0aGUgZmlyc3QgY29ubmVjdHMgYSBsaW5lIHRvIHRoZSBwcmV2aW91cyB2ZXJ0ZXguXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTElORV9TVFJJUDogV2ViR0xDb25zdGFudHMuTElORV9TVFJJUCxcblxuICAvKipcbiAgICogVHJpYW5nbGVzIHByaW1pdGl2ZSB3aGVyZSBlYWNoIHRocmVlIHZlcnRpY2VzIChvciBpbmRpY2VzKSBpcyBhIHRyaWFuZ2xlLiAgVHJpYW5nbGVzIGRvIG5vdCBuZWNlc3NhcmlseSBzaGFyZSBlZGdlcy5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBUUklBTkdMRVM6IFdlYkdMQ29uc3RhbnRzLlRSSUFOR0xFUyxcblxuICAvKipcbiAgICogVHJpYW5nbGUgc3RyaXAgcHJpbWl0aXZlIHdoZXJlIGVhY2ggdmVydGV4IChvciBpbmRleCkgYWZ0ZXIgdGhlIGZpcnN0IHR3byBjb25uZWN0IHRvXG4gICAqIHRoZSBwcmV2aW91cyB0d28gdmVydGljZXMgZm9ybWluZyBhIHRyaWFuZ2xlLiAgRm9yIGV4YW1wbGUsIHRoaXMgY2FuIGJlIHVzZWQgdG8gbW9kZWwgYSB3YWxsLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFRSSUFOR0xFX1NUUklQOiBXZWJHTENvbnN0YW50cy5UUklBTkdMRV9TVFJJUCxcblxuICAvKipcbiAgICogVHJpYW5nbGUgZmFuIHByaW1pdGl2ZSB3aGVyZSBlYWNoIHZlcnRleCAob3IgaW5kZXgpIGFmdGVyIHRoZSBmaXJzdCB0d28gY29ubmVjdCB0b1xuICAgKiB0aGUgcHJldmlvdXMgdmVydGV4IGFuZCB0aGUgZmlyc3QgdmVydGV4IGZvcm1pbmcgYSB0cmlhbmdsZS4gIEZvciBleGFtcGxlLCB0aGlzIGNhbiBiZSB1c2VkXG4gICAqIHRvIG1vZGVsIGEgY29uZSBvciBjaXJjbGUuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgVFJJQU5HTEVfRkFOOiBXZWJHTENvbnN0YW50cy5UUklBTkdMRV9GQU4sXG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cblByaW1pdGl2ZVR5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAocHJpbWl0aXZlVHlwZSkge1xuICByZXR1cm4gKFxuICAgIHByaW1pdGl2ZVR5cGUgPT09IFByaW1pdGl2ZVR5cGUuUE9JTlRTIHx8XG4gICAgcHJpbWl0aXZlVHlwZSA9PT0gUHJpbWl0aXZlVHlwZS5MSU5FUyB8fFxuICAgIHByaW1pdGl2ZVR5cGUgPT09IFByaW1pdGl2ZVR5cGUuTElORV9MT09QIHx8XG4gICAgcHJpbWl0aXZlVHlwZSA9PT0gUHJpbWl0aXZlVHlwZS5MSU5FX1NUUklQIHx8XG4gICAgcHJpbWl0aXZlVHlwZSA9PT0gUHJpbWl0aXZlVHlwZS5UUklBTkdMRVMgfHxcbiAgICBwcmltaXRpdmVUeXBlID09PSBQcmltaXRpdmVUeXBlLlRSSUFOR0xFX1NUUklQIHx8XG4gICAgcHJpbWl0aXZlVHlwZSA9PT0gUHJpbWl0aXZlVHlwZS5UUklBTkdMRV9GQU5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoUHJpbWl0aXZlVHlwZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///97264\n')},51014:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n\n\n/**\n * Base class for proxying requested made by {@link Resource}.\n *\n * @alias Proxy\n * @constructor\n *\n * @see DefaultProxy\n */\nfunction Proxy() {\n  _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n}\n\n/**\n * Get the final URL to use to request a given resource.\n *\n * @param {String} resource The resource to request.\n * @returns {String} proxied resource\n * @function\n */\nProxy.prototype.getURL = _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError;\n\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (Proxy)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEwMTQuanMiLCJtYXBwaW5ncyI6IjtBQUFpRDs7QUFFakQ7QUFDQSw4Q0FBOEMsZUFBZTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsbUhBQXNDO0FBQ3hDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBLHlCQUF5QixtSEFBc0M7O0FBRS9ELHNFQUFlLHFEQUFLLElBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9Qcm94eS5qcz83MDJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi9EZXZlbG9wZXJFcnJvci5qc1wiO1xuXG4vKipcbiAqIEJhc2UgY2xhc3MgZm9yIHByb3h5aW5nIHJlcXVlc3RlZCBtYWRlIGJ5IHtAbGluayBSZXNvdXJjZX0uXG4gKlxuICogQGFsaWFzIFByb3h5XG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAc2VlIERlZmF1bHRQcm94eVxuICovXG5mdW5jdGlvbiBQcm94eSgpIHtcbiAgRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3IoKTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZpbmFsIFVSTCB0byB1c2UgdG8gcmVxdWVzdCBhIGdpdmVuIHJlc291cmNlLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSByZXNvdXJjZSBUaGUgcmVzb3VyY2UgdG8gcmVxdWVzdC5cbiAqIEByZXR1cm5zIHtTdHJpbmd9IHByb3hpZWQgcmVzb3VyY2VcbiAqIEBmdW5jdGlvblxuICovXG5Qcm94eS5wcm90b3R5cGUuZ2V0VVJMID0gRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3I7XG5cbmV4cG9ydCBkZWZhdWx0IFByb3h5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///51014\n')}}]);