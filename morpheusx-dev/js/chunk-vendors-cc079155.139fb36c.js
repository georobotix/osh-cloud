"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[5885],{90791:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51688);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50491);\n/* harmony import */ var _FeatureDetection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(96037);\n/* harmony import */ var _RuntimeError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9407);\n/* eslint-disable new-cap */\n\n\n\n\n\n\n\n\n\n\n/**\n * S2\n * --\n *\n * This implementation is based on the S2 C++ reference implementation: https://github.com/google/s2geometry\n *\n *\n * Overview:\n * ---------\n * The S2 library decomposes the unit sphere into a hierarchy of cells. A cell is a quadrilateral bounded by 4 geodesics.\n * The 6 root cells are obtained by projecting the six faces of a cube on a unit sphere. Each root cell follows a quadtree\n * subdivision scheme, i.e. each cell subdivides into 4 smaller cells that cover the same area as the parent cell. The S2 cell\n * hierarchy extends from level 0 (root cells) to level 30 (leaf cells). The root cells are rotated to enable a continuous Hilbert\n * curve to map all 6 faces of the cube.\n *\n *\n * Cell ID:\n * --------\n * Each cell in S2 can be uniquely identified using a 64-bit unsigned integer, its cell ID. The first 3 bits of the cell ID are the face bits, i.e.\n * they indicate which of the 6 faces of the cube a cell lies on. After the face bits are the position bits, i.e. they indicate the position\n * of the cell along the Hilbert curve. After the positions bits is the sentinel bit, which is always set to 1, and it indicates the level of the\n * cell. Again, the level can be between 0 and 30 in S2.\n *\n *   Note: In the illustration below, the face bits are marked with \'f\', the position bits are marked with \'p\', the zero bits are marked with \'-\'.\n *\n *   Cell ID (base 10): 3170534137668829184\n *   Cell ID (base 2) : 0010110000000000000000000000000000000000000000000000000000000000\n *\n *   001 0110000000000000000000000000000000000000000000000000000000000\n *   fff pps----------------------------------------------------------\n *\n * For the cell above, we can see that it lies on face 1 (01), with a Hilbert index of 1 (1).\n *\n *\n * Cell Subdivision:\n * ------------------\n * Cells in S2 subdivide recursively using quadtree subdivision. For each cell, you can get a child of index [0-3]. To compute the child at index i,\n * insert the base 2 representation of i to the right of the parent\'s position bits. Ensure that the sentinel bit is also shifted two places to the right.\n *\n *   Parent Cell ID (base 10) : 3170534137668829184\n *   Parent Cell ID (base 2)  : 0010110000000000000000000000000000000000000000000000000000000000\n *\n *   001 0110000000000000000000000000000000000000000000000000000000000\n *   fff pps----------------------------------------------------------\n *\n *   To get the 3rd child of the cell above, we insert the binary representation of 3 to the right of the parent\'s position bits:\n *\n *   Note: In the illustration below, the bits to be added are highlighted with \'^\'.\n *\n *   001 0111100000000000000000000000000000000000000000000000000000000\n *   fff pppps--------------------------------------------------------\n *         ^^\n *\n *   Child(3) Cell ID (base 10) : 3386706919782612992\n *   Child(3) Cell ID (base 2)  : 0010111100000000000000000000000000000000000000000000000000000000\n *\n * Cell Token:\n * -----------\n * To provide a more concise representation of the S2 cell ID, we can use their hexadecimal representation.\n *\n *   Cell ID (base 10): 3170534137668829184\n *   Cell ID (base 2) : 0010110000000000000000000000000000000000000000000000000000000000\n *\n *   We remove all trailing zero bits, until we reach the nybble (4 bits) that contains the sentinel bit.\n *\n *   Note: In the illustration below, the bits to be removed are highlighted with \'X\'.\n *\n *   0010110000000000000000000000000000000000000000000000000000000000\n *   fffpps--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n *\n *   We convert the remaining bits to their hexadecimal representation.\n *\n *   Base 2: 0010 1100\n *   Base 16: "2"  "c"\n *\n *   Cell Token: "2c"\n *\n * To compute the cell ID from the token, we simply add enough zeros to the right to make the ID span 64 bits.\n *\n * Coordinate Transforms:\n * ----------------------\n *\n * To go from a cell in S2 to a point on the ellipsoid, the following order of transforms is applied:\n *\n *   1. (Cell ID): S2 cell ID\n *   2. (Face, I, J): Leaf cell coordinates, where i and j are in range [0, 2^30 - 1]\n *   3. (Face, S, T): Cell space coordinates, where s and t are in range [0, 1].\n *   4. (Face, Si, Ti): Discrete cell space coordinates, where si and ti are in range [0, 2^31]\n *   5. (Face, U, V): Cube space coordinates, where u and v are in range [-1, 1]. We apply the non-linear quadratic transform here.\n *   6. (X, Y, Z): Direction vector, where vector may not be unit length. Can be normalized to obtain point on unit sphere\n *   7. (Latitude, Longitude): Direction vector, where latitude is in range [-90, 90] and longitude is in range [-180, 180]\n *\n * @ignore\n */\n\n// The maximum level supported within an S2 cell ID. Each level is represented by two bits in the final cell ID\nvar S2_MAX_LEVEL = 30;\n\n// The maximum index of a valid leaf cell plus one.  The range of valid leaf cell indices is [0..S2_LIMIT_IJ-1].\nvar S2_LIMIT_IJ = 1 << S2_MAX_LEVEL;\n\n// The maximum value of an si- or ti-coordinate.  The range of valid (si,ti) values is [0..S2_MAX_SITI].  Use `>>>` to convert to unsigned.\nvar S2_MAX_SITI = (1 << (S2_MAX_LEVEL + 1)) >>> 0;\n\n// The number of bits in a S2 cell ID used for specifying the position along the Hilbert curve\nvar S2_POSITION_BITS = 2 * S2_MAX_LEVEL + 1;\n\n// The number of bits per I and J in the lookup tables\nvar S2_LOOKUP_BITS = 4;\n\n// Lookup table for mapping 10 bits of IJ + orientation to 10 bits of Hilbert curve position + orientation.\nvar S2_LOOKUP_POSITIONS = [];\n\n// Lookup table for mapping 10 bits of IJ + orientation to 10 bits of Hilbert curve position + orientation.\nvar S2_LOOKUP_IJ = [];\n\n// Lookup table of two bits of IJ from two bits of curve position, based also on the current curve orientation from the swap and invert bits\nvar S2_POSITION_TO_IJ = [\n  [0, 1, 3, 2], // 0: Normal order, no swap or invert\n  [0, 2, 3, 1], // 1: Swap bit set, swap I and J bits\n  [3, 2, 0, 1], // 2: Invert bit set, invert bits\n  [3, 1, 0, 2], // 3: Swap and invert bits set\n];\n\n// Mask that specifies the swap orientation bit for the Hilbert curve\nvar S2_SWAP_MASK = 1;\n\n// Mask that specifies the invert orientation bit for the Hilbert curve\nvar S2_INVERT_MASK = 2;\n\n// Lookup for the orientation update mask of one of the four sub-cells within a higher level cell.\n// This mask is XOR\'ed with the current orientation to get the sub-cell orientation.\nvar S2_POSITION_TO_ORIENTATION_MASK = [\n  S2_SWAP_MASK,\n  0,\n  0,\n  S2_SWAP_MASK | S2_INVERT_MASK,\n];\n\n/**\n * Represents a cell in the S2 geometry library.\n *\n * @alias S2Cell\n * @constructor\n *\n * @param {BigInt} [cellId] The 64-bit S2CellId.\n * @private\n */\nfunction S2Cell(cellId) {\n  if (!_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].supportsBigInt */ .Z.supportsBigInt()) {\n    throw new _RuntimeError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z("S2 required BigInt support");\n  }\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(cellId)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("cell ID is required.");\n  }\n  if (!S2Cell.isValidId(cellId)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("cell ID is invalid.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._cellId = cellId;\n  this._level = S2Cell.getLevel(cellId);\n}\n\n/**\n * Creates a new S2Cell from a token. A token is a hexadecimal representation of the 64-bit S2CellId.\n *\n * @param {String} token The token for the S2 Cell.\n * @returns {S2Cell} Returns a new S2Cell.\n * @private\n */\nS2Cell.fromToken = function (token) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.string */ .Z.typeOf.string("token", token);\n  if (!S2Cell.isValidToken(token)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("token is invalid.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return new S2Cell(S2Cell.getIdFromToken(token));\n};\n\n/**\n * Validates an S2 cell ID.\n *\n * @param {BigInt} [cellId] The S2CellId.\n * @returns {Boolean} Returns true if the cell ID is valid, returns false otherwise.\n * @private\n */\nS2Cell.isValidId = function (cellId) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.bigint */ .Z.typeOf.bigint("cellId", cellId);\n  //>>includeEnd(\'debug\');\n\n  // Check if sentinel bit is missing.\n  if (cellId <= 0) {\n    return false;\n  }\n\n  // Check if face bits indicate a valid value, in range [0-5].\n  // eslint-disable-next-line\n  if (cellId >> BigInt(S2_POSITION_BITS) > 5) {\n    return false;\n  }\n\n  // Check trailing 1 bit is in one of the even bit positions allowed for the 30 levels, using a bitmask.\n  var lowestSetBit = cellId & (~cellId + BigInt(1)); // eslint-disable-line\n  // eslint-disable-next-line\n  if (!(lowestSetBit & BigInt("0x1555555555555555"))) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Validates an S2 cell token.\n *\n * @param {String} [token] The hexadecimal representation of an S2CellId.\n * @returns {Boolean} Returns true if the token is valid, returns false otherwise.\n * @private\n */\nS2Cell.isValidToken = function (token) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.string */ .Z.typeOf.string("token", token);\n  //>>includeEnd(\'debug\');\n\n  if (!/^[0-9a-fA-F]{1,16}$/.test(token)) {\n    return false;\n  }\n\n  return S2Cell.isValidId(S2Cell.getIdFromToken(token));\n};\n\n/**\n * Converts an S2 cell token to a 64-bit S2 cell ID.\n *\n * @param {String} [token] The hexadecimal representation of an S2CellId. Expected to be a valid S2 token.\n * @returns {BigInt} Returns the S2 cell ID.\n * @private\n */\nS2Cell.getIdFromToken = function (token) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.string */ .Z.typeOf.string("token", token);\n  //>>includeEnd(\'debug\');\n\n  return BigInt("0x" + token + "0".repeat(16 - token.length)); // eslint-disable-line\n};\n\n/**\n * Converts a 64-bit S2 cell ID to an S2 cell token.\n *\n * @param {BigInt} [cellId] The S2 cell ID.\n * @returns {BigInt} Returns hexadecimal representation of an S2CellId.\n * @private\n */\nS2Cell.getTokenFromId = function (cellId) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.bigint */ .Z.typeOf.bigint("cellId", cellId);\n  //>>includeEnd(\'debug\');\n\n  var trailingZeroHexChars = Math.floor(countTrailingZeroBits(cellId) / 4);\n  var hexString = cellId.toString(16).replace(/0*$/, "");\n\n  var zeroString = Array(17 - trailingZeroHexChars - hexString.length).join(\n    "0"\n  );\n  return zeroString + hexString;\n};\n\n/**\n * Gets the level of the cell from the cell ID.\n *\n * @param {BigInt} [cellId] The S2 cell ID.\n * @returns {number} Returns the level of the cell.\n * @private\n */\nS2Cell.getLevel = function (cellId) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.bigint */ .Z.typeOf.bigint("cellId", cellId);\n  if (!S2Cell.isValidId(cellId)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n  }\n  //>>includeEnd(\'debug\');\n\n  var lsbPosition = 0;\n  // eslint-disable-next-line\n  while (cellId !== BigInt(0)) {\n    // eslint-disable-next-line\n    if (cellId & BigInt(1)) {\n      break;\n    }\n    lsbPosition++;\n    cellId = cellId >> BigInt(1); // eslint-disable-line\n  }\n\n  // We use (>> 1) because there are 2 bits per level.\n  return S2_MAX_LEVEL - (lsbPosition >> 1);\n};\n\n/**\n * Gets the child cell of the cell at the given index.\n *\n * @param {Number} index An integer index of the child.\n * @returns {S2Cell} The child of the S2Cell.\n * @private\n */\nS2Cell.prototype.getChild = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("index", index);\n  if (index < 0 || index > 3) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("child index must be in the range [0-3].");\n  }\n  if (this._level === 30) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("cannot get child of leaf cell.");\n  }\n  //>>includeEnd(\'debug\');\n\n  // Shift sentinel bit 2 positions to the right.\n  var newLsb = lsb(this._cellId) >> BigInt(2); // eslint-disable-line\n  // Insert child index before the sentinel bit.\n  var childCellId = this._cellId + BigInt(2 * index + 1 - 4) * newLsb; // eslint-disable-line\n  return new S2Cell(childCellId);\n};\n\n/**\n * Gets the parent cell of an S2Cell.\n *\n * @returns {S2Cell} Returns the parent of the S2Cell.\n * @private\n */\nS2Cell.prototype.getParent = function () {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (this._level === 0) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("cannot get parent of root cell.");\n  }\n  //>>includeEnd(\'debug\');\n  // Shift the sentinel bit 2 positions to the left.\n  var newLsb = lsb(this._cellId) << BigInt(2); // eslint-disable-line\n  // Erase the left over bits to the right of the sentinel bit.\n  return new S2Cell((this._cellId & (~newLsb + BigInt(1))) | newLsb); // eslint-disable-line\n};\n\n/**\n * Gets the parent cell at the given level.\n *\n * @returns {S2Cell} Returns the parent of the S2Cell.\n * @private\n */\nS2Cell.prototype.getParentAtLevel = function (level) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (this._level === 0 || level < 0 || this._level < level) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("cannot get parent at invalid level.");\n  }\n  //>>includeEnd(\'debug\');\n  var newLsb = lsbForLevel(level);\n  return new S2Cell((this._cellId & -newLsb) | newLsb);\n};\n\n/**\n * Get center of the S2 cell.\n *\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid.\n * @returns {Cartesian} The position of center of the S2 cell.\n * @private\n */\nS2Cell.prototype.getCenter = function (ellipsoid) {\n  ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].WGS84 */ .Z.WGS84);\n\n  var center = getS2Center(this._cellId, this._level);\n  // Normalize XYZ.\n  center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(center, center);\n  var cartographic = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromCartesian */ .Z.fromCartesian(\n    center,\n    _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE\n  );\n  // Interpret as geodetic coordinates on the ellipsoid.\n  return _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].toCartesian */ .Z.toCartesian(cartographic, ellipsoid, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z());\n};\n\n/**\n * Get vertex of the S2 cell. Vertices are indexed in CCW order.\n *\n * @param {Number} index An integer index of the vertex. Must be in the range [0-3].\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid.\n * @returns {Cartesian} The position of the vertex of the S2 cell.\n * @private\n */\nS2Cell.prototype.getVertex = function (index, ellipsoid) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("index", index);\n  if (index < 0 || index > 3) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("vertex index must be in the range [0-3].");\n  }\n  //>>includeEnd(\'debug\');\n\n  ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].WGS84 */ .Z.WGS84);\n\n  var vertex = getS2Vertex(this._cellId, this._level, index);\n  // Normalize XYZ.\n  vertex = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(vertex, vertex);\n  var cartographic = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromCartesian */ .Z.fromCartesian(\n    vertex,\n    _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE\n  );\n  // Interpret as geodetic coordinates on the ellipsoid.\n  return _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].toCartesian */ .Z.toCartesian(cartographic, ellipsoid, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z());\n};\n\n/**\n * Creates an S2Cell from its face, position along the Hilbert curve for a given level.\n *\n * @param {Number} face The root face of S2 this cell is on. Must be in the range [0-5].\n * @param {BigInt} position The position along the Hilbert curve. Must be in the range [0-4**level).\n * @param {Number} level The level of the S2 curve. Must be in the range [0-30].\n * @returns {S2Cell} A new S2Cell from the given parameters.\n * @private\n */\nS2Cell.fromFacePositionLevel = function (face, position, level) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.bigint */ .Z.typeOf.bigint("position", position);\n  if (face < 0 || face > 5) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Invalid S2 Face (must be within 0-5)");\n  }\n\n  if (level < 0 || level > S2_MAX_LEVEL) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Invalid level (must be within 0-30)");\n  }\n  if (position < 0 || position >= Math.pow(4, level)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Invalid Hilbert position for level");\n  }\n  //>>includeEnd(\'debug\');\n\n  var faceBitString =\n    (face < 4 ? "0" : "") + (face < 2 ? "0" : "") + face.toString(2);\n  var positionBitString = position.toString(2);\n  var positionPrefixPadding = Array(\n    2 * level - positionBitString.length + 1\n  ).join("0");\n  var positionSuffixPadding = Array(S2_POSITION_BITS - 2 * level).join("0");\n\n  // eslint-disable-next-line\n  var cellId = BigInt(\n    "0b" +\n      faceBitString +\n      positionPrefixPadding +\n      positionBitString +\n      "1" + // Adding the sentinel bit that always follows the position bits.\n      positionSuffixPadding\n  );\n  return new S2Cell(cellId);\n};\n\n/**\n * @private\n */\nfunction getS2Center(cellId, level) {\n  var faceSiTi = convertCellIdToFaceSiTi(cellId, level);\n  return convertFaceSiTitoXYZ(faceSiTi[0], faceSiTi[1], faceSiTi[2]);\n}\n/**\n * @private\n */\nfunction getS2Vertex(cellId, level, index) {\n  var faceIJ = convertCellIdToFaceIJ(cellId, level);\n  var uv = convertIJLeveltoBoundUV([faceIJ[1], faceIJ[2]], level);\n  // Handles CCW ordering of the vertices.\n  var y = (index >> 1) & 1;\n  return convertFaceUVtoXYZ(faceIJ[0], uv[0][y ^ (index & 1)], uv[1][y]);\n}\n\n// S2 Coordinate Conversions\n\n/**\n * @private\n */\nfunction convertCellIdToFaceSiTi(cellId, level) {\n  var faceIJ = convertCellIdToFaceIJ(cellId);\n  var face = faceIJ[0];\n  var i = faceIJ[1];\n  var j = faceIJ[2];\n\n  // We\'re resolving the center when we do the coordinate transform here. For the leaf cells, we\'re adding half the cell size\n  // (remember that this space has 31 levels - which allows us to pick center and edges of the leaf cells). For non leaf cells,\n  // we get one of either two cells diagonal to the cell center. The correction is used to make sure we pick the leaf cell edges\n  // that represent the parent cell center.\n  var isLeaf = level === 30;\n  var shouldCorrect =\n    !isLeaf && (BigInt(i) ^ (cellId >> BigInt(2))) & BigInt(1); // eslint-disable-line\n  var correction = isLeaf ? 1 : shouldCorrect ? 2 : 0;\n  var si = (i << 1) + correction;\n  var ti = (j << 1) + correction;\n  return [face, si, ti];\n}\n\n/**\n * @private\n */\nfunction convertCellIdToFaceIJ(cellId) {\n  if (S2_LOOKUP_POSITIONS.length === 0) {\n    generateLookupTable();\n  }\n\n  var face = Number(cellId >> BigInt(S2_POSITION_BITS)); // eslint-disable-line\n  var bits = face & S2_SWAP_MASK;\n  var lookupMask = (1 << S2_LOOKUP_BITS) - 1;\n\n  var i = 0;\n  var j = 0;\n\n  for (var k = 7; k >= 0; k--) {\n    var numberOfBits =\n      k === 7 ? S2_MAX_LEVEL - 7 * S2_LOOKUP_BITS : S2_LOOKUP_BITS;\n    var extractMask = (1 << (2 * numberOfBits)) - 1;\n    bits +=\n      Number(\n        (cellId >> BigInt(k * 2 * S2_LOOKUP_BITS + 1)) & BigInt(extractMask) // eslint-disable-line\n      ) << 2;\n\n    bits = S2_LOOKUP_IJ[bits];\n\n    var offset = k * S2_LOOKUP_BITS;\n    i += (bits >> (S2_LOOKUP_BITS + 2)) << offset;\n    j += ((bits >> 2) & lookupMask) << offset;\n\n    bits &= S2_SWAP_MASK | S2_INVERT_MASK;\n  }\n\n  return [face, i, j];\n}\n\n/**\n * @private\n */\nfunction convertFaceSiTitoXYZ(face, si, ti) {\n  var s = convertSiTitoST(si);\n  var t = convertSiTitoST(ti);\n\n  var u = convertSTtoUV(s);\n  var v = convertSTtoUV(t);\n  return convertFaceUVtoXYZ(face, u, v);\n}\n\n/**\n * @private\n */\nfunction convertFaceUVtoXYZ(face, u, v) {\n  switch (face) {\n    case 0:\n      return new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(1, u, v);\n    case 1:\n      return new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(-u, 1, v);\n    case 2:\n      return new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(-u, -v, 1);\n    case 3:\n      return new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(-1, -v, -u);\n    case 4:\n      return new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(v, -1, -u);\n    default:\n      return new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(v, u, -1);\n  }\n}\n\n/**\n * S2 provides 3 methods for the non-linear transform: linear, quadratic and tangential.\n * This implementation uses the quadratic method because it provides a good balance of\n * accuracy and speed.\n *\n * For a more detailed comparison of these transform methods, see\n * {@link https://github.com/google/s2geometry/blob/0c4c460bdfe696da303641771f9def900b3e440f/src/s2/s2metrics.cc}\n * @private\n */\nfunction convertSTtoUV(s) {\n  if (s >= 0.5) return (1 / 3) * (4 * s * s - 1);\n  return (1 / 3) * (1 - 4 * (1 - s) * (1 - s));\n}\n\n/**\n * @private\n */\nfunction convertSiTitoST(si) {\n  return (1.0 / S2_MAX_SITI) * si;\n}\n\n/**\n * @private\n */\nfunction convertIJLeveltoBoundUV(ij, level) {\n  var result = [[], []];\n  var cellSize = getSizeIJ(level);\n  for (var d = 0; d < 2; ++d) {\n    var ijLow = ij[d] & -cellSize;\n    var ijHigh = ijLow + cellSize;\n    result[d][0] = convertSTtoUV(convertIJtoSTMinimum(ijLow));\n    result[d][1] = convertSTtoUV(convertIJtoSTMinimum(ijHigh));\n  }\n  return result;\n}\n\n/**\n * @private\n */\nfunction getSizeIJ(level) {\n  return (1 << (S2_MAX_LEVEL - level)) >>> 0;\n}\n\n/**\n * @private\n */\nfunction convertIJtoSTMinimum(i) {\n  return (1.0 / S2_LIMIT_IJ) * i;\n}\n\n// Utility Functions\n\n/**\n * This function generates 4 variations of a Hilbert curve of level 4, based on the S2_POSITION_TO_IJ table, for fast lookups of (i, j)\n * to position along Hilbert curve. The reference C++ implementation uses an iterative approach, however, this function is implemented\n * recursively.\n *\n * See {@link https://github.com/google/s2geometry/blob/c59d0ca01ae3976db7f8abdc83fcc871a3a95186/src/s2/s2cell_id.cc#L75-L109}\n * @private\n */\nfunction generateLookupCell(\n  level,\n  i,\n  j,\n  originalOrientation,\n  position,\n  orientation\n) {\n  if (level === S2_LOOKUP_BITS) {\n    var ij = (i << S2_LOOKUP_BITS) + j;\n    S2_LOOKUP_POSITIONS[(ij << 2) + originalOrientation] =\n      (position << 2) + orientation;\n    S2_LOOKUP_IJ[(position << 2) + originalOrientation] =\n      (ij << 2) + orientation;\n  } else {\n    level++;\n    i <<= 1;\n    j <<= 1;\n    position <<= 2;\n    var r = S2_POSITION_TO_IJ[orientation];\n    generateLookupCell(\n      level,\n      i + (r[0] >> 1),\n      j + (r[0] & 1),\n      originalOrientation,\n      position,\n      orientation ^ S2_POSITION_TO_ORIENTATION_MASK[0]\n    );\n    generateLookupCell(\n      level,\n      i + (r[1] >> 1),\n      j + (r[1] & 1),\n      originalOrientation,\n      position + 1,\n      orientation ^ S2_POSITION_TO_ORIENTATION_MASK[1]\n    );\n    generateLookupCell(\n      level,\n      i + (r[2] >> 1),\n      j + (r[2] & 1),\n      originalOrientation,\n      position + 2,\n      orientation ^ S2_POSITION_TO_ORIENTATION_MASK[2]\n    );\n    generateLookupCell(\n      level,\n      i + (r[3] >> 1),\n      j + (r[3] & 1),\n      originalOrientation,\n      position + 3,\n      orientation ^ S2_POSITION_TO_ORIENTATION_MASK[3]\n    );\n  }\n}\n\n/**\n * @private\n */\nfunction generateLookupTable() {\n  generateLookupCell(0, 0, 0, 0, 0, 0);\n  generateLookupCell(0, 0, 0, S2_SWAP_MASK, 0, S2_SWAP_MASK);\n  generateLookupCell(0, 0, 0, S2_INVERT_MASK, 0, S2_INVERT_MASK);\n  generateLookupCell(\n    0,\n    0,\n    0,\n    S2_SWAP_MASK | S2_INVERT_MASK,\n    0,\n    S2_SWAP_MASK | S2_INVERT_MASK\n  );\n}\n\n/**\n * Return the lowest-numbered bit that is on for this cell id\n * @private\n */\nfunction lsb(cellId) {\n  return cellId & (~cellId + BigInt(1)); // eslint-disable-line\n}\n\n/**\n * Return the lowest-numbered bit that is on for cells at the given level.\n * @private\n */\nfunction lsbForLevel(level) {\n  return BigInt(1) << BigInt(2 * (S2_MAX_LEVEL - level)); // eslint-disable-line\n}\n\n// Lookup table for getting trailing zero bits.\n// https://graphics.stanford.edu/~seander/bithacks.html\nvar Mod67BitPosition = [\n  64,\n  0,\n  1,\n  39,\n  2,\n  15,\n  40,\n  23,\n  3,\n  12,\n  16,\n  59,\n  41,\n  19,\n  24,\n  54,\n  4,\n  64,\n  13,\n  10,\n  17,\n  62,\n  60,\n  28,\n  42,\n  30,\n  20,\n  51,\n  25,\n  44,\n  55,\n  47,\n  5,\n  32,\n  65,\n  38,\n  14,\n  22,\n  11,\n  58,\n  18,\n  53,\n  63,\n  9,\n  61,\n  27,\n  29,\n  50,\n  43,\n  46,\n  31,\n  37,\n  21,\n  57,\n  52,\n  8,\n  26,\n  49,\n  45,\n  36,\n  56,\n  7,\n  48,\n  35,\n  6,\n  34,\n  33,\n  0,\n];\n\n/**\n * Return the number of trailing zeros in number.\n * @private\n */\nfunction countTrailingZeroBits(x) {\n  return Mod67BitPosition[(-x & x) % BigInt(67)]; // eslint-disable-line\n}\n\n/* harmony default export */ __webpack_exports__["Z"] = (S2Cell);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///90791\n')},20406:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _AssociativeArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8629);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _destroyObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86511);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12572);\n/* harmony import */ var _FeatureDetection_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(96037);\n/* harmony import */ var _getTimestamp_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(59081);\n/* harmony import */ var _KeyboardEventModifier_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(89232);\n/* harmony import */ var _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(35452);\n\n\n\n\n\n\n\n\n\n\n\nfunction getPosition(screenSpaceEventHandler, event, result) {\n  var element = screenSpaceEventHandler._element;\n  if (element === document) {\n    result.x = event.clientX;\n    result.y = event.clientY;\n    return result;\n  }\n\n  var rect = element.getBoundingClientRect();\n  result.x = event.clientX - rect.left;\n  result.y = event.clientY - rect.top;\n  return result;\n}\n\nfunction getInputEventKey(type, modifier) {\n  var key = type;\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(modifier)) {\n    key += "+" + modifier;\n  }\n  return key;\n}\n\nfunction getModifier(event) {\n  if (event.shiftKey) {\n    return _KeyboardEventModifier_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].SHIFT */ .Z.SHIFT;\n  } else if (event.ctrlKey) {\n    return _KeyboardEventModifier_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].CTRL */ .Z.CTRL;\n  } else if (event.altKey) {\n    return _KeyboardEventModifier_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ALT */ .Z.ALT;\n  }\n\n  return undefined;\n}\n\nvar MouseButton = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2,\n};\n\nfunction registerListener(screenSpaceEventHandler, domType, element, callback) {\n  function listener(e) {\n    callback(screenSpaceEventHandler, e);\n  }\n\n  if (_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].isInternetExplorer */ .Z.isInternetExplorer()) {\n    element.addEventListener(domType, listener, false);\n  } else {\n    element.addEventListener(domType, listener, {\n      capture: false,\n      passive: false,\n    });\n  }\n\n  screenSpaceEventHandler._removalFunctions.push(function () {\n    element.removeEventListener(domType, listener, false);\n  });\n}\n\nfunction registerListeners(screenSpaceEventHandler) {\n  var element = screenSpaceEventHandler._element;\n\n  // some listeners may be registered on the document, so we still get events even after\n  // leaving the bounds of element.\n  // this is affected by the existence of an undocumented disableRootEvents property on element.\n  var alternateElement = !(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(element.disableRootEvents)\n    ? document\n    : element;\n\n  if (_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].supportsPointerEvents */ .Z.supportsPointerEvents()) {\n    registerListener(\n      screenSpaceEventHandler,\n      "pointerdown",\n      element,\n      handlePointerDown\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "pointerup",\n      element,\n      handlePointerUp\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "pointermove",\n      element,\n      handlePointerMove\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "pointercancel",\n      element,\n      handlePointerUp\n    );\n  } else {\n    registerListener(\n      screenSpaceEventHandler,\n      "mousedown",\n      element,\n      handleMouseDown\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "mouseup",\n      alternateElement,\n      handleMouseUp\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "mousemove",\n      alternateElement,\n      handleMouseMove\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "touchstart",\n      element,\n      handleTouchStart\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "touchend",\n      alternateElement,\n      handleTouchEnd\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "touchmove",\n      alternateElement,\n      handleTouchMove\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      "touchcancel",\n      alternateElement,\n      handleTouchEnd\n    );\n  }\n\n  registerListener(\n    screenSpaceEventHandler,\n    "dblclick",\n    element,\n    handleDblClick\n  );\n\n  // detect available wheel event\n  var wheelEvent;\n  if ("onwheel" in element) {\n    // spec event type\n    wheelEvent = "wheel";\n  } else if (document.onmousewheel !== undefined) {\n    // legacy event type\n    wheelEvent = "mousewheel";\n  } else {\n    // older Firefox\n    wheelEvent = "DOMMouseScroll";\n  }\n\n  registerListener(screenSpaceEventHandler, wheelEvent, element, handleWheel);\n}\n\nfunction unregisterListeners(screenSpaceEventHandler) {\n  var removalFunctions = screenSpaceEventHandler._removalFunctions;\n  for (var i = 0; i < removalFunctions.length; ++i) {\n    removalFunctions[i]();\n  }\n}\n\nvar mouseDownEvent = {\n  position: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\n\nfunction gotTouchEvent(screenSpaceEventHandler) {\n  screenSpaceEventHandler._lastSeenTouchEvent = (0,_getTimestamp_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)();\n}\n\nfunction canProcessMouseEvent(screenSpaceEventHandler) {\n  return (\n    (0,_getTimestamp_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)() - screenSpaceEventHandler._lastSeenTouchEvent >\n    ScreenSpaceEventHandler.mouseEmulationIgnoreMilliseconds\n  );\n}\n\nfunction checkPixelTolerance(startPosition, endPosition, pixelTolerance) {\n  var xDiff = startPosition.x - endPosition.x;\n  var yDiff = startPosition.y - endPosition.y;\n  var totalPixels = Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n\n  return totalPixels < pixelTolerance;\n}\n\nfunction handleMouseDown(screenSpaceEventHandler, event) {\n  if (!canProcessMouseEvent(screenSpaceEventHandler)) {\n    return;\n  }\n\n  var button = event.button;\n  screenSpaceEventHandler._buttonDown[button] = true;\n\n  var screenSpaceEventType;\n  if (button === MouseButton.LEFT) {\n    screenSpaceEventType = _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LEFT_DOWN */ .Z.LEFT_DOWN;\n  } else if (button === MouseButton.MIDDLE) {\n    screenSpaceEventType = _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].MIDDLE_DOWN */ .Z.MIDDLE_DOWN;\n  } else if (button === MouseButton.RIGHT) {\n    screenSpaceEventType = _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].RIGHT_DOWN */ .Z.RIGHT_DOWN;\n  } else {\n    return;\n  }\n\n  var position = getPosition(\n    screenSpaceEventHandler,\n    event,\n    screenSpaceEventHandler._primaryPosition\n  );\n  _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, screenSpaceEventHandler._primaryStartPosition);\n  _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, screenSpaceEventHandler._primaryPreviousPosition);\n\n  var modifier = getModifier(event);\n\n  var action = screenSpaceEventHandler.getInputAction(\n    screenSpaceEventType,\n    modifier\n  );\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, mouseDownEvent.position);\n\n    action(mouseDownEvent);\n\n    event.preventDefault();\n  }\n}\n\nvar mouseUpEvent = {\n  position: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\nvar mouseClickEvent = {\n  position: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\n\nfunction cancelMouseEvent(\n  screenSpaceEventHandler,\n  screenSpaceEventType,\n  clickScreenSpaceEventType,\n  event\n) {\n  var modifier = getModifier(event);\n\n  var action = screenSpaceEventHandler.getInputAction(\n    screenSpaceEventType,\n    modifier\n  );\n  var clickAction = screenSpaceEventHandler.getInputAction(\n    clickScreenSpaceEventType,\n    modifier\n  );\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action) || (0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(clickAction)) {\n    var position = getPosition(\n      screenSpaceEventHandler,\n      event,\n      screenSpaceEventHandler._primaryPosition\n    );\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, mouseUpEvent.position);\n\n      action(mouseUpEvent);\n    }\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(clickAction)) {\n      var startPosition = screenSpaceEventHandler._primaryStartPosition;\n      if (\n        checkPixelTolerance(\n          startPosition,\n          position,\n          screenSpaceEventHandler._clickPixelTolerance\n        )\n      ) {\n        _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, mouseClickEvent.position);\n\n        clickAction(mouseClickEvent);\n      }\n    }\n  }\n}\n\nfunction handleMouseUp(screenSpaceEventHandler, event) {\n  if (!canProcessMouseEvent(screenSpaceEventHandler)) {\n    return;\n  }\n\n  var button = event.button;\n\n  if (\n    button !== MouseButton.LEFT &&\n    button !== MouseButton.MIDDLE &&\n    button !== MouseButton.RIGHT\n  ) {\n    return;\n  }\n\n  if (screenSpaceEventHandler._buttonDown[MouseButton.LEFT]) {\n    cancelMouseEvent(\n      screenSpaceEventHandler,\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LEFT_UP */ .Z.LEFT_UP,\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LEFT_CLICK */ .Z.LEFT_CLICK,\n      event\n    );\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT] = false;\n  }\n  if (screenSpaceEventHandler._buttonDown[MouseButton.MIDDLE]) {\n    cancelMouseEvent(\n      screenSpaceEventHandler,\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].MIDDLE_UP */ .Z.MIDDLE_UP,\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].MIDDLE_CLICK */ .Z.MIDDLE_CLICK,\n      event\n    );\n    screenSpaceEventHandler._buttonDown[MouseButton.MIDDLE] = false;\n  }\n  if (screenSpaceEventHandler._buttonDown[MouseButton.RIGHT]) {\n    cancelMouseEvent(\n      screenSpaceEventHandler,\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].RIGHT_UP */ .Z.RIGHT_UP,\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].RIGHT_CLICK */ .Z.RIGHT_CLICK,\n      event\n    );\n    screenSpaceEventHandler._buttonDown[MouseButton.RIGHT] = false;\n  }\n}\n\nvar mouseMoveEvent = {\n  startPosition: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n  endPosition: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\n\nfunction handleMouseMove(screenSpaceEventHandler, event) {\n  if (!canProcessMouseEvent(screenSpaceEventHandler)) {\n    return;\n  }\n\n  var modifier = getModifier(event);\n\n  var position = getPosition(\n    screenSpaceEventHandler,\n    event,\n    screenSpaceEventHandler._primaryPosition\n  );\n  var previousPosition = screenSpaceEventHandler._primaryPreviousPosition;\n\n  var action = screenSpaceEventHandler.getInputAction(\n    _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].MOUSE_MOVE */ .Z.MOUSE_MOVE,\n    modifier\n  );\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(previousPosition, mouseMoveEvent.startPosition);\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, mouseMoveEvent.endPosition);\n\n    action(mouseMoveEvent);\n  }\n\n  _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, previousPosition);\n\n  if (\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT] ||\n    screenSpaceEventHandler._buttonDown[MouseButton.MIDDLE] ||\n    screenSpaceEventHandler._buttonDown[MouseButton.RIGHT]\n  ) {\n    event.preventDefault();\n  }\n}\n\nvar mouseDblClickEvent = {\n  position: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\n\nfunction handleDblClick(screenSpaceEventHandler, event) {\n  var button = event.button;\n\n  var screenSpaceEventType;\n  if (button === MouseButton.LEFT) {\n    screenSpaceEventType = _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LEFT_DOUBLE_CLICK */ .Z.LEFT_DOUBLE_CLICK;\n  } else {\n    return;\n  }\n\n  var modifier = getModifier(event);\n\n  var action = screenSpaceEventHandler.getInputAction(\n    screenSpaceEventType,\n    modifier\n  );\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n    getPosition(screenSpaceEventHandler, event, mouseDblClickEvent.position);\n\n    action(mouseDblClickEvent);\n  }\n}\n\nfunction handleWheel(screenSpaceEventHandler, event) {\n  // currently this event exposes the delta value in terms of\n  // the obsolete mousewheel event type.  so, for now, we adapt the other\n  // values to that scheme.\n  var delta;\n\n  // standard wheel event uses deltaY.  sign is opposite wheelDelta.\n  // deltaMode indicates what unit it is in.\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(event.deltaY)) {\n    var deltaMode = event.deltaMode;\n    if (deltaMode === event.DOM_DELTA_PIXEL) {\n      delta = -event.deltaY;\n    } else if (deltaMode === event.DOM_DELTA_LINE) {\n      delta = -event.deltaY * 40;\n    } else {\n      // DOM_DELTA_PAGE\n      delta = -event.deltaY * 120;\n    }\n  } else if (event.detail > 0) {\n    // old Firefox versions use event.detail to count the number of clicks. The sign\n    // of the integer is the direction the wheel is scrolled.\n    delta = event.detail * -120;\n  } else {\n    delta = event.wheelDelta;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(delta)) {\n    return;\n  }\n\n  var modifier = getModifier(event);\n  var action = screenSpaceEventHandler.getInputAction(\n    _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].WHEEL */ .Z.WHEEL,\n    modifier\n  );\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n    action(delta);\n\n    event.preventDefault();\n  }\n}\n\nfunction handleTouchStart(screenSpaceEventHandler, event) {\n  gotTouchEvent(screenSpaceEventHandler);\n\n  var changedTouches = event.changedTouches;\n\n  var i;\n  var length = changedTouches.length;\n  var touch;\n  var identifier;\n  var positions = screenSpaceEventHandler._positions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    positions.set(\n      identifier,\n      getPosition(screenSpaceEventHandler, touch, new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z())\n    );\n  }\n\n  fireTouchEvents(screenSpaceEventHandler, event);\n\n  var previousPositions = screenSpaceEventHandler._previousPositions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    previousPositions.set(\n      identifier,\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(positions.get(identifier))\n    );\n  }\n}\n\nfunction handleTouchEnd(screenSpaceEventHandler, event) {\n  gotTouchEvent(screenSpaceEventHandler);\n\n  var changedTouches = event.changedTouches;\n\n  var i;\n  var length = changedTouches.length;\n  var touch;\n  var identifier;\n  var positions = screenSpaceEventHandler._positions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    positions.remove(identifier);\n  }\n\n  fireTouchEvents(screenSpaceEventHandler, event);\n\n  var previousPositions = screenSpaceEventHandler._previousPositions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    previousPositions.remove(identifier);\n  }\n}\n\nvar touchStartEvent = {\n  position: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\nvar touch2StartEvent = {\n  position1: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n  position2: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\nvar touchEndEvent = {\n  position: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\nvar touchClickEvent = {\n  position: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\nvar touchHoldEvent = {\n  position: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\n\nfunction fireTouchEvents(screenSpaceEventHandler, event) {\n  var modifier = getModifier(event);\n  var positions = screenSpaceEventHandler._positions;\n  var numberOfTouches = positions.length;\n  var action;\n  var clickAction;\n  var pinching = screenSpaceEventHandler._isPinching;\n\n  if (\n    numberOfTouches !== 1 &&\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT]\n  ) {\n    // transitioning from single touch, trigger UP and might trigger CLICK\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT] = false;\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(screenSpaceEventHandler._touchHoldTimer)) {\n      clearTimeout(screenSpaceEventHandler._touchHoldTimer);\n      screenSpaceEventHandler._touchHoldTimer = undefined;\n    }\n\n    action = screenSpaceEventHandler.getInputAction(\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LEFT_UP */ .Z.LEFT_UP,\n      modifier\n    );\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n        screenSpaceEventHandler._primaryPosition,\n        touchEndEvent.position\n      );\n\n      action(touchEndEvent);\n    }\n\n    if (numberOfTouches === 0 && !screenSpaceEventHandler._isTouchHolding) {\n      // releasing single touch, check for CLICK\n      clickAction = screenSpaceEventHandler.getInputAction(\n        _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LEFT_CLICK */ .Z.LEFT_CLICK,\n        modifier\n      );\n\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(clickAction)) {\n        var startPosition = screenSpaceEventHandler._primaryStartPosition;\n        var endPosition = screenSpaceEventHandler._previousPositions.values[0];\n        if (\n          checkPixelTolerance(\n            startPosition,\n            endPosition,\n            screenSpaceEventHandler._clickPixelTolerance\n          )\n        ) {\n          _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n            screenSpaceEventHandler._primaryPosition,\n            touchClickEvent.position\n          );\n\n          clickAction(touchClickEvent);\n        }\n      }\n    }\n\n    screenSpaceEventHandler._isTouchHolding = false;\n\n    // Otherwise don\'t trigger CLICK, because we are adding more touches.\n  }\n\n  if (numberOfTouches === 0 && pinching) {\n    // transitioning from pinch, trigger PINCH_END\n    screenSpaceEventHandler._isPinching = false;\n\n    action = screenSpaceEventHandler.getInputAction(\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PINCH_END */ .Z.PINCH_END,\n      modifier\n    );\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n      action();\n    }\n  }\n\n  if (numberOfTouches === 1 && !pinching) {\n    // transitioning to single touch, trigger DOWN\n    var position = positions.values[0];\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, screenSpaceEventHandler._primaryPosition);\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, screenSpaceEventHandler._primaryStartPosition);\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n      position,\n      screenSpaceEventHandler._primaryPreviousPosition\n    );\n\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT] = true;\n\n    action = screenSpaceEventHandler.getInputAction(\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LEFT_DOWN */ .Z.LEFT_DOWN,\n      modifier\n    );\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, touchStartEvent.position);\n\n      action(touchStartEvent);\n    }\n\n    screenSpaceEventHandler._touchHoldTimer = setTimeout(function () {\n      if (!screenSpaceEventHandler.isDestroyed()) {\n        screenSpaceEventHandler._touchHoldTimer = undefined;\n        screenSpaceEventHandler._isTouchHolding = true;\n\n        clickAction = screenSpaceEventHandler.getInputAction(\n          _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].RIGHT_CLICK */ .Z.RIGHT_CLICK,\n          modifier\n        );\n\n        if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(clickAction)) {\n          var startPosition = screenSpaceEventHandler._primaryStartPosition;\n          var endPosition =\n            screenSpaceEventHandler._previousPositions.values[0];\n          if (\n            checkPixelTolerance(\n              startPosition,\n              endPosition,\n              screenSpaceEventHandler._holdPixelTolerance\n            )\n          ) {\n            _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n              screenSpaceEventHandler._primaryPosition,\n              touchHoldEvent.position\n            );\n\n            clickAction(touchHoldEvent);\n          }\n        }\n      }\n    }, ScreenSpaceEventHandler.touchHoldDelayMilliseconds);\n\n    event.preventDefault();\n  }\n\n  if (numberOfTouches === 2 && !pinching) {\n    // transitioning to pinch, trigger PINCH_START\n    screenSpaceEventHandler._isPinching = true;\n\n    action = screenSpaceEventHandler.getInputAction(\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PINCH_START */ .Z.PINCH_START,\n      modifier\n    );\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(positions.values[0], touch2StartEvent.position1);\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(positions.values[1], touch2StartEvent.position2);\n\n      action(touch2StartEvent);\n\n      // Touch-enabled devices, in particular iOS can have many default behaviours for\n      // "pinch" events, which can still be executed unless we prevent them here.\n      event.preventDefault();\n    }\n  }\n}\n\nfunction handleTouchMove(screenSpaceEventHandler, event) {\n  gotTouchEvent(screenSpaceEventHandler);\n\n  var changedTouches = event.changedTouches;\n\n  var i;\n  var length = changedTouches.length;\n  var touch;\n  var identifier;\n  var positions = screenSpaceEventHandler._positions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    var position = positions.get(identifier);\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(position)) {\n      getPosition(screenSpaceEventHandler, touch, position);\n    }\n  }\n\n  fireTouchMoveEvents(screenSpaceEventHandler, event);\n\n  var previousPositions = screenSpaceEventHandler._previousPositions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n      positions.get(identifier),\n      previousPositions.get(identifier)\n    );\n  }\n}\n\nvar touchMoveEvent = {\n  startPosition: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n  endPosition: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n};\nvar touchPinchMovementEvent = {\n  distance: {\n    startPosition: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n    endPosition: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n  },\n  angleAndHeight: {\n    startPosition: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n    endPosition: new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(),\n  },\n};\n\nfunction fireTouchMoveEvents(screenSpaceEventHandler, event) {\n  var modifier = getModifier(event);\n  var positions = screenSpaceEventHandler._positions;\n  var previousPositions = screenSpaceEventHandler._previousPositions;\n  var numberOfTouches = positions.length;\n  var action;\n\n  if (\n    numberOfTouches === 1 &&\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT]\n  ) {\n    // moving single touch\n    var position = positions.values[0];\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, screenSpaceEventHandler._primaryPosition);\n\n    var previousPosition = screenSpaceEventHandler._primaryPreviousPosition;\n\n    action = screenSpaceEventHandler.getInputAction(\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].MOUSE_MOVE */ .Z.MOUSE_MOVE,\n      modifier\n    );\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(previousPosition, touchMoveEvent.startPosition);\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, touchMoveEvent.endPosition);\n\n      action(touchMoveEvent);\n    }\n\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(position, previousPosition);\n\n    event.preventDefault();\n  } else if (numberOfTouches === 2 && screenSpaceEventHandler._isPinching) {\n    // moving pinch\n\n    action = screenSpaceEventHandler.getInputAction(\n      _ScreenSpaceEventType_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PINCH_MOVE */ .Z.PINCH_MOVE,\n      modifier\n    );\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n      var position1 = positions.values[0];\n      var position2 = positions.values[1];\n      var previousPosition1 = previousPositions.values[0];\n      var previousPosition2 = previousPositions.values[1];\n\n      var dX = position2.x - position1.x;\n      var dY = position2.y - position1.y;\n      var dist = Math.sqrt(dX * dX + dY * dY) * 0.25;\n\n      var prevDX = previousPosition2.x - previousPosition1.x;\n      var prevDY = previousPosition2.y - previousPosition1.y;\n      var prevDist = Math.sqrt(prevDX * prevDX + prevDY * prevDY) * 0.25;\n\n      var cY = (position2.y + position1.y) * 0.125;\n      var prevCY = (previousPosition2.y + previousPosition1.y) * 0.125;\n      var angle = Math.atan2(dY, dX);\n      var prevAngle = Math.atan2(prevDY, prevDX);\n\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromElements */ .Z.fromElements(\n        0.0,\n        prevDist,\n        touchPinchMovementEvent.distance.startPosition\n      );\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromElements */ .Z.fromElements(\n        0.0,\n        dist,\n        touchPinchMovementEvent.distance.endPosition\n      );\n\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromElements */ .Z.fromElements(\n        prevAngle,\n        prevCY,\n        touchPinchMovementEvent.angleAndHeight.startPosition\n      );\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromElements */ .Z.fromElements(\n        angle,\n        cY,\n        touchPinchMovementEvent.angleAndHeight.endPosition\n      );\n\n      action(touchPinchMovementEvent);\n    }\n  }\n}\n\nfunction handlePointerDown(screenSpaceEventHandler, event) {\n  event.target.setPointerCapture(event.pointerId);\n\n  if (event.pointerType === "touch") {\n    var positions = screenSpaceEventHandler._positions;\n\n    var identifier = event.pointerId;\n    positions.set(\n      identifier,\n      getPosition(screenSpaceEventHandler, event, new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z())\n    );\n\n    fireTouchEvents(screenSpaceEventHandler, event);\n\n    var previousPositions = screenSpaceEventHandler._previousPositions;\n    previousPositions.set(\n      identifier,\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(positions.get(identifier))\n    );\n  } else {\n    handleMouseDown(screenSpaceEventHandler, event);\n  }\n}\n\nfunction handlePointerUp(screenSpaceEventHandler, event) {\n  if (event.pointerType === "touch") {\n    var positions = screenSpaceEventHandler._positions;\n\n    var identifier = event.pointerId;\n    positions.remove(identifier);\n\n    fireTouchEvents(screenSpaceEventHandler, event);\n\n    var previousPositions = screenSpaceEventHandler._previousPositions;\n    previousPositions.remove(identifier);\n  } else {\n    handleMouseUp(screenSpaceEventHandler, event);\n  }\n}\n\nfunction handlePointerMove(screenSpaceEventHandler, event) {\n  if (event.pointerType === "touch") {\n    var positions = screenSpaceEventHandler._positions;\n\n    var identifier = event.pointerId;\n    var position = positions.get(identifier);\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(position)) {\n      return;\n    }\n\n    getPosition(screenSpaceEventHandler, event, position);\n    fireTouchMoveEvents(screenSpaceEventHandler, event);\n\n    var previousPositions = screenSpaceEventHandler._previousPositions;\n    _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n      positions.get(identifier),\n      previousPositions.get(identifier)\n    );\n  } else {\n    handleMouseMove(screenSpaceEventHandler, event);\n  }\n}\n\n/**\n * Handles user input events. Custom functions can be added to be executed on\n * when the user enters input.\n *\n * @alias ScreenSpaceEventHandler\n *\n * @param {HTMLCanvasElement} [element=document] The element to add events to.\n *\n * @constructor\n */\nfunction ScreenSpaceEventHandler(element) {\n  this._inputEvents = {};\n  this._buttonDown = {\n    LEFT: false,\n    MIDDLE: false,\n    RIGHT: false,\n  };\n  this._isPinching = false;\n  this._isTouchHolding = false;\n  this._lastSeenTouchEvent = -ScreenSpaceEventHandler.mouseEmulationIgnoreMilliseconds;\n\n  this._primaryStartPosition = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  this._primaryPosition = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  this._primaryPreviousPosition = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  this._positions = new _AssociativeArray_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this._previousPositions = new _AssociativeArray_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n  this._removalFunctions = [];\n\n  this._touchHoldTimer = undefined;\n\n  // TODO: Revisit when doing mobile development. May need to be configurable\n  // or determined based on the platform?\n  this._clickPixelTolerance = 5;\n  this._holdPixelTolerance = 25;\n\n  this._element = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(element, document);\n\n  registerListeners(this);\n}\n\n/**\n * Set a function to be executed on an input event.\n *\n * @param {Function} action Function to be executed when the input event occurs.\n * @param {Number} type The ScreenSpaceEventType of input event.\n * @param {Number} [modifier] A KeyboardEventModifier key that is held when a <code>type</code>\n * event occurs.\n *\n * @see ScreenSpaceEventHandler#getInputAction\n * @see ScreenSpaceEventHandler#removeInputAction\n */\nScreenSpaceEventHandler.prototype.setInputAction = function (\n  action,\n  type,\n  modifier\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(action)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("action is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(type)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("type is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var key = getInputEventKey(type, modifier);\n  this._inputEvents[key] = action;\n};\n\n/**\n * Returns the function to be executed on an input event.\n *\n * @param {Number} type The ScreenSpaceEventType of input event.\n * @param {Number} [modifier] A KeyboardEventModifier key that is held when a <code>type</code>\n * event occurs.\n *\n * @returns {Function} The function to be executed on an input event.\n *\n * @see ScreenSpaceEventHandler#setInputAction\n * @see ScreenSpaceEventHandler#removeInputAction\n */\nScreenSpaceEventHandler.prototype.getInputAction = function (type, modifier) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(type)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("type is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var key = getInputEventKey(type, modifier);\n  return this._inputEvents[key];\n};\n\n/**\n * Removes the function to be executed on an input event.\n *\n * @param {Number} type The ScreenSpaceEventType of input event.\n * @param {Number} [modifier] A KeyboardEventModifier key that is held when a <code>type</code>\n * event occurs.\n *\n * @see ScreenSpaceEventHandler#getInputAction\n * @see ScreenSpaceEventHandler#setInputAction\n */\nScreenSpaceEventHandler.prototype.removeInputAction = function (\n  type,\n  modifier\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(type)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("type is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var key = getInputEventKey(type, modifier);\n  delete this._inputEvents[key];\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see ScreenSpaceEventHandler#destroy\n */\nScreenSpaceEventHandler.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Removes listeners held by this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * handler = handler && handler.destroy();\n *\n * @see ScreenSpaceEventHandler#isDestroyed\n */\nScreenSpaceEventHandler.prototype.destroy = function () {\n  unregisterListeners(this);\n\n  return (0,_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this);\n};\n\n/**\n * The amount of time, in milliseconds, that mouse events will be disabled after\n * receiving any touch events, such that any emulated mouse events will be ignored.\n * @type {Number}\n * @default 800\n */\nScreenSpaceEventHandler.mouseEmulationIgnoreMilliseconds = 800;\n\n/**\n * The amount of time, in milliseconds, before a touch on the screen becomes a\n * touch and hold.\n * @type {Number}\n * @default 1500\n */\nScreenSpaceEventHandler.touchHoldDelayMilliseconds = 1500;\n/* harmony default export */ __webpack_exports__["Z"] = (ScreenSpaceEventHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA0MDYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFxRDtBQUNaO0FBQ0k7QUFDVjtBQUNZO0FBQ0U7QUFDSTtBQUNSO0FBQ2tCO0FBQ0Y7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU0sZ0VBQU87QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxzRkFBMkI7QUFDdEMsSUFBSTtBQUNKLFdBQVcsb0ZBQTBCO0FBQ3JDLElBQUk7QUFDSixXQUFXLGtGQUF5QjtBQUNwQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTSwyR0FBbUM7QUFDekM7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsZ0VBQU87QUFDakM7QUFDQTs7QUFFQSxNQUFNLGlIQUFzQztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLDZCQUE2QjtBQUMvQztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsK0RBQVU7QUFDMUI7O0FBRUE7QUFDQSxnREFBZ0QscUVBQVk7QUFDNUQ7O0FBRUE7QUFDQTtBQUNBLElBQUkscUVBQVk7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMkJBQTJCLDZGQUE4QjtBQUN6RCxJQUFJO0FBQ0osMkJBQTJCLGlHQUFnQztBQUMzRCxJQUFJO0FBQ0osMkJBQTJCLCtGQUErQjtBQUMxRCxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwyRUFBZ0I7QUFDbEIsRUFBRSwyRUFBZ0I7O0FBRWxCOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0sZ0VBQU87QUFDYixJQUFJLDJFQUFnQjs7QUFFcEI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLCtEQUFVO0FBQzFCO0FBQ0E7QUFDQSxnQkFBZ0IsK0RBQVU7QUFDMUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLGdFQUFPLFlBQVksZ0VBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLGdFQUFPO0FBQ2YsTUFBTSwyRUFBZ0I7O0FBRXRCO0FBQ0E7O0FBRUEsUUFBUSxnRUFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDJFQUFnQjs7QUFFeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHlGQUE0QjtBQUNsQyxNQUFNLCtGQUErQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNkZBQThCO0FBQ3BDLE1BQU0sbUdBQWlDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSwyRkFBNkI7QUFDbkMsTUFBTSxpR0FBZ0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQiwrREFBVTtBQUMvQixtQkFBbUIsK0RBQVU7QUFDN0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSwrRkFBK0I7QUFDbkM7QUFDQTs7QUFFQSxNQUFNLGdFQUFPO0FBQ2IsSUFBSSwyRUFBZ0I7QUFDcEIsSUFBSSwyRUFBZ0I7O0FBRXBCO0FBQ0E7O0FBRUEsRUFBRSwyRUFBZ0I7O0FBRWxCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsK0RBQVU7QUFDMUI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMkJBQTJCLDZHQUFzQztBQUNqRSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLGdFQUFPO0FBQ2I7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU0sZ0VBQU87QUFDYjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBLE9BQU8sZ0VBQU87QUFDZDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHFGQUEwQjtBQUM5QjtBQUNBOztBQUVBLE1BQU0sZ0VBQU87QUFDYjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWMsWUFBWTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCwrREFBVTtBQUNoRTtBQUNBOztBQUVBOztBQUVBOztBQUVBLGNBQWMsWUFBWTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sMkVBQWdCO0FBQ3RCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxZQUFZO0FBQzFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBLGNBQWMsWUFBWTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLCtEQUFVO0FBQzFCO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQVU7QUFDM0IsaUJBQWlCLCtEQUFVO0FBQzNCO0FBQ0E7QUFDQSxnQkFBZ0IsK0RBQVU7QUFDMUI7QUFDQTtBQUNBLGdCQUFnQiwrREFBVTtBQUMxQjtBQUNBO0FBQ0EsZ0JBQWdCLCtEQUFVO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLGdFQUFPO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSx5RkFBNEI7QUFDbEM7QUFDQTs7QUFFQSxRQUFRLGdFQUFPO0FBQ2YsTUFBTSwyRUFBZ0I7QUFDdEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUSwrRkFBK0I7QUFDdkM7QUFDQTs7QUFFQSxVQUFVLGdFQUFPO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMkVBQWdCO0FBQzFCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0sNkZBQThCO0FBQ3BDO0FBQ0E7O0FBRUEsUUFBUSxnRUFBTztBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDJFQUFnQjtBQUNwQixJQUFJLDJFQUFnQjtBQUNwQixJQUFJLDJFQUFnQjtBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxNQUFNLDZGQUE4QjtBQUNwQztBQUNBOztBQUVBLFFBQVEsZ0VBQU87QUFDZixNQUFNLDJFQUFnQjs7QUFFdEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVUsaUdBQWdDO0FBQzFDO0FBQ0E7O0FBRUEsWUFBWSxnRUFBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkVBQWdCO0FBQzVCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLGlHQUFnQztBQUN0QztBQUNBOztBQUVBLFFBQVEsZ0VBQU87QUFDZixNQUFNLDJFQUFnQjtBQUN0QixNQUFNLDJFQUFnQjs7QUFFdEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLFlBQVk7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnRUFBTztBQUNmO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSxjQUFjLFlBQVk7QUFDMUI7QUFDQTtBQUNBLElBQUksMkVBQWdCO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsK0RBQVU7QUFDL0IsbUJBQW1CLCtEQUFVO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwrREFBVTtBQUNqQyxxQkFBcUIsK0RBQVU7QUFDL0IsR0FBRztBQUNIO0FBQ0EsdUJBQXVCLCtEQUFVO0FBQ2pDLHFCQUFxQiwrREFBVTtBQUMvQixHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksMkVBQWdCOztBQUVwQjs7QUFFQTtBQUNBLE1BQU0sK0ZBQStCO0FBQ3JDO0FBQ0E7O0FBRUEsUUFBUSxnRUFBTztBQUNmLE1BQU0sMkVBQWdCO0FBQ3RCLE1BQU0sMkVBQWdCOztBQUV0QjtBQUNBOztBQUVBLElBQUksMkVBQWdCOztBQUVwQjtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBLE1BQU0sK0ZBQStCO0FBQ3JDO0FBQ0E7QUFDQSxRQUFRLGdFQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLHlGQUF1QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0seUZBQXVCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0seUZBQXVCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx5RkFBdUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCwrREFBVTtBQUNoRTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDJFQUFnQjtBQUN0QjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTLGdFQUFPO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLElBQUksMkVBQWdCO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUNBQW1DLCtEQUFVO0FBQzdDLDhCQUE4QiwrREFBVTtBQUN4QyxzQ0FBc0MsK0RBQVU7O0FBRWhELHdCQUF3QixxRUFBZ0I7QUFDeEMsZ0NBQWdDLHFFQUFnQjs7QUFFaEQ7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLHFFQUFZOztBQUU5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQSx3REFBd0Q7QUFDeEQsOENBQThDLHNCQUFzQjtBQUNwRTtBQUNBLGFBQWEsU0FBUyxnREFBZ0Q7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RCw4Q0FBOEMsc0JBQXNCO0FBQ3BFO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxzRUFBYTtBQUN0Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSx5REFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL1NjcmVlblNwYWNlRXZlbnRIYW5kbGVyLmpzPzhiOTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFzc29jaWF0aXZlQXJyYXkgZnJvbSBcIi4vQXNzb2NpYXRpdmVBcnJheS5qc1wiO1xuaW1wb3J0IENhcnRlc2lhbjIgZnJvbSBcIi4vQ2FydGVzaWFuMi5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcbmltcG9ydCBkZXN0cm95T2JqZWN0IGZyb20gXCIuL2Rlc3Ryb3lPYmplY3QuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi9EZXZlbG9wZXJFcnJvci5qc1wiO1xuaW1wb3J0IEZlYXR1cmVEZXRlY3Rpb24gZnJvbSBcIi4vRmVhdHVyZURldGVjdGlvbi5qc1wiO1xuaW1wb3J0IGdldFRpbWVzdGFtcCBmcm9tIFwiLi9nZXRUaW1lc3RhbXAuanNcIjtcbmltcG9ydCBLZXlib2FyZEV2ZW50TW9kaWZpZXIgZnJvbSBcIi4vS2V5Ym9hcmRFdmVudE1vZGlmaWVyLmpzXCI7XG5pbXBvcnQgU2NyZWVuU3BhY2VFdmVudFR5cGUgZnJvbSBcIi4vU2NyZWVuU3BhY2VFdmVudFR5cGUuanNcIjtcblxuZnVuY3Rpb24gZ2V0UG9zaXRpb24oc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50LCByZXN1bHQpIHtcbiAgdmFyIGVsZW1lbnQgPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fZWxlbWVudDtcbiAgaWYgKGVsZW1lbnQgPT09IGRvY3VtZW50KSB7XG4gICAgcmVzdWx0LnggPSBldmVudC5jbGllbnRYO1xuICAgIHJlc3VsdC55ID0gZXZlbnQuY2xpZW50WTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgdmFyIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXN1bHQueCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XG4gIHJlc3VsdC55ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBnZXRJbnB1dEV2ZW50S2V5KHR5cGUsIG1vZGlmaWVyKSB7XG4gIHZhciBrZXkgPSB0eXBlO1xuICBpZiAoZGVmaW5lZChtb2RpZmllcikpIHtcbiAgICBrZXkgKz0gXCIrXCIgKyBtb2RpZmllcjtcbiAgfVxuICByZXR1cm4ga2V5O1xufVxuXG5mdW5jdGlvbiBnZXRNb2RpZmllcihldmVudCkge1xuICBpZiAoZXZlbnQuc2hpZnRLZXkpIHtcbiAgICByZXR1cm4gS2V5Ym9hcmRFdmVudE1vZGlmaWVyLlNISUZUO1xuICB9IGVsc2UgaWYgKGV2ZW50LmN0cmxLZXkpIHtcbiAgICByZXR1cm4gS2V5Ym9hcmRFdmVudE1vZGlmaWVyLkNUUkw7XG4gIH0gZWxzZSBpZiAoZXZlbnQuYWx0S2V5KSB7XG4gICAgcmV0dXJuIEtleWJvYXJkRXZlbnRNb2RpZmllci5BTFQ7XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG52YXIgTW91c2VCdXR0b24gPSB7XG4gIExFRlQ6IDAsXG4gIE1JRERMRTogMSxcbiAgUklHSFQ6IDIsXG59O1xuXG5mdW5jdGlvbiByZWdpc3Rlckxpc3RlbmVyKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLCBkb21UeXBlLCBlbGVtZW50LCBjYWxsYmFjaykge1xuICBmdW5jdGlvbiBsaXN0ZW5lcihlKSB7XG4gICAgY2FsbGJhY2soc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGUpO1xuICB9XG5cbiAgaWYgKEZlYXR1cmVEZXRlY3Rpb24uaXNJbnRlcm5ldEV4cGxvcmVyKCkpIHtcbiAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZG9tVHlwZSwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgfSBlbHNlIHtcbiAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZG9tVHlwZSwgbGlzdGVuZXIsIHtcbiAgICAgIGNhcHR1cmU6IGZhbHNlLFxuICAgICAgcGFzc2l2ZTogZmFsc2UsXG4gICAgfSk7XG4gIH1cblxuICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcmVtb3ZhbEZ1bmN0aW9ucy5wdXNoKGZ1bmN0aW9uICgpIHtcbiAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZG9tVHlwZSwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyTGlzdGVuZXJzKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyKSB7XG4gIHZhciBlbGVtZW50ID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX2VsZW1lbnQ7XG5cbiAgLy8gc29tZSBsaXN0ZW5lcnMgbWF5IGJlIHJlZ2lzdGVyZWQgb24gdGhlIGRvY3VtZW50LCBzbyB3ZSBzdGlsbCBnZXQgZXZlbnRzIGV2ZW4gYWZ0ZXJcbiAgLy8gbGVhdmluZyB0aGUgYm91bmRzIG9mIGVsZW1lbnQuXG4gIC8vIHRoaXMgaXMgYWZmZWN0ZWQgYnkgdGhlIGV4aXN0ZW5jZSBvZiBhbiB1bmRvY3VtZW50ZWQgZGlzYWJsZVJvb3RFdmVudHMgcHJvcGVydHkgb24gZWxlbWVudC5cbiAgdmFyIGFsdGVybmF0ZUVsZW1lbnQgPSAhZGVmaW5lZChlbGVtZW50LmRpc2FibGVSb290RXZlbnRzKVxuICAgID8gZG9jdW1lbnRcbiAgICA6IGVsZW1lbnQ7XG5cbiAgaWYgKEZlYXR1cmVEZXRlY3Rpb24uc3VwcG9ydHNQb2ludGVyRXZlbnRzKCkpIHtcbiAgICByZWdpc3Rlckxpc3RlbmVyKFxuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgICBcInBvaW50ZXJkb3duXCIsXG4gICAgICBlbGVtZW50LFxuICAgICAgaGFuZGxlUG9pbnRlckRvd25cbiAgICApO1xuICAgIHJlZ2lzdGVyTGlzdGVuZXIoXG4gICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcixcbiAgICAgIFwicG9pbnRlcnVwXCIsXG4gICAgICBlbGVtZW50LFxuICAgICAgaGFuZGxlUG9pbnRlclVwXG4gICAgKTtcbiAgICByZWdpc3Rlckxpc3RlbmVyKFxuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgICBcInBvaW50ZXJtb3ZlXCIsXG4gICAgICBlbGVtZW50LFxuICAgICAgaGFuZGxlUG9pbnRlck1vdmVcbiAgICApO1xuICAgIHJlZ2lzdGVyTGlzdGVuZXIoXG4gICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcixcbiAgICAgIFwicG9pbnRlcmNhbmNlbFwiLFxuICAgICAgZWxlbWVudCxcbiAgICAgIGhhbmRsZVBvaW50ZXJVcFxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgcmVnaXN0ZXJMaXN0ZW5lcihcbiAgICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLFxuICAgICAgXCJtb3VzZWRvd25cIixcbiAgICAgIGVsZW1lbnQsXG4gICAgICBoYW5kbGVNb3VzZURvd25cbiAgICApO1xuICAgIHJlZ2lzdGVyTGlzdGVuZXIoXG4gICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcixcbiAgICAgIFwibW91c2V1cFwiLFxuICAgICAgYWx0ZXJuYXRlRWxlbWVudCxcbiAgICAgIGhhbmRsZU1vdXNlVXBcbiAgICApO1xuICAgIHJlZ2lzdGVyTGlzdGVuZXIoXG4gICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcixcbiAgICAgIFwibW91c2Vtb3ZlXCIsXG4gICAgICBhbHRlcm5hdGVFbGVtZW50LFxuICAgICAgaGFuZGxlTW91c2VNb3ZlXG4gICAgKTtcbiAgICByZWdpc3Rlckxpc3RlbmVyKFxuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgICBcInRvdWNoc3RhcnRcIixcbiAgICAgIGVsZW1lbnQsXG4gICAgICBoYW5kbGVUb3VjaFN0YXJ0XG4gICAgKTtcbiAgICByZWdpc3Rlckxpc3RlbmVyKFxuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgICBcInRvdWNoZW5kXCIsXG4gICAgICBhbHRlcm5hdGVFbGVtZW50LFxuICAgICAgaGFuZGxlVG91Y2hFbmRcbiAgICApO1xuICAgIHJlZ2lzdGVyTGlzdGVuZXIoXG4gICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcixcbiAgICAgIFwidG91Y2htb3ZlXCIsXG4gICAgICBhbHRlcm5hdGVFbGVtZW50LFxuICAgICAgaGFuZGxlVG91Y2hNb3ZlXG4gICAgKTtcbiAgICByZWdpc3Rlckxpc3RlbmVyKFxuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgICBcInRvdWNoY2FuY2VsXCIsXG4gICAgICBhbHRlcm5hdGVFbGVtZW50LFxuICAgICAgaGFuZGxlVG91Y2hFbmRcbiAgICApO1xuICB9XG5cbiAgcmVnaXN0ZXJMaXN0ZW5lcihcbiAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcixcbiAgICBcImRibGNsaWNrXCIsXG4gICAgZWxlbWVudCxcbiAgICBoYW5kbGVEYmxDbGlja1xuICApO1xuXG4gIC8vIGRldGVjdCBhdmFpbGFibGUgd2hlZWwgZXZlbnRcbiAgdmFyIHdoZWVsRXZlbnQ7XG4gIGlmIChcIm9ud2hlZWxcIiBpbiBlbGVtZW50KSB7XG4gICAgLy8gc3BlYyBldmVudCB0eXBlXG4gICAgd2hlZWxFdmVudCA9IFwid2hlZWxcIjtcbiAgfSBlbHNlIGlmIChkb2N1bWVudC5vbm1vdXNld2hlZWwgIT09IHVuZGVmaW5lZCkge1xuICAgIC8vIGxlZ2FjeSBldmVudCB0eXBlXG4gICAgd2hlZWxFdmVudCA9IFwibW91c2V3aGVlbFwiO1xuICB9IGVsc2Uge1xuICAgIC8vIG9sZGVyIEZpcmVmb3hcbiAgICB3aGVlbEV2ZW50ID0gXCJET01Nb3VzZVNjcm9sbFwiO1xuICB9XG5cbiAgcmVnaXN0ZXJMaXN0ZW5lcihzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgd2hlZWxFdmVudCwgZWxlbWVudCwgaGFuZGxlV2hlZWwpO1xufVxuXG5mdW5jdGlvbiB1bnJlZ2lzdGVyTGlzdGVuZXJzKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyKSB7XG4gIHZhciByZW1vdmFsRnVuY3Rpb25zID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3JlbW92YWxGdW5jdGlvbnM7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcmVtb3ZhbEZ1bmN0aW9ucy5sZW5ndGg7ICsraSkge1xuICAgIHJlbW92YWxGdW5jdGlvbnNbaV0oKTtcbiAgfVxufVxuXG52YXIgbW91c2VEb3duRXZlbnQgPSB7XG4gIHBvc2l0aW9uOiBuZXcgQ2FydGVzaWFuMigpLFxufTtcblxuZnVuY3Rpb24gZ290VG91Y2hFdmVudChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcikge1xuICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fbGFzdFNlZW5Ub3VjaEV2ZW50ID0gZ2V0VGltZXN0YW1wKCk7XG59XG5cbmZ1bmN0aW9uIGNhblByb2Nlc3NNb3VzZUV2ZW50KHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyKSB7XG4gIHJldHVybiAoXG4gICAgZ2V0VGltZXN0YW1wKCkgLSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fbGFzdFNlZW5Ub3VjaEV2ZW50ID5cbiAgICBTY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5tb3VzZUVtdWxhdGlvbklnbm9yZU1pbGxpc2Vjb25kc1xuICApO1xufVxuXG5mdW5jdGlvbiBjaGVja1BpeGVsVG9sZXJhbmNlKHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uLCBwaXhlbFRvbGVyYW5jZSkge1xuICB2YXIgeERpZmYgPSBzdGFydFBvc2l0aW9uLnggLSBlbmRQb3NpdGlvbi54O1xuICB2YXIgeURpZmYgPSBzdGFydFBvc2l0aW9uLnkgLSBlbmRQb3NpdGlvbi55O1xuICB2YXIgdG90YWxQaXhlbHMgPSBNYXRoLnNxcnQoeERpZmYgKiB4RGlmZiArIHlEaWZmICogeURpZmYpO1xuXG4gIHJldHVybiB0b3RhbFBpeGVscyA8IHBpeGVsVG9sZXJhbmNlO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVNb3VzZURvd24oc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50KSB7XG4gIGlmICghY2FuUHJvY2Vzc01vdXNlRXZlbnQoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjtcbiAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX2J1dHRvbkRvd25bYnV0dG9uXSA9IHRydWU7XG5cbiAgdmFyIHNjcmVlblNwYWNlRXZlbnRUeXBlO1xuICBpZiAoYnV0dG9uID09PSBNb3VzZUJ1dHRvbi5MRUZUKSB7XG4gICAgc2NyZWVuU3BhY2VFdmVudFR5cGUgPSBTY3JlZW5TcGFjZUV2ZW50VHlwZS5MRUZUX0RPV047XG4gIH0gZWxzZSBpZiAoYnV0dG9uID09PSBNb3VzZUJ1dHRvbi5NSURETEUpIHtcbiAgICBzY3JlZW5TcGFjZUV2ZW50VHlwZSA9IFNjcmVlblNwYWNlRXZlbnRUeXBlLk1JRERMRV9ET1dOO1xuICB9IGVsc2UgaWYgKGJ1dHRvbiA9PT0gTW91c2VCdXR0b24uUklHSFQpIHtcbiAgICBzY3JlZW5TcGFjZUV2ZW50VHlwZSA9IFNjcmVlblNwYWNlRXZlbnRUeXBlLlJJR0hUX0RPV047XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHBvc2l0aW9uID0gZ2V0UG9zaXRpb24oXG4gICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgZXZlbnQsXG4gICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3ByaW1hcnlQb3NpdGlvblxuICApO1xuICBDYXJ0ZXNpYW4yLmNsb25lKHBvc2l0aW9uLCBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcHJpbWFyeVN0YXJ0UG9zaXRpb24pO1xuICBDYXJ0ZXNpYW4yLmNsb25lKHBvc2l0aW9uLCBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcHJpbWFyeVByZXZpb3VzUG9zaXRpb24pO1xuXG4gIHZhciBtb2RpZmllciA9IGdldE1vZGlmaWVyKGV2ZW50KTtcblxuICB2YXIgYWN0aW9uID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuZ2V0SW5wdXRBY3Rpb24oXG4gICAgc2NyZWVuU3BhY2VFdmVudFR5cGUsXG4gICAgbW9kaWZpZXJcbiAgKTtcblxuICBpZiAoZGVmaW5lZChhY3Rpb24pKSB7XG4gICAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbiwgbW91c2VEb3duRXZlbnQucG9zaXRpb24pO1xuXG4gICAgYWN0aW9uKG1vdXNlRG93bkV2ZW50KTtcblxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH1cbn1cblxudmFyIG1vdXNlVXBFdmVudCA9IHtcbiAgcG9zaXRpb246IG5ldyBDYXJ0ZXNpYW4yKCksXG59O1xudmFyIG1vdXNlQ2xpY2tFdmVudCA9IHtcbiAgcG9zaXRpb246IG5ldyBDYXJ0ZXNpYW4yKCksXG59O1xuXG5mdW5jdGlvbiBjYW5jZWxNb3VzZUV2ZW50KFxuICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcixcbiAgc2NyZWVuU3BhY2VFdmVudFR5cGUsXG4gIGNsaWNrU2NyZWVuU3BhY2VFdmVudFR5cGUsXG4gIGV2ZW50XG4pIHtcbiAgdmFyIG1vZGlmaWVyID0gZ2V0TW9kaWZpZXIoZXZlbnQpO1xuXG4gIHZhciBhY3Rpb24gPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5nZXRJbnB1dEFjdGlvbihcbiAgICBzY3JlZW5TcGFjZUV2ZW50VHlwZSxcbiAgICBtb2RpZmllclxuICApO1xuICB2YXIgY2xpY2tBY3Rpb24gPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5nZXRJbnB1dEFjdGlvbihcbiAgICBjbGlja1NjcmVlblNwYWNlRXZlbnRUeXBlLFxuICAgIG1vZGlmaWVyXG4gICk7XG5cbiAgaWYgKGRlZmluZWQoYWN0aW9uKSB8fCBkZWZpbmVkKGNsaWNrQWN0aW9uKSkge1xuICAgIHZhciBwb3NpdGlvbiA9IGdldFBvc2l0aW9uKFxuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgICBldmVudCxcbiAgICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmltYXJ5UG9zaXRpb25cbiAgICApO1xuXG4gICAgaWYgKGRlZmluZWQoYWN0aW9uKSkge1xuICAgICAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbiwgbW91c2VVcEV2ZW50LnBvc2l0aW9uKTtcblxuICAgICAgYWN0aW9uKG1vdXNlVXBFdmVudCk7XG4gICAgfVxuXG4gICAgaWYgKGRlZmluZWQoY2xpY2tBY3Rpb24pKSB7XG4gICAgICB2YXIgc3RhcnRQb3NpdGlvbiA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmltYXJ5U3RhcnRQb3NpdGlvbjtcbiAgICAgIGlmIChcbiAgICAgICAgY2hlY2tQaXhlbFRvbGVyYW5jZShcbiAgICAgICAgICBzdGFydFBvc2l0aW9uLFxuICAgICAgICAgIHBvc2l0aW9uLFxuICAgICAgICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9jbGlja1BpeGVsVG9sZXJhbmNlXG4gICAgICAgIClcbiAgICAgICkge1xuICAgICAgICBDYXJ0ZXNpYW4yLmNsb25lKHBvc2l0aW9uLCBtb3VzZUNsaWNrRXZlbnQucG9zaXRpb24pO1xuXG4gICAgICAgIGNsaWNrQWN0aW9uKG1vdXNlQ2xpY2tFdmVudCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU1vdXNlVXAoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50KSB7XG4gIGlmICghY2FuUHJvY2Vzc01vdXNlRXZlbnQoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjtcblxuICBpZiAoXG4gICAgYnV0dG9uICE9PSBNb3VzZUJ1dHRvbi5MRUZUICYmXG4gICAgYnV0dG9uICE9PSBNb3VzZUJ1dHRvbi5NSURETEUgJiZcbiAgICBidXR0b24gIT09IE1vdXNlQnV0dG9uLlJJR0hUXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fYnV0dG9uRG93bltNb3VzZUJ1dHRvbi5MRUZUXSkge1xuICAgIGNhbmNlbE1vdXNlRXZlbnQoXG4gICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcixcbiAgICAgIFNjcmVlblNwYWNlRXZlbnRUeXBlLkxFRlRfVVAsXG4gICAgICBTY3JlZW5TcGFjZUV2ZW50VHlwZS5MRUZUX0NMSUNLLFxuICAgICAgZXZlbnRcbiAgICApO1xuICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9idXR0b25Eb3duW01vdXNlQnV0dG9uLkxFRlRdID0gZmFsc2U7XG4gIH1cbiAgaWYgKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9idXR0b25Eb3duW01vdXNlQnV0dG9uLk1JRERMRV0pIHtcbiAgICBjYW5jZWxNb3VzZUV2ZW50KFxuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgICBTY3JlZW5TcGFjZUV2ZW50VHlwZS5NSURETEVfVVAsXG4gICAgICBTY3JlZW5TcGFjZUV2ZW50VHlwZS5NSURETEVfQ0xJQ0ssXG4gICAgICBldmVudFxuICAgICk7XG4gICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX2J1dHRvbkRvd25bTW91c2VCdXR0b24uTUlERExFXSA9IGZhbHNlO1xuICB9XG4gIGlmIChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fYnV0dG9uRG93bltNb3VzZUJ1dHRvbi5SSUdIVF0pIHtcbiAgICBjYW5jZWxNb3VzZUV2ZW50KFxuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsXG4gICAgICBTY3JlZW5TcGFjZUV2ZW50VHlwZS5SSUdIVF9VUCxcbiAgICAgIFNjcmVlblNwYWNlRXZlbnRUeXBlLlJJR0hUX0NMSUNLLFxuICAgICAgZXZlbnRcbiAgICApO1xuICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9idXR0b25Eb3duW01vdXNlQnV0dG9uLlJJR0hUXSA9IGZhbHNlO1xuICB9XG59XG5cbnZhciBtb3VzZU1vdmVFdmVudCA9IHtcbiAgc3RhcnRQb3NpdGlvbjogbmV3IENhcnRlc2lhbjIoKSxcbiAgZW5kUG9zaXRpb246IG5ldyBDYXJ0ZXNpYW4yKCksXG59O1xuXG5mdW5jdGlvbiBoYW5kbGVNb3VzZU1vdmUoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50KSB7XG4gIGlmICghY2FuUHJvY2Vzc01vdXNlRXZlbnQoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG1vZGlmaWVyID0gZ2V0TW9kaWZpZXIoZXZlbnQpO1xuXG4gIHZhciBwb3NpdGlvbiA9IGdldFBvc2l0aW9uKFxuICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLFxuICAgIGV2ZW50LFxuICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmltYXJ5UG9zaXRpb25cbiAgKTtcbiAgdmFyIHByZXZpb3VzUG9zaXRpb24gPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcHJpbWFyeVByZXZpb3VzUG9zaXRpb247XG5cbiAgdmFyIGFjdGlvbiA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLmdldElucHV0QWN0aW9uKFxuICAgIFNjcmVlblNwYWNlRXZlbnRUeXBlLk1PVVNFX01PVkUsXG4gICAgbW9kaWZpZXJcbiAgKTtcblxuICBpZiAoZGVmaW5lZChhY3Rpb24pKSB7XG4gICAgQ2FydGVzaWFuMi5jbG9uZShwcmV2aW91c1Bvc2l0aW9uLCBtb3VzZU1vdmVFdmVudC5zdGFydFBvc2l0aW9uKTtcbiAgICBDYXJ0ZXNpYW4yLmNsb25lKHBvc2l0aW9uLCBtb3VzZU1vdmVFdmVudC5lbmRQb3NpdGlvbik7XG5cbiAgICBhY3Rpb24obW91c2VNb3ZlRXZlbnQpO1xuICB9XG5cbiAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbiwgcHJldmlvdXNQb3NpdGlvbik7XG5cbiAgaWYgKFxuICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9idXR0b25Eb3duW01vdXNlQnV0dG9uLkxFRlRdIHx8XG4gICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX2J1dHRvbkRvd25bTW91c2VCdXR0b24uTUlERExFXSB8fFxuICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9idXR0b25Eb3duW01vdXNlQnV0dG9uLlJJR0hUXVxuICApIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICB9XG59XG5cbnZhciBtb3VzZURibENsaWNrRXZlbnQgPSB7XG4gIHBvc2l0aW9uOiBuZXcgQ2FydGVzaWFuMigpLFxufTtcblxuZnVuY3Rpb24gaGFuZGxlRGJsQ2xpY2soc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50KSB7XG4gIHZhciBidXR0b24gPSBldmVudC5idXR0b247XG5cbiAgdmFyIHNjcmVlblNwYWNlRXZlbnRUeXBlO1xuICBpZiAoYnV0dG9uID09PSBNb3VzZUJ1dHRvbi5MRUZUKSB7XG4gICAgc2NyZWVuU3BhY2VFdmVudFR5cGUgPSBTY3JlZW5TcGFjZUV2ZW50VHlwZS5MRUZUX0RPVUJMRV9DTElDSztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgbW9kaWZpZXIgPSBnZXRNb2RpZmllcihldmVudCk7XG5cbiAgdmFyIGFjdGlvbiA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLmdldElucHV0QWN0aW9uKFxuICAgIHNjcmVlblNwYWNlRXZlbnRUeXBlLFxuICAgIG1vZGlmaWVyXG4gICk7XG5cbiAgaWYgKGRlZmluZWQoYWN0aW9uKSkge1xuICAgIGdldFBvc2l0aW9uKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLCBldmVudCwgbW91c2VEYmxDbGlja0V2ZW50LnBvc2l0aW9uKTtcblxuICAgIGFjdGlvbihtb3VzZURibENsaWNrRXZlbnQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVdoZWVsKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLCBldmVudCkge1xuICAvLyBjdXJyZW50bHkgdGhpcyBldmVudCBleHBvc2VzIHRoZSBkZWx0YSB2YWx1ZSBpbiB0ZXJtcyBvZlxuICAvLyB0aGUgb2Jzb2xldGUgbW91c2V3aGVlbCBldmVudCB0eXBlLiAgc28sIGZvciBub3csIHdlIGFkYXB0IHRoZSBvdGhlclxuICAvLyB2YWx1ZXMgdG8gdGhhdCBzY2hlbWUuXG4gIHZhciBkZWx0YTtcblxuICAvLyBzdGFuZGFyZCB3aGVlbCBldmVudCB1c2VzIGRlbHRhWS4gIHNpZ24gaXMgb3Bwb3NpdGUgd2hlZWxEZWx0YS5cbiAgLy8gZGVsdGFNb2RlIGluZGljYXRlcyB3aGF0IHVuaXQgaXQgaXMgaW4uXG4gIGlmIChkZWZpbmVkKGV2ZW50LmRlbHRhWSkpIHtcbiAgICB2YXIgZGVsdGFNb2RlID0gZXZlbnQuZGVsdGFNb2RlO1xuICAgIGlmIChkZWx0YU1vZGUgPT09IGV2ZW50LkRPTV9ERUxUQV9QSVhFTCkge1xuICAgICAgZGVsdGEgPSAtZXZlbnQuZGVsdGFZO1xuICAgIH0gZWxzZSBpZiAoZGVsdGFNb2RlID09PSBldmVudC5ET01fREVMVEFfTElORSkge1xuICAgICAgZGVsdGEgPSAtZXZlbnQuZGVsdGFZICogNDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIERPTV9ERUxUQV9QQUdFXG4gICAgICBkZWx0YSA9IC1ldmVudC5kZWx0YVkgKiAxMjA7XG4gICAgfVxuICB9IGVsc2UgaWYgKGV2ZW50LmRldGFpbCA+IDApIHtcbiAgICAvLyBvbGQgRmlyZWZveCB2ZXJzaW9ucyB1c2UgZXZlbnQuZGV0YWlsIHRvIGNvdW50IHRoZSBudW1iZXIgb2YgY2xpY2tzLiBUaGUgc2lnblxuICAgIC8vIG9mIHRoZSBpbnRlZ2VyIGlzIHRoZSBkaXJlY3Rpb24gdGhlIHdoZWVsIGlzIHNjcm9sbGVkLlxuICAgIGRlbHRhID0gZXZlbnQuZGV0YWlsICogLTEyMDtcbiAgfSBlbHNlIHtcbiAgICBkZWx0YSA9IGV2ZW50LndoZWVsRGVsdGE7XG4gIH1cblxuICBpZiAoIWRlZmluZWQoZGVsdGEpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG1vZGlmaWVyID0gZ2V0TW9kaWZpZXIoZXZlbnQpO1xuICB2YXIgYWN0aW9uID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuZ2V0SW5wdXRBY3Rpb24oXG4gICAgU2NyZWVuU3BhY2VFdmVudFR5cGUuV0hFRUwsXG4gICAgbW9kaWZpZXJcbiAgKTtcblxuICBpZiAoZGVmaW5lZChhY3Rpb24pKSB7XG4gICAgYWN0aW9uKGRlbHRhKTtcblxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlVG91Y2hTdGFydChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpIHtcbiAgZ290VG91Y2hFdmVudChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcik7XG5cbiAgdmFyIGNoYW5nZWRUb3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXM7XG5cbiAgdmFyIGk7XG4gIHZhciBsZW5ndGggPSBjaGFuZ2VkVG91Y2hlcy5sZW5ndGg7XG4gIHZhciB0b3VjaDtcbiAgdmFyIGlkZW50aWZpZXI7XG4gIHZhciBwb3NpdGlvbnMgPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcG9zaXRpb25zO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHRvdWNoID0gY2hhbmdlZFRvdWNoZXNbaV07XG4gICAgaWRlbnRpZmllciA9IHRvdWNoLmlkZW50aWZpZXI7XG4gICAgcG9zaXRpb25zLnNldChcbiAgICAgIGlkZW50aWZpZXIsXG4gICAgICBnZXRQb3NpdGlvbihzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgdG91Y2gsIG5ldyBDYXJ0ZXNpYW4yKCkpXG4gICAgKTtcbiAgfVxuXG4gIGZpcmVUb3VjaEV2ZW50cyhzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpO1xuXG4gIHZhciBwcmV2aW91c1Bvc2l0aW9ucyA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmV2aW91c1Bvc2l0aW9ucztcblxuICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICB0b3VjaCA9IGNoYW5nZWRUb3VjaGVzW2ldO1xuICAgIGlkZW50aWZpZXIgPSB0b3VjaC5pZGVudGlmaWVyO1xuICAgIHByZXZpb3VzUG9zaXRpb25zLnNldChcbiAgICAgIGlkZW50aWZpZXIsXG4gICAgICBDYXJ0ZXNpYW4yLmNsb25lKHBvc2l0aW9ucy5nZXQoaWRlbnRpZmllcikpXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVUb3VjaEVuZChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpIHtcbiAgZ290VG91Y2hFdmVudChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcik7XG5cbiAgdmFyIGNoYW5nZWRUb3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXM7XG5cbiAgdmFyIGk7XG4gIHZhciBsZW5ndGggPSBjaGFuZ2VkVG91Y2hlcy5sZW5ndGg7XG4gIHZhciB0b3VjaDtcbiAgdmFyIGlkZW50aWZpZXI7XG4gIHZhciBwb3NpdGlvbnMgPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcG9zaXRpb25zO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHRvdWNoID0gY2hhbmdlZFRvdWNoZXNbaV07XG4gICAgaWRlbnRpZmllciA9IHRvdWNoLmlkZW50aWZpZXI7XG4gICAgcG9zaXRpb25zLnJlbW92ZShpZGVudGlmaWVyKTtcbiAgfVxuXG4gIGZpcmVUb3VjaEV2ZW50cyhzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpO1xuXG4gIHZhciBwcmV2aW91c1Bvc2l0aW9ucyA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmV2aW91c1Bvc2l0aW9ucztcblxuICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICB0b3VjaCA9IGNoYW5nZWRUb3VjaGVzW2ldO1xuICAgIGlkZW50aWZpZXIgPSB0b3VjaC5pZGVudGlmaWVyO1xuICAgIHByZXZpb3VzUG9zaXRpb25zLnJlbW92ZShpZGVudGlmaWVyKTtcbiAgfVxufVxuXG52YXIgdG91Y2hTdGFydEV2ZW50ID0ge1xuICBwb3NpdGlvbjogbmV3IENhcnRlc2lhbjIoKSxcbn07XG52YXIgdG91Y2gyU3RhcnRFdmVudCA9IHtcbiAgcG9zaXRpb24xOiBuZXcgQ2FydGVzaWFuMigpLFxuICBwb3NpdGlvbjI6IG5ldyBDYXJ0ZXNpYW4yKCksXG59O1xudmFyIHRvdWNoRW5kRXZlbnQgPSB7XG4gIHBvc2l0aW9uOiBuZXcgQ2FydGVzaWFuMigpLFxufTtcbnZhciB0b3VjaENsaWNrRXZlbnQgPSB7XG4gIHBvc2l0aW9uOiBuZXcgQ2FydGVzaWFuMigpLFxufTtcbnZhciB0b3VjaEhvbGRFdmVudCA9IHtcbiAgcG9zaXRpb246IG5ldyBDYXJ0ZXNpYW4yKCksXG59O1xuXG5mdW5jdGlvbiBmaXJlVG91Y2hFdmVudHMoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50KSB7XG4gIHZhciBtb2RpZmllciA9IGdldE1vZGlmaWVyKGV2ZW50KTtcbiAgdmFyIHBvc2l0aW9ucyA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wb3NpdGlvbnM7XG4gIHZhciBudW1iZXJPZlRvdWNoZXMgPSBwb3NpdGlvbnMubGVuZ3RoO1xuICB2YXIgYWN0aW9uO1xuICB2YXIgY2xpY2tBY3Rpb247XG4gIHZhciBwaW5jaGluZyA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9pc1BpbmNoaW5nO1xuXG4gIGlmIChcbiAgICBudW1iZXJPZlRvdWNoZXMgIT09IDEgJiZcbiAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fYnV0dG9uRG93bltNb3VzZUJ1dHRvbi5MRUZUXVxuICApIHtcbiAgICAvLyB0cmFuc2l0aW9uaW5nIGZyb20gc2luZ2xlIHRvdWNoLCB0cmlnZ2VyIFVQIGFuZCBtaWdodCB0cmlnZ2VyIENMSUNLXG4gICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX2J1dHRvbkRvd25bTW91c2VCdXR0b24uTEVGVF0gPSBmYWxzZTtcblxuICAgIGlmIChkZWZpbmVkKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl90b3VjaEhvbGRUaW1lcikpIHtcbiAgICAgIGNsZWFyVGltZW91dChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fdG91Y2hIb2xkVGltZXIpO1xuICAgICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3RvdWNoSG9sZFRpbWVyID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGFjdGlvbiA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLmdldElucHV0QWN0aW9uKFxuICAgICAgU2NyZWVuU3BhY2VFdmVudFR5cGUuTEVGVF9VUCxcbiAgICAgIG1vZGlmaWVyXG4gICAgKTtcblxuICAgIGlmIChkZWZpbmVkKGFjdGlvbikpIHtcbiAgICAgIENhcnRlc2lhbjIuY2xvbmUoXG4gICAgICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmltYXJ5UG9zaXRpb24sXG4gICAgICAgIHRvdWNoRW5kRXZlbnQucG9zaXRpb25cbiAgICAgICk7XG5cbiAgICAgIGFjdGlvbih0b3VjaEVuZEV2ZW50KTtcbiAgICB9XG5cbiAgICBpZiAobnVtYmVyT2ZUb3VjaGVzID09PSAwICYmICFzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5faXNUb3VjaEhvbGRpbmcpIHtcbiAgICAgIC8vIHJlbGVhc2luZyBzaW5nbGUgdG91Y2gsIGNoZWNrIGZvciBDTElDS1xuICAgICAgY2xpY2tBY3Rpb24gPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5nZXRJbnB1dEFjdGlvbihcbiAgICAgICAgU2NyZWVuU3BhY2VFdmVudFR5cGUuTEVGVF9DTElDSyxcbiAgICAgICAgbW9kaWZpZXJcbiAgICAgICk7XG5cbiAgICAgIGlmIChkZWZpbmVkKGNsaWNrQWN0aW9uKSkge1xuICAgICAgICB2YXIgc3RhcnRQb3NpdGlvbiA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmltYXJ5U3RhcnRQb3NpdGlvbjtcbiAgICAgICAgdmFyIGVuZFBvc2l0aW9uID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3ByZXZpb3VzUG9zaXRpb25zLnZhbHVlc1swXTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGNoZWNrUGl4ZWxUb2xlcmFuY2UoXG4gICAgICAgICAgICBzdGFydFBvc2l0aW9uLFxuICAgICAgICAgICAgZW5kUG9zaXRpb24sXG4gICAgICAgICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fY2xpY2tQaXhlbFRvbGVyYW5jZVxuICAgICAgICAgIClcbiAgICAgICAgKSB7XG4gICAgICAgICAgQ2FydGVzaWFuMi5jbG9uZShcbiAgICAgICAgICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmltYXJ5UG9zaXRpb24sXG4gICAgICAgICAgICB0b3VjaENsaWNrRXZlbnQucG9zaXRpb25cbiAgICAgICAgICApO1xuXG4gICAgICAgICAgY2xpY2tBY3Rpb24odG91Y2hDbGlja0V2ZW50KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9pc1RvdWNoSG9sZGluZyA9IGZhbHNlO1xuXG4gICAgLy8gT3RoZXJ3aXNlIGRvbid0IHRyaWdnZXIgQ0xJQ0ssIGJlY2F1c2Ugd2UgYXJlIGFkZGluZyBtb3JlIHRvdWNoZXMuXG4gIH1cblxuICBpZiAobnVtYmVyT2ZUb3VjaGVzID09PSAwICYmIHBpbmNoaW5nKSB7XG4gICAgLy8gdHJhbnNpdGlvbmluZyBmcm9tIHBpbmNoLCB0cmlnZ2VyIFBJTkNIX0VORFxuICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9pc1BpbmNoaW5nID0gZmFsc2U7XG5cbiAgICBhY3Rpb24gPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5nZXRJbnB1dEFjdGlvbihcbiAgICAgIFNjcmVlblNwYWNlRXZlbnRUeXBlLlBJTkNIX0VORCxcbiAgICAgIG1vZGlmaWVyXG4gICAgKTtcblxuICAgIGlmIChkZWZpbmVkKGFjdGlvbikpIHtcbiAgICAgIGFjdGlvbigpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChudW1iZXJPZlRvdWNoZXMgPT09IDEgJiYgIXBpbmNoaW5nKSB7XG4gICAgLy8gdHJhbnNpdGlvbmluZyB0byBzaW5nbGUgdG91Y2gsIHRyaWdnZXIgRE9XTlxuICAgIHZhciBwb3NpdGlvbiA9IHBvc2l0aW9ucy52YWx1ZXNbMF07XG4gICAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbiwgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3ByaW1hcnlQb3NpdGlvbik7XG4gICAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbiwgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3ByaW1hcnlTdGFydFBvc2l0aW9uKTtcbiAgICBDYXJ0ZXNpYW4yLmNsb25lKFxuICAgICAgcG9zaXRpb24sXG4gICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcHJpbWFyeVByZXZpb3VzUG9zaXRpb25cbiAgICApO1xuXG4gICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX2J1dHRvbkRvd25bTW91c2VCdXR0b24uTEVGVF0gPSB0cnVlO1xuXG4gICAgYWN0aW9uID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuZ2V0SW5wdXRBY3Rpb24oXG4gICAgICBTY3JlZW5TcGFjZUV2ZW50VHlwZS5MRUZUX0RPV04sXG4gICAgICBtb2RpZmllclxuICAgICk7XG5cbiAgICBpZiAoZGVmaW5lZChhY3Rpb24pKSB7XG4gICAgICBDYXJ0ZXNpYW4yLmNsb25lKHBvc2l0aW9uLCB0b3VjaFN0YXJ0RXZlbnQucG9zaXRpb24pO1xuXG4gICAgICBhY3Rpb24odG91Y2hTdGFydEV2ZW50KTtcbiAgICB9XG5cbiAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fdG91Y2hIb2xkVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuaXNEZXN0cm95ZWQoKSkge1xuICAgICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fdG91Y2hIb2xkVGltZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9pc1RvdWNoSG9sZGluZyA9IHRydWU7XG5cbiAgICAgICAgY2xpY2tBY3Rpb24gPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5nZXRJbnB1dEFjdGlvbihcbiAgICAgICAgICBTY3JlZW5TcGFjZUV2ZW50VHlwZS5SSUdIVF9DTElDSyxcbiAgICAgICAgICBtb2RpZmllclxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChkZWZpbmVkKGNsaWNrQWN0aW9uKSkge1xuICAgICAgICAgIHZhciBzdGFydFBvc2l0aW9uID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3ByaW1hcnlTdGFydFBvc2l0aW9uO1xuICAgICAgICAgIHZhciBlbmRQb3NpdGlvbiA9XG4gICAgICAgICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcHJldmlvdXNQb3NpdGlvbnMudmFsdWVzWzBdO1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIGNoZWNrUGl4ZWxUb2xlcmFuY2UoXG4gICAgICAgICAgICAgIHN0YXJ0UG9zaXRpb24sXG4gICAgICAgICAgICAgIGVuZFBvc2l0aW9uLFxuICAgICAgICAgICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5faG9sZFBpeGVsVG9sZXJhbmNlXG4gICAgICAgICAgICApXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICBDYXJ0ZXNpYW4yLmNsb25lKFxuICAgICAgICAgICAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcHJpbWFyeVBvc2l0aW9uLFxuICAgICAgICAgICAgICB0b3VjaEhvbGRFdmVudC5wb3NpdGlvblxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY2xpY2tBY3Rpb24odG91Y2hIb2xkRXZlbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIFNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLnRvdWNoSG9sZERlbGF5TWlsbGlzZWNvbmRzKTtcblxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH1cblxuICBpZiAobnVtYmVyT2ZUb3VjaGVzID09PSAyICYmICFwaW5jaGluZykge1xuICAgIC8vIHRyYW5zaXRpb25pbmcgdG8gcGluY2gsIHRyaWdnZXIgUElOQ0hfU1RBUlRcbiAgICBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5faXNQaW5jaGluZyA9IHRydWU7XG5cbiAgICBhY3Rpb24gPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5nZXRJbnB1dEFjdGlvbihcbiAgICAgIFNjcmVlblNwYWNlRXZlbnRUeXBlLlBJTkNIX1NUQVJULFxuICAgICAgbW9kaWZpZXJcbiAgICApO1xuXG4gICAgaWYgKGRlZmluZWQoYWN0aW9uKSkge1xuICAgICAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbnMudmFsdWVzWzBdLCB0b3VjaDJTdGFydEV2ZW50LnBvc2l0aW9uMSk7XG4gICAgICBDYXJ0ZXNpYW4yLmNsb25lKHBvc2l0aW9ucy52YWx1ZXNbMV0sIHRvdWNoMlN0YXJ0RXZlbnQucG9zaXRpb24yKTtcblxuICAgICAgYWN0aW9uKHRvdWNoMlN0YXJ0RXZlbnQpO1xuXG4gICAgICAvLyBUb3VjaC1lbmFibGVkIGRldmljZXMsIGluIHBhcnRpY3VsYXIgaU9TIGNhbiBoYXZlIG1hbnkgZGVmYXVsdCBiZWhhdmlvdXJzIGZvclxuICAgICAgLy8gXCJwaW5jaFwiIGV2ZW50cywgd2hpY2ggY2FuIHN0aWxsIGJlIGV4ZWN1dGVkIHVubGVzcyB3ZSBwcmV2ZW50IHRoZW0gaGVyZS5cbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVRvdWNoTW92ZShzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpIHtcbiAgZ290VG91Y2hFdmVudChzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcik7XG5cbiAgdmFyIGNoYW5nZWRUb3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXM7XG5cbiAgdmFyIGk7XG4gIHZhciBsZW5ndGggPSBjaGFuZ2VkVG91Y2hlcy5sZW5ndGg7XG4gIHZhciB0b3VjaDtcbiAgdmFyIGlkZW50aWZpZXI7XG4gIHZhciBwb3NpdGlvbnMgPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcG9zaXRpb25zO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHRvdWNoID0gY2hhbmdlZFRvdWNoZXNbaV07XG4gICAgaWRlbnRpZmllciA9IHRvdWNoLmlkZW50aWZpZXI7XG4gICAgdmFyIHBvc2l0aW9uID0gcG9zaXRpb25zLmdldChpZGVudGlmaWVyKTtcbiAgICBpZiAoZGVmaW5lZChwb3NpdGlvbikpIHtcbiAgICAgIGdldFBvc2l0aW9uKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLCB0b3VjaCwgcG9zaXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZpcmVUb3VjaE1vdmVFdmVudHMoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50KTtcblxuICB2YXIgcHJldmlvdXNQb3NpdGlvbnMgPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcHJldmlvdXNQb3NpdGlvbnM7XG5cbiAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgdG91Y2ggPSBjaGFuZ2VkVG91Y2hlc1tpXTtcbiAgICBpZGVudGlmaWVyID0gdG91Y2guaWRlbnRpZmllcjtcbiAgICBDYXJ0ZXNpYW4yLmNsb25lKFxuICAgICAgcG9zaXRpb25zLmdldChpZGVudGlmaWVyKSxcbiAgICAgIHByZXZpb3VzUG9zaXRpb25zLmdldChpZGVudGlmaWVyKVxuICAgICk7XG4gIH1cbn1cblxudmFyIHRvdWNoTW92ZUV2ZW50ID0ge1xuICBzdGFydFBvc2l0aW9uOiBuZXcgQ2FydGVzaWFuMigpLFxuICBlbmRQb3NpdGlvbjogbmV3IENhcnRlc2lhbjIoKSxcbn07XG52YXIgdG91Y2hQaW5jaE1vdmVtZW50RXZlbnQgPSB7XG4gIGRpc3RhbmNlOiB7XG4gICAgc3RhcnRQb3NpdGlvbjogbmV3IENhcnRlc2lhbjIoKSxcbiAgICBlbmRQb3NpdGlvbjogbmV3IENhcnRlc2lhbjIoKSxcbiAgfSxcbiAgYW5nbGVBbmRIZWlnaHQ6IHtcbiAgICBzdGFydFBvc2l0aW9uOiBuZXcgQ2FydGVzaWFuMigpLFxuICAgIGVuZFBvc2l0aW9uOiBuZXcgQ2FydGVzaWFuMigpLFxuICB9LFxufTtcblxuZnVuY3Rpb24gZmlyZVRvdWNoTW92ZUV2ZW50cyhzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpIHtcbiAgdmFyIG1vZGlmaWVyID0gZ2V0TW9kaWZpZXIoZXZlbnQpO1xuICB2YXIgcG9zaXRpb25zID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3Bvc2l0aW9ucztcbiAgdmFyIHByZXZpb3VzUG9zaXRpb25zID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3ByZXZpb3VzUG9zaXRpb25zO1xuICB2YXIgbnVtYmVyT2ZUb3VjaGVzID0gcG9zaXRpb25zLmxlbmd0aDtcbiAgdmFyIGFjdGlvbjtcblxuICBpZiAoXG4gICAgbnVtYmVyT2ZUb3VjaGVzID09PSAxICYmXG4gICAgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX2J1dHRvbkRvd25bTW91c2VCdXR0b24uTEVGVF1cbiAgKSB7XG4gICAgLy8gbW92aW5nIHNpbmdsZSB0b3VjaFxuICAgIHZhciBwb3NpdGlvbiA9IHBvc2l0aW9ucy52YWx1ZXNbMF07XG4gICAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbiwgc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3ByaW1hcnlQb3NpdGlvbik7XG5cbiAgICB2YXIgcHJldmlvdXNQb3NpdGlvbiA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmltYXJ5UHJldmlvdXNQb3NpdGlvbjtcblxuICAgIGFjdGlvbiA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLmdldElucHV0QWN0aW9uKFxuICAgICAgU2NyZWVuU3BhY2VFdmVudFR5cGUuTU9VU0VfTU9WRSxcbiAgICAgIG1vZGlmaWVyXG4gICAgKTtcblxuICAgIGlmIChkZWZpbmVkKGFjdGlvbikpIHtcbiAgICAgIENhcnRlc2lhbjIuY2xvbmUocHJldmlvdXNQb3NpdGlvbiwgdG91Y2hNb3ZlRXZlbnQuc3RhcnRQb3NpdGlvbik7XG4gICAgICBDYXJ0ZXNpYW4yLmNsb25lKHBvc2l0aW9uLCB0b3VjaE1vdmVFdmVudC5lbmRQb3NpdGlvbik7XG5cbiAgICAgIGFjdGlvbih0b3VjaE1vdmVFdmVudCk7XG4gICAgfVxuXG4gICAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbiwgcHJldmlvdXNQb3NpdGlvbik7XG5cbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICB9IGVsc2UgaWYgKG51bWJlck9mVG91Y2hlcyA9PT0gMiAmJiBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5faXNQaW5jaGluZykge1xuICAgIC8vIG1vdmluZyBwaW5jaFxuXG4gICAgYWN0aW9uID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuZ2V0SW5wdXRBY3Rpb24oXG4gICAgICBTY3JlZW5TcGFjZUV2ZW50VHlwZS5QSU5DSF9NT1ZFLFxuICAgICAgbW9kaWZpZXJcbiAgICApO1xuICAgIGlmIChkZWZpbmVkKGFjdGlvbikpIHtcbiAgICAgIHZhciBwb3NpdGlvbjEgPSBwb3NpdGlvbnMudmFsdWVzWzBdO1xuICAgICAgdmFyIHBvc2l0aW9uMiA9IHBvc2l0aW9ucy52YWx1ZXNbMV07XG4gICAgICB2YXIgcHJldmlvdXNQb3NpdGlvbjEgPSBwcmV2aW91c1Bvc2l0aW9ucy52YWx1ZXNbMF07XG4gICAgICB2YXIgcHJldmlvdXNQb3NpdGlvbjIgPSBwcmV2aW91c1Bvc2l0aW9ucy52YWx1ZXNbMV07XG5cbiAgICAgIHZhciBkWCA9IHBvc2l0aW9uMi54IC0gcG9zaXRpb24xLng7XG4gICAgICB2YXIgZFkgPSBwb3NpdGlvbjIueSAtIHBvc2l0aW9uMS55O1xuICAgICAgdmFyIGRpc3QgPSBNYXRoLnNxcnQoZFggKiBkWCArIGRZICogZFkpICogMC4yNTtcblxuICAgICAgdmFyIHByZXZEWCA9IHByZXZpb3VzUG9zaXRpb24yLnggLSBwcmV2aW91c1Bvc2l0aW9uMS54O1xuICAgICAgdmFyIHByZXZEWSA9IHByZXZpb3VzUG9zaXRpb24yLnkgLSBwcmV2aW91c1Bvc2l0aW9uMS55O1xuICAgICAgdmFyIHByZXZEaXN0ID0gTWF0aC5zcXJ0KHByZXZEWCAqIHByZXZEWCArIHByZXZEWSAqIHByZXZEWSkgKiAwLjI1O1xuXG4gICAgICB2YXIgY1kgPSAocG9zaXRpb24yLnkgKyBwb3NpdGlvbjEueSkgKiAwLjEyNTtcbiAgICAgIHZhciBwcmV2Q1kgPSAocHJldmlvdXNQb3NpdGlvbjIueSArIHByZXZpb3VzUG9zaXRpb24xLnkpICogMC4xMjU7XG4gICAgICB2YXIgYW5nbGUgPSBNYXRoLmF0YW4yKGRZLCBkWCk7XG4gICAgICB2YXIgcHJldkFuZ2xlID0gTWF0aC5hdGFuMihwcmV2RFksIHByZXZEWCk7XG5cbiAgICAgIENhcnRlc2lhbjIuZnJvbUVsZW1lbnRzKFxuICAgICAgICAwLjAsXG4gICAgICAgIHByZXZEaXN0LFxuICAgICAgICB0b3VjaFBpbmNoTW92ZW1lbnRFdmVudC5kaXN0YW5jZS5zdGFydFBvc2l0aW9uXG4gICAgICApO1xuICAgICAgQ2FydGVzaWFuMi5mcm9tRWxlbWVudHMoXG4gICAgICAgIDAuMCxcbiAgICAgICAgZGlzdCxcbiAgICAgICAgdG91Y2hQaW5jaE1vdmVtZW50RXZlbnQuZGlzdGFuY2UuZW5kUG9zaXRpb25cbiAgICAgICk7XG5cbiAgICAgIENhcnRlc2lhbjIuZnJvbUVsZW1lbnRzKFxuICAgICAgICBwcmV2QW5nbGUsXG4gICAgICAgIHByZXZDWSxcbiAgICAgICAgdG91Y2hQaW5jaE1vdmVtZW50RXZlbnQuYW5nbGVBbmRIZWlnaHQuc3RhcnRQb3NpdGlvblxuICAgICAgKTtcbiAgICAgIENhcnRlc2lhbjIuZnJvbUVsZW1lbnRzKFxuICAgICAgICBhbmdsZSxcbiAgICAgICAgY1ksXG4gICAgICAgIHRvdWNoUGluY2hNb3ZlbWVudEV2ZW50LmFuZ2xlQW5kSGVpZ2h0LmVuZFBvc2l0aW9uXG4gICAgICApO1xuXG4gICAgICBhY3Rpb24odG91Y2hQaW5jaE1vdmVtZW50RXZlbnQpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVQb2ludGVyRG93bihzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpIHtcbiAgZXZlbnQudGFyZ2V0LnNldFBvaW50ZXJDYXB0dXJlKGV2ZW50LnBvaW50ZXJJZCk7XG5cbiAgaWYgKGV2ZW50LnBvaW50ZXJUeXBlID09PSBcInRvdWNoXCIpIHtcbiAgICB2YXIgcG9zaXRpb25zID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3Bvc2l0aW9ucztcblxuICAgIHZhciBpZGVudGlmaWVyID0gZXZlbnQucG9pbnRlcklkO1xuICAgIHBvc2l0aW9ucy5zZXQoXG4gICAgICBpZGVudGlmaWVyLFxuICAgICAgZ2V0UG9zaXRpb24oc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50LCBuZXcgQ2FydGVzaWFuMigpKVxuICAgICk7XG5cbiAgICBmaXJlVG91Y2hFdmVudHMoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50KTtcblxuICAgIHZhciBwcmV2aW91c1Bvc2l0aW9ucyA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wcmV2aW91c1Bvc2l0aW9ucztcbiAgICBwcmV2aW91c1Bvc2l0aW9ucy5zZXQoXG4gICAgICBpZGVudGlmaWVyLFxuICAgICAgQ2FydGVzaWFuMi5jbG9uZShwb3NpdGlvbnMuZ2V0KGlkZW50aWZpZXIpKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgaGFuZGxlTW91c2VEb3duKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLCBldmVudCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlUG9pbnRlclVwKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLCBldmVudCkge1xuICBpZiAoZXZlbnQucG9pbnRlclR5cGUgPT09IFwidG91Y2hcIikge1xuICAgIHZhciBwb3NpdGlvbnMgPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcG9zaXRpb25zO1xuXG4gICAgdmFyIGlkZW50aWZpZXIgPSBldmVudC5wb2ludGVySWQ7XG4gICAgcG9zaXRpb25zLnJlbW92ZShpZGVudGlmaWVyKTtcblxuICAgIGZpcmVUb3VjaEV2ZW50cyhzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpO1xuXG4gICAgdmFyIHByZXZpb3VzUG9zaXRpb25zID0gc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuX3ByZXZpb3VzUG9zaXRpb25zO1xuICAgIHByZXZpb3VzUG9zaXRpb25zLnJlbW92ZShpZGVudGlmaWVyKTtcbiAgfSBlbHNlIHtcbiAgICBoYW5kbGVNb3VzZVVwKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLCBldmVudCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlUG9pbnRlck1vdmUoc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIsIGV2ZW50KSB7XG4gIGlmIChldmVudC5wb2ludGVyVHlwZSA9PT0gXCJ0b3VjaFwiKSB7XG4gICAgdmFyIHBvc2l0aW9ucyA9IHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLl9wb3NpdGlvbnM7XG5cbiAgICB2YXIgaWRlbnRpZmllciA9IGV2ZW50LnBvaW50ZXJJZDtcbiAgICB2YXIgcG9zaXRpb24gPSBwb3NpdGlvbnMuZ2V0KGlkZW50aWZpZXIpO1xuICAgIGlmICghZGVmaW5lZChwb3NpdGlvbikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBnZXRQb3NpdGlvbihzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQsIHBvc2l0aW9uKTtcbiAgICBmaXJlVG91Y2hNb3ZlRXZlbnRzKHNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLCBldmVudCk7XG5cbiAgICB2YXIgcHJldmlvdXNQb3NpdGlvbnMgPSBzY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5fcHJldmlvdXNQb3NpdGlvbnM7XG4gICAgQ2FydGVzaWFuMi5jbG9uZShcbiAgICAgIHBvc2l0aW9ucy5nZXQoaWRlbnRpZmllciksXG4gICAgICBwcmV2aW91c1Bvc2l0aW9ucy5nZXQoaWRlbnRpZmllcilcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIGhhbmRsZU1vdXNlTW92ZShzY3JlZW5TcGFjZUV2ZW50SGFuZGxlciwgZXZlbnQpO1xuICB9XG59XG5cbi8qKlxuICogSGFuZGxlcyB1c2VyIGlucHV0IGV2ZW50cy4gQ3VzdG9tIGZ1bmN0aW9ucyBjYW4gYmUgYWRkZWQgdG8gYmUgZXhlY3V0ZWQgb25cbiAqIHdoZW4gdGhlIHVzZXIgZW50ZXJzIGlucHV0LlxuICpcbiAqIEBhbGlhcyBTY3JlZW5TcGFjZUV2ZW50SGFuZGxlclxuICpcbiAqIEBwYXJhbSB7SFRNTENhbnZhc0VsZW1lbnR9IFtlbGVtZW50PWRvY3VtZW50XSBUaGUgZWxlbWVudCB0byBhZGQgZXZlbnRzIHRvLlxuICpcbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBTY3JlZW5TcGFjZUV2ZW50SGFuZGxlcihlbGVtZW50KSB7XG4gIHRoaXMuX2lucHV0RXZlbnRzID0ge307XG4gIHRoaXMuX2J1dHRvbkRvd24gPSB7XG4gICAgTEVGVDogZmFsc2UsXG4gICAgTUlERExFOiBmYWxzZSxcbiAgICBSSUdIVDogZmFsc2UsXG4gIH07XG4gIHRoaXMuX2lzUGluY2hpbmcgPSBmYWxzZTtcbiAgdGhpcy5faXNUb3VjaEhvbGRpbmcgPSBmYWxzZTtcbiAgdGhpcy5fbGFzdFNlZW5Ub3VjaEV2ZW50ID0gLVNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLm1vdXNlRW11bGF0aW9uSWdub3JlTWlsbGlzZWNvbmRzO1xuXG4gIHRoaXMuX3ByaW1hcnlTdGFydFBvc2l0aW9uID0gbmV3IENhcnRlc2lhbjIoKTtcbiAgdGhpcy5fcHJpbWFyeVBvc2l0aW9uID0gbmV3IENhcnRlc2lhbjIoKTtcbiAgdGhpcy5fcHJpbWFyeVByZXZpb3VzUG9zaXRpb24gPSBuZXcgQ2FydGVzaWFuMigpO1xuXG4gIHRoaXMuX3Bvc2l0aW9ucyA9IG5ldyBBc3NvY2lhdGl2ZUFycmF5KCk7XG4gIHRoaXMuX3ByZXZpb3VzUG9zaXRpb25zID0gbmV3IEFzc29jaWF0aXZlQXJyYXkoKTtcblxuICB0aGlzLl9yZW1vdmFsRnVuY3Rpb25zID0gW107XG5cbiAgdGhpcy5fdG91Y2hIb2xkVGltZXIgPSB1bmRlZmluZWQ7XG5cbiAgLy8gVE9ETzogUmV2aXNpdCB3aGVuIGRvaW5nIG1vYmlsZSBkZXZlbG9wbWVudC4gTWF5IG5lZWQgdG8gYmUgY29uZmlndXJhYmxlXG4gIC8vIG9yIGRldGVybWluZWQgYmFzZWQgb24gdGhlIHBsYXRmb3JtP1xuICB0aGlzLl9jbGlja1BpeGVsVG9sZXJhbmNlID0gNTtcbiAgdGhpcy5faG9sZFBpeGVsVG9sZXJhbmNlID0gMjU7XG5cbiAgdGhpcy5fZWxlbWVudCA9IGRlZmF1bHRWYWx1ZShlbGVtZW50LCBkb2N1bWVudCk7XG5cbiAgcmVnaXN0ZXJMaXN0ZW5lcnModGhpcyk7XG59XG5cbi8qKlxuICogU2V0IGEgZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgb24gYW4gaW5wdXQgZXZlbnQuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gYWN0aW9uIEZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIHdoZW4gdGhlIGlucHV0IGV2ZW50IG9jY3Vycy5cbiAqIEBwYXJhbSB7TnVtYmVyfSB0eXBlIFRoZSBTY3JlZW5TcGFjZUV2ZW50VHlwZSBvZiBpbnB1dCBldmVudC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbbW9kaWZpZXJdIEEgS2V5Ym9hcmRFdmVudE1vZGlmaWVyIGtleSB0aGF0IGlzIGhlbGQgd2hlbiBhIDxjb2RlPnR5cGU8L2NvZGU+XG4gKiBldmVudCBvY2N1cnMuXG4gKlxuICogQHNlZSBTY3JlZW5TcGFjZUV2ZW50SGFuZGxlciNnZXRJbnB1dEFjdGlvblxuICogQHNlZSBTY3JlZW5TcGFjZUV2ZW50SGFuZGxlciNyZW1vdmVJbnB1dEFjdGlvblxuICovXG5TY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5wcm90b3R5cGUuc2V0SW5wdXRBY3Rpb24gPSBmdW5jdGlvbiAoXG4gIGFjdGlvbixcbiAgdHlwZSxcbiAgbW9kaWZpZXJcbikge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIWRlZmluZWQoYWN0aW9uKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImFjdGlvbiBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgaWYgKCFkZWZpbmVkKHR5cGUpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwidHlwZSBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIGtleSA9IGdldElucHV0RXZlbnRLZXkodHlwZSwgbW9kaWZpZXIpO1xuICB0aGlzLl9pbnB1dEV2ZW50c1trZXldID0gYWN0aW9uO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZCBvbiBhbiBpbnB1dCBldmVudC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gdHlwZSBUaGUgU2NyZWVuU3BhY2VFdmVudFR5cGUgb2YgaW5wdXQgZXZlbnQuXG4gKiBAcGFyYW0ge051bWJlcn0gW21vZGlmaWVyXSBBIEtleWJvYXJkRXZlbnRNb2RpZmllciBrZXkgdGhhdCBpcyBoZWxkIHdoZW4gYSA8Y29kZT50eXBlPC9jb2RlPlxuICogZXZlbnQgb2NjdXJzLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gVGhlIGZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIG9uIGFuIGlucHV0IGV2ZW50LlxuICpcbiAqIEBzZWUgU2NyZWVuU3BhY2VFdmVudEhhbmRsZXIjc2V0SW5wdXRBY3Rpb25cbiAqIEBzZWUgU2NyZWVuU3BhY2VFdmVudEhhbmRsZXIjcmVtb3ZlSW5wdXRBY3Rpb25cbiAqL1xuU2NyZWVuU3BhY2VFdmVudEhhbmRsZXIucHJvdG90eXBlLmdldElucHV0QWN0aW9uID0gZnVuY3Rpb24gKHR5cGUsIG1vZGlmaWVyKSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICghZGVmaW5lZCh0eXBlKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcInR5cGUgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBrZXkgPSBnZXRJbnB1dEV2ZW50S2V5KHR5cGUsIG1vZGlmaWVyKTtcbiAgcmV0dXJuIHRoaXMuX2lucHV0RXZlbnRzW2tleV07XG59O1xuXG4vKipcbiAqIFJlbW92ZXMgdGhlIGZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIG9uIGFuIGlucHV0IGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSB0eXBlIFRoZSBTY3JlZW5TcGFjZUV2ZW50VHlwZSBvZiBpbnB1dCBldmVudC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbbW9kaWZpZXJdIEEgS2V5Ym9hcmRFdmVudE1vZGlmaWVyIGtleSB0aGF0IGlzIGhlbGQgd2hlbiBhIDxjb2RlPnR5cGU8L2NvZGU+XG4gKiBldmVudCBvY2N1cnMuXG4gKlxuICogQHNlZSBTY3JlZW5TcGFjZUV2ZW50SGFuZGxlciNnZXRJbnB1dEFjdGlvblxuICogQHNlZSBTY3JlZW5TcGFjZUV2ZW50SGFuZGxlciNzZXRJbnB1dEFjdGlvblxuICovXG5TY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5wcm90b3R5cGUucmVtb3ZlSW5wdXRBY3Rpb24gPSBmdW5jdGlvbiAoXG4gIHR5cGUsXG4gIG1vZGlmaWVyXG4pIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKHR5cGUpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwidHlwZSBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIGtleSA9IGdldElucHV0RXZlbnRLZXkodHlwZSwgbW9kaWZpZXIpO1xuICBkZWxldGUgdGhpcy5faW5wdXRFdmVudHNba2V5XTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQ7IG90aGVyd2lzZSwgZmFsc2UuXG4gKiA8YnIgLz48YnIgLz5cbiAqIElmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQsIGl0IHNob3VsZCBub3QgYmUgdXNlZDsgY2FsbGluZyBhbnkgZnVuY3Rpb24gb3RoZXIgdGhhblxuICogPGNvZGU+aXNEZXN0cm95ZWQ8L2NvZGU+IHdpbGwgcmVzdWx0IGluIGEge0BsaW5rIERldmVsb3BlckVycm9yfSBleGNlcHRpb24uXG4gKlxuICogQHJldHVybnMge0Jvb2xlYW59IDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQ7IG90aGVyd2lzZSwgPGNvZGU+ZmFsc2U8L2NvZGU+LlxuICpcbiAqIEBzZWUgU2NyZWVuU3BhY2VFdmVudEhhbmRsZXIjZGVzdHJveVxuICovXG5TY3JlZW5TcGFjZUV2ZW50SGFuZGxlci5wcm90b3R5cGUuaXNEZXN0cm95ZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8qKlxuICogUmVtb3ZlcyBsaXN0ZW5lcnMgaGVsZCBieSB0aGlzIG9iamVjdC5cbiAqIDxiciAvPjxiciAvPlxuICogT25jZSBhbiBvYmplY3QgaXMgZGVzdHJveWVkLCBpdCBzaG91bGQgbm90IGJlIHVzZWQ7IGNhbGxpbmcgYW55IGZ1bmN0aW9uIG90aGVyIHRoYW5cbiAqIDxjb2RlPmlzRGVzdHJveWVkPC9jb2RlPiB3aWxsIHJlc3VsdCBpbiBhIHtAbGluayBEZXZlbG9wZXJFcnJvcn0gZXhjZXB0aW9uLiAgVGhlcmVmb3JlLFxuICogYXNzaWduIHRoZSByZXR1cm4gdmFsdWUgKDxjb2RlPnVuZGVmaW5lZDwvY29kZT4pIHRvIHRoZSBvYmplY3QgYXMgZG9uZSBpbiB0aGUgZXhhbXBsZS5cbiAqXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gVGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZCwgaS5lLiwgZGVzdHJveSgpIHdhcyBjYWxsZWQuXG4gKlxuICpcbiAqIEBleGFtcGxlXG4gKiBoYW5kbGVyID0gaGFuZGxlciAmJiBoYW5kbGVyLmRlc3Ryb3koKTtcbiAqXG4gKiBAc2VlIFNjcmVlblNwYWNlRXZlbnRIYW5kbGVyI2lzRGVzdHJveWVkXG4gKi9cblNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICB1bnJlZ2lzdGVyTGlzdGVuZXJzKHRoaXMpO1xuXG4gIHJldHVybiBkZXN0cm95T2JqZWN0KHRoaXMpO1xufTtcblxuLyoqXG4gKiBUaGUgYW1vdW50IG9mIHRpbWUsIGluIG1pbGxpc2Vjb25kcywgdGhhdCBtb3VzZSBldmVudHMgd2lsbCBiZSBkaXNhYmxlZCBhZnRlclxuICogcmVjZWl2aW5nIGFueSB0b3VjaCBldmVudHMsIHN1Y2ggdGhhdCBhbnkgZW11bGF0ZWQgbW91c2UgZXZlbnRzIHdpbGwgYmUgaWdub3JlZC5cbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKiBAZGVmYXVsdCA4MDBcbiAqL1xuU2NyZWVuU3BhY2VFdmVudEhhbmRsZXIubW91c2VFbXVsYXRpb25JZ25vcmVNaWxsaXNlY29uZHMgPSA4MDA7XG5cbi8qKlxuICogVGhlIGFtb3VudCBvZiB0aW1lLCBpbiBtaWxsaXNlY29uZHMsIGJlZm9yZSBhIHRvdWNoIG9uIHRoZSBzY3JlZW4gYmVjb21lcyBhXG4gKiB0b3VjaCBhbmQgaG9sZC5cbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKiBAZGVmYXVsdCAxNTAwXG4gKi9cblNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLnRvdWNoSG9sZERlbGF5TWlsbGlzZWNvbmRzID0gMTUwMDtcbmV4cG9ydCBkZWZhdWx0IFNjcmVlblNwYWNlRXZlbnRIYW5kbGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20406\n')},35452:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * This enumerated type is for classifying mouse events: down, up, click, double click, move and move while a button is held down.\n *\n * @enum {Number}\n */\nvar ScreenSpaceEventType = {\n  /**\n   * Represents a mouse left button down event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LEFT_DOWN: 0,\n\n  /**\n   * Represents a mouse left button up event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LEFT_UP: 1,\n\n  /**\n   * Represents a mouse left click event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LEFT_CLICK: 2,\n\n  /**\n   * Represents a mouse left double click event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LEFT_DOUBLE_CLICK: 3,\n\n  /**\n   * Represents a mouse left button down event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  RIGHT_DOWN: 5,\n\n  /**\n   * Represents a mouse right button up event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  RIGHT_UP: 6,\n\n  /**\n   * Represents a mouse right click event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  RIGHT_CLICK: 7,\n\n  /**\n   * Represents a mouse middle button down event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MIDDLE_DOWN: 10,\n\n  /**\n   * Represents a mouse middle button up event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MIDDLE_UP: 11,\n\n  /**\n   * Represents a mouse middle click event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MIDDLE_CLICK: 12,\n\n  /**\n   * Represents a mouse move event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MOUSE_MOVE: 15,\n\n  /**\n   * Represents a mouse wheel event.\n   *\n   * @type {Number}\n   * @constant\n   */\n  WHEEL: 16,\n\n  /**\n   * Represents the start of a two-finger event on a touch surface.\n   *\n   * @type {Number}\n   * @constant\n   */\n  PINCH_START: 17,\n\n  /**\n   * Represents the end of a two-finger event on a touch surface.\n   *\n   * @type {Number}\n   * @constant\n   */\n  PINCH_END: 18,\n\n  /**\n   * Represents a change of a two-finger event on a touch surface.\n   *\n   * @type {Number}\n   * @constant\n   */\n  PINCH_MOVE: 19,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(ScreenSpaceEventType));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0NTIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsbUNBQW1DLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9TY3JlZW5TcGFjZUV2ZW50VHlwZS5qcz9hMzM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBlbnVtZXJhdGVkIHR5cGUgaXMgZm9yIGNsYXNzaWZ5aW5nIG1vdXNlIGV2ZW50czogZG93biwgdXAsIGNsaWNrLCBkb3VibGUgY2xpY2ssIG1vdmUgYW5kIG1vdmUgd2hpbGUgYSBidXR0b24gaXMgaGVsZCBkb3duLlxuICpcbiAqIEBlbnVtIHtOdW1iZXJ9XG4gKi9cbnZhciBTY3JlZW5TcGFjZUV2ZW50VHlwZSA9IHtcbiAgLyoqXG4gICAqIFJlcHJlc2VudHMgYSBtb3VzZSBsZWZ0IGJ1dHRvbiBkb3duIGV2ZW50LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIExFRlRfRE9XTjogMCxcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBhIG1vdXNlIGxlZnQgYnV0dG9uIHVwIGV2ZW50LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIExFRlRfVVA6IDEsXG5cbiAgLyoqXG4gICAqIFJlcHJlc2VudHMgYSBtb3VzZSBsZWZ0IGNsaWNrIGV2ZW50LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIExFRlRfQ0xJQ0s6IDIsXG5cbiAgLyoqXG4gICAqIFJlcHJlc2VudHMgYSBtb3VzZSBsZWZ0IGRvdWJsZSBjbGljayBldmVudC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBMRUZUX0RPVUJMRV9DTElDSzogMyxcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBhIG1vdXNlIGxlZnQgYnV0dG9uIGRvd24gZXZlbnQuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgUklHSFRfRE9XTjogNSxcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBhIG1vdXNlIHJpZ2h0IGJ1dHRvbiB1cCBldmVudC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBSSUdIVF9VUDogNixcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBhIG1vdXNlIHJpZ2h0IGNsaWNrIGV2ZW50LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFJJR0hUX0NMSUNLOiA3LFxuXG4gIC8qKlxuICAgKiBSZXByZXNlbnRzIGEgbW91c2UgbWlkZGxlIGJ1dHRvbiBkb3duIGV2ZW50LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIE1JRERMRV9ET1dOOiAxMCxcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBhIG1vdXNlIG1pZGRsZSBidXR0b24gdXAgZXZlbnQuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTUlERExFX1VQOiAxMSxcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBhIG1vdXNlIG1pZGRsZSBjbGljayBldmVudC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBNSURETEVfQ0xJQ0s6IDEyLFxuXG4gIC8qKlxuICAgKiBSZXByZXNlbnRzIGEgbW91c2UgbW92ZSBldmVudC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBNT1VTRV9NT1ZFOiAxNSxcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBhIG1vdXNlIHdoZWVsIGV2ZW50LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFdIRUVMOiAxNixcblxuICAvKipcbiAgICogUmVwcmVzZW50cyB0aGUgc3RhcnQgb2YgYSB0d28tZmluZ2VyIGV2ZW50IG9uIGEgdG91Y2ggc3VyZmFjZS5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBQSU5DSF9TVEFSVDogMTcsXG5cbiAgLyoqXG4gICAqIFJlcHJlc2VudHMgdGhlIGVuZCBvZiBhIHR3by1maW5nZXIgZXZlbnQgb24gYSB0b3VjaCBzdXJmYWNlLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFBJTkNIX0VORDogMTgsXG5cbiAgLyoqXG4gICAqIFJlcHJlc2VudHMgYSBjaGFuZ2Ugb2YgYSB0d28tZmluZ2VyIGV2ZW50IG9uIGEgdG91Y2ggc3VyZmFjZS5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBQSU5DSF9NT1ZFOiAxOSxcbn07XG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKFNjcmVlblNwYWNlRXZlbnRUeXBlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///35452\n')},37939:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n\n\n\n\n\n/**\n * Value and type information for per-instance geometry attribute that determines if the geometry instance will be shown.\n *\n * @alias ShowGeometryInstanceAttribute\n * @constructor\n *\n * @param {Boolean} [show=true] Determines if the geometry instance will be shown.\n *\n *\n * @example\n * var instance = new Cesium.GeometryInstance({\n *   geometry : new Cesium.BoxGeometry({\n *     vertexFormat : Cesium.VertexFormat.POSITION_AND_NORMAL,\n *     minimum : new Cesium.Cartesian3(-250000.0, -250000.0, -250000.0),\n *     maximum : new Cesium.Cartesian3(250000.0, 250000.0, 250000.0)\n *   }),\n *   modelMatrix : Cesium.Matrix4.multiplyByTranslation(Cesium.Transforms.eastNorthUpToFixedFrame(\n *     Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883)), new Cesium.Cartesian3(0.0, 0.0, 1000000.0), new Cesium.Matrix4()),\n *   id : \'box\',\n *   attributes : {\n *     show : new Cesium.ShowGeometryInstanceAttribute(false)\n *   }\n * });\n *\n * @see GeometryInstance\n * @see GeometryInstanceAttribute\n */\nfunction ShowGeometryInstanceAttribute(show) {\n  show = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(show, true);\n\n  /**\n   * The values for the attributes stored in a typed array.\n   *\n   * @type Uint8Array\n   *\n   * @default [1.0]\n   */\n  this.value = ShowGeometryInstanceAttribute.toValue(show);\n}\n\nObject.defineProperties(ShowGeometryInstanceAttribute.prototype, {\n  /**\n   * The datatype of each component in the attribute, e.g., individual elements in\n   * {@link ColorGeometryInstanceAttribute#value}.\n   *\n   * @memberof ShowGeometryInstanceAttribute.prototype\n   *\n   * @type {ComponentDatatype}\n   * @readonly\n   *\n   * @default {@link ComponentDatatype.UNSIGNED_BYTE}\n   */\n  componentDatatype: {\n    get: function () {\n      return _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE;\n    },\n  },\n\n  /**\n   * The number of components in the attributes, i.e., {@link ColorGeometryInstanceAttribute#value}.\n   *\n   * @memberof ShowGeometryInstanceAttribute.prototype\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @default 1\n   */\n  componentsPerAttribute: {\n    get: function () {\n      return 1;\n    },\n  },\n\n  /**\n   * When <code>true</code> and <code>componentDatatype</code> is an integer format,\n   * indicate that the components should be mapped to the range [0, 1] (unsigned)\n   * or [-1, 1] (signed) when they are accessed as floating-point for rendering.\n   *\n   * @memberof ShowGeometryInstanceAttribute.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  normalize: {\n    get: function () {\n      return false;\n    },\n  },\n});\n\n/**\n * Converts a boolean show to a typed array that can be used to assign a show attribute.\n *\n * @param {Boolean} show The show value.\n * @param {Uint8Array} [result] The array to store the result in, if undefined a new instance will be created.\n * @returns {Uint8Array} The modified result parameter or a new instance if result was undefined.\n *\n * @example\n * var attributes = primitive.getGeometryInstanceAttributes(\'an id\');\n * attributes.show = Cesium.ShowGeometryInstanceAttribute.toValue(true, attributes.show);\n */\nShowGeometryInstanceAttribute.toValue = function (show, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(show)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("show is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(result)) {\n    return new Uint8Array([show]);\n  }\n  result[0] = show;\n  return result;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ShowGeometryInstanceAttribute);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc5MzkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUF1RDtBQUNWO0FBQ1Y7QUFDYzs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHFFQUFZOztBQUVyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTSwyQ0FBMkM7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrR0FBK0I7QUFDNUMsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQSx3REFBd0QsMkNBQTJDO0FBQ25HO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLFlBQVk7QUFDdkIsYUFBYSxZQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTs7QUFFQSxPQUFPLGdFQUFPO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUFlLDZCQUE2QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUuanM/MWI5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tcG9uZW50RGF0YXR5cGUgZnJvbSBcIi4vQ29tcG9uZW50RGF0YXR5cGUuanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4vZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4vRGV2ZWxvcGVyRXJyb3IuanNcIjtcblxuLyoqXG4gKiBWYWx1ZSBhbmQgdHlwZSBpbmZvcm1hdGlvbiBmb3IgcGVyLWluc3RhbmNlIGdlb21ldHJ5IGF0dHJpYnV0ZSB0aGF0IGRldGVybWluZXMgaWYgdGhlIGdlb21ldHJ5IGluc3RhbmNlIHdpbGwgYmUgc2hvd24uXG4gKlxuICogQGFsaWFzIFNob3dHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtzaG93PXRydWVdIERldGVybWluZXMgaWYgdGhlIGdlb21ldHJ5IGluc3RhbmNlIHdpbGwgYmUgc2hvd24uXG4gKlxuICpcbiAqIEBleGFtcGxlXG4gKiB2YXIgaW5zdGFuY2UgPSBuZXcgQ2VzaXVtLkdlb21ldHJ5SW5zdGFuY2Uoe1xuICogICBnZW9tZXRyeSA6IG5ldyBDZXNpdW0uQm94R2VvbWV0cnkoe1xuICogICAgIHZlcnRleEZvcm1hdCA6IENlc2l1bS5WZXJ0ZXhGb3JtYXQuUE9TSVRJT05fQU5EX05PUk1BTCxcbiAqICAgICBtaW5pbXVtIDogbmV3IENlc2l1bS5DYXJ0ZXNpYW4zKC0yNTAwMDAuMCwgLTI1MDAwMC4wLCAtMjUwMDAwLjApLFxuICogICAgIG1heGltdW0gOiBuZXcgQ2VzaXVtLkNhcnRlc2lhbjMoMjUwMDAwLjAsIDI1MDAwMC4wLCAyNTAwMDAuMClcbiAqICAgfSksXG4gKiAgIG1vZGVsTWF0cml4IDogQ2VzaXVtLk1hdHJpeDQubXVsdGlwbHlCeVRyYW5zbGF0aW9uKENlc2l1bS5UcmFuc2Zvcm1zLmVhc3ROb3J0aFVwVG9GaXhlZEZyYW1lKFxuICogICAgIENlc2l1bS5DYXJ0ZXNpYW4zLmZyb21EZWdyZWVzKC03NS41OTc3NywgNDAuMDM4ODMpKSwgbmV3IENlc2l1bS5DYXJ0ZXNpYW4zKDAuMCwgMC4wLCAxMDAwMDAwLjApLCBuZXcgQ2VzaXVtLk1hdHJpeDQoKSksXG4gKiAgIGlkIDogJ2JveCcsXG4gKiAgIGF0dHJpYnV0ZXMgOiB7XG4gKiAgICAgc2hvdyA6IG5ldyBDZXNpdW0uU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUoZmFsc2UpXG4gKiAgIH1cbiAqIH0pO1xuICpcbiAqIEBzZWUgR2VvbWV0cnlJbnN0YW5jZVxuICogQHNlZSBHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlXG4gKi9cbmZ1bmN0aW9uIFNob3dHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlKHNob3cpIHtcbiAgc2hvdyA9IGRlZmF1bHRWYWx1ZShzaG93LCB0cnVlKTtcblxuICAvKipcbiAgICogVGhlIHZhbHVlcyBmb3IgdGhlIGF0dHJpYnV0ZXMgc3RvcmVkIGluIGEgdHlwZWQgYXJyYXkuXG4gICAqXG4gICAqIEB0eXBlIFVpbnQ4QXJyYXlcbiAgICpcbiAgICogQGRlZmF1bHQgWzEuMF1cbiAgICovXG4gIHRoaXMudmFsdWUgPSBTaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS50b1ZhbHVlKHNob3cpO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhTaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5wcm90b3R5cGUsIHtcbiAgLyoqXG4gICAqIFRoZSBkYXRhdHlwZSBvZiBlYWNoIGNvbXBvbmVudCBpbiB0aGUgYXR0cmlidXRlLCBlLmcuLCBpbmRpdmlkdWFsIGVsZW1lbnRzIGluXG4gICAqIHtAbGluayBDb2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUjdmFsdWV9LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUucHJvdG90eXBlXG4gICAqXG4gICAqIEB0eXBlIHtDb21wb25lbnREYXRhdHlwZX1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBkZWZhdWx0IHtAbGluayBDb21wb25lbnREYXRhdHlwZS5VTlNJR05FRF9CWVRFfVxuICAgKi9cbiAgY29tcG9uZW50RGF0YXR5cGU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBDb21wb25lbnREYXRhdHlwZS5VTlNJR05FRF9CWVRFO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBudW1iZXIgb2YgY29tcG9uZW50cyBpbiB0aGUgYXR0cmlidXRlcywgaS5lLiwge0BsaW5rIENvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSN2YWx1ZX0uXG4gICAqXG4gICAqIEBtZW1iZXJvZiBTaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5wcm90b3R5cGVcbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBkZWZhdWx0IDFcbiAgICovXG4gIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFdoZW4gPGNvZGU+dHJ1ZTwvY29kZT4gYW5kIDxjb2RlPmNvbXBvbmVudERhdGF0eXBlPC9jb2RlPiBpcyBhbiBpbnRlZ2VyIGZvcm1hdCxcbiAgICogaW5kaWNhdGUgdGhhdCB0aGUgY29tcG9uZW50cyBzaG91bGQgYmUgbWFwcGVkIHRvIHRoZSByYW5nZSBbMCwgMV0gKHVuc2lnbmVkKVxuICAgKiBvciBbLTEsIDFdIChzaWduZWQpIHdoZW4gdGhleSBhcmUgYWNjZXNzZWQgYXMgZmxvYXRpbmctcG9pbnQgZm9yIHJlbmRlcmluZy5cbiAgICpcbiAgICogQG1lbWJlcm9mIFNob3dHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBkZWZhdWx0IHRydWVcbiAgICovXG4gIG5vcm1hbGl6ZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG4gIH0sXG59KTtcblxuLyoqXG4gKiBDb252ZXJ0cyBhIGJvb2xlYW4gc2hvdyB0byBhIHR5cGVkIGFycmF5IHRoYXQgY2FuIGJlIHVzZWQgdG8gYXNzaWduIGEgc2hvdyBhdHRyaWJ1dGUuXG4gKlxuICogQHBhcmFtIHtCb29sZWFufSBzaG93IFRoZSBzaG93IHZhbHVlLlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBbcmVzdWx0XSBUaGUgYXJyYXkgdG8gc3RvcmUgdGhlIHJlc3VsdCBpbiwgaWYgdW5kZWZpbmVkIGEgbmV3IGluc3RhbmNlIHdpbGwgYmUgY3JlYXRlZC5cbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fSBUaGUgbW9kaWZpZWQgcmVzdWx0IHBhcmFtZXRlciBvciBhIG5ldyBpbnN0YW5jZSBpZiByZXN1bHQgd2FzIHVuZGVmaW5lZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogdmFyIGF0dHJpYnV0ZXMgPSBwcmltaXRpdmUuZ2V0R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZXMoJ2FuIGlkJyk7XG4gKiBhdHRyaWJ1dGVzLnNob3cgPSBDZXNpdW0uU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUudG9WYWx1ZSh0cnVlLCBhdHRyaWJ1dGVzLnNob3cpO1xuICovXG5TaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS50b1ZhbHVlID0gZnVuY3Rpb24gKHNob3csIHJlc3VsdCkge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIWRlZmluZWQoc2hvdykpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJzaG93IGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShbc2hvd10pO1xuICB9XG4gIHJlc3VsdFswXSA9IHNob3c7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0IGRlZmF1bHQgU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///37939\n')},83156:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55293);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68201);\n/* harmony import */ var _TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4877);\n/* harmony import */ var _TimeStandard_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(13098);\n\n\n\n\n\n\n\n\n\n/**\n * Contains functions for finding the Cartesian coordinates of the sun and the moon in the\n * Earth-centered inertial frame.\n *\n * @namespace Simon1994PlanetaryPositions\n */\nvar Simon1994PlanetaryPositions = {};\n\nfunction computeTdbMinusTtSpice(daysSinceJ2000InTerrestrialTime) {\n  /* STK Comments ------------------------------------------------------\n   * This function uses constants designed to be consistent with\n   * the SPICE Toolkit from JPL version N0051 (unitim.c)\n   * M0 = 6.239996\n   * M0Dot = 1.99096871e-7 rad/s = 0.01720197 rad/d\n   * EARTH_ECC = 1.671e-2\n   * TDB_AMPL = 1.657e-3 secs\n   *--------------------------------------------------------------------*/\n\n  //* Values taken as specified in STK Comments except: 0.01720197 rad/day = 1.99096871e-7 rad/sec\n  //* Here we use the more precise value taken from the SPICE value 1.99096871e-7 rad/sec converted to rad/day\n  //* All other constants are consistent with the SPICE implementation of the TDB conversion\n  //* except where we treat the independent time parameter to be in TT instead of TDB.\n  //* This is an approximation made to facilitate performance due to the higher prevalance of\n  //* the TT2TDB conversion over TDB2TT in order to avoid having to iterate when converting to TDB for the JPL ephemeris.\n  //* Days are used instead of seconds to provide a slight improvement in numerical precision.\n\n  //* For more information see:\n  //* http://www.cv.nrao.edu/~rfisher/Ephemerides/times.html#TDB\n  //* ftp://ssd.jpl.nasa.gov/pub/eph/planets/ioms/ExplSupplChap8.pdf\n\n  var g = 6.239996 + 0.0172019696544 * daysSinceJ2000InTerrestrialTime;\n  return 1.657e-3 * Math.sin(g + 1.671e-2 * Math.sin(g));\n}\n\nvar TdtMinusTai = 32.184;\nvar J2000d = 2451545;\nfunction taiToTdb(date, result) {\n  //Converts TAI to TT\n  result = _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].addSeconds */ .Z.addSeconds(date, TdtMinusTai, result);\n\n  //Converts TT to TDB\n  var days = _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].totalDays */ .Z.totalDays(result) - J2000d;\n  result = _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].addSeconds */ .Z.addSeconds(result, computeTdbMinusTtSpice(days), result);\n\n  return result;\n}\n\nvar epoch = new _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(2451545, 0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].TAI */ .Z.TAI); //Actually TDB (not TAI)\nvar MetersPerKilometer = 1000.0;\nvar RadiansPerDegree = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE;\nvar RadiansPerArcSecond = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].RADIANS_PER_ARCSECOND */ .Z.RADIANS_PER_ARCSECOND;\nvar MetersPerAstronomicalUnit = 1.4959787e11; // IAU 1976 value\n\nvar perifocalToEquatorial = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nfunction elementsToCartesian(\n  semimajorAxis,\n  eccentricity,\n  inclination,\n  longitudeOfPerigee,\n  longitudeOfNode,\n  meanLongitude,\n  result\n) {\n  if (inclination < 0.0) {\n    inclination = -inclination;\n    longitudeOfNode += _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].PI */ .Z.PI;\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (inclination < 0 || inclination > _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].PI */ .Z.PI) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "The inclination is out of range. Inclination must be greater than or equal to zero and less than or equal to Pi radians."\n    );\n  }\n  //>>includeEnd(\'debug\')\n\n  var radiusOfPeriapsis = semimajorAxis * (1.0 - eccentricity);\n  var argumentOfPeriapsis = longitudeOfPerigee - longitudeOfNode;\n  var rightAscensionOfAscendingNode = longitudeOfNode;\n  var trueAnomaly = meanAnomalyToTrueAnomaly(\n    meanLongitude - longitudeOfPerigee,\n    eccentricity\n  );\n  var type = chooseOrbit(eccentricity, 0.0);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    type === "Hyperbolic" &&\n    Math.abs(_Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].negativePiToPi */ .Z.negativePiToPi(trueAnomaly)) >=\n      Math.acos(-1.0 / eccentricity)\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "The true anomaly of the hyperbolic orbit lies outside of the bounds of the hyperbola."\n    );\n  }\n  //>>includeEnd(\'debug\')\n\n  perifocalToCartesianMatrix(\n    argumentOfPeriapsis,\n    inclination,\n    rightAscensionOfAscendingNode,\n    perifocalToEquatorial\n  );\n  var semilatus = radiusOfPeriapsis * (1.0 + eccentricity);\n  var costheta = Math.cos(trueAnomaly);\n  var sintheta = Math.sin(trueAnomaly);\n\n  var denom = 1.0 + eccentricity * costheta;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (denom <= _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].Epsilon10 */ .Z.Epsilon10) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("elements cannot be converted to cartesian");\n  }\n  //>>includeEnd(\'debug\')\n\n  var radius = semilatus / denom;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(result)) {\n    result = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(radius * costheta, radius * sintheta, 0.0);\n  } else {\n    result.x = radius * costheta;\n    result.y = radius * sintheta;\n    result.z = 0.0;\n  }\n\n  return _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].multiplyByVector */ .Z.multiplyByVector(perifocalToEquatorial, result, result);\n}\n\nfunction chooseOrbit(eccentricity, tolerance) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (eccentricity < 0) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("eccentricity cannot be negative.");\n  }\n  //>>includeEnd(\'debug\')\n\n  if (eccentricity <= tolerance) {\n    return "Circular";\n  } else if (eccentricity < 1.0 - tolerance) {\n    return "Elliptical";\n  } else if (eccentricity <= 1.0 + tolerance) {\n    return "Parabolic";\n  }\n  return "Hyperbolic";\n}\n\n// Calculates the true anomaly given the mean anomaly and the eccentricity.\nfunction meanAnomalyToTrueAnomaly(meanAnomaly, eccentricity) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (eccentricity < 0.0 || eccentricity >= 1.0) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("eccentricity out of range.");\n  }\n  //>>includeEnd(\'debug\')\n\n  var eccentricAnomaly = meanAnomalyToEccentricAnomaly(\n    meanAnomaly,\n    eccentricity\n  );\n  return eccentricAnomalyToTrueAnomaly(eccentricAnomaly, eccentricity);\n}\n\nvar maxIterationCount = 50;\nvar keplerEqConvergence = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].EPSILON8 */ .Z.EPSILON8;\n// Calculates the eccentric anomaly given the mean anomaly and the eccentricity.\nfunction meanAnomalyToEccentricAnomaly(meanAnomaly, eccentricity) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (eccentricity < 0.0 || eccentricity >= 1.0) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("eccentricity out of range.");\n  }\n  //>>includeEnd(\'debug\')\n\n  var revs = Math.floor(meanAnomaly / _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].TWO_PI */ .Z.TWO_PI);\n\n  // Find angle in current revolution\n  meanAnomaly -= revs * _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].TWO_PI */ .Z.TWO_PI;\n\n  // calculate starting value for iteration sequence\n  var iterationValue =\n    meanAnomaly +\n    (eccentricity * Math.sin(meanAnomaly)) /\n      (1.0 - Math.sin(meanAnomaly + eccentricity) + Math.sin(meanAnomaly));\n\n  // Perform Newton-Raphson iteration on Kepler\'s equation\n  var eccentricAnomaly = Number.MAX_VALUE;\n\n  var count;\n  for (\n    count = 0;\n    count < maxIterationCount &&\n    Math.abs(eccentricAnomaly - iterationValue) > keplerEqConvergence;\n    ++count\n  ) {\n    eccentricAnomaly = iterationValue;\n    var NRfunction =\n      eccentricAnomaly -\n      eccentricity * Math.sin(eccentricAnomaly) -\n      meanAnomaly;\n    var dNRfunction = 1 - eccentricity * Math.cos(eccentricAnomaly);\n    iterationValue = eccentricAnomaly - NRfunction / dNRfunction;\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (count >= maxIterationCount) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("Kepler equation did not converge");\n    // STK Components uses a numerical method to find the eccentric anomaly in the case that Kepler\'s\n    // equation does not converge. We don\'t expect that to ever be necessary for the reasonable orbits used here.\n  }\n  //>>includeEnd(\'debug\')\n\n  eccentricAnomaly = iterationValue + revs * _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].TWO_PI */ .Z.TWO_PI;\n  return eccentricAnomaly;\n}\n\n// Calculates the true anomaly given the eccentric anomaly and the eccentricity.\nfunction eccentricAnomalyToTrueAnomaly(eccentricAnomaly, eccentricity) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (eccentricity < 0.0 || eccentricity >= 1.0) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("eccentricity out of range.");\n  }\n  //>>includeEnd(\'debug\')\n\n  // Calculate the number of previous revolutions\n  var revs = Math.floor(eccentricAnomaly / _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].TWO_PI */ .Z.TWO_PI);\n\n  // Find angle in current revolution\n  eccentricAnomaly -= revs * _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].TWO_PI */ .Z.TWO_PI;\n\n  // Calculate true anomaly from eccentric anomaly\n  var trueAnomalyX = Math.cos(eccentricAnomaly) - eccentricity;\n  var trueAnomalyY =\n    Math.sin(eccentricAnomaly) * Math.sqrt(1 - eccentricity * eccentricity);\n\n  var trueAnomaly = Math.atan2(trueAnomalyY, trueAnomalyX);\n\n  // Ensure the correct quadrant\n  trueAnomaly = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].zeroToTwoPi */ .Z.zeroToTwoPi(trueAnomaly);\n  if (eccentricAnomaly < 0) {\n    trueAnomaly -= _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].TWO_PI */ .Z.TWO_PI;\n  }\n\n  // Add on previous revolutions\n  trueAnomaly += revs * _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].TWO_PI */ .Z.TWO_PI;\n\n  return trueAnomaly;\n}\n\n// Calculates the transformation matrix to convert from the perifocal (PQW) coordinate\n// system to inertial cartesian coordinates.\nfunction perifocalToCartesianMatrix(\n  argumentOfPeriapsis,\n  inclination,\n  rightAscension,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (inclination < 0 || inclination > _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].PI */ .Z.PI) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("inclination out of range");\n  }\n  //>>includeEnd(\'debug\')\n\n  var cosap = Math.cos(argumentOfPeriapsis);\n  var sinap = Math.sin(argumentOfPeriapsis);\n\n  var cosi = Math.cos(inclination);\n  var sini = Math.sin(inclination);\n\n  var cosraan = Math.cos(rightAscension);\n  var sinraan = Math.sin(rightAscension);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(result)) {\n    result = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      cosraan * cosap - sinraan * sinap * cosi,\n      -cosraan * sinap - sinraan * cosap * cosi,\n      sinraan * sini,\n\n      sinraan * cosap + cosraan * sinap * cosi,\n      -sinraan * sinap + cosraan * cosap * cosi,\n      -cosraan * sini,\n\n      sinap * sini,\n      cosap * sini,\n      cosi\n    );\n  } else {\n    result[0] = cosraan * cosap - sinraan * sinap * cosi;\n    result[1] = sinraan * cosap + cosraan * sinap * cosi;\n    result[2] = sinap * sini;\n    result[3] = -cosraan * sinap - sinraan * cosap * cosi;\n    result[4] = -sinraan * sinap + cosraan * cosap * cosi;\n    result[5] = cosap * sini;\n    result[6] = sinraan * sini;\n    result[7] = -cosraan * sini;\n    result[8] = cosi;\n  }\n  return result;\n}\n\n// From section 5.8\nvar semiMajorAxis0 = 1.0000010178 * MetersPerAstronomicalUnit;\nvar meanLongitude0 = 100.46645683 * RadiansPerDegree;\nvar meanLongitude1 = 1295977422.83429 * RadiansPerArcSecond;\n\n// From table 6\nvar p1u = 16002;\nvar p2u = 21863;\nvar p3u = 32004;\nvar p4u = 10931;\nvar p5u = 14529;\nvar p6u = 16368;\nvar p7u = 15318;\nvar p8u = 32794;\n\nvar Ca1 = 64 * 1e-7 * MetersPerAstronomicalUnit;\nvar Ca2 = -152 * 1e-7 * MetersPerAstronomicalUnit;\nvar Ca3 = 62 * 1e-7 * MetersPerAstronomicalUnit;\nvar Ca4 = -8 * 1e-7 * MetersPerAstronomicalUnit;\nvar Ca5 = 32 * 1e-7 * MetersPerAstronomicalUnit;\nvar Ca6 = -41 * 1e-7 * MetersPerAstronomicalUnit;\nvar Ca7 = 19 * 1e-7 * MetersPerAstronomicalUnit;\nvar Ca8 = -11 * 1e-7 * MetersPerAstronomicalUnit;\n\nvar Sa1 = -150 * 1e-7 * MetersPerAstronomicalUnit;\nvar Sa2 = -46 * 1e-7 * MetersPerAstronomicalUnit;\nvar Sa3 = 68 * 1e-7 * MetersPerAstronomicalUnit;\nvar Sa4 = 54 * 1e-7 * MetersPerAstronomicalUnit;\nvar Sa5 = 14 * 1e-7 * MetersPerAstronomicalUnit;\nvar Sa6 = 24 * 1e-7 * MetersPerAstronomicalUnit;\nvar Sa7 = -28 * 1e-7 * MetersPerAstronomicalUnit;\nvar Sa8 = 22 * 1e-7 * MetersPerAstronomicalUnit;\n\nvar q1u = 10;\nvar q2u = 16002;\nvar q3u = 21863;\nvar q4u = 10931;\nvar q5u = 1473;\nvar q6u = 32004;\nvar q7u = 4387;\nvar q8u = 73;\n\nvar Cl1 = -325 * 1e-7;\nvar Cl2 = -322 * 1e-7;\nvar Cl3 = -79 * 1e-7;\nvar Cl4 = 232 * 1e-7;\nvar Cl5 = -52 * 1e-7;\nvar Cl6 = 97 * 1e-7;\nvar Cl7 = 55 * 1e-7;\nvar Cl8 = -41 * 1e-7;\n\nvar Sl1 = -105 * 1e-7;\nvar Sl2 = -137 * 1e-7;\nvar Sl3 = 258 * 1e-7;\nvar Sl4 = 35 * 1e-7;\nvar Sl5 = -116 * 1e-7;\nvar Sl6 = -88 * 1e-7;\nvar Sl7 = -112 * 1e-7;\nvar Sl8 = -80 * 1e-7;\n\nvar scratchDate = new _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(0, 0.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].TAI */ .Z.TAI);\n// Gets a point describing the motion of the Earth-Moon barycenter according to the equations described in section 6.\nfunction computeSimonEarthMoonBarycenter(date, result) {\n  // t is thousands of years from J2000 TDB\n  taiToTdb(date, scratchDate);\n  var x =\n    scratchDate.dayNumber -\n    epoch.dayNumber +\n    (scratchDate.secondsOfDay - epoch.secondsOfDay) /\n      _TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY;\n  var t = x / (_TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DAYS_PER_JULIAN_CENTURY */ .Z.DAYS_PER_JULIAN_CENTURY * 10.0);\n\n  var u = 0.3595362 * t;\n  var semimajorAxis =\n    semiMajorAxis0 +\n    Ca1 * Math.cos(p1u * u) +\n    Sa1 * Math.sin(p1u * u) +\n    Ca2 * Math.cos(p2u * u) +\n    Sa2 * Math.sin(p2u * u) +\n    Ca3 * Math.cos(p3u * u) +\n    Sa3 * Math.sin(p3u * u) +\n    Ca4 * Math.cos(p4u * u) +\n    Sa4 * Math.sin(p4u * u) +\n    Ca5 * Math.cos(p5u * u) +\n    Sa5 * Math.sin(p5u * u) +\n    Ca6 * Math.cos(p6u * u) +\n    Sa6 * Math.sin(p6u * u) +\n    Ca7 * Math.cos(p7u * u) +\n    Sa7 * Math.sin(p7u * u) +\n    Ca8 * Math.cos(p8u * u) +\n    Sa8 * Math.sin(p8u * u);\n  var meanLongitude =\n    meanLongitude0 +\n    meanLongitude1 * t +\n    Cl1 * Math.cos(q1u * u) +\n    Sl1 * Math.sin(q1u * u) +\n    Cl2 * Math.cos(q2u * u) +\n    Sl2 * Math.sin(q2u * u) +\n    Cl3 * Math.cos(q3u * u) +\n    Sl3 * Math.sin(q3u * u) +\n    Cl4 * Math.cos(q4u * u) +\n    Sl4 * Math.sin(q4u * u) +\n    Cl5 * Math.cos(q5u * u) +\n    Sl5 * Math.sin(q5u * u) +\n    Cl6 * Math.cos(q6u * u) +\n    Sl6 * Math.sin(q6u * u) +\n    Cl7 * Math.cos(q7u * u) +\n    Sl7 * Math.sin(q7u * u) +\n    Cl8 * Math.cos(q8u * u) +\n    Sl8 * Math.sin(q8u * u);\n\n  // All constants in this part are from section 5.8\n  var eccentricity = 0.0167086342 - 0.0004203654 * t;\n  var longitudeOfPerigee =\n    102.93734808 * RadiansPerDegree + 11612.3529 * RadiansPerArcSecond * t;\n  var inclination = 469.97289 * RadiansPerArcSecond * t;\n  var longitudeOfNode =\n    174.87317577 * RadiansPerDegree - 8679.27034 * RadiansPerArcSecond * t;\n\n  return elementsToCartesian(\n    semimajorAxis,\n    eccentricity,\n    inclination,\n    longitudeOfPerigee,\n    longitudeOfNode,\n    meanLongitude,\n    result\n  );\n}\n\n// Gets a point describing the position of the moon according to the equations described in section 4.\nfunction computeSimonMoon(date, result) {\n  taiToTdb(date, scratchDate);\n  var x =\n    scratchDate.dayNumber -\n    epoch.dayNumber +\n    (scratchDate.secondsOfDay - epoch.secondsOfDay) /\n      _TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY;\n  var t = x / _TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DAYS_PER_JULIAN_CENTURY */ .Z.DAYS_PER_JULIAN_CENTURY;\n  var t2 = t * t;\n  var t3 = t2 * t;\n  var t4 = t3 * t;\n\n  // Terms from section 3.4 (b.1)\n  var semimajorAxis = 383397.7725 + 0.004 * t;\n  var eccentricity = 0.055545526 - 0.000000016 * t;\n  var inclinationConstant = 5.15668983 * RadiansPerDegree;\n  var inclinationSecPart =\n    -0.00008 * t + 0.02966 * t2 - 0.000042 * t3 - 0.00000013 * t4;\n  var longitudeOfPerigeeConstant = 83.35324312 * RadiansPerDegree;\n  var longitudeOfPerigeeSecPart =\n    14643420.2669 * t - 38.2702 * t2 - 0.045047 * t3 + 0.00021301 * t4;\n  var longitudeOfNodeConstant = 125.04455501 * RadiansPerDegree;\n  var longitudeOfNodeSecPart =\n    -6967919.3631 * t + 6.3602 * t2 + 0.007625 * t3 - 0.00003586 * t4;\n  var meanLongitudeConstant = 218.31664563 * RadiansPerDegree;\n  var meanLongitudeSecPart =\n    1732559343.4847 * t - 6.391 * t2 + 0.006588 * t3 - 0.00003169 * t4;\n\n  // Delaunay arguments from section 3.5 b\n  var D =\n    297.85019547 * RadiansPerDegree +\n    RadiansPerArcSecond *\n      (1602961601.209 * t - 6.3706 * t2 + 0.006593 * t3 - 0.00003169 * t4);\n  var F =\n    93.27209062 * RadiansPerDegree +\n    RadiansPerArcSecond *\n      (1739527262.8478 * t - 12.7512 * t2 - 0.001037 * t3 + 0.00000417 * t4);\n  var l =\n    134.96340251 * RadiansPerDegree +\n    RadiansPerArcSecond *\n      (1717915923.2178 * t + 31.8792 * t2 + 0.051635 * t3 - 0.0002447 * t4);\n  var lprime =\n    357.52910918 * RadiansPerDegree +\n    RadiansPerArcSecond *\n      (129596581.0481 * t - 0.5532 * t2 + 0.000136 * t3 - 0.00001149 * t4);\n  var psi =\n    310.17137918 * RadiansPerDegree -\n    RadiansPerArcSecond *\n      (6967051.436 * t + 6.2068 * t2 + 0.007618 * t3 - 0.00003219 * t4);\n\n  // Add terms from Table 4\n  var twoD = 2.0 * D;\n  var fourD = 4.0 * D;\n  var sixD = 6.0 * D;\n  var twol = 2.0 * l;\n  var threel = 3.0 * l;\n  var fourl = 4.0 * l;\n  var twoF = 2.0 * F;\n  semimajorAxis +=\n    3400.4 * Math.cos(twoD) -\n    635.6 * Math.cos(twoD - l) -\n    235.6 * Math.cos(l) +\n    218.1 * Math.cos(twoD - lprime) +\n    181.0 * Math.cos(twoD + l);\n  eccentricity +=\n    0.014216 * Math.cos(twoD - l) +\n    0.008551 * Math.cos(twoD - twol) -\n    0.001383 * Math.cos(l) +\n    0.001356 * Math.cos(twoD + l) -\n    0.001147 * Math.cos(fourD - threel) -\n    0.000914 * Math.cos(fourD - twol) +\n    0.000869 * Math.cos(twoD - lprime - l) -\n    0.000627 * Math.cos(twoD) -\n    0.000394 * Math.cos(fourD - fourl) +\n    0.000282 * Math.cos(twoD - lprime - twol) -\n    0.000279 * Math.cos(D - l) -\n    0.000236 * Math.cos(twol) +\n    0.000231 * Math.cos(fourD) +\n    0.000229 * Math.cos(sixD - fourl) -\n    0.000201 * Math.cos(twol - twoF);\n  inclinationSecPart +=\n    486.26 * Math.cos(twoD - twoF) -\n    40.13 * Math.cos(twoD) +\n    37.51 * Math.cos(twoF) +\n    25.73 * Math.cos(twol - twoF) +\n    19.97 * Math.cos(twoD - lprime - twoF);\n  longitudeOfPerigeeSecPart +=\n    -55609 * Math.sin(twoD - l) -\n    34711 * Math.sin(twoD - twol) -\n    9792 * Math.sin(l) +\n    9385 * Math.sin(fourD - threel) +\n    7505 * Math.sin(fourD - twol) +\n    5318 * Math.sin(twoD + l) +\n    3484 * Math.sin(fourD - fourl) -\n    3417 * Math.sin(twoD - lprime - l) -\n    2530 * Math.sin(sixD - fourl) -\n    2376 * Math.sin(twoD) -\n    2075 * Math.sin(twoD - threel) -\n    1883 * Math.sin(twol) -\n    1736 * Math.sin(sixD - 5.0 * l) +\n    1626 * Math.sin(lprime) -\n    1370 * Math.sin(sixD - threel);\n  longitudeOfNodeSecPart +=\n    -5392 * Math.sin(twoD - twoF) -\n    540 * Math.sin(lprime) -\n    441 * Math.sin(twoD) +\n    423 * Math.sin(twoF) -\n    288 * Math.sin(twol - twoF);\n  meanLongitudeSecPart +=\n    -3332.9 * Math.sin(twoD) +\n    1197.4 * Math.sin(twoD - l) -\n    662.5 * Math.sin(lprime) +\n    396.3 * Math.sin(l) -\n    218.0 * Math.sin(twoD - lprime);\n\n  // Add terms from Table 5\n  var twoPsi = 2.0 * psi;\n  var threePsi = 3.0 * psi;\n  inclinationSecPart +=\n    46.997 * Math.cos(psi) * t -\n    0.614 * Math.cos(twoD - twoF + psi) * t +\n    0.614 * Math.cos(twoD - twoF - psi) * t -\n    0.0297 * Math.cos(twoPsi) * t2 -\n    0.0335 * Math.cos(psi) * t2 +\n    0.0012 * Math.cos(twoD - twoF + twoPsi) * t2 -\n    0.00016 * Math.cos(psi) * t3 +\n    0.00004 * Math.cos(threePsi) * t3 +\n    0.00004 * Math.cos(twoPsi) * t3;\n  var perigeeAndMean =\n    2.116 * Math.sin(psi) * t -\n    0.111 * Math.sin(twoD - twoF - psi) * t -\n    0.0015 * Math.sin(psi) * t2;\n  longitudeOfPerigeeSecPart += perigeeAndMean;\n  meanLongitudeSecPart += perigeeAndMean;\n  longitudeOfNodeSecPart +=\n    -520.77 * Math.sin(psi) * t +\n    13.66 * Math.sin(twoD - twoF + psi) * t +\n    1.12 * Math.sin(twoD - psi) * t -\n    1.06 * Math.sin(twoF - psi) * t +\n    0.66 * Math.sin(twoPsi) * t2 +\n    0.371 * Math.sin(psi) * t2 -\n    0.035 * Math.sin(twoD - twoF + twoPsi) * t2 -\n    0.015 * Math.sin(twoD - twoF + psi) * t2 +\n    0.0014 * Math.sin(psi) * t3 -\n    0.0011 * Math.sin(threePsi) * t3 -\n    0.0009 * Math.sin(twoPsi) * t3;\n\n  // Add constants and convert units\n  semimajorAxis *= MetersPerKilometer;\n  var inclination =\n    inclinationConstant + inclinationSecPart * RadiansPerArcSecond;\n  var longitudeOfPerigee =\n    longitudeOfPerigeeConstant +\n    longitudeOfPerigeeSecPart * RadiansPerArcSecond;\n  var meanLongitude =\n    meanLongitudeConstant + meanLongitudeSecPart * RadiansPerArcSecond;\n  var longitudeOfNode =\n    longitudeOfNodeConstant + longitudeOfNodeSecPart * RadiansPerArcSecond;\n\n  return elementsToCartesian(\n    semimajorAxis,\n    eccentricity,\n    inclination,\n    longitudeOfPerigee,\n    longitudeOfNode,\n    meanLongitude,\n    result\n  );\n}\n\n// Gets a point describing the motion of the Earth.  This point uses the Moon point and\n// the 1992 mu value (ratio between Moon and Earth masses) in Table 2 of the paper in order\n// to determine the position of the Earth relative to the Earth-Moon barycenter.\nvar moonEarthMassRatio = 0.012300034; // From 1992 mu value in Table 2\nvar factor = (moonEarthMassRatio / (moonEarthMassRatio + 1.0)) * -1;\nfunction computeSimonEarth(date, result) {\n  result = computeSimonMoon(date, result);\n  return _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(result, factor, result);\n}\n\n// Values for the <code>axesTransformation</code> needed for the rotation were found using the STK Components\n// GreographicTransformer on the position of the sun center of mass point and the earth J2000 frame.\n\nvar axesTransformation = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n  1.0000000000000002,\n  5.619723173785822e-16,\n  4.690511510146299e-19,\n  -5.154129427414611e-16,\n  0.9174820620691819,\n  -0.39777715593191376,\n  -2.23970096136568e-16,\n  0.39777715593191376,\n  0.9174820620691819\n);\nvar translation = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * Computes the position of the Sun in the Earth-centered inertial frame\n *\n * @param {JulianDate} [julianDate] The time at which to compute the Sun\'s position, if not provided the current system time is used.\n * @param {Cartesian3} [result] The object onto which to store the result.\n * @returns {Cartesian3} Calculated sun position\n */\nSimon1994PlanetaryPositions.computeSunPositionInEarthInertialFrame = function (\n  julianDate,\n  result\n) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(julianDate)) {\n    julianDate = _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].now */ .Z.now();\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(result)) {\n    result = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  //first forward transformation\n  translation = computeSimonEarthMoonBarycenter(julianDate, translation);\n  result = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(translation, result);\n\n  //second forward transformation\n  computeSimonEarth(julianDate, translation);\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(result, translation, result);\n  _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].multiplyByVector */ .Z.multiplyByVector(axesTransformation, result, result);\n\n  return result;\n};\n\n/**\n * Computes the position of the Moon in the Earth-centered inertial frame\n *\n * @param {JulianDate} [julianDate] The time at which to compute the Sun\'s position, if not provided the current system time is used.\n * @param {Cartesian3} [result] The object onto which to store the result.\n * @returns {Cartesian3} Calculated moon position\n */\nSimon1994PlanetaryPositions.computeMoonPositionInEarthInertialFrame = function (\n  julianDate,\n  result\n) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(julianDate)) {\n    julianDate = _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].now */ .Z.now();\n  }\n\n  result = computeSimonMoon(julianDate, result);\n  _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].multiplyByVector */ .Z.multiplyByVector(axesTransformation, result, result);\n\n  return result;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Simon1994PlanetaryPositions);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///83156\n')},85440:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ArcType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11491);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59947);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50491);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(56652);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(99417);\n/* harmony import */ var _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(61733);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(97264);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction interpolateColors(p0, p1, color0, color1, minDistance, array, offset) {\n  var numPoints = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].numberOfPoints */ .Z.numberOfPoints(p0, p1, minDistance);\n  var i;\n\n  var r0 = color0.red;\n  var g0 = color0.green;\n  var b0 = color0.blue;\n  var a0 = color0.alpha;\n\n  var r1 = color1.red;\n  var g1 = color1.green;\n  var b1 = color1.blue;\n  var a1 = color1.alpha;\n\n  if (_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(color0, color1)) {\n    for (i = 0; i < numPoints; i++) {\n      array[offset++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(r0);\n      array[offset++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(g0);\n      array[offset++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(b0);\n      array[offset++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(a0);\n    }\n    return offset;\n  }\n\n  var redPerVertex = (r1 - r0) / numPoints;\n  var greenPerVertex = (g1 - g0) / numPoints;\n  var bluePerVertex = (b1 - b0) / numPoints;\n  var alphaPerVertex = (a1 - a0) / numPoints;\n\n  var index = offset;\n  for (i = 0; i < numPoints; i++) {\n    array[index++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(r0 + i * redPerVertex);\n    array[index++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(g0 + i * greenPerVertex);\n    array[index++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(b0 + i * bluePerVertex);\n    array[index++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(a0 + i * alphaPerVertex);\n  }\n\n  return index;\n}\n\n/**\n * A description of a polyline modeled as a line strip; the first two positions define a line segment,\n * and each additional position defines a line segment from the previous position.\n *\n * @alias SimplePolylineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of {@link Cartesian3} defining the positions in the polyline as a line strip.\n * @param {Color[]} [options.colors] An Array of {@link Color} defining the per vertex or per segment colors.\n * @param {Boolean} [options.colorsPerVertex=false] A boolean that determines whether the colors will be flat across each segment of the line or interpolated across the vertices.\n * @param {ArcType} [options.arcType=ArcType.GEODESIC] The type of line the polyline segments must follow.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude if options.arcType is not ArcType.NONE. Determines the number of positions in the buffer.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n *\n * @exception {DeveloperError} At least two positions are required.\n * @exception {DeveloperError} colors has an invalid length.\n *\n * @see SimplePolylineGeometry#createGeometry\n *\n * @example\n * // A polyline with two connected line segments\n * var polyline = new Cesium.SimplePolylineGeometry({\n *   positions : Cesium.Cartesian3.fromDegreesArray([\n *     0.0, 0.0,\n *     5.0, 0.0,\n *     5.0, 5.0\n *   ])\n * });\n * var geometry = Cesium.SimplePolylineGeometry.createGeometry(polyline);\n */\nfunction SimplePolylineGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var positions = options.positions;\n  var colors = options.colors;\n  var colorsPerVertex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.colorsPerVertex, false);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(positions) || positions.length < 2) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("At least two positions are required.");\n  }\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors) &&\n    ((colorsPerVertex && colors.length < positions.length) ||\n      (!colorsPerVertex && colors.length < positions.length - 1))\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("colors has an invalid length.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._positions = positions;\n  this._colors = colors;\n  this._colorsPerVertex = colorsPerVertex;\n\n  this._arcType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.arcType, _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC);\n  this._granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  this._ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].WGS84 */ .Z.WGS84);\n  this._workerName = "createSimplePolylineGeometry";\n\n  var numComponents = 1 + positions.length * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength;\n  numComponents += (0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors) ? 1 + colors.length * _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength : 1;\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength = numComponents + _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].packedLength */ .Z.packedLength + 3;\n}\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {SimplePolylineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nSimplePolylineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(value)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("value is required");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var i;\n\n  var positions = value._positions;\n  var length = positions.length;\n  array[startingIndex++] = length;\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(positions[i], array, startingIndex);\n  }\n\n  var colors = value._colors;\n  length = (0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors) ? colors.length : 0.0;\n  array[startingIndex++] = length;\n\n  for (i = 0; i < length; ++i, startingIndex += _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(colors[i], array, startingIndex);\n  }\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._colorsPerVertex ? 1.0 : 0.0;\n  array[startingIndex++] = value._arcType;\n  array[startingIndex] = value._granularity;\n\n  return array;\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {SimplePolylineGeometry} [result] The object into which to store the result.\n * @returns {SimplePolylineGeometry} The modified result parameter or a new SimplePolylineGeometry instance if one was not provided.\n */\nSimplePolylineGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(array)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("array is required");\n  }\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var i;\n\n  var length = array[startingIndex++];\n  var positions = new Array(length);\n\n  for (i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength) {\n    positions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  length = array[startingIndex++];\n  var colors = length > 0 ? new Array(length) : undefined;\n\n  for (i = 0; i < length; ++i, startingIndex += _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    colors[i] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].packedLength */ .Z.packedLength;\n\n  var colorsPerVertex = array[startingIndex++] === 1.0;\n  var arcType = array[startingIndex++];\n  var granularity = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(result)) {\n    return new SimplePolylineGeometry({\n      positions: positions,\n      colors: colors,\n      ellipsoid: ellipsoid,\n      colorsPerVertex: colorsPerVertex,\n      arcType: arcType,\n      granularity: granularity,\n    });\n  }\n\n  result._positions = positions;\n  result._colors = colors;\n  result._ellipsoid = ellipsoid;\n  result._colorsPerVertex = colorsPerVertex;\n  result._arcType = arcType;\n  result._granularity = granularity;\n\n  return result;\n};\n\nvar scratchArray1 = new Array(2);\nvar scratchArray2 = new Array(2);\nvar generateArcOptionsScratch = {\n  positions: scratchArray1,\n  height: scratchArray2,\n  ellipsoid: undefined,\n  minDistance: undefined,\n  granularity: undefined,\n};\n\n/**\n * Computes the geometric representation of a simple polyline, including its vertices, indices, and a bounding sphere.\n *\n * @param {SimplePolylineGeometry} simplePolylineGeometry A description of the polyline.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nSimplePolylineGeometry.createGeometry = function (simplePolylineGeometry) {\n  var positions = simplePolylineGeometry._positions;\n  var colors = simplePolylineGeometry._colors;\n  var colorsPerVertex = simplePolylineGeometry._colorsPerVertex;\n  var arcType = simplePolylineGeometry._arcType;\n  var granularity = simplePolylineGeometry._granularity;\n  var ellipsoid = simplePolylineGeometry._ellipsoid;\n\n  var minDistance = _Math_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].chordLength */ .Z.chordLength(\n    granularity,\n    ellipsoid.maximumRadius\n  );\n  var perSegmentColors = (0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors) && !colorsPerVertex;\n\n  var i;\n  var length = positions.length;\n\n  var positionValues;\n  var numberOfPositions;\n  var colorValues;\n  var color;\n  var offset = 0;\n\n  if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC || arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RHUMB */ .Z.RHUMB) {\n    var subdivisionSize;\n    var numberOfPointsFunction;\n    var generateArcFunction;\n    if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n      subdivisionSize = _Math_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].chordLength */ .Z.chordLength(\n        granularity,\n        ellipsoid.maximumRadius\n      );\n      numberOfPointsFunction = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].numberOfPoints */ .Z.numberOfPoints;\n      generateArcFunction = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].generateArc */ .Z.generateArc;\n    } else {\n      subdivisionSize = granularity;\n      numberOfPointsFunction = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].numberOfPointsRhumbLine */ .Z.numberOfPointsRhumbLine;\n      generateArcFunction = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].generateRhumbArc */ .Z.generateRhumbArc;\n    }\n\n    var heights = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].extractHeights */ .Z.extractHeights(positions, ellipsoid);\n\n    var generateArcOptions = generateArcOptionsScratch;\n    if (arcType === _ArcType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].GEODESIC */ .Z.GEODESIC) {\n      generateArcOptions.minDistance = minDistance;\n    } else {\n      generateArcOptions.granularity = granularity;\n    }\n    generateArcOptions.ellipsoid = ellipsoid;\n\n    if (perSegmentColors) {\n      var positionCount = 0;\n      for (i = 0; i < length - 1; i++) {\n        positionCount +=\n          numberOfPointsFunction(\n            positions[i],\n            positions[i + 1],\n            subdivisionSize\n          ) + 1;\n      }\n\n      positionValues = new Float64Array(positionCount * 3);\n      colorValues = new Uint8Array(positionCount * 4);\n\n      generateArcOptions.positions = scratchArray1;\n      generateArcOptions.height = scratchArray2;\n\n      var ci = 0;\n      for (i = 0; i < length - 1; ++i) {\n        scratchArray1[0] = positions[i];\n        scratchArray1[1] = positions[i + 1];\n\n        scratchArray2[0] = heights[i];\n        scratchArray2[1] = heights[i + 1];\n\n        var pos = generateArcFunction(generateArcOptions);\n\n        if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors)) {\n          var segLen = pos.length / 3;\n          color = colors[i];\n          for (var k = 0; k < segLen; ++k) {\n            colorValues[ci++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.red);\n            colorValues[ci++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.green);\n            colorValues[ci++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.blue);\n            colorValues[ci++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.alpha);\n          }\n        }\n\n        positionValues.set(pos, offset);\n        offset += pos.length;\n      }\n    } else {\n      generateArcOptions.positions = positions;\n      generateArcOptions.height = heights;\n      positionValues = new Float64Array(\n        generateArcFunction(generateArcOptions)\n      );\n\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors)) {\n        colorValues = new Uint8Array((positionValues.length / 3) * 4);\n\n        for (i = 0; i < length - 1; ++i) {\n          var p0 = positions[i];\n          var p1 = positions[i + 1];\n          var c0 = colors[i];\n          var c1 = colors[i + 1];\n          offset = interpolateColors(\n            p0,\n            p1,\n            c0,\n            c1,\n            minDistance,\n            colorValues,\n            offset\n          );\n        }\n\n        var lastColor = colors[length - 1];\n        colorValues[offset++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(lastColor.red);\n        colorValues[offset++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(lastColor.green);\n        colorValues[offset++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(lastColor.blue);\n        colorValues[offset++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(lastColor.alpha);\n      }\n    }\n  } else {\n    numberOfPositions = perSegmentColors ? length * 2 - 2 : length;\n    positionValues = new Float64Array(numberOfPositions * 3);\n    colorValues = (0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors)\n      ? new Uint8Array(numberOfPositions * 4)\n      : undefined;\n\n    var positionIndex = 0;\n    var colorIndex = 0;\n\n    for (i = 0; i < length; ++i) {\n      var p = positions[i];\n\n      if (perSegmentColors && i > 0) {\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(p, positionValues, positionIndex);\n        positionIndex += 3;\n\n        color = colors[i - 1];\n        colorValues[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.red);\n        colorValues[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.green);\n        colorValues[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.blue);\n        colorValues[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.alpha);\n      }\n\n      if (perSegmentColors && i === length - 1) {\n        break;\n      }\n\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(p, positionValues, positionIndex);\n      positionIndex += 3;\n\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors)) {\n        color = colors[i];\n        colorValues[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.red);\n        colorValues[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.green);\n        colorValues[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.blue);\n        colorValues[colorIndex++] = _Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].floatToByte */ .Z.floatToByte(color.alpha);\n      }\n    }\n  }\n\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n  attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: positionValues,\n  });\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(colors)) {\n    attributes.color = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 4,\n      values: colorValues,\n      normalize: true,\n    });\n  }\n\n  numberOfPositions = positionValues.length / 3;\n  var numberOfIndices = (numberOfPositions - 1) * 2;\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    numberOfPositions,\n    numberOfIndices\n  );\n\n  var index = 0;\n  for (i = 0; i < numberOfPositions - 1; ++i) {\n    indices[index++] = i;\n    indices[index++] = i + 1;\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].LINES */ .Z.LINES,\n    boundingSphere: _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromPoints */ .Z.fromPoints(positions),\n  });\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (SimplePolylineGeometry)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///85440\n')},68738:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(64727);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(67252);\n\n\n\n\n\n\n\n/**\n * A description of a sphere centered at the origin.\n *\n * @alias SphereGeometry\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Number} [options.radius=1.0] The radius of the sphere.\n * @param {Number} [options.stackPartitions=64] The number of times to partition the ellipsoid into stacks.\n * @param {Number} [options.slicePartitions=64] The number of times to partition the ellipsoid into radial slices.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n *\n * @exception {DeveloperError} options.slicePartitions cannot be less than three.\n * @exception {DeveloperError} options.stackPartitions cannot be less than three.\n *\n * @see SphereGeometry#createGeometry\n *\n * @example\n * var sphere = new Cesium.SphereGeometry({\n *   radius : 100.0,\n *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY\n * });\n * var geometry = Cesium.SphereGeometry.createGeometry(sphere);\n */\nfunction SphereGeometry(options) {\n  var radius = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.radius, 1.0);\n  var radii = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(radius, radius, radius);\n  var ellipsoidOptions = {\n    radii: radii,\n    stackPartitions: options.stackPartitions,\n    slicePartitions: options.slicePartitions,\n    vertexFormat: options.vertexFormat,\n  };\n\n  this._ellipsoidGeometry = new _EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(ellipsoidOptions);\n  this._workerName = "createSphereGeometry";\n}\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nSphereGeometry.packedLength = _EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {SphereGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nSphereGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  //>>includeEnd(\'debug\');\n\n  return _EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(value._ellipsoidGeometry, array, startingIndex);\n};\n\nvar scratchEllipsoidGeometry = new _EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchOptions = {\n  radius: undefined,\n  radii: new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  vertexFormat: new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(),\n  stackPartitions: undefined,\n  slicePartitions: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {SphereGeometry} [result] The object into which to store the result.\n * @returns {SphereGeometry} The modified result parameter or a new SphereGeometry instance if one was not provided.\n */\nSphereGeometry.unpack = function (array, startingIndex, result) {\n  var ellipsoidGeometry = _EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchEllipsoidGeometry\n  );\n  scratchOptions.vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(\n    ellipsoidGeometry._vertexFormat,\n    scratchOptions.vertexFormat\n  );\n  scratchOptions.stackPartitions = ellipsoidGeometry._stackPartitions;\n  scratchOptions.slicePartitions = ellipsoidGeometry._slicePartitions;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(result)) {\n    scratchOptions.radius = ellipsoidGeometry._radii.x;\n    return new SphereGeometry(scratchOptions);\n  }\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(ellipsoidGeometry._radii, scratchOptions.radii);\n  result._ellipsoidGeometry = new _EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(scratchOptions);\n  return result;\n};\n\n/**\n * Computes the geometric representation of a sphere, including its vertices, indices, and a bounding sphere.\n *\n * @param {SphereGeometry} sphereGeometry A description of the sphere.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nSphereGeometry.createGeometry = function (sphereGeometry) {\n  return _EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].createGeometry */ .Z.createGeometry(sphereGeometry._ellipsoidGeometry);\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (SphereGeometry)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjg3MzguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlDO0FBQ1Y7QUFDYztBQUNWO0FBQ29CO0FBQ1Y7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGNBQWM7QUFDekI7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQixlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxlQUFlLHFFQUFZO0FBQzNCLGtCQUFrQiwrREFBVTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0NBQWdDLHNFQUFpQjtBQUNqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSw4QkFBOEIsZ0dBQThCOztBQUU1RDtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc0ZBQW1CO0FBQ3JCOztBQUVBLFNBQVMsZ0ZBQXNCO0FBQy9COztBQUVBLG1DQUFtQyxzRUFBaUI7QUFDcEQ7QUFDQTtBQUNBLGFBQWEsK0RBQVU7QUFDdkIsb0JBQW9CLGlFQUFZO0FBQ2hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZ0JBQWdCO0FBQzNCLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQSwwQkFBMEIsb0ZBQXdCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDZFQUFrQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sZ0VBQU87QUFDZDtBQUNBO0FBQ0E7O0FBRUEsRUFBRSwyRUFBZ0I7QUFDbEIsa0NBQWtDLHNFQUFpQjtBQUNuRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLGFBQWEsb0JBQW9CO0FBQ2pDO0FBQ0E7QUFDQSxTQUFTLG9HQUFnQztBQUN6QztBQUNBLHNFQUFlLDhEQUFjLElBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9TcGhlcmVHZW9tZXRyeS5qcz82YjY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDYXJ0ZXNpYW4zIGZyb20gXCIuL0NhcnRlc2lhbjMuanNcIjtcbmltcG9ydCBDaGVjayBmcm9tIFwiLi9DaGVjay5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcbmltcG9ydCBFbGxpcHNvaWRHZW9tZXRyeSBmcm9tIFwiLi9FbGxpcHNvaWRHZW9tZXRyeS5qc1wiO1xuaW1wb3J0IFZlcnRleEZvcm1hdCBmcm9tIFwiLi9WZXJ0ZXhGb3JtYXQuanNcIjtcblxuLyoqXG4gKiBBIGRlc2NyaXB0aW9uIG9mIGEgc3BoZXJlIGNlbnRlcmVkIGF0IHRoZSBvcmlnaW4uXG4gKlxuICogQGFsaWFzIFNwaGVyZUdlb21ldHJ5XG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5yYWRpdXM9MS4wXSBUaGUgcmFkaXVzIG9mIHRoZSBzcGhlcmUuXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuc3RhY2tQYXJ0aXRpb25zPTY0XSBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIHBhcnRpdGlvbiB0aGUgZWxsaXBzb2lkIGludG8gc3RhY2tzLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnNsaWNlUGFydGl0aW9ucz02NF0gVGhlIG51bWJlciBvZiB0aW1lcyB0byBwYXJ0aXRpb24gdGhlIGVsbGlwc29pZCBpbnRvIHJhZGlhbCBzbGljZXMuXG4gKiBAcGFyYW0ge1ZlcnRleEZvcm1hdH0gW29wdGlvbnMudmVydGV4Rm9ybWF0PVZlcnRleEZvcm1hdC5ERUZBVUxUXSBUaGUgdmVydGV4IGF0dHJpYnV0ZXMgdG8gYmUgY29tcHV0ZWQuXG4gKlxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IG9wdGlvbnMuc2xpY2VQYXJ0aXRpb25zIGNhbm5vdCBiZSBsZXNzIHRoYW4gdGhyZWUuXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gb3B0aW9ucy5zdGFja1BhcnRpdGlvbnMgY2Fubm90IGJlIGxlc3MgdGhhbiB0aHJlZS5cbiAqXG4gKiBAc2VlIFNwaGVyZUdlb21ldHJ5I2NyZWF0ZUdlb21ldHJ5XG4gKlxuICogQGV4YW1wbGVcbiAqIHZhciBzcGhlcmUgPSBuZXcgQ2VzaXVtLlNwaGVyZUdlb21ldHJ5KHtcbiAqICAgcmFkaXVzIDogMTAwLjAsXG4gKiAgIHZlcnRleEZvcm1hdCA6IENlc2l1bS5WZXJ0ZXhGb3JtYXQuUE9TSVRJT05fT05MWVxuICogfSk7XG4gKiB2YXIgZ2VvbWV0cnkgPSBDZXNpdW0uU3BoZXJlR2VvbWV0cnkuY3JlYXRlR2VvbWV0cnkoc3BoZXJlKTtcbiAqL1xuZnVuY3Rpb24gU3BoZXJlR2VvbWV0cnkob3B0aW9ucykge1xuICB2YXIgcmFkaXVzID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMucmFkaXVzLCAxLjApO1xuICB2YXIgcmFkaWkgPSBuZXcgQ2FydGVzaWFuMyhyYWRpdXMsIHJhZGl1cywgcmFkaXVzKTtcbiAgdmFyIGVsbGlwc29pZE9wdGlvbnMgPSB7XG4gICAgcmFkaWk6IHJhZGlpLFxuICAgIHN0YWNrUGFydGl0aW9uczogb3B0aW9ucy5zdGFja1BhcnRpdGlvbnMsXG4gICAgc2xpY2VQYXJ0aXRpb25zOiBvcHRpb25zLnNsaWNlUGFydGl0aW9ucyxcbiAgICB2ZXJ0ZXhGb3JtYXQ6IG9wdGlvbnMudmVydGV4Rm9ybWF0LFxuICB9O1xuXG4gIHRoaXMuX2VsbGlwc29pZEdlb21ldHJ5ID0gbmV3IEVsbGlwc29pZEdlb21ldHJ5KGVsbGlwc29pZE9wdGlvbnMpO1xuICB0aGlzLl93b3JrZXJOYW1lID0gXCJjcmVhdGVTcGhlcmVHZW9tZXRyeVwiO1xufVxuXG4vKipcbiAqIFRoZSBudW1iZXIgb2YgZWxlbWVudHMgdXNlZCB0byBwYWNrIHRoZSBvYmplY3QgaW50byBhbiBhcnJheS5cbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKi9cblNwaGVyZUdlb21ldHJ5LnBhY2tlZExlbmd0aCA9IEVsbGlwc29pZEdlb21ldHJ5LnBhY2tlZExlbmd0aDtcblxuLyoqXG4gKiBTdG9yZXMgdGhlIHByb3ZpZGVkIGluc3RhbmNlIGludG8gdGhlIHByb3ZpZGVkIGFycmF5LlxuICpcbiAqIEBwYXJhbSB7U3BoZXJlR2VvbWV0cnl9IHZhbHVlIFRoZSB2YWx1ZSB0byBwYWNrLlxuICogQHBhcmFtIHtOdW1iZXJbXX0gYXJyYXkgVGhlIGFycmF5IHRvIHBhY2sgaW50by5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbc3RhcnRpbmdJbmRleD0wXSBUaGUgaW5kZXggaW50byB0aGUgYXJyYXkgYXQgd2hpY2ggdG8gc3RhcnQgcGFja2luZyB0aGUgZWxlbWVudHMuXG4gKlxuICogQHJldHVybnMge051bWJlcltdfSBUaGUgYXJyYXkgdGhhdCB3YXMgcGFja2VkIGludG9cbiAqL1xuU3BoZXJlR2VvbWV0cnkucGFjayA9IGZ1bmN0aW9uICh2YWx1ZSwgYXJyYXksIHN0YXJ0aW5nSW5kZXgpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcInZhbHVlXCIsIHZhbHVlKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgcmV0dXJuIEVsbGlwc29pZEdlb21ldHJ5LnBhY2sodmFsdWUuX2VsbGlwc29pZEdlb21ldHJ5LCBhcnJheSwgc3RhcnRpbmdJbmRleCk7XG59O1xuXG52YXIgc2NyYXRjaEVsbGlwc29pZEdlb21ldHJ5ID0gbmV3IEVsbGlwc29pZEdlb21ldHJ5KCk7XG52YXIgc2NyYXRjaE9wdGlvbnMgPSB7XG4gIHJhZGl1czogdW5kZWZpbmVkLFxuICByYWRpaTogbmV3IENhcnRlc2lhbjMoKSxcbiAgdmVydGV4Rm9ybWF0OiBuZXcgVmVydGV4Rm9ybWF0KCksXG4gIHN0YWNrUGFydGl0aW9uczogdW5kZWZpbmVkLFxuICBzbGljZVBhcnRpdGlvbnM6IHVuZGVmaW5lZCxcbn07XG5cbi8qKlxuICogUmV0cmlldmVzIGFuIGluc3RhbmNlIGZyb20gYSBwYWNrZWQgYXJyYXkuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJbXX0gYXJyYXkgVGhlIHBhY2tlZCBhcnJheS5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbc3RhcnRpbmdJbmRleD0wXSBUaGUgc3RhcnRpbmcgaW5kZXggb2YgdGhlIGVsZW1lbnQgdG8gYmUgdW5wYWNrZWQuXG4gKiBAcGFyYW0ge1NwaGVyZUdlb21ldHJ5fSBbcmVzdWx0XSBUaGUgb2JqZWN0IGludG8gd2hpY2ggdG8gc3RvcmUgdGhlIHJlc3VsdC5cbiAqIEByZXR1cm5zIHtTcGhlcmVHZW9tZXRyeX0gVGhlIG1vZGlmaWVkIHJlc3VsdCBwYXJhbWV0ZXIgb3IgYSBuZXcgU3BoZXJlR2VvbWV0cnkgaW5zdGFuY2UgaWYgb25lIHdhcyBub3QgcHJvdmlkZWQuXG4gKi9cblNwaGVyZUdlb21ldHJ5LnVucGFjayA9IGZ1bmN0aW9uIChhcnJheSwgc3RhcnRpbmdJbmRleCwgcmVzdWx0KSB7XG4gIHZhciBlbGxpcHNvaWRHZW9tZXRyeSA9IEVsbGlwc29pZEdlb21ldHJ5LnVucGFjayhcbiAgICBhcnJheSxcbiAgICBzdGFydGluZ0luZGV4LFxuICAgIHNjcmF0Y2hFbGxpcHNvaWRHZW9tZXRyeVxuICApO1xuICBzY3JhdGNoT3B0aW9ucy52ZXJ0ZXhGb3JtYXQgPSBWZXJ0ZXhGb3JtYXQuY2xvbmUoXG4gICAgZWxsaXBzb2lkR2VvbWV0cnkuX3ZlcnRleEZvcm1hdCxcbiAgICBzY3JhdGNoT3B0aW9ucy52ZXJ0ZXhGb3JtYXRcbiAgKTtcbiAgc2NyYXRjaE9wdGlvbnMuc3RhY2tQYXJ0aXRpb25zID0gZWxsaXBzb2lkR2VvbWV0cnkuX3N0YWNrUGFydGl0aW9ucztcbiAgc2NyYXRjaE9wdGlvbnMuc2xpY2VQYXJ0aXRpb25zID0gZWxsaXBzb2lkR2VvbWV0cnkuX3NsaWNlUGFydGl0aW9ucztcblxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHNjcmF0Y2hPcHRpb25zLnJhZGl1cyA9IGVsbGlwc29pZEdlb21ldHJ5Ll9yYWRpaS54O1xuICAgIHJldHVybiBuZXcgU3BoZXJlR2VvbWV0cnkoc2NyYXRjaE9wdGlvbnMpO1xuICB9XG5cbiAgQ2FydGVzaWFuMy5jbG9uZShlbGxpcHNvaWRHZW9tZXRyeS5fcmFkaWksIHNjcmF0Y2hPcHRpb25zLnJhZGlpKTtcbiAgcmVzdWx0Ll9lbGxpcHNvaWRHZW9tZXRyeSA9IG5ldyBFbGxpcHNvaWRHZW9tZXRyeShzY3JhdGNoT3B0aW9ucyk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIENvbXB1dGVzIHRoZSBnZW9tZXRyaWMgcmVwcmVzZW50YXRpb24gb2YgYSBzcGhlcmUsIGluY2x1ZGluZyBpdHMgdmVydGljZXMsIGluZGljZXMsIGFuZCBhIGJvdW5kaW5nIHNwaGVyZS5cbiAqXG4gKiBAcGFyYW0ge1NwaGVyZUdlb21ldHJ5fSBzcGhlcmVHZW9tZXRyeSBBIGRlc2NyaXB0aW9uIG9mIHRoZSBzcGhlcmUuXG4gKiBAcmV0dXJucyB7R2VvbWV0cnl8dW5kZWZpbmVkfSBUaGUgY29tcHV0ZWQgdmVydGljZXMgYW5kIGluZGljZXMuXG4gKi9cblNwaGVyZUdlb21ldHJ5LmNyZWF0ZUdlb21ldHJ5ID0gZnVuY3Rpb24gKHNwaGVyZUdlb21ldHJ5KSB7XG4gIHJldHVybiBFbGxpcHNvaWRHZW9tZXRyeS5jcmVhdGVHZW9tZXRyeShzcGhlcmVHZW9tZXRyeS5fZWxsaXBzb2lkR2VvbWV0cnkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFNwaGVyZUdlb21ldHJ5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///68738\n')},38779:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82982);\n/* harmony import */ var _EllipsoidOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75619);\n\n\n\n\n\n\n/**\n * A description of the outline of a sphere.\n *\n * @alias SphereOutlineGeometry\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Number} [options.radius=1.0] The radius of the sphere.\n * @param {Number} [options.stackPartitions=10] The count of stacks for the sphere (1 greater than the number of parallel lines).\n * @param {Number} [options.slicePartitions=8] The count of slices for the sphere (Equal to the number of radial lines).\n * @param {Number} [options.subdivisions=200] The number of points per line, determining the granularity of the curvature .\n *\n * @exception {DeveloperError} options.stackPartitions must be greater than or equal to one.\n * @exception {DeveloperError} options.slicePartitions must be greater than or equal to zero.\n * @exception {DeveloperError} options.subdivisions must be greater than or equal to zero.\n *\n * @example\n * var sphere = new Cesium.SphereOutlineGeometry({\n *   radius : 100.0,\n *   stackPartitions : 6,\n *   slicePartitions: 5\n * });\n * var geometry = Cesium.SphereOutlineGeometry.createGeometry(sphere);\n */\nfunction SphereOutlineGeometry(options) {\n  var radius = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.radius, 1.0);\n  var radii = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(radius, radius, radius);\n  var ellipsoidOptions = {\n    radii: radii,\n    stackPartitions: options.stackPartitions,\n    slicePartitions: options.slicePartitions,\n    subdivisions: options.subdivisions,\n  };\n\n  this._ellipsoidGeometry = new _EllipsoidOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(ellipsoidOptions);\n  this._workerName = "createSphereOutlineGeometry";\n}\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nSphereOutlineGeometry.packedLength = _EllipsoidOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {SphereOutlineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nSphereOutlineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  //>>includeEnd(\'debug\');\n\n  return _EllipsoidOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(\n    value._ellipsoidGeometry,\n    array,\n    startingIndex\n  );\n};\n\nvar scratchEllipsoidGeometry = new _EllipsoidOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchOptions = {\n  radius: undefined,\n  radii: new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  stackPartitions: undefined,\n  slicePartitions: undefined,\n  subdivisions: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {SphereOutlineGeometry} [result] The object into which to store the result.\n * @returns {SphereOutlineGeometry} The modified result parameter or a new SphereOutlineGeometry instance if one was not provided.\n */\nSphereOutlineGeometry.unpack = function (array, startingIndex, result) {\n  var ellipsoidGeometry = _EllipsoidOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchEllipsoidGeometry\n  );\n  scratchOptions.stackPartitions = ellipsoidGeometry._stackPartitions;\n  scratchOptions.slicePartitions = ellipsoidGeometry._slicePartitions;\n  scratchOptions.subdivisions = ellipsoidGeometry._subdivisions;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    scratchOptions.radius = ellipsoidGeometry._radii.x;\n    return new SphereOutlineGeometry(scratchOptions);\n  }\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(ellipsoidGeometry._radii, scratchOptions.radii);\n  result._ellipsoidGeometry = new _EllipsoidOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(scratchOptions);\n  return result;\n};\n\n/**\n * Computes the geometric representation of an outline of a sphere, including its vertices, indices, and a bounding sphere.\n *\n * @param {SphereOutlineGeometry} sphereGeometry A description of the sphere outline.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nSphereOutlineGeometry.createGeometry = function (sphereGeometry) {\n  return _EllipsoidOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].createGeometry */ .Z.createGeometry(\n    sphereGeometry._ellipsoidGeometry\n  );\n};\n/* harmony default export */ __webpack_exports__["Z"] = (SphereOutlineGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzg3NzkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFDVjtBQUNjO0FBQ1Y7QUFDa0M7O0FBRXJFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQixlQUFlLGdCQUFnQjtBQUMvQixlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsZUFBZSxxRUFBWTtBQUMzQixrQkFBa0IsK0RBQVU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdDQUFnQyw2RUFBd0I7QUFDeEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EscUNBQXFDLHVHQUFxQzs7QUFFMUU7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxFQUFFLHNGQUFtQjtBQUNyQjs7QUFFQSxTQUFTLHVGQUE2QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1DQUFtQyw2RUFBd0I7QUFDM0Q7QUFDQTtBQUNBLGFBQWEsK0RBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixXQUFXLHVCQUF1QjtBQUNsQyxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0EsMEJBQTBCLDJGQUErQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPLGdFQUFPO0FBQ2Q7QUFDQTtBQUNBOztBQUVBLEVBQUUsMkVBQWdCO0FBQ2xCLGtDQUFrQyw2RUFBd0I7QUFDMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxhQUFhLG9CQUFvQjtBQUNqQztBQUNBO0FBQ0EsU0FBUywyR0FBdUM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EseURBQWUscUJBQXFCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9TcGhlcmVPdXRsaW5lR2VvbWV0cnkuanM/YTdmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2FydGVzaWFuMyBmcm9tIFwiLi9DYXJ0ZXNpYW4zLmpzXCI7XG5pbXBvcnQgQ2hlY2sgZnJvbSBcIi4vQ2hlY2suanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4vZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRWxsaXBzb2lkT3V0bGluZUdlb21ldHJ5IGZyb20gXCIuL0VsbGlwc29pZE91dGxpbmVHZW9tZXRyeS5qc1wiO1xuXG4vKipcbiAqIEEgZGVzY3JpcHRpb24gb2YgdGhlIG91dGxpbmUgb2YgYSBzcGhlcmUuXG4gKlxuICogQGFsaWFzIFNwaGVyZU91dGxpbmVHZW9tZXRyeVxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBPYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMucmFkaXVzPTEuMF0gVGhlIHJhZGl1cyBvZiB0aGUgc3BoZXJlLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnN0YWNrUGFydGl0aW9ucz0xMF0gVGhlIGNvdW50IG9mIHN0YWNrcyBmb3IgdGhlIHNwaGVyZSAoMSBncmVhdGVyIHRoYW4gdGhlIG51bWJlciBvZiBwYXJhbGxlbCBsaW5lcykuXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuc2xpY2VQYXJ0aXRpb25zPThdIFRoZSBjb3VudCBvZiBzbGljZXMgZm9yIHRoZSBzcGhlcmUgKEVxdWFsIHRvIHRoZSBudW1iZXIgb2YgcmFkaWFsIGxpbmVzKS5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5zdWJkaXZpc2lvbnM9MjAwXSBUaGUgbnVtYmVyIG9mIHBvaW50cyBwZXIgbGluZSwgZGV0ZXJtaW5pbmcgdGhlIGdyYW51bGFyaXR5IG9mIHRoZSBjdXJ2YXR1cmUgLlxuICpcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBvcHRpb25zLnN0YWNrUGFydGl0aW9ucyBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byBvbmUuXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gb3B0aW9ucy5zbGljZVBhcnRpdGlvbnMgbXVzdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gemVyby5cbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBvcHRpb25zLnN1YmRpdmlzaW9ucyBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byB6ZXJvLlxuICpcbiAqIEBleGFtcGxlXG4gKiB2YXIgc3BoZXJlID0gbmV3IENlc2l1bS5TcGhlcmVPdXRsaW5lR2VvbWV0cnkoe1xuICogICByYWRpdXMgOiAxMDAuMCxcbiAqICAgc3RhY2tQYXJ0aXRpb25zIDogNixcbiAqICAgc2xpY2VQYXJ0aXRpb25zOiA1XG4gKiB9KTtcbiAqIHZhciBnZW9tZXRyeSA9IENlc2l1bS5TcGhlcmVPdXRsaW5lR2VvbWV0cnkuY3JlYXRlR2VvbWV0cnkoc3BoZXJlKTtcbiAqL1xuZnVuY3Rpb24gU3BoZXJlT3V0bGluZUdlb21ldHJ5KG9wdGlvbnMpIHtcbiAgdmFyIHJhZGl1cyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLnJhZGl1cywgMS4wKTtcbiAgdmFyIHJhZGlpID0gbmV3IENhcnRlc2lhbjMocmFkaXVzLCByYWRpdXMsIHJhZGl1cyk7XG4gIHZhciBlbGxpcHNvaWRPcHRpb25zID0ge1xuICAgIHJhZGlpOiByYWRpaSxcbiAgICBzdGFja1BhcnRpdGlvbnM6IG9wdGlvbnMuc3RhY2tQYXJ0aXRpb25zLFxuICAgIHNsaWNlUGFydGl0aW9uczogb3B0aW9ucy5zbGljZVBhcnRpdGlvbnMsXG4gICAgc3ViZGl2aXNpb25zOiBvcHRpb25zLnN1YmRpdmlzaW9ucyxcbiAgfTtcblxuICB0aGlzLl9lbGxpcHNvaWRHZW9tZXRyeSA9IG5ldyBFbGxpcHNvaWRPdXRsaW5lR2VvbWV0cnkoZWxsaXBzb2lkT3B0aW9ucyk7XG4gIHRoaXMuX3dvcmtlck5hbWUgPSBcImNyZWF0ZVNwaGVyZU91dGxpbmVHZW9tZXRyeVwiO1xufVxuXG4vKipcbiAqIFRoZSBudW1iZXIgb2YgZWxlbWVudHMgdXNlZCB0byBwYWNrIHRoZSBvYmplY3QgaW50byBhbiBhcnJheS5cbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKi9cblNwaGVyZU91dGxpbmVHZW9tZXRyeS5wYWNrZWRMZW5ndGggPSBFbGxpcHNvaWRPdXRsaW5lR2VvbWV0cnkucGFja2VkTGVuZ3RoO1xuXG4vKipcbiAqIFN0b3JlcyB0aGUgcHJvdmlkZWQgaW5zdGFuY2UgaW50byB0aGUgcHJvdmlkZWQgYXJyYXkuXG4gKlxuICogQHBhcmFtIHtTcGhlcmVPdXRsaW5lR2VvbWV0cnl9IHZhbHVlIFRoZSB2YWx1ZSB0byBwYWNrLlxuICogQHBhcmFtIHtOdW1iZXJbXX0gYXJyYXkgVGhlIGFycmF5IHRvIHBhY2sgaW50by5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbc3RhcnRpbmdJbmRleD0wXSBUaGUgaW5kZXggaW50byB0aGUgYXJyYXkgYXQgd2hpY2ggdG8gc3RhcnQgcGFja2luZyB0aGUgZWxlbWVudHMuXG4gKlxuICogQHJldHVybnMge051bWJlcltdfSBUaGUgYXJyYXkgdGhhdCB3YXMgcGFja2VkIGludG9cbiAqL1xuU3BoZXJlT3V0bGluZUdlb21ldHJ5LnBhY2sgPSBmdW5jdGlvbiAodmFsdWUsIGFycmF5LCBzdGFydGluZ0luZGV4KSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5vYmplY3QoXCJ2YWx1ZVwiLCB2YWx1ZSk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHJldHVybiBFbGxpcHNvaWRPdXRsaW5lR2VvbWV0cnkucGFjayhcbiAgICB2YWx1ZS5fZWxsaXBzb2lkR2VvbWV0cnksXG4gICAgYXJyYXksXG4gICAgc3RhcnRpbmdJbmRleFxuICApO1xufTtcblxudmFyIHNjcmF0Y2hFbGxpcHNvaWRHZW9tZXRyeSA9IG5ldyBFbGxpcHNvaWRPdXRsaW5lR2VvbWV0cnkoKTtcbnZhciBzY3JhdGNoT3B0aW9ucyA9IHtcbiAgcmFkaXVzOiB1bmRlZmluZWQsXG4gIHJhZGlpOiBuZXcgQ2FydGVzaWFuMygpLFxuICBzdGFja1BhcnRpdGlvbnM6IHVuZGVmaW5lZCxcbiAgc2xpY2VQYXJ0aXRpb25zOiB1bmRlZmluZWQsXG4gIHN1YmRpdmlzaW9uczogdW5kZWZpbmVkLFxufTtcblxuLyoqXG4gKiBSZXRyaWV2ZXMgYW4gaW5zdGFuY2UgZnJvbSBhIHBhY2tlZCBhcnJheS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcltdfSBhcnJheSBUaGUgcGFja2VkIGFycmF5LlxuICogQHBhcmFtIHtOdW1iZXJ9IFtzdGFydGluZ0luZGV4PTBdIFRoZSBzdGFydGluZyBpbmRleCBvZiB0aGUgZWxlbWVudCB0byBiZSB1bnBhY2tlZC5cbiAqIEBwYXJhbSB7U3BoZXJlT3V0bGluZUdlb21ldHJ5fSBbcmVzdWx0XSBUaGUgb2JqZWN0IGludG8gd2hpY2ggdG8gc3RvcmUgdGhlIHJlc3VsdC5cbiAqIEByZXR1cm5zIHtTcGhlcmVPdXRsaW5lR2VvbWV0cnl9IFRoZSBtb2RpZmllZCByZXN1bHQgcGFyYW1ldGVyIG9yIGEgbmV3IFNwaGVyZU91dGxpbmVHZW9tZXRyeSBpbnN0YW5jZSBpZiBvbmUgd2FzIG5vdCBwcm92aWRlZC5cbiAqL1xuU3BoZXJlT3V0bGluZUdlb21ldHJ5LnVucGFjayA9IGZ1bmN0aW9uIChhcnJheSwgc3RhcnRpbmdJbmRleCwgcmVzdWx0KSB7XG4gIHZhciBlbGxpcHNvaWRHZW9tZXRyeSA9IEVsbGlwc29pZE91dGxpbmVHZW9tZXRyeS51bnBhY2soXG4gICAgYXJyYXksXG4gICAgc3RhcnRpbmdJbmRleCxcbiAgICBzY3JhdGNoRWxsaXBzb2lkR2VvbWV0cnlcbiAgKTtcbiAgc2NyYXRjaE9wdGlvbnMuc3RhY2tQYXJ0aXRpb25zID0gZWxsaXBzb2lkR2VvbWV0cnkuX3N0YWNrUGFydGl0aW9ucztcbiAgc2NyYXRjaE9wdGlvbnMuc2xpY2VQYXJ0aXRpb25zID0gZWxsaXBzb2lkR2VvbWV0cnkuX3NsaWNlUGFydGl0aW9ucztcbiAgc2NyYXRjaE9wdGlvbnMuc3ViZGl2aXNpb25zID0gZWxsaXBzb2lkR2VvbWV0cnkuX3N1YmRpdmlzaW9ucztcblxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHNjcmF0Y2hPcHRpb25zLnJhZGl1cyA9IGVsbGlwc29pZEdlb21ldHJ5Ll9yYWRpaS54O1xuICAgIHJldHVybiBuZXcgU3BoZXJlT3V0bGluZUdlb21ldHJ5KHNjcmF0Y2hPcHRpb25zKTtcbiAgfVxuXG4gIENhcnRlc2lhbjMuY2xvbmUoZWxsaXBzb2lkR2VvbWV0cnkuX3JhZGlpLCBzY3JhdGNoT3B0aW9ucy5yYWRpaSk7XG4gIHJlc3VsdC5fZWxsaXBzb2lkR2VvbWV0cnkgPSBuZXcgRWxsaXBzb2lkT3V0bGluZUdlb21ldHJ5KHNjcmF0Y2hPcHRpb25zKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIGdlb21ldHJpYyByZXByZXNlbnRhdGlvbiBvZiBhbiBvdXRsaW5lIG9mIGEgc3BoZXJlLCBpbmNsdWRpbmcgaXRzIHZlcnRpY2VzLCBpbmRpY2VzLCBhbmQgYSBib3VuZGluZyBzcGhlcmUuXG4gKlxuICogQHBhcmFtIHtTcGhlcmVPdXRsaW5lR2VvbWV0cnl9IHNwaGVyZUdlb21ldHJ5IEEgZGVzY3JpcHRpb24gb2YgdGhlIHNwaGVyZSBvdXRsaW5lLlxuICogQHJldHVybnMge0dlb21ldHJ5fHVuZGVmaW5lZH0gVGhlIGNvbXB1dGVkIHZlcnRpY2VzIGFuZCBpbmRpY2VzLlxuICovXG5TcGhlcmVPdXRsaW5lR2VvbWV0cnkuY3JlYXRlR2VvbWV0cnkgPSBmdW5jdGlvbiAoc3BoZXJlR2VvbWV0cnkpIHtcbiAgcmV0dXJuIEVsbGlwc29pZE91dGxpbmVHZW9tZXRyeS5jcmVhdGVHZW9tZXRyeShcbiAgICBzcGhlcmVHZW9tZXRyeS5fZWxsaXBzb2lkR2VvbWV0cnlcbiAgKTtcbn07XG5leHBvcnQgZGVmYXVsdCBTcGhlcmVPdXRsaW5lR2VvbWV0cnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38779\n')},67807:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82982);\n\n\n\n\n/**\n * A set of curvilinear 3-dimensional coordinates.\n *\n * @alias Spherical\n * @constructor\n *\n * @param {Number} [clock=0.0] The angular coordinate lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.\n * @param {Number} [cone=0.0] The angular coordinate measured from the positive z-axis and toward the negative z-axis.\n * @param {Number} [magnitude=1.0] The linear coordinate measured from the origin.\n */\nfunction Spherical(clock, cone, magnitude) {\n  /**\n   * The clock component.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.clock = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(clock, 0.0);\n  /**\n   * The cone component.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.cone = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(cone, 0.0);\n  /**\n   * The magnitude component.\n   * @type {Number}\n   * @default 1.0\n   */\n  this.magnitude = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(magnitude, 1.0);\n}\n\n/**\n * Converts the provided Cartesian3 into Spherical coordinates.\n *\n * @param {Cartesian3} cartesian3 The Cartesian3 to be converted to Spherical.\n * @param {Spherical} [result] The object in which the result will be stored, if undefined a new instance will be created.\n * @returns {Spherical} The modified result parameter, or a new instance if one was not provided.\n */\nSpherical.fromCartesian3 = function (cartesian3, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("cartesian3", cartesian3);\n  //>>includeEnd(\'debug\');\n\n  var x = cartesian3.x;\n  var y = cartesian3.y;\n  var z = cartesian3.z;\n  var radialSquared = x * x + y * y;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(result)) {\n    result = new Spherical();\n  }\n\n  result.clock = Math.atan2(y, x);\n  result.cone = Math.atan2(Math.sqrt(radialSquared), z);\n  result.magnitude = Math.sqrt(radialSquared + z * z);\n  return result;\n};\n\n/**\n * Creates a duplicate of a Spherical.\n *\n * @param {Spherical} spherical The spherical to clone.\n * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n * @returns {Spherical} The modified result parameter or a new instance if result was undefined. (Returns undefined if spherical is undefined)\n */\nSpherical.clone = function (spherical, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(spherical)) {\n    return undefined;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(result)) {\n    return new Spherical(spherical.clock, spherical.cone, spherical.magnitude);\n  }\n\n  result.clock = spherical.clock;\n  result.cone = spherical.cone;\n  result.magnitude = spherical.magnitude;\n  return result;\n};\n\n/**\n * Computes the normalized version of the provided spherical.\n *\n * @param {Spherical} spherical The spherical to be normalized.\n * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n * @returns {Spherical} The modified result parameter or a new instance if result was undefined.\n */\nSpherical.normalize = function (spherical, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("spherical", spherical);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(result)) {\n    return new Spherical(spherical.clock, spherical.cone, 1.0);\n  }\n\n  result.clock = spherical.clock;\n  result.cone = spherical.cone;\n  result.magnitude = 1.0;\n  return result;\n};\n\n/**\n * Returns true if the first spherical is equal to the second spherical, false otherwise.\n *\n * @param {Spherical} left The first Spherical to be compared.\n * @param {Spherical} right The second Spherical to be compared.\n * @returns {Boolean} true if the first spherical is equal to the second spherical, false otherwise.\n */\nSpherical.equals = function (left, right) {\n  return (\n    left === right ||\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(left) &&\n      (0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(right) &&\n      left.clock === right.clock &&\n      left.cone === right.cone &&\n      left.magnitude === right.magnitude)\n  );\n};\n\n/**\n * Returns true if the first spherical is within the provided epsilon of the second spherical, false otherwise.\n *\n * @param {Spherical} left The first Spherical to be compared.\n * @param {Spherical} right The second Spherical to be compared.\n * @param {Number} [epsilon=0.0] The epsilon to compare against.\n * @returns {Boolean} true if the first spherical is within the provided epsilon of the second spherical, false otherwise.\n */\nSpherical.equalsEpsilon = function (left, right, epsilon) {\n  epsilon = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(epsilon, 0.0);\n  return (\n    left === right ||\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(left) &&\n      (0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(right) &&\n      Math.abs(left.clock - right.clock) <= epsilon &&\n      Math.abs(left.cone - right.cone) <= epsilon &&\n      Math.abs(left.magnitude - right.magnitude) <= epsilon)\n  );\n};\n\n/**\n * Returns true if this spherical is equal to the provided spherical, false otherwise.\n *\n * @param {Spherical} other The Spherical to be compared.\n * @returns {Boolean} true if this spherical is equal to the provided spherical, false otherwise.\n */\nSpherical.prototype.equals = function (other) {\n  return Spherical.equals(this, other);\n};\n\n/**\n * Creates a duplicate of this Spherical.\n *\n * @param {Spherical} [result] The object to store the result into, if undefined a new instance will be created.\n * @returns {Spherical} The modified result parameter or a new instance if result was undefined.\n */\nSpherical.prototype.clone = function (result) {\n  return Spherical.clone(this, result);\n};\n\n/**\n * Returns true if this spherical is within the provided epsilon of the provided spherical, false otherwise.\n *\n * @param {Spherical} other The Spherical to be compared.\n * @param {Number} epsilon The epsilon to compare against.\n * @returns {Boolean} true if this spherical is within the provided epsilon of the provided spherical, false otherwise.\n */\nSpherical.prototype.equalsEpsilon = function (other, epsilon) {\n  return Spherical.equalsEpsilon(this, other, epsilon);\n};\n\n/**\n * Returns a string representing this instance in the format (clock, cone, magnitude).\n *\n * @returns {String} A string representing this instance.\n */\nSpherical.prototype.toString = function () {\n  return "(" + this.clock + ", " + this.cone + ", " + this.magnitude + ")";\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Spherical);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///67807\n')},84543:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(99417);\n\n\n\n\n\n\n/**\n * Creates a curve parameterized and evaluated by time. This type describes an interface\n * and is not intended to be instantiated directly.\n *\n * @alias Spline\n * @constructor\n *\n * @see CatmullRomSpline\n * @see HermiteSpline\n * @see LinearSpline\n * @see QuaternionSpline\n */\nfunction Spline() {\n  /**\n   * An array of times for the control points.\n   * @type {Number[]}\n   * @default undefined\n   */\n  this.times = undefined;\n\n  /**\n   * An array of control points.\n   * @type {Cartesian3[]|Quaternion[]}\n   * @default undefined\n   */\n  this.points = undefined;\n\n  _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n}\n\n/**\n * Evaluates the curve at a given time.\n * @function\n *\n * @param {Number} time The time at which to evaluate the curve.\n * @param {Cartesian3|Quaternion|Number[]} [result] The object onto which to store the result.\n * @returns {Cartesian3|Quaternion|Number[]} The modified result parameter or a new instance of the point on the curve at the given time.\n *\n * @exception {DeveloperError} time must be in the range <code>[t<sub>0</sub>, t<sub>n</sub>]</code>, where <code>t<sub>0</sub></code>\n *                             is the first element in the array <code>times</code> and <code>t<sub>n</sub></code> is the last element\n *                             in the array <code>times</code>.\n */\nSpline.prototype.evaluate = _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError;\n\n/**\n * Finds an index <code>i</code> in <code>times</code> such that the parameter\n * <code>time</code> is in the interval <code>[times[i], times[i + 1]]</code>.\n *\n * @param {Number} time The time.\n * @param {Number} startIndex The index from which to start the search.\n * @returns {Number} The index for the element at the start of the interval.\n *\n * @exception {DeveloperError} time must be in the range <code>[t<sub>0</sub>, t<sub>n</sub>]</code>, where <code>t<sub>0</sub></code>\n *                             is the first element in the array <code>times</code> and <code>t<sub>n</sub></code> is the last element\n *                             in the array <code>times</code>.\n */\nSpline.prototype.findTimeInterval = function (time, startIndex) {\n  var times = this.times;\n  var length = times.length;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(time)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("time is required.");\n  }\n  if (time < times[0] || time > times[length - 1]) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("time is out of range.");\n  }\n  //>>includeEnd(\'debug\');\n\n  // Take advantage of temporal coherence by checking current, next and previous intervals\n  // for containment of time.\n  startIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(startIndex, 0);\n\n  if (time >= times[startIndex]) {\n    if (startIndex + 1 < length && time < times[startIndex + 1]) {\n      return startIndex;\n    } else if (startIndex + 2 < length && time < times[startIndex + 2]) {\n      return startIndex + 1;\n    }\n  } else if (startIndex - 1 >= 0 && time >= times[startIndex - 1]) {\n    return startIndex - 1;\n  }\n\n  // The above failed so do a linear search. For the use cases so far, the\n  // length of the list is less than 10. In the future, if there is a bottle neck,\n  // it might be here.\n\n  var i;\n  if (time > times[startIndex]) {\n    for (i = startIndex; i < length - 1; ++i) {\n      if (time >= times[i] && time < times[i + 1]) {\n        break;\n      }\n    }\n  } else {\n    for (i = startIndex - 1; i >= 0; --i) {\n      if (time >= times[i] && time < times[i + 1]) {\n        break;\n      }\n    }\n  }\n\n  if (i === length - 1) {\n    i = length - 2;\n  }\n\n  return i;\n};\n\n/**\n * Wraps the given time to the period covered by the spline.\n * @function\n *\n * @param {Number} time The time.\n * @return {Number} The time, wrapped around the animation period.\n */\nSpline.prototype.wrapTime = function (time) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("time", time);\n  //>>includeEnd(\'debug\');\n\n  var times = this.times;\n  var timeEnd = times[times.length - 1];\n  var timeStart = times[0];\n  var timeStretch = timeEnd - timeStart;\n  var divs;\n  if (time < timeStart) {\n    divs = Math.floor((timeStart - time) / timeStretch) + 1;\n    time += divs * timeStretch;\n  }\n  if (time > timeEnd) {\n    divs = Math.floor((time - timeEnd) / timeStretch) + 1;\n    time -= divs * timeStretch;\n  }\n  return time;\n};\n\n/**\n * Clamps the given time to the period covered by the spline.\n * @function\n *\n * @param {Number} time The time.\n * @return {Number} The time, clamped to the animation period.\n */\nSpline.prototype.clampTime = function (time) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("time", time);\n  //>>includeEnd(\'debug\');\n\n  var times = this.times;\n  return _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clamp */ .Z.clamp(time, times[0], times[times.length - 1]);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Spline);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84543\n')}}]);