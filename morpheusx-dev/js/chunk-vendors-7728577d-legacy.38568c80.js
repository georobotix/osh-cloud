"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[2161],{17106:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51688);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(92062);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(50491);\n/* harmony import */ var _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(26865);\n/* harmony import */ var _Core_IntersectionTests_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(67627);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(72248);\n/* harmony import */ var _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(25405);\n/* harmony import */ var _Core_Plane_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(7749);\n/* harmony import */ var _Core_Ray_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(68457);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(96190);\n/* harmony import */ var _Core_RectangleOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(19737);\n/* harmony import */ var _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(64060);\n/* harmony import */ var _Primitive_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(34380);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(89917);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A tile bounding volume specified as a longitude/latitude/height region.\n * @alias TileBoundingRegion\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Rectangle} options.rectangle The rectangle specifying the longitude and latitude range of the region.\n * @param {Number} [options.minimumHeight=0.0] The minimum height of the region.\n * @param {Number} [options.maximumHeight=0.0] The maximum height of the region.\n * @param {Ellipsoid} [options.ellipsoid=Cesium.Ellipsoid.WGS84] The ellipsoid.\n * @param {Boolean} [options.computeBoundingVolumes=true] True to compute the {@link TileBoundingRegion#boundingVolume} and\n *                  {@link TileBoundingVolume#boundingSphere}. If false, these properties will be undefined.\n *\n * @private\n */\nfunction TileBoundingRegion(options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("options", options);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("options.rectangle", options.rectangle);\n  //>>includeEnd(\'debug\');\n\n  this.rectangle = _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].clone */ .Z.clone(options.rectangle);\n  this.minimumHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.minimumHeight, 0.0);\n  this.maximumHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.maximumHeight, 0.0);\n\n  /**\n   * The world coordinates of the southwest corner of the tile\'s rectangle.\n   *\n   * @type {Cartesian3}\n   * @default Cartesian3()\n   */\n  this.southwestCornerCartesian = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  /**\n   * The world coordinates of the northeast corner of the tile\'s rectangle.\n   *\n   * @type {Cartesian3}\n   * @default Cartesian3()\n   */\n  this.northeastCornerCartesian = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  /**\n   * A normal that, along with southwestCornerCartesian, defines a plane at the western edge of\n   * the tile.  Any position above (in the direction of the normal) this plane is outside the tile.\n   *\n   * @type {Cartesian3}\n   * @default Cartesian3()\n   */\n  this.westNormal = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  /**\n   * A normal that, along with southwestCornerCartesian, defines a plane at the southern edge of\n   * the tile.  Any position above (in the direction of the normal) this plane is outside the tile.\n   * Because points of constant latitude do not necessary lie in a plane, positions below this\n   * plane are not necessarily inside the tile, but they are close.\n   *\n   * @type {Cartesian3}\n   * @default Cartesian3()\n   */\n  this.southNormal = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  /**\n   * A normal that, along with northeastCornerCartesian, defines a plane at the eastern edge of\n   * the tile.  Any position above (in the direction of the normal) this plane is outside the tile.\n   *\n   * @type {Cartesian3}\n   * @default Cartesian3()\n   */\n  this.eastNormal = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  /**\n   * A normal that, along with northeastCornerCartesian, defines a plane at the eastern edge of\n   * the tile.  Any position above (in the direction of the normal) this plane is outside the tile.\n   * Because points of constant latitude do not necessary lie in a plane, positions below this\n   * plane are not necessarily inside the tile, but they are close.\n   *\n   * @type {Cartesian3}\n   * @default Cartesian3()\n   */\n  this.northNormal = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  var ellipsoid = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.ellipsoid, _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].WGS84 */ .Z.WGS84);\n  computeBox(this, options.rectangle, ellipsoid);\n\n  this._orientedBoundingBox = undefined;\n  this._boundingSphere = undefined;\n\n  if ((0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.computeBoundingVolumes, true)) {\n    this.computeBoundingVolumes(ellipsoid);\n  }\n}\n\nObject.defineProperties(TileBoundingRegion.prototype, {\n  /**\n   * The underlying bounding volume\n   *\n   * @memberof TileBoundingRegion.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  boundingVolume: {\n    get: function () {\n      return this._orientedBoundingBox;\n    },\n  },\n  /**\n   * The underlying bounding sphere\n   *\n   * @memberof TileBoundingRegion.prototype\n   *\n   * @type {BoundingSphere}\n   * @readonly\n   */\n  boundingSphere: {\n    get: function () {\n      return this._boundingSphere;\n    },\n  },\n});\n\nTileBoundingRegion.prototype.computeBoundingVolumes = function (ellipsoid) {\n  // An oriented bounding box that encloses this tile\'s region.  This is used to calculate tile visibility.\n  this._orientedBoundingBox = _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].fromRectangle */ .Z.fromRectangle(\n    this.rectangle,\n    this.minimumHeight,\n    this.maximumHeight,\n    ellipsoid\n  );\n\n  this._boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromOrientedBoundingBox */ .Z.fromOrientedBoundingBox(\n    this._orientedBoundingBox\n  );\n};\n\nvar cartesian3Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar cartesian3Scratch2 = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar cartesian3Scratch3 = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar eastWestNormalScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar westernMidpointScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar easternMidpointScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar cartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar planeScratch = new _Core_Plane_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNIT_X */ .Z.UNIT_X, 0.0);\nvar rayScratch = new _Core_Ray_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\n\nfunction computeBox(tileBB, rectangle, ellipsoid) {\n  ellipsoid.cartographicToCartesian(\n    _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].southwest */ .Z.southwest(rectangle),\n    tileBB.southwestCornerCartesian\n  );\n  ellipsoid.cartographicToCartesian(\n    _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].northeast */ .Z.northeast(rectangle),\n    tileBB.northeastCornerCartesian\n  );\n\n  // The middle latitude on the western edge.\n  cartographicScratch.longitude = rectangle.west;\n  cartographicScratch.latitude = (rectangle.south + rectangle.north) * 0.5;\n  cartographicScratch.height = 0.0;\n  var westernMidpointCartesian = ellipsoid.cartographicToCartesian(\n    cartographicScratch,\n    westernMidpointScratch\n  );\n\n  // Compute the normal of the plane on the western edge of the tile.\n  var westNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(\n    westernMidpointCartesian,\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNIT_Z */ .Z.UNIT_Z,\n    cartesian3Scratch\n  );\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(westNormal, tileBB.westNormal);\n\n  // The middle latitude on the eastern edge.\n  cartographicScratch.longitude = rectangle.east;\n  var easternMidpointCartesian = ellipsoid.cartographicToCartesian(\n    cartographicScratch,\n    easternMidpointScratch\n  );\n\n  // Compute the normal of the plane on the eastern edge of the tile.\n  var eastNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNIT_Z */ .Z.UNIT_Z,\n    easternMidpointCartesian,\n    cartesian3Scratch\n  );\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(eastNormal, tileBB.eastNormal);\n\n  // Compute the normal of the plane bounding the southern edge of the tile.\n  var westVector = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(\n    westernMidpointCartesian,\n    easternMidpointCartesian,\n    cartesian3Scratch\n  );\n  var eastWestNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(westVector, eastWestNormalScratch);\n\n  var south = rectangle.south;\n  var southSurfaceNormal;\n\n  if (south > 0.0) {\n    // Compute a plane that doesn\'t cut through the tile.\n    cartographicScratch.longitude = (rectangle.west + rectangle.east) * 0.5;\n    cartographicScratch.latitude = south;\n    var southCenterCartesian = ellipsoid.cartographicToCartesian(\n      cartographicScratch,\n      rayScratch.origin\n    );\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(eastWestNormal, rayScratch.direction);\n    var westPlane = _Core_Plane_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].fromPointNormal */ .Z.fromPointNormal(\n      tileBB.southwestCornerCartesian,\n      tileBB.westNormal,\n      planeScratch\n    );\n    // Find a point that is on the west and the south planes\n    _Core_IntersectionTests_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].rayPlane */ .Z.rayPlane(\n      rayScratch,\n      westPlane,\n      tileBB.southwestCornerCartesian\n    );\n    southSurfaceNormal = ellipsoid.geodeticSurfaceNormal(\n      southCenterCartesian,\n      cartesian3Scratch2\n    );\n  } else {\n    southSurfaceNormal = ellipsoid.geodeticSurfaceNormalCartographic(\n      _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].southeast */ .Z.southeast(rectangle),\n      cartesian3Scratch2\n    );\n  }\n  var southNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(\n    southSurfaceNormal,\n    westVector,\n    cartesian3Scratch3\n  );\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(southNormal, tileBB.southNormal);\n\n  // Compute the normal of the plane bounding the northern edge of the tile.\n  var north = rectangle.north;\n  var northSurfaceNormal;\n  if (north < 0.0) {\n    // Compute a plane that doesn\'t cut through the tile.\n    cartographicScratch.longitude = (rectangle.west + rectangle.east) * 0.5;\n    cartographicScratch.latitude = north;\n    var northCenterCartesian = ellipsoid.cartographicToCartesian(\n      cartographicScratch,\n      rayScratch.origin\n    );\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].negate */ .Z.negate(eastWestNormal, rayScratch.direction);\n    var eastPlane = _Core_Plane_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].fromPointNormal */ .Z.fromPointNormal(\n      tileBB.northeastCornerCartesian,\n      tileBB.eastNormal,\n      planeScratch\n    );\n    // Find a point that is on the east and the north planes\n    _Core_IntersectionTests_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].rayPlane */ .Z.rayPlane(\n      rayScratch,\n      eastPlane,\n      tileBB.northeastCornerCartesian\n    );\n    northSurfaceNormal = ellipsoid.geodeticSurfaceNormal(\n      northCenterCartesian,\n      cartesian3Scratch2\n    );\n  } else {\n    northSurfaceNormal = ellipsoid.geodeticSurfaceNormalCartographic(\n      _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].northwest */ .Z.northwest(rectangle),\n      cartesian3Scratch2\n    );\n  }\n  var northNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].cross */ .Z.cross(\n    westVector,\n    northSurfaceNormal,\n    cartesian3Scratch3\n  );\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(northNormal, tileBB.northNormal);\n}\n\nvar southwestCornerScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar northeastCornerScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar negativeUnitY = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(0.0, -1.0, 0.0);\nvar negativeUnitZ = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(0.0, 0.0, -1.0);\nvar vectorScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nfunction distanceToCameraRegion(tileBB, frameState) {\n  var camera = frameState.camera;\n  var cameraCartesianPosition = camera.positionWC;\n  var cameraCartographicPosition = camera.positionCartographic;\n\n  var result = 0.0;\n  if (!_Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].contains */ .Z.contains(tileBB.rectangle, cameraCartographicPosition)) {\n    var southwestCornerCartesian = tileBB.southwestCornerCartesian;\n    var northeastCornerCartesian = tileBB.northeastCornerCartesian;\n    var westNormal = tileBB.westNormal;\n    var southNormal = tileBB.southNormal;\n    var eastNormal = tileBB.eastNormal;\n    var northNormal = tileBB.northNormal;\n\n    if (frameState.mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n      southwestCornerCartesian = frameState.mapProjection.project(\n        _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].southwest */ .Z.southwest(tileBB.rectangle),\n        southwestCornerScratch\n      );\n      southwestCornerCartesian.z = southwestCornerCartesian.y;\n      southwestCornerCartesian.y = southwestCornerCartesian.x;\n      southwestCornerCartesian.x = 0.0;\n      northeastCornerCartesian = frameState.mapProjection.project(\n        _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].northeast */ .Z.northeast(tileBB.rectangle),\n        northeastCornerScratch\n      );\n      northeastCornerCartesian.z = northeastCornerCartesian.y;\n      northeastCornerCartesian.y = northeastCornerCartesian.x;\n      northeastCornerCartesian.x = 0.0;\n      westNormal = negativeUnitY;\n      eastNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNIT_Y */ .Z.UNIT_Y;\n      southNormal = negativeUnitZ;\n      northNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNIT_Z */ .Z.UNIT_Z;\n    }\n\n    var vectorFromSouthwestCorner = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(\n      cameraCartesianPosition,\n      southwestCornerCartesian,\n      vectorScratch\n    );\n    var distanceToWestPlane = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(\n      vectorFromSouthwestCorner,\n      westNormal\n    );\n    var distanceToSouthPlane = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(\n      vectorFromSouthwestCorner,\n      southNormal\n    );\n\n    var vectorFromNortheastCorner = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(\n      cameraCartesianPosition,\n      northeastCornerCartesian,\n      vectorScratch\n    );\n    var distanceToEastPlane = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(\n      vectorFromNortheastCorner,\n      eastNormal\n    );\n    var distanceToNorthPlane = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(\n      vectorFromNortheastCorner,\n      northNormal\n    );\n\n    if (distanceToWestPlane > 0.0) {\n      result += distanceToWestPlane * distanceToWestPlane;\n    } else if (distanceToEastPlane > 0.0) {\n      result += distanceToEastPlane * distanceToEastPlane;\n    }\n\n    if (distanceToSouthPlane > 0.0) {\n      result += distanceToSouthPlane * distanceToSouthPlane;\n    } else if (distanceToNorthPlane > 0.0) {\n      result += distanceToNorthPlane * distanceToNorthPlane;\n    }\n  }\n\n  var cameraHeight;\n  var minimumHeight;\n  var maximumHeight;\n  if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    cameraHeight = cameraCartographicPosition.height;\n    minimumHeight = tileBB.minimumHeight;\n    maximumHeight = tileBB.maximumHeight;\n  } else {\n    cameraHeight = cameraCartesianPosition.x;\n    minimumHeight = 0.0;\n    maximumHeight = 0.0;\n  }\n\n  if (cameraHeight > maximumHeight) {\n    var distanceAboveTop = cameraHeight - maximumHeight;\n    result += distanceAboveTop * distanceAboveTop;\n  } else if (cameraHeight < minimumHeight) {\n    var distanceBelowBottom = minimumHeight - cameraHeight;\n    result += distanceBelowBottom * distanceBelowBottom;\n  }\n\n  return Math.sqrt(result);\n}\n\n/**\n * Gets the distance from the camera to the closest point on the tile.  This is used for level of detail selection.\n *\n * @param {FrameState} frameState The state information of the current rendering frame.\n * @returns {Number} The distance from the camera to the closest point on the tile, in meters.\n */\nTileBoundingRegion.prototype.distanceToCamera = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("frameState", frameState);\n  //>>includeEnd(\'debug\');\n\n  var regionResult = distanceToCameraRegion(this, frameState);\n  if (\n    frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].SCENE3D */ .Z.SCENE3D &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(this._orientedBoundingBox)\n  ) {\n    var obbResult = Math.sqrt(\n      this._orientedBoundingBox.distanceSquaredTo(frameState.camera.positionWC)\n    );\n    return Math.max(regionResult, obbResult);\n  }\n  return regionResult;\n};\n\n/**\n * Determines which side of a plane this box is located.\n *\n * @param {Plane} plane The plane to test against.\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire box is on the side of the plane\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire box is\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the box\n *                      intersects the plane.\n */\nTileBoundingRegion.prototype.intersectPlane = function (plane) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("plane", plane);\n  //>>includeEnd(\'debug\');\n  return this._orientedBoundingBox.intersectPlane(plane);\n};\n\n/**\n * Creates a debug primitive that shows the outline of the tile bounding region.\n *\n * @param {Color} color The desired color of the primitive\'s mesh\n * @return {Primitive}\n *\n * @private\n */\nTileBoundingRegion.prototype.createDebugVolume = function (color) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("color", color);\n  //>>includeEnd(\'debug\');\n\n  var modelMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  var geometry = new _Core_RectangleOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    rectangle: this.rectangle,\n    height: this.minimumHeight,\n    extrudedHeight: this.maximumHeight,\n  });\n  var instance = new _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    geometry: geometry,\n    id: "outline",\n    modelMatrix: modelMatrix,\n    attributes: {\n      color: _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromColor */ .Z.fromColor(color),\n    },\n  });\n\n  return new _Primitive_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z({\n    geometryInstances: instance,\n    appearance: new _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n      translucent: false,\n      flat: true,\n    }),\n    asynchronous: false,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (TileBoundingRegion);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17106\n')},96811:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51688);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50491);\n/* harmony import */ var _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84935);\n/* harmony import */ var _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68201);\n/* harmony import */ var _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7749);\n/* harmony import */ var _Core_CoplanarPolygonOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(27753);\n/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(92062);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(62200);\n/* harmony import */ var _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(26865);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(72248);\n/* harmony import */ var _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(64060);\n/* harmony import */ var _Primitive_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(34380);\n/* harmony import */ var _Core_S2Cell_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(90791);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar centerCartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n/**\n * A tile bounding volume specified as an S2 cell token with minimum and maximum heights.\n * The bounding volume is a k DOP. A k-DOP is the Boolean intersection of extents along k directions.\n *\n * @alias TileBoundingS2Cell\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {String} options.token The token of the S2 cell.\n * @param {Number} [options.minimumHeight=0.0] The minimum height of the bounding volume.\n * @param {Number} [options.maximumHeight=0.0] The maximum height of the bounding volume.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid.\n * @param {Boolean} [options.computeBoundingVolumes=true] True to compute the {@link TileBoundingS2Cell#boundingVolume} and\n *                  {@link TileBoundingS2Cell#boundingSphere}. If false, these properties will be undefined.\n *\n * @private\n */\nfunction TileBoundingS2Cell(options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].typeOf.object */ .Z.typeOf.object("options", options);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].typeOf.string */ .Z.typeOf.string("options.token", options.token);\n  //>>includeEnd(\'debug\');\n\n  var s2Cell = _Core_S2Cell_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].fromToken */ .Z.fromToken(options.token);\n  var minimumHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(options.minimumHeight, 0.0);\n  var maximumHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(options.maximumHeight, 0.0);\n  var ellipsoid = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(options.ellipsoid, _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].WGS84 */ .Z.WGS84);\n\n  this.s2Cell = s2Cell;\n  this.minimumHeight = minimumHeight;\n  this.maximumHeight = maximumHeight;\n  this.ellipsoid = ellipsoid;\n\n  var boundingPlanes = computeBoundingPlanes(\n    s2Cell,\n    minimumHeight,\n    maximumHeight,\n    ellipsoid\n  );\n  this._boundingPlanes = boundingPlanes;\n\n  // Pre-compute vertices to speed up the plane intersection test.\n  var vertices = computeVertices(boundingPlanes);\n  this._vertices = vertices;\n\n  // Pre-compute edge normals to speed up the point-polygon distance check in distanceToCamera.\n  this._edgeNormals = new Array(6);\n\n  this._edgeNormals[0] = computeEdgeNormals(\n    boundingPlanes[0],\n    vertices.slice(0, 4)\n  );\n  var i;\n  // Based on the way the edge normals are computed, the edge normals all point away from the "face"\n  // of the polyhedron they surround, except the plane for the top plane. Therefore, we negate the normals\n  // for the top plane.\n  for (i = 0; i < 4; i++) {\n    this._edgeNormals[0][i] = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(\n      this._edgeNormals[0][i],\n      this._edgeNormals[0][i]\n    );\n  }\n\n  this._edgeNormals[1] = computeEdgeNormals(\n    boundingPlanes[1],\n    vertices.slice(4, 8)\n  );\n  for (i = 0; i < 4; i++) {\n    // For each plane, iterate through the vertices in CCW order.\n    this._edgeNormals[2 + i] = computeEdgeNormals(boundingPlanes[2 + i], [\n      vertices[i % 4],\n      vertices[(i + 1) % 4],\n      vertices[4 + ((i + 1) % 4)],\n      vertices[4 + i],\n    ]);\n  }\n\n  this._planeVertices = [\n    this._vertices.slice(0, 4),\n    this._vertices.slice(4, 8),\n  ];\n  for (i = 0; i < 4; i++) {\n    this._planeVertices.push([\n      this._vertices[i % 4],\n      this._vertices[(i + 1) % 4],\n      this._vertices[4 + ((i + 1) % 4)],\n      this._vertices[4 + i],\n    ]);\n  }\n\n  var center = s2Cell.getCenter();\n  centerCartographicScratch = ellipsoid.cartesianToCartographic(\n    center,\n    centerCartographicScratch\n  );\n  centerCartographicScratch.height = (maximumHeight + minimumHeight) / 2;\n  this.center = ellipsoid.cartographicToCartesian(\n    centerCartographicScratch,\n    center\n  );\n\n  this._boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].fromPoints */ .Z.fromPoints(vertices);\n}\n\nvar centerGeodeticNormalScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar topCartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar topScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar vertexCartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar vertexScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar vertexGeodeticNormalScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar sideNormalScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar sideScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * Computes bounding planes of the kDOP.\n * @private\n */\nfunction computeBoundingPlanes(\n  s2Cell,\n  minimumHeight,\n  maximumHeight,\n  ellipsoid\n) {\n  var planes = new Array(6);\n  var centerPoint = s2Cell.getCenter();\n\n  // Compute top plane.\n  // - Get geodetic surface normal at the center of the S2 cell.\n  // - Get center point at maximum height of bounding volume.\n  // - Create top plane from surface normal and top point.\n  var centerSurfaceNormal = ellipsoid.geodeticSurfaceNormal(\n    centerPoint,\n    centerGeodeticNormalScratch\n  );\n  var topCartographic = ellipsoid.cartesianToCartographic(\n    centerPoint,\n    topCartographicScratch\n  );\n  topCartographic.height = maximumHeight;\n  var top = ellipsoid.cartographicToCartesian(topCartographic, topScratch);\n  var topPlane = _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromPointNormal */ .Z.fromPointNormal(top, centerSurfaceNormal);\n  planes[0] = topPlane;\n\n  // Compute bottom plane.\n  // - Iterate through bottom vertices\n  //   - Get distance from vertex to top plane\n  // - Find longest distance from vertex to top plane\n  // - Translate top plane by the distance\n  var maxDistance = 0;\n  var i;\n  var vertices = [];\n  var vertex, vertexCartographic;\n  for (i = 0; i < 4; i++) {\n    vertex = s2Cell.getVertex(i);\n    vertices[i] = vertex;\n    vertexCartographic = ellipsoid.cartesianToCartographic(\n      vertex,\n      vertexCartographicScratch\n    );\n    vertexCartographic.height = minimumHeight;\n    var distance = _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getPointDistance */ .Z.getPointDistance(\n      topPlane,\n      ellipsoid.cartographicToCartesian(vertexCartographic, vertexScratch)\n    );\n    if (distance < maxDistance) {\n      maxDistance = distance;\n    }\n  }\n  var bottomPlane = _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].clone */ .Z.clone(topPlane);\n  // Negate the normal of the bottom plane since we want all normals to point "outwards".\n  bottomPlane.normal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(\n    bottomPlane.normal,\n    bottomPlane.normal\n  );\n  bottomPlane.distance = bottomPlane.distance * -1 + maxDistance;\n  planes[1] = bottomPlane;\n\n  // Compute side planes.\n  // - Iterate through vertices (in CCW order, by default)\n  //   - Get a vertex and another vertex adjacent to it.\n  //   - Compute geodetic surface normal at one vertex.\n  //   - Compute vector between vertices.\n  //   - Compute normal of side plane. (cross product of top dir and side dir)\n  for (i = 0; i < 4; i++) {\n    vertex = vertices[i];\n    var adjacentVertex = vertices[(i + 1) % 4];\n    var geodeticNormal = ellipsoid.geodeticSurfaceNormal(\n      vertex,\n      vertexGeodeticNormalScratch\n    );\n    var side = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(adjacentVertex, vertex, sideScratch);\n    var sideNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(side, geodeticNormal, sideNormalScratch);\n    sideNormal = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(sideNormal, sideNormal);\n    planes[2 + i] = _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromPointNormal */ .Z.fromPointNormal(vertex, sideNormal);\n  }\n\n  return planes;\n}\n\nvar n0Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar n1Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar n2Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar x0Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar x1Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar x2Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar t0Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar t1Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar t2Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar f0Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar f1Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar f2Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar sScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar matrixScratch = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n/**\n * Computes intersection of 3 planes.\n * @private\n */\nfunction computeIntersection(p0, p1, p2) {\n  n0Scratch = p0.normal;\n  n1Scratch = p1.normal;\n  n2Scratch = p2.normal;\n\n  x0Scratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(p0.normal, -p0.distance, x0Scratch);\n  x1Scratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(p1.normal, -p1.distance, x1Scratch);\n  x2Scratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(p2.normal, -p2.distance, x2Scratch);\n\n  f0Scratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(n1Scratch, n2Scratch, t0Scratch),\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(x0Scratch, n0Scratch),\n    f0Scratch\n  );\n  f1Scratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(n2Scratch, n0Scratch, t1Scratch),\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(x1Scratch, n1Scratch),\n    f1Scratch\n  );\n  f2Scratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(n0Scratch, n1Scratch, t2Scratch),\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(x2Scratch, n2Scratch),\n    f2Scratch\n  );\n\n  matrixScratch[0] = n0Scratch.x;\n  matrixScratch[1] = n1Scratch.x;\n  matrixScratch[2] = n2Scratch.x;\n  matrixScratch[3] = n0Scratch.y;\n  matrixScratch[4] = n1Scratch.y;\n  matrixScratch[5] = n2Scratch.y;\n  matrixScratch[6] = n0Scratch.z;\n  matrixScratch[7] = n1Scratch.z;\n  matrixScratch[8] = n2Scratch.z;\n  var determinant = _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].determinant */ .Z.determinant(matrixScratch);\n  sScratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(f0Scratch, f1Scratch, sScratch);\n  sScratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(sScratch, f2Scratch, sScratch);\n  return new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n    sScratch.x / determinant,\n    sScratch.y / determinant,\n    sScratch.z / determinant\n  );\n}\n/**\n * Compute the vertices of the kDOP.\n * @private\n */\nfunction computeVertices(boundingPlanes) {\n  var vertices = new Array(8);\n  for (var i = 0; i < 4; i++) {\n    // Vertices on the top plane.\n    vertices[i] = computeIntersection(\n      boundingPlanes[0],\n      boundingPlanes[2 + ((i + 3) % 4)],\n      boundingPlanes[2 + (i % 4)]\n    );\n    // Vertices on the bottom plane.\n    vertices[i + 4] = computeIntersection(\n      boundingPlanes[1],\n      boundingPlanes[2 + ((i + 3) % 4)],\n      boundingPlanes[2 + (i % 4)]\n    );\n  }\n  return vertices;\n}\n\nvar edgeScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar edgeNormalScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * Compute edge normals on a plane.\n * @private\n */\nfunction computeEdgeNormals(plane, vertices) {\n  var edgeNormals = [];\n  for (var i = 0; i < 4; i++) {\n    edgeScratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(\n      vertices[(i + 1) % 4],\n      vertices[i],\n      edgeScratch\n    );\n    edgeNormalScratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(\n      plane.normal,\n      edgeScratch,\n      edgeNormalScratch\n    );\n    edgeNormalScratch = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n      edgeNormalScratch,\n      edgeNormalScratch\n    );\n    edgeNormals[i] = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(edgeNormalScratch);\n  }\n  return edgeNormals;\n}\n\nObject.defineProperties(TileBoundingS2Cell.prototype, {\n  /**\n   * The underlying bounding volume.\n   *\n   * @memberof TileOrientedBoundingBox.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  boundingVolume: {\n    get: function () {\n      return this;\n    },\n  },\n  /**\n   * The underlying bounding sphere.\n   *\n   * @memberof TileOrientedBoundingBox.prototype\n   *\n   * @type {BoundingSphere}\n   * @readonly\n   */\n  boundingSphere: {\n    get: function () {\n      return this._boundingSphere;\n    },\n  },\n});\n\nvar facePointScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * The distance to point check for this kDOP involves checking the signed distance of the point to each bounding\n * plane. A plane qualifies for a distance check if the point being tested against is in the half-space in the direction\n * of the normal i.e. if the signed distance of the point from the plane is greater than 0.\n *\n * There are 4 possible cases for a point if it is outside the polyhedron:\n *\n *   \\     X     /     X \\           /       \\           /       \\           /\n * ---\\---------/---   ---\\---------/---   ---X---------/---   ---\\---------/---\n *     \\       /           \\       /           \\       /           \\       /\n *   ---\\-----/---       ---\\-----/---       ---\\-----/---       ---\\-----/---\n *       \\   /               \\   /               \\   /               \\   /\n *                                                                    \\ /\n *                                                                     \\\n *                                                                    / \\\n *                                                                   / X \\\n *\n *         I                  II                  III                 IV\n *\n * Case I: There is only one plane selected.\n * In this case, we project the point onto the plane and do a point polygon distance check to find the closest point on the polygon.\n * The point may lie inside the "face" of the polygon or outside. If it is outside, we need to determine which edges to test against.\n *\n * Case II: There are two planes selected.\n * In this case, the point will lie somewhere on the line created at the intersection of the selected planes or one of the planes.\n *\n * Case III: There are three planes selected.\n * In this case, the point will lie on the vertex, at the intersection of the selected planes.\n *\n * Case IV: There are more than three planes selected.\n * Since we are on an ellipsoid, this will only happen in the bottom plane, which is what we will use for the distance test.\n */\nTileBoundingS2Cell.prototype.distanceToCamera = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].defined */ .Z.defined("frameState", frameState);\n  //>>includeEnd(\'debug\');\n\n  var point = frameState.camera.positionWC;\n\n  var selectedPlaneIndices = [];\n  var vertices = [];\n  var edgeNormals;\n\n  if (_Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getPointDistance */ .Z.getPointDistance(this._boundingPlanes[0], point) > 0) {\n    selectedPlaneIndices.push(0);\n    vertices.push(this._planeVertices[0]);\n    edgeNormals = this._edgeNormals[0];\n  } else if (_Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getPointDistance */ .Z.getPointDistance(this._boundingPlanes[1], point) > 0) {\n    selectedPlaneIndices.push(1);\n    vertices.push(this._planeVertices[1]);\n    edgeNormals = this._edgeNormals[1];\n  }\n\n  var i;\n  var sidePlaneIndex;\n  for (i = 0; i < 4; i++) {\n    sidePlaneIndex = 2 + i;\n    if (\n      _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getPointDistance */ .Z.getPointDistance(this._boundingPlanes[sidePlaneIndex], point) > 0\n    ) {\n      selectedPlaneIndices.push(sidePlaneIndex);\n      // Store vertices in CCW order.\n      vertices.push(this._planeVertices[sidePlaneIndex]);\n      edgeNormals = this._edgeNormals[sidePlaneIndex];\n    }\n  }\n\n  // Check if inside all planes.\n  if (selectedPlaneIndices.length === 0) {\n    return 0.0;\n  }\n\n  // We use the skip variable when the side plane indices are non-consecutive.\n  var skip;\n  var facePoint;\n  var selectedPlane;\n  if (selectedPlaneIndices.length === 1) {\n    // Handles Case I\n    selectedPlane = this._boundingPlanes[selectedPlaneIndices[0]];\n    facePoint = closestPointPolygon(\n      _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].projectPointOntoPlane */ .Z.projectPointOntoPlane(selectedPlane, point, facePointScratch),\n      vertices[0],\n      selectedPlane,\n      edgeNormals\n    );\n\n    return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(facePoint, point);\n  } else if (selectedPlaneIndices.length === 2) {\n    // Handles Case II\n    // Since we are on the ellipsoid, the dihedral angle between a top plane and a side plane\n    // will always be acute, so we can do a faster check there.\n    if (selectedPlaneIndices[0] === 0) {\n      var edge = [\n        this._vertices[\n          4 * selectedPlaneIndices[0] + (selectedPlaneIndices[1] - 2)\n        ],\n        this._vertices[\n          4 * selectedPlaneIndices[0] + ((selectedPlaneIndices[1] - 2 + 1) % 4)\n        ],\n      ];\n      facePoint = closestPointLineSegment(point, edge[0], edge[1]);\n      return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(facePoint, point);\n    }\n    var minimumDistance = Number.MAX_VALUE;\n    var distance;\n    for (i = 0; i < 2; i++) {\n      selectedPlane = this._boundingPlanes[selectedPlaneIndices[i]];\n      facePoint = closestPointPolygon(\n        _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].projectPointOntoPlane */ .Z.projectPointOntoPlane(selectedPlane, point, facePointScratch),\n        vertices[i],\n        selectedPlane,\n        this._edgeNormals[selectedPlaneIndices[i]]\n      );\n\n      distance = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distanceSquared */ .Z.distanceSquared(facePoint, point);\n      if (distance < minimumDistance) {\n        minimumDistance = distance;\n      }\n    }\n    return Math.sqrt(minimumDistance);\n  } else if (selectedPlaneIndices.length > 3) {\n    // Handles Case IV\n    facePoint = closestPointPolygon(\n      _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].projectPointOntoPlane */ .Z.projectPointOntoPlane(\n        this._boundingPlanes[1],\n        point,\n        facePointScratch\n      ),\n      this._planeVertices[1],\n      this._boundingPlanes[1],\n      this._edgeNormals[1]\n    );\n    return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(facePoint, point);\n  }\n\n  // Handles Case III\n  skip = selectedPlaneIndices[1] === 2 && selectedPlaneIndices[2] === 5 ? 0 : 1;\n\n  // Vertex is on top plane.\n  if (selectedPlaneIndices[0] === 0) {\n    return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(\n      point,\n      this._vertices[(selectedPlaneIndices[1] - 2 + skip) % 4]\n    );\n  }\n\n  // Vertex is on bottom plane.\n  return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(\n    point,\n    this._vertices[4 + ((selectedPlaneIndices[1] - 2 + skip) % 4)]\n  );\n};\n\nvar dScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar pL0Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * Finds point on a line segment closest to a given point.\n * @private\n */\nfunction closestPointLineSegment(p, l0, l1) {\n  var d = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(l1, l0, dScratch);\n  var pL0 = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(p, l0, pL0Scratch);\n  var t = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(d, pL0);\n\n  if (t <= 0) {\n    return l0;\n  }\n\n  var dMag = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(d, d);\n  if (t >= dMag) {\n    return l1;\n  }\n\n  t = t / dMag;\n  return new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n    (1 - t) * l0.x + t * l1.x,\n    (1 - t) * l0.y + t * l1.y,\n    (1 - t) * l0.z + t * l1.z\n  );\n}\n\nvar edgePlaneScratch = new _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_X */ .Z.UNIT_X, 0.0);\n/**\n * Finds closes point on the polygon, created by the given vertices, from\n * a point. The test point and the polygon are all on the same plane.\n * @private\n */\nfunction closestPointPolygon(p, vertices, plane, edgeNormals) {\n  var minDistance = Number.MAX_VALUE;\n  var distance;\n  var closestPoint;\n  var closestPointOnEdge;\n\n  for (var i = 0; i < vertices.length; i++) {\n    var edgePlane = _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromPointNormal */ .Z.fromPointNormal(\n      vertices[i],\n      edgeNormals[i],\n      edgePlaneScratch\n    );\n    var edgePlaneDistance = _Core_Plane_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getPointDistance */ .Z.getPointDistance(edgePlane, p);\n\n    // Skip checking against the edge if the point is not in the half-space that the\n    // edgePlane\'s normal points towards i.e. if the edgePlane is facing away from the point.\n    if (edgePlaneDistance < 0) {\n      continue;\n    }\n\n    closestPointOnEdge = closestPointLineSegment(\n      p,\n      vertices[i],\n      vertices[(i + 1) % 4]\n    );\n\n    distance = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(p, closestPointOnEdge);\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestPoint = closestPointOnEdge;\n    }\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(closestPoint)) {\n    return p;\n  }\n  return closestPoint;\n}\n\n/**\n * Determines which side of a plane this volume is located.\n *\n * @param {Plane} plane The plane to test against.\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire volume is on the side of the plane\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire volume is\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the volume\n *                      intersects the plane.\n */\nTileBoundingS2Cell.prototype.intersectPlane = function (plane) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].defined */ .Z.defined("plane", plane);\n  //>>includeEnd(\'debug\');\n\n  var plusCount = 0;\n  var negCount = 0;\n  for (var i = 0; i < this._vertices.length; i++) {\n    var distanceToPlane =\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(plane.normal, this._vertices[i]) + plane.distance;\n    if (distanceToPlane < 0) {\n      negCount++;\n    } else {\n      plusCount++;\n    }\n  }\n\n  if (plusCount === this._vertices.length) {\n    return _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].INSIDE */ .Z.INSIDE;\n  } else if (negCount === this._vertices.length) {\n    return _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].OUTSIDE */ .Z.OUTSIDE;\n  }\n  return _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].INTERSECTING */ .Z.INTERSECTING;\n};\n\n/**\n * Creates a debug primitive that shows the outline of the tile bounding\n * volume.\n *\n * @param {Color} color The desired color of the primitive\'s mesh\n * @return {Primitive}\n */\nTileBoundingS2Cell.prototype.createDebugVolume = function (color) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].defined */ .Z.defined("color", color);\n  //>>includeEnd(\'debug\');\n\n  var modelMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  var topPlanePolygon = new _Core_CoplanarPolygonOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n    polygonHierarchy: {\n      positions: this._planeVertices[0],\n    },\n  });\n  var topPlaneGeometry = _Core_CoplanarPolygonOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].createGeometry */ .Z.createGeometry(\n    topPlanePolygon\n  );\n  var topPlaneInstance = new _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n    geometry: topPlaneGeometry,\n    id: "outline",\n    modelMatrix: modelMatrix,\n    attributes: {\n      color: _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromColor */ .Z.fromColor(color),\n    },\n  });\n\n  var bottomPlanePolygon = new _Core_CoplanarPolygonOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n    polygonHierarchy: {\n      positions: this._planeVertices[1],\n    },\n  });\n  var bottomPlaneGeometry = _Core_CoplanarPolygonOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].createGeometry */ .Z.createGeometry(\n    bottomPlanePolygon\n  );\n  var bottomPlaneInstance = new _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n    geometry: bottomPlaneGeometry,\n    id: "outline",\n    modelMatrix: modelMatrix,\n    attributes: {\n      color: _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromColor */ .Z.fromColor(color),\n    },\n  });\n\n  var sideInstances = [];\n  for (var i = 0; i < 4; i++) {\n    var sidePlanePolygon = new _Core_CoplanarPolygonOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n      polygonHierarchy: {\n        positions: this._planeVertices[2 + i],\n      },\n    });\n    var sidePlaneGeometry = _Core_CoplanarPolygonOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].createGeometry */ .Z.createGeometry(\n      sidePlanePolygon\n    );\n    sideInstances[i] = new _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      geometry: sidePlaneGeometry,\n      id: "outline",\n      modelMatrix: modelMatrix,\n      attributes: {\n        color: _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromColor */ .Z.fromColor(color),\n      },\n    });\n  }\n\n  return new _Primitive_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    geometryInstances: [\n      sideInstances[0],\n      sideInstances[1],\n      sideInstances[2],\n      sideInstances[3],\n      bottomPlaneInstance,\n      topPlaneInstance,\n    ],\n    appearance: new _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z({\n      translucent: false,\n      flat: true,\n    }),\n    asynchronous: false,\n  });\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (TileBoundingS2Cell);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///96811\n')},60516:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(92062);\n/* harmony import */ var _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(26865);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72248);\n/* harmony import */ var _Core_SphereOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(38779);\n/* harmony import */ var _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(64060);\n/* harmony import */ var _Primitive_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(34380);\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A tile bounding volume specified as a sphere.\n * @alias TileBoundingSphere\n * @constructor\n *\n * @param {Cartesian3} [center=Cartesian3.ZERO] The center of the bounding sphere.\n * @param {Number} [radius=0.0] The radius of the bounding sphere.\n *\n * @private\n */\nfunction TileBoundingSphere(center, radius) {\n  if (radius === 0) {\n    radius = _Core_Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON7 */ .Z.EPSILON7;\n  }\n  this._boundingSphere = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(center, radius);\n}\n\nObject.defineProperties(TileBoundingSphere.prototype, {\n  /**\n   * The center of the bounding sphere\n   *\n   * @memberof TileBoundingSphere.prototype\n   *\n   * @type {Cartesian3}\n   * @readonly\n   */\n  center: {\n    get: function () {\n      return this._boundingSphere.center;\n    },\n  },\n\n  /**\n   * The radius of the bounding sphere\n   *\n   * @memberof TileBoundingSphere.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  radius: {\n    get: function () {\n      return this._boundingSphere.radius;\n    },\n  },\n\n  /**\n   * The underlying bounding volume\n   *\n   * @memberof TileBoundingSphere.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  boundingVolume: {\n    get: function () {\n      return this._boundingSphere;\n    },\n  },\n  /**\n   * The underlying bounding sphere\n   *\n   * @memberof TileBoundingSphere.prototype\n   *\n   * @type {BoundingSphere}\n   * @readonly\n   */\n  boundingSphere: {\n    get: function () {\n      return this._boundingSphere;\n    },\n  },\n});\n\n/**\n * Computes the distance between this bounding sphere and the camera attached to frameState.\n *\n * @param {FrameState} frameState The frameState to which the camera is attached.\n * @returns {Number} The distance between the camera and the bounding sphere in meters. Returns 0 if the camera is inside the bounding volume.\n *\n */\nTileBoundingSphere.prototype.distanceToCamera = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("frameState", frameState);\n  //>>includeEnd(\'debug\');\n  var boundingSphere = this._boundingSphere;\n  return Math.max(\n    0.0,\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].distance */ .Z.distance(boundingSphere.center, frameState.camera.positionWC) -\n      boundingSphere.radius\n  );\n};\n\n/**\n * Determines which side of a plane this sphere is located.\n *\n * @param {Plane} plane The plane to test against.\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire sphere is on the side of the plane\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire sphere is\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the sphere\n *                      intersects the plane.\n */\nTileBoundingSphere.prototype.intersectPlane = function (plane) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("plane", plane);\n  //>>includeEnd(\'debug\');\n  return _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].intersectPlane */ .Z.intersectPlane(this._boundingSphere, plane);\n};\n\n/**\n * Update the bounding sphere after the tile is transformed.\n *\n * @param {Cartesian3} center The center of the bounding sphere.\n * @param {Number} radius The radius of the bounding sphere.\n */\nTileBoundingSphere.prototype.update = function (center, radius) {\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(center, this._boundingSphere.center);\n  this._boundingSphere.radius = radius;\n};\n\n/**\n * Creates a debug primitive that shows the outline of the sphere.\n *\n * @param {Color} color The desired color of the primitive\'s mesh\n * @return {Primitive}\n */\nTileBoundingSphere.prototype.createDebugVolume = function (color) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("color", color);\n  //>>includeEnd(\'debug\');\n  var geometry = new _Core_SphereOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    radius: this.radius,\n  });\n  var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].fromTranslation */ .Z.fromTranslation(\n    this.center,\n    new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].IDENTITY */ .Z.IDENTITY)\n  );\n  var instance = new _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n    geometry: geometry,\n    id: "outline",\n    modelMatrix: modelMatrix,\n    attributes: {\n      color: _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromColor */ .Z.fromColor(color),\n    },\n  });\n\n  return new _Primitive_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    geometryInstances: instance,\n    appearance: new _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n      translucent: false,\n      flat: true,\n    }),\n    asynchronous: false,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (TileBoundingSphere);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///60516\n')},36037:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n\n\n/**\n * Defines a bounding volume for a tile. This type describes an interface\n * and is not intended to be instantiated directly.\n *\n * @alias TileBoundingVolume\n * @constructor\n *\n * @see TileBoundingRegion\n * @see TileBoundingSphere\n * @see TileOrientedBoundingBox\n *\n * @private\n */\nfunction TileBoundingVolume() {}\n\n/**\n * The underlying bounding volume.\n *\n * @type {Object}\n * @readonly\n */\nTileBoundingVolume.prototype.boundingVolume = undefined;\n\n/**\n * The underlying bounding sphere.\n *\n * @type {BoundingSphere}\n * @readonly\n */\nTileBoundingVolume.prototype.boundingSphere = undefined;\n\n/**\n * Calculates the distance between the tile and the camera.\n *\n * @param {FrameState} frameState The frame state.\n * @return {Number} The distance between the tile and the camera, in meters.\n *                  Returns 0.0 if the camera is inside the tile.\n */\nTileBoundingVolume.prototype.distanceToCamera = function (frameState) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Determines which side of a plane this volume is located.\n *\n * @param {Plane} plane The plane to test against.\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire volume is on the side of the plane\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire volume is\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the volume\n *                      intersects the plane.\n */\nTileBoundingVolume.prototype.intersectPlane = function (plane) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Creates a debug primitive that shows the outline of the tile bounding\n * volume.\n *\n * @param {Color} color The desired color of the primitive\'s mesh\n * @return {Primitive}\n */\nTileBoundingVolume.prototype.createDebugVolume = function (color) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (TileBoundingVolume)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYwMzcuanMiLCJtYXBwaW5ncyI6IjtBQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdIQUFzQztBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxZQUFZLHdCQUF3QjtBQUNqRCxpREFBaUQseUJBQXlCO0FBQzFFLG1EQUFtRCw4QkFBOEI7QUFDakY7QUFDQTtBQUNBO0FBQ0EsRUFBRSx3SEFBc0M7QUFDeEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7QUFDQSxFQUFFLHdIQUFzQztBQUN4QztBQUNBLHNFQUFlLGtFQUFrQixJQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL1RpbGVCb3VuZGluZ1ZvbHVtZS5qcz81OTMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvci5qc1wiO1xuXG4vKipcbiAqIERlZmluZXMgYSBib3VuZGluZyB2b2x1bWUgZm9yIGEgdGlsZS4gVGhpcyB0eXBlIGRlc2NyaWJlcyBhbiBpbnRlcmZhY2VcbiAqIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFudGlhdGVkIGRpcmVjdGx5LlxuICpcbiAqIEBhbGlhcyBUaWxlQm91bmRpbmdWb2x1bWVcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBzZWUgVGlsZUJvdW5kaW5nUmVnaW9uXG4gKiBAc2VlIFRpbGVCb3VuZGluZ1NwaGVyZVxuICogQHNlZSBUaWxlT3JpZW50ZWRCb3VuZGluZ0JveFxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIFRpbGVCb3VuZGluZ1ZvbHVtZSgpIHt9XG5cbi8qKlxuICogVGhlIHVuZGVybHlpbmcgYm91bmRpbmcgdm9sdW1lLlxuICpcbiAqIEB0eXBlIHtPYmplY3R9XG4gKiBAcmVhZG9ubHlcbiAqL1xuVGlsZUJvdW5kaW5nVm9sdW1lLnByb3RvdHlwZS5ib3VuZGluZ1ZvbHVtZSA9IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgdW5kZXJseWluZyBib3VuZGluZyBzcGhlcmUuXG4gKlxuICogQHR5cGUge0JvdW5kaW5nU3BoZXJlfVxuICogQHJlYWRvbmx5XG4gKi9cblRpbGVCb3VuZGluZ1ZvbHVtZS5wcm90b3R5cGUuYm91bmRpbmdTcGhlcmUgPSB1bmRlZmluZWQ7XG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgdGlsZSBhbmQgdGhlIGNhbWVyYS5cbiAqXG4gKiBAcGFyYW0ge0ZyYW1lU3RhdGV9IGZyYW1lU3RhdGUgVGhlIGZyYW1lIHN0YXRlLlxuICogQHJldHVybiB7TnVtYmVyfSBUaGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgdGlsZSBhbmQgdGhlIGNhbWVyYSwgaW4gbWV0ZXJzLlxuICogICAgICAgICAgICAgICAgICBSZXR1cm5zIDAuMCBpZiB0aGUgY2FtZXJhIGlzIGluc2lkZSB0aGUgdGlsZS5cbiAqL1xuVGlsZUJvdW5kaW5nVm9sdW1lLnByb3RvdHlwZS5kaXN0YW5jZVRvQ2FtZXJhID0gZnVuY3Rpb24gKGZyYW1lU3RhdGUpIHtcbiAgRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3IoKTtcbn07XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGljaCBzaWRlIG9mIGEgcGxhbmUgdGhpcyB2b2x1bWUgaXMgbG9jYXRlZC5cbiAqXG4gKiBAcGFyYW0ge1BsYW5lfSBwbGFuZSBUaGUgcGxhbmUgdG8gdGVzdCBhZ2FpbnN0LlxuICogQHJldHVybnMge0ludGVyc2VjdH0ge0BsaW5rIEludGVyc2VjdC5JTlNJREV9IGlmIHRoZSBlbnRpcmUgdm9sdW1lIGlzIG9uIHRoZSBzaWRlIG9mIHRoZSBwbGFuZVxuICogICAgICAgICAgICAgICAgICAgICAgdGhlIG5vcm1hbCBpcyBwb2ludGluZywge0BsaW5rIEludGVyc2VjdC5PVVRTSURFfSBpZiB0aGUgZW50aXJlIHZvbHVtZSBpc1xuICogICAgICAgICAgICAgICAgICAgICAgb24gdGhlIG9wcG9zaXRlIHNpZGUsIGFuZCB7QGxpbmsgSW50ZXJzZWN0LklOVEVSU0VDVElOR30gaWYgdGhlIHZvbHVtZVxuICogICAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWN0cyB0aGUgcGxhbmUuXG4gKi9cblRpbGVCb3VuZGluZ1ZvbHVtZS5wcm90b3R5cGUuaW50ZXJzZWN0UGxhbmUgPSBmdW5jdGlvbiAocGxhbmUpIHtcbiAgRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3IoKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGRlYnVnIHByaW1pdGl2ZSB0aGF0IHNob3dzIHRoZSBvdXRsaW5lIG9mIHRoZSB0aWxlIGJvdW5kaW5nXG4gKiB2b2x1bWUuXG4gKlxuICogQHBhcmFtIHtDb2xvcn0gY29sb3IgVGhlIGRlc2lyZWQgY29sb3Igb2YgdGhlIHByaW1pdGl2ZSdzIG1lc2hcbiAqIEByZXR1cm4ge1ByaW1pdGl2ZX1cbiAqL1xuVGlsZUJvdW5kaW5nVm9sdW1lLnByb3RvdHlwZS5jcmVhdGVEZWJ1Z1ZvbHVtZSA9IGZ1bmN0aW9uIChjb2xvcikge1xuICBEZXZlbG9wZXJFcnJvci50aHJvd0luc3RhbnRpYXRpb25FcnJvcigpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFRpbGVCb3VuZGluZ1ZvbHVtZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36037\n')},78973:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14459);\n/* harmony import */ var _Core_GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71351);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13222);\n\n\n\n\n\n\n\n/**\n * @typedef {Object} TileCoordinatesImageryProvider.ConstructorOptions\n *\n * Initialization options for the TileCoordinatesImageryProvider constructor\n *\n * @property {TilingScheme} [tilingScheme=new GeographicTilingScheme()] The tiling scheme for which to draw tiles.\n * @property {Ellipsoid} [ellipsoid] The ellipsoid.  If the tilingScheme is specified,\n *                    this parameter is ignored and the tiling scheme\'s ellipsoid is used instead. If neither\n *                    parameter is specified, the WGS84 ellipsoid is used.\n * @property {Color} [color=Color.YELLOW] The color to draw the tile box and label.\n * @property {Number} [tileWidth=256] The width of the tile for level-of-detail selection purposes.\n * @property {Number} [tileHeight=256] The height of the tile for level-of-detail selection purposes.\n */\n\n/**\n * An {@link ImageryProvider} that draws a box around every rendered tile in the tiling scheme, and draws\n * a label inside it indicating the X, Y, Level coordinates of the tile.  This is mostly useful for\n * debugging terrain and imagery rendering problems.\n *\n * @alias TileCoordinatesImageryProvider\n * @constructor\n *\n * @param {TileCoordinatesImageryProvider.ConstructorOptions} [options] Object describing initialization options\n */\nfunction TileCoordinatesImageryProvider(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  this._tilingScheme = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.tilingScheme)\n    ? options.tilingScheme\n    : new _Core_GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z({ ellipsoid: options.ellipsoid });\n  this._color = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.color, _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].YELLOW */ .Z.YELLOW);\n  this._errorEvent = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._tileWidth = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.tileWidth, 256);\n  this._tileHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.tileHeight, 256);\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].resolve */ .Z.resolve(true);\n\n  /**\n   * The default alpha blending value of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the night side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultNightAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the day side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultDayAlpha = undefined;\n\n  /**\n   * The default brightness of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0\n   * makes the imagery darker while greater than 1.0 makes it brighter.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultBrightness = undefined;\n\n  /**\n   * The default contrast of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0 reduces\n   * the contrast while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultContrast = undefined;\n\n  /**\n   * The default hue of this provider in radians. 0.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultHue = undefined;\n\n  /**\n   * The default saturation of this provider. 1.0 uses the unmodified imagery color. Less than 1.0 reduces the\n   * saturation while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultSaturation = undefined;\n\n  /**\n   * The default gamma correction to apply to this provider.  1.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultGamma = undefined;\n\n  /**\n   * The default texture minification filter to apply to this provider.\n   *\n   * @type {TextureMinificationFilter}\n   * @default undefined\n   */\n  this.defaultMinificationFilter = undefined;\n\n  /**\n   * The default texture magnification filter to apply to this provider.\n   *\n   * @type {TextureMagnificationFilter}\n   * @default undefined\n   */\n  this.defaultMagnificationFilter = undefined;\n}\n\nObject.defineProperties(TileCoordinatesImageryProvider.prototype, {\n  /**\n   * Gets the proxy used by this provider.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Proxy}\n   * @readonly\n   */\n  proxy: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  /**\n   * Gets the width of each tile, in pixels. This function should\n   * not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  tileWidth: {\n    get: function () {\n      return this._tileWidth;\n    },\n  },\n\n  /**\n   * Gets the height of each tile, in pixels.  This function should\n   * not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  tileHeight: {\n    get: function () {\n      return this._tileHeight;\n    },\n  },\n\n  /**\n   * Gets the maximum level-of-detail that can be requested.  This function should\n   * not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Number|undefined}\n   * @readonly\n   */\n  maximumLevel: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  /**\n   * Gets the minimum level-of-detail that can be requested.  This function should\n   * not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  minimumLevel: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  /**\n   * Gets the tiling scheme used by this provider.  This function should\n   * not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {TilingScheme}\n   * @readonly\n   */\n  tilingScheme: {\n    get: function () {\n      return this._tilingScheme;\n    },\n  },\n\n  /**\n   * Gets the rectangle, in radians, of the imagery provided by this instance.  This function should\n   * not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Rectangle}\n   * @readonly\n   */\n  rectangle: {\n    get: function () {\n      return this._tilingScheme.rectangle;\n    },\n  },\n\n  /**\n   * Gets the tile discard policy.  If not undefined, the discard policy is responsible\n   * for filtering out "missing" tiles via its shouldDiscardImage function.  If this function\n   * returns undefined, no tiles are filtered.  This function should\n   * not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {TileDiscardPolicy}\n   * @readonly\n   */\n  tileDiscardPolicy: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  /**\n   * Gets an event that is raised when the imagery provider encounters an asynchronous error.  By subscribing\n   * to the event, you will be notified of the error and can potentially recover from it.  Event listeners\n   * are passed an instance of {@link TileProviderError}.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Event}\n   * @readonly\n   */\n  errorEvent: {\n    get: function () {\n      return this._errorEvent;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the provider is ready for use.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return true;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves to true when the provider is ready for use.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Promise.<Boolean>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise;\n    },\n  },\n\n  /**\n   * Gets the credit to display when this imagery provider is active.  Typically this is used to credit\n   * the source of the imagery.  This function should not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Credit}\n   * @readonly\n   */\n  credit: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the images provided by this imagery provider\n   * include an alpha channel.  If this property is false, an alpha channel, if present, will\n   * be ignored.  If this property is true, any images without an alpha channel will be treated\n   * as if their alpha is 1.0 everywhere.  Setting this property to false reduces memory usage\n   * and texture upload time.\n   * @memberof TileCoordinatesImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  hasAlphaChannel: {\n    get: function () {\n      return true;\n    },\n  },\n});\n\n/**\n * Gets the credits to be displayed when a given tile is displayed.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level;\n * @returns {Credit[]} The credits to be displayed when the tile is displayed.\n *\n * @exception {DeveloperError} <code>getTileCredits</code> must not be called before the imagery provider is ready.\n */\nTileCoordinatesImageryProvider.prototype.getTileCredits = function (\n  x,\n  y,\n  level\n) {\n  return undefined;\n};\n\n/**\n * Requests the image for a given tile.  This function should\n * not be called before {@link TileCoordinatesImageryProvider#ready} returns true.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Request} [request] The request object. Intended for internal use only.\n * @returns {Promise.<HTMLImageElement|HTMLCanvasElement>|undefined} A promise for the image that will resolve when the image is available, or\n *          undefined if there are too many active requests to the server, and the request\n *          should be retried later.  The resolved image may be either an\n *          Image or a Canvas DOM object.\n */\nTileCoordinatesImageryProvider.prototype.requestImage = function (\n  x,\n  y,\n  level,\n  request\n) {\n  var canvas = document.createElement("canvas");\n  canvas.width = 256;\n  canvas.height = 256;\n  var context = canvas.getContext("2d");\n\n  var cssColor = this._color.toCssColorString();\n\n  context.strokeStyle = cssColor;\n  context.lineWidth = 2;\n  context.strokeRect(1, 1, 255, 255);\n\n  context.font = "bold 25px Arial";\n  context.textAlign = "center";\n  context.fillStyle = cssColor;\n  context.fillText("L: " + level, 124, 86);\n  context.fillText("X: " + x, 124, 136);\n  context.fillText("Y: " + y, 124, 186);\n\n  return canvas;\n};\n\n/**\n * Picking features is not currently supported by this imagery provider, so this function simply returns\n * undefined.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Number} longitude The longitude at which to pick features.\n * @param {Number} latitude  The latitude at which to pick features.\n * @return {Promise.<ImageryLayerFeatureInfo[]>|undefined} A promise for the picked features that will resolve when the asynchronous\n *                   picking completes.  The resolved value is an array of {@link ImageryLayerFeatureInfo}\n *                   instances.  The array may be empty if no features are found at the given location.\n *                   It may also be undefined if picking is not supported.\n */\nTileCoordinatesImageryProvider.prototype.pickFeatures = function (\n  x,\n  y,\n  level,\n  longitude,\n  latitude\n) {\n  return undefined;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (TileCoordinatesImageryProvider);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///78973\n')},39867:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n\n\n/**\n * A policy for discarding tile images according to some criteria.  This type describes an\n * interface and is not intended to be instantiated directly.\n *\n * @alias TileDiscardPolicy\n * @constructor\n *\n * @see DiscardMissingTileImagePolicy\n * @see NeverTileDiscardPolicy\n */\nfunction TileDiscardPolicy(options) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n}\n\n/**\n * Determines if the discard policy is ready to process images.\n * @function\n *\n * @returns {Boolean} True if the discard policy is ready to process images; otherwise, false.\n */\nTileDiscardPolicy.prototype.isReady = _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError;\n\n/**\n * Given a tile image, decide whether to discard that image.\n * @function\n *\n * @param {HTMLImageElement} image An image to test.\n * @returns {Boolean} True if the image should be discarded; otherwise, false.\n */\nTileDiscardPolicy.prototype.shouldDiscardImage =\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError;\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (TileDiscardPolicy)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk4NjcuanMiLCJtYXBwaW5ncyI6IjtBQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsd0hBQXNDO0FBQ3hDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTLHVEQUF1RDtBQUM3RTtBQUNBLHNDQUFzQyx3SEFBc0M7O0FBRTVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrQkFBa0I7QUFDN0IsYUFBYSxTQUFTLHVDQUF1QztBQUM3RDtBQUNBO0FBQ0EsRUFBRSx3SEFBc0M7QUFDeEMsc0VBQWUsaUVBQWlCLElBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvVGlsZURpc2NhcmRQb2xpY3kuanM/MTkwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IuanNcIjtcblxuLyoqXG4gKiBBIHBvbGljeSBmb3IgZGlzY2FyZGluZyB0aWxlIGltYWdlcyBhY2NvcmRpbmcgdG8gc29tZSBjcml0ZXJpYS4gIFRoaXMgdHlwZSBkZXNjcmliZXMgYW5cbiAqIGludGVyZmFjZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIGluc3RhbnRpYXRlZCBkaXJlY3RseS5cbiAqXG4gKiBAYWxpYXMgVGlsZURpc2NhcmRQb2xpY3lcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBzZWUgRGlzY2FyZE1pc3NpbmdUaWxlSW1hZ2VQb2xpY3lcbiAqIEBzZWUgTmV2ZXJUaWxlRGlzY2FyZFBvbGljeVxuICovXG5mdW5jdGlvbiBUaWxlRGlzY2FyZFBvbGljeShvcHRpb25zKSB7XG4gIERldmVsb3BlckVycm9yLnRocm93SW5zdGFudGlhdGlvbkVycm9yKCk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiB0aGUgZGlzY2FyZCBwb2xpY3kgaXMgcmVhZHkgdG8gcHJvY2VzcyBpbWFnZXMuXG4gKiBAZnVuY3Rpb25cbiAqXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZiB0aGUgZGlzY2FyZCBwb2xpY3kgaXMgcmVhZHkgdG8gcHJvY2VzcyBpbWFnZXM7IG90aGVyd2lzZSwgZmFsc2UuXG4gKi9cblRpbGVEaXNjYXJkUG9saWN5LnByb3RvdHlwZS5pc1JlYWR5ID0gRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3I7XG5cbi8qKlxuICogR2l2ZW4gYSB0aWxlIGltYWdlLCBkZWNpZGUgd2hldGhlciB0byBkaXNjYXJkIHRoYXQgaW1hZ2UuXG4gKiBAZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge0hUTUxJbWFnZUVsZW1lbnR9IGltYWdlIEFuIGltYWdlIHRvIHRlc3QuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZiB0aGUgaW1hZ2Ugc2hvdWxkIGJlIGRpc2NhcmRlZDsgb3RoZXJ3aXNlLCBmYWxzZS5cbiAqL1xuVGlsZURpc2NhcmRQb2xpY3kucHJvdG90eXBlLnNob3VsZERpc2NhcmRJbWFnZSA9XG4gIERldmVsb3BlckVycm9yLnRocm93SW5zdGFudGlhdGlvbkVycm9yO1xuZXhwb3J0IGRlZmF1bHQgVGlsZURpc2NhcmRQb2xpY3k7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///39867\n')},70262:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82982);\n/* harmony import */ var _ImageryState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73919);\n\n\n\n/**\n * The assocation between a terrain tile and an imagery tile.\n *\n * @alias TileImagery\n * @private\n *\n * @param {Imagery} imagery The imagery tile.\n * @param {Cartesian4} textureCoordinateRectangle The texture rectangle of the tile that is covered\n *        by the imagery, where X=west, Y=south, Z=east, W=north.\n * @param {Boolean} useWebMercatorT true to use the Web Mercator texture coordinates for this imagery tile.\n */\nfunction TileImagery(imagery, textureCoordinateRectangle, useWebMercatorT) {\n  this.readyImagery = undefined;\n  this.loadingImagery = imagery;\n  this.textureCoordinateRectangle = textureCoordinateRectangle;\n  this.textureTranslationAndScale = undefined;\n  this.useWebMercatorT = useWebMercatorT;\n}\n\n/**\n * Frees the resources held by this instance.\n */\nTileImagery.prototype.freeResources = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this.readyImagery)) {\n    this.readyImagery.releaseReference();\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this.loadingImagery)) {\n    this.loadingImagery.releaseReference();\n  }\n};\n\n/**\n * Processes the load state machine for this instance.\n *\n * @param {Tile} tile The tile to which this instance belongs.\n * @param {FrameState} frameState The frameState.\n * @param {Boolean} skipLoading True to skip loading, e.g. new requests, creating textures. This function will\n *                  still synchronously process imagery that\'s already mostly ready to go, e.g. use textures\n *                  already loaded on ancestor tiles.\n * @returns {Boolean} True if this instance is done loading; otherwise, false.\n */\nTileImagery.prototype.processStateMachine = function (\n  tile,\n  frameState,\n  skipLoading\n) {\n  var loadingImagery = this.loadingImagery;\n  var imageryLayer = loadingImagery.imageryLayer;\n\n  loadingImagery.processStateMachine(\n    frameState,\n    !this.useWebMercatorT,\n    skipLoading\n  );\n\n  if (loadingImagery.state === _ImageryState_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].READY */ .Z.READY) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this.readyImagery)) {\n      this.readyImagery.releaseReference();\n    }\n    this.readyImagery = this.loadingImagery;\n    this.loadingImagery = undefined;\n    this.textureTranslationAndScale = imageryLayer._calculateTextureTranslationAndScale(\n      tile,\n      this\n    );\n    return true; // done loading\n  }\n\n  // Find some ancestor imagery we can use while this imagery is still loading.\n  var ancestor = loadingImagery.parent;\n  var closestAncestorThatNeedsLoading;\n  while (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(ancestor) &&\n    (ancestor.state !== _ImageryState_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].READY */ .Z.READY ||\n      (!this.useWebMercatorT && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(ancestor.texture)))\n  ) {\n    if (\n      ancestor.state !== _ImageryState_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].FAILED */ .Z.FAILED &&\n      ancestor.state !== _ImageryState_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].INVALID */ .Z.INVALID\n    ) {\n      // ancestor is still loading\n      closestAncestorThatNeedsLoading =\n        closestAncestorThatNeedsLoading || ancestor;\n    }\n    ancestor = ancestor.parent;\n  }\n\n  if (this.readyImagery !== ancestor) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this.readyImagery)) {\n      this.readyImagery.releaseReference();\n    }\n\n    this.readyImagery = ancestor;\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(ancestor)) {\n      ancestor.addReference();\n      this.textureTranslationAndScale = imageryLayer._calculateTextureTranslationAndScale(\n        tile,\n        this\n      );\n    }\n  }\n\n  if (\n    loadingImagery.state === _ImageryState_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].FAILED */ .Z.FAILED ||\n    loadingImagery.state === _ImageryState_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].INVALID */ .Z.INVALID\n  ) {\n    // The imagery tile is failed or invalid, so we\'d like to use an ancestor instead.\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(closestAncestorThatNeedsLoading)) {\n      // Push the ancestor\'s load process along a bit.  This is necessary because some ancestor imagery\n      // tiles may not be attached directly to a terrain tile.  Such tiles will never load if\n      // we don\'t do it here.\n      closestAncestorThatNeedsLoading.processStateMachine(\n        frameState,\n        !this.useWebMercatorT,\n        skipLoading\n      );\n      return false; // not done loading\n    }\n    // This imagery tile is failed or invalid, and we have the "best available" substitute.\n    return true; // done loading\n  }\n\n  return false; // not done loading\n};\n/* harmony default export */ __webpack_exports__["Z"] = (TileImagery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAyNjIuanMiLCJtYXBwaW5ncyI6Ijs7QUFBeUM7QUFDSTs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsWUFBWTtBQUN2QjtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxxRUFBTztBQUNiO0FBQ0E7O0FBRUEsTUFBTSxxRUFBTztBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsU0FBUztBQUNwQjtBQUNBO0FBQ0EsYUFBYSxTQUFTLHVDQUF1QztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0JBQStCLDZFQUFrQjtBQUNqRCxRQUFRLHFFQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkscUVBQU87QUFDWCx3QkFBd0IsNkVBQWtCO0FBQzFDLGlDQUFpQyxxRUFBTztBQUN4QztBQUNBO0FBQ0EseUJBQXlCLCtFQUFtQjtBQUM1Qyx5QkFBeUIsaUZBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSxxRUFBTztBQUNmO0FBQ0E7O0FBRUE7O0FBRUEsUUFBUSxxRUFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCLCtFQUFtQjtBQUNoRCw2QkFBNkIsaUZBQW9CO0FBQ2pEO0FBQ0E7QUFDQSxRQUFRLHFFQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCOztBQUVBLGdCQUFnQjtBQUNoQjtBQUNBLHlEQUFlLFdBQVcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9UaWxlSW1hZ2VyeS5qcz83M2VhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBJbWFnZXJ5U3RhdGUgZnJvbSBcIi4vSW1hZ2VyeVN0YXRlLmpzXCI7XG5cbi8qKlxuICogVGhlIGFzc29jYXRpb24gYmV0d2VlbiBhIHRlcnJhaW4gdGlsZSBhbmQgYW4gaW1hZ2VyeSB0aWxlLlxuICpcbiAqIEBhbGlhcyBUaWxlSW1hZ2VyeVxuICogQHByaXZhdGVcbiAqXG4gKiBAcGFyYW0ge0ltYWdlcnl9IGltYWdlcnkgVGhlIGltYWdlcnkgdGlsZS5cbiAqIEBwYXJhbSB7Q2FydGVzaWFuNH0gdGV4dHVyZUNvb3JkaW5hdGVSZWN0YW5nbGUgVGhlIHRleHR1cmUgcmVjdGFuZ2xlIG9mIHRoZSB0aWxlIHRoYXQgaXMgY292ZXJlZFxuICogICAgICAgIGJ5IHRoZSBpbWFnZXJ5LCB3aGVyZSBYPXdlc3QsIFk9c291dGgsIFo9ZWFzdCwgVz1ub3J0aC5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdXNlV2ViTWVyY2F0b3JUIHRydWUgdG8gdXNlIHRoZSBXZWIgTWVyY2F0b3IgdGV4dHVyZSBjb29yZGluYXRlcyBmb3IgdGhpcyBpbWFnZXJ5IHRpbGUuXG4gKi9cbmZ1bmN0aW9uIFRpbGVJbWFnZXJ5KGltYWdlcnksIHRleHR1cmVDb29yZGluYXRlUmVjdGFuZ2xlLCB1c2VXZWJNZXJjYXRvclQpIHtcbiAgdGhpcy5yZWFkeUltYWdlcnkgPSB1bmRlZmluZWQ7XG4gIHRoaXMubG9hZGluZ0ltYWdlcnkgPSBpbWFnZXJ5O1xuICB0aGlzLnRleHR1cmVDb29yZGluYXRlUmVjdGFuZ2xlID0gdGV4dHVyZUNvb3JkaW5hdGVSZWN0YW5nbGU7XG4gIHRoaXMudGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGUgPSB1bmRlZmluZWQ7XG4gIHRoaXMudXNlV2ViTWVyY2F0b3JUID0gdXNlV2ViTWVyY2F0b3JUO1xufVxuXG4vKipcbiAqIEZyZWVzIHRoZSByZXNvdXJjZXMgaGVsZCBieSB0aGlzIGluc3RhbmNlLlxuICovXG5UaWxlSW1hZ2VyeS5wcm90b3R5cGUuZnJlZVJlc291cmNlcyA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKGRlZmluZWQodGhpcy5yZWFkeUltYWdlcnkpKSB7XG4gICAgdGhpcy5yZWFkeUltYWdlcnkucmVsZWFzZVJlZmVyZW5jZSgpO1xuICB9XG5cbiAgaWYgKGRlZmluZWQodGhpcy5sb2FkaW5nSW1hZ2VyeSkpIHtcbiAgICB0aGlzLmxvYWRpbmdJbWFnZXJ5LnJlbGVhc2VSZWZlcmVuY2UoKTtcbiAgfVxufTtcblxuLyoqXG4gKiBQcm9jZXNzZXMgdGhlIGxvYWQgc3RhdGUgbWFjaGluZSBmb3IgdGhpcyBpbnN0YW5jZS5cbiAqXG4gKiBAcGFyYW0ge1RpbGV9IHRpbGUgVGhlIHRpbGUgdG8gd2hpY2ggdGhpcyBpbnN0YW5jZSBiZWxvbmdzLlxuICogQHBhcmFtIHtGcmFtZVN0YXRlfSBmcmFtZVN0YXRlIFRoZSBmcmFtZVN0YXRlLlxuICogQHBhcmFtIHtCb29sZWFufSBza2lwTG9hZGluZyBUcnVlIHRvIHNraXAgbG9hZGluZywgZS5nLiBuZXcgcmVxdWVzdHMsIGNyZWF0aW5nIHRleHR1cmVzLiBUaGlzIGZ1bmN0aW9uIHdpbGxcbiAqICAgICAgICAgICAgICAgICAgc3RpbGwgc3luY2hyb25vdXNseSBwcm9jZXNzIGltYWdlcnkgdGhhdCdzIGFscmVhZHkgbW9zdGx5IHJlYWR5IHRvIGdvLCBlLmcuIHVzZSB0ZXh0dXJlc1xuICogICAgICAgICAgICAgICAgICBhbHJlYWR5IGxvYWRlZCBvbiBhbmNlc3RvciB0aWxlcy5cbiAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmIHRoaXMgaW5zdGFuY2UgaXMgZG9uZSBsb2FkaW5nOyBvdGhlcndpc2UsIGZhbHNlLlxuICovXG5UaWxlSW1hZ2VyeS5wcm90b3R5cGUucHJvY2Vzc1N0YXRlTWFjaGluZSA9IGZ1bmN0aW9uIChcbiAgdGlsZSxcbiAgZnJhbWVTdGF0ZSxcbiAgc2tpcExvYWRpbmdcbikge1xuICB2YXIgbG9hZGluZ0ltYWdlcnkgPSB0aGlzLmxvYWRpbmdJbWFnZXJ5O1xuICB2YXIgaW1hZ2VyeUxheWVyID0gbG9hZGluZ0ltYWdlcnkuaW1hZ2VyeUxheWVyO1xuXG4gIGxvYWRpbmdJbWFnZXJ5LnByb2Nlc3NTdGF0ZU1hY2hpbmUoXG4gICAgZnJhbWVTdGF0ZSxcbiAgICAhdGhpcy51c2VXZWJNZXJjYXRvclQsXG4gICAgc2tpcExvYWRpbmdcbiAgKTtcblxuICBpZiAobG9hZGluZ0ltYWdlcnkuc3RhdGUgPT09IEltYWdlcnlTdGF0ZS5SRUFEWSkge1xuICAgIGlmIChkZWZpbmVkKHRoaXMucmVhZHlJbWFnZXJ5KSkge1xuICAgICAgdGhpcy5yZWFkeUltYWdlcnkucmVsZWFzZVJlZmVyZW5jZSgpO1xuICAgIH1cbiAgICB0aGlzLnJlYWR5SW1hZ2VyeSA9IHRoaXMubG9hZGluZ0ltYWdlcnk7XG4gICAgdGhpcy5sb2FkaW5nSW1hZ2VyeSA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnRleHR1cmVUcmFuc2xhdGlvbkFuZFNjYWxlID0gaW1hZ2VyeUxheWVyLl9jYWxjdWxhdGVUZXh0dXJlVHJhbnNsYXRpb25BbmRTY2FsZShcbiAgICAgIHRpbGUsXG4gICAgICB0aGlzXG4gICAgKTtcbiAgICByZXR1cm4gdHJ1ZTsgLy8gZG9uZSBsb2FkaW5nXG4gIH1cblxuICAvLyBGaW5kIHNvbWUgYW5jZXN0b3IgaW1hZ2VyeSB3ZSBjYW4gdXNlIHdoaWxlIHRoaXMgaW1hZ2VyeSBpcyBzdGlsbCBsb2FkaW5nLlxuICB2YXIgYW5jZXN0b3IgPSBsb2FkaW5nSW1hZ2VyeS5wYXJlbnQ7XG4gIHZhciBjbG9zZXN0QW5jZXN0b3JUaGF0TmVlZHNMb2FkaW5nO1xuICB3aGlsZSAoXG4gICAgZGVmaW5lZChhbmNlc3RvcikgJiZcbiAgICAoYW5jZXN0b3Iuc3RhdGUgIT09IEltYWdlcnlTdGF0ZS5SRUFEWSB8fFxuICAgICAgKCF0aGlzLnVzZVdlYk1lcmNhdG9yVCAmJiAhZGVmaW5lZChhbmNlc3Rvci50ZXh0dXJlKSkpXG4gICkge1xuICAgIGlmIChcbiAgICAgIGFuY2VzdG9yLnN0YXRlICE9PSBJbWFnZXJ5U3RhdGUuRkFJTEVEICYmXG4gICAgICBhbmNlc3Rvci5zdGF0ZSAhPT0gSW1hZ2VyeVN0YXRlLklOVkFMSURcbiAgICApIHtcbiAgICAgIC8vIGFuY2VzdG9yIGlzIHN0aWxsIGxvYWRpbmdcbiAgICAgIGNsb3Nlc3RBbmNlc3RvclRoYXROZWVkc0xvYWRpbmcgPVxuICAgICAgICBjbG9zZXN0QW5jZXN0b3JUaGF0TmVlZHNMb2FkaW5nIHx8IGFuY2VzdG9yO1xuICAgIH1cbiAgICBhbmNlc3RvciA9IGFuY2VzdG9yLnBhcmVudDtcbiAgfVxuXG4gIGlmICh0aGlzLnJlYWR5SW1hZ2VyeSAhPT0gYW5jZXN0b3IpIHtcbiAgICBpZiAoZGVmaW5lZCh0aGlzLnJlYWR5SW1hZ2VyeSkpIHtcbiAgICAgIHRoaXMucmVhZHlJbWFnZXJ5LnJlbGVhc2VSZWZlcmVuY2UoKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlYWR5SW1hZ2VyeSA9IGFuY2VzdG9yO1xuXG4gICAgaWYgKGRlZmluZWQoYW5jZXN0b3IpKSB7XG4gICAgICBhbmNlc3Rvci5hZGRSZWZlcmVuY2UoKTtcbiAgICAgIHRoaXMudGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGUgPSBpbWFnZXJ5TGF5ZXIuX2NhbGN1bGF0ZVRleHR1cmVUcmFuc2xhdGlvbkFuZFNjYWxlKFxuICAgICAgICB0aWxlLFxuICAgICAgICB0aGlzXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIGlmIChcbiAgICBsb2FkaW5nSW1hZ2VyeS5zdGF0ZSA9PT0gSW1hZ2VyeVN0YXRlLkZBSUxFRCB8fFxuICAgIGxvYWRpbmdJbWFnZXJ5LnN0YXRlID09PSBJbWFnZXJ5U3RhdGUuSU5WQUxJRFxuICApIHtcbiAgICAvLyBUaGUgaW1hZ2VyeSB0aWxlIGlzIGZhaWxlZCBvciBpbnZhbGlkLCBzbyB3ZSdkIGxpa2UgdG8gdXNlIGFuIGFuY2VzdG9yIGluc3RlYWQuXG4gICAgaWYgKGRlZmluZWQoY2xvc2VzdEFuY2VzdG9yVGhhdE5lZWRzTG9hZGluZykpIHtcbiAgICAgIC8vIFB1c2ggdGhlIGFuY2VzdG9yJ3MgbG9hZCBwcm9jZXNzIGFsb25nIGEgYml0LiAgVGhpcyBpcyBuZWNlc3NhcnkgYmVjYXVzZSBzb21lIGFuY2VzdG9yIGltYWdlcnlcbiAgICAgIC8vIHRpbGVzIG1heSBub3QgYmUgYXR0YWNoZWQgZGlyZWN0bHkgdG8gYSB0ZXJyYWluIHRpbGUuICBTdWNoIHRpbGVzIHdpbGwgbmV2ZXIgbG9hZCBpZlxuICAgICAgLy8gd2UgZG9uJ3QgZG8gaXQgaGVyZS5cbiAgICAgIGNsb3Nlc3RBbmNlc3RvclRoYXROZWVkc0xvYWRpbmcucHJvY2Vzc1N0YXRlTWFjaGluZShcbiAgICAgICAgZnJhbWVTdGF0ZSxcbiAgICAgICAgIXRoaXMudXNlV2ViTWVyY2F0b3JULFxuICAgICAgICBza2lwTG9hZGluZ1xuICAgICAgKTtcbiAgICAgIHJldHVybiBmYWxzZTsgLy8gbm90IGRvbmUgbG9hZGluZ1xuICAgIH1cbiAgICAvLyBUaGlzIGltYWdlcnkgdGlsZSBpcyBmYWlsZWQgb3IgaW52YWxpZCwgYW5kIHdlIGhhdmUgdGhlIFwiYmVzdCBhdmFpbGFibGVcIiBzdWJzdGl0dXRlLlxuICAgIHJldHVybiB0cnVlOyAvLyBkb25lIGxvYWRpbmdcbiAgfVxuXG4gIHJldHVybiBmYWxzZTsgLy8gbm90IGRvbmUgbG9hZGluZ1xufTtcbmV4cG9ydCBkZWZhdWx0IFRpbGVJbWFnZXJ5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///70262\n')},80360:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51688);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Core_GeographicProjection_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39756);\n/* harmony import */ var _Core_GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(71351);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(96190);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(68985);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(9407);\n/* harmony import */ var _Core_TileProviderError_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(9121);\n/* harmony import */ var _Core_WebMercatorTilingScheme_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(42423);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(13222);\n/* harmony import */ var _UrlTemplateImageryProvider_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(24855);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {Object} TileMapServiceImageryProvider.ConstructorOptions\n *\n * Initialization options for the TileMapServiceImageryProvider constructor\n *\n * @property {Resource|String|Promise<Resource>|Promise<String>} [url=\'.\'] Path to image tiles on server.\n * @property {String} [fileExtension=\'png\'] The file extension for images on the server.\n * @property {Credit|String} [credit=\'\'] A credit for the data source, which is displayed on the canvas.\n * @property {Number} [minimumLevel=0] The minimum level-of-detail supported by the imagery provider.  Take care when specifying\n *                 this that the number of tiles at the minimum level is small, such as four or less.  A larger number is likely\n *                 to result in rendering problems.\n * @property {Number} [maximumLevel] The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n * @property {Rectangle} [rectangle=Rectangle.MAX_VALUE] The rectangle, in radians, covered by the image.\n * @property {TilingScheme} [tilingScheme] The tiling scheme specifying how the ellipsoidal\n * surface is broken into tiles.  If this parameter is not provided, a {@link WebMercatorTilingScheme}\n * is used.\n * @property {Ellipsoid} [ellipsoid] The ellipsoid.  If the tilingScheme is specified,\n *                    this parameter is ignored and the tiling scheme\'s ellipsoid is used instead. If neither\n *                    parameter is specified, the WGS84 ellipsoid is used.\n * @property {Number} [tileWidth=256] Pixel width of image tiles.\n * @property {Number} [tileHeight=256] Pixel height of image tiles.\n * @property {Boolean} [flipXY] Older versions of gdal2tiles.py flipped X and Y values in tilemapresource.xml.\n * Specifying this option will do the same, allowing for loading of these incorrect tilesets.\n */\n\n/**\n * An imagery provider that provides tiled imagery as generated by\n * {@link http://www.maptiler.org/|MapTiler}, {@link http://www.klokan.cz/projects/gdal2tiles/|GDAL2Tiles}, etc.\n *\n * @alias TileMapServiceImageryProvider\n * @constructor\n * @extends UrlTemplateImageryProvider\n *\n * @param {TileMapServiceImageryProvider.ConstructorOptions} options Object describing initialization options\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see OpenStreetMapImageryProvider\n * @see SingleTileImageryProvider\n * @see WebMapServiceImageryProvider\n * @see WebMapTileServiceImageryProvider\n * @see UrlTemplateImageryProvider\n *\n * @example\n * var tms = new Cesium.TileMapServiceImageryProvider({\n *    url : \'../images/cesium_maptiler/Cesium_Logo_Color\',\n *    fileExtension: \'png\',\n *    maximumLevel: 4,\n *    rectangle: new Cesium.Rectangle(\n *        Cesium.Math.toRadians(-120.0),\n *        Cesium.Math.toRadians(20.0),\n *        Cesium.Math.toRadians(-60.0),\n *        Cesium.Math.toRadians(40.0))\n * });\n */\nfunction TileMapServiceImageryProvider(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(options.url)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("options.url is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var deferred = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].defer */ .Z.defer();\n  _UrlTemplateImageryProvider_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].call */ .Z.call(this, deferred.promise);\n\n  this._tmsResource = undefined;\n  this._xmlResource = undefined;\n  this._options = options;\n  this._deferred = deferred;\n  this._metadataError = undefined;\n\n  this._metadataSuccess = this._metadataSuccess.bind(this);\n  this._metadataFailure = this._metadataFailure.bind(this);\n  this._requestMetadata = this._requestMetadata.bind(this);\n\n  var resource;\n  var that = this;\n  (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.url)\n    .then(function (url) {\n      resource = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].createIfNeeded */ .Z.createIfNeeded(url);\n      resource.appendForwardSlash();\n\n      that._tmsResource = resource;\n      that._xmlResource = resource.getDerivedResource({\n        url: "tilemapresource.xml",\n      });\n\n      that._requestMetadata();\n    })\n    .otherwise(function (e) {\n      deferred.reject(e);\n    });\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(Object.create)) {\n  TileMapServiceImageryProvider.prototype = Object.create(\n    _UrlTemplateImageryProvider_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].prototype */ .Z.prototype\n  );\n  TileMapServiceImageryProvider.prototype.constructor = TileMapServiceImageryProvider;\n}\n\nTileMapServiceImageryProvider.prototype._requestMetadata = function () {\n  // Try to load remaining parameters from XML\n  this._xmlResource\n    .fetchXML()\n    .then(this._metadataSuccess)\n    .otherwise(this._metadataFailure);\n};\n\n/**\n * Mutates the properties of a given rectangle so it does not extend outside of the given tiling scheme\'s rectangle\n * @private\n */\nfunction confineRectangleToTilingScheme(rectangle, tilingScheme) {\n  if (rectangle.west < tilingScheme.rectangle.west) {\n    rectangle.west = tilingScheme.rectangle.west;\n  }\n  if (rectangle.east > tilingScheme.rectangle.east) {\n    rectangle.east = tilingScheme.rectangle.east;\n  }\n  if (rectangle.south < tilingScheme.rectangle.south) {\n    rectangle.south = tilingScheme.rectangle.south;\n  }\n  if (rectangle.north > tilingScheme.rectangle.north) {\n    rectangle.north = tilingScheme.rectangle.north;\n  }\n  return rectangle;\n}\n\nfunction calculateSafeMinimumDetailLevel(\n  tilingScheme,\n  rectangle,\n  minimumLevel\n) {\n  // Check the number of tiles at the minimum level.  If it\'s more than four,\n  // try requesting the lower levels anyway, because starting at the higher minimum\n  // level will cause too many tiles to be downloaded and rendered.\n  var swTile = tilingScheme.positionToTileXY(\n    _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].southwest */ .Z.southwest(rectangle),\n    minimumLevel\n  );\n  var neTile = tilingScheme.positionToTileXY(\n    _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].northeast */ .Z.northeast(rectangle),\n    minimumLevel\n  );\n  var tileCount =\n    (Math.abs(neTile.x - swTile.x) + 1) * (Math.abs(neTile.y - swTile.y) + 1);\n  if (tileCount > 4) {\n    return 0;\n  }\n  return minimumLevel;\n}\n\nTileMapServiceImageryProvider.prototype._metadataSuccess = function (xml) {\n  var tileFormatRegex = /tileformat/i;\n  var tileSetRegex = /tileset/i;\n  var tileSetsRegex = /tilesets/i;\n  var bboxRegex = /boundingbox/i;\n  var format, bbox, tilesets;\n  var tilesetsList = []; //list of TileSets\n  var xmlResource = this._xmlResource;\n  var metadataError = this._metadataError;\n  var deferred = this._deferred;\n  var requestMetadata = this._requestMetadata;\n\n  // Allowing options properties (already copied to that) to override XML values\n\n  // Iterate XML Document nodes for properties\n  var nodeList = xml.childNodes[0].childNodes;\n  for (var i = 0; i < nodeList.length; i++) {\n    if (tileFormatRegex.test(nodeList.item(i).nodeName)) {\n      format = nodeList.item(i);\n    } else if (tileSetsRegex.test(nodeList.item(i).nodeName)) {\n      tilesets = nodeList.item(i); // Node list of TileSets\n      var tileSetNodes = nodeList.item(i).childNodes;\n      // Iterate the nodes to find all TileSets\n      for (var j = 0; j < tileSetNodes.length; j++) {\n        if (tileSetRegex.test(tileSetNodes.item(j).nodeName)) {\n          // Add them to tilesets list\n          tilesetsList.push(tileSetNodes.item(j));\n        }\n      }\n    } else if (bboxRegex.test(nodeList.item(i).nodeName)) {\n      bbox = nodeList.item(i);\n    }\n  }\n\n  var message;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(tilesets) || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(bbox)) {\n    message =\n      "Unable to find expected tilesets or bbox attributes in " +\n      xmlResource.url +\n      ".";\n    metadataError = _Core_TileProviderError_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].handleError */ .Z.handleError(\n      metadataError,\n      this,\n      this.errorEvent,\n      message,\n      undefined,\n      undefined,\n      undefined,\n      requestMetadata\n    );\n    if (!metadataError.retry) {\n      deferred.reject(new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(message));\n    }\n    this._metadataError = metadataError;\n    return;\n  }\n\n  var options = this._options;\n  var fileExtension = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.fileExtension,\n    format.getAttribute("extension")\n  );\n  var tileWidth = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.tileWidth,\n    parseInt(format.getAttribute("width"), 10)\n  );\n  var tileHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.tileHeight,\n    parseInt(format.getAttribute("height"), 10)\n  );\n  var minimumLevel = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.minimumLevel,\n    parseInt(tilesetsList[0].getAttribute("order"), 10)\n  );\n  var maximumLevel = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.maximumLevel,\n    parseInt(tilesetsList[tilesetsList.length - 1].getAttribute("order"), 10)\n  );\n  var tilingSchemeName = tilesets.getAttribute("profile");\n  var tilingScheme = options.tilingScheme;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(tilingScheme)) {\n    if (\n      tilingSchemeName === "geodetic" ||\n      tilingSchemeName === "global-geodetic"\n    ) {\n      tilingScheme = new _Core_GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z({\n        ellipsoid: options.ellipsoid,\n      });\n    } else if (\n      tilingSchemeName === "mercator" ||\n      tilingSchemeName === "global-mercator"\n    ) {\n      tilingScheme = new _Core_WebMercatorTilingScheme_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n        ellipsoid: options.ellipsoid,\n      });\n    } else {\n      message =\n        xmlResource.url +\n        "specifies an unsupported profile attribute, " +\n        tilingSchemeName +\n        ".";\n      metadataError = _Core_TileProviderError_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].handleError */ .Z.handleError(\n        metadataError,\n        this,\n        this.errorEvent,\n        message,\n        undefined,\n        undefined,\n        undefined,\n        requestMetadata\n      );\n      if (!metadataError.retry) {\n        deferred.reject(new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(message));\n      }\n      this._metadataError = metadataError;\n      return;\n    }\n  }\n\n  // rectangle handling\n  var rectangle = _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(options.rectangle);\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(rectangle)) {\n    var sw;\n    var ne;\n    var swXY;\n    var neXY;\n\n    // In older versions of gdal x and y values were flipped, which is why we check for an option to flip\n    // the values here as well. Unfortunately there is no way to autodetect whether flipping is needed.\n    var flipXY = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.flipXY, false);\n    if (flipXY) {\n      swXY = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n        parseFloat(bbox.getAttribute("miny")),\n        parseFloat(bbox.getAttribute("minx"))\n      );\n      neXY = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n        parseFloat(bbox.getAttribute("maxy")),\n        parseFloat(bbox.getAttribute("maxx"))\n      );\n    } else {\n      swXY = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n        parseFloat(bbox.getAttribute("minx")),\n        parseFloat(bbox.getAttribute("miny"))\n      );\n      neXY = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n        parseFloat(bbox.getAttribute("maxx")),\n        parseFloat(bbox.getAttribute("maxy"))\n      );\n    }\n\n    // Determine based on the profile attribute if this tileset was generated by gdal2tiles.py, which\n    // uses \'mercator\' and \'geodetic\' profiles, or by a tool compliant with the TMS standard, which is\n    // \'global-mercator\' and \'global-geodetic\' profiles. In the gdal2Tiles case, X and Y are always in\n    // geodetic degrees.\n    var isGdal2tiles =\n      tilingSchemeName === "geodetic" || tilingSchemeName === "mercator";\n    if (\n      tilingScheme.projection instanceof _Core_GeographicProjection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z ||\n      isGdal2tiles\n    ) {\n      sw = _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromDegrees */ .Z.fromDegrees(swXY.x, swXY.y);\n      ne = _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromDegrees */ .Z.fromDegrees(neXY.x, neXY.y);\n    } else {\n      var projection = tilingScheme.projection;\n      sw = projection.unproject(swXY);\n      ne = projection.unproject(neXY);\n    }\n\n    rectangle = new _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      sw.longitude,\n      sw.latitude,\n      ne.longitude,\n      ne.latitude\n    );\n  }\n\n  // The rectangle must not be outside the bounds allowed by the tiling scheme.\n  rectangle = confineRectangleToTilingScheme(rectangle, tilingScheme);\n  // clamp our minimum detail level to something that isn\'t going to request a ridiculous number of tiles\n  minimumLevel = calculateSafeMinimumDetailLevel(\n    tilingScheme,\n    rectangle,\n    minimumLevel\n  );\n\n  var templateResource = this._tmsResource.getDerivedResource({\n    url: "{z}/{x}/{reverseY}." + fileExtension,\n  });\n\n  deferred.resolve({\n    url: templateResource,\n    tilingScheme: tilingScheme,\n    rectangle: rectangle,\n    tileWidth: tileWidth,\n    tileHeight: tileHeight,\n    minimumLevel: minimumLevel,\n    maximumLevel: maximumLevel,\n    tileDiscardPolicy: options.tileDiscardPolicy,\n    credit: options.credit,\n  });\n};\n\nTileMapServiceImageryProvider.prototype._metadataFailure = function (error) {\n  // Can\'t load XML, still allow options and defaults\n  var options = this._options;\n  var fileExtension = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.fileExtension, "png");\n  var tileWidth = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.tileWidth, 256);\n  var tileHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.tileHeight, 256);\n  var maximumLevel = options.maximumLevel;\n  var tilingScheme = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(options.tilingScheme)\n    ? options.tilingScheme\n    : new _Core_WebMercatorTilingScheme_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({ ellipsoid: options.ellipsoid });\n\n  var rectangle = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.rectangle, tilingScheme.rectangle);\n  // The rectangle must not be outside the bounds allowed by the tiling scheme.\n  rectangle = confineRectangleToTilingScheme(rectangle, tilingScheme);\n\n  // make sure we use a safe minimum detail level, so we don\'t request a ridiculous number of tiles\n  var minimumLevel = calculateSafeMinimumDetailLevel(\n    tilingScheme,\n    rectangle,\n    options.maximumLevel\n  );\n\n  var templateResource = this._tmsResource.getDerivedResource({\n    url: "{z}/{x}/{reverseY}." + fileExtension,\n  });\n\n  this._deferred.resolve({\n    url: templateResource,\n    tilingScheme: tilingScheme,\n    rectangle: rectangle,\n    tileWidth: tileWidth,\n    tileHeight: tileHeight,\n    minimumLevel: minimumLevel,\n    maximumLevel: maximumLevel,\n    tileDiscardPolicy: options.tileDiscardPolicy,\n    credit: options.credit,\n  });\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (TileMapServiceImageryProvider);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///80360\n')},8796:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ TileMetadata; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18349);\n\n\n\n\n/**\n * Metadata about a 3D Tile. This represents the <code>3DTILES_metadata</code>\n * extension on a single {@link Cesium3DTile}\n * <p>\n * See the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_metadata|3DTILES_metadata Extension} for 3D Tiles\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} options.tile The extension JSON attached to the tile.\n * @param {MetadataClass} [options.class] The class that the tile metadata conforms to.\n *\n * @alias TileMetadata\n * @constructor\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction TileMetadata(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.tile", options.tile);\n  //>>includeEnd(\'debug\');\n\n  this._class = options.class;\n\n  var tileMetadata = options.tile;\n  this._properties = tileMetadata.properties;\n  this._extensions = tileMetadata.extensions;\n  this._extras = tileMetadata.extras;\n}\n\nObject.defineProperties(TileMetadata.prototype, {\n  /**\n   * The class that properties conform to.\n   *\n   * @memberof TileMetadata.prototype\n   * @type {MetadataClass}\n   * @readonly\n   * @private\n   */\n  class: {\n    get: function () {\n      return this._class;\n    },\n  },\n\n  /**\n   * Extras in the JSON object.\n   *\n   * @memberof TileMetadata.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * Extensions in the JSON object.\n   *\n   * @memberof TileMetadata.prototype\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\n/**\n * Returns whether the tile has this property.\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {Boolean} Whether the tile has this property.\n * @private\n */\nTileMetadata.prototype.hasProperty = function (propertyId) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].hasProperty */ .Z.hasProperty(propertyId, this._properties, this._class);\n};\n\n/**\n * Returns whether the tile has a property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {Boolean} Whether the tile has a property with the given semantic.\n * @private\n */\nTileMetadata.prototype.hasPropertyBySemantic = function (semantic) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].hasPropertyBySemantic */ .Z.hasPropertyBySemantic(\n    semantic,\n    this._properties,\n    this._class\n  );\n};\n\n/**\n * Returns an array of property IDs.\n *\n * @param {String[]} [results] An array into which to store the results.\n * @returns {String[]} The property IDs.\n * @private\n */\nTileMetadata.prototype.getPropertyIds = function (results) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getPropertyIds */ .Z.getPropertyIds(this._properties, this._class, results);\n};\n\n/**\n * Returns a copy of the value of the property with the given ID.\n * <p>\n * If the property is normalized the normalized value is returned.\n * </p>\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the tile does not have this property.\n * @private\n */\nTileMetadata.prototype.getProperty = function (propertyId) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getProperty */ .Z.getProperty(propertyId, this._properties, this._class);\n};\n\n/**\n * Sets the value of the property with the given ID.\n * <p>\n * If the property is normalized a normalized value must be provided to this function.\n * </p>\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @param {*} value The value of the property that will be copied.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n * @private\n */\nTileMetadata.prototype.setProperty = function (propertyId, value) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].setProperty */ .Z.setProperty(\n    propertyId,\n    value,\n    this._properties,\n    this._class\n  );\n};\n\n/**\n * Returns a copy of the value of the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the tile does not have this semantic.\n * @private\n */\nTileMetadata.prototype.getPropertyBySemantic = function (semantic) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getPropertyBySemantic */ .Z.getPropertyBySemantic(\n    semantic,\n    this._properties,\n    this._class\n  );\n};\n\n/**\n * Sets the value of the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @param {*} value The value of the property that will be copied.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n * @private\n */\nTileMetadata.prototype.setPropertyBySemantic = function (semantic, value) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].setPropertyBySemantic */ .Z.setPropertyBySemantic(\n    semantic,\n    value,\n    this._properties,\n    this._class\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8796\n')},43338:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_BoxOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27495);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(92062);\n/* harmony import */ var _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(26865);\n/* harmony import */ var _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(68201);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(99417);\n/* harmony import */ var _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(25405);\n/* harmony import */ var _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(64060);\n/* harmony import */ var _Primitive_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(34380);\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar scratchU = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchV = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchW = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchCartesian = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nfunction computeMissingVector(a, b, result) {\n  result = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].cross */ .Z.cross(a, b, result);\n  var magnitude = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitude */ .Z.magnitude(result);\n  return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    result,\n    _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON7 */ .Z.EPSILON7 / magnitude,\n    result\n  );\n}\n\nfunction findOrthogonalVector(a, result) {\n  var temp = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].normalize */ .Z.normalize(a, scratchCartesian);\n  var b = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(temp, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNIT_X */ .Z.UNIT_X, _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON6 */ .Z.EPSILON6)\n    ? _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNIT_Y */ .Z.UNIT_Y\n    : _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNIT_X */ .Z.UNIT_X;\n  return computeMissingVector(a, b, result);\n}\n\nfunction checkHalfAxes(halfAxes) {\n  var u = _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 0, scratchU);\n  var v = _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 1, scratchV);\n  var w = _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 2, scratchW);\n\n  var uZero = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(u, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO);\n  var vZero = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(v, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO);\n  var wZero = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(w, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO);\n\n  if (!uZero && !vZero && !wZero) {\n    return halfAxes;\n  }\n  if (uZero && vZero && wZero) {\n    halfAxes[0] = _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON7 */ .Z.EPSILON7;\n    halfAxes[4] = _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON7 */ .Z.EPSILON7;\n    halfAxes[8] = _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON7 */ .Z.EPSILON7;\n    return halfAxes;\n  }\n  if (uZero && !vZero && !wZero) {\n    u = computeMissingVector(v, w, u);\n  } else if (!uZero && vZero && !wZero) {\n    v = computeMissingVector(u, w, v);\n  } else if (!uZero && !vZero && wZero) {\n    w = computeMissingVector(v, u, w);\n  } else if (!uZero) {\n    v = findOrthogonalVector(u, v);\n    w = computeMissingVector(v, u, w);\n  } else if (!vZero) {\n    u = findOrthogonalVector(v, u);\n    w = computeMissingVector(v, u, w);\n  } else if (!wZero) {\n    u = findOrthogonalVector(w, u);\n    v = computeMissingVector(w, u, v);\n  }\n\n  _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].setColumn */ .Z.setColumn(halfAxes, 0, u, halfAxes);\n  _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].setColumn */ .Z.setColumn(halfAxes, 1, v, halfAxes);\n  _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].setColumn */ .Z.setColumn(halfAxes, 2, w, halfAxes);\n\n  return halfAxes;\n}\n\n/**\n * A tile bounding volume specified as an oriented bounding box.\n * @alias TileOrientedBoundingBox\n * @constructor\n *\n * @param {Cartesian3} [center=Cartesian3.ZERO] The center of the box.\n * @param {Matrix3} [halfAxes=Matrix3.ZERO] The three orthogonal half-axes of the bounding box.\n *                                          Equivalently, the transformation matrix, to rotate and scale a 2x2x2\n *                                          cube centered at the origin.\n *\n * @private\n */\nfunction TileOrientedBoundingBox(center, halfAxes) {\n  halfAxes = checkHalfAxes(halfAxes);\n  this._orientedBoundingBox = new _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z(center, halfAxes);\n  this._boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromOrientedBoundingBox */ .Z.fromOrientedBoundingBox(\n    this._orientedBoundingBox\n  );\n}\n\nObject.defineProperties(TileOrientedBoundingBox.prototype, {\n  /**\n   * The underlying bounding volume.\n   *\n   * @memberof TileOrientedBoundingBox.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  boundingVolume: {\n    get: function () {\n      return this._orientedBoundingBox;\n    },\n  },\n  /**\n   * The underlying bounding sphere.\n   *\n   * @memberof TileOrientedBoundingBox.prototype\n   *\n   * @type {BoundingSphere}\n   * @readonly\n   */\n  boundingSphere: {\n    get: function () {\n      return this._boundingSphere;\n    },\n  },\n});\n\n/**\n * Computes the distance between this bounding box and the camera attached to frameState.\n *\n * @param {FrameState} frameState The frameState to which the camera is attached.\n * @returns {Number} The distance between the camera and the bounding box in meters. Returns 0 if the camera is inside the bounding volume.\n */\nTileOrientedBoundingBox.prototype.distanceToCamera = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("frameState", frameState);\n  //>>includeEnd(\'debug\');\n  return Math.sqrt(\n    this._orientedBoundingBox.distanceSquaredTo(frameState.camera.positionWC)\n  );\n};\n\n/**\n * Determines which side of a plane this box is located.\n *\n * @param {Plane} plane The plane to test against.\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire box is on the side of the plane\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire box is\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the box\n *                      intersects the plane.\n */\nTileOrientedBoundingBox.prototype.intersectPlane = function (plane) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("plane", plane);\n  //>>includeEnd(\'debug\');\n  return this._orientedBoundingBox.intersectPlane(plane);\n};\n\n/**\n * Update the bounding box after the tile is transformed.\n *\n * @param {Cartesian3} center The center of the box.\n * @param {Matrix3} halfAxes The three orthogonal half-axes of the bounding box.\n *                           Equivalently, the transformation matrix, to rotate and scale a 2x2x2\n *                           cube centered at the origin.\n */\nTileOrientedBoundingBox.prototype.update = function (center, halfAxes) {\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(center, this._orientedBoundingBox.center);\n  halfAxes = checkHalfAxes(halfAxes);\n  _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(halfAxes, this._orientedBoundingBox.halfAxes);\n  _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromOrientedBoundingBox */ .Z.fromOrientedBoundingBox(\n    this._orientedBoundingBox,\n    this._boundingSphere\n  );\n};\n\n/**\n * Creates a debug primitive that shows the outline of the box.\n *\n * @param {Color} color The desired color of the primitive\'s mesh\n * @return {Primitive}\n */\nTileOrientedBoundingBox.prototype.createDebugVolume = function (color) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("color", color);\n  //>>includeEnd(\'debug\');\n\n  var geometry = new _Core_BoxOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({\n    // Make a 2x2x2 cube\n    minimum: new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(-1.0, -1.0, -1.0),\n    maximum: new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(1.0, 1.0, 1.0),\n  });\n  var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].fromRotationTranslation */ .Z.fromRotationTranslation(\n    this.boundingVolume.halfAxes,\n    this.boundingVolume.center\n  );\n  var instance = new _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z({\n    geometry: geometry,\n    id: "outline",\n    modelMatrix: modelMatrix,\n    attributes: {\n      color: _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromColor */ .Z.fromColor(color),\n    },\n  });\n\n  return new _Primitive_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n    geometryInstances: instance,\n    appearance: new _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n      translucent: false,\n      flat: true,\n    }),\n    asynchronous: false,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (TileOrientedBoundingBox);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///43338\n')},26561:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82982);\n\n\n/**\n * A priority queue of tiles to be replaced, if necessary, to make room for new tiles.  The queue\n * is implemented as a linked list.\n *\n * @alias TileReplacementQueue\n * @private\n */\nfunction TileReplacementQueue() {\n  this.head = undefined;\n  this.tail = undefined;\n  this.count = 0;\n  this._lastBeforeStartOfFrame = undefined;\n}\n\n/**\n * Marks the start of the render frame.  Tiles before (closer to the head) this tile in the\n * list were used last frame and must not be unloaded.\n */\nTileReplacementQueue.prototype.markStartOfRenderFrame = function () {\n  this._lastBeforeStartOfFrame = this.head;\n};\n\n/**\n * Reduces the size of the queue to a specified size by unloading the least-recently used\n * tiles.  Tiles that were used last frame will not be unloaded, even if that puts the number\n * of tiles above the specified maximum.\n *\n * @param {Number} maximumTiles The maximum number of tiles in the queue.\n */\nTileReplacementQueue.prototype.trimTiles = function (maximumTiles) {\n  var tileToTrim = this.tail;\n  var keepTrimming = true;\n  while (\n    keepTrimming &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(this._lastBeforeStartOfFrame) &&\n    this.count > maximumTiles &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(tileToTrim)\n  ) {\n    // Stop trimming after we process the last tile not used in the\n    // current frame.\n    keepTrimming = tileToTrim !== this._lastBeforeStartOfFrame;\n\n    var previous = tileToTrim.replacementPrevious;\n\n    if (tileToTrim.eligibleForUnloading) {\n      tileToTrim.freeResources();\n      remove(this, tileToTrim);\n    }\n\n    tileToTrim = previous;\n  }\n};\n\nfunction remove(tileReplacementQueue, item) {\n  var previous = item.replacementPrevious;\n  var next = item.replacementNext;\n\n  if (item === tileReplacementQueue._lastBeforeStartOfFrame) {\n    tileReplacementQueue._lastBeforeStartOfFrame = next;\n  }\n\n  if (item === tileReplacementQueue.head) {\n    tileReplacementQueue.head = next;\n  } else {\n    previous.replacementNext = next;\n  }\n\n  if (item === tileReplacementQueue.tail) {\n    tileReplacementQueue.tail = previous;\n  } else {\n    next.replacementPrevious = previous;\n  }\n\n  item.replacementPrevious = undefined;\n  item.replacementNext = undefined;\n\n  --tileReplacementQueue.count;\n}\n\n/**\n * Marks a tile as rendered this frame and moves it before the first tile that was not rendered\n * this frame.\n *\n * @param {TileReplacementQueue} item The tile that was rendered.\n */\nTileReplacementQueue.prototype.markTileRendered = function (item) {\n  var head = this.head;\n  if (head === item) {\n    if (item === this._lastBeforeStartOfFrame) {\n      this._lastBeforeStartOfFrame = item.replacementNext;\n    }\n    return;\n  }\n\n  ++this.count;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(head)) {\n    // no other tiles in the list\n    item.replacementPrevious = undefined;\n    item.replacementNext = undefined;\n    this.head = item;\n    this.tail = item;\n    return;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(item.replacementPrevious) || (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(item.replacementNext)) {\n    // tile already in the list, remove from its current location\n    remove(this, item);\n  }\n\n  item.replacementPrevious = undefined;\n  item.replacementNext = head;\n  head.replacementPrevious = item;\n\n  this.head = item;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (TileReplacementQueue);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjY1NjEuanMiLCJtYXBwaW5ncyI6IjtBQUF5Qzs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFFQUFPO0FBQ1g7QUFDQSxJQUFJLHFFQUFPO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNCQUFzQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsT0FBTyxxRUFBTztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0scUVBQU8sOEJBQThCLHFFQUFPO0FBQ2xEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHlEQUFlLG9CQUFvQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL1RpbGVSZXBsYWNlbWVudFF1ZXVlLmpzPzk2NTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuXG4vKipcbiAqIEEgcHJpb3JpdHkgcXVldWUgb2YgdGlsZXMgdG8gYmUgcmVwbGFjZWQsIGlmIG5lY2Vzc2FyeSwgdG8gbWFrZSByb29tIGZvciBuZXcgdGlsZXMuICBUaGUgcXVldWVcbiAqIGlzIGltcGxlbWVudGVkIGFzIGEgbGlua2VkIGxpc3QuXG4gKlxuICogQGFsaWFzIFRpbGVSZXBsYWNlbWVudFF1ZXVlXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBUaWxlUmVwbGFjZW1lbnRRdWV1ZSgpIHtcbiAgdGhpcy5oZWFkID0gdW5kZWZpbmVkO1xuICB0aGlzLnRhaWwgPSB1bmRlZmluZWQ7XG4gIHRoaXMuY291bnQgPSAwO1xuICB0aGlzLl9sYXN0QmVmb3JlU3RhcnRPZkZyYW1lID0gdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIE1hcmtzIHRoZSBzdGFydCBvZiB0aGUgcmVuZGVyIGZyYW1lLiAgVGlsZXMgYmVmb3JlIChjbG9zZXIgdG8gdGhlIGhlYWQpIHRoaXMgdGlsZSBpbiB0aGVcbiAqIGxpc3Qgd2VyZSB1c2VkIGxhc3QgZnJhbWUgYW5kIG11c3Qgbm90IGJlIHVubG9hZGVkLlxuICovXG5UaWxlUmVwbGFjZW1lbnRRdWV1ZS5wcm90b3R5cGUubWFya1N0YXJ0T2ZSZW5kZXJGcmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fbGFzdEJlZm9yZVN0YXJ0T2ZGcmFtZSA9IHRoaXMuaGVhZDtcbn07XG5cbi8qKlxuICogUmVkdWNlcyB0aGUgc2l6ZSBvZiB0aGUgcXVldWUgdG8gYSBzcGVjaWZpZWQgc2l6ZSBieSB1bmxvYWRpbmcgdGhlIGxlYXN0LXJlY2VudGx5IHVzZWRcbiAqIHRpbGVzLiAgVGlsZXMgdGhhdCB3ZXJlIHVzZWQgbGFzdCBmcmFtZSB3aWxsIG5vdCBiZSB1bmxvYWRlZCwgZXZlbiBpZiB0aGF0IHB1dHMgdGhlIG51bWJlclxuICogb2YgdGlsZXMgYWJvdmUgdGhlIHNwZWNpZmllZCBtYXhpbXVtLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtYXhpbXVtVGlsZXMgVGhlIG1heGltdW0gbnVtYmVyIG9mIHRpbGVzIGluIHRoZSBxdWV1ZS5cbiAqL1xuVGlsZVJlcGxhY2VtZW50UXVldWUucHJvdG90eXBlLnRyaW1UaWxlcyA9IGZ1bmN0aW9uIChtYXhpbXVtVGlsZXMpIHtcbiAgdmFyIHRpbGVUb1RyaW0gPSB0aGlzLnRhaWw7XG4gIHZhciBrZWVwVHJpbW1pbmcgPSB0cnVlO1xuICB3aGlsZSAoXG4gICAga2VlcFRyaW1taW5nICYmXG4gICAgZGVmaW5lZCh0aGlzLl9sYXN0QmVmb3JlU3RhcnRPZkZyYW1lKSAmJlxuICAgIHRoaXMuY291bnQgPiBtYXhpbXVtVGlsZXMgJiZcbiAgICBkZWZpbmVkKHRpbGVUb1RyaW0pXG4gICkge1xuICAgIC8vIFN0b3AgdHJpbW1pbmcgYWZ0ZXIgd2UgcHJvY2VzcyB0aGUgbGFzdCB0aWxlIG5vdCB1c2VkIGluIHRoZVxuICAgIC8vIGN1cnJlbnQgZnJhbWUuXG4gICAga2VlcFRyaW1taW5nID0gdGlsZVRvVHJpbSAhPT0gdGhpcy5fbGFzdEJlZm9yZVN0YXJ0T2ZGcmFtZTtcblxuICAgIHZhciBwcmV2aW91cyA9IHRpbGVUb1RyaW0ucmVwbGFjZW1lbnRQcmV2aW91cztcblxuICAgIGlmICh0aWxlVG9UcmltLmVsaWdpYmxlRm9yVW5sb2FkaW5nKSB7XG4gICAgICB0aWxlVG9UcmltLmZyZWVSZXNvdXJjZXMoKTtcbiAgICAgIHJlbW92ZSh0aGlzLCB0aWxlVG9UcmltKTtcbiAgICB9XG5cbiAgICB0aWxlVG9UcmltID0gcHJldmlvdXM7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHJlbW92ZSh0aWxlUmVwbGFjZW1lbnRRdWV1ZSwgaXRlbSkge1xuICB2YXIgcHJldmlvdXMgPSBpdGVtLnJlcGxhY2VtZW50UHJldmlvdXM7XG4gIHZhciBuZXh0ID0gaXRlbS5yZXBsYWNlbWVudE5leHQ7XG5cbiAgaWYgKGl0ZW0gPT09IHRpbGVSZXBsYWNlbWVudFF1ZXVlLl9sYXN0QmVmb3JlU3RhcnRPZkZyYW1lKSB7XG4gICAgdGlsZVJlcGxhY2VtZW50UXVldWUuX2xhc3RCZWZvcmVTdGFydE9mRnJhbWUgPSBuZXh0O1xuICB9XG5cbiAgaWYgKGl0ZW0gPT09IHRpbGVSZXBsYWNlbWVudFF1ZXVlLmhlYWQpIHtcbiAgICB0aWxlUmVwbGFjZW1lbnRRdWV1ZS5oZWFkID0gbmV4dDtcbiAgfSBlbHNlIHtcbiAgICBwcmV2aW91cy5yZXBsYWNlbWVudE5leHQgPSBuZXh0O1xuICB9XG5cbiAgaWYgKGl0ZW0gPT09IHRpbGVSZXBsYWNlbWVudFF1ZXVlLnRhaWwpIHtcbiAgICB0aWxlUmVwbGFjZW1lbnRRdWV1ZS50YWlsID0gcHJldmlvdXM7XG4gIH0gZWxzZSB7XG4gICAgbmV4dC5yZXBsYWNlbWVudFByZXZpb3VzID0gcHJldmlvdXM7XG4gIH1cblxuICBpdGVtLnJlcGxhY2VtZW50UHJldmlvdXMgPSB1bmRlZmluZWQ7XG4gIGl0ZW0ucmVwbGFjZW1lbnROZXh0ID0gdW5kZWZpbmVkO1xuXG4gIC0tdGlsZVJlcGxhY2VtZW50UXVldWUuY291bnQ7XG59XG5cbi8qKlxuICogTWFya3MgYSB0aWxlIGFzIHJlbmRlcmVkIHRoaXMgZnJhbWUgYW5kIG1vdmVzIGl0IGJlZm9yZSB0aGUgZmlyc3QgdGlsZSB0aGF0IHdhcyBub3QgcmVuZGVyZWRcbiAqIHRoaXMgZnJhbWUuXG4gKlxuICogQHBhcmFtIHtUaWxlUmVwbGFjZW1lbnRRdWV1ZX0gaXRlbSBUaGUgdGlsZSB0aGF0IHdhcyByZW5kZXJlZC5cbiAqL1xuVGlsZVJlcGxhY2VtZW50UXVldWUucHJvdG90eXBlLm1hcmtUaWxlUmVuZGVyZWQgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgaGVhZCA9IHRoaXMuaGVhZDtcbiAgaWYgKGhlYWQgPT09IGl0ZW0pIHtcbiAgICBpZiAoaXRlbSA9PT0gdGhpcy5fbGFzdEJlZm9yZVN0YXJ0T2ZGcmFtZSkge1xuICAgICAgdGhpcy5fbGFzdEJlZm9yZVN0YXJ0T2ZGcmFtZSA9IGl0ZW0ucmVwbGFjZW1lbnROZXh0O1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICArK3RoaXMuY291bnQ7XG5cbiAgaWYgKCFkZWZpbmVkKGhlYWQpKSB7XG4gICAgLy8gbm8gb3RoZXIgdGlsZXMgaW4gdGhlIGxpc3RcbiAgICBpdGVtLnJlcGxhY2VtZW50UHJldmlvdXMgPSB1bmRlZmluZWQ7XG4gICAgaXRlbS5yZXBsYWNlbWVudE5leHQgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5oZWFkID0gaXRlbTtcbiAgICB0aGlzLnRhaWwgPSBpdGVtO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChkZWZpbmVkKGl0ZW0ucmVwbGFjZW1lbnRQcmV2aW91cykgfHwgZGVmaW5lZChpdGVtLnJlcGxhY2VtZW50TmV4dCkpIHtcbiAgICAvLyB0aWxlIGFscmVhZHkgaW4gdGhlIGxpc3QsIHJlbW92ZSBmcm9tIGl0cyBjdXJyZW50IGxvY2F0aW9uXG4gICAgcmVtb3ZlKHRoaXMsIGl0ZW0pO1xuICB9XG5cbiAgaXRlbS5yZXBsYWNlbWVudFByZXZpb3VzID0gdW5kZWZpbmVkO1xuICBpdGVtLnJlcGxhY2VtZW50TmV4dCA9IGhlYWQ7XG4gIGhlYWQucmVwbGFjZW1lbnRQcmV2aW91cyA9IGl0ZW07XG5cbiAgdGhpcy5oZWFkID0gaXRlbTtcbn07XG5leHBvcnQgZGVmYXVsdCBUaWxlUmVwbGFjZW1lbnRRdWV1ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///26561\n')},37728:function(__unused_webpack___webpack_module__,__webpack_exports__){eval("/**\n * Indicates what happened the last time this tile was visited for selection.\n * @private\n */\nvar TileSelectionResult = {\n  /**\n   * There was no selection result, perhaps because the tile wasn't visited\n   * last frame.\n   */\n  NONE: 0,\n\n  /**\n   * This tile was deemed not visible and culled.\n   */\n  CULLED: 1,\n\n  /**\n   * The tile was selected for rendering.\n   */\n  RENDERED: 2,\n\n  /**\n   * This tile did not meet the required screen-space error and was refined.\n   */\n  REFINED: 3,\n\n  /**\n   * This tile was originally rendered, but it got kicked out of the render list\n   * in favor of an ancestor because it is not yet renderable.\n   */\n  RENDERED_AND_KICKED: 2 | 4,\n\n  /**\n   * This tile was originally refined, but its rendered descendants got kicked out of the\n   * render list in favor of an ancestor because it is not yet renderable.\n   */\n  REFINED_AND_KICKED: 3 | 4,\n\n  /**\n   * This tile was culled because it was not visible, but it still needs to be loaded\n   * and any heights on it need to be updated because the camera's position or the\n   * camera's reference frame's origin falls inside this tile. Loading this tile\n   * could affect the position of the camera if the camera is currently below\n   * terrain or if it is tracking an object whose height is referenced to terrain.\n   * And a change in the camera position may, in turn, affect what is culled.\n   */\n  CULLED_BUT_NEEDED: 1 | 8,\n\n  /**\n   * Determines if a selection result indicates that this tile or its descendants were\n   * kicked from the render list. In other words, if it is <code>RENDERED_AND_KICKED</code>\n   * or <code>REFINED_AND_KICKED</code>.\n   *\n   * @param {TileSelectionResult} value The selection result to test.\n   * @returns {Boolean} true if the tile was kicked, no matter if it was originally rendered or refined.\n   */\n  wasKicked: function (value) {\n    return value >= TileSelectionResult.RENDERED_AND_KICKED;\n  },\n\n  /**\n   * Determines the original selection result prior to being kicked or CULLED_BUT_NEEDED.\n   * If the tile wasn't kicked or CULLED_BUT_NEEDED, the original value is returned.\n   * @param {TileSelectionResult} value The selection result.\n   * @returns {TileSelectionResult} The original selection result prior to kicking.\n   */\n  originalResult: function (value) {\n    return value & 3;\n  },\n\n  /**\n   * Converts this selection result to a kick.\n   * @param {TileSelectionResult} value The original selection result.\n   * @returns {TileSelectionResult} The kicked form of the selection result.\n   */\n  kick: function (value) {\n    return value | 4;\n  },\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (TileSelectionResult);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc3MjguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEMsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEMsZUFBZSxxQkFBcUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEMsZUFBZSxxQkFBcUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EseURBQWUsbUJBQW1CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvVGlsZVNlbGVjdGlvblJlc3VsdC5qcz9jNTkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW5kaWNhdGVzIHdoYXQgaGFwcGVuZWQgdGhlIGxhc3QgdGltZSB0aGlzIHRpbGUgd2FzIHZpc2l0ZWQgZm9yIHNlbGVjdGlvbi5cbiAqIEBwcml2YXRlXG4gKi9cbnZhciBUaWxlU2VsZWN0aW9uUmVzdWx0ID0ge1xuICAvKipcbiAgICogVGhlcmUgd2FzIG5vIHNlbGVjdGlvbiByZXN1bHQsIHBlcmhhcHMgYmVjYXVzZSB0aGUgdGlsZSB3YXNuJ3QgdmlzaXRlZFxuICAgKiBsYXN0IGZyYW1lLlxuICAgKi9cbiAgTk9ORTogMCxcblxuICAvKipcbiAgICogVGhpcyB0aWxlIHdhcyBkZWVtZWQgbm90IHZpc2libGUgYW5kIGN1bGxlZC5cbiAgICovXG4gIENVTExFRDogMSxcblxuICAvKipcbiAgICogVGhlIHRpbGUgd2FzIHNlbGVjdGVkIGZvciByZW5kZXJpbmcuXG4gICAqL1xuICBSRU5ERVJFRDogMixcblxuICAvKipcbiAgICogVGhpcyB0aWxlIGRpZCBub3QgbWVldCB0aGUgcmVxdWlyZWQgc2NyZWVuLXNwYWNlIGVycm9yIGFuZCB3YXMgcmVmaW5lZC5cbiAgICovXG4gIFJFRklORUQ6IDMsXG5cbiAgLyoqXG4gICAqIFRoaXMgdGlsZSB3YXMgb3JpZ2luYWxseSByZW5kZXJlZCwgYnV0IGl0IGdvdCBraWNrZWQgb3V0IG9mIHRoZSByZW5kZXIgbGlzdFxuICAgKiBpbiBmYXZvciBvZiBhbiBhbmNlc3RvciBiZWNhdXNlIGl0IGlzIG5vdCB5ZXQgcmVuZGVyYWJsZS5cbiAgICovXG4gIFJFTkRFUkVEX0FORF9LSUNLRUQ6IDIgfCA0LFxuXG4gIC8qKlxuICAgKiBUaGlzIHRpbGUgd2FzIG9yaWdpbmFsbHkgcmVmaW5lZCwgYnV0IGl0cyByZW5kZXJlZCBkZXNjZW5kYW50cyBnb3Qga2lja2VkIG91dCBvZiB0aGVcbiAgICogcmVuZGVyIGxpc3QgaW4gZmF2b3Igb2YgYW4gYW5jZXN0b3IgYmVjYXVzZSBpdCBpcyBub3QgeWV0IHJlbmRlcmFibGUuXG4gICAqL1xuICBSRUZJTkVEX0FORF9LSUNLRUQ6IDMgfCA0LFxuXG4gIC8qKlxuICAgKiBUaGlzIHRpbGUgd2FzIGN1bGxlZCBiZWNhdXNlIGl0IHdhcyBub3QgdmlzaWJsZSwgYnV0IGl0IHN0aWxsIG5lZWRzIHRvIGJlIGxvYWRlZFxuICAgKiBhbmQgYW55IGhlaWdodHMgb24gaXQgbmVlZCB0byBiZSB1cGRhdGVkIGJlY2F1c2UgdGhlIGNhbWVyYSdzIHBvc2l0aW9uIG9yIHRoZVxuICAgKiBjYW1lcmEncyByZWZlcmVuY2UgZnJhbWUncyBvcmlnaW4gZmFsbHMgaW5zaWRlIHRoaXMgdGlsZS4gTG9hZGluZyB0aGlzIHRpbGVcbiAgICogY291bGQgYWZmZWN0IHRoZSBwb3NpdGlvbiBvZiB0aGUgY2FtZXJhIGlmIHRoZSBjYW1lcmEgaXMgY3VycmVudGx5IGJlbG93XG4gICAqIHRlcnJhaW4gb3IgaWYgaXQgaXMgdHJhY2tpbmcgYW4gb2JqZWN0IHdob3NlIGhlaWdodCBpcyByZWZlcmVuY2VkIHRvIHRlcnJhaW4uXG4gICAqIEFuZCBhIGNoYW5nZSBpbiB0aGUgY2FtZXJhIHBvc2l0aW9uIG1heSwgaW4gdHVybiwgYWZmZWN0IHdoYXQgaXMgY3VsbGVkLlxuICAgKi9cbiAgQ1VMTEVEX0JVVF9ORUVERUQ6IDEgfCA4LFxuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIGlmIGEgc2VsZWN0aW9uIHJlc3VsdCBpbmRpY2F0ZXMgdGhhdCB0aGlzIHRpbGUgb3IgaXRzIGRlc2NlbmRhbnRzIHdlcmVcbiAgICoga2lja2VkIGZyb20gdGhlIHJlbmRlciBsaXN0LiBJbiBvdGhlciB3b3JkcywgaWYgaXQgaXMgPGNvZGU+UkVOREVSRURfQU5EX0tJQ0tFRDwvY29kZT5cbiAgICogb3IgPGNvZGU+UkVGSU5FRF9BTkRfS0lDS0VEPC9jb2RlPi5cbiAgICpcbiAgICogQHBhcmFtIHtUaWxlU2VsZWN0aW9uUmVzdWx0fSB2YWx1ZSBUaGUgc2VsZWN0aW9uIHJlc3VsdCB0byB0ZXN0LlxuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gdHJ1ZSBpZiB0aGUgdGlsZSB3YXMga2lja2VkLCBubyBtYXR0ZXIgaWYgaXQgd2FzIG9yaWdpbmFsbHkgcmVuZGVyZWQgb3IgcmVmaW5lZC5cbiAgICovXG4gIHdhc0tpY2tlZDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID49IFRpbGVTZWxlY3Rpb25SZXN1bHQuUkVOREVSRURfQU5EX0tJQ0tFRDtcbiAgfSxcblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyB0aGUgb3JpZ2luYWwgc2VsZWN0aW9uIHJlc3VsdCBwcmlvciB0byBiZWluZyBraWNrZWQgb3IgQ1VMTEVEX0JVVF9ORUVERUQuXG4gICAqIElmIHRoZSB0aWxlIHdhc24ndCBraWNrZWQgb3IgQ1VMTEVEX0JVVF9ORUVERUQsIHRoZSBvcmlnaW5hbCB2YWx1ZSBpcyByZXR1cm5lZC5cbiAgICogQHBhcmFtIHtUaWxlU2VsZWN0aW9uUmVzdWx0fSB2YWx1ZSBUaGUgc2VsZWN0aW9uIHJlc3VsdC5cbiAgICogQHJldHVybnMge1RpbGVTZWxlY3Rpb25SZXN1bHR9IFRoZSBvcmlnaW5hbCBzZWxlY3Rpb24gcmVzdWx0IHByaW9yIHRvIGtpY2tpbmcuXG4gICAqL1xuICBvcmlnaW5hbFJlc3VsdDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICYgMztcbiAgfSxcblxuICAvKipcbiAgICogQ29udmVydHMgdGhpcyBzZWxlY3Rpb24gcmVzdWx0IHRvIGEga2ljay5cbiAgICogQHBhcmFtIHtUaWxlU2VsZWN0aW9uUmVzdWx0fSB2YWx1ZSBUaGUgb3JpZ2luYWwgc2VsZWN0aW9uIHJlc3VsdC5cbiAgICogQHJldHVybnMge1RpbGVTZWxlY3Rpb25SZXN1bHR9IFRoZSBraWNrZWQgZm9ybSBvZiB0aGUgc2VsZWN0aW9uIHJlc3VsdC5cbiAgICovXG4gIGtpY2s6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSB8IDQ7XG4gIH0sXG59O1xuZXhwb3J0IGRlZmF1bHQgVGlsZVNlbGVjdGlvblJlc3VsdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///37728\n")},70711:function(){eval("/**\n * @private\n */\nvar TileState = {\n  START: 0,\n  LOADING: 1,\n  READY: 2,\n  UPSAMPLED_ONLY: 3,\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = (Object.freeze(TileState));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzA3MTEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQWUsd0JBQXdCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvVGlsZVN0YXRlLmpzPzdlYjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAcHJpdmF0ZVxuICovXG52YXIgVGlsZVN0YXRlID0ge1xuICBTVEFSVDogMCxcbiAgTE9BRElORzogMSxcbiAgUkVBRFk6IDIsXG4gIFVQU0FNUExFRF9PTkxZOiAzLFxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoVGlsZVN0YXRlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///70711\n")},85794:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86511);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13222);\n\n\n\n/**\n * Represents content for a tile in a\n * {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification|3D Tiles} tileset whose\n * content points to another 3D Tiles tileset.\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Tileset3DTileContent\n * @constructor\n *\n * @private\n */\nfunction Tileset3DTileContent(tileset, tile, resource, json) {\n  this._tileset = tileset;\n  this._tile = tile;\n  this._resource = resource;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defer */ .Z.defer();\n\n  this.featurePropertiesDirty = false;\n  this._groupMetadata = undefined;\n\n  initialize(this, json);\n}\n\nObject.defineProperties(Tileset3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  pointsLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  trianglesLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  geometryByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  texturesByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  batchTableByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  innerContents: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n  },\n\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n  },\n\n  url: {\n    get: function () {\n      return this._resource.getUrlComponent(true);\n    },\n  },\n\n  batchTable: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  groupMetadata: {\n    get: function () {\n      return this._groupMetadata;\n    },\n    set: function (value) {\n      this._groupMetadata = value;\n    },\n  },\n});\n\nfunction initialize(content, json) {\n  content._tileset.loadTileset(content._resource, json, content._tile);\n  content._readyPromise.resolve(content);\n}\n\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Tileset3DTileContent</code>\n * always returns <code>false</code> since a tile of this type does not have any features.\n */\nTileset3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return false;\n};\n\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Tileset3DTileContent</code>\n * always returns <code>undefined</code> since a tile of this type does not have any features.\n */\nTileset3DTileContent.prototype.getFeature = function (batchId) {\n  return undefined;\n};\n\nTileset3DTileContent.prototype.applyDebugSettings = function (\n  enabled,\n  color\n) {};\n\nTileset3DTileContent.prototype.applyStyle = function (style) {};\n\nTileset3DTileContent.prototype.update = function (tileset, frameState) {};\n\nTileset3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nTileset3DTileContent.prototype.destroy = function () {\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Tileset3DTileContent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODU3OTQuanMiLCJtYXBwaW5ncyI6Ijs7QUFBcUQ7QUFDWjs7QUFFekM7QUFDQTtBQUNBLElBQUksNkVBQTZFO0FBQ2pGO0FBQ0E7QUFDQSxtQkFBbUIsMkJBQTJCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsZ0ZBQVU7O0FBRWpDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLDJCQUEyQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLDJCQUEyQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVMsMkVBQWE7QUFDdEI7QUFDQSx5REFBZSxvQkFBb0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9UaWxlc2V0M0RUaWxlQ29udGVudC5qcz81Y2JjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZXN0cm95T2JqZWN0IGZyb20gXCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QuanNcIjtcbmltcG9ydCB3aGVuIGZyb20gXCIuLi9UaGlyZFBhcnR5L3doZW4uanNcIjtcblxuLyoqXG4gKiBSZXByZXNlbnRzIGNvbnRlbnQgZm9yIGEgdGlsZSBpbiBhXG4gKiB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL0Nlc2l1bUdTLzNkLXRpbGVzL3RyZWUvbWFpbi9zcGVjaWZpY2F0aW9ufDNEIFRpbGVzfSB0aWxlc2V0IHdob3NlXG4gKiBjb250ZW50IHBvaW50cyB0byBhbm90aGVyIDNEIFRpbGVzIHRpbGVzZXQuXG4gKiA8cD5cbiAqIEltcGxlbWVudHMgdGhlIHtAbGluayBDZXNpdW0zRFRpbGVDb250ZW50fSBpbnRlcmZhY2UuXG4gKiA8L3A+XG4gKlxuICogQGFsaWFzIFRpbGVzZXQzRFRpbGVDb250ZW50XG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBUaWxlc2V0M0RUaWxlQ29udGVudCh0aWxlc2V0LCB0aWxlLCByZXNvdXJjZSwganNvbikge1xuICB0aGlzLl90aWxlc2V0ID0gdGlsZXNldDtcbiAgdGhpcy5fdGlsZSA9IHRpbGU7XG4gIHRoaXMuX3Jlc291cmNlID0gcmVzb3VyY2U7XG4gIHRoaXMuX3JlYWR5UHJvbWlzZSA9IHdoZW4uZGVmZXIoKTtcblxuICB0aGlzLmZlYXR1cmVQcm9wZXJ0aWVzRGlydHkgPSBmYWxzZTtcbiAgdGhpcy5fZ3JvdXBNZXRhZGF0YSA9IHVuZGVmaW5lZDtcblxuICBpbml0aWFsaXplKHRoaXMsIGpzb24pO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhUaWxlc2V0M0RUaWxlQ29udGVudC5wcm90b3R5cGUsIHtcbiAgZmVhdHVyZXNMZW5ndGg6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH0sXG4gIH0sXG5cbiAgcG9pbnRzTGVuZ3RoOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9LFxuICB9LFxuXG4gIHRyaWFuZ2xlc0xlbmd0aDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfSxcbiAgfSxcblxuICBnZW9tZXRyeUJ5dGVMZW5ndGg6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH0sXG4gIH0sXG5cbiAgdGV4dHVyZXNCeXRlTGVuZ3RoOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9LFxuICB9LFxuXG4gIGJhdGNoVGFibGVCeXRlTGVuZ3RoOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9LFxuICB9LFxuXG4gIGlubmVyQ29udGVudHM6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSxcbiAgfSxcblxuICByZWFkeVByb21pc2U6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZWFkeVByb21pc2UucHJvbWlzZTtcbiAgICB9LFxuICB9LFxuXG4gIHRpbGVzZXQ6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aWxlc2V0O1xuICAgIH0sXG4gIH0sXG5cbiAgdGlsZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3RpbGU7XG4gICAgfSxcbiAgfSxcblxuICB1cmw6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXNvdXJjZS5nZXRVcmxDb21wb25lbnQodHJ1ZSk7XG4gICAgfSxcbiAgfSxcblxuICBiYXRjaFRhYmxlOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0sXG4gIH0sXG5cbiAgZ3JvdXBNZXRhZGF0YToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2dyb3VwTWV0YWRhdGE7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgdGhpcy5fZ3JvdXBNZXRhZGF0YSA9IHZhbHVlO1xuICAgIH0sXG4gIH0sXG59KTtcblxuZnVuY3Rpb24gaW5pdGlhbGl6ZShjb250ZW50LCBqc29uKSB7XG4gIGNvbnRlbnQuX3RpbGVzZXQubG9hZFRpbGVzZXQoY29udGVudC5fcmVzb3VyY2UsIGpzb24sIGNvbnRlbnQuX3RpbGUpO1xuICBjb250ZW50Ll9yZWFkeVByb21pc2UucmVzb2x2ZShjb250ZW50KTtcbn1cblxuLyoqXG4gKiBQYXJ0IG9mIHRoZSB7QGxpbmsgQ2VzaXVtM0RUaWxlQ29udGVudH0gaW50ZXJmYWNlLiAgPGNvZGU+VGlsZXNldDNEVGlsZUNvbnRlbnQ8L2NvZGU+XG4gKiBhbHdheXMgcmV0dXJucyA8Y29kZT5mYWxzZTwvY29kZT4gc2luY2UgYSB0aWxlIG9mIHRoaXMgdHlwZSBkb2VzIG5vdCBoYXZlIGFueSBmZWF0dXJlcy5cbiAqL1xuVGlsZXNldDNEVGlsZUNvbnRlbnQucHJvdG90eXBlLmhhc1Byb3BlcnR5ID0gZnVuY3Rpb24gKGJhdGNoSWQsIG5hbWUpIHtcbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuLyoqXG4gKiBQYXJ0IG9mIHRoZSB7QGxpbmsgQ2VzaXVtM0RUaWxlQ29udGVudH0gaW50ZXJmYWNlLiAgPGNvZGU+VGlsZXNldDNEVGlsZUNvbnRlbnQ8L2NvZGU+XG4gKiBhbHdheXMgcmV0dXJucyA8Y29kZT51bmRlZmluZWQ8L2NvZGU+IHNpbmNlIGEgdGlsZSBvZiB0aGlzIHR5cGUgZG9lcyBub3QgaGF2ZSBhbnkgZmVhdHVyZXMuXG4gKi9cblRpbGVzZXQzRFRpbGVDb250ZW50LnByb3RvdHlwZS5nZXRGZWF0dXJlID0gZnVuY3Rpb24gKGJhdGNoSWQpIHtcbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cblRpbGVzZXQzRFRpbGVDb250ZW50LnByb3RvdHlwZS5hcHBseURlYnVnU2V0dGluZ3MgPSBmdW5jdGlvbiAoXG4gIGVuYWJsZWQsXG4gIGNvbG9yXG4pIHt9O1xuXG5UaWxlc2V0M0RUaWxlQ29udGVudC5wcm90b3R5cGUuYXBwbHlTdHlsZSA9IGZ1bmN0aW9uIChzdHlsZSkge307XG5cblRpbGVzZXQzRFRpbGVDb250ZW50LnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAodGlsZXNldCwgZnJhbWVTdGF0ZSkge307XG5cblRpbGVzZXQzRFRpbGVDb250ZW50LnByb3RvdHlwZS5pc0Rlc3Ryb3llZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuVGlsZXNldDNEVGlsZUNvbnRlbnQucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBkZXN0cm95T2JqZWN0KHRoaXMpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFRpbGVzZXQzRFRpbGVDb250ZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///85794\n')},38715:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18349);\n\n\n\n\n\n/**\n * Metadata about the tileset.\n * <p>\n * See the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_metadata|3DTILES_metadata Extension} for 3D Tiles\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} options.tileset The tileset metadata JSON object.\n * @param {MetadataClass} [options.class] The class that tileset metadata conforms to.\n *\n * @alias TilesetMetadata\n * @constructor\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction TilesetMetadata(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var tileset = options.tileset;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.tileset", tileset);\n  //>>includeEnd(\'debug\');\n\n  var properties = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(tileset.properties) ? tileset.properties : {};\n\n  this._class = options.class;\n  this._properties = properties;\n  this._name = tileset.name;\n  this._description = tileset.description;\n  this._extras = tileset.extras;\n  this._extensions = tileset.extensions;\n}\n\nObject.defineProperties(TilesetMetadata.prototype, {\n  /**\n   * The class that properties conform to.\n   *\n   * @memberof TilesetMetadata.prototype\n   * @type {MetadataClass}\n   * @readonly\n   * @private\n   */\n  class: {\n    get: function () {\n      return this._class;\n    },\n  },\n\n  /**\n   * The name of the tileset.\n   *\n   * @memberof TilesetMetadata.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The description of the tileset.\n   *\n   * @memberof TilesetMetadata.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  description: {\n    get: function () {\n      return this._description;\n    },\n  },\n\n  /**\n   * Extras in the JSON object.\n   *\n   * @memberof TilesetMetadata.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * Extensions in the JSON object.\n   *\n   * @memberof TilesetMetadata.prototype\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\n/**\n * Returns whether the tileset has this property.\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {Boolean} Whether the tileset has this property.\n * @private\n */\nTilesetMetadata.prototype.hasProperty = function (propertyId) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].hasProperty */ .Z.hasProperty(propertyId, this._properties, this._class);\n};\n\n/**\n * Returns whether the tileset has a property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {Boolean} Whether the tileset has a property with the given semantic.\n * @private\n */\nTilesetMetadata.prototype.hasPropertyBySemantic = function (semantic) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].hasPropertyBySemantic */ .Z.hasPropertyBySemantic(\n    semantic,\n    this._properties,\n    this._class\n  );\n};\n\n/**\n * Returns an array of property IDs.\n *\n * @param {String[]} [results] An array into which to store the results.\n * @returns {String[]} The property IDs.\n * @private\n */\nTilesetMetadata.prototype.getPropertyIds = function (results) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getPropertyIds */ .Z.getPropertyIds(this._properties, this._class, results);\n};\n\n/**\n * Returns a copy of the value of the property with the given ID.\n * <p>\n * If the property is normalized the normalized value is returned.\n * </p>\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the tileset does not have this property.\n * @private\n */\nTilesetMetadata.prototype.getProperty = function (propertyId) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getProperty */ .Z.getProperty(propertyId, this._properties, this._class);\n};\n\n/**\n * Sets the value of the property with the given ID.\n * <p>\n * If the property is normalized a normalized value must be provided to this function.\n * </p>\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @param {*} value The value of the property that will be copied.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n * @private\n */\nTilesetMetadata.prototype.setProperty = function (propertyId, value) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].setProperty */ .Z.setProperty(\n    propertyId,\n    value,\n    this._properties,\n    this._class\n  );\n};\n\n/**\n * Returns a copy of the value of the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the tileset does not have this semantic.\n * @private\n */\nTilesetMetadata.prototype.getPropertyBySemantic = function (semantic) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getPropertyBySemantic */ .Z.getPropertyBySemantic(\n    semantic,\n    this._properties,\n    this._class\n  );\n};\n\n/**\n * Sets the value of the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @param {*} value The value of the property that will be copied.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n * @private\n */\nTilesetMetadata.prototype.setPropertyBySemantic = function (semantic, value) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].setPropertyBySemantic */ .Z.setPropertyBySemantic(\n    semantic,\n    value,\n    this._properties,\n    this._class\n  );\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (TilesetMetadata);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///38715\n')},90299:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n/* harmony import */ var _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55293);\n/* harmony import */ var _Core_Request_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(22426);\n/* harmony import */ var _Core_RequestType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82968);\n\n\n\n\n\n\n\n\n/**\n * Provides functionality for ImageryProviders that have time dynamic imagery\n *\n * @alias TimeDynamicImagery\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Clock} options.clock A Clock instance that is used when determining the value for the time dimension. Required when <code>options.times</code> is specified.\n * @param {TimeIntervalCollection} options.times TimeIntervalCollection with its <code>data</code> property being an object containing time dynamic dimension and their values.\n * @param {Function} options.requestImageFunction A function that will request imagery tiles.\n * @param {Function} options.reloadFunction A function that will be called when all imagery tiles need to be reloaded.\n */\nfunction TimeDynamicImagery(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.clock", options.clock);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.times", options.times);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.func */ .Z.typeOf.func(\n    "options.requestImageFunction",\n    options.requestImageFunction\n  );\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.func */ .Z.typeOf.func("options.reloadFunction", options.reloadFunction);\n  //>>includeEnd(\'debug\');\n\n  this._tileCache = {};\n  this._tilesRequestedForInterval = [];\n\n  var clock = (this._clock = options.clock);\n  this._times = options.times;\n  this._requestImageFunction = options.requestImageFunction;\n  this._reloadFunction = options.reloadFunction;\n  this._currentIntervalIndex = -1;\n\n  clock.onTick.addEventListener(this._clockOnTick, this);\n  this._clockOnTick(clock);\n}\n\nObject.defineProperties(TimeDynamicImagery.prototype, {\n  /**\n   * Gets or sets a clock that is used to get keep the time used for time dynamic parameters.\n   * @memberof TimeDynamicImagery.prototype\n   * @type {Clock}\n   */\n  clock: {\n    get: function () {\n      return this._clock;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._clock !== value) {\n        this._clock = value;\n        this._clockOnTick(value);\n        this._reloadFunction();\n      }\n    },\n  },\n  /**\n   * Gets or sets a time interval collection.\n   * @memberof TimeDynamicImagery.prototype\n   * @type {TimeIntervalCollection}\n   */\n  times: {\n    get: function () {\n      return this._times;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._times !== value) {\n        this._times = value;\n        this._clockOnTick(this._clock);\n        this._reloadFunction();\n      }\n    },\n  },\n  /**\n   * Gets the current interval.\n   * @memberof TimeDynamicImagery.prototype\n   * @type {TimeInterval}\n   */\n  currentInterval: {\n    get: function () {\n      return this._times.get(this._currentIntervalIndex);\n    },\n  },\n});\n\n/**\n * Gets the tile from the cache if its available.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Request} [request] The request object. Intended for internal use only.\n *\n * @returns {Promise.<HTMLImageElement>|undefined} A promise for the image that will resolve when the image is available, or\n *          undefined if the tile is not in the cache.\n */\nTimeDynamicImagery.prototype.getFromCache = function (x, y, level, request) {\n  var key = getKey(x, y, level);\n  var result;\n  var cache = this._tileCache[this._currentIntervalIndex];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(cache) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(cache[key])) {\n    var item = cache[key];\n    result = item.promise.otherwise(function (e) {\n      // Set the correct state in case it was cancelled\n      request.state = item.request.state;\n      throw e;\n    });\n    delete cache[key];\n  }\n\n  return result;\n};\n\n/**\n * Checks if the next interval is approaching and will start preload the tile if necessary. Otherwise it will\n * just add the tile to a list to preload when we approach the next interval.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Request} [request] The request object. Intended for internal use only.\n */\nTimeDynamicImagery.prototype.checkApproachingInterval = function (\n  x,\n  y,\n  level,\n  request\n) {\n  var key = getKey(x, y, level);\n  var tilesRequestedForInterval = this._tilesRequestedForInterval;\n\n  // If we are approaching an interval, preload this tile in the next interval\n  var approachingInterval = getApproachingInterval(this);\n  var tile = {\n    key: key,\n    // Determines priority based on camera distance to the tile.\n    // Since the imagery regardless of time will be attached to the same tile we can just steal it.\n    priorityFunction: request.priorityFunction,\n  };\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(approachingInterval) ||\n    !addToCache(this, tile, approachingInterval)\n  ) {\n    // Add to recent request list if we aren\'t approaching and interval or the request was throttled\n    tilesRequestedForInterval.push(tile);\n  }\n\n  // Don\'t let the tile list get out of hand\n  if (tilesRequestedForInterval.length >= 512) {\n    tilesRequestedForInterval.splice(0, 256);\n  }\n};\n\nTimeDynamicImagery.prototype._clockOnTick = function (clock) {\n  var time = clock.currentTime;\n  var times = this._times;\n  var index = times.indexOf(time);\n  var currentIntervalIndex = this._currentIntervalIndex;\n\n  if (index !== currentIntervalIndex) {\n    // Cancel all outstanding requests and clear out caches not from current time interval\n    var currentCache = this._tileCache[currentIntervalIndex];\n    for (var t in currentCache) {\n      if (currentCache.hasOwnProperty(t)) {\n        currentCache[t].request.cancel();\n      }\n    }\n    delete this._tileCache[currentIntervalIndex];\n    this._tilesRequestedForInterval = [];\n\n    this._currentIntervalIndex = index;\n    this._reloadFunction();\n\n    return;\n  }\n\n  var approachingInterval = getApproachingInterval(this);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(approachingInterval)) {\n    // Start loading recent tiles from end of this._tilesRequestedForInterval\n    //  We keep preloading until we hit a throttling limit.\n    var tilesRequested = this._tilesRequestedForInterval;\n    var success = true;\n    while (success) {\n      if (tilesRequested.length === 0) {\n        break;\n      }\n\n      var tile = tilesRequested.pop();\n      success = addToCache(this, tile, approachingInterval);\n      if (!success) {\n        tilesRequested.push(tile);\n      }\n    }\n  }\n};\n\nfunction getKey(x, y, level) {\n  return x + "-" + y + "-" + level;\n}\n\nfunction getKeyElements(key) {\n  var s = key.split("-");\n  if (s.length !== 3) {\n    return undefined;\n  }\n\n  return {\n    x: Number(s[0]),\n    y: Number(s[1]),\n    level: Number(s[2]),\n  };\n}\n\nfunction getApproachingInterval(that) {\n  var times = that._times;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(times)) {\n    return undefined;\n  }\n  var clock = that._clock;\n  var time = clock.currentTime;\n  var isAnimating = clock.canAnimate && clock.shouldAnimate;\n  var multiplier = clock.multiplier;\n\n  if (!isAnimating && multiplier !== 0) {\n    return undefined;\n  }\n\n  var seconds;\n  var index = times.indexOf(time);\n  if (index < 0) {\n    return undefined;\n  }\n\n  var interval = times.get(index);\n  if (multiplier > 0) {\n    // animating forward\n    seconds = _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].secondsDifference */ .Z.secondsDifference(interval.stop, time);\n    ++index;\n  } else {\n    //backwards\n    seconds = _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].secondsDifference */ .Z.secondsDifference(interval.start, time); // Will be negative\n    --index;\n  }\n  seconds /= multiplier; // Will always be positive\n\n  // Less than 5 wall time seconds\n  return index >= 0 && seconds <= 5.0 ? times.get(index) : undefined;\n}\n\nfunction addToCache(that, tile, interval) {\n  var index = that._times.indexOf(interval.start);\n  var tileCache = that._tileCache;\n  var intervalTileCache = tileCache[index];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(intervalTileCache)) {\n    intervalTileCache = tileCache[index] = {};\n  }\n\n  var key = tile.key;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(intervalTileCache[key])) {\n    return true; // Already in the cache\n  }\n\n  var keyElements = getKeyElements(key);\n  var request = new _Core_Request_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n    throttle: false,\n    throttleByServer: true,\n    type: _Core_RequestType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].IMAGERY */ .Z.IMAGERY,\n    priorityFunction: tile.priorityFunction,\n  });\n  var promise = that._requestImageFunction(\n    keyElements.x,\n    keyElements.y,\n    keyElements.level,\n    request,\n    interval\n  );\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(promise)) {\n    return false;\n  }\n\n  intervalTileCache[key] = {\n    promise: promise,\n    request: request,\n  };\n\n  return true;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (TimeDynamicImagery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///90299\n')},78831:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23401);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8182);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86511);\n/* harmony import */ var _Core_Event_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(14459);\n/* harmony import */ var _Core_getTimestamp_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(59081);\n/* harmony import */ var _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(55293);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(68985);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(13222);\n/* harmony import */ var _ClippingPlaneCollection_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(21809);\n/* harmony import */ var _PointCloud_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(15508);\n/* harmony import */ var _PointCloudEyeDomeLighting_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(29388);\n/* harmony import */ var _PointCloudShading_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(45393);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(89917);\n/* harmony import */ var _ShadowMode_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(34125);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Provides playback of time-dynamic point cloud data.\n * <p>\n * Point cloud frames are prefetched in intervals determined by the average frame load time and the current clock speed.\n * If intermediate frames cannot be loaded in time to meet playback speed, they will be skipped. If frames are sufficiently\n * small or the clock is sufficiently slow then no frames will be skipped.\n * </p>\n *\n * @alias TimeDynamicPointCloud\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Clock} options.clock A {@link Clock} instance that is used when determining the value for the time dimension.\n * @param {TimeIntervalCollection} options.intervals A {@link TimeIntervalCollection} with its data property being an object containing a <code>uri</code> to a 3D Tiles Point Cloud tile and an optional <code>transform</code>.\n * @param {Boolean} [options.show=true] Determines if the point cloud will be shown.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] A 4x4 transformation matrix that transforms the point cloud.\n * @param {ShadowMode} [options.shadows=ShadowMode.ENABLED] Determines whether the point cloud casts or receives shadows from light sources.\n * @param {Number} [options.maximumMemoryUsage=256] The maximum amount of memory in MB that can be used by the point cloud.\n * @param {Object} [options.shading] Options for constructing a {@link PointCloudShading} object to control point attenuation and eye dome lighting.\n * @param {Cesium3DTileStyle} [options.style] The style, defined using the {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/Styling|3D Tiles Styling language}, applied to each point in the point cloud.\n * @param {ClippingPlaneCollection} [options.clippingPlanes] The {@link ClippingPlaneCollection} used to selectively disable rendering the point cloud.\n */\nfunction TimeDynamicPointCloud(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("options.clock", options.clock);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("options.intervals", options.intervals);\n  //>>includeEnd(\'debug\');\n\n  /**\n   * Determines if the point cloud will be shown.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.show, true);\n\n  /**\n   * A 4x4 transformation matrix that transforms the point cloud.\n   *\n   * @type {Matrix4}\n   * @default Matrix4.IDENTITY\n   */\n  this.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].IDENTITY */ .Z.IDENTITY)\n  );\n\n  /**\n   * Determines whether the point cloud casts or receives shadows from light sources.\n   * <p>\n   * Enabling shadows has a performance impact. A point cloud that casts shadows must be rendered twice, once from the camera and again from the light\'s point of view.\n   * </p>\n   * <p>\n   * Shadows are rendered only when {@link Viewer#shadows} is <code>true</code>.\n   * </p>\n   *\n   * @type {ShadowMode}\n   * @default ShadowMode.ENABLED\n   */\n  this.shadows = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.shadows, _ShadowMode_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].ENABLED */ .Z.ENABLED);\n\n  /**\n   * The maximum amount of GPU memory (in MB) that may be used to cache point cloud frames.\n   * <p>\n   * Frames that are not being loaded or rendered are unloaded to enforce this.\n   * </p>\n   * <p>\n   * If decreasing this value results in unloading tiles, the tiles are unloaded the next frame.\n   * </p>\n   *\n   * @type {Number}\n   * @default 256\n   *\n   * @see TimeDynamicPointCloud#totalMemoryUsageInBytes\n   */\n  this.maximumMemoryUsage = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.maximumMemoryUsage, 256);\n\n  /**\n   * Options for controlling point size based on geometric error and eye dome lighting.\n   * @type {PointCloudShading}\n   */\n  this.shading = new _PointCloudShading_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z(options.shading);\n\n  /**\n   * The style, defined using the\n   * {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/Styling|3D Tiles Styling language},\n   * applied to each point in the point cloud.\n   * <p>\n   * Assign <code>undefined</code> to remove the style, which will restore the visual\n   * appearance of the point cloud to its default when no style was applied.\n   * </p>\n   *\n   * @type {Cesium3DTileStyle}\n   *\n   * @example\n   * pointCloud.style = new Cesium.Cesium3DTileStyle({\n   *    color : {\n   *        conditions : [\n   *            [\'${Classification} === 0\', \'color("purple", 0.5)\'],\n   *            [\'${Classification} === 1\', \'color("red")\'],\n   *            [\'true\', \'${COLOR}\']\n   *        ]\n   *    },\n   *    show : \'${Classification} !== 2\'\n   * });\n   *\n   * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/Styling|3D Tiles Styling language}\n   */\n  this.style = options.style;\n\n  /**\n   * The event fired to indicate that a frame failed to load. A frame may fail to load if the\n   * request for its uri fails or processing fails due to invalid content.\n   * <p>\n   * If there are no event listeners, error messages will be logged to the console.\n   * </p>\n   * <p>\n   * The error object passed to the listener contains two properties:\n   * <ul>\n   * <li><code>uri</code>: the uri of the failed frame.</li>\n   * <li><code>message</code>: the error message.</li>\n   * </ul>\n   *\n   * @type {Event}\n   * @default new Event()\n   *\n   * @example\n   * pointCloud.frameFailed.addEventListener(function(error) {\n   *     console.log(\'An error occurred loading frame: \' + error.uri);\n   *     console.log(\'Error: \' + error.message);\n   * });\n   */\n  this.frameFailed = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n\n  /**\n   * The event fired to indicate that a new frame was rendered.\n   * <p>\n   * The time dynamic point cloud {@link TimeDynamicPointCloud} is passed to the event listener.\n   * </p>\n   * @type {Event}\n   * @default new Event()\n   *\n   * @example\n   * pointCloud.frameChanged.addEventListener(function(timeDynamicPointCloud) {\n   *     viewer.camera.viewBoundingSphere(timeDynamicPointCloud.boundingSphere);\n   * });\n   */\n  this.frameChanged = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n\n  this._clock = options.clock;\n  this._intervals = options.intervals;\n  this._clippingPlanes = undefined;\n  this.clippingPlanes = options.clippingPlanes; // Call setter\n  this._pointCloudEyeDomeLighting = new _PointCloudEyeDomeLighting_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z();\n  this._loadTimestamp = undefined;\n  this._clippingPlanesState = 0;\n  this._styleDirty = false;\n  this._pickId = undefined;\n  this._totalMemoryUsageInBytes = 0;\n  this._frames = [];\n  this._previousInterval = undefined;\n  this._nextInterval = undefined;\n  this._lastRenderedFrame = undefined;\n  this._clockMultiplier = 0.0;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].defer */ .Z.defer();\n\n  // For calculating average load time of the last N frames\n  this._runningSum = 0.0;\n  this._runningLength = 0;\n  this._runningIndex = 0;\n  this._runningSamples = (0,_Core_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(new Array(5), 0.0);\n  this._runningAverage = 0.0;\n}\n\nObject.defineProperties(TimeDynamicPointCloud.prototype, {\n  /**\n   * The {@link ClippingPlaneCollection} used to selectively disable rendering the point cloud.\n   *\n   * @memberof TimeDynamicPointCloud.prototype\n   *\n   * @type {ClippingPlaneCollection}\n   */\n  clippingPlanes: {\n    get: function () {\n      return this._clippingPlanes;\n    },\n    set: function (value) {\n      _ClippingPlaneCollection_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].setOwner */ .Z.setOwner(value, this, "_clippingPlanes");\n    },\n  },\n\n  /**\n   * The total amount of GPU memory in bytes used by the point cloud.\n   *\n   * @memberof TimeDynamicPointCloud.prototype\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @see TimeDynamicPointCloud#maximumMemoryUsage\n   */\n  totalMemoryUsageInBytes: {\n    get: function () {\n      return this._totalMemoryUsageInBytes;\n    },\n  },\n\n  /**\n   * The bounding sphere of the frame being rendered. Returns <code>undefined</code> if no frame is being rendered.\n   *\n   * @memberof TimeDynamicPointCloud.prototype\n   *\n   * @type {BoundingSphere}\n   * @readonly\n   */\n  boundingSphere: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(this._lastRenderedFrame)) {\n        return this._lastRenderedFrame.pointCloud.boundingSphere;\n      }\n      return undefined;\n    },\n  },\n\n  /**\n   * Gets the promise that will be resolved when the point cloud renders a frame for the first time.\n   *\n   * @memberof TimeDynamicPointCloud.prototype\n   *\n   * @type {Promise.<TimeDynamicPointCloud>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n});\n\nfunction getFragmentShaderLoaded(fs) {\n  return "uniform vec4 czm_pickColor;\\n" + fs;\n}\n\nfunction getUniformMapLoaded(stream) {\n  return function (uniformMap) {\n    return (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(uniformMap, {\n      czm_pickColor: function () {\n        return stream._pickId.color;\n      },\n    });\n  };\n}\n\nfunction getPickIdLoaded() {\n  return "czm_pickColor";\n}\n\n/**\n * Marks the point cloud\'s {@link TimeDynamicPointCloud#style} as dirty, which forces all\n * points to re-evaluate the style in the next frame.\n */\nTimeDynamicPointCloud.prototype.makeStyleDirty = function () {\n  this._styleDirty = true;\n};\n\n/**\n * Exposed for testing.\n *\n * @private\n */\nTimeDynamicPointCloud.prototype._getAverageLoadTime = function () {\n  if (this._runningLength === 0) {\n    // Before any frames have loaded make a best guess about the average load time\n    return 0.05;\n  }\n  return this._runningAverage;\n};\n\nvar scratchDate = new _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\n\nfunction getClockMultiplier(that) {\n  var clock = that._clock;\n  var isAnimating = clock.canAnimate && clock.shouldAnimate;\n  var multiplier = clock.multiplier;\n  return isAnimating ? multiplier : 0.0;\n}\n\nfunction getIntervalIndex(that, interval) {\n  return that._intervals.indexOf(interval.start);\n}\n\nfunction getNextInterval(that, currentInterval) {\n  var intervals = that._intervals;\n  var clock = that._clock;\n  var multiplier = getClockMultiplier(that);\n\n  if (multiplier === 0.0) {\n    return undefined;\n  }\n\n  var averageLoadTime = that._getAverageLoadTime();\n  var time = _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].addSeconds */ .Z.addSeconds(\n    clock.currentTime,\n    averageLoadTime * multiplier,\n    scratchDate\n  );\n  var index = intervals.indexOf(time);\n\n  var currentIndex = getIntervalIndex(that, currentInterval);\n  if (index === currentIndex) {\n    if (multiplier >= 0) {\n      ++index;\n    } else {\n      --index;\n    }\n  }\n\n  // Returns undefined if not in range\n  return intervals.get(index);\n}\n\nfunction getCurrentInterval(that) {\n  var intervals = that._intervals;\n  var clock = that._clock;\n  var time = clock.currentTime;\n  var index = intervals.indexOf(time);\n\n  // Returns undefined if not in range\n  return intervals.get(index);\n}\n\nfunction reachedInterval(that, currentInterval, nextInterval) {\n  var multiplier = getClockMultiplier(that);\n  var currentIndex = getIntervalIndex(that, currentInterval);\n  var nextIndex = getIntervalIndex(that, nextInterval);\n\n  if (multiplier >= 0) {\n    return currentIndex >= nextIndex;\n  }\n  return currentIndex <= nextIndex;\n}\n\nfunction handleFrameFailure(that, uri) {\n  return function (error) {\n    var message = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(error.message) ? error.message : error.toString();\n    if (that.frameFailed.numberOfListeners > 0) {\n      that.frameFailed.raiseEvent({\n        uri: uri,\n        message: message,\n      });\n    } else {\n      console.log("A frame failed to load: " + uri);\n      console.log("Error: " + message);\n    }\n  };\n}\n\nfunction requestFrame(that, interval, frameState) {\n  var index = getIntervalIndex(that, interval);\n  var frames = that._frames;\n  var frame = frames[index];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame)) {\n    var transformArray = interval.data.transform;\n    var transform = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(transformArray)\n      ? _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromArray */ .Z.fromArray(transformArray)\n      : undefined;\n    var uri = interval.data.uri;\n    frame = {\n      pointCloud: undefined,\n      transform: transform,\n      timestamp: (0,_Core_getTimestamp_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(),\n      sequential: true,\n      ready: false,\n      touchedFrameNumber: frameState.frameNumber,\n    };\n    frames[index] = frame;\n    _Core_Resource_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].fetchArrayBuffer */ .Z.fetchArrayBuffer({\n      url: uri,\n    })\n      .then(function (arrayBuffer) {\n        // PERFORMANCE_IDEA: share a memory pool, render states, shaders, and other resources among all\n        // frames. Each frame just needs an index/offset into the pool.\n        frame.pointCloud = new _PointCloud_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z({\n          arrayBuffer: arrayBuffer,\n          cull: true,\n          fragmentShaderLoaded: getFragmentShaderLoaded,\n          uniformMapLoaded: getUniformMapLoaded(that),\n          pickIdLoaded: getPickIdLoaded,\n        });\n        return frame.pointCloud.readyPromise;\n      })\n      .otherwise(handleFrameFailure(that, uri));\n  }\n  return frame;\n}\n\nfunction updateAverageLoadTime(that, loadTime) {\n  that._runningSum += loadTime;\n  that._runningSum -= that._runningSamples[that._runningIndex];\n  that._runningSamples[that._runningIndex] = loadTime;\n  that._runningLength = Math.min(\n    that._runningLength + 1,\n    that._runningSamples.length\n  );\n  that._runningIndex = (that._runningIndex + 1) % that._runningSamples.length;\n  that._runningAverage = that._runningSum / that._runningLength;\n}\n\nfunction prepareFrame(that, frame, updateState, frameState) {\n  if (frame.touchedFrameNumber < frameState.frameNumber - 1) {\n    // If this frame was not loaded in sequential updates then it can\'t be used it for calculating the average load time.\n    // For example: selecting a frame on the timeline, selecting another frame before the request finishes, then selecting this frame later.\n    frame.sequential = false;\n  }\n\n  var pointCloud = frame.pointCloud;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(pointCloud) && !frame.ready) {\n    // Call update to prepare renderer resources. Don\'t render anything yet.\n    var commandList = frameState.commandList;\n    var lengthBeforeUpdate = commandList.length;\n    renderFrame(that, frame, updateState, frameState);\n\n    if (pointCloud.ready) {\n      // Point cloud became ready this update\n      frame.ready = true;\n      that._totalMemoryUsageInBytes += pointCloud.geometryByteLength;\n      commandList.length = lengthBeforeUpdate; // Don\'t allow preparing frame to insert commands.\n      if (frame.sequential) {\n        // Update the values used to calculate average load time\n        var loadTime = ((0,_Core_getTimestamp_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)() - frame.timestamp) / 1000.0;\n        updateAverageLoadTime(that, loadTime);\n      }\n    }\n  }\n\n  frame.touchedFrameNumber = frameState.frameNumber;\n}\n\nvar scratchModelMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\n\nfunction getGeometricError(that, pointCloud) {\n  var shading = that.shading;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(shading) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(shading.baseResolution)) {\n    return shading.baseResolution;\n  } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(pointCloud.boundingSphere)) {\n    return _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].cbrt */ .Z.cbrt(\n      pointCloud.boundingSphere.volume() / pointCloud.pointsLength\n    );\n  }\n  return 0.0;\n}\n\nfunction getMaximumAttenuation(that) {\n  var shading = that.shading;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(shading) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(shading.maximumAttenuation)) {\n    return shading.maximumAttenuation;\n  }\n\n  // Return a hardcoded maximum attenuation. For a tileset this would instead be the maximum screen space error.\n  return 10.0;\n}\n\nvar defaultShading = new _PointCloudShading_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z();\n\nfunction renderFrame(that, frame, updateState, frameState) {\n  var shading = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(that.shading, defaultShading);\n  var pointCloud = frame.pointCloud;\n  var transform = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(frame.transform, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  pointCloud.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(\n    that.modelMatrix,\n    transform,\n    scratchModelMatrix\n  );\n  pointCloud.style = that.style;\n  pointCloud.time = updateState.timeSinceLoad;\n  pointCloud.shadows = that.shadows;\n  pointCloud.clippingPlanes = that._clippingPlanes;\n  pointCloud.isClipped = updateState.isClipped;\n  pointCloud.attenuation = shading.attenuation;\n  pointCloud.backFaceCulling = shading.backFaceCulling;\n  pointCloud.normalShading = shading.normalShading;\n  pointCloud.geometricError = getGeometricError(that, pointCloud);\n  pointCloud.geometricErrorScale = shading.geometricErrorScale;\n  pointCloud.maximumAttenuation = getMaximumAttenuation(that);\n\n  pointCloud.update(frameState);\n  frame.touchedFrameNumber = frameState.frameNumber;\n}\n\nfunction loadFrame(that, interval, updateState, frameState) {\n  var frame = requestFrame(that, interval, frameState);\n  prepareFrame(that, frame, updateState, frameState);\n}\n\nfunction getUnloadCondition(frameState) {\n  return function (frame) {\n    // Unload all frames that aren\'t currently being loaded or rendered\n    return frame.touchedFrameNumber < frameState.frameNumber;\n  };\n}\n\nfunction unloadFrames(that, unloadCondition) {\n  var frames = that._frames;\n  var length = frames.length;\n  for (var i = 0; i < length; ++i) {\n    var frame = frames[i];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame)) {\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(unloadCondition) || unloadCondition(frame)) {\n        var pointCloud = frame.pointCloud;\n        if (frame.ready) {\n          that._totalMemoryUsageInBytes -= pointCloud.geometryByteLength;\n        }\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(pointCloud)) {\n          pointCloud.destroy();\n        }\n        if (frame === that._lastRenderedFrame) {\n          that._lastRenderedFrame = undefined;\n        }\n        frames[i] = undefined;\n      }\n    }\n  }\n}\n\nfunction getFrame(that, interval) {\n  var index = getIntervalIndex(that, interval);\n  var frame = that._frames[index];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame) && frame.ready) {\n    return frame;\n  }\n}\n\nfunction updateInterval(that, interval, frame, updateState, frameState) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame)) {\n    if (frame.ready) {\n      return true;\n    }\n    loadFrame(that, interval, updateState, frameState);\n    return frame.ready;\n  }\n  return false;\n}\n\nfunction getNearestReadyInterval(\n  that,\n  previousInterval,\n  currentInterval,\n  updateState,\n  frameState\n) {\n  var i;\n  var interval;\n  var frame;\n  var intervals = that._intervals;\n  var frames = that._frames;\n  var currentIndex = getIntervalIndex(that, currentInterval);\n  var previousIndex = getIntervalIndex(that, previousInterval);\n\n  if (currentIndex >= previousIndex) {\n    // look backwards\n    for (i = currentIndex; i >= previousIndex; --i) {\n      interval = intervals.get(i);\n      frame = frames[i];\n      if (updateInterval(that, interval, frame, updateState, frameState)) {\n        return interval;\n      }\n    }\n  } else {\n    // look forwards\n    for (i = currentIndex; i <= previousIndex; ++i) {\n      interval = intervals.get(i);\n      frame = frames[i];\n      if (updateInterval(that, interval, frame, updateState, frameState)) {\n        return interval;\n      }\n    }\n  }\n\n  // If no intervals are ready return the previous interval\n  return previousInterval;\n}\n\nfunction setFramesDirty(that, clippingPlanesDirty, styleDirty) {\n  var frames = that._frames;\n  var framesLength = frames.length;\n  for (var i = 0; i < framesLength; ++i) {\n    var frame = frames[i];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame.pointCloud)) {\n      frame.pointCloud.clippingPlanesDirty = clippingPlanesDirty;\n      frame.pointCloud.styleDirty = styleDirty;\n    }\n  }\n}\n\nvar updateState = {\n  timeSinceLoad: 0,\n  isClipped: false,\n  clippingPlanesDirty: false,\n};\n\n/**\n * @private\n */\nTimeDynamicPointCloud.prototype.update = function (frameState) {\n  if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].MORPHING */ .Z.MORPHING) {\n    return;\n  }\n\n  if (!this.show) {\n    return;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(this._pickId)) {\n    this._pickId = frameState.context.createPickId({\n      primitive: this,\n    });\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(this._loadTimestamp)) {\n    this._loadTimestamp = _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(frameState.time);\n  }\n\n  // For styling\n  var timeSinceLoad = Math.max(\n    _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].secondsDifference */ .Z.secondsDifference(frameState.time, this._loadTimestamp) * 1000,\n    0.0\n  );\n\n  // Update clipping planes\n  var clippingPlanes = this._clippingPlanes;\n  var clippingPlanesState = 0;\n  var clippingPlanesDirty = false;\n  var isClipped = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(clippingPlanes) && clippingPlanes.enabled;\n\n  if (isClipped) {\n    clippingPlanes.update(frameState);\n    clippingPlanesState = clippingPlanes.clippingPlanesState;\n  }\n\n  if (this._clippingPlanesState !== clippingPlanesState) {\n    this._clippingPlanesState = clippingPlanesState;\n    clippingPlanesDirty = true;\n  }\n\n  var styleDirty = this._styleDirty;\n  this._styleDirty = false;\n\n  if (clippingPlanesDirty || styleDirty) {\n    setFramesDirty(this, clippingPlanesDirty, styleDirty);\n  }\n\n  updateState.timeSinceLoad = timeSinceLoad;\n  updateState.isClipped = isClipped;\n\n  var shading = this.shading;\n  var eyeDomeLighting = this._pointCloudEyeDomeLighting;\n\n  var commandList = frameState.commandList;\n  var lengthBeforeUpdate = commandList.length;\n\n  var previousInterval = this._previousInterval;\n  var nextInterval = this._nextInterval;\n  var currentInterval = getCurrentInterval(this);\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(currentInterval)) {\n    return;\n  }\n\n  var clockMultiplierChanged = false;\n  var clockMultiplier = getClockMultiplier(this);\n  var clockPaused = clockMultiplier === 0;\n  if (clockMultiplier !== this._clockMultiplier) {\n    clockMultiplierChanged = true;\n    this._clockMultiplier = clockMultiplier;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(previousInterval) || clockPaused) {\n    previousInterval = currentInterval;\n  }\n\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(nextInterval) ||\n    clockMultiplierChanged ||\n    reachedInterval(this, currentInterval, nextInterval)\n  ) {\n    nextInterval = getNextInterval(this, currentInterval);\n  }\n\n  previousInterval = getNearestReadyInterval(\n    this,\n    previousInterval,\n    currentInterval,\n    updateState,\n    frameState\n  );\n  var frame = getFrame(this, previousInterval);\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame)) {\n    // The frame is not ready to render. This can happen when the simulation starts or when scrubbing the timeline\n    // to a frame that hasn\'t loaded yet. Just render the last rendered frame in its place until it finishes loading.\n    loadFrame(this, previousInterval, updateState, frameState);\n    frame = this._lastRenderedFrame;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame)) {\n    renderFrame(this, frame, updateState, frameState);\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(nextInterval)) {\n    // Start loading the next frame\n    loadFrame(this, nextInterval, updateState, frameState);\n  }\n\n  var that = this;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(this._lastRenderedFrame)) {\n    frameState.afterRender.push(function () {\n      that._readyPromise.resolve(that);\n    });\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(frame) && frame !== this._lastRenderedFrame) {\n    if (that.frameChanged.numberOfListeners > 0) {\n      frameState.afterRender.push(function () {\n        that.frameChanged.raiseEvent(that);\n      });\n    }\n  }\n\n  this._previousInterval = previousInterval;\n  this._nextInterval = nextInterval;\n  this._lastRenderedFrame = frame;\n\n  var totalMemoryUsageInBytes = this._totalMemoryUsageInBytes;\n  var maximumMemoryUsageInBytes = this.maximumMemoryUsage * 1024 * 1024;\n\n  if (totalMemoryUsageInBytes > maximumMemoryUsageInBytes) {\n    unloadFrames(this, getUnloadCondition(frameState));\n  }\n\n  var lengthAfterUpdate = commandList.length;\n  var addedCommandsLength = lengthAfterUpdate - lengthBeforeUpdate;\n\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(shading) &&\n    shading.attenuation &&\n    shading.eyeDomeLighting &&\n    addedCommandsLength > 0\n  ) {\n    eyeDomeLighting.update(\n      frameState,\n      lengthBeforeUpdate,\n      shading,\n      this.boundingSphere\n    );\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see TimeDynamicPointCloud#destroy\n */\nTimeDynamicPointCloud.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * pointCloud = pointCloud && pointCloud.destroy();\n *\n * @see TimeDynamicPointCloud#isDestroyed\n */\nTimeDynamicPointCloud.prototype.destroy = function () {\n  unloadFrames(this);\n  this._clippingPlanes = this._clippingPlanes && this._clippingPlanes.destroy();\n  this._pickId = this._pickId && this._pickId.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (TimeDynamicPointCloud);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///78831\n')},1057:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * A tonemapping algorithm when rendering with high dynamic range.\n *\n * @enum {Number}\n * @private\n */\nvar Tonemapper = {\n  /**\n   * Use the Reinhard tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  REINHARD: 0,\n\n  /**\n   * Use the modified Reinhard tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MODIFIED_REINHARD: 1,\n\n  /**\n   * Use the Filmic tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  FILMIC: 2,\n\n  /**\n   * Use the ACES tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ACES: 3,\n\n  /**\n   * @private\n   */\n  validate: function (tonemapper) {\n    return (\n      tonemapper === Tonemapper.REINHARD ||\n      tonemapper === Tonemapper.MODIFIED_REINHARD ||\n      tonemapper === Tonemapper.FILMIC ||\n      tonemapper === Tonemapper.ACES\n    );\n  },\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(Tonemapper));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA1Ny5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHlEQUFlLHlCQUF5QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL1RvbmVtYXBwZXIuanM/ZDVhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgdG9uZW1hcHBpbmcgYWxnb3JpdGhtIHdoZW4gcmVuZGVyaW5nIHdpdGggaGlnaCBkeW5hbWljIHJhbmdlLlxuICpcbiAqIEBlbnVtIHtOdW1iZXJ9XG4gKiBAcHJpdmF0ZVxuICovXG52YXIgVG9uZW1hcHBlciA9IHtcbiAgLyoqXG4gICAqIFVzZSB0aGUgUmVpbmhhcmQgdG9uZW1hcHBpbmcgb3BlcmF0b3IuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgUkVJTkhBUkQ6IDAsXG5cbiAgLyoqXG4gICAqIFVzZSB0aGUgbW9kaWZpZWQgUmVpbmhhcmQgdG9uZW1hcHBpbmcgb3BlcmF0b3IuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTU9ESUZJRURfUkVJTkhBUkQ6IDEsXG5cbiAgLyoqXG4gICAqIFVzZSB0aGUgRmlsbWljIHRvbmVtYXBwaW5nIG9wZXJhdG9yLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIEZJTE1JQzogMixcblxuICAvKipcbiAgICogVXNlIHRoZSBBQ0VTIHRvbmVtYXBwaW5nIG9wZXJhdG9yLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIEFDRVM6IDMsXG5cbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB2YWxpZGF0ZTogZnVuY3Rpb24gKHRvbmVtYXBwZXIpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdG9uZW1hcHBlciA9PT0gVG9uZW1hcHBlci5SRUlOSEFSRCB8fFxuICAgICAgdG9uZW1hcHBlciA9PT0gVG9uZW1hcHBlci5NT0RJRklFRF9SRUlOSEFSRCB8fFxuICAgICAgdG9uZW1hcHBlciA9PT0gVG9uZW1hcHBlci5GSUxNSUMgfHxcbiAgICAgIHRvbmVtYXBwZXIgPT09IFRvbmVtYXBwZXIuQUNFU1xuICAgICk7XG4gIH0sXG59O1xuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmZyZWV6ZShUb25lbWFwcGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1057\n')},7853:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86511);\n/* harmony import */ var _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38443);\n/* harmony import */ var _Renderer_ClearCommand_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39899);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Framebuffer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2932);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(21572);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(87721);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(8743);\n/* harmony import */ var _Shaders_CompareAndPackTranslucentDepth_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(19447);\n/* harmony import */ var _Shaders_PostProcessStages_CompositeTranslucentClassification_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(40643);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(13633);\n/* harmony import */ var _StencilConstants_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(87233);\n/* harmony import */ var _StencilFunction_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(77053);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar debugShowPackedDepth = false;\n\n/**\n * Handles buffers, drawing, and deriving commands needed for classifying translucent 3D Tiles.\n * Uses a depth texture, so classification on translucent 3D Tiles is not available in Internet Explorer.\n *\n * @private\n */\nfunction TranslucentTileClassification(context) {\n  this._drawClassificationFBO = undefined;\n  this._accumulationFBO = undefined;\n  this._packFBO = undefined;\n\n  this._opaqueDepthStencilTexture = undefined;\n\n  this._colorTexture = undefined;\n  this._accumulationTexture = undefined;\n\n  // Reference to either colorTexture or accumulationTexture\n  this._textureToComposite = undefined;\n\n  this._translucentDepthStencilTexture = undefined;\n  this._packedTranslucentDepth = undefined;\n\n  this._packDepthCommand = undefined;\n  this._accumulateCommand = undefined;\n  this._compositeCommand = undefined;\n  this._copyCommand = undefined;\n\n  this._clearColorCommand = new _Renderer_ClearCommand_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n    color: new _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(0.0, 0.0, 0.0, 0.0),\n    owner: this,\n  });\n\n  this._clearDepthStencilCommand = new _Renderer_ClearCommand_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n    depth: 1.0,\n    stencil: 0,\n    owner: this,\n  });\n\n  this._supported = context.depthTexture;\n\n  this._viewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this._rsDepth = undefined;\n  this._rsAccumulate = undefined;\n  this._rsComp = undefined;\n  this._useScissorTest = undefined;\n  this._scissorRectangle = undefined;\n\n  this._hasTranslucentDepth = false;\n  this._frustumsDrawn = 0;\n}\n\nObject.defineProperties(TranslucentTileClassification.prototype, {\n  /**\n   * Gets whether or not translucent depth was rendered.\n   * @memberof TranslucentTileClassification.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  hasTranslucentDepth: {\n    get: function () {\n      return this._hasTranslucentDepth;\n    },\n  },\n});\n\nfunction destroyTextures(transpClass) {\n  transpClass._colorTexture =\n    transpClass._colorTexture &&\n    !transpClass._colorTexture.isDestroyed() &&\n    transpClass._colorTexture.destroy();\n\n  transpClass._accumulationTexture =\n    transpClass._accumulationTexture &&\n    !transpClass._accumulationTexture.isDestroyed() &&\n    transpClass._accumulationTexture.destroy();\n  transpClass._textureToComposite = undefined;\n\n  transpClass._translucentDepthStencilTexture =\n    transpClass._translucentDepthStencilTexture &&\n    !transpClass._translucentDepthStencilTexture.isDestroyed() &&\n    transpClass._translucentDepthStencilTexture.destroy();\n  transpClass._packedTranslucentDepth =\n    transpClass._packedTranslucentDepth &&\n    !transpClass._packedTranslucentDepth.isDestroyed() &&\n    transpClass._packedTranslucentDepth.destroy();\n}\n\nfunction destroyFramebuffers(transpClass) {\n  transpClass._drawClassificationFBO =\n    transpClass._drawClassificationFBO &&\n    !transpClass._drawClassificationFBO.isDestroyed() &&\n    transpClass._drawClassificationFBO.destroy();\n  transpClass._accumulationFBO =\n    transpClass._accumulationFBO &&\n    !transpClass._accumulationFBO.isDestroyed() &&\n    transpClass._accumulationFBO.destroy();\n\n  transpClass._packFBO =\n    transpClass._packFBO &&\n    !transpClass._packFBO.isDestroyed() &&\n    transpClass._packFBO.destroy();\n}\n\nfunction rgbaTexture(context, width, height) {\n  return new _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].RGBA */ .Z.RGBA,\n    pixelDatatype: _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n    sampler: _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].NEAREST */ .Z.NEAREST,\n  });\n}\n\nfunction updateTextures(transpClass, context, width, height) {\n  destroyTextures(transpClass);\n\n  transpClass._colorTexture = rgbaTexture(context, width, height);\n  transpClass._accumulationTexture = rgbaTexture(context, width, height);\n\n  transpClass._translucentDepthStencilTexture = new _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].DEPTH_STENCIL */ .Z.DEPTH_STENCIL,\n    pixelDatatype: _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_INT_24_8 */ .Z.UNSIGNED_INT_24_8,\n    sampler: _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].NEAREST */ .Z.NEAREST,\n  });\n\n  transpClass._packedTranslucentDepth = new _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].RGBA */ .Z.RGBA,\n    pixelDatatype: _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n    sampler: _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].NEAREST */ .Z.NEAREST,\n  });\n}\n\nfunction updateFramebuffers(transpClass, context) {\n  destroyFramebuffers(transpClass);\n\n  transpClass._drawClassificationFBO = new _Renderer_Framebuffer_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n    context: context,\n    colorTextures: [transpClass._colorTexture],\n    depthStencilTexture: transpClass._translucentDepthStencilTexture,\n    destroyAttachments: false,\n  });\n\n  transpClass._accumulationFBO = new _Renderer_Framebuffer_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n    context: context,\n    colorTextures: [transpClass._accumulationTexture],\n    depthStencilTexture: transpClass._translucentDepthStencilTexture,\n    destroyAttachments: false,\n  });\n\n  transpClass._packFBO = new _Renderer_Framebuffer_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n    context: context,\n    colorTextures: [transpClass._packedTranslucentDepth],\n    destroyAttachments: false,\n  });\n}\n\nfunction updateResources(\n  transpClass,\n  context,\n  passState,\n  globeDepthFramebuffer\n) {\n  if (!transpClass.isSupported()) {\n    return;\n  }\n\n  transpClass._opaqueDepthStencilTexture =\n    globeDepthFramebuffer.depthStencilTexture;\n\n  var width = transpClass._opaqueDepthStencilTexture.width;\n  var height = transpClass._opaqueDepthStencilTexture.height;\n\n  var colorTexture = transpClass._colorTexture;\n  var textureChanged =\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(colorTexture) ||\n    colorTexture.width !== width ||\n    colorTexture.height !== height;\n  if (textureChanged) {\n    updateTextures(transpClass, context, width, height);\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._drawClassificationFBO) || textureChanged) {\n    updateFramebuffers(transpClass, context);\n  }\n\n  var fs;\n  var uniformMap;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._packDepthCommand)) {\n    fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      sources: [_Shaders_CompareAndPackTranslucentDepth_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z],\n    });\n\n    uniformMap = {\n      u_opaqueDepthTexture: function () {\n        return transpClass._opaqueDepthStencilTexture;\n      },\n      u_translucentDepthTexture: function () {\n        return transpClass._translucentDepthStencilTexture;\n      },\n    };\n\n    transpClass._packDepthCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass,\n    });\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._compositeCommand)) {\n    fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      sources: [_Shaders_PostProcessStages_CompositeTranslucentClassification_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z],\n    });\n\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._textureToComposite;\n      },\n    };\n\n    if (debugShowPackedDepth) {\n      fs.defines = ["DEBUG_SHOW_DEPTH"];\n      uniformMap.u_packedTranslucentDepth = function () {\n        return transpClass._packedTranslucentDepth;\n      };\n    }\n\n    transpClass._compositeCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass,\n    });\n\n    var compositeCommand = transpClass._compositeCommand;\n    var compositeProgram = compositeCommand.shaderProgram;\n    var compositePickProgram = context.shaderCache.createDerivedShaderProgram(\n      compositeProgram,\n      "pick",\n      {\n        vertexShaderSource: compositeProgram.vertexShaderSource,\n        fragmentShaderSource: new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n          sources: fs.sources,\n          defines: ["PICK"],\n        }),\n        attributeLocations: compositeProgram._attributeLocations,\n      }\n    );\n    var compositePickCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].shallowClone */ .Z.shallowClone(compositeCommand);\n    compositePickCommand.shaderProgram = compositePickProgram;\n    compositeCommand.derivedCommands.pick = compositePickCommand;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._copyCommand)) {\n    fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      sources: [_Shaders_PostProcessStages_CompositeTranslucentClassification_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z],\n    });\n\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._colorTexture;\n      },\n    };\n\n    transpClass._copyCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass,\n    });\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._accumulateCommand)) {\n    fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      sources: [_Shaders_PostProcessStages_CompositeTranslucentClassification_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z],\n    });\n\n    uniformMap = {\n      colorTexture: function () {\n        return transpClass._colorTexture;\n      },\n    };\n\n    transpClass._accumulateCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: uniformMap,\n      owner: transpClass,\n    });\n  }\n\n  transpClass._viewport.width = width;\n  transpClass._viewport.height = height;\n\n  var useScissorTest = !_Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(\n    transpClass._viewport,\n    passState.viewport\n  );\n  var updateScissor = useScissorTest !== transpClass._useScissorTest;\n  transpClass._useScissorTest = useScissorTest;\n\n  if (\n    !_Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(transpClass._scissorRectangle, passState.viewport)\n  ) {\n    transpClass._scissorRectangle = _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n      passState.viewport,\n      transpClass._scissorRectangle\n    );\n    updateScissor = true;\n  }\n\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._rsDepth) ||\n    !_Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(\n      transpClass._viewport,\n      transpClass._rsDepth.viewport\n    ) ||\n    updateScissor\n  ) {\n    transpClass._rsDepth = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromCache */ .Z.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle,\n      },\n    });\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._packDepthCommand)) {\n    transpClass._packDepthCommand.renderState = transpClass._rsDepth;\n  }\n\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._rsAccumulate) ||\n    !_Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(\n      transpClass._viewport,\n      transpClass._rsAccumulate.viewport\n    ) ||\n    updateScissor\n  ) {\n    transpClass._rsAccumulate = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromCache */ .Z.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle,\n      },\n      stencilTest: {\n        enabled: true,\n        frontFunction: _StencilFunction_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].EQUAL */ .Z.EQUAL,\n        reference: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK,\n      },\n    });\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._accumulateCommand)) {\n    transpClass._accumulateCommand.renderState = transpClass._rsAccumulate;\n  }\n\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._rsComp) ||\n    !_Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(\n      transpClass._viewport,\n      transpClass._rsComp.viewport\n    ) ||\n    updateScissor\n  ) {\n    transpClass._rsComp = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromCache */ .Z.fromCache({\n      viewport: transpClass._viewport,\n      scissorTest: {\n        enabled: transpClass._useScissorTest,\n        rectangle: transpClass._scissorRectangle,\n      },\n      blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND,\n    });\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(transpClass._compositeCommand)) {\n    transpClass._compositeCommand.renderState = transpClass._rsComp;\n    transpClass._compositeCommand.derivedCommands.pick.renderState =\n      transpClass._rsComp;\n  }\n}\n\nTranslucentTileClassification.prototype.executeTranslucentCommands = function (\n  scene,\n  executeCommand,\n  passState,\n  commands,\n  globeDepthFramebuffer\n) {\n  // Check for translucent commands that should be classified\n  var length = commands.length;\n  var command;\n  var i;\n\n  var useLogDepth = scene.frameState.useLogDepth;\n  var context = scene.context;\n  var framebuffer = passState.framebuffer;\n\n  for (i = 0; i < length; ++i) {\n    command = commands[i];\n    command = useLogDepth ? command.derivedCommands.logDepth.command : command;\n\n    if (command.depthForTranslucentClassification) {\n      this._hasTranslucentDepth = true;\n      break;\n    }\n  }\n\n  if (!this._hasTranslucentDepth) {\n    return;\n  }\n\n  updateResources(this, context, passState, globeDepthFramebuffer);\n\n  // Get translucent depth\n  passState.framebuffer = this._drawClassificationFBO;\n\n  // Clear depth for multifrustum\n  this._clearDepthStencilCommand.execute(context, passState);\n\n  for (i = 0; i < length; ++i) {\n    command = commands[i];\n    command = useLogDepth ? command.derivedCommands.logDepth.command : command;\n\n    if (!command.depthForTranslucentClassification) {\n      continue;\n    }\n\n    // Depth-only commands are created for all translucent 3D Tiles commands\n    var depthOnlyCommand = command.derivedCommands.depth.depthOnlyCommand;\n    executeCommand(depthOnlyCommand, scene, context, passState);\n  }\n\n  this._frustumsDrawn += this._hasTranslucentDepth ? 1 : 0;\n\n  // Pack depth if any translucent depth commands were performed\n  if (this._hasTranslucentDepth) {\n    passState.framebuffer = this._packFBO;\n    this._packDepthCommand.execute(context, passState);\n  }\n\n  passState.framebuffer = framebuffer;\n};\n\nTranslucentTileClassification.prototype.executeClassificationCommands = function (\n  scene,\n  executeCommand,\n  passState,\n  frustumCommands\n) {\n  if (!this._hasTranslucentDepth) {\n    return;\n  }\n\n  var context = scene.context;\n  var us = context.uniformState;\n  var framebuffer = passState.framebuffer;\n\n  if (this._frustumsDrawn === 2) {\n    // copy classification from first frustum\n    passState.framebuffer = this._accumulationFBO;\n    this._copyCommand.execute(context, passState);\n  }\n\n  passState.framebuffer = this._drawClassificationFBO;\n  if (this._frustumsDrawn > 1) {\n    this._clearColorCommand.execute(context, passState);\n  }\n\n  us.updatePass(_Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION);\n  var swapGlobeDepth = us.globeDepthTexture;\n  us.globeDepthTexture = this._packedTranslucentDepth;\n  var commands = frustumCommands.commands[_Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION];\n  var length = frustumCommands.indices[_Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION];\n  for (var i = 0; i < length; ++i) {\n    executeCommand(commands[i], scene, context, passState);\n  }\n\n  us.globeDepthTexture = swapGlobeDepth;\n  passState.framebuffer = framebuffer;\n\n  if (this._frustumsDrawn === 1) {\n    return;\n  }\n\n  passState.framebuffer = this._accumulationFBO;\n  this._accumulateCommand.execute(context, passState);\n\n  passState.framebuffer = framebuffer;\n};\n\nTranslucentTileClassification.prototype.execute = function (scene, passState) {\n  if (!this._hasTranslucentDepth) {\n    return;\n  }\n  if (this._frustumsDrawn === 1) {\n    this._textureToComposite = this._colorTexture;\n  } else {\n    this._textureToComposite = this._accumulationTexture;\n  }\n\n  var command = scene.frameState.passes.pick\n    ? this._compositeCommand.derivedCommands.pick\n    : this._compositeCommand;\n  command.execute(scene.context, passState);\n\n  clear(this, scene, passState);\n};\n\nfunction clear(translucentTileClassification, scene, passState) {\n  if (!translucentTileClassification._hasTranslucentDepth) {\n    return;\n  }\n\n  var framebuffer = passState.framebuffer;\n\n  passState.framebuffer = translucentTileClassification._drawClassificationFBO;\n  translucentTileClassification._clearColorCommand.execute(\n    scene._context,\n    passState\n  );\n\n  passState.framebuffer = framebuffer;\n\n  if (translucentTileClassification._frustumsDrawn > 1) {\n    passState.framebuffer = translucentTileClassification._accumulationFBO;\n    translucentTileClassification._clearColorCommand.execute(\n      scene._context,\n      passState\n    );\n  }\n\n  translucentTileClassification._hasTranslucentDepth = false;\n  translucentTileClassification._frustumsDrawn = 0;\n}\n\nTranslucentTileClassification.prototype.isSupported = function () {\n  return this._supported;\n};\n\nTranslucentTileClassification.prototype.isDestroyed = function () {\n  return false;\n};\n\nTranslucentTileClassification.prototype.destroy = function () {\n  destroyTextures(this);\n  destroyFramebuffers(this);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(this._compositeCommand)) {\n    this._compositeCommand.shaderProgram =\n      this._compositeCommand.shaderProgram &&\n      this._compositeCommand.shaderProgram.destroy();\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z)(this._packDepthCommand)) {\n    this._packDepthCommand.shaderProgram =\n      this._packDepthCommand.shaderProgram &&\n      this._packDepthCommand.shaderProgram.destroy();\n  }\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this);\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (TranslucentTileClassification);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7853\n')},74476:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_clone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(83856);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n/* harmony import */ var _Core_EasingFunction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50732);\n/* harmony import */ var _Core_getTimestamp_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(59081);\n/* harmony import */ var _Core_TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4877);\n/* harmony import */ var _ThirdParty_Tween_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(85684);\n\n\n\n\n\n\n\n\n\n/**\n * A tween is an animation that interpolates the properties of two objects using an {@link EasingFunction}.  Create\n * one using {@link Scene#tweens} and {@link TweenCollection#add} and related add functions.\n *\n * @alias Tween\n * @constructor\n *\n * @private\n */\nfunction Tween(\n  tweens,\n  tweenjs,\n  startObject,\n  stopObject,\n  duration,\n  delay,\n  easingFunction,\n  update,\n  complete,\n  cancel\n) {\n  this._tweens = tweens;\n  this._tweenjs = tweenjs;\n\n  this._startObject = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(startObject);\n  this._stopObject = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(stopObject);\n\n  this._duration = duration;\n  this._delay = delay;\n  this._easingFunction = easingFunction;\n\n  this._update = update;\n  this._complete = complete;\n\n  /**\n   * The callback to call if the tween is canceled either because {@link Tween#cancelTween}\n   * was called or because the tween was removed from the collection.\n   *\n   * @type {TweenCollection.TweenCancelledCallback}\n   */\n  this.cancel = cancel;\n\n  /**\n   * @private\n   */\n  this.needsStart = true;\n}\n\nObject.defineProperties(Tween.prototype, {\n  /**\n   * An object with properties for initial values of the tween.  The properties of this object are changed during the tween\'s animation.\n   * @memberof Tween.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  startObject: {\n    get: function () {\n      return this._startObject;\n    },\n  },\n\n  /**\n   * An object with properties for the final values of the tween.\n   * @memberof Tween.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  stopObject: {\n    get: function () {\n      return this._stopObject;\n    },\n  },\n\n  /**\n   * The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n   * @memberof Tween.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  duration: {\n    get: function () {\n      return this._duration;\n    },\n  },\n\n  /**\n   * The delay, in seconds, before the tween starts animating.\n   * @memberof Tween.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  delay: {\n    get: function () {\n      return this._delay;\n    },\n  },\n\n  /**\n   * Determines the curve for animtion.\n   * @memberof Tween.prototype\n   *\n   * @type {EasingFunction}\n   * @readonly\n   */\n  easingFunction: {\n    get: function () {\n      return this._easingFunction;\n    },\n  },\n\n  /**\n   * The callback to call at each animation update (usually tied to the a rendered frame).\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection.TweenUpdateCallback}\n   * @readonly\n   */\n  update: {\n    get: function () {\n      return this._update;\n    },\n  },\n\n  /**\n   * The callback to call when the tween finishes animating.\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection.TweenCompleteCallback}\n   * @readonly\n   */\n  complete: {\n    get: function () {\n      return this._complete;\n    },\n  },\n\n  /**\n   * @memberof Tween.prototype\n   *\n   * @private\n   */\n  tweenjs: {\n    get: function () {\n      return this._tweenjs;\n    },\n  },\n});\n\n/**\n * Cancels the tween calling the {@link Tween#cancel} callback if one exists.  This\n * has no effect if the tween finished or was already canceled.\n */\nTween.prototype.cancelTween = function () {\n  this._tweens.remove(this);\n};\n\n/**\n * A collection of tweens for animating properties.  Commonly accessed using {@link Scene#tweens}.\n *\n * @alias TweenCollection\n * @constructor\n *\n * @private\n */\nfunction TweenCollection() {\n  this._tweens = [];\n}\n\nObject.defineProperties(TweenCollection.prototype, {\n  /**\n   * The number of tweens in the collection.\n   * @memberof TweenCollection.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  length: {\n    get: function () {\n      return this._tweens.length;\n    },\n  },\n});\n\n/**\n * Creates a tween for animating between two sets of properties.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Object} options.startObject An object with properties for initial values of the tween.  The properties of this object are changed during the tween\'s animation.\n * @param {Object} options.stopObject An object with properties for the final values of the tween.\n * @param {Number} options.duration The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.add = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.startObject) || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.stopObject)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      "options.startObject and options.stopObject are required."\n    );\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.duration) || options.duration < 0.0) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      "options.duration is required and must be positive."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  if (options.duration === 0.0) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.complete)) {\n      options.complete();\n    }\n    return new Tween(this);\n  }\n\n  var duration = options.duration / _Core_TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SECONDS_PER_MILLISECOND */ .Z.SECONDS_PER_MILLISECOND;\n  var delayInSeconds = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.delay, 0.0);\n  var delay = delayInSeconds / _Core_TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SECONDS_PER_MILLISECOND */ .Z.SECONDS_PER_MILLISECOND;\n  var easingFunction = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    options.easingFunction,\n    _Core_EasingFunction_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].LINEAR_NONE */ .Z.LINEAR_NONE\n  );\n\n  var value = options.startObject;\n  var tweenjs = new _ThirdParty_Tween_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].Tween */ .Z.Tween(value);\n  tweenjs.to((0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.stopObject), duration);\n  tweenjs.delay(delay);\n  tweenjs.easing(easingFunction);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.update)) {\n    tweenjs.onUpdate(function () {\n      options.update(value);\n    });\n  }\n  tweenjs.onComplete((0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.complete, null));\n  tweenjs.repeat((0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options._repeat, 0.0));\n\n  var tween = new Tween(\n    this,\n    tweenjs,\n    options.startObject,\n    options.stopObject,\n    options.duration,\n    delayInSeconds,\n    easingFunction,\n    options.update,\n    options.complete,\n    options.cancel\n  );\n  this._tweens.push(tween);\n  return tween;\n};\n\n/**\n * Creates a tween for animating a scalar property on the given object.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Object} options.object The object containing the property to animate.\n * @param {String} options.property The name of the property to animate.\n * @param {Number} options.startValue The initial value.\n * @param {Number} options.stopValue The final value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.object must have the specified property.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addProperty = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var object = options.object;\n  var property = options.property;\n  var startValue = options.startValue;\n  var stopValue = options.stopValue;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(object) || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.property)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      "options.object and options.property are required."\n    );\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(object[property])) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      "options.object must have the specified property."\n    );\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startValue) || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(stopValue)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      "options.startValue and options.stopValue are required."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  function update(value) {\n    object[property] = value.value;\n  }\n\n  return this.add({\n    startObject: {\n      value: startValue,\n    },\n    stopObject: {\n      value: stopValue,\n    },\n    duration: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel,\n    _repeat: options._repeat,\n  });\n};\n\n/**\n * Creates a tween for animating the alpha of all color uniforms on a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {Number} [options.startValue=0.0] The initial alpha value.\n * @param {Number} [options.stopValue=1.0] The final alpha value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material has no properties with alpha components.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addAlpha = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var material = options.material;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(material)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("options.material is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var properties = [];\n\n  for (var property in material.uniforms) {\n    if (\n      material.uniforms.hasOwnProperty(property) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(material.uniforms[property]) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(material.uniforms[property].alpha)\n    ) {\n      properties.push(property);\n    }\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (properties.length === 0) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      "material has no properties with alpha components."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  function update(value) {\n    var length = properties.length;\n    for (var i = 0; i < length; ++i) {\n      material.uniforms[properties[i]].alpha = value.alpha;\n    }\n  }\n\n  return this.add({\n    startObject: {\n      alpha: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.startValue, 0.0), // Default to fade in\n    },\n    stopObject: {\n      alpha: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.stopValue, 1.0),\n    },\n    duration: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel,\n  });\n};\n\n/**\n * Creates a tween for animating the offset uniform of a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {Number} options.startValue The initial alpha value.\n * @param {Number} options.stopValue The final alpha value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection.TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection.TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material.uniforms must have an offset property.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addOffsetIncrement = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var material = options.material;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(material)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("material is required.");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(material.uniforms.offset)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("material.uniforms must have an offset property.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var uniforms = material.uniforms;\n  return this.addProperty({\n    object: uniforms,\n    property: "offset",\n    startValue: uniforms.offset,\n    stopValue: uniforms.offset + 1,\n    duration: options.duration,\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: options.update,\n    cancel: options.cancel,\n    _repeat: Infinity,\n  });\n};\n\n/**\n * Removes a tween from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback if the tween has one.\n * </p>\n *\n * @param {Tween} tween The tween to remove.\n * @returns {Boolean} <code>true</code> if the tween was removed; <code>false</code> if the tween was not found in the collection.\n */\nTweenCollection.prototype.remove = function (tween) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(tween)) {\n    return false;\n  }\n\n  var index = this._tweens.indexOf(tween);\n  if (index !== -1) {\n    tween.tweenjs.stop();\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(tween.cancel)) {\n      tween.cancel();\n    }\n    this._tweens.splice(index, 1);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Removes all tweens from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback for each tween that has one.\n * </p>\n */\nTweenCollection.prototype.removeAll = function () {\n  var tweens = this._tweens;\n\n  for (var i = 0; i < tweens.length; ++i) {\n    var tween = tweens[i];\n    tween.tweenjs.stop();\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(tween.cancel)) {\n      tween.cancel();\n    }\n  }\n  tweens.length = 0;\n};\n\n/**\n * Determines whether this collection contains a given tween.\n *\n * @param {Tween} tween The tween to check for.\n * @returns {Boolean} <code>true</code> if this collection contains the tween, <code>false</code> otherwise.\n */\nTweenCollection.prototype.contains = function (tween) {\n  return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(tween) && this._tweens.indexOf(tween) !== -1;\n};\n\n/**\n * Returns the tween in the collection at the specified index.  Indices are zero-based\n * and increase as tweens are added.  Removing a tween shifts all tweens after\n * it to the left, changing their indices.  This function is commonly used to iterate over\n * all the tween in the collection.\n *\n * @param {Number} index The zero-based index of the tween.\n * @returns {Tween} The tween at the specified index.\n *\n * @example\n * // Output the duration of all the tweens in the collection.\n * var tweens = scene.tweens;\n * var length = tweens.length;\n * for (var i = 0; i < length; ++i) {\n *   console.log(tweens.get(i).duration);\n * }\n */\nTweenCollection.prototype.get = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(index)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("index is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return this._tweens[index];\n};\n\n/**\n * Updates the tweens in the collection to be at the provide time.  When a tween finishes, it is removed\n * from the collection.\n *\n * @param {Number} [time=getTimestamp()] The time in seconds.  By default tweens are synced to the system clock.\n */\nTweenCollection.prototype.update = function (time) {\n  var tweens = this._tweens;\n\n  var i = 0;\n  time = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(time)\n    ? time / _Core_TimeConstants_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SECONDS_PER_MILLISECOND */ .Z.SECONDS_PER_MILLISECOND\n    : (0,_Core_getTimestamp_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)();\n  while (i < tweens.length) {\n    var tween = tweens[i];\n    var tweenjs = tween.tweenjs;\n\n    if (tween.needsStart) {\n      tween.needsStart = false;\n      tweenjs.start(time);\n    } else if (tweenjs.update(time)) {\n      i++;\n    } else {\n      tweenjs.stop();\n      tweens.splice(i, 1);\n    }\n  }\n};\n\n/**\n * A function that will execute when a tween completes.\n * @callback TweenCollection.TweenCompleteCallback\n */\n\n/**\n * A function that will execute when a tween updates.\n * @callback TweenCollection.TweenUpdateCallback\n */\n\n/**\n * A function that will execute when a tween is cancelled.\n * @callback TweenCollection.TweenCancelledCallback\n */\n/* harmony default export */ __webpack_exports__["Z"] = (TweenCollection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///74476\n')},24855:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51688);\n/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8182);\n/* harmony import */ var _Core_Credit_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(52975);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Event_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(14459);\n/* harmony import */ var _Core_GeographicProjection_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(39756);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(96190);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(68985);\n/* harmony import */ var _Core_WebMercatorTilingScheme_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(42423);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(13222);\n/* harmony import */ var _ImageryProvider_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(95451);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar templateRegex = /{[^}]+}/g;\n\nvar tags = {\n  x: xTag,\n  y: yTag,\n  z: zTag,\n  s: sTag,\n  reverseX: reverseXTag,\n  reverseY: reverseYTag,\n  reverseZ: reverseZTag,\n  westDegrees: westDegreesTag,\n  southDegrees: southDegreesTag,\n  eastDegrees: eastDegreesTag,\n  northDegrees: northDegreesTag,\n  westProjected: westProjectedTag,\n  southProjected: southProjectedTag,\n  eastProjected: eastProjectedTag,\n  northProjected: northProjectedTag,\n  width: widthTag,\n  height: heightTag,\n};\n\nvar pickFeaturesTags = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(tags, {\n  i: iTag,\n  j: jTag,\n  reverseI: reverseITag,\n  reverseJ: reverseJTag,\n  longitudeDegrees: longitudeDegreesTag,\n  latitudeDegrees: latitudeDegreesTag,\n  longitudeProjected: longitudeProjectedTag,\n  latitudeProjected: latitudeProjectedTag,\n  format: formatTag,\n});\n\n/**\n * @typedef {Object} UrlTemplateImageryProvider.ConstructorOptions\n *\n * Initialization options for the UrlTemplateImageryProvider constructor\n *\n * @property {Promise.<Object>|Object} [options] Object with the following properties:\n * @property {Resource|String} url  The URL template to use to request tiles.  It has the following keywords:\n * <ul>\n *     <li><code>{z}</code>: The level of the tile in the tiling scheme.  Level zero is the root of the quadtree pyramid.</li>\n *     <li><code>{x}</code>: The tile X coordinate in the tiling scheme, where 0 is the Westernmost tile.</li>\n *     <li><code>{y}</code>: The tile Y coordinate in the tiling scheme, where 0 is the Northernmost tile.</li>\n *     <li><code>{s}</code>: One of the available subdomains, used to overcome browser limits on the number of simultaneous requests per host.</li>\n *     <li><code>{reverseX}</code>: The tile X coordinate in the tiling scheme, where 0 is the Easternmost tile.</li>\n *     <li><code>{reverseY}</code>: The tile Y coordinate in the tiling scheme, where 0 is the Southernmost tile.</li>\n *     <li><code>{reverseZ}</code>: The level of the tile in the tiling scheme, where level zero is the maximum level of the quadtree pyramid.  In order to use reverseZ, maximumLevel must be defined.</li>\n *     <li><code>{westDegrees}</code>: The Western edge of the tile in geodetic degrees.</li>\n *     <li><code>{southDegrees}</code>: The Southern edge of the tile in geodetic degrees.</li>\n *     <li><code>{eastDegrees}</code>: The Eastern edge of the tile in geodetic degrees.</li>\n *     <li><code>{northDegrees}</code>: The Northern edge of the tile in geodetic degrees.</li>\n *     <li><code>{westProjected}</code>: The Western edge of the tile in projected coordinates of the tiling scheme.</li>\n *     <li><code>{southProjected}</code>: The Southern edge of the tile in projected coordinates of the tiling scheme.</li>\n *     <li><code>{eastProjected}</code>: The Eastern edge of the tile in projected coordinates of the tiling scheme.</li>\n *     <li><code>{northProjected}</code>: The Northern edge of the tile in projected coordinates of the tiling scheme.</li>\n *     <li><code>{width}</code>: The width of each tile in pixels.</li>\n *     <li><code>{height}</code>: The height of each tile in pixels.</li>\n * </ul>\n * @property {Resource|String} [pickFeaturesUrl] The URL template to use to pick features.  If this property is not specified,\n *                 {@link UrlTemplateImageryProvider#pickFeatures} will immediately returned undefined, indicating no\n *                 features picked.  The URL template supports all of the keywords supported by the <code>url</code>\n *                 parameter, plus the following:\n * <ul>\n *     <li><code>{i}</code>: The pixel column (horizontal coordinate) of the picked position, where the Westernmost pixel is 0.</li>\n *     <li><code>{j}</code>: The pixel row (vertical coordinate) of the picked position, where the Northernmost pixel is 0.</li>\n *     <li><code>{reverseI}</code>: The pixel column (horizontal coordinate) of the picked position, where the Easternmost pixel is 0.</li>\n *     <li><code>{reverseJ}</code>: The pixel row (vertical coordinate) of the picked position, where the Southernmost pixel is 0.</li>\n *     <li><code>{longitudeDegrees}</code>: The longitude of the picked position in degrees.</li>\n *     <li><code>{latitudeDegrees}</code>: The latitude of the picked position in degrees.</li>\n *     <li><code>{longitudeProjected}</code>: The longitude of the picked position in the projected coordinates of the tiling scheme.</li>\n *     <li><code>{latitudeProjected}</code>: The latitude of the picked position in the projected coordinates of the tiling scheme.</li>\n *     <li><code>{format}</code>: The format in which to get feature information, as specified in the {@link GetFeatureInfoFormat}.</li>\n * </ul>\n * @property {Object} [urlSchemeZeroPadding] Gets the URL scheme zero padding for each tile coordinate. The format is \'000\' where\n * each coordinate will be padded on the left with zeros to match the width of the passed string of zeros. e.g. Setting:\n * urlSchemeZeroPadding : { \'{x}\' : \'0000\'}\n * will cause an \'x\' value of 12 to return the string \'0012\' for {x} in the generated URL.\n * It the passed object has the following keywords:\n * <ul>\n *  <li> <code>{z}</code>: The zero padding for the level of the tile in the tiling scheme.</li>\n *  <li> <code>{x}</code>: The zero padding for the tile X coordinate in the tiling scheme.</li>\n *  <li> <code>{y}</code>: The zero padding for the the tile Y coordinate in the tiling scheme.</li>\n *  <li> <code>{reverseX}</code>: The zero padding for the tile reverseX coordinate in the tiling scheme.</li>\n *  <li> <code>{reverseY}</code>: The zero padding for the tile reverseY coordinate in the tiling scheme.</li>\n *  <li> <code>{reverseZ}</code>: The zero padding for the reverseZ coordinate of the tile in the tiling scheme.</li>\n * </ul>\n * @property {String|String[]} [subdomains=\'abc\'] The subdomains to use for the <code>{s}</code> placeholder in the URL template.\n *                          If this parameter is a single string, each character in the string is a subdomain.  If it is\n *                          an array, each element in the array is a subdomain.\n * @property {Credit|String} [credit=\'\'] A credit for the data source, which is displayed on the canvas.\n * @property {Number} [minimumLevel=0] The minimum level-of-detail supported by the imagery provider.  Take care when specifying\n *                 this that the number of tiles at the minimum level is small, such as four or less.  A larger number is likely\n *                 to result in rendering problems.\n * @property {Number} [maximumLevel] The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n * @property {Rectangle} [rectangle=Rectangle.MAX_VALUE] The rectangle, in radians, covered by the image.\n * @property {TilingScheme} [tilingScheme=WebMercatorTilingScheme] The tiling scheme specifying how the ellipsoidal\n * surface is broken into tiles.  If this parameter is not provided, a {@link WebMercatorTilingScheme}\n * is used.\n * @property {Ellipsoid} [ellipsoid] The ellipsoid.  If the tilingScheme is specified,\n *                    this parameter is ignored and the tiling scheme\'s ellipsoid is used instead. If neither\n *                    parameter is specified, the WGS84 ellipsoid is used.\n * @property {Number} [tileWidth=256] Pixel width of image tiles.\n * @property {Number} [tileHeight=256] Pixel height of image tiles.\n * @property {Boolean} [hasAlphaChannel=true] true if the images provided by this imagery provider\n *                  include an alpha channel; otherwise, false.  If this property is false, an alpha channel, if\n *                  present, will be ignored.  If this property is true, any images without an alpha channel will\n *                  be treated as if their alpha is 1.0 everywhere.  When this property is false, memory usage\n *                  and texture upload time are potentially reduced.\n * @property {GetFeatureInfoFormat[]} [getFeatureInfoFormats] The formats in which to get feature information at a\n *                                 specific location when {@link UrlTemplateImageryProvider#pickFeatures} is invoked.  If this\n *                                 parameter is not specified, feature picking is disabled.\n * @property {Boolean} [enablePickFeatures=true] If true, {@link UrlTemplateImageryProvider#pickFeatures} will\n *        request the <code>pickFeaturesUrl</code> and attempt to interpret the features included in the response.  If false,\n *        {@link UrlTemplateImageryProvider#pickFeatures} will immediately return undefined (indicating no pickable\n *        features) without communicating with the server.  Set this property to false if you know your data\n *        source does not support picking features or if you don\'t want this provider\'s features to be pickable. Note\n *        that this can be dynamically overridden by modifying the {@link UriTemplateImageryProvider#enablePickFeatures}\n *        property.\n * @property {Object} [customTags] Allow to replace custom keywords in the URL template. The object must have strings as keys and functions as values.\n */\n\n/**\n * Provides imagery by requesting tiles using a specified URL template.\n *\n * @alias UrlTemplateImageryProvider\n * @constructor\n *\n * @param {UrlTemplateImageryProvider.ConstructorOptions} options Object describing initialization options\n *\n * @example\n * // Access Natural Earth II imagery, which uses a TMS tiling scheme and Geographic (EPSG:4326) project\n * var tms = new Cesium.UrlTemplateImageryProvider({\n *     url : Cesium.buildModuleUrl(\'Assets/Textures/NaturalEarthII\') + \'/{z}/{x}/{reverseY}.jpg\',\n *     credit : \'© Analytical Graphics, Inc.\',\n *     tilingScheme : new Cesium.GeographicTilingScheme(),\n *     maximumLevel : 5\n * });\n * // Access the CartoDB Positron basemap, which uses an OpenStreetMap-like tiling scheme.\n * var positron = new Cesium.UrlTemplateImageryProvider({\n *     url : \'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\',\n *     credit : \'Map tiles by CartoDB, under CC BY 3.0. Data by OpenStreetMap, under ODbL.\'\n * });\n * // Access a Web Map Service (WMS) server.\n * var wms = new Cesium.UrlTemplateImageryProvider({\n *    url : \'https://programs.communications.gov.au/geoserver/ows?tiled=true&\' +\n *          \'transparent=true&format=image%2Fpng&exceptions=application%2Fvnd.ogc.se_xml&\' +\n *          \'styles=&service=WMS&version=1.1.1&request=GetMap&\' +\n *          \'layers=public%3AMyBroadband_Availability&srs=EPSG%3A3857&\' +\n *          \'bbox={westProjected}%2C{southProjected}%2C{eastProjected}%2C{northProjected}&\' +\n *          \'width=256&height=256\',\n *    rectangle : Cesium.Rectangle.fromDegrees(96.799393, -43.598214999057824, 153.63925700000001, -9.2159219997013)\n * });\n * // Using custom tags in your template url.\n * var custom = new Cesium.UrlTemplateImageryProvider({\n *    url : \'https://yoururl/{Time}/{z}/{y}/{x}.png\',\n *    customTags : {\n *        Time: function(imageryProvider, x, y, level) {\n *            return \'20171231\'\n *        }\n *    }\n * });\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see OpenStreetMapImageryProvider\n * @see SingleTileImageryProvider\n * @see TileMapServiceImageryProvider\n * @see WebMapServiceImageryProvider\n * @see WebMapTileServiceImageryProvider\n */\nfunction UrlTemplateImageryProvider(options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("options is required.");\n  }\n  if (!_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].isPromise */ .Z.isPromise(options) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options.url)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("options is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._errorEvent = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\n\n  this._resource = undefined;\n  this._urlSchemeZeroPadding = undefined;\n  this._pickFeaturesResource = undefined;\n  this._tileWidth = undefined;\n  this._tileHeight = undefined;\n  this._maximumLevel = undefined;\n  this._minimumLevel = undefined;\n  this._tilingScheme = undefined;\n  this._rectangle = undefined;\n  this._tileDiscardPolicy = undefined;\n  this._credit = undefined;\n  this._hasAlphaChannel = undefined;\n  this._readyPromise = undefined;\n  this._tags = undefined;\n  this._pickFeaturesTags = undefined;\n\n  /**\n   * The default alpha blending value of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the night side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultNightAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the day side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultDayAlpha = undefined;\n\n  /**\n   * The default brightness of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0\n   * makes the imagery darker while greater than 1.0 makes it brighter.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultBrightness = undefined;\n\n  /**\n   * The default contrast of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0 reduces\n   * the contrast while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultContrast = undefined;\n\n  /**\n   * The default hue of this provider in radians. 0.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultHue = undefined;\n\n  /**\n   * The default saturation of this provider. 1.0 uses the unmodified imagery color. Less than 1.0 reduces the\n   * saturation while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultSaturation = undefined;\n\n  /**\n   * The default gamma correction to apply to this provider.  1.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultGamma = undefined;\n\n  /**\n   * The default texture minification filter to apply to this provider.\n   *\n   * @type {TextureMinificationFilter}\n   * @default undefined\n   */\n  this.defaultMinificationFilter = undefined;\n\n  /**\n   * The default texture magnification filter to apply to this provider.\n   *\n   * @type {TextureMagnificationFilter}\n   * @default undefined\n   */\n  this.defaultMagnificationFilter = undefined;\n\n  /**\n   * Gets or sets a value indicating whether feature picking is enabled.  If true, {@link UrlTemplateImageryProvider#pickFeatures} will\n   * request the <code>options.pickFeaturesUrl</code> and attempt to interpret the features included in the response.  If false,\n   * {@link UrlTemplateImageryProvider#pickFeatures} will immediately return undefined (indicating no pickable\n   * features) without communicating with the server.  Set this property to false if you know your data\n   * source does not support picking features or if you don\'t want this provider\'s features to be pickable.\n   * @type {Boolean}\n   * @default true\n   */\n  this.enablePickFeatures = true;\n\n  this.reinitialize(options);\n}\n\nObject.defineProperties(UrlTemplateImageryProvider.prototype, {\n  /**\n   * Gets the URL template to use to request tiles.  It has the following keywords:\n   * <ul>\n   *  <li> <code>{z}</code>: The level of the tile in the tiling scheme.  Level zero is the root of the quadtree pyramid.</li>\n   *  <li> <code>{x}</code>: The tile X coordinate in the tiling scheme, where 0 is the Westernmost tile.</li>\n   *  <li> <code>{y}</code>: The tile Y coordinate in the tiling scheme, where 0 is the Northernmost tile.</li>\n   *  <li> <code>{s}</code>: One of the available subdomains, used to overcome browser limits on the number of simultaneous requests per host.</li>\n   *  <li> <code>{reverseX}</code>: The tile X coordinate in the tiling scheme, where 0 is the Easternmost tile.</li>\n   *  <li> <code>{reverseY}</code>: The tile Y coordinate in the tiling scheme, where 0 is the Southernmost tile.</li>\n   *  <li> <code>{reverseZ}</code>: The level of the tile in the tiling scheme, where level zero is the maximum level of the quadtree pyramid.  In order to use reverseZ, maximumLevel must be defined.</li>\n   *  <li> <code>{westDegrees}</code>: The Western edge of the tile in geodetic degrees.</li>\n   *  <li> <code>{southDegrees}</code>: The Southern edge of the tile in geodetic degrees.</li>\n   *  <li> <code>{eastDegrees}</code>: The Eastern edge of the tile in geodetic degrees.</li>\n   *  <li> <code>{northDegrees}</code>: The Northern edge of the tile in geodetic degrees.</li>\n   *  <li> <code>{westProjected}</code>: The Western edge of the tile in projected coordinates of the tiling scheme.</li>\n   *  <li> <code>{southProjected}</code>: The Southern edge of the tile in projected coordinates of the tiling scheme.</li>\n   *  <li> <code>{eastProjected}</code>: The Eastern edge of the tile in projected coordinates of the tiling scheme.</li>\n   *  <li> <code>{northProjected}</code>: The Northern edge of the tile in projected coordinates of the tiling scheme.</li>\n   *  <li> <code>{width}</code>: The width of each tile in pixels.</li>\n   *  <li> <code>{height}</code>: The height of each tile in pixels.</li>\n   * </ul>\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {String}\n   * @readonly\n   */\n  url: {\n    get: function () {\n      return this._resource.url;\n    },\n  },\n\n  /**\n   * Gets the URL scheme zero padding for each tile coordinate. The format is \'000\' where each coordinate will be padded on\n   * the left with zeros to match the width of the passed string of zeros. e.g. Setting:\n   * urlSchemeZeroPadding : { \'{x}\' : \'0000\'}\n   * will cause an \'x\' value of 12 to return the string \'0012\' for {x} in the generated URL.\n   * It has the following keywords:\n   * <ul>\n   *  <li> <code>{z}</code>: The zero padding for the level of the tile in the tiling scheme.</li>\n   *  <li> <code>{x}</code>: The zero padding for the tile X coordinate in the tiling scheme.</li>\n   *  <li> <code>{y}</code>: The zero padding for the the tile Y coordinate in the tiling scheme.</li>\n   *  <li> <code>{reverseX}</code>: The zero padding for the tile reverseX coordinate in the tiling scheme.</li>\n   *  <li> <code>{reverseY}</code>: The zero padding for the tile reverseY coordinate in the tiling scheme.</li>\n   *  <li> <code>{reverseZ}</code>: The zero padding for the reverseZ coordinate of the tile in the tiling scheme.</li>\n   * </ul>\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Object}\n   * @readonly\n   */\n  urlSchemeZeroPadding: {\n    get: function () {\n      return this._urlSchemeZeroPadding;\n    },\n  },\n\n  /**\n   * Gets the URL template to use to use to pick features.  If this property is not specified,\n   * {@link UrlTemplateImageryProvider#pickFeatures} will immediately return undefined, indicating no\n   * features picked.  The URL template supports all of the keywords supported by the\n   * {@link UrlTemplateImageryProvider#url} property, plus the following:\n   * <ul>\n   *     <li><code>{i}</code>: The pixel column (horizontal coordinate) of the picked position, where the Westernmost pixel is 0.</li>\n   *     <li><code>{j}</code>: The pixel row (vertical coordinate) of the picked position, where the Northernmost pixel is 0.</li>\n   *     <li><code>{reverseI}</code>: The pixel column (horizontal coordinate) of the picked position, where the Easternmost pixel is 0.</li>\n   *     <li><code>{reverseJ}</code>: The pixel row (vertical coordinate) of the picked position, where the Southernmost pixel is 0.</li>\n   *     <li><code>{longitudeDegrees}</code>: The longitude of the picked position in degrees.</li>\n   *     <li><code>{latitudeDegrees}</code>: The latitude of the picked position in degrees.</li>\n   *     <li><code>{longitudeProjected}</code>: The longitude of the picked position in the projected coordinates of the tiling scheme.</li>\n   *     <li><code>{latitudeProjected}</code>: The latitude of the picked position in the projected coordinates of the tiling scheme.</li>\n   *     <li><code>{format}</code>: The format in which to get feature information, as specified in the {@link GetFeatureInfoFormat}.</li>\n   * </ul>\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {String}\n   * @readonly\n   */\n  pickFeaturesUrl: {\n    get: function () {\n      return this._pickFeaturesResource.url;\n    },\n  },\n\n  /**\n   * Gets the proxy used by this provider.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Proxy}\n   * @readonly\n   * @default undefined\n   */\n  proxy: {\n    get: function () {\n      return this._resource.proxy;\n    },\n  },\n\n  /**\n   * Gets the width of each tile, in pixels. This function should\n   * not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   * @default 256\n   */\n  tileWidth: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "tileWidth must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._tileWidth;\n    },\n  },\n\n  /**\n   * Gets the height of each tile, in pixels.  This function should\n   * not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   * @default 256\n   */\n  tileHeight: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "tileHeight must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._tileHeight;\n    },\n  },\n\n  /**\n   * Gets the maximum level-of-detail that can be requested, or undefined if there is no limit.\n   * This function should not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Number|undefined}\n   * @readonly\n   * @default undefined\n   */\n  maximumLevel: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "maximumLevel must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._maximumLevel;\n    },\n  },\n\n  /**\n   * Gets the minimum level-of-detail that can be requested.  This function should\n   * not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   * @default 0\n   */\n  minimumLevel: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "minimumLevel must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._minimumLevel;\n    },\n  },\n\n  /**\n   * Gets the tiling scheme used by this provider.  This function should\n   * not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {TilingScheme}\n   * @readonly\n   * @default new WebMercatorTilingScheme()\n   */\n  tilingScheme: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "tilingScheme must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._tilingScheme;\n    },\n  },\n\n  /**\n   * Gets the rectangle, in radians, of the imagery provided by this instance.  This function should\n   * not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Rectangle}\n   * @readonly\n   * @default tilingScheme.rectangle\n   */\n  rectangle: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "rectangle must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._rectangle;\n    },\n  },\n\n  /**\n   * Gets the tile discard policy.  If not undefined, the discard policy is responsible\n   * for filtering out "missing" tiles via its shouldDiscardImage function.  If this function\n   * returns undefined, no tiles are filtered.  This function should\n   * not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {TileDiscardPolicy}\n   * @readonly\n   * @default undefined\n   */\n  tileDiscardPolicy: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "tileDiscardPolicy must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._tileDiscardPolicy;\n    },\n  },\n\n  /**\n   * Gets an event that is raised when the imagery provider encounters an asynchronous error.  By subscribing\n   * to the event, you will be notified of the error and can potentially recover from it.  Event listeners\n   * are passed an instance of {@link TileProviderError}.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Event}\n   * @readonly\n   */\n  errorEvent: {\n    get: function () {\n      return this._errorEvent;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the provider is ready for use.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(this._resource);\n    },\n  },\n\n  /**\n   * Gets a promise that resolves to true when the provider is ready for use.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Promise.<Boolean>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise;\n    },\n  },\n\n  /**\n   * Gets the credit to display when this imagery provider is active.  Typically this is used to credit\n   * the source of the imagery.  This function should not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Credit}\n   * @readonly\n   * @default undefined\n   */\n  credit: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "credit must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._credit;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the images provided by this imagery provider\n   * include an alpha channel.  If this property is false, an alpha channel, if present, will\n   * be ignored.  If this property is true, any images without an alpha channel will be treated\n   * as if their alpha is 1.0 everywhere.  When this property is false, memory usage\n   * and texture upload time are reduced.  This function should\n   * not be called before {@link ImageryProvider#ready} returns true.\n   * @memberof UrlTemplateImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   * @default true\n   */\n  hasAlphaChannel: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this.ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "hasAlphaChannel must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      return this._hasAlphaChannel;\n    },\n  },\n});\n\n/**\n * Reinitializes this instance.  Reinitializing an instance already in use is supported, but it is not\n * recommended because existing tiles provided by the imagery provider will not be updated.\n *\n * @param {Promise.<Object>|Object} options Any of the options that may be passed to the {@link UrlTemplateImageryProvider} constructor.\n */\nUrlTemplateImageryProvider.prototype.reinitialize = function (options) {\n  var that = this;\n  that._readyPromise = (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(options).then(function (properties) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(properties)) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("options is required.");\n    }\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(properties.url)) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("options.url is required.");\n    }\n    //>>includeEnd(\'debug\');\n\n    var customTags = properties.customTags;\n    var allTags = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(tags, customTags);\n    var allPickFeaturesTags = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(pickFeaturesTags, customTags);\n    var resource = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].createIfNeeded */ .Z.createIfNeeded(properties.url);\n    var pickFeaturesResource = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].createIfNeeded */ .Z.createIfNeeded(\n      properties.pickFeaturesUrl\n    );\n\n    that.enablePickFeatures = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n      properties.enablePickFeatures,\n      that.enablePickFeatures\n    );\n    that._urlSchemeZeroPadding = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n      properties.urlSchemeZeroPadding,\n      that.urlSchemeZeroPadding\n    );\n    that._tileDiscardPolicy = properties.tileDiscardPolicy;\n    that._getFeatureInfoFormats = properties.getFeatureInfoFormats;\n\n    that._subdomains = properties.subdomains;\n    if (Array.isArray(that._subdomains)) {\n      that._subdomains = that._subdomains.slice();\n    } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(that._subdomains) && that._subdomains.length > 0) {\n      that._subdomains = that._subdomains.split("");\n    } else {\n      that._subdomains = ["a", "b", "c"];\n    }\n\n    that._tileWidth = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(properties.tileWidth, 256);\n    that._tileHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(properties.tileHeight, 256);\n    that._minimumLevel = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(properties.minimumLevel, 0);\n    that._maximumLevel = properties.maximumLevel;\n    that._tilingScheme = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n      properties.tilingScheme,\n      new _Core_WebMercatorTilingScheme_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({ ellipsoid: properties.ellipsoid })\n    );\n    that._rectangle = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n      properties.rectangle,\n      that._tilingScheme.rectangle\n    );\n    that._rectangle = _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].intersection */ .Z.intersection(\n      that._rectangle,\n      that._tilingScheme.rectangle\n    );\n    that._hasAlphaChannel = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(properties.hasAlphaChannel, true);\n\n    var credit = properties.credit;\n    if (typeof credit === "string") {\n      credit = new _Core_Credit_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(credit);\n    }\n    that._credit = credit;\n\n    that._resource = resource;\n    that._tags = allTags;\n    that._pickFeaturesResource = pickFeaturesResource;\n    that._pickFeaturesTags = allPickFeaturesTags;\n\n    return true;\n  });\n};\n\n/**\n * Gets the credits to be displayed when a given tile is displayed.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level;\n * @returns {Credit[]} The credits to be displayed when the tile is displayed.\n *\n * @exception {DeveloperError} <code>getTileCredits</code> must not be called before the imagery provider is ready.\n */\nUrlTemplateImageryProvider.prototype.getTileCredits = function (x, y, level) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!this.ready) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "getTileCredits must not be called before the imagery provider is ready."\n    );\n  }\n  //>>includeEnd(\'debug\');\n  return undefined;\n};\n\n/**\n * Requests the image for a given tile.  This function should\n * not be called before {@link UrlTemplateImageryProvider#ready} returns true.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Request} [request] The request object. Intended for internal use only.\n * @returns {Promise.<HTMLImageElement|HTMLCanvasElement>|undefined} A promise for the image that will resolve when the image is available, or\n *          undefined if there are too many active requests to the server, and the request\n *          should be retried later.  The resolved image may be either an\n *          Image or a Canvas DOM object.\n */\nUrlTemplateImageryProvider.prototype.requestImage = function (\n  x,\n  y,\n  level,\n  request\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!this.ready) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "requestImage must not be called before the imagery provider is ready."\n    );\n  }\n  //>>includeEnd(\'debug\');\n  return _ImageryProvider_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].loadImage */ .Z.loadImage(\n    this,\n    buildImageResource(this, x, y, level, request)\n  );\n};\n\n/**\n * Asynchronously determines what features, if any, are located at a given longitude and latitude within\n * a tile.  This function should not be called before {@link ImageryProvider#ready} returns true.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Number} longitude The longitude at which to pick features.\n * @param {Number} latitude  The latitude at which to pick features.\n * @return {Promise.<ImageryLayerFeatureInfo[]>|undefined} A promise for the picked features that will resolve when the asynchronous\n *                   picking completes.  The resolved value is an array of {@link ImageryLayerFeatureInfo}\n *                   instances.  The array may be empty if no features are found at the given location.\n *                   It may also be undefined if picking is not supported.\n */\nUrlTemplateImageryProvider.prototype.pickFeatures = function (\n  x,\n  y,\n  level,\n  longitude,\n  latitude\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!this.ready) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "pickFeatures must not be called before the imagery provider is ready."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  if (\n    !this.enablePickFeatures ||\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(this._pickFeaturesResource) ||\n    this._getFeatureInfoFormats.length === 0\n  ) {\n    return undefined;\n  }\n\n  var formatIndex = 0;\n\n  var that = this;\n\n  function handleResponse(format, data) {\n    return format.callback(data);\n  }\n\n  function doRequest() {\n    if (formatIndex >= that._getFeatureInfoFormats.length) {\n      // No valid formats, so no features picked.\n      return (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)([]);\n    }\n\n    var format = that._getFeatureInfoFormats[formatIndex];\n    var resource = buildPickFeaturesResource(\n      that,\n      x,\n      y,\n      level,\n      longitude,\n      latitude,\n      format.format\n    );\n\n    ++formatIndex;\n\n    if (format.type === "json") {\n      return resource.fetchJson().then(format.callback).otherwise(doRequest);\n    } else if (format.type === "xml") {\n      return resource.fetchXML().then(format.callback).otherwise(doRequest);\n    } else if (format.type === "text" || format.type === "html") {\n      return resource.fetchText().then(format.callback).otherwise(doRequest);\n    }\n    return resource\n      .fetch({\n        responseType: format.format,\n      })\n      .then(handleResponse.bind(undefined, format))\n      .otherwise(doRequest);\n  }\n\n  return doRequest();\n};\n\nvar degreesScratchComputed = false;\nvar degreesScratch = new _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\nvar projectedScratchComputed = false;\nvar projectedScratch = new _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\nfunction buildImageResource(imageryProvider, x, y, level, request) {\n  degreesScratchComputed = false;\n  projectedScratchComputed = false;\n\n  var resource = imageryProvider._resource;\n  var url = resource.getUrlComponent(true);\n  var allTags = imageryProvider._tags;\n  var templateValues = {};\n\n  var match = url.match(templateRegex);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(match)) {\n    match.forEach(function (tag) {\n      var key = tag.substring(1, tag.length - 1); //strip {}\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(allTags[key])) {\n        templateValues[key] = allTags[key](imageryProvider, x, y, level);\n      }\n    });\n  }\n\n  return resource.getDerivedResource({\n    request: request,\n    templateValues: templateValues,\n  });\n}\n\nvar ijScratchComputed = false;\nvar ijScratch = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar longitudeLatitudeProjectedScratchComputed = false;\n\nfunction buildPickFeaturesResource(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  format\n) {\n  degreesScratchComputed = false;\n  projectedScratchComputed = false;\n  ijScratchComputed = false;\n  longitudeLatitudeProjectedScratchComputed = false;\n\n  var resource = imageryProvider._pickFeaturesResource;\n  var url = resource.getUrlComponent(true);\n  var allTags = imageryProvider._pickFeaturesTags;\n  var templateValues = {};\n  var match = url.match(templateRegex);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(match)) {\n    match.forEach(function (tag) {\n      var key = tag.substring(1, tag.length - 1); //strip {}\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(allTags[key])) {\n        templateValues[key] = allTags[key](\n          imageryProvider,\n          x,\n          y,\n          level,\n          longitude,\n          latitude,\n          format\n        );\n      }\n    });\n  }\n\n  return resource.getDerivedResource({\n    templateValues: templateValues,\n  });\n}\n\nfunction padWithZerosIfNecessary(imageryProvider, key, value) {\n  if (\n    imageryProvider &&\n    imageryProvider.urlSchemeZeroPadding &&\n    imageryProvider.urlSchemeZeroPadding.hasOwnProperty(key)\n  ) {\n    var paddingTemplate = imageryProvider.urlSchemeZeroPadding[key];\n    if (typeof paddingTemplate === "string") {\n      var paddingTemplateWidth = paddingTemplate.length;\n      if (paddingTemplateWidth > 1) {\n        value =\n          value.length >= paddingTemplateWidth\n            ? value\n            : new Array(\n                paddingTemplateWidth - value.toString().length + 1\n              ).join("0") + value;\n      }\n    }\n  }\n  return value;\n}\n\nfunction xTag(imageryProvider, x, y, level) {\n  return padWithZerosIfNecessary(imageryProvider, "{x}", x);\n}\n\nfunction reverseXTag(imageryProvider, x, y, level) {\n  var reverseX =\n    imageryProvider.tilingScheme.getNumberOfXTilesAtLevel(level) - x - 1;\n  return padWithZerosIfNecessary(imageryProvider, "{reverseX}", reverseX);\n}\n\nfunction yTag(imageryProvider, x, y, level) {\n  return padWithZerosIfNecessary(imageryProvider, "{y}", y);\n}\n\nfunction reverseYTag(imageryProvider, x, y, level) {\n  var reverseY =\n    imageryProvider.tilingScheme.getNumberOfYTilesAtLevel(level) - y - 1;\n  return padWithZerosIfNecessary(imageryProvider, "{reverseY}", reverseY);\n}\n\nfunction reverseZTag(imageryProvider, x, y, level) {\n  var maximumLevel = imageryProvider.maximumLevel;\n  var reverseZ =\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(maximumLevel) && level < maximumLevel\n      ? maximumLevel - level - 1\n      : level;\n  return padWithZerosIfNecessary(imageryProvider, "{reverseZ}", reverseZ);\n}\n\nfunction zTag(imageryProvider, x, y, level) {\n  return padWithZerosIfNecessary(imageryProvider, "{z}", level);\n}\n\nfunction sTag(imageryProvider, x, y, level) {\n  var index = (x + y + level) % imageryProvider._subdomains.length;\n  return imageryProvider._subdomains[index];\n}\n\nfunction computeDegrees(imageryProvider, x, y, level) {\n  if (degreesScratchComputed) {\n    return;\n  }\n\n  imageryProvider.tilingScheme.tileXYToRectangle(x, y, level, degreesScratch);\n  degreesScratch.west = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toDegrees */ .Z.toDegrees(degreesScratch.west);\n  degreesScratch.south = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toDegrees */ .Z.toDegrees(degreesScratch.south);\n  degreesScratch.east = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toDegrees */ .Z.toDegrees(degreesScratch.east);\n  degreesScratch.north = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toDegrees */ .Z.toDegrees(degreesScratch.north);\n\n  degreesScratchComputed = true;\n}\n\nfunction westDegreesTag(imageryProvider, x, y, level) {\n  computeDegrees(imageryProvider, x, y, level);\n  return degreesScratch.west;\n}\n\nfunction southDegreesTag(imageryProvider, x, y, level) {\n  computeDegrees(imageryProvider, x, y, level);\n  return degreesScratch.south;\n}\n\nfunction eastDegreesTag(imageryProvider, x, y, level) {\n  computeDegrees(imageryProvider, x, y, level);\n  return degreesScratch.east;\n}\n\nfunction northDegreesTag(imageryProvider, x, y, level) {\n  computeDegrees(imageryProvider, x, y, level);\n  return degreesScratch.north;\n}\n\nfunction computeProjected(imageryProvider, x, y, level) {\n  if (projectedScratchComputed) {\n    return;\n  }\n\n  imageryProvider.tilingScheme.tileXYToNativeRectangle(\n    x,\n    y,\n    level,\n    projectedScratch\n  );\n\n  projectedScratchComputed = true;\n}\n\nfunction westProjectedTag(imageryProvider, x, y, level) {\n  computeProjected(imageryProvider, x, y, level);\n  return projectedScratch.west;\n}\n\nfunction southProjectedTag(imageryProvider, x, y, level) {\n  computeProjected(imageryProvider, x, y, level);\n  return projectedScratch.south;\n}\n\nfunction eastProjectedTag(imageryProvider, x, y, level) {\n  computeProjected(imageryProvider, x, y, level);\n  return projectedScratch.east;\n}\n\nfunction northProjectedTag(imageryProvider, x, y, level) {\n  computeProjected(imageryProvider, x, y, level);\n  return projectedScratch.north;\n}\n\nfunction widthTag(imageryProvider, x, y, level) {\n  return imageryProvider.tileWidth;\n}\n\nfunction heightTag(imageryProvider, x, y, level) {\n  return imageryProvider.tileHeight;\n}\n\nfunction iTag(imageryProvider, x, y, level, longitude, latitude, format) {\n  computeIJ(imageryProvider, x, y, level, longitude, latitude);\n  return ijScratch.x;\n}\n\nfunction jTag(imageryProvider, x, y, level, longitude, latitude, format) {\n  computeIJ(imageryProvider, x, y, level, longitude, latitude);\n  return ijScratch.y;\n}\n\nfunction reverseITag(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  format\n) {\n  computeIJ(imageryProvider, x, y, level, longitude, latitude);\n  return imageryProvider.tileWidth - ijScratch.x - 1;\n}\n\nfunction reverseJTag(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  format\n) {\n  computeIJ(imageryProvider, x, y, level, longitude, latitude);\n  return imageryProvider.tileHeight - ijScratch.y - 1;\n}\n\nvar rectangleScratch = new _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\nvar longitudeLatitudeProjectedScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nfunction computeIJ(imageryProvider, x, y, level, longitude, latitude, format) {\n  if (ijScratchComputed) {\n    return;\n  }\n\n  computeLongitudeLatitudeProjected(\n    imageryProvider,\n    x,\n    y,\n    level,\n    longitude,\n    latitude\n  );\n  var projected = longitudeLatitudeProjectedScratch;\n\n  var rectangle = imageryProvider.tilingScheme.tileXYToNativeRectangle(\n    x,\n    y,\n    level,\n    rectangleScratch\n  );\n  ijScratch.x =\n    ((imageryProvider.tileWidth * (projected.x - rectangle.west)) /\n      rectangle.width) |\n    0;\n  ijScratch.y =\n    ((imageryProvider.tileHeight * (rectangle.north - projected.y)) /\n      rectangle.height) |\n    0;\n  ijScratchComputed = true;\n}\n\nfunction longitudeDegreesTag(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  format\n) {\n  return _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toDegrees */ .Z.toDegrees(longitude);\n}\n\nfunction latitudeDegreesTag(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  format\n) {\n  return _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toDegrees */ .Z.toDegrees(latitude);\n}\n\nfunction longitudeProjectedTag(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  format\n) {\n  computeLongitudeLatitudeProjected(\n    imageryProvider,\n    x,\n    y,\n    level,\n    longitude,\n    latitude\n  );\n  return longitudeLatitudeProjectedScratch.x;\n}\n\nfunction latitudeProjectedTag(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  format\n) {\n  computeLongitudeLatitudeProjected(\n    imageryProvider,\n    x,\n    y,\n    level,\n    longitude,\n    latitude\n  );\n  return longitudeLatitudeProjectedScratch.y;\n}\n\nvar cartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nfunction computeLongitudeLatitudeProjected(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  format\n) {\n  if (longitudeLatitudeProjectedScratchComputed) {\n    return;\n  }\n\n  if (imageryProvider.tilingScheme.projection instanceof _Core_GeographicProjection_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z) {\n    longitudeLatitudeProjectedScratch.x = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toDegrees */ .Z.toDegrees(longitude);\n    longitudeLatitudeProjectedScratch.y = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toDegrees */ .Z.toDegrees(latitude);\n  } else {\n    var cartographic = cartographicScratch;\n    cartographic.longitude = longitude;\n    cartographic.latitude = latitude;\n    imageryProvider.tilingScheme.projection.project(\n      cartographic,\n      longitudeLatitudeProjectedScratch\n    );\n  }\n\n  longitudeLatitudeProjectedScratchComputed = true;\n}\n\nfunction formatTag(imageryProvider, x, y, level, longitude, latitude, format) {\n  return format;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (UrlTemplateImageryProvider);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///24855\n')}}]);