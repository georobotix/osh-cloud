"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[2402],{84020:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _Core_clone_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83856);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59947);\n/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8182);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(82982);\n/* harmony import */ var _Core_deprecationWarning_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(11954);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(99417);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(9407);\n/* harmony import */ var _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(20521);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(53642);\n/* harmony import */ var _BatchTexture_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(31937);\n/* harmony import */ var _BatchTableHierarchy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(40384);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(13633);\n/* harmony import */ var _Cesium3DTileColorBlendMode_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(95401);\n/* harmony import */ var _CullFace_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(71593);\n/* harmony import */ var _getBinaryAccessor_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(17041);\n/* harmony import */ var _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(87233);\n/* harmony import */ var _StencilFunction_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(77053);\n/* harmony import */ var _StencilOperation_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(81255);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar DEFAULT_COLOR_VALUE = _BatchTexture_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].DEFAULT_COLOR_VALUE */ .Z.DEFAULT_COLOR_VALUE;\nvar DEFAULT_SHOW_VALUE = _BatchTexture_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].DEFAULT_SHOW_VALUE */ .Z.DEFAULT_SHOW_VALUE;\n\n/**\n * @private\n * @constructor\n */\nfunction Cesium3DTileBatchTable(\n  content,\n  featuresLength,\n  batchTableJson,\n  batchTableBinary,\n  colorChangedCallback\n) {\n  /**\n   * @readonly\n   */\n  this.featuresLength = featuresLength;\n\n  var extensions;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(batchTableJson)) {\n    extensions = batchTableJson.extensions;\n  }\n  this._extensions = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(extensions, {});\n\n  var properties = initializeProperties(batchTableJson);\n  this._properties = properties;\n\n  this._batchTableHierarchy = initializeHierarchy(\n    this,\n    batchTableJson,\n    batchTableBinary\n  );\n  this._batchTableBinaryProperties = getBinaryProperties(\n    featuresLength,\n    properties,\n    batchTableBinary\n  );\n\n  this._content = content;\n\n  this._batchTexture = new _BatchTexture_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z({\n    featuresLength: featuresLength,\n    colorChangedCallback: colorChangedCallback,\n    content: content,\n  });\n}\n\n// This can be overridden for testing purposes\nCesium3DTileBatchTable._deprecationWarning = _Core_deprecationWarning_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z;\n\nObject.defineProperties(Cesium3DTileBatchTable.prototype, {\n  memorySizeInBytes: {\n    get: function () {\n      return this._batchTexture.memorySizeInBytes;\n    },\n  },\n});\n\nfunction initializeProperties(jsonHeader) {\n  var properties = {};\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(jsonHeader)) {\n    return properties;\n  }\n\n  for (var propertyName in jsonHeader) {\n    if (\n      jsonHeader.hasOwnProperty(propertyName) &&\n      propertyName !== "HIERARCHY" && // Deprecated HIERARCHY property\n      propertyName !== "extensions" &&\n      propertyName !== "extras"\n    ) {\n      properties[propertyName] = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(jsonHeader[propertyName], true);\n    }\n  }\n\n  return properties;\n}\n\nfunction initializeHierarchy(batchTable, jsonHeader, binaryBody) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(jsonHeader)) {\n    return;\n  }\n\n  var hierarchy = batchTable._extensions["3DTILES_batch_table_hierarchy"];\n\n  var legacyHierarchy = jsonHeader.HIERARCHY;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(legacyHierarchy)) {\n    Cesium3DTileBatchTable._deprecationWarning(\n      "batchTableHierarchyExtension",\n      "The batch table HIERARCHY property has been moved to an extension. Use extensions.3DTILES_batch_table_hierarchy instead."\n    );\n    batchTable._extensions["3DTILES_batch_table_hierarchy"] = legacyHierarchy;\n    hierarchy = legacyHierarchy;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(hierarchy)) {\n    return;\n  }\n\n  return new _BatchTableHierarchy_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z({\n    extension: hierarchy,\n    binaryBody: binaryBody,\n  });\n}\n\nfunction getBinaryProperties(featuresLength, properties, binaryBody) {\n  var binaryProperties;\n  for (var name in properties) {\n    if (properties.hasOwnProperty(name)) {\n      var property = properties[name];\n      var byteOffset = property.byteOffset;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(byteOffset)) {\n        // This is a binary property\n        var componentType = property.componentType;\n        var type = property.type;\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(componentType)) {\n          throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z("componentType is required.");\n        }\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(type)) {\n          throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z("type is required.");\n        }\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(binaryBody)) {\n          throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n            "Property " + name + " requires a batch table binary."\n          );\n        }\n\n        var binaryAccessor = (0,_getBinaryAccessor_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(property);\n        var componentCount = binaryAccessor.componentsPerAttribute;\n        var classType = binaryAccessor.classType;\n        var typedArray = binaryAccessor.createArrayBufferView(\n          binaryBody.buffer,\n          binaryBody.byteOffset + byteOffset,\n          featuresLength\n        );\n\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(binaryProperties)) {\n          binaryProperties = {};\n        }\n\n        // Store any information needed to access the binary data, including the typed array,\n        // componentCount (e.g. a VEC4 would be 4), and the type used to pack and unpack (e.g. Cartesian4).\n        binaryProperties[name] = {\n          typedArray: typedArray,\n          componentCount: componentCount,\n          type: classType,\n        };\n      }\n    }\n  }\n  return binaryProperties;\n}\n\nCesium3DTileBatchTable.getBinaryProperties = function (\n  featuresLength,\n  batchTableJson,\n  batchTableBinary\n) {\n  return getBinaryProperties(featuresLength, batchTableJson, batchTableBinary);\n};\n\nCesium3DTileBatchTable.prototype.setShow = function (batchId, show) {\n  this._batchTexture.setShow(batchId, show);\n};\n\nCesium3DTileBatchTable.prototype.setAllShow = function (show) {\n  this._batchTexture.setAllShow(show);\n};\n\nCesium3DTileBatchTable.prototype.getShow = function (batchId) {\n  return this._batchTexture.getShow(batchId);\n};\n\nCesium3DTileBatchTable.prototype.setColor = function (batchId, color) {\n  this._batchTexture.setColor(batchId, color);\n};\n\nCesium3DTileBatchTable.prototype.setAllColor = function (color) {\n  this._batchTexture.setAllColor(color);\n};\n\nCesium3DTileBatchTable.prototype.getColor = function (batchId, result) {\n  return this._batchTexture.getColor(batchId, result);\n};\n\nCesium3DTileBatchTable.prototype.getPickColor = function (batchId) {\n  return this._batchTexture.getPickColor(batchId);\n};\n\nvar scratchColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nCesium3DTileBatchTable.prototype.applyStyle = function (style) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(style)) {\n    this.setAllColor(DEFAULT_COLOR_VALUE);\n    this.setAllShow(DEFAULT_SHOW_VALUE);\n    return;\n  }\n\n  var content = this._content;\n  var length = this.featuresLength;\n  for (var i = 0; i < length; ++i) {\n    var feature = content.getFeature(i);\n    var color = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(style.color)\n      ? (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n          style.color.evaluateColor(feature, scratchColor),\n          DEFAULT_COLOR_VALUE\n        )\n      : DEFAULT_COLOR_VALUE;\n    var show = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(style.show)\n      ? (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(style.show.evaluate(feature), DEFAULT_SHOW_VALUE)\n      : DEFAULT_SHOW_VALUE;\n    this.setColor(i, color);\n    this.setShow(i, show);\n  }\n};\n\nfunction getBinaryProperty(binaryProperty, index) {\n  var typedArray = binaryProperty.typedArray;\n  var componentCount = binaryProperty.componentCount;\n  if (componentCount === 1) {\n    return typedArray[index];\n  }\n  return binaryProperty.type.unpack(typedArray, index * componentCount);\n}\n\nfunction setBinaryProperty(binaryProperty, index, value) {\n  var typedArray = binaryProperty.typedArray;\n  var componentCount = binaryProperty.componentCount;\n  if (componentCount === 1) {\n    typedArray[index] = value;\n  } else {\n    binaryProperty.type.pack(value, typedArray, index * componentCount);\n  }\n}\n\nfunction checkBatchId(batchId, featuresLength) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(batchId) || batchId < 0 || batchId >= featuresLength) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(\n      "batchId is required and between zero and featuresLength - 1 (" +\n        featuresLength -\n        +")."\n    );\n  }\n}\n\nCesium3DTileBatchTable.prototype.isClass = function (batchId, className) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  checkBatchId(batchId, this.featuresLength);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.string */ .Z.typeOf.string("className", className);\n  //>>includeEnd(\'debug\');\n\n  var hierarchy = this._batchTableHierarchy;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(hierarchy)) {\n    return false;\n  }\n\n  return hierarchy.isClass(batchId, className);\n};\n\nCesium3DTileBatchTable.prototype.isExactClass = function (batchId, className) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.string */ .Z.typeOf.string("className", className);\n  //>>includeEnd(\'debug\');\n\n  return this.getExactClassName(batchId) === className;\n};\n\nCesium3DTileBatchTable.prototype.getExactClassName = function (batchId) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  checkBatchId(batchId, this.featuresLength);\n  //>>includeEnd(\'debug\');\n\n  var hierarchy = this._batchTableHierarchy;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(hierarchy)) {\n    return undefined;\n  }\n\n  return hierarchy.getClassName(batchId);\n};\n\nCesium3DTileBatchTable.prototype.hasProperty = function (batchId, name) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  checkBatchId(batchId, this.featuresLength);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.string */ .Z.typeOf.string("name", name);\n  //>>includeEnd(\'debug\');\n\n  return (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(this._properties[name]) ||\n    ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(this._batchTableHierarchy) &&\n      this._batchTableHierarchy.hasProperty(batchId, name))\n  );\n};\n\nCesium3DTileBatchTable.prototype.getPropertyNames = function (\n  batchId,\n  results\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  checkBatchId(batchId, this.featuresLength);\n  //>>includeEnd(\'debug\');\n\n  results = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(results) ? results : [];\n  results.length = 0;\n\n  var scratchPropertyNames = Object.keys(this._properties);\n  results.push.apply(results, scratchPropertyNames);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(this._batchTableHierarchy)) {\n    results.push.apply(\n      results,\n      this._batchTableHierarchy.getPropertyIds(batchId, scratchPropertyNames)\n    );\n  }\n\n  return results;\n};\n\nCesium3DTileBatchTable.prototype.getProperty = function (batchId, name) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  checkBatchId(batchId, this.featuresLength);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.string */ .Z.typeOf.string("name", name);\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(this._batchTableBinaryProperties)) {\n    var binaryProperty = this._batchTableBinaryProperties[name];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(binaryProperty)) {\n      return getBinaryProperty(binaryProperty, batchId);\n    }\n  }\n\n  var propertyValues = this._properties[name];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(propertyValues)) {\n    return (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(propertyValues[batchId], true);\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(this._batchTableHierarchy)) {\n    var hierarchyProperty = this._batchTableHierarchy.getProperty(\n      batchId,\n      name\n    );\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(hierarchyProperty)) {\n      return hierarchyProperty;\n    }\n  }\n\n  return undefined;\n};\n\nCesium3DTileBatchTable.prototype.setProperty = function (batchId, name, value) {\n  var featuresLength = this.featuresLength;\n  //>>includeStart(\'debug\', pragmas.debug);\n  checkBatchId(batchId, featuresLength);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.string */ .Z.typeOf.string("name", name);\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(this._batchTableBinaryProperties)) {\n    var binaryProperty = this._batchTableBinaryProperties[name];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(binaryProperty)) {\n      setBinaryProperty(binaryProperty, batchId, value);\n      return;\n    }\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(this._batchTableHierarchy)) {\n    if (this._batchTableHierarchy.setProperty(batchId, name, value)) {\n      return;\n    }\n  }\n\n  var propertyValues = this._properties[name];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(propertyValues)) {\n    // Property does not exist. Create it.\n    this._properties[name] = new Array(featuresLength);\n    propertyValues = this._properties[name];\n  }\n\n  propertyValues[batchId] = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(value, true);\n};\n\nfunction getGlslComputeSt(batchTable) {\n  // GLSL batchId is zero-based: [0, featuresLength - 1]\n  if (batchTable._batchTexture.textureDimensions.y === 1) {\n    return (\n      "uniform vec4 tile_textureStep; \\n" +\n      "vec2 computeSt(float batchId) \\n" +\n      "{ \\n" +\n      "    float stepX = tile_textureStep.x; \\n" +\n      "    float centerX = tile_textureStep.y; \\n" +\n      "    return vec2(centerX + (batchId * stepX), 0.5); \\n" +\n      "} \\n"\n    );\n  }\n\n  return (\n    "uniform vec4 tile_textureStep; \\n" +\n    "uniform vec2 tile_textureDimensions; \\n" +\n    "vec2 computeSt(float batchId) \\n" +\n    "{ \\n" +\n    "    float stepX = tile_textureStep.x; \\n" +\n    "    float centerX = tile_textureStep.y; \\n" +\n    "    float stepY = tile_textureStep.z; \\n" +\n    "    float centerY = tile_textureStep.w; \\n" +\n    "    float xId = mod(batchId, tile_textureDimensions.x); \\n" +\n    "    float yId = floor(batchId / tile_textureDimensions.x); \\n" +\n    "    return vec2(centerX + (xId * stepX), centerY + (yId * stepY)); \\n" +\n    "} \\n"\n  );\n}\n\nCesium3DTileBatchTable.prototype.getVertexShaderCallback = function (\n  handleTranslucent,\n  batchIdAttributeName,\n  diffuseAttributeOrUniformName\n) {\n  if (this.featuresLength === 0) {\n    return;\n  }\n\n  var that = this;\n  return function (source) {\n    // If the color blend mode is HIGHLIGHT, the highlight color will always be applied in the fragment shader.\n    // No need to apply the highlight color in the vertex shader as well.\n    var renamedSource = modifyDiffuse(\n      source,\n      diffuseAttributeOrUniformName,\n      false\n    );\n    var newMain;\n\n    if (_Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].maximumVertexTextureImageUnits */ .Z.maximumVertexTextureImageUnits > 0) {\n      // When VTF is supported, perform per-feature show/hide in the vertex shader\n      newMain = "";\n      if (handleTranslucent) {\n        newMain += "uniform bool tile_translucentCommand; \\n";\n      }\n      newMain +=\n        "uniform sampler2D tile_batchTexture; \\n" +\n        "varying vec4 tile_featureColor; \\n" +\n        "varying vec2 tile_featureSt; \\n" +\n        "void main() \\n" +\n        "{ \\n" +\n        "    vec2 st = computeSt(" +\n        batchIdAttributeName +\n        "); \\n" +\n        "    vec4 featureProperties = texture2D(tile_batchTexture, st); \\n" +\n        "    tile_color(featureProperties); \\n" +\n        "    float show = ceil(featureProperties.a); \\n" + // 0 - false, non-zeo - true\n        "    gl_Position *= show; \\n"; // Per-feature show/hide\n      if (handleTranslucent) {\n        newMain +=\n          "    bool isStyleTranslucent = (featureProperties.a != 1.0); \\n" +\n          "    if (czm_pass == czm_passTranslucent) \\n" +\n          "    { \\n" +\n          "        if (!isStyleTranslucent && !tile_translucentCommand) \\n" + // Do not render opaque features in the translucent pass\n          "        { \\n" +\n          "            gl_Position *= 0.0; \\n" +\n          "        } \\n" +\n          "    } \\n" +\n          "    else \\n" +\n          "    { \\n" +\n          "        if (isStyleTranslucent) \\n" + // Do not render translucent features in the opaque pass\n          "        { \\n" +\n          "            gl_Position *= 0.0; \\n" +\n          "        } \\n" +\n          "    } \\n";\n      }\n      newMain +=\n        "    tile_featureColor = featureProperties; \\n" +\n        "    tile_featureSt = st; \\n" +\n        "}";\n    } else {\n      // When VTF is not supported, color blend mode MIX will look incorrect due to the feature\'s color not being available in the vertex shader\n      newMain =\n        "varying vec2 tile_featureSt; \\n" +\n        "void main() \\n" +\n        "{ \\n" +\n        "    tile_color(vec4(1.0)); \\n" +\n        "    tile_featureSt = computeSt(" +\n        batchIdAttributeName +\n        "); \\n" +\n        "}";\n    }\n\n    return renamedSource + "\\n" + getGlslComputeSt(that) + newMain;\n  };\n};\n\nfunction getDefaultShader(source, applyHighlight) {\n  source = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].replaceMain */ .Z.replaceMain(source, "tile_main");\n\n  if (!applyHighlight) {\n    return (\n      source +\n      "void tile_color(vec4 tile_featureColor) \\n" +\n      "{ \\n" +\n      "    tile_main(); \\n" +\n      "} \\n"\n    );\n  }\n\n  // The color blend mode is intended for the RGB channels so alpha is always just multiplied.\n  // gl_FragColor is multiplied by the tile color only when tile_colorBlend is 0.0 (highlight)\n  return (\n    source +\n    "uniform float tile_colorBlend; \\n" +\n    "void tile_color(vec4 tile_featureColor) \\n" +\n    "{ \\n" +\n    "    tile_main(); \\n" +\n    "    tile_featureColor = czm_gammaCorrect(tile_featureColor); \\n" +\n    "    gl_FragColor.a *= tile_featureColor.a; \\n" +\n    "    float highlight = ceil(tile_colorBlend); \\n" +\n    "    gl_FragColor.rgb *= mix(tile_featureColor.rgb, vec3(1.0), highlight); \\n" +\n    "} \\n"\n  );\n}\n\nfunction replaceDiffuseTextureCalls(source, diffuseAttributeOrUniformName) {\n  var functionCall = "texture2D(" + diffuseAttributeOrUniformName;\n\n  var fromIndex = 0;\n  var startIndex = source.indexOf(functionCall, fromIndex);\n  var endIndex;\n\n  while (startIndex > -1) {\n    var nestedLevel = 0;\n    for (var i = startIndex; i < source.length; ++i) {\n      var character = source.charAt(i);\n      if (character === "(") {\n        ++nestedLevel;\n      } else if (character === ")") {\n        --nestedLevel;\n        if (nestedLevel === 0) {\n          endIndex = i + 1;\n          break;\n        }\n      }\n    }\n    var extractedFunction = source.slice(startIndex, endIndex);\n    var replacedFunction =\n      "tile_diffuse_final(" + extractedFunction + ", tile_diffuse)";\n\n    source =\n      source.slice(0, startIndex) + replacedFunction + source.slice(endIndex);\n    fromIndex = startIndex + replacedFunction.length;\n    startIndex = source.indexOf(functionCall, fromIndex);\n  }\n\n  return source;\n}\n\nfunction modifyDiffuse(source, diffuseAttributeOrUniformName, applyHighlight) {\n  // If the glTF does not specify the _3DTILESDIFFUSE semantic, return the default shader.\n  // Otherwise if _3DTILESDIFFUSE is defined prefer the shader below that can switch the color mode at runtime.\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(diffuseAttributeOrUniformName)) {\n    return getDefaultShader(source, applyHighlight);\n  }\n\n  // Find the diffuse uniform. Examples matches:\n  //   uniform vec3 u_diffuseColor;\n  //   uniform sampler2D diffuseTexture;\n  var regex = new RegExp(\n    "(uniform|attribute|in)\\\\s+(vec[34]|sampler2D)\\\\s+" +\n      diffuseAttributeOrUniformName +\n      ";"\n  );\n  var uniformMatch = source.match(regex);\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(uniformMatch)) {\n    // Could not find uniform declaration of type vec3, vec4, or sampler2D\n    return getDefaultShader(source, applyHighlight);\n  }\n\n  var declaration = uniformMatch[0];\n  var type = uniformMatch[2];\n\n  source = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].replaceMain */ .Z.replaceMain(source, "tile_main");\n  source = source.replace(declaration, ""); // Remove uniform declaration for now so the replace below doesn\'t affect it\n\n  // If the tile color is white, use the source color. This implies the feature has not been styled.\n  // Highlight: tile_colorBlend is 0.0 and the source color is used\n  // Replace: tile_colorBlend is 1.0 and the tile color is used\n  // Mix: tile_colorBlend is between 0.0 and 1.0, causing the source color and tile color to mix\n  var finalDiffuseFunction =\n    "bool isWhite(vec3 color) \\n" +\n    "{ \\n" +\n    "    return all(greaterThan(color, vec3(1.0 - czm_epsilon3))); \\n" +\n    "} \\n" +\n    "vec4 tile_diffuse_final(vec4 sourceDiffuse, vec4 tileDiffuse) \\n" +\n    "{ \\n" +\n    "    vec4 blendDiffuse = mix(sourceDiffuse, tileDiffuse, tile_colorBlend); \\n" +\n    "    vec4 diffuse = isWhite(tileDiffuse.rgb) ? sourceDiffuse : blendDiffuse; \\n" +\n    "    return vec4(diffuse.rgb, sourceDiffuse.a); \\n" +\n    "} \\n";\n\n  // The color blend mode is intended for the RGB channels so alpha is always just multiplied.\n  // gl_FragColor is multiplied by the tile color only when tile_colorBlend is 0.0 (highlight)\n  var highlight =\n    "    tile_featureColor = czm_gammaCorrect(tile_featureColor); \\n" +\n    "    gl_FragColor.a *= tile_featureColor.a; \\n" +\n    "    float highlight = ceil(tile_colorBlend); \\n" +\n    "    gl_FragColor.rgb *= mix(tile_featureColor.rgb, vec3(1.0), highlight); \\n";\n\n  var setColor;\n  if (type === "vec3" || type === "vec4") {\n    var sourceDiffuse =\n      type === "vec3"\n        ? "vec4(" + diffuseAttributeOrUniformName + ", 1.0)"\n        : diffuseAttributeOrUniformName;\n    var replaceDiffuse = type === "vec3" ? "tile_diffuse.xyz" : "tile_diffuse";\n    regex = new RegExp(diffuseAttributeOrUniformName, "g");\n    source = source.replace(regex, replaceDiffuse);\n    setColor =\n      "    vec4 source = " +\n      sourceDiffuse +\n      "; \\n" +\n      "    tile_diffuse = tile_diffuse_final(source, tile_featureColor); \\n" +\n      "    tile_main(); \\n";\n  } else if (type === "sampler2D") {\n    // Handles any number of nested parentheses\n    // E.g. texture2D(u_diffuse, uv)\n    // E.g. texture2D(u_diffuse, computeUV(index))\n    source = replaceDiffuseTextureCalls(source, diffuseAttributeOrUniformName);\n    setColor =\n      "    tile_diffuse = tile_featureColor; \\n" + "    tile_main(); \\n";\n  }\n\n  source =\n    "uniform float tile_colorBlend; \\n" +\n    "vec4 tile_diffuse = vec4(1.0); \\n" +\n    finalDiffuseFunction +\n    declaration +\n    "\\n" +\n    source +\n    "\\n" +\n    "void tile_color(vec4 tile_featureColor) \\n" +\n    "{ \\n" +\n    setColor;\n\n  if (applyHighlight) {\n    source += highlight;\n  }\n\n  source += "} \\n";\n  return source;\n}\n\nCesium3DTileBatchTable.prototype.getFragmentShaderCallback = function (\n  handleTranslucent,\n  diffuseAttributeOrUniformName,\n  hasPremultipliedAlpha\n) {\n  if (this.featuresLength === 0) {\n    return;\n  }\n  return function (source) {\n    source = modifyDiffuse(source, diffuseAttributeOrUniformName, true);\n    if (_Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].maximumVertexTextureImageUnits */ .Z.maximumVertexTextureImageUnits > 0) {\n      // When VTF is supported, per-feature show/hide already happened in the fragment shader\n      source +=\n        "uniform sampler2D tile_pickTexture; \\n" +\n        "varying vec2 tile_featureSt; \\n" +\n        "varying vec4 tile_featureColor; \\n" +\n        "void main() \\n" +\n        "{ \\n" +\n        "    tile_color(tile_featureColor); \\n";\n\n      if (hasPremultipliedAlpha) {\n        source += "    gl_FragColor.rgb *= gl_FragColor.a; \\n";\n      }\n\n      source += "}";\n    } else {\n      if (handleTranslucent) {\n        source += "uniform bool tile_translucentCommand; \\n";\n      }\n      source +=\n        "uniform sampler2D tile_pickTexture; \\n" +\n        "uniform sampler2D tile_batchTexture; \\n" +\n        "varying vec2 tile_featureSt; \\n" +\n        "void main() \\n" +\n        "{ \\n" +\n        "    vec4 featureProperties = texture2D(tile_batchTexture, tile_featureSt); \\n" +\n        "    if (featureProperties.a == 0.0) { \\n" + // show: alpha == 0 - false, non-zeo - true\n        "        discard; \\n" +\n        "    } \\n";\n\n      if (handleTranslucent) {\n        source +=\n          "    bool isStyleTranslucent = (featureProperties.a != 1.0); \\n" +\n          "    if (czm_pass == czm_passTranslucent) \\n" +\n          "    { \\n" +\n          "        if (!isStyleTranslucent && !tile_translucentCommand) \\n" + // Do not render opaque features in the translucent pass\n          "        { \\n" +\n          "            discard; \\n" +\n          "        } \\n" +\n          "    } \\n" +\n          "    else \\n" +\n          "    { \\n" +\n          "        if (isStyleTranslucent) \\n" + // Do not render translucent features in the opaque pass\n          "        { \\n" +\n          "            discard; \\n" +\n          "        } \\n" +\n          "    } \\n";\n      }\n\n      source += "    tile_color(featureProperties); \\n";\n\n      if (hasPremultipliedAlpha) {\n        source += "    gl_FragColor.rgb *= gl_FragColor.a; \\n";\n      }\n\n      source += "} \\n";\n    }\n    return source;\n  };\n};\n\nCesium3DTileBatchTable.prototype.getClassificationFragmentShaderCallback = function () {\n  if (this.featuresLength === 0) {\n    return;\n  }\n  return function (source) {\n    source = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].replaceMain */ .Z.replaceMain(source, "tile_main");\n    if (_Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].maximumVertexTextureImageUnits */ .Z.maximumVertexTextureImageUnits > 0) {\n      // When VTF is supported, per-feature show/hide already happened in the fragment shader\n      source +=\n        "uniform sampler2D tile_pickTexture;\\n" +\n        "varying vec2 tile_featureSt; \\n" +\n        "varying vec4 tile_featureColor; \\n" +\n        "void main() \\n" +\n        "{ \\n" +\n        "    tile_main(); \\n" +\n        "    gl_FragColor = tile_featureColor; \\n" +\n        "    gl_FragColor.rgb *= gl_FragColor.a; \\n" +\n        "}";\n    } else {\n      source +=\n        "uniform sampler2D tile_batchTexture; \\n" +\n        "uniform sampler2D tile_pickTexture;\\n" +\n        "varying vec2 tile_featureSt; \\n" +\n        "void main() \\n" +\n        "{ \\n" +\n        "    tile_main(); \\n" +\n        "    vec4 featureProperties = texture2D(tile_batchTexture, tile_featureSt); \\n" +\n        "    if (featureProperties.a == 0.0) { \\n" + // show: alpha == 0 - false, non-zeo - true\n        "        discard; \\n" +\n        "    } \\n" +\n        "    gl_FragColor = featureProperties; \\n" +\n        "    gl_FragColor.rgb *= gl_FragColor.a; \\n" +\n        "} \\n";\n    }\n    return source;\n  };\n};\n\nfunction getColorBlend(batchTable) {\n  var tileset = batchTable._content.tileset;\n  var colorBlendMode = tileset.colorBlendMode;\n  var colorBlendAmount = tileset.colorBlendAmount;\n  if (colorBlendMode === _Cesium3DTileColorBlendMode_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].HIGHLIGHT */ .Z.HIGHLIGHT) {\n    return 0.0;\n  }\n  if (colorBlendMode === _Cesium3DTileColorBlendMode_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].REPLACE */ .Z.REPLACE) {\n    return 1.0;\n  }\n  if (colorBlendMode === _Cesium3DTileColorBlendMode_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].MIX */ .Z.MIX) {\n    // The value 0.0 is reserved for highlight, so clamp to just above 0.0.\n    return _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clamp */ .Z.clamp(colorBlendAmount, _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].EPSILON4 */ .Z.EPSILON4, 1.0);\n  }\n  //>>includeStart(\'debug\', pragmas.debug);\n  throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(\n    \'Invalid color blend mode "\' + colorBlendMode + \'".\'\n  );\n  //>>includeEnd(\'debug\');\n}\n\nCesium3DTileBatchTable.prototype.getUniformMapCallback = function () {\n  if (this.featuresLength === 0) {\n    return;\n  }\n\n  var that = this;\n  return function (uniformMap) {\n    var batchUniformMap = {\n      tile_batchTexture: function () {\n        // PERFORMANCE_IDEA: we could also use a custom shader that avoids the texture read.\n        return (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n          that._batchTexture.batchTexture,\n          that._batchTexture.defaultTexture\n        );\n      },\n      tile_textureDimensions: function () {\n        return that._batchTexture.textureDimensions;\n      },\n      tile_textureStep: function () {\n        return that._batchTexture.textureStep;\n      },\n      tile_colorBlend: function () {\n        return getColorBlend(that);\n      },\n      tile_pickTexture: function () {\n        return that._batchTexture.pickTexture;\n      },\n    };\n\n    return (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(uniformMap, batchUniformMap);\n  };\n};\n\nCesium3DTileBatchTable.prototype.getPickId = function () {\n  return "texture2D(tile_pickTexture, tile_featureSt)";\n};\n\n///////////////////////////////////////////////////////////////////////////\n\nvar StyleCommandsNeeded = {\n  ALL_OPAQUE: 0,\n  ALL_TRANSLUCENT: 1,\n  OPAQUE_AND_TRANSLUCENT: 2,\n};\n\nCesium3DTileBatchTable.prototype.addDerivedCommands = function (\n  frameState,\n  commandStart\n) {\n  var commandList = frameState.commandList;\n  var commandEnd = commandList.length;\n  var tile = this._content._tile;\n  var finalResolution = tile._finalResolution;\n  var tileset = tile.tileset;\n  var bivariateVisibilityTest =\n    tileset._skipLevelOfDetail &&\n    tileset._hasMixedContent &&\n    frameState.context.stencilBuffer;\n  var styleCommandsNeeded = getStyleCommandsNeeded(this);\n\n  for (var i = commandStart; i < commandEnd; ++i) {\n    var command = commandList[i];\n    var derivedCommands = command.derivedCommands.tileset;\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(derivedCommands) || command.dirty) {\n      derivedCommands = {};\n      command.derivedCommands.tileset = derivedCommands;\n      derivedCommands.originalCommand = deriveCommand(command);\n      command.dirty = false;\n    }\n    var originalCommand = derivedCommands.originalCommand;\n\n    if (\n      styleCommandsNeeded !== StyleCommandsNeeded.ALL_OPAQUE &&\n      command.pass !== _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT\n    ) {\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(derivedCommands.translucent)) {\n        derivedCommands.translucent = deriveTranslucentCommand(originalCommand);\n      }\n    }\n\n    if (\n      styleCommandsNeeded !== StyleCommandsNeeded.ALL_TRANSLUCENT &&\n      command.pass !== _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT\n    ) {\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(derivedCommands.opaque)) {\n        derivedCommands.opaque = deriveOpaqueCommand(originalCommand);\n      }\n\n      if (bivariateVisibilityTest) {\n        if (!finalResolution) {\n          if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(derivedCommands.zback)) {\n            derivedCommands.zback = deriveZBackfaceCommand(\n              frameState.context,\n              originalCommand\n            );\n          }\n          tileset._backfaceCommands.push(derivedCommands.zback);\n        }\n        if (\n          !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(derivedCommands.stencil) ||\n          tile._selectionDepth !==\n            getLastSelectionDepth(derivedCommands.stencil)\n        ) {\n          if (command.renderState.depthMask) {\n            derivedCommands.stencil = deriveStencilCommand(\n              originalCommand,\n              tile._selectionDepth\n            );\n          } else {\n            // Ignore if tile does not write depth\n            derivedCommands.stencil = derivedCommands.opaque;\n          }\n        }\n      }\n    }\n\n    var opaqueCommand = bivariateVisibilityTest\n      ? derivedCommands.stencil\n      : derivedCommands.opaque;\n    var translucentCommand = derivedCommands.translucent;\n\n    // If the command was originally opaque:\n    //    * If the styling applied to the tile is all opaque, use the opaque command\n    //      (with one additional uniform needed for the shader).\n    //    * If the styling is all translucent, use new (cached) derived commands (front\n    //      and back faces) with a translucent render state.\n    //    * If the styling causes both opaque and translucent features in this tile,\n    //      then use both sets of commands.\n    if (command.pass !== _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT) {\n      if (styleCommandsNeeded === StyleCommandsNeeded.ALL_OPAQUE) {\n        commandList[i] = opaqueCommand;\n      }\n      if (styleCommandsNeeded === StyleCommandsNeeded.ALL_TRANSLUCENT) {\n        commandList[i] = translucentCommand;\n      }\n      if (styleCommandsNeeded === StyleCommandsNeeded.OPAQUE_AND_TRANSLUCENT) {\n        // PERFORMANCE_IDEA: if the tile has multiple commands, we do not know what features are in what\n        // commands so this case may be overkill.\n        commandList[i] = opaqueCommand;\n        commandList.push(translucentCommand);\n      }\n    } else {\n      // Command was originally translucent so no need to derive new commands;\n      // as of now, a style can\'t change an originally translucent feature to\n      // opaque since the style\'s alpha is modulated, not a replacement.  When\n      // this changes, we need to derive new opaque commands here.\n      commandList[i] = originalCommand;\n    }\n  }\n};\n\nfunction getStyleCommandsNeeded(batchTable) {\n  var translucentFeaturesLength =\n    batchTable._batchTexture.translucentFeaturesLength;\n\n  if (translucentFeaturesLength === 0) {\n    return StyleCommandsNeeded.ALL_OPAQUE;\n  } else if (translucentFeaturesLength === batchTable.featuresLength) {\n    return StyleCommandsNeeded.ALL_TRANSLUCENT;\n  }\n\n  return StyleCommandsNeeded.OPAQUE_AND_TRANSLUCENT;\n}\n\nfunction deriveCommand(command) {\n  var derivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].shallowClone */ .Z.shallowClone(command);\n\n  // Add a uniform to indicate if the original command was translucent so\n  // the shader knows not to cull vertices that were originally transparent\n  // even though their style is opaque.\n  var translucentCommand = derivedCommand.pass === _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT;\n\n  derivedCommand.uniformMap = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(derivedCommand.uniformMap)\n    ? derivedCommand.uniformMap\n    : {};\n  derivedCommand.uniformMap.tile_translucentCommand = function () {\n    return translucentCommand;\n  };\n\n  return derivedCommand;\n}\n\nfunction deriveTranslucentCommand(command) {\n  var derivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].shallowClone */ .Z.shallowClone(command);\n  derivedCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT;\n  derivedCommand.renderState = getTranslucentRenderState(command.renderState);\n  return derivedCommand;\n}\n\nfunction deriveOpaqueCommand(command) {\n  var derivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].shallowClone */ .Z.shallowClone(command);\n  derivedCommand.renderState = getOpaqueRenderState(command.renderState);\n  return derivedCommand;\n}\n\nfunction getLogDepthPolygonOffsetFragmentShaderProgram(context, shaderProgram) {\n  var shader = context.shaderCache.getDerivedShaderProgram(\n    shaderProgram,\n    "zBackfaceLogDepth"\n  );\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(shader)) {\n    var fs = shaderProgram.fragmentShaderSource.clone();\n    fs.defines = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z)(fs.defines) ? fs.defines.slice(0) : [];\n    fs.defines.push("POLYGON_OFFSET");\n\n    fs.sources.unshift(\n      "#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n"\n    );\n    shader = context.shaderCache.createDerivedShaderProgram(\n      shaderProgram,\n      "zBackfaceLogDepth",\n      {\n        vertexShaderSource: shaderProgram.vertexShaderSource,\n        fragmentShaderSource: fs,\n        attributeLocations: shaderProgram._attributeLocations,\n      }\n    );\n  }\n\n  return shader;\n}\n\nfunction deriveZBackfaceCommand(context, command) {\n  // Write just backface depth of unresolved tiles so resolved stenciled tiles do not appear in front\n  var derivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].shallowClone */ .Z.shallowClone(command);\n  var rs = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(derivedCommand.renderState, true);\n  rs.cull.enabled = true;\n  rs.cull.face = _CullFace_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].FRONT */ .Z.FRONT;\n  // Back faces do not need to write color.\n  rs.colorMask = {\n    red: false,\n    green: false,\n    blue: false,\n    alpha: false,\n  };\n  // Push back face depth away from the camera so it is less likely that back faces and front faces of the same tile\n  // intersect and overlap. This helps avoid flickering for very thin double-sided walls.\n  rs.polygonOffset = {\n    enabled: true,\n    factor: 5.0,\n    units: 5.0,\n  };\n  // Set the 3D Tiles bit\n  rs.stencilTest = _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].setCesium3DTileBit */ .Z.setCesium3DTileBit();\n  rs.stencilMask = _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK;\n\n  derivedCommand.renderState = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].fromCache */ .Z.fromCache(rs);\n  derivedCommand.castShadows = false;\n  derivedCommand.receiveShadows = false;\n  derivedCommand.uniformMap = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(command.uniformMap);\n\n  var polygonOffset = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(5.0, 5.0);\n  derivedCommand.uniformMap.u_polygonOffset = function () {\n    return polygonOffset;\n  };\n\n  // Make the log depth depth fragment write account for the polygon offset, too.\n  // Otherwise, the back face commands will cause the higher resolution\n  // tiles to disappear.\n  derivedCommand.shaderProgram = getLogDepthPolygonOffsetFragmentShaderProgram(\n    context,\n    command.shaderProgram\n  );\n  return derivedCommand;\n}\n\nfunction deriveStencilCommand(command, reference) {\n  // Tiles only draw if their selection depth is >= the tile drawn already. They write their\n  // selection depth to the stencil buffer to prevent ancestor tiles from drawing on top\n  var derivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].shallowClone */ .Z.shallowClone(command);\n  var rs = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(derivedCommand.renderState, true);\n  // Stencil test is masked to the most significant 3 bits so the reference is shifted. Writes 0 for the terrain bit\n  rs.stencilTest.enabled = true;\n  rs.stencilTest.mask = _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SKIP_LOD_MASK */ .Z.SKIP_LOD_MASK;\n  rs.stencilTest.reference =\n    _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK |\n    (reference << _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SKIP_LOD_BIT_SHIFT */ .Z.SKIP_LOD_BIT_SHIFT);\n  rs.stencilTest.frontFunction = _StencilFunction_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].GREATER_OR_EQUAL */ .Z.GREATER_OR_EQUAL;\n  rs.stencilTest.frontOperation.zPass = _StencilOperation_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"].REPLACE */ .Z.REPLACE;\n  rs.stencilTest.backFunction = _StencilFunction_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].GREATER_OR_EQUAL */ .Z.GREATER_OR_EQUAL;\n  rs.stencilTest.backOperation.zPass = _StencilOperation_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"].REPLACE */ .Z.REPLACE;\n  rs.stencilMask =\n    _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK | _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SKIP_LOD_MASK */ .Z.SKIP_LOD_MASK;\n  derivedCommand.renderState = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].fromCache */ .Z.fromCache(rs);\n  return derivedCommand;\n}\n\nfunction getLastSelectionDepth(stencilCommand) {\n  // Isolate the selection depth from the stencil reference.\n  var reference = stencilCommand.renderState.stencilTest.reference;\n  return (\n    (reference & _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SKIP_LOD_MASK */ .Z.SKIP_LOD_MASK) >>>\n    _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SKIP_LOD_BIT_SHIFT */ .Z.SKIP_LOD_BIT_SHIFT\n  );\n}\n\nfunction getTranslucentRenderState(renderState) {\n  var rs = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(renderState, true);\n  rs.cull.enabled = false;\n  rs.depthTest.enabled = true;\n  rs.depthMask = false;\n  rs.blending = _BlendingState_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND;\n  rs.stencilTest = _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].setCesium3DTileBit */ .Z.setCesium3DTileBit();\n  rs.stencilMask = _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK;\n\n  return _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].fromCache */ .Z.fromCache(rs);\n}\n\nfunction getOpaqueRenderState(renderState) {\n  var rs = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(renderState, true);\n  rs.stencilTest = _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].setCesium3DTileBit */ .Z.setCesium3DTileBit();\n  rs.stencilMask = _StencilConstants_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK;\n\n  return _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].fromCache */ .Z.fromCache(rs);\n}\n\nCesium3DTileBatchTable.prototype.update = function (tileset, frameState) {\n  this._batchTexture.update(tileset, frameState);\n};\n\nCesium3DTileBatchTable.prototype.isDestroyed = function () {\n  return false;\n};\n\nCesium3DTileBatchTable.prototype.destroy = function () {\n  this._batchTexture = this._batchTexture && this._batchTexture.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Cesium3DTileBatchTable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84020\n')},95401:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Defines how per-feature colors set from the Cesium API or declarative styling blend with the source colors from\n * the original feature, e.g. glTF material or per-point color in the tile.\n * <p>\n * When <code>REPLACE</code> or <code>MIX</code> are used and the source color is a glTF material, the technique must assign the\n * <code>_3DTILESDIFFUSE</code> semantic to the diffuse color parameter. Otherwise only <code>HIGHLIGHT</code> is supported.\n * </p>\n * <p>\n * A feature whose color evaluates to white (1.0, 1.0, 1.0) is always rendered without color blending, regardless of the\n * tileset\'s color blend mode.\n * </p>\n * <pre><code>\n * "techniques": {\n *   "technique0": {\n *     "parameters": {\n *       "diffuse": {\n *         "semantic": "_3DTILESDIFFUSE",\n *         "type": 35666\n *       }\n *     }\n *   }\n * }\n * </code></pre>\n *\n * @enum {Number}\n */\nvar Cesium3DTileColorBlendMode = {\n  /**\n   * Multiplies the source color by the feature color.\n   *\n   * @type {Number}\n   * @constant\n   */\n  HIGHLIGHT: 0,\n\n  /**\n   * Replaces the source color with the feature color.\n   *\n   * @type {Number}\n   * @constant\n   */\n  REPLACE: 1,\n\n  /**\n   * Blends the source color and feature color together.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MIX: 2,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(Cesium3DTileColorBlendMode));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTU0MDEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUseUNBQXlDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvQ2VzaXVtM0RUaWxlQ29sb3JCbGVuZE1vZGUuanM/MDFmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlZmluZXMgaG93IHBlci1mZWF0dXJlIGNvbG9ycyBzZXQgZnJvbSB0aGUgQ2VzaXVtIEFQSSBvciBkZWNsYXJhdGl2ZSBzdHlsaW5nIGJsZW5kIHdpdGggdGhlIHNvdXJjZSBjb2xvcnMgZnJvbVxuICogdGhlIG9yaWdpbmFsIGZlYXR1cmUsIGUuZy4gZ2xURiBtYXRlcmlhbCBvciBwZXItcG9pbnQgY29sb3IgaW4gdGhlIHRpbGUuXG4gKiA8cD5cbiAqIFdoZW4gPGNvZGU+UkVQTEFDRTwvY29kZT4gb3IgPGNvZGU+TUlYPC9jb2RlPiBhcmUgdXNlZCBhbmQgdGhlIHNvdXJjZSBjb2xvciBpcyBhIGdsVEYgbWF0ZXJpYWwsIHRoZSB0ZWNobmlxdWUgbXVzdCBhc3NpZ24gdGhlXG4gKiA8Y29kZT5fM0RUSUxFU0RJRkZVU0U8L2NvZGU+IHNlbWFudGljIHRvIHRoZSBkaWZmdXNlIGNvbG9yIHBhcmFtZXRlci4gT3RoZXJ3aXNlIG9ubHkgPGNvZGU+SElHSExJR0hUPC9jb2RlPiBpcyBzdXBwb3J0ZWQuXG4gKiA8L3A+XG4gKiA8cD5cbiAqIEEgZmVhdHVyZSB3aG9zZSBjb2xvciBldmFsdWF0ZXMgdG8gd2hpdGUgKDEuMCwgMS4wLCAxLjApIGlzIGFsd2F5cyByZW5kZXJlZCB3aXRob3V0IGNvbG9yIGJsZW5kaW5nLCByZWdhcmRsZXNzIG9mIHRoZVxuICogdGlsZXNldCdzIGNvbG9yIGJsZW5kIG1vZGUuXG4gKiA8L3A+XG4gKiA8cHJlPjxjb2RlPlxuICogXCJ0ZWNobmlxdWVzXCI6IHtcbiAqICAgXCJ0ZWNobmlxdWUwXCI6IHtcbiAqICAgICBcInBhcmFtZXRlcnNcIjoge1xuICogICAgICAgXCJkaWZmdXNlXCI6IHtcbiAqICAgICAgICAgXCJzZW1hbnRpY1wiOiBcIl8zRFRJTEVTRElGRlVTRVwiLFxuICogICAgICAgICBcInR5cGVcIjogMzU2NjZcbiAqICAgICAgIH1cbiAqICAgICB9XG4gKiAgIH1cbiAqIH1cbiAqIDwvY29kZT48L3ByZT5cbiAqXG4gKiBAZW51bSB7TnVtYmVyfVxuICovXG52YXIgQ2VzaXVtM0RUaWxlQ29sb3JCbGVuZE1vZGUgPSB7XG4gIC8qKlxuICAgKiBNdWx0aXBsaWVzIHRoZSBzb3VyY2UgY29sb3IgYnkgdGhlIGZlYXR1cmUgY29sb3IuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgSElHSExJR0hUOiAwLFxuXG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgc291cmNlIGNvbG9yIHdpdGggdGhlIGZlYXR1cmUgY29sb3IuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgUkVQTEFDRTogMSxcblxuICAvKipcbiAgICogQmxlbmRzIHRoZSBzb3VyY2UgY29sb3IgYW5kIGZlYXR1cmUgY29sb3IgdG9nZXRoZXIuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTUlYOiAyLFxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoQ2VzaXVtM0RUaWxlQ29sb3JCbGVuZE1vZGUpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///95401\n')},22193:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n\n\n/**\n * The content of a tile in a {@link Cesium3DTileset}.\n * <p>\n * Derived classes of this interface provide access to individual features in the tile.\n * Access derived objects through {@link Cesium3DTile#content}.\n * </p>\n * <p>\n * This type describes an interface and is not intended to be instantiated directly.\n * </p>\n *\n * @alias Cesium3DTileContent\n * @constructor\n */\nfunction Cesium3DTileContent() {\n  /**\n   * Gets or sets if any feature\'s property changed.  Used to\n   * optimized applying a style when a feature\'s property changed.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {Boolean}\n   *\n   * @private\n   */\n  this.featurePropertiesDirty = false;\n}\n\nObject.defineProperties(Cesium3DTileContent.prototype, {\n  /**\n   * Gets the number of features in the tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  featuresLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the number of points in the tile.\n   * <p>\n   * Only applicable for tiles with Point Cloud content. This is different than {@link Cesium3DTileContent#featuresLength} which\n   * equals the number of groups of points as distinguished by the <code>BATCH_ID</code> feature table semantic.\n   * </p>\n   *\n   * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/PointCloud#batched-points}\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  pointsLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the number of triangles in the tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  trianglesLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the tile\'s geometry memory in bytes.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  geometryByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the tile\'s texture memory in bytes.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  texturesByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the amount of memory used by the batch table textures, in bytes.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  batchTableByteLength: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the array of {@link Cesium3DTileContent} objects for contents that contain other contents, such as composite tiles. The inner contents may in turn have inner contents, such as a composite tile that contains a composite tile.\n   *\n   * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/Composite|Composite specification}\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Array}\n   * @readonly\n   */\n  innerContents: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the promise that will be resolved when the tile\'s content is ready to render.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Promise.<Cesium3DTileContent>}\n   * @readonly\n   */\n  readyPromise: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the tileset for this tile.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Cesium3DTileset}\n   * @readonly\n   */\n  tileset: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the tile containing this content.\n   *\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {Cesium3DTile}\n   * @readonly\n   */\n  tile: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the url of the tile\'s content.\n   * @memberof Cesium3DTileContent.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  url: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the batch table for this content.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {Cesium3DTileBatchTable}\n   * @readonly\n   *\n   * @private\n   */\n  batchTable: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n\n  /**\n   * Gets the group metadata for this content if the content uses the\n   * <code>3DTILES_metadata</code> extension. If the extension is not used,\n   * this property should be undefined.\n   * <p>\n   * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n   * not part of the public Cesium API.\n   * </p>\n   *\n   * @type {GroupMetadata|undefined}\n   *\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n   */\n  groupMetadata: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n    set: function (value) {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n});\n\n/**\n * Returns whether the feature has this property.\n *\n * @param {Number} batchId The batchId for the feature.\n * @param {String} name The case-sensitive name of the property.\n * @returns {Boolean} <code>true</code> if the feature has this property; otherwise, <code>false</code>.\n */\nCesium3DTileContent.prototype.hasProperty = function (batchId, name) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Returns the {@link Cesium3DTileFeature} object for the feature with the\n * given <code>batchId</code>.  This object is used to get and modify the\n * feature\'s properties.\n * <p>\n * Features in a tile are ordered by <code>batchId</code>, an index used to retrieve their metadata from the batch table.\n * </p>\n *\n * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification/TileFormats/BatchTable}.\n *\n * @param {Number} batchId The batchId for the feature.\n * @returns {Cesium3DTileFeature} The corresponding {@link Cesium3DTileFeature} object.\n *\n * @exception {DeveloperError} batchId must be between zero and {@link Cesium3DTileContent#featuresLength} - 1.\n */\nCesium3DTileContent.prototype.getFeature = function (batchId) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n     * Called when {@link Cesium3DTileset#debugColorizeTiles} changes.\n     * <p>\n     * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n     * not part of the public Cesium API.\n     * </p>\n     *\n     * @param {Boolean} enabled Whether to enable or disable debug settings.\n     * @returns {Cesium3DTileFeature} The corresponding {@link Cesium3DTileFeature} object.\n\n     * @private\n     */\nCesium3DTileContent.prototype.applyDebugSettings = function (enabled, color) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Apply a style to the content\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @param {Cesium3DTileStyle} style The style.\n *\n * @private\n */\nCesium3DTileContent.prototype.applyStyle = function (style) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Called by the tile during tileset traversal to get the draw commands needed to render this content.\n * When the tile\'s content is in the PROCESSING state, this creates WebGL resources to ultimately\n * move to the READY state.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @param {Cesium3DTileset} tileset The tileset containing this tile.\n * @param {FrameState} frameState The frame state.\n *\n * @private\n */\nCesium3DTileContent.prototype.update = function (tileset, frameState) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see Cesium3DTileContent#destroy\n *\n * @private\n */\nCesium3DTileContent.prototype.isDestroyed = function () {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * <p>\n * This is used to implement the <code>Cesium3DTileContent</code> interface, but is\n * not part of the public Cesium API.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * content = content && content.destroy();\n *\n * @see Cesium3DTileContent#isDestroyed\n *\n * @private\n */\nCesium3DTileContent.prototype.destroy = function () {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (Cesium3DTileContent)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22193\n')},95563:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Batched3DModel3DTileContent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68524);\n/* harmony import */ var _Composite3DTileContent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67984);\n/* harmony import */ var _Geometry3DTileContent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16962);\n/* harmony import */ var _Gltf3DTileContent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(30413);\n/* harmony import */ var _Implicit3DTileContent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6652);\n/* harmony import */ var _Instanced3DModel3DTileContent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(83472);\n/* harmony import */ var _PointCloud3DTileContent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(8707);\n/* harmony import */ var _Tileset3DTileContent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(85794);\n/* harmony import */ var _Vector3DTileContent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(41023);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(9407);\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Maps a tile\'s magic field in its header to a new content object for the tile\'s payload.\n *\n * @private\n */\nvar Cesium3DTileContentFactory = {\n  b3dm: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new _Batched3DModel3DTileContent_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset\n    );\n  },\n  pnts: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new _PointCloud3DTileContent_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset\n    );\n  },\n  i3dm: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new _Instanced3DModel3DTileContent_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset\n    );\n  },\n  cmpt: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    // Send in the factory in order to avoid a cyclical dependency\n    return new _Composite3DTileContent_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset,\n      Cesium3DTileContentFactory\n    );\n  },\n  externalTileset: function (tileset, tile, resource, json) {\n    return new _Tileset3DTileContent_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(tileset, tile, resource, json);\n  },\n  geom: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new _Geometry3DTileContent_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset\n    );\n  },\n  vctr: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new _Vector3DTileContent_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset\n    );\n  },\n  subt: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    return new _Implicit3DTileContent_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      tileset,\n      tile,\n      resource,\n      arrayBuffer,\n      byteOffset\n    );\n  },\n  glb: function (tileset, tile, resource, arrayBuffer, byteOffset) {\n    var arrayBufferByteLength = arrayBuffer.byteLength;\n    if (arrayBufferByteLength < 12) {\n      throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z("Invalid glb content");\n    }\n    var dataView = new DataView(arrayBuffer, byteOffset);\n    var byteLength = dataView.getUint32(8, true);\n    var glb = new Uint8Array(arrayBuffer, byteOffset, byteLength);\n\n    return new _Gltf3DTileContent_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(tileset, tile, resource, glb);\n  },\n  gltf: function (tileset, tile, resource, json) {\n    return new _Gltf3DTileContent_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(tileset, tile, resource, json);\n  },\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Cesium3DTileContentFactory);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTU1NjMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEyRTtBQUNWO0FBQ0Y7QUFDUjtBQUNRO0FBQ2dCO0FBQ1o7QUFDTjtBQUNGO0FBQ1I7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnRkFBMkI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsZUFBZSw0RUFBdUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsZUFBZSxrRkFBNkI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxlQUFlLDJFQUFzQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGVBQWUseUVBQW9CO0FBQ25DLEdBQUc7QUFDSDtBQUNBLGVBQWUsMEVBQXFCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGVBQWUsd0VBQW1CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGVBQWUsMEVBQXFCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isc0VBQVk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZSxzRUFBaUI7QUFDaEMsR0FBRztBQUNIO0FBQ0EsZUFBZSxzRUFBaUI7QUFDaEMsR0FBRztBQUNIO0FBQ0EseURBQWUsMEJBQTBCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvQ2VzaXVtM0RUaWxlQ29udGVudEZhY3RvcnkuanM/ZjBlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmF0Y2hlZDNETW9kZWwzRFRpbGVDb250ZW50IGZyb20gXCIuL0JhdGNoZWQzRE1vZGVsM0RUaWxlQ29udGVudC5qc1wiO1xuaW1wb3J0IENvbXBvc2l0ZTNEVGlsZUNvbnRlbnQgZnJvbSBcIi4vQ29tcG9zaXRlM0RUaWxlQ29udGVudC5qc1wiO1xuaW1wb3J0IEdlb21ldHJ5M0RUaWxlQ29udGVudCBmcm9tIFwiLi9HZW9tZXRyeTNEVGlsZUNvbnRlbnQuanNcIjtcbmltcG9ydCBHbHRmM0RUaWxlQ29udGVudCBmcm9tIFwiLi9HbHRmM0RUaWxlQ29udGVudC5qc1wiO1xuaW1wb3J0IEltcGxpY2l0M0RUaWxlQ29udGVudCBmcm9tIFwiLi9JbXBsaWNpdDNEVGlsZUNvbnRlbnQuanNcIjtcbmltcG9ydCBJbnN0YW5jZWQzRE1vZGVsM0RUaWxlQ29udGVudCBmcm9tIFwiLi9JbnN0YW5jZWQzRE1vZGVsM0RUaWxlQ29udGVudC5qc1wiO1xuaW1wb3J0IFBvaW50Q2xvdWQzRFRpbGVDb250ZW50IGZyb20gXCIuL1BvaW50Q2xvdWQzRFRpbGVDb250ZW50LmpzXCI7XG5pbXBvcnQgVGlsZXNldDNEVGlsZUNvbnRlbnQgZnJvbSBcIi4vVGlsZXNldDNEVGlsZUNvbnRlbnQuanNcIjtcbmltcG9ydCBWZWN0b3IzRFRpbGVDb250ZW50IGZyb20gXCIuL1ZlY3RvcjNEVGlsZUNvbnRlbnQuanNcIjtcbmltcG9ydCBSdW50aW1lRXJyb3IgZnJvbSBcIi4uL0NvcmUvUnVudGltZUVycm9yLmpzXCI7XG5cbi8qKlxuICogTWFwcyBhIHRpbGUncyBtYWdpYyBmaWVsZCBpbiBpdHMgaGVhZGVyIHRvIGEgbmV3IGNvbnRlbnQgb2JqZWN0IGZvciB0aGUgdGlsZSdzIHBheWxvYWQuXG4gKlxuICogQHByaXZhdGVcbiAqL1xudmFyIENlc2l1bTNEVGlsZUNvbnRlbnRGYWN0b3J5ID0ge1xuICBiM2RtOiBmdW5jdGlvbiAodGlsZXNldCwgdGlsZSwgcmVzb3VyY2UsIGFycmF5QnVmZmVyLCBieXRlT2Zmc2V0KSB7XG4gICAgcmV0dXJuIG5ldyBCYXRjaGVkM0RNb2RlbDNEVGlsZUNvbnRlbnQoXG4gICAgICB0aWxlc2V0LFxuICAgICAgdGlsZSxcbiAgICAgIHJlc291cmNlLFxuICAgICAgYXJyYXlCdWZmZXIsXG4gICAgICBieXRlT2Zmc2V0XG4gICAgKTtcbiAgfSxcbiAgcG50czogZnVuY3Rpb24gKHRpbGVzZXQsIHRpbGUsIHJlc291cmNlLCBhcnJheUJ1ZmZlciwgYnl0ZU9mZnNldCkge1xuICAgIHJldHVybiBuZXcgUG9pbnRDbG91ZDNEVGlsZUNvbnRlbnQoXG4gICAgICB0aWxlc2V0LFxuICAgICAgdGlsZSxcbiAgICAgIHJlc291cmNlLFxuICAgICAgYXJyYXlCdWZmZXIsXG4gICAgICBieXRlT2Zmc2V0XG4gICAgKTtcbiAgfSxcbiAgaTNkbTogZnVuY3Rpb24gKHRpbGVzZXQsIHRpbGUsIHJlc291cmNlLCBhcnJheUJ1ZmZlciwgYnl0ZU9mZnNldCkge1xuICAgIHJldHVybiBuZXcgSW5zdGFuY2VkM0RNb2RlbDNEVGlsZUNvbnRlbnQoXG4gICAgICB0aWxlc2V0LFxuICAgICAgdGlsZSxcbiAgICAgIHJlc291cmNlLFxuICAgICAgYXJyYXlCdWZmZXIsXG4gICAgICBieXRlT2Zmc2V0XG4gICAgKTtcbiAgfSxcbiAgY21wdDogZnVuY3Rpb24gKHRpbGVzZXQsIHRpbGUsIHJlc291cmNlLCBhcnJheUJ1ZmZlciwgYnl0ZU9mZnNldCkge1xuICAgIC8vIFNlbmQgaW4gdGhlIGZhY3RvcnkgaW4gb3JkZXIgdG8gYXZvaWQgYSBjeWNsaWNhbCBkZXBlbmRlbmN5XG4gICAgcmV0dXJuIG5ldyBDb21wb3NpdGUzRFRpbGVDb250ZW50KFxuICAgICAgdGlsZXNldCxcbiAgICAgIHRpbGUsXG4gICAgICByZXNvdXJjZSxcbiAgICAgIGFycmF5QnVmZmVyLFxuICAgICAgYnl0ZU9mZnNldCxcbiAgICAgIENlc2l1bTNEVGlsZUNvbnRlbnRGYWN0b3J5XG4gICAgKTtcbiAgfSxcbiAgZXh0ZXJuYWxUaWxlc2V0OiBmdW5jdGlvbiAodGlsZXNldCwgdGlsZSwgcmVzb3VyY2UsIGpzb24pIHtcbiAgICByZXR1cm4gbmV3IFRpbGVzZXQzRFRpbGVDb250ZW50KHRpbGVzZXQsIHRpbGUsIHJlc291cmNlLCBqc29uKTtcbiAgfSxcbiAgZ2VvbTogZnVuY3Rpb24gKHRpbGVzZXQsIHRpbGUsIHJlc291cmNlLCBhcnJheUJ1ZmZlciwgYnl0ZU9mZnNldCkge1xuICAgIHJldHVybiBuZXcgR2VvbWV0cnkzRFRpbGVDb250ZW50KFxuICAgICAgdGlsZXNldCxcbiAgICAgIHRpbGUsXG4gICAgICByZXNvdXJjZSxcbiAgICAgIGFycmF5QnVmZmVyLFxuICAgICAgYnl0ZU9mZnNldFxuICAgICk7XG4gIH0sXG4gIHZjdHI6IGZ1bmN0aW9uICh0aWxlc2V0LCB0aWxlLCByZXNvdXJjZSwgYXJyYXlCdWZmZXIsIGJ5dGVPZmZzZXQpIHtcbiAgICByZXR1cm4gbmV3IFZlY3RvcjNEVGlsZUNvbnRlbnQoXG4gICAgICB0aWxlc2V0LFxuICAgICAgdGlsZSxcbiAgICAgIHJlc291cmNlLFxuICAgICAgYXJyYXlCdWZmZXIsXG4gICAgICBieXRlT2Zmc2V0XG4gICAgKTtcbiAgfSxcbiAgc3VidDogZnVuY3Rpb24gKHRpbGVzZXQsIHRpbGUsIHJlc291cmNlLCBhcnJheUJ1ZmZlciwgYnl0ZU9mZnNldCkge1xuICAgIHJldHVybiBuZXcgSW1wbGljaXQzRFRpbGVDb250ZW50KFxuICAgICAgdGlsZXNldCxcbiAgICAgIHRpbGUsXG4gICAgICByZXNvdXJjZSxcbiAgICAgIGFycmF5QnVmZmVyLFxuICAgICAgYnl0ZU9mZnNldFxuICAgICk7XG4gIH0sXG4gIGdsYjogZnVuY3Rpb24gKHRpbGVzZXQsIHRpbGUsIHJlc291cmNlLCBhcnJheUJ1ZmZlciwgYnl0ZU9mZnNldCkge1xuICAgIHZhciBhcnJheUJ1ZmZlckJ5dGVMZW5ndGggPSBhcnJheUJ1ZmZlci5ieXRlTGVuZ3RoO1xuICAgIGlmIChhcnJheUJ1ZmZlckJ5dGVMZW5ndGggPCAxMikge1xuICAgICAgdGhyb3cgbmV3IFJ1bnRpbWVFcnJvcihcIkludmFsaWQgZ2xiIGNvbnRlbnRcIik7XG4gICAgfVxuICAgIHZhciBkYXRhVmlldyA9IG5ldyBEYXRhVmlldyhhcnJheUJ1ZmZlciwgYnl0ZU9mZnNldCk7XG4gICAgdmFyIGJ5dGVMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MzIoOCwgdHJ1ZSk7XG4gICAgdmFyIGdsYiA9IG5ldyBVaW50OEFycmF5KGFycmF5QnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKTtcblxuICAgIHJldHVybiBuZXcgR2x0ZjNEVGlsZUNvbnRlbnQodGlsZXNldCwgdGlsZSwgcmVzb3VyY2UsIGdsYik7XG4gIH0sXG4gIGdsdGY6IGZ1bmN0aW9uICh0aWxlc2V0LCB0aWxlLCByZXNvdXJjZSwganNvbikge1xuICAgIHJldHVybiBuZXcgR2x0ZjNEVGlsZUNvbnRlbnQodGlsZXNldCwgdGlsZSwgcmVzb3VyY2UsIGpzb24pO1xuICB9LFxufTtcbmV4cG9ydCBkZWZhdWx0IENlc2l1bTNEVGlsZUNvbnRlbnRGYWN0b3J5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///95563\n')},96706:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * @private\n */\nvar Cesium3DTileContentState = {\n  UNLOADED: 0, // Has never been requested\n  LOADING: 1, // Is waiting on a pending request\n  PROCESSING: 2, // Request received.  Contents are being processed for rendering.  Depending on the content, it might make its own requests for external data.\n  READY: 3, // Ready to render.\n  EXPIRED: 4, // Is expired and will be unloaded once new content is loaded.\n  FAILED: 5, // Request failed.\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(Cesium3DTileContentState));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTY3MDYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUFlLHVDQUF1QyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL0Nlc2l1bTNEVGlsZUNvbnRlbnRTdGF0ZS5qcz8xYWI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHByaXZhdGVcbiAqL1xudmFyIENlc2l1bTNEVGlsZUNvbnRlbnRTdGF0ZSA9IHtcbiAgVU5MT0FERUQ6IDAsIC8vIEhhcyBuZXZlciBiZWVuIHJlcXVlc3RlZFxuICBMT0FESU5HOiAxLCAvLyBJcyB3YWl0aW5nIG9uIGEgcGVuZGluZyByZXF1ZXN0XG4gIFBST0NFU1NJTkc6IDIsIC8vIFJlcXVlc3QgcmVjZWl2ZWQuICBDb250ZW50cyBhcmUgYmVpbmcgcHJvY2Vzc2VkIGZvciByZW5kZXJpbmcuICBEZXBlbmRpbmcgb24gdGhlIGNvbnRlbnQsIGl0IG1pZ2h0IG1ha2UgaXRzIG93biByZXF1ZXN0cyBmb3IgZXh0ZXJuYWwgZGF0YS5cbiAgUkVBRFk6IDMsIC8vIFJlYWR5IHRvIHJlbmRlci5cbiAgRVhQSVJFRDogNCwgLy8gSXMgZXhwaXJlZCBhbmQgd2lsbCBiZSB1bmxvYWRlZCBvbmNlIG5ldyBjb250ZW50IGlzIGxvYWRlZC5cbiAgRkFJTEVEOiA1LCAvLyBSZXF1ZXN0IGZhaWxlZC5cbn07XG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKENlc2l1bTNEVGlsZUNvbnRlbnRTdGF0ZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///96706\n')},41059:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * An enum to indicate the different types of {@link Cesium3DTileContent}.\n * For binary files, the enum value is the magic number of the binary file\n * unless otherwise noted. For JSON files, the enum value is a unique name\n * for internal use.\n *\n * @enum {String}\n * @see Cesium3DTileContent\n *\n * @private\n */\nvar Cesium3DTileContentType = {\n  /**\n   * A Batched 3D Model. This is a binary format with\n   * magic number <code>b3dm</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  BATCHED_3D_MODEL: "b3dm",\n  /**\n   * An Instanced 3D Model. This is a binary format with magic number\n   * <code>i3dm</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  INSTANCED_3D_MODEL: "i3dm",\n  /**\n   * A Composite model. This is a binary format with magic number\n   * <code>cmpt</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  COMPOSITE: "cmpt",\n  /**\n   * A Point Cloud model. This is a binary format with magic number\n   * <code>pnts</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  POINT_CLOUD: "pnts",\n  /**\n   * Vector tiles. This is a binary format with magic number\n   * <code>vctr</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  VECTOR: "vctr",\n  /**\n   * Geometry tiles. This is a binary format with magic number\n   * <code>geom</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  GEOMETRY: "geom",\n  /**\n   * A glTF model in JSON + external BIN form. This is treated\n   * as a JSON format.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n   */\n  GLTF: "gltf",\n  /**\n   * The binary form of a glTF file. Internally, the magic number is\n   * changed from <code>glTF</code> to <code>glb</code> to distinguish it from\n   * the JSON glTF format.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n   */\n  GLTF_BINARY: "glb",\n  /**\n   * For the <code>3DTILES_implicit_tiling</code> extension,\n   * availability bitstreams are stored in binary subtree files.\n   * The magic number is <code>subt</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n   */\n  IMPLICIT_SUBTREE: "subt",\n  /**\n   * Contents can reference another tileset.json to use\n   * as an external tileset. This is a JSON-based format.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  EXTERNAL_TILESET: "externalTileset",\n  /**\n   * <code>3DTILES_multiple_contents</code> is a 3D Tiles\n   * extensions. This is handled separately from the other content types\n   * due to differences in request scheduling.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n   */\n  MULTIPLE_CONTENT: "multipleContent",\n};\n\n/**\n * Check if a content is one of the supported binary formats. Otherwise,\n * the caller can assume a JSON format.\n * @param {Cesium3DTileContentType} contentType The content type of the content payload.\n * @return {Boolean} <code>true</code> if the content type is a binary format, or <code>false</code> if the content type is a JSON format.\n * @private\n */\nCesium3DTileContentType.isBinaryFormat = function (contentType) {\n  switch (contentType) {\n    case Cesium3DTileContentType.BATCHED_3D_MODEL:\n    case Cesium3DTileContentType.INSTANCED_3D_MODEL:\n    case Cesium3DTileContentType.COMPOSITE:\n    case Cesium3DTileContentType.POINT_CLOUD:\n    case Cesium3DTileContentType.VECTOR:\n    case Cesium3DTileContentType.GEOMETRY:\n    case Cesium3DTileContentType.IMPLICIT_SUBTREE:\n    case Cesium3DTileContentType.GLTF_BINARY:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(Cesium3DTileContentType));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEwNTkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSwrQ0FBK0MsMEJBQTBCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQyxZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5REFBZSxzQ0FBc0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9DZXNpdW0zRFRpbGVDb250ZW50VHlwZS5qcz80NGYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQW4gZW51bSB0byBpbmRpY2F0ZSB0aGUgZGlmZmVyZW50IHR5cGVzIG9mIHtAbGluayBDZXNpdW0zRFRpbGVDb250ZW50fS5cbiAqIEZvciBiaW5hcnkgZmlsZXMsIHRoZSBlbnVtIHZhbHVlIGlzIHRoZSBtYWdpYyBudW1iZXIgb2YgdGhlIGJpbmFyeSBmaWxlXG4gKiB1bmxlc3Mgb3RoZXJ3aXNlIG5vdGVkLiBGb3IgSlNPTiBmaWxlcywgdGhlIGVudW0gdmFsdWUgaXMgYSB1bmlxdWUgbmFtZVxuICogZm9yIGludGVybmFsIHVzZS5cbiAqXG4gKiBAZW51bSB7U3RyaW5nfVxuICogQHNlZSBDZXNpdW0zRFRpbGVDb250ZW50XG4gKlxuICogQHByaXZhdGVcbiAqL1xudmFyIENlc2l1bTNEVGlsZUNvbnRlbnRUeXBlID0ge1xuICAvKipcbiAgICogQSBCYXRjaGVkIDNEIE1vZGVsLiBUaGlzIGlzIGEgYmluYXJ5IGZvcm1hdCB3aXRoXG4gICAqIG1hZ2ljIG51bWJlciA8Y29kZT5iM2RtPC9jb2RlPlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIEJBVENIRURfM0RfTU9ERUw6IFwiYjNkbVwiLFxuICAvKipcbiAgICogQW4gSW5zdGFuY2VkIDNEIE1vZGVsLiBUaGlzIGlzIGEgYmluYXJ5IGZvcm1hdCB3aXRoIG1hZ2ljIG51bWJlclxuICAgKiA8Y29kZT5pM2RtPC9jb2RlPlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIElOU1RBTkNFRF8zRF9NT0RFTDogXCJpM2RtXCIsXG4gIC8qKlxuICAgKiBBIENvbXBvc2l0ZSBtb2RlbC4gVGhpcyBpcyBhIGJpbmFyeSBmb3JtYXQgd2l0aCBtYWdpYyBudW1iZXJcbiAgICogPGNvZGU+Y21wdDwvY29kZT5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBDT01QT1NJVEU6IFwiY21wdFwiLFxuICAvKipcbiAgICogQSBQb2ludCBDbG91ZCBtb2RlbC4gVGhpcyBpcyBhIGJpbmFyeSBmb3JtYXQgd2l0aCBtYWdpYyBudW1iZXJcbiAgICogPGNvZGU+cG50czwvY29kZT5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBQT0lOVF9DTE9VRDogXCJwbnRzXCIsXG4gIC8qKlxuICAgKiBWZWN0b3IgdGlsZXMuIFRoaXMgaXMgYSBiaW5hcnkgZm9ybWF0IHdpdGggbWFnaWMgbnVtYmVyXG4gICAqIDxjb2RlPnZjdHI8L2NvZGU+XG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgVkVDVE9SOiBcInZjdHJcIixcbiAgLyoqXG4gICAqIEdlb21ldHJ5IHRpbGVzLiBUaGlzIGlzIGEgYmluYXJ5IGZvcm1hdCB3aXRoIG1hZ2ljIG51bWJlclxuICAgKiA8Y29kZT5nZW9tPC9jb2RlPlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIEdFT01FVFJZOiBcImdlb21cIixcbiAgLyoqXG4gICAqIEEgZ2xURiBtb2RlbCBpbiBKU09OICsgZXh0ZXJuYWwgQklOIGZvcm0uIFRoaXMgaXMgdHJlYXRlZFxuICAgKiBhcyBhIEpTT04gZm9ybWF0LlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICogQHByaXZhdGVcbiAgICogQGV4cGVyaW1lbnRhbCBUaGlzIGZlYXR1cmUgaXMgdXNpbmcgcGFydCBvZiB0aGUgM0QgVGlsZXMgc3BlYyB0aGF0IGlzIG5vdCBmaW5hbCBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2Ugd2l0aG91dCBDZXNpdW0ncyBzdGFuZGFyZCBkZXByZWNhdGlvbiBwb2xpY3kuXG4gICAqL1xuICBHTFRGOiBcImdsdGZcIixcbiAgLyoqXG4gICAqIFRoZSBiaW5hcnkgZm9ybSBvZiBhIGdsVEYgZmlsZS4gSW50ZXJuYWxseSwgdGhlIG1hZ2ljIG51bWJlciBpc1xuICAgKiBjaGFuZ2VkIGZyb20gPGNvZGU+Z2xURjwvY29kZT4gdG8gPGNvZGU+Z2xiPC9jb2RlPiB0byBkaXN0aW5ndWlzaCBpdCBmcm9tXG4gICAqIHRoZSBKU09OIGdsVEYgZm9ybWF0LlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICogQHByaXZhdGVcbiAgICogQGV4cGVyaW1lbnRhbCBUaGlzIGZlYXR1cmUgaXMgdXNpbmcgcGFydCBvZiB0aGUgM0QgVGlsZXMgc3BlYyB0aGF0IGlzIG5vdCBmaW5hbCBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2Ugd2l0aG91dCBDZXNpdW0ncyBzdGFuZGFyZCBkZXByZWNhdGlvbiBwb2xpY3kuXG4gICAqL1xuICBHTFRGX0JJTkFSWTogXCJnbGJcIixcbiAgLyoqXG4gICAqIEZvciB0aGUgPGNvZGU+M0RUSUxFU19pbXBsaWNpdF90aWxpbmc8L2NvZGU+IGV4dGVuc2lvbixcbiAgICogYXZhaWxhYmlsaXR5IGJpdHN0cmVhbXMgYXJlIHN0b3JlZCBpbiBiaW5hcnkgc3VidHJlZSBmaWxlcy5cbiAgICogVGhlIG1hZ2ljIG51bWJlciBpcyA8Y29kZT5zdWJ0PC9jb2RlPlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICogQHByaXZhdGVcbiAgICogQGV4cGVyaW1lbnRhbCBUaGlzIGZlYXR1cmUgaXMgdXNpbmcgcGFydCBvZiB0aGUgM0QgVGlsZXMgc3BlYyB0aGF0IGlzIG5vdCBmaW5hbCBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2Ugd2l0aG91dCBDZXNpdW0ncyBzdGFuZGFyZCBkZXByZWNhdGlvbiBwb2xpY3kuXG4gICAqL1xuICBJTVBMSUNJVF9TVUJUUkVFOiBcInN1YnRcIixcbiAgLyoqXG4gICAqIENvbnRlbnRzIGNhbiByZWZlcmVuY2UgYW5vdGhlciB0aWxlc2V0Lmpzb24gdG8gdXNlXG4gICAqIGFzIGFuIGV4dGVybmFsIHRpbGVzZXQuIFRoaXMgaXMgYSBKU09OLWJhc2VkIGZvcm1hdC5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBFWFRFUk5BTF9USUxFU0VUOiBcImV4dGVybmFsVGlsZXNldFwiLFxuICAvKipcbiAgICogPGNvZGU+M0RUSUxFU19tdWx0aXBsZV9jb250ZW50czwvY29kZT4gaXMgYSAzRCBUaWxlc1xuICAgKiBleHRlbnNpb25zLiBUaGlzIGlzIGhhbmRsZWQgc2VwYXJhdGVseSBmcm9tIHRoZSBvdGhlciBjb250ZW50IHR5cGVzXG4gICAqIGR1ZSB0byBkaWZmZXJlbmNlcyBpbiByZXF1ZXN0IHNjaGVkdWxpbmcuXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAZXhwZXJpbWVudGFsIFRoaXMgZmVhdHVyZSBpcyB1c2luZyBwYXJ0IG9mIHRoZSAzRCBUaWxlcyBzcGVjIHRoYXQgaXMgbm90IGZpbmFsIGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZSB3aXRob3V0IENlc2l1bSdzIHN0YW5kYXJkIGRlcHJlY2F0aW9uIHBvbGljeS5cbiAgICovXG4gIE1VTFRJUExFX0NPTlRFTlQ6IFwibXVsdGlwbGVDb250ZW50XCIsXG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGEgY29udGVudCBpcyBvbmUgb2YgdGhlIHN1cHBvcnRlZCBiaW5hcnkgZm9ybWF0cy4gT3RoZXJ3aXNlLFxuICogdGhlIGNhbGxlciBjYW4gYXNzdW1lIGEgSlNPTiBmb3JtYXQuXG4gKiBAcGFyYW0ge0Nlc2l1bTNEVGlsZUNvbnRlbnRUeXBlfSBjb250ZW50VHlwZSBUaGUgY29udGVudCB0eXBlIG9mIHRoZSBjb250ZW50IHBheWxvYWQuXG4gKiBAcmV0dXJuIHtCb29sZWFufSA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgY29udGVudCB0eXBlIGlzIGEgYmluYXJ5IGZvcm1hdCwgb3IgPGNvZGU+ZmFsc2U8L2NvZGU+IGlmIHRoZSBjb250ZW50IHR5cGUgaXMgYSBKU09OIGZvcm1hdC5cbiAqIEBwcml2YXRlXG4gKi9cbkNlc2l1bTNEVGlsZUNvbnRlbnRUeXBlLmlzQmluYXJ5Rm9ybWF0ID0gZnVuY3Rpb24gKGNvbnRlbnRUeXBlKSB7XG4gIHN3aXRjaCAoY29udGVudFR5cGUpIHtcbiAgICBjYXNlIENlc2l1bTNEVGlsZUNvbnRlbnRUeXBlLkJBVENIRURfM0RfTU9ERUw6XG4gICAgY2FzZSBDZXNpdW0zRFRpbGVDb250ZW50VHlwZS5JTlNUQU5DRURfM0RfTU9ERUw6XG4gICAgY2FzZSBDZXNpdW0zRFRpbGVDb250ZW50VHlwZS5DT01QT1NJVEU6XG4gICAgY2FzZSBDZXNpdW0zRFRpbGVDb250ZW50VHlwZS5QT0lOVF9DTE9VRDpcbiAgICBjYXNlIENlc2l1bTNEVGlsZUNvbnRlbnRUeXBlLlZFQ1RPUjpcbiAgICBjYXNlIENlc2l1bTNEVGlsZUNvbnRlbnRUeXBlLkdFT01FVFJZOlxuICAgIGNhc2UgQ2VzaXVtM0RUaWxlQ29udGVudFR5cGUuSU1QTElDSVRfU1VCVFJFRTpcbiAgICBjYXNlIENlc2l1bTNEVGlsZUNvbnRlbnRUeXBlLkdMVEZfQklOQVJZOlxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmZyZWV6ZShDZXNpdW0zRFRpbGVDb250ZW50VHlwZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///41059\n')},52381:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval("/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82982);\n\n\n\n/**\n * A feature of a {@link Cesium3DTileset}.\n * <p>\n * Provides access to a feature's properties stored in the tile's batch table, as well\n * as the ability to show/hide a feature and change its highlight color via\n * {@link Cesium3DTileFeature#show} and {@link Cesium3DTileFeature#color}, respectively.\n * </p>\n * <p>\n * Modifications to a <code>Cesium3DTileFeature</code> object have the lifetime of the tile's\n * content.  If the tile's content is unloaded, e.g., due to it going out of view and needing\n * to free space in the cache for visible tiles, listen to the {@link Cesium3DTileset#tileUnload} event to save any\n * modifications. Also listen to the {@link Cesium3DTileset#tileVisible} event to reapply any modifications.\n * </p>\n * <p>\n * Do not construct this directly.  Access it through {@link Cesium3DTileContent#getFeature}\n * or picking using {@link Scene#pick} and {@link Scene#pickPosition}.\n * </p>\n *\n * @alias Cesium3DTileFeature\n * @constructor\n *\n * @example\n * // On mouse over, display all the properties for a feature in the console log.\n * handler.setInputAction(function(movement) {\n *     var feature = scene.pick(movement.endPosition);\n *     if (feature instanceof Cesium.Cesium3DTileFeature) {\n *         var propertyNames = feature.getPropertyNames();\n *         var length = propertyNames.length;\n *         for (var i = 0; i < length; ++i) {\n *             var propertyName = propertyNames[i];\n *             console.log(propertyName + ': ' + feature.getProperty(propertyName));\n *         }\n *     }\n * }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n */\nfunction Cesium3DTileFeature(content, batchId) {\n  this._content = content;\n  this._batchId = batchId;\n  this._color = undefined; // for calling getColor\n}\n\nObject.defineProperties(Cesium3DTileFeature.prototype, {\n  /**\n   * Gets or sets if the feature will be shown. This is set for all features\n   * when a style's show is evaluated.\n   *\n   * @memberof Cesium3DTileFeature.prototype\n   *\n   * @type {Boolean}\n   *\n   * @default true\n   */\n  show: {\n    get: function () {\n      return this._content.batchTable.getShow(this._batchId);\n    },\n    set: function (value) {\n      this._content.batchTable.setShow(this._batchId, value);\n    },\n  },\n\n  /**\n   * Gets or sets the highlight color multiplied with the feature's color.  When\n   * this is white, the feature's color is not changed. This is set for all features\n   * when a style's color is evaluated.\n   *\n   * @memberof Cesium3DTileFeature.prototype\n   *\n   * @type {Color}\n   *\n   * @default {@link Color.WHITE}\n   */\n  color: {\n    get: function () {\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(this._color)) {\n        this._color = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z();\n      }\n      return this._content.batchTable.getColor(this._batchId, this._color);\n    },\n    set: function (value) {\n      this._content.batchTable.setColor(this._batchId, value);\n    },\n  },\n\n  /**\n   * Gets a typed array containing the ECEF positions of the polyline.\n   * Returns undefined if {@link Cesium3DTileset#vectorKeepDecodedPositions} is false\n   * or the feature is not a polyline in a vector tile.\n   *\n   * @memberof Cesium3DTileFeature.prototype\n   *\n   * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n   *\n   * @type {Float64Array}\n   */\n  polylinePositions: {\n    get: function () {\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(this._content.getPolylinePositions)) {\n        return undefined;\n      }\n\n      return this._content.getPolylinePositions(this._batchId);\n    },\n  },\n\n  /**\n   * Gets the content of the tile containing the feature.\n   *\n   * @memberof Cesium3DTileFeature.prototype\n   *\n   * @type {Cesium3DTileContent}\n   *\n   * @readonly\n   * @private\n   */\n  content: {\n    get: function () {\n      return this._content;\n    },\n  },\n\n  /**\n   * Gets the tileset containing the feature.\n   *\n   * @memberof Cesium3DTileFeature.prototype\n   *\n   * @type {Cesium3DTileset}\n   *\n   * @readonly\n   */\n  tileset: {\n    get: function () {\n      return this._content.tileset;\n    },\n  },\n\n  /**\n   * All objects returned by {@link Scene#pick} have a <code>primitive</code> property. This returns\n   * the tileset containing the feature.\n   *\n   * @memberof Cesium3DTileFeature.prototype\n   *\n   * @type {Cesium3DTileset}\n   *\n   * @readonly\n   */\n  primitive: {\n    get: function () {\n      return this._content.tileset;\n    },\n  },\n\n  /**\n   * @private\n   */\n  pickId: {\n    get: function () {\n      return this._content.batchTable.getPickColor(this._batchId);\n    },\n  },\n});\n\n/**\n * Returns whether the feature contains this property. This includes properties from this feature's\n * class and inherited classes when using a batch table hierarchy.\n *\n * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_batch_table_hierarchy}\n *\n * @param {String} name The case-sensitive name of the property.\n * @returns {Boolean} Whether the feature contains this property.\n */\nCesium3DTileFeature.prototype.hasProperty = function (name) {\n  return this._content.batchTable.hasProperty(this._batchId, name);\n};\n\n/**\n * Returns an array of property names for the feature. This includes properties from this feature's\n * class and inherited classes when using a batch table hierarchy.\n *\n * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_batch_table_hierarchy}\n *\n * @param {String[]} [results] An array into which to store the results.\n * @returns {String[]} The names of the feature's properties.\n */\nCesium3DTileFeature.prototype.getPropertyNames = function (results) {\n  return this._content.batchTable.getPropertyNames(this._batchId, results);\n};\n\n/**\n * Returns a copy of the value of the feature's property with the given name. This includes properties from this feature's\n * class and inherited classes when using a batch table hierarchy.\n *\n * @see {@link https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_batch_table_hierarchy}\n *\n * @param {String} name The case-sensitive name of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the feature does not have this property.\n *\n * @example\n * // Display all the properties for a feature in the console log.\n * var propertyNames = feature.getPropertyNames();\n * var length = propertyNames.length;\n * for (var i = 0; i < length; ++i) {\n *     var propertyName = propertyNames[i];\n *     console.log(propertyName + ': ' + feature.getProperty(propertyName));\n * }\n */\nCesium3DTileFeature.prototype.getProperty = function (name) {\n  return this._content.batchTable.getProperty(this._batchId, name);\n};\n\n/**\n * @private\n */\nCesium3DTileFeature.getPropertyInherited = function (content, batchId, name) {\n  var value;\n  var batchTable = content.batchTable;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(batchTable)) {\n    value = batchTable.getProperty(batchId, name);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(value)) {\n      return value;\n    }\n  }\n\n  var tileMetadata = content.tile.metadata;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(tileMetadata)) {\n    value = tileMetadata.getPropertyBySemantic(name);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(value)) {\n      return value;\n    }\n\n    value = tileMetadata.getProperty(name);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(value)) {\n      return value;\n    }\n  }\n\n  var groupMetadata = content.groupMetadata;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(groupMetadata)) {\n    value = groupMetadata.getPropertyBySemantic(name);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(value)) {\n      return value;\n    }\n\n    value = groupMetadata.getProperty(name);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(value)) {\n      return value;\n    }\n  }\n\n  var tilesetMetadata = content.tileset.metadata;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(tilesetMetadata) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(tilesetMetadata.tileset)) {\n    tilesetMetadata = tilesetMetadata.tileset;\n    value = tilesetMetadata.getPropertyBySemantic(name);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(value)) {\n      return value;\n    }\n\n    value = tilesetMetadata.getProperty(name);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(value)) {\n      return value;\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Returns a copy of the value of the feature's property with the given name.\n * If the feature is contained within a tileset that uses the\n * <code>3DTILES_metadata</code> extension, tileset, group and tile metadata is\n * inherited.\n * <p>\n * To resolve name conflicts, this method resolves names from most specific to\n * least specific by metadata granularity in the order: feature, tile, group,\n * tileset. Within each granularity, semantics are resolved first, then other\n * properties.\n * </p>\n * @param {String} name The case-sensitive name of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the feature does not have this property.\n * @private\n */\nCesium3DTileFeature.prototype.getPropertyInherited = function (name) {\n  return Cesium3DTileFeature.getPropertyInherited(\n    this._content,\n    this._batchId,\n    name\n  );\n};\n\n/**\n * Sets the value of the feature's property with the given name.\n * <p>\n * If a property with the given name doesn't exist, it is created.\n * </p>\n *\n * @param {String} name The case-sensitive name of the property.\n * @param {*} value The value of the property that will be copied.\n *\n * @exception {DeveloperError} Inherited batch table hierarchy property is read only.\n *\n * @example\n * var height = feature.getProperty('Height'); // e.g., the height of a building\n *\n * @example\n * var name = 'clicked';\n * if (feature.getProperty(name)) {\n *     console.log('already clicked');\n * } else {\n *     feature.setProperty(name, true);\n *     console.log('first click');\n * }\n */\nCesium3DTileFeature.prototype.setProperty = function (name, value) {\n  this._content.batchTable.setProperty(this._batchId, name, value);\n\n  // PERFORMANCE_IDEA: Probably overkill, but maybe only mark the tile dirty if the\n  // property is in one of the style's expressions or - if it can be done quickly -\n  // if the new property value changed the result of an expression.\n  this._content.featurePropertiesDirty = true;\n};\n\n/**\n * Returns whether the feature's class name equals <code>className</code>. Unlike {@link Cesium3DTileFeature#isClass}\n * this function only checks the feature's exact class and not inherited classes.\n * <p>\n * This function returns <code>false</code> if no batch table hierarchy is present.\n * </p>\n *\n * @param {String} className The name to check against.\n * @returns {Boolean} Whether the feature's class name equals <code>className</code>\n *\n * @private\n */\nCesium3DTileFeature.prototype.isExactClass = function (className) {\n  return this._content.batchTable.isExactClass(this._batchId, className);\n};\n\n/**\n * Returns whether the feature's class or any inherited classes are named <code>className</code>.\n * <p>\n * This function returns <code>false</code> if no batch table hierarchy is present.\n * </p>\n *\n * @param {String} className The name to check against.\n * @returns {Boolean} Whether the feature's class or inherited classes are named <code>className</code>\n *\n * @private\n */\nCesium3DTileFeature.prototype.isClass = function (className) {\n  return this._content.batchTable.isClass(this._batchId, className);\n};\n\n/**\n * Returns the feature's class name.\n * <p>\n * This function returns <code>undefined</code> if no batch table hierarchy is present.\n * </p>\n *\n * @returns {String} The feature's class name.\n *\n * @private\n */\nCesium3DTileFeature.prototype.getExactClassName = function () {\n  return this._content.batchTable.getExactClassName(this._batchId);\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Cesium3DTileFeature);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///52381\n")},79553:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82982);\n\n\n\n\n/**\n * @private\n */\nfunction Cesium3DTileFeatureTable(featureTableJson, featureTableBinary) {\n  this.json = featureTableJson;\n  this.buffer = featureTableBinary;\n  this._cachedTypedArrays = {};\n  this.featuresLength = 0;\n}\n\nfunction getTypedArrayFromBinary(\n  featureTable,\n  semantic,\n  componentType,\n  componentLength,\n  count,\n  byteOffset\n) {\n  var cachedTypedArrays = featureTable._cachedTypedArrays;\n  var typedArray = cachedTypedArrays[semantic];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(typedArray)) {\n    typedArray = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].createArrayBufferView */ .Z.createArrayBufferView(\n      componentType,\n      featureTable.buffer.buffer,\n      featureTable.buffer.byteOffset + byteOffset,\n      count * componentLength\n    );\n    cachedTypedArrays[semantic] = typedArray;\n  }\n  return typedArray;\n}\n\nfunction getTypedArrayFromArray(featureTable, semantic, componentType, array) {\n  var cachedTypedArrays = featureTable._cachedTypedArrays;\n  var typedArray = cachedTypedArrays[semantic];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(typedArray)) {\n    typedArray = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].createTypedArray */ .Z.createTypedArray(componentType, array);\n    cachedTypedArrays[semantic] = typedArray;\n  }\n  return typedArray;\n}\n\nCesium3DTileFeatureTable.prototype.getGlobalProperty = function (\n  semantic,\n  componentType,\n  componentLength\n) {\n  var jsonValue = this.json[semantic];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(jsonValue)) {\n    return undefined;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(jsonValue.byteOffset)) {\n    componentType = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(componentType, _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT);\n    componentLength = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(componentLength, 1);\n    return getTypedArrayFromBinary(\n      this,\n      semantic,\n      componentType,\n      componentLength,\n      1,\n      jsonValue.byteOffset\n    );\n  }\n\n  return jsonValue;\n};\n\nCesium3DTileFeatureTable.prototype.getPropertyArray = function (\n  semantic,\n  componentType,\n  componentLength\n) {\n  var jsonValue = this.json[semantic];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(jsonValue)) {\n    return undefined;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(jsonValue.byteOffset)) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(jsonValue.componentType)) {\n      componentType = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromName */ .Z.fromName(jsonValue.componentType);\n    }\n    return getTypedArrayFromBinary(\n      this,\n      semantic,\n      componentType,\n      componentLength,\n      this.featuresLength,\n      jsonValue.byteOffset\n    );\n  }\n\n  return getTypedArrayFromArray(this, semantic, componentType, jsonValue);\n};\n\nCesium3DTileFeatureTable.prototype.getProperty = function (\n  semantic,\n  componentType,\n  componentLength,\n  featureId,\n  result\n) {\n  var jsonValue = this.json[semantic];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(jsonValue)) {\n    return undefined;\n  }\n\n  var typedArray = this.getPropertyArray(\n    semantic,\n    componentType,\n    componentLength\n  );\n\n  if (componentLength === 1) {\n    return typedArray[featureId];\n  }\n\n  for (var i = 0; i < componentLength; ++i) {\n    result[i] = typedArray[componentLength * featureId + i];\n  }\n\n  return result;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Cesium3DTileFeatureTable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk1NTMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQTZEO0FBQ1Y7QUFDVjs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxxRUFBTztBQUNkLGlCQUFpQix1SEFBdUM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU8scUVBQU87QUFDZCxpQkFBaUIsNkdBQWtDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8scUVBQU87QUFDZDtBQUNBOztBQUVBLE1BQU0scUVBQU87QUFDYixvQkFBb0IsMEVBQVksZ0JBQWdCLHFHQUE4QjtBQUM5RSxzQkFBc0IsMEVBQVk7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxxRUFBTztBQUNkO0FBQ0E7O0FBRUEsTUFBTSxxRUFBTztBQUNiLFFBQVEscUVBQU87QUFDZixzQkFBc0IsNkZBQTBCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8scUVBQU87QUFDZDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixxQkFBcUI7QUFDdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EseURBQWUsd0JBQXdCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvQ2VzaXVtM0RUaWxlRmVhdHVyZVRhYmxlLmpzPzAzMTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbXBvbmVudERhdGF0eXBlIGZyb20gXCIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlLmpzXCI7XG5pbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuLi9Db3JlL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIENlc2l1bTNEVGlsZUZlYXR1cmVUYWJsZShmZWF0dXJlVGFibGVKc29uLCBmZWF0dXJlVGFibGVCaW5hcnkpIHtcbiAgdGhpcy5qc29uID0gZmVhdHVyZVRhYmxlSnNvbjtcbiAgdGhpcy5idWZmZXIgPSBmZWF0dXJlVGFibGVCaW5hcnk7XG4gIHRoaXMuX2NhY2hlZFR5cGVkQXJyYXlzID0ge307XG4gIHRoaXMuZmVhdHVyZXNMZW5ndGggPSAwO1xufVxuXG5mdW5jdGlvbiBnZXRUeXBlZEFycmF5RnJvbUJpbmFyeShcbiAgZmVhdHVyZVRhYmxlLFxuICBzZW1hbnRpYyxcbiAgY29tcG9uZW50VHlwZSxcbiAgY29tcG9uZW50TGVuZ3RoLFxuICBjb3VudCxcbiAgYnl0ZU9mZnNldFxuKSB7XG4gIHZhciBjYWNoZWRUeXBlZEFycmF5cyA9IGZlYXR1cmVUYWJsZS5fY2FjaGVkVHlwZWRBcnJheXM7XG4gIHZhciB0eXBlZEFycmF5ID0gY2FjaGVkVHlwZWRBcnJheXNbc2VtYW50aWNdO1xuICBpZiAoIWRlZmluZWQodHlwZWRBcnJheSkpIHtcbiAgICB0eXBlZEFycmF5ID0gQ29tcG9uZW50RGF0YXR5cGUuY3JlYXRlQXJyYXlCdWZmZXJWaWV3KFxuICAgICAgY29tcG9uZW50VHlwZSxcbiAgICAgIGZlYXR1cmVUYWJsZS5idWZmZXIuYnVmZmVyLFxuICAgICAgZmVhdHVyZVRhYmxlLmJ1ZmZlci5ieXRlT2Zmc2V0ICsgYnl0ZU9mZnNldCxcbiAgICAgIGNvdW50ICogY29tcG9uZW50TGVuZ3RoXG4gICAgKTtcbiAgICBjYWNoZWRUeXBlZEFycmF5c1tzZW1hbnRpY10gPSB0eXBlZEFycmF5O1xuICB9XG4gIHJldHVybiB0eXBlZEFycmF5O1xufVxuXG5mdW5jdGlvbiBnZXRUeXBlZEFycmF5RnJvbUFycmF5KGZlYXR1cmVUYWJsZSwgc2VtYW50aWMsIGNvbXBvbmVudFR5cGUsIGFycmF5KSB7XG4gIHZhciBjYWNoZWRUeXBlZEFycmF5cyA9IGZlYXR1cmVUYWJsZS5fY2FjaGVkVHlwZWRBcnJheXM7XG4gIHZhciB0eXBlZEFycmF5ID0gY2FjaGVkVHlwZWRBcnJheXNbc2VtYW50aWNdO1xuICBpZiAoIWRlZmluZWQodHlwZWRBcnJheSkpIHtcbiAgICB0eXBlZEFycmF5ID0gQ29tcG9uZW50RGF0YXR5cGUuY3JlYXRlVHlwZWRBcnJheShjb21wb25lbnRUeXBlLCBhcnJheSk7XG4gICAgY2FjaGVkVHlwZWRBcnJheXNbc2VtYW50aWNdID0gdHlwZWRBcnJheTtcbiAgfVxuICByZXR1cm4gdHlwZWRBcnJheTtcbn1cblxuQ2VzaXVtM0RUaWxlRmVhdHVyZVRhYmxlLnByb3RvdHlwZS5nZXRHbG9iYWxQcm9wZXJ0eSA9IGZ1bmN0aW9uIChcbiAgc2VtYW50aWMsXG4gIGNvbXBvbmVudFR5cGUsXG4gIGNvbXBvbmVudExlbmd0aFxuKSB7XG4gIHZhciBqc29uVmFsdWUgPSB0aGlzLmpzb25bc2VtYW50aWNdO1xuICBpZiAoIWRlZmluZWQoanNvblZhbHVlKSkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAoZGVmaW5lZChqc29uVmFsdWUuYnl0ZU9mZnNldCkpIHtcbiAgICBjb21wb25lbnRUeXBlID0gZGVmYXVsdFZhbHVlKGNvbXBvbmVudFR5cGUsIENvbXBvbmVudERhdGF0eXBlLlVOU0lHTkVEX0lOVCk7XG4gICAgY29tcG9uZW50TGVuZ3RoID0gZGVmYXVsdFZhbHVlKGNvbXBvbmVudExlbmd0aCwgMSk7XG4gICAgcmV0dXJuIGdldFR5cGVkQXJyYXlGcm9tQmluYXJ5KFxuICAgICAgdGhpcyxcbiAgICAgIHNlbWFudGljLFxuICAgICAgY29tcG9uZW50VHlwZSxcbiAgICAgIGNvbXBvbmVudExlbmd0aCxcbiAgICAgIDEsXG4gICAgICBqc29uVmFsdWUuYnl0ZU9mZnNldFxuICAgICk7XG4gIH1cblxuICByZXR1cm4ganNvblZhbHVlO1xufTtcblxuQ2VzaXVtM0RUaWxlRmVhdHVyZVRhYmxlLnByb3RvdHlwZS5nZXRQcm9wZXJ0eUFycmF5ID0gZnVuY3Rpb24gKFxuICBzZW1hbnRpYyxcbiAgY29tcG9uZW50VHlwZSxcbiAgY29tcG9uZW50TGVuZ3RoXG4pIHtcbiAgdmFyIGpzb25WYWx1ZSA9IHRoaXMuanNvbltzZW1hbnRpY107XG4gIGlmICghZGVmaW5lZChqc29uVmFsdWUpKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmIChkZWZpbmVkKGpzb25WYWx1ZS5ieXRlT2Zmc2V0KSkge1xuICAgIGlmIChkZWZpbmVkKGpzb25WYWx1ZS5jb21wb25lbnRUeXBlKSkge1xuICAgICAgY29tcG9uZW50VHlwZSA9IENvbXBvbmVudERhdGF0eXBlLmZyb21OYW1lKGpzb25WYWx1ZS5jb21wb25lbnRUeXBlKTtcbiAgICB9XG4gICAgcmV0dXJuIGdldFR5cGVkQXJyYXlGcm9tQmluYXJ5KFxuICAgICAgdGhpcyxcbiAgICAgIHNlbWFudGljLFxuICAgICAgY29tcG9uZW50VHlwZSxcbiAgICAgIGNvbXBvbmVudExlbmd0aCxcbiAgICAgIHRoaXMuZmVhdHVyZXNMZW5ndGgsXG4gICAgICBqc29uVmFsdWUuYnl0ZU9mZnNldFxuICAgICk7XG4gIH1cblxuICByZXR1cm4gZ2V0VHlwZWRBcnJheUZyb21BcnJheSh0aGlzLCBzZW1hbnRpYywgY29tcG9uZW50VHlwZSwganNvblZhbHVlKTtcbn07XG5cbkNlc2l1bTNEVGlsZUZlYXR1cmVUYWJsZS5wcm90b3R5cGUuZ2V0UHJvcGVydHkgPSBmdW5jdGlvbiAoXG4gIHNlbWFudGljLFxuICBjb21wb25lbnRUeXBlLFxuICBjb21wb25lbnRMZW5ndGgsXG4gIGZlYXR1cmVJZCxcbiAgcmVzdWx0XG4pIHtcbiAgdmFyIGpzb25WYWx1ZSA9IHRoaXMuanNvbltzZW1hbnRpY107XG4gIGlmICghZGVmaW5lZChqc29uVmFsdWUpKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHZhciB0eXBlZEFycmF5ID0gdGhpcy5nZXRQcm9wZXJ0eUFycmF5KFxuICAgIHNlbWFudGljLFxuICAgIGNvbXBvbmVudFR5cGUsXG4gICAgY29tcG9uZW50TGVuZ3RoXG4gICk7XG5cbiAgaWYgKGNvbXBvbmVudExlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiB0eXBlZEFycmF5W2ZlYXR1cmVJZF07XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbXBvbmVudExlbmd0aDsgKytpKSB7XG4gICAgcmVzdWx0W2ldID0gdHlwZWRBcnJheVtjb21wb25lbnRMZW5ndGggKiBmZWF0dXJlSWQgKyBpXTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0IGRlZmF1bHQgQ2VzaXVtM0RUaWxlRmVhdHVyZVRhYmxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///79553\n')}}]);