"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[3935],{34380:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51688);\n/* harmony import */ var _Core_clone_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(83856);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(59947);\n/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(8182);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(12572);\n/* harmony import */ var _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(74938);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(96037);\n/* harmony import */ var _Core_Geometry_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(82408);\n/* harmony import */ var _Core_GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(13616);\n/* harmony import */ var _Core_GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(56652);\n/* harmony import */ var _Core_GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(87379);\n/* harmony import */ var _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(84935);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Plane_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(7749);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(9407);\n/* harmony import */ var _Core_subdivideArray_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(24072);\n/* harmony import */ var _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(2819);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(20521);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(46588);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(18192);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(13222);\n/* harmony import */ var _BatchTable_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(7164);\n/* harmony import */ var _CullFace_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(71593);\n/* harmony import */ var _DepthFunction_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(7976);\n/* harmony import */ var _PrimitivePipeline_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(1764);\n/* harmony import */ var _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(88736);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(89917);\n/* harmony import */ var _ShadowMode_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(34125);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A primitive represents geometry in the {@link Scene}.  The geometry can be from a single {@link GeometryInstance}\n * as shown in example 1 below, or from an array of instances, even if the geometry is from different\n * geometry types, e.g., an {@link RectangleGeometry} and an {@link EllipsoidGeometry} as shown in Code Example 2.\n * <p>\n * A primitive combines geometry instances with an {@link Appearance} that describes the full shading, including\n * {@link Material} and {@link RenderState}.  Roughly, the geometry instance defines the structure and placement,\n * and the appearance defines the visual characteristics.  Decoupling geometry and appearance allows us to mix\n * and match most of them and add a new geometry or appearance independently of each other.\n * </p>\n * <p>\n * Combining multiple instances into one primitive is called batching, and significantly improves performance for static data.\n * Instances can be individually picked; {@link Scene#pick} returns their {@link GeometryInstance#id}.  Using\n * per-instance appearances like {@link PerInstanceColorAppearance}, each instance can also have a unique color.\n * </p>\n * <p>\n * {@link Geometry} can either be created and batched on a web worker or the main thread. The first two examples\n * show geometry that will be created on a web worker by using the descriptions of the geometry. The third example\n * shows how to create the geometry on the main thread by explicitly calling the <code>createGeometry</code> method.\n * </p>\n *\n * @alias Primitive\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {GeometryInstance[]|GeometryInstance} [options.geometryInstances] The geometry instances - or a single geometry instance - to render.\n * @param {Appearance} [options.appearance] The appearance used to render the primitive.\n * @param {Appearance} [options.depthFailAppearance] The appearance used to shade this primitive when it fails the depth test.\n * @param {Boolean} [options.show=true] Determines if this primitive will be shown.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 transformation matrix that transforms the primitive (all geometry instances) from model to world coordinates.\n * @param {Boolean} [options.vertexCacheOptimize=false] When <code>true</code>, geometry vertices are optimized for the pre and post-vertex-shader caches.\n * @param {Boolean} [options.interleave=false] When <code>true</code>, geometry vertex attributes are interleaved, which can slightly improve rendering performance but increases load time.\n * @param {Boolean} [options.compressVertices=true] When <code>true</code>, the geometry vertices are compressed, which will save memory.\n * @param {Boolean} [options.releaseGeometryInstances=true] When <code>true</code>, the primitive does not keep a reference to the input <code>geometryInstances</code> to save memory.\n * @param {Boolean} [options.allowPicking=true] When <code>true</code>, each geometry instance will only be pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n * @param {Boolean} [options.cull=true] When <code>true</code>, the renderer frustum culls and horizon culls the primitive\'s commands based on their bounding volume.  Set this to <code>false</code> for a small performance gain if you are manually culling the primitive.\n * @param {Boolean} [options.asynchronous=true] Determines if the primitive will be created asynchronously or block until ready.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Determines if this primitive\'s commands\' bounding spheres are shown.\n * @param {ShadowMode} [options.shadows=ShadowMode.DISABLED] Determines whether this primitive casts or receives shadows from light sources.\n *\n * @example\n * // 1. Draw a translucent ellipse on the surface with a checkerboard pattern\n * var instance = new Cesium.GeometryInstance({\n *   geometry : new Cesium.EllipseGeometry({\n *       center : Cesium.Cartesian3.fromDegrees(-100.0, 20.0),\n *       semiMinorAxis : 500000.0,\n *       semiMajorAxis : 1000000.0,\n *       rotation : Cesium.Math.PI_OVER_FOUR,\n *       vertexFormat : Cesium.VertexFormat.POSITION_AND_ST\n *   }),\n *   id : \'object returned when this instance is picked and to get/set per-instance attributes\'\n * });\n * scene.primitives.add(new Cesium.Primitive({\n *   geometryInstances : instance,\n *   appearance : new Cesium.EllipsoidSurfaceAppearance({\n *     material : Cesium.Material.fromType(\'Checkerboard\')\n *   })\n * }));\n *\n * @example\n * // 2. Draw different instances each with a unique color\n * var rectangleInstance = new Cesium.GeometryInstance({\n *   geometry : new Cesium.RectangleGeometry({\n *     rectangle : Cesium.Rectangle.fromDegrees(-140.0, 30.0, -100.0, 40.0),\n *     vertexFormat : Cesium.PerInstanceColorAppearance.VERTEX_FORMAT\n *   }),\n *   id : \'rectangle\',\n *   attributes : {\n *     color : new Cesium.ColorGeometryInstanceAttribute(0.0, 1.0, 1.0, 0.5)\n *   }\n * });\n * var ellipsoidInstance = new Cesium.GeometryInstance({\n *   geometry : new Cesium.EllipsoidGeometry({\n *     radii : new Cesium.Cartesian3(500000.0, 500000.0, 1000000.0),\n *     vertexFormat : Cesium.VertexFormat.POSITION_AND_NORMAL\n *   }),\n *   modelMatrix : Cesium.Matrix4.multiplyByTranslation(Cesium.Transforms.eastNorthUpToFixedFrame(\n *     Cesium.Cartesian3.fromDegrees(-95.59777, 40.03883)), new Cesium.Cartesian3(0.0, 0.0, 500000.0), new Cesium.Matrix4()),\n *   id : \'ellipsoid\',\n *   attributes : {\n *     color : Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.AQUA)\n *   }\n * });\n * scene.primitives.add(new Cesium.Primitive({\n *   geometryInstances : [rectangleInstance, ellipsoidInstance],\n *   appearance : new Cesium.PerInstanceColorAppearance()\n * }));\n *\n * @example\n * // 3. Create the geometry on the main thread.\n * scene.primitives.add(new Cesium.Primitive({\n *   geometryInstances : new Cesium.GeometryInstance({\n *     geometry : Cesium.EllipsoidGeometry.createGeometry(new Cesium.EllipsoidGeometry({\n *       radii : new Cesium.Cartesian3(500000.0, 500000.0, 1000000.0),\n *       vertexFormat : Cesium.VertexFormat.POSITION_AND_NORMAL\n *     })),\n *     modelMatrix : Cesium.Matrix4.multiplyByTranslation(Cesium.Transforms.eastNorthUpToFixedFrame(\n *       Cesium.Cartesian3.fromDegrees(-95.59777, 40.03883)), new Cesium.Cartesian3(0.0, 0.0, 500000.0), new Cesium.Matrix4()),\n *     id : \'ellipsoid\',\n *     attributes : {\n *       color : Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.AQUA)\n *     }\n *   }),\n *   appearance : new Cesium.PerInstanceColorAppearance(),\n *   asynchronous : false\n * }));\n *\n * @see GeometryInstance\n * @see Appearance\n * @see ClassificationPrimitive\n * @see GroundPrimitive\n */\nfunction Primitive(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  /**\n   * The geometry instances rendered with this primitive.  This may\n   * be <code>undefined</code> if <code>options.releaseGeometryInstances</code>\n   * is <code>true</code> when the primitive is constructed.\n   * <p>\n   * Changing this property after the primitive is rendered has no effect.\n   * </p>\n   *\n   * @readonly\n   * @type GeometryInstance[]|GeometryInstance\n   *\n   * @default undefined\n   */\n  this.geometryInstances = options.geometryInstances;\n\n  /**\n   * The {@link Appearance} used to shade this primitive. Each geometry\n   * instance is shaded with the same appearance.  Some appearances, like\n   * {@link PerInstanceColorAppearance} allow giving each instance unique\n   * properties.\n   *\n   * @type Appearance\n   *\n   * @default undefined\n   */\n  this.appearance = options.appearance;\n  this._appearance = undefined;\n  this._material = undefined;\n\n  /**\n   * The {@link Appearance} used to shade this primitive when it fails the depth test. Each geometry\n   * instance is shaded with the same appearance.  Some appearances, like\n   * {@link PerInstanceColorAppearance} allow giving each instance unique\n   * properties.\n   *\n   * <p>\n   * When using an appearance that requires a color attribute, like PerInstanceColorAppearance,\n   * add a depthFailColor per-instance attribute instead.\n   * </p>\n   *\n   * <p>\n   * Requires the EXT_frag_depth WebGL extension to render properly. If the extension is not supported,\n   * there may be artifacts.\n   * </p>\n   * @type Appearance\n   *\n   * @default undefined\n   */\n  this.depthFailAppearance = options.depthFailAppearance;\n  this._depthFailAppearance = undefined;\n  this._depthFailMaterial = undefined;\n\n  /**\n   * The 4x4 transformation matrix that transforms the primitive (all geometry instances) from model to world coordinates.\n   * When this is the identity matrix, the primitive is drawn in world coordinates, i.e., Earth\'s WGS84 coordinates.\n   * Local reference frames can be used by providing a different transformation matrix, like that returned\n   * by {@link Transforms.eastNorthUpToFixedFrame}.\n   *\n   * <p>\n   * This property is only supported in 3D mode.\n   * </p>\n   *\n   * @type Matrix4\n   *\n   * @default Matrix4.IDENTITY\n   *\n   * @example\n   * var origin = Cesium.Cartesian3.fromDegrees(-95.0, 40.0, 200000.0);\n   * p.modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(origin);\n   */\n  this.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].IDENTITY */ .Z.IDENTITY)\n  );\n  this._modelMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n\n  /**\n   * Determines if the primitive will be shown.  This affects all geometry\n   * instances in the primitive.\n   *\n   * @type Boolean\n   *\n   * @default true\n   */\n  this.show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.show, true);\n\n  this._vertexCacheOptimize = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.vertexCacheOptimize, false);\n  this._interleave = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.interleave, false);\n  this._releaseGeometryInstances = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n    options.releaseGeometryInstances,\n    true\n  );\n  this._allowPicking = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.allowPicking, true);\n  this._asynchronous = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.asynchronous, true);\n  this._compressVertices = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.compressVertices, true);\n\n  /**\n   * When <code>true</code>, the renderer frustum culls and horizon culls the primitive\'s commands\n   * based on their bounding volume.  Set this to <code>false</code> for a small performance gain\n   * if you are manually culling the primitive.\n   *\n   * @type {Boolean}\n   *\n   * @default true\n   */\n  this.cull = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.cull, true);\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the primitive.\n   * </p>\n   *\n   * @type {Boolean}\n   *\n   * @default false\n   */\n  this.debugShowBoundingVolume = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n    options.debugShowBoundingVolume,\n    false\n  );\n\n  /**\n   * @private\n   */\n  this.rtcCenter = options.rtcCenter;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this.rtcCenter) &&\n    (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this.geometryInstances) ||\n      (Array.isArray(this.geometryInstances) &&\n        this.geometryInstances.length !== 1))\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n      "Relative-to-center rendering only supports one geometry instance."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  /**\n   * Determines whether this primitive casts or receives shadows from light sources.\n   *\n   * @type {ShadowMode}\n   *\n   * @default ShadowMode.DISABLED\n   */\n  this.shadows = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.shadows, _ShadowMode_js__WEBPACK_IMPORTED_MODULE_39__/* ["default"].DISABLED */ .Z.DISABLED);\n\n  this._translucent = undefined;\n\n  this._state = _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].READY */ .Z.READY;\n  this._geometries = [];\n  this._error = undefined;\n  this._numberOfInstances = 0;\n\n  this._boundingSpheres = [];\n  this._boundingSphereWC = [];\n  this._boundingSphereCV = [];\n  this._boundingSphere2D = [];\n  this._boundingSphereMorph = [];\n  this._perInstanceAttributeCache = [];\n  this._instanceIds = [];\n  this._lastPerInstanceAttributeIndex = 0;\n\n  this._va = [];\n  this._attributeLocations = undefined;\n  this._primitiveType = undefined;\n\n  this._frontFaceRS = undefined;\n  this._backFaceRS = undefined;\n  this._sp = undefined;\n\n  this._depthFailAppearance = undefined;\n  this._spDepthFail = undefined;\n  this._frontFaceDepthFailRS = undefined;\n  this._backFaceDepthFailRS = undefined;\n\n  this._pickIds = [];\n\n  this._colorCommands = [];\n  this._pickCommands = [];\n\n  this._createBoundingVolumeFunction = options._createBoundingVolumeFunction;\n  this._createRenderStatesFunction = options._createRenderStatesFunction;\n  this._createShaderProgramFunction = options._createShaderProgramFunction;\n  this._createCommandsFunction = options._createCommandsFunction;\n  this._updateAndQueueCommandsFunction =\n    options._updateAndQueueCommandsFunction;\n\n  this._createPickOffsets = options._createPickOffsets;\n  this._pickOffsets = undefined;\n\n  this._createGeometryResults = undefined;\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].defer */ .Z.defer();\n\n  this._batchTable = undefined;\n  this._batchTableAttributeIndices = undefined;\n  this._offsetInstanceExtend = undefined;\n  this._batchTableOffsetAttribute2DIndex = undefined;\n  this._batchTableOffsetsUpdated = false;\n  this._instanceBoundingSpheres = undefined;\n  this._instanceBoundingSpheresCV = undefined;\n  this._tempBoundingSpheres = undefined;\n  this._recomputeBoundingSpheres = false;\n  this._batchTableBoundingSpheresUpdated = false;\n  this._batchTableBoundingSphereAttributeIndices = undefined;\n}\n\nObject.defineProperties(Primitive.prototype, {\n  /**\n   * When <code>true</code>, geometry vertices are optimized for the pre and post-vertex-shader caches.\n   *\n   * @memberof Primitive.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  vertexCacheOptimize: {\n    get: function () {\n      return this._vertexCacheOptimize;\n    },\n  },\n\n  /**\n   * Determines if geometry vertex attributes are interleaved, which can slightly improve rendering performance.\n   *\n   * @memberof Primitive.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  interleave: {\n    get: function () {\n      return this._interleave;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the primitive does not keep a reference to the input <code>geometryInstances</code> to save memory.\n   *\n   * @memberof Primitive.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  releaseGeometryInstances: {\n    get: function () {\n      return this._releaseGeometryInstances;\n    },\n  },\n\n  /**\n   * When <code>true</code>, each geometry instance will only be pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.         *\n   *\n   * @memberof Primitive.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  allowPicking: {\n    get: function () {\n      return this._allowPicking;\n    },\n  },\n\n  /**\n   * Determines if the geometry instances will be created and batched on a web worker.\n   *\n   * @memberof Primitive.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  asynchronous: {\n    get: function () {\n      return this._asynchronous;\n    },\n  },\n\n  /**\n   * When <code>true</code>, geometry vertices are compressed, which will save memory.\n   *\n   * @memberof Primitive.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  compressVertices: {\n    get: function () {\n      return this._compressVertices;\n    },\n  },\n\n  /**\n   * Determines if the primitive is complete and ready to render.  If this property is\n   * true, the primitive will be rendered the next time that {@link Primitive#update}\n   * is called.\n   *\n   * @memberof Primitive.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves when the primitive is ready to render.\n   * @memberof Primitive.prototype\n   * @type {Promise.<Primitive>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n});\n\nfunction getCommonPerInstanceAttributeNames(instances) {\n  var length = instances.length;\n\n  var attributesInAllInstances = [];\n  var attributes0 = instances[0].attributes;\n  var name;\n\n  for (name in attributes0) {\n    if (attributes0.hasOwnProperty(name) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(attributes0[name])) {\n      var attribute = attributes0[name];\n      var inAllInstances = true;\n\n      // Does this same attribute exist in all instances?\n      for (var i = 1; i < length; ++i) {\n        var otherAttribute = instances[i].attributes[name];\n\n        if (\n          !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(otherAttribute) ||\n          attribute.componentDatatype !== otherAttribute.componentDatatype ||\n          attribute.componentsPerAttribute !==\n            otherAttribute.componentsPerAttribute ||\n          attribute.normalize !== otherAttribute.normalize\n        ) {\n          inAllInstances = false;\n          break;\n        }\n      }\n\n      if (inAllInstances) {\n        attributesInAllInstances.push(name);\n      }\n    }\n  }\n\n  return attributesInAllInstances;\n}\n\nvar scratchGetAttributeCartesian2 = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchGetAttributeCartesian3 = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchGetAttributeCartesian4 = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nfunction getAttributeValue(value) {\n  var componentsPerAttribute = value.length;\n  if (componentsPerAttribute === 1) {\n    return value[0];\n  } else if (componentsPerAttribute === 2) {\n    return _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].unpack */ .Z.unpack(value, 0, scratchGetAttributeCartesian2);\n  } else if (componentsPerAttribute === 3) {\n    return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(value, 0, scratchGetAttributeCartesian3);\n  } else if (componentsPerAttribute === 4) {\n    return _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(value, 0, scratchGetAttributeCartesian4);\n  }\n}\n\nfunction createBatchTable(primitive, context) {\n  var geometryInstances = primitive.geometryInstances;\n  var instances = Array.isArray(geometryInstances)\n    ? geometryInstances\n    : [geometryInstances];\n  var numberOfInstances = instances.length;\n  if (numberOfInstances === 0) {\n    return;\n  }\n\n  var names = getCommonPerInstanceAttributeNames(instances);\n  var length = names.length;\n\n  var attributes = [];\n  var attributeIndices = {};\n  var boundingSphereAttributeIndices = {};\n  var offset2DIndex;\n\n  var firstInstance = instances[0];\n  var instanceAttributes = firstInstance.attributes;\n\n  var i;\n  var name;\n  var attribute;\n\n  for (i = 0; i < length; ++i) {\n    name = names[i];\n    attribute = instanceAttributes[name];\n\n    attributeIndices[name] = i;\n    attributes.push({\n      functionName: "czm_batchTable_" + name,\n      componentDatatype: attribute.componentDatatype,\n      componentsPerAttribute: attribute.componentsPerAttribute,\n      normalize: attribute.normalize,\n    });\n  }\n\n  if (names.indexOf("distanceDisplayCondition") !== -1) {\n    attributes.push(\n      {\n        functionName: "czm_batchTable_boundingSphereCenter3DHigh",\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        functionName: "czm_batchTable_boundingSphereCenter3DLow",\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        functionName: "czm_batchTable_boundingSphereCenter2DHigh",\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        functionName: "czm_batchTable_boundingSphereCenter2DLow",\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        functionName: "czm_batchTable_boundingSphereRadius",\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 1,\n      }\n    );\n    boundingSphereAttributeIndices.center3DHigh = attributes.length - 5;\n    boundingSphereAttributeIndices.center3DLow = attributes.length - 4;\n    boundingSphereAttributeIndices.center2DHigh = attributes.length - 3;\n    boundingSphereAttributeIndices.center2DLow = attributes.length - 2;\n    boundingSphereAttributeIndices.radius = attributes.length - 1;\n  }\n\n  if (names.indexOf("offset") !== -1) {\n    attributes.push({\n      functionName: "czm_batchTable_offset2D",\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n    });\n    offset2DIndex = attributes.length - 1;\n  }\n\n  attributes.push({\n    functionName: "czm_batchTable_pickColor",\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n    componentsPerAttribute: 4,\n    normalize: true,\n  });\n\n  var attributesLength = attributes.length;\n  var batchTable = new _BatchTable_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"] */ .Z(context, attributes, numberOfInstances);\n\n  for (i = 0; i < numberOfInstances; ++i) {\n    var instance = instances[i];\n    instanceAttributes = instance.attributes;\n\n    for (var j = 0; j < length; ++j) {\n      name = names[j];\n      attribute = instanceAttributes[name];\n      var value = getAttributeValue(attribute.value);\n      var attributeIndex = attributeIndices[name];\n      batchTable.setBatchedAttribute(i, attributeIndex, value);\n    }\n\n    var pickObject = {\n      primitive: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(instance.pickPrimitive, primitive),\n    };\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(instance.id)) {\n      pickObject.id = instance.id;\n    }\n\n    var pickId = context.createPickId(pickObject);\n    primitive._pickIds.push(pickId);\n\n    var pickColor = pickId.color;\n    var color = scratchGetAttributeCartesian4;\n    color.x = _Core_Color_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.red);\n    color.y = _Core_Color_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.green);\n    color.z = _Core_Color_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.blue);\n    color.w = _Core_Color_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.alpha);\n\n    batchTable.setBatchedAttribute(i, attributesLength - 1, color);\n  }\n\n  primitive._batchTable = batchTable;\n  primitive._batchTableAttributeIndices = attributeIndices;\n  primitive._batchTableBoundingSphereAttributeIndices = boundingSphereAttributeIndices;\n  primitive._batchTableOffsetAttribute2DIndex = offset2DIndex;\n}\n\nfunction cloneAttribute(attribute) {\n  var clonedValues;\n  if (Array.isArray(attribute.values)) {\n    clonedValues = attribute.values.slice(0);\n  } else {\n    clonedValues = new attribute.values.constructor(attribute.values);\n  }\n  return new _Core_GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n    componentDatatype: attribute.componentDatatype,\n    componentsPerAttribute: attribute.componentsPerAttribute,\n    normalize: attribute.normalize,\n    values: clonedValues,\n  });\n}\n\nfunction cloneGeometry(geometry) {\n  var attributes = geometry.attributes;\n  var newAttributes = new _Core_GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z();\n  for (var property in attributes) {\n    if (attributes.hasOwnProperty(property) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(attributes[property])) {\n      newAttributes[property] = cloneAttribute(attributes[property]);\n    }\n  }\n\n  var indices;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(geometry.indices)) {\n    var sourceValues = geometry.indices;\n    if (Array.isArray(sourceValues)) {\n      indices = sourceValues.slice(0);\n    } else {\n      indices = new sourceValues.constructor(sourceValues);\n    }\n  }\n\n  return new _Core_Geometry_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    attributes: newAttributes,\n    indices: indices,\n    primitiveType: geometry.primitiveType,\n    boundingSphere: _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(geometry.boundingSphere),\n  });\n}\n\nfunction cloneInstance(instance, geometry) {\n  return {\n    geometry: geometry,\n    attributes: instance.attributes,\n    modelMatrix: _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].clone */ .Z.clone(instance.modelMatrix),\n    pickPrimitive: instance.pickPrimitive,\n    id: instance.id,\n  };\n}\n\nvar positionRegex = /attribute\\s+vec(?:3|4)\\s+(.*)3DHigh;/g;\n\nPrimitive._modifyShaderPosition = function (\n  primitive,\n  vertexShaderSource,\n  scene3DOnly\n) {\n  var match;\n\n  var forwardDecl = "";\n  var attributes = "";\n  var computeFunctions = "";\n\n  while ((match = positionRegex.exec(vertexShaderSource)) !== null) {\n    var name = match[1];\n\n    var functionName =\n      "vec4 czm_compute" + name[0].toUpperCase() + name.substr(1) + "()";\n\n    // Don\'t forward-declare czm_computePosition because computePosition.glsl already does.\n    if (functionName !== "vec4 czm_computePosition()") {\n      forwardDecl += functionName + ";\\n";\n    }\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive.rtcCenter)) {\n      // Use GPU RTE\n      if (!scene3DOnly) {\n        attributes +=\n          "attribute vec3 " +\n          name +\n          "2DHigh;\\n" +\n          "attribute vec3 " +\n          name +\n          "2DLow;\\n";\n\n        computeFunctions +=\n          functionName +\n          "\\n" +\n          "{\\n" +\n          "    vec4 p;\\n" +\n          "    if (czm_morphTime == 1.0)\\n" +\n          "    {\\n" +\n          "        p = czm_translateRelativeToEye(" +\n          name +\n          "3DHigh, " +\n          name +\n          "3DLow);\\n" +\n          "    }\\n" +\n          "    else if (czm_morphTime == 0.0)\\n" +\n          "    {\\n" +\n          "        p = czm_translateRelativeToEye(" +\n          name +\n          "2DHigh.zxy, " +\n          name +\n          "2DLow.zxy);\\n" +\n          "    }\\n" +\n          "    else\\n" +\n          "    {\\n" +\n          "        p = czm_columbusViewMorph(\\n" +\n          "                czm_translateRelativeToEye(" +\n          name +\n          "2DHigh.zxy, " +\n          name +\n          "2DLow.zxy),\\n" +\n          "                czm_translateRelativeToEye(" +\n          name +\n          "3DHigh, " +\n          name +\n          "3DLow),\\n" +\n          "                czm_morphTime);\\n" +\n          "    }\\n" +\n          "    return p;\\n" +\n          "}\\n\\n";\n      } else {\n        computeFunctions +=\n          functionName +\n          "\\n" +\n          "{\\n" +\n          "    return czm_translateRelativeToEye(" +\n          name +\n          "3DHigh, " +\n          name +\n          "3DLow);\\n" +\n          "}\\n\\n";\n      }\n    } else {\n      // Use RTC\n      vertexShaderSource = vertexShaderSource.replace(\n        /attribute\\s+vec(?:3|4)\\s+position3DHigh;/g,\n        ""\n      );\n      vertexShaderSource = vertexShaderSource.replace(\n        /attribute\\s+vec(?:3|4)\\s+position3DLow;/g,\n        ""\n      );\n\n      forwardDecl += "uniform mat4 u_modifiedModelView;\\n";\n      attributes += "attribute vec4 position;\\n";\n\n      computeFunctions +=\n        functionName +\n        "\\n" +\n        "{\\n" +\n        "    return u_modifiedModelView * position;\\n" +\n        "}\\n\\n";\n\n      vertexShaderSource = vertexShaderSource.replace(\n        /czm_modelViewRelativeToEye\\s+\\*\\s+/g,\n        ""\n      );\n      vertexShaderSource = vertexShaderSource.replace(\n        /czm_modelViewProjectionRelativeToEye/g,\n        "czm_projection"\n      );\n    }\n  }\n\n  return [forwardDecl, attributes, vertexShaderSource, computeFunctions].join(\n    "\\n"\n  );\n};\n\nPrimitive._appendShowToShader = function (primitive, vertexShaderSource) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._batchTableAttributeIndices.show)) {\n    return vertexShaderSource;\n  }\n\n  var renamedVS = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].replaceMain */ .Z.replaceMain(\n    vertexShaderSource,\n    "czm_non_show_main"\n  );\n  var showMain =\n    "void main() \\n" +\n    "{ \\n" +\n    "    czm_non_show_main(); \\n" +\n    "    gl_Position *= czm_batchTable_show(batchId); \\n" +\n    "}";\n\n  return renamedVS + "\\n" + showMain;\n};\n\nPrimitive._updateColorAttribute = function (\n  primitive,\n  vertexShaderSource,\n  isDepthFail\n) {\n  // some appearances have a color attribute for per vertex color.\n  // only remove if color is a per instance attribute.\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._batchTableAttributeIndices.color) &&\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._batchTableAttributeIndices.depthFailColor)\n  ) {\n    return vertexShaderSource;\n  }\n\n  if (vertexShaderSource.search(/attribute\\s+vec4\\s+color;/g) === -1) {\n    return vertexShaderSource;\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    isDepthFail &&\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._batchTableAttributeIndices.depthFailColor)\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n      "A depthFailColor per-instance attribute is required when using a depth fail appearance that uses a color attribute."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var modifiedVS = vertexShaderSource;\n  modifiedVS = modifiedVS.replace(/attribute\\s+vec4\\s+color;/g, "");\n  if (!isDepthFail) {\n    modifiedVS = modifiedVS.replace(\n      /(\\b)color(\\b)/g,\n      "$1czm_batchTable_color(batchId)$2"\n    );\n  } else {\n    modifiedVS = modifiedVS.replace(\n      /(\\b)color(\\b)/g,\n      "$1czm_batchTable_depthFailColor(batchId)$2"\n    );\n  }\n  return modifiedVS;\n};\n\nfunction appendPickToVertexShader(source) {\n  var renamedVS = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].replaceMain */ .Z.replaceMain(source, "czm_non_pick_main");\n  var pickMain =\n    "varying vec4 v_pickColor; \\n" +\n    "void main() \\n" +\n    "{ \\n" +\n    "    czm_non_pick_main(); \\n" +\n    "    v_pickColor = czm_batchTable_pickColor(batchId); \\n" +\n    "}";\n\n  return renamedVS + "\\n" + pickMain;\n}\n\nfunction appendPickToFragmentShader(source) {\n  return "varying vec4 v_pickColor;\\n" + source;\n}\n\nPrimitive._updatePickColorAttribute = function (source) {\n  var vsPick = source.replace(/attribute\\s+vec4\\s+pickColor;/g, "");\n  vsPick = vsPick.replace(\n    /(\\b)pickColor(\\b)/g,\n    "$1czm_batchTable_pickColor(batchId)$2"\n  );\n  return vsPick;\n};\n\nPrimitive._appendOffsetToShader = function (primitive, vertexShaderSource) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._batchTableAttributeIndices.offset)) {\n    return vertexShaderSource;\n  }\n\n  var attr = "attribute float batchId;\\n";\n  attr += "attribute float applyOffset;";\n  var modifiedShader = vertexShaderSource.replace(\n    /attribute\\s+float\\s+batchId;/g,\n    attr\n  );\n\n  var str = "vec4 $1 = czm_computePosition();\\n";\n  str += "    if (czm_sceneMode == czm_sceneMode3D)\\n";\n  str += "    {\\n";\n  str +=\n    "        $1 = $1 + vec4(czm_batchTable_offset(batchId) * applyOffset, 0.0);";\n  str += "    }\\n";\n  str += "    else\\n";\n  str += "    {\\n";\n  str +=\n    "        $1 = $1 + vec4(czm_batchTable_offset2D(batchId) * applyOffset, 0.0);";\n  str += "    }\\n";\n  modifiedShader = modifiedShader.replace(\n    /vec4\\s+([A-Za-z0-9_]+)\\s+=\\s+czm_computePosition\\(\\);/g,\n    str\n  );\n  return modifiedShader;\n};\n\nPrimitive._appendDistanceDisplayConditionToShader = function (\n  primitive,\n  vertexShaderSource,\n  scene3DOnly\n) {\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._batchTableAttributeIndices.distanceDisplayCondition)\n  ) {\n    return vertexShaderSource;\n  }\n\n  var renamedVS = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].replaceMain */ .Z.replaceMain(\n    vertexShaderSource,\n    "czm_non_distanceDisplayCondition_main"\n  );\n  var distanceDisplayConditionMain =\n    "void main() \\n" +\n    "{ \\n" +\n    "    czm_non_distanceDisplayCondition_main(); \\n" +\n    "    vec2 distanceDisplayCondition = czm_batchTable_distanceDisplayCondition(batchId);\\n" +\n    "    vec3 boundingSphereCenter3DHigh = czm_batchTable_boundingSphereCenter3DHigh(batchId);\\n" +\n    "    vec3 boundingSphereCenter3DLow = czm_batchTable_boundingSphereCenter3DLow(batchId);\\n" +\n    "    float boundingSphereRadius = czm_batchTable_boundingSphereRadius(batchId);\\n";\n\n  if (!scene3DOnly) {\n    distanceDisplayConditionMain +=\n      "    vec3 boundingSphereCenter2DHigh = czm_batchTable_boundingSphereCenter2DHigh(batchId);\\n" +\n      "    vec3 boundingSphereCenter2DLow = czm_batchTable_boundingSphereCenter2DLow(batchId);\\n" +\n      "    vec4 centerRTE;\\n" +\n      "    if (czm_morphTime == 1.0)\\n" +\n      "    {\\n" +\n      "        centerRTE = czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow);\\n" +\n      "    }\\n" +\n      "    else if (czm_morphTime == 0.0)\\n" +\n      "    {\\n" +\n      "        centerRTE = czm_translateRelativeToEye(boundingSphereCenter2DHigh.zxy, boundingSphereCenter2DLow.zxy);\\n" +\n      "    }\\n" +\n      "    else\\n" +\n      "    {\\n" +\n      "        centerRTE = czm_columbusViewMorph(\\n" +\n      "                czm_translateRelativeToEye(boundingSphereCenter2DHigh.zxy, boundingSphereCenter2DLow.zxy),\\n" +\n      "                czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow),\\n" +\n      "                czm_morphTime);\\n" +\n      "    }\\n";\n  } else {\n    distanceDisplayConditionMain +=\n      "    vec4 centerRTE = czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow);\\n";\n  }\n\n  distanceDisplayConditionMain +=\n    "    float radiusSq = boundingSphereRadius * boundingSphereRadius; \\n" +\n    "    float distanceSq; \\n" +\n    "    if (czm_sceneMode == czm_sceneMode2D) \\n" +\n    "    { \\n" +\n    "        distanceSq = czm_eyeHeight2D.y - radiusSq; \\n" +\n    "    } \\n" +\n    "    else \\n" +\n    "    { \\n" +\n    "        distanceSq = dot(centerRTE.xyz, centerRTE.xyz) - radiusSq; \\n" +\n    "    } \\n" +\n    "    distanceSq = max(distanceSq, 0.0); \\n" +\n    "    float nearSq = distanceDisplayCondition.x * distanceDisplayCondition.x; \\n" +\n    "    float farSq = distanceDisplayCondition.y * distanceDisplayCondition.y; \\n" +\n    "    float show = (distanceSq >= nearSq && distanceSq <= farSq) ? 1.0 : 0.0; \\n" +\n    "    gl_Position *= show; \\n" +\n    "}";\n  return renamedVS + "\\n" + distanceDisplayConditionMain;\n};\n\nfunction modifyForEncodedNormals(primitive, vertexShaderSource) {\n  if (!primitive.compressVertices) {\n    return vertexShaderSource;\n  }\n\n  var containsNormal =\n    vertexShaderSource.search(/attribute\\s+vec3\\s+normal;/g) !== -1;\n  var containsSt = vertexShaderSource.search(/attribute\\s+vec2\\s+st;/g) !== -1;\n  if (!containsNormal && !containsSt) {\n    return vertexShaderSource;\n  }\n\n  var containsTangent =\n    vertexShaderSource.search(/attribute\\s+vec3\\s+tangent;/g) !== -1;\n  var containsBitangent =\n    vertexShaderSource.search(/attribute\\s+vec3\\s+bitangent;/g) !== -1;\n\n  var numComponents = containsSt && containsNormal ? 2.0 : 1.0;\n  numComponents += containsTangent || containsBitangent ? 1 : 0;\n\n  var type = numComponents > 1 ? "vec" + numComponents : "float";\n\n  var attributeName = "compressedAttributes";\n  var attributeDecl = "attribute " + type + " " + attributeName + ";";\n\n  var globalDecl = "";\n  var decode = "";\n\n  if (containsSt) {\n    globalDecl += "vec2 st;\\n";\n    var stComponent = numComponents > 1 ? attributeName + ".x" : attributeName;\n    decode +=\n      "    st = czm_decompressTextureCoordinates(" + stComponent + ");\\n";\n  }\n\n  if (containsNormal && containsTangent && containsBitangent) {\n    globalDecl += "vec3 normal;\\n" + "vec3 tangent;\\n" + "vec3 bitangent;\\n";\n    decode +=\n      "    czm_octDecode(" +\n      attributeName +\n      "." +\n      (containsSt ? "yz" : "xy") +\n      ", normal, tangent, bitangent);\\n";\n  } else {\n    if (containsNormal) {\n      globalDecl += "vec3 normal;\\n";\n      decode +=\n        "    normal = czm_octDecode(" +\n        attributeName +\n        (numComponents > 1 ? "." + (containsSt ? "y" : "x") : "") +\n        ");\\n";\n    }\n\n    if (containsTangent) {\n      globalDecl += "vec3 tangent;\\n";\n      decode +=\n        "    tangent = czm_octDecode(" +\n        attributeName +\n        "." +\n        (containsSt && containsNormal ? "z" : "y") +\n        ");\\n";\n    }\n\n    if (containsBitangent) {\n      globalDecl += "vec3 bitangent;\\n";\n      decode +=\n        "    bitangent = czm_octDecode(" +\n        attributeName +\n        "." +\n        (containsSt && containsNormal ? "z" : "y") +\n        ");\\n";\n    }\n  }\n\n  var modifiedVS = vertexShaderSource;\n  modifiedVS = modifiedVS.replace(/attribute\\s+vec3\\s+normal;/g, "");\n  modifiedVS = modifiedVS.replace(/attribute\\s+vec2\\s+st;/g, "");\n  modifiedVS = modifiedVS.replace(/attribute\\s+vec3\\s+tangent;/g, "");\n  modifiedVS = modifiedVS.replace(/attribute\\s+vec3\\s+bitangent;/g, "");\n  modifiedVS = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].replaceMain */ .Z.replaceMain(modifiedVS, "czm_non_compressed_main");\n  var compressedMain =\n    "void main() \\n" +\n    "{ \\n" +\n    decode +\n    "    czm_non_compressed_main(); \\n" +\n    "}";\n\n  return [attributeDecl, globalDecl, modifiedVS, compressedMain].join("\\n");\n}\n\nfunction depthClampVS(vertexShaderSource) {\n  var modifiedVS = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].replaceMain */ .Z.replaceMain(\n    vertexShaderSource,\n    "czm_non_depth_clamp_main"\n  );\n  modifiedVS +=\n    "void main() {\\n" +\n    "    czm_non_depth_clamp_main();\\n" +\n    "    gl_Position = czm_depthClamp(gl_Position);" +\n    "}\\n";\n  return modifiedVS;\n}\n\nfunction depthClampFS(fragmentShaderSource) {\n  var modifiedFS = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].replaceMain */ .Z.replaceMain(\n    fragmentShaderSource,\n    "czm_non_depth_clamp_main"\n  );\n  modifiedFS +=\n    "void main() {\\n" +\n    "    czm_non_depth_clamp_main();\\n" +\n    "#if defined(GL_EXT_frag_depth)\\n" +\n    "    #if defined(LOG_DEPTH)\\n" +\n    "        czm_writeLogDepth();\\n" +\n    "    #else\\n" +\n    "        czm_writeDepthClamp();\\n" +\n    "    #endif\\n" +\n    "#endif\\n" +\n    "}\\n";\n  modifiedFS =\n    "#ifdef GL_EXT_frag_depth\\n" +\n    "#extension GL_EXT_frag_depth : enable\\n" +\n    "#endif\\n" +\n    modifiedFS;\n  return modifiedFS;\n}\n\nfunction validateShaderMatching(shaderProgram, attributeLocations) {\n  // For a VAO and shader program to be compatible, the VAO must have\n  // all active attribute in the shader program.  The VAO may have\n  // extra attributes with the only concern being a potential\n  // performance hit due to extra memory bandwidth and cache pollution.\n  // The shader source could have extra attributes that are not used,\n  // but there is no guarantee they will be optimized out.\n  //\n  // Here, we validate that the VAO has all attributes required\n  // to match the shader program.\n  var shaderAttributes = shaderProgram.vertexAttributes;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  for (var name in shaderAttributes) {\n    if (shaderAttributes.hasOwnProperty(name)) {\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(attributeLocations[name])) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n          "Appearance/Geometry mismatch.  The appearance requires vertex shader attribute input \'" +\n            name +\n            "\', which was not computed as part of the Geometry.  Use the appearance\'s vertexFormat property when constructing the geometry."\n        );\n      }\n    }\n  }\n  //>>includeEnd(\'debug\');\n}\n\nfunction getUniformFunction(uniforms, name) {\n  return function () {\n    return uniforms[name];\n  };\n}\n\nvar numberOfCreationWorkers = Math.max(\n  _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].hardwareConcurrency */ .Z.hardwareConcurrency - 1,\n  1\n);\nvar createGeometryTaskProcessors;\nvar combineGeometryTaskProcessor = new _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z("combineGeometry");\n\nfunction loadAsynchronous(primitive, frameState) {\n  var instances;\n  var geometry;\n  var i;\n  var j;\n\n  var instanceIds = primitive._instanceIds;\n\n  if (primitive._state === _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].READY */ .Z.READY) {\n    instances = Array.isArray(primitive.geometryInstances)\n      ? primitive.geometryInstances\n      : [primitive.geometryInstances];\n    var length = (primitive._numberOfInstances = instances.length);\n\n    var promises = [];\n    var subTasks = [];\n    for (i = 0; i < length; ++i) {\n      geometry = instances[i].geometry;\n      instanceIds.push(instances[i].id);\n\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(geometry._workerName)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n          "_workerName must be defined for asynchronous geometry."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      subTasks.push({\n        moduleName: geometry._workerName,\n        geometry: geometry,\n      });\n    }\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(createGeometryTaskProcessors)) {\n      createGeometryTaskProcessors = new Array(numberOfCreationWorkers);\n      for (i = 0; i < numberOfCreationWorkers; i++) {\n        createGeometryTaskProcessors[i] = new _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z("createGeometry");\n      }\n    }\n\n    var subTask;\n    subTasks = (0,_Core_subdivideArray_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z)(subTasks, numberOfCreationWorkers);\n\n    for (i = 0; i < subTasks.length; i++) {\n      var packedLength = 0;\n      var workerSubTasks = subTasks[i];\n      var workerSubTasksLength = workerSubTasks.length;\n      for (j = 0; j < workerSubTasksLength; ++j) {\n        subTask = workerSubTasks[j];\n        geometry = subTask.geometry;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(geometry.constructor.pack)) {\n          subTask.offset = packedLength;\n          packedLength += (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n            geometry.constructor.packedLength,\n            geometry.packedLength\n          );\n        }\n      }\n\n      var subTaskTransferableObjects;\n\n      if (packedLength > 0) {\n        var array = new Float64Array(packedLength);\n        subTaskTransferableObjects = [array.buffer];\n\n        for (j = 0; j < workerSubTasksLength; ++j) {\n          subTask = workerSubTasks[j];\n          geometry = subTask.geometry;\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(geometry.constructor.pack)) {\n            geometry.constructor.pack(geometry, array, subTask.offset);\n            subTask.geometry = array;\n          }\n        }\n      }\n\n      promises.push(\n        createGeometryTaskProcessors[i].scheduleTask(\n          {\n            subTasks: subTasks[i],\n          },\n          subTaskTransferableObjects\n        )\n      );\n    }\n\n    primitive._state = _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].CREATING */ .Z.CREATING;\n\n    _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].all */ .Z.all(promises, function (results) {\n        primitive._createGeometryResults = results;\n        primitive._state = _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].CREATED */ .Z.CREATED;\n      })\n      .otherwise(function (error) {\n        setReady(primitive, frameState, _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].FAILED */ .Z.FAILED, error);\n      });\n  } else if (primitive._state === _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].CREATED */ .Z.CREATED) {\n    var transferableObjects = [];\n    instances = Array.isArray(primitive.geometryInstances)\n      ? primitive.geometryInstances\n      : [primitive.geometryInstances];\n\n    var scene3DOnly = frameState.scene3DOnly;\n    var projection = frameState.mapProjection;\n\n    var promise = combineGeometryTaskProcessor.scheduleTask(\n      _PrimitivePipeline_js__WEBPACK_IMPORTED_MODULE_36__/* ["default"].packCombineGeometryParameters */ .Z.packCombineGeometryParameters(\n        {\n          createGeometryResults: primitive._createGeometryResults,\n          instances: instances,\n          ellipsoid: projection.ellipsoid,\n          projection: projection,\n          elementIndexUintSupported: frameState.context.elementIndexUint,\n          scene3DOnly: scene3DOnly,\n          vertexCacheOptimize: primitive.vertexCacheOptimize,\n          compressVertices: primitive.compressVertices,\n          modelMatrix: primitive.modelMatrix,\n          createPickOffsets: primitive._createPickOffsets,\n        },\n        transferableObjects\n      ),\n      transferableObjects\n    );\n\n    primitive._createGeometryResults = undefined;\n    primitive._state = _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMBINING */ .Z.COMBINING;\n\n    (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(promise, function (packedResult) {\n      var result = _PrimitivePipeline_js__WEBPACK_IMPORTED_MODULE_36__/* ["default"].unpackCombineGeometryResults */ .Z.unpackCombineGeometryResults(packedResult);\n      primitive._geometries = result.geometries;\n      primitive._attributeLocations = result.attributeLocations;\n      primitive.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].clone */ .Z.clone(\n        result.modelMatrix,\n        primitive.modelMatrix\n      );\n      primitive._pickOffsets = result.pickOffsets;\n      primitive._offsetInstanceExtend = result.offsetInstanceExtend;\n      primitive._instanceBoundingSpheres = result.boundingSpheres;\n      primitive._instanceBoundingSpheresCV = result.boundingSpheresCV;\n\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._geometries) && primitive._geometries.length > 0) {\n        primitive._recomputeBoundingSpheres = true;\n        primitive._state = _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMBINED */ .Z.COMBINED;\n      } else {\n        setReady(primitive, frameState, _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].FAILED */ .Z.FAILED, undefined);\n      }\n    }).otherwise(function (error) {\n      setReady(primitive, frameState, _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].FAILED */ .Z.FAILED, error);\n    });\n  }\n}\n\nfunction loadSynchronous(primitive, frameState) {\n  var instances = Array.isArray(primitive.geometryInstances)\n    ? primitive.geometryInstances\n    : [primitive.geometryInstances];\n  var length = (primitive._numberOfInstances = instances.length);\n  var clonedInstances = new Array(length);\n  var instanceIds = primitive._instanceIds;\n\n  var instance;\n  var i;\n\n  var geometryIndex = 0;\n  for (i = 0; i < length; i++) {\n    instance = instances[i];\n    var geometry = instance.geometry;\n\n    var createdGeometry;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(geometry.attributes) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(geometry.primitiveType)) {\n      createdGeometry = cloneGeometry(geometry);\n    } else {\n      createdGeometry = geometry.constructor.createGeometry(geometry);\n    }\n\n    clonedInstances[geometryIndex++] = cloneInstance(instance, createdGeometry);\n    instanceIds.push(instance.id);\n  }\n\n  clonedInstances.length = geometryIndex;\n\n  var scene3DOnly = frameState.scene3DOnly;\n  var projection = frameState.mapProjection;\n\n  var result = _PrimitivePipeline_js__WEBPACK_IMPORTED_MODULE_36__/* ["default"].combineGeometry */ .Z.combineGeometry({\n    instances: clonedInstances,\n    ellipsoid: projection.ellipsoid,\n    projection: projection,\n    elementIndexUintSupported: frameState.context.elementIndexUint,\n    scene3DOnly: scene3DOnly,\n    vertexCacheOptimize: primitive.vertexCacheOptimize,\n    compressVertices: primitive.compressVertices,\n    modelMatrix: primitive.modelMatrix,\n    createPickOffsets: primitive._createPickOffsets,\n  });\n\n  primitive._geometries = result.geometries;\n  primitive._attributeLocations = result.attributeLocations;\n  primitive.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].clone */ .Z.clone(\n    result.modelMatrix,\n    primitive.modelMatrix\n  );\n  primitive._pickOffsets = result.pickOffsets;\n  primitive._offsetInstanceExtend = result.offsetInstanceExtend;\n  primitive._instanceBoundingSpheres = result.boundingSpheres;\n  primitive._instanceBoundingSpheresCV = result.boundingSpheresCV;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._geometries) && primitive._geometries.length > 0) {\n    primitive._recomputeBoundingSpheres = true;\n    primitive._state = _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMBINED */ .Z.COMBINED;\n  } else {\n    setReady(primitive, frameState, _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].FAILED */ .Z.FAILED, undefined);\n  }\n}\n\nfunction recomputeBoundingSpheres(primitive, frameState) {\n  var offsetIndex = primitive._batchTableAttributeIndices.offset;\n  if (!primitive._recomputeBoundingSpheres || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(offsetIndex)) {\n    primitive._recomputeBoundingSpheres = false;\n    return;\n  }\n\n  var i;\n  var offsetInstanceExtend = primitive._offsetInstanceExtend;\n  var boundingSpheres = primitive._instanceBoundingSpheres;\n  var length = boundingSpheres.length;\n  var newBoundingSpheres = primitive._tempBoundingSpheres;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(newBoundingSpheres)) {\n    newBoundingSpheres = new Array(length);\n    for (i = 0; i < length; i++) {\n      newBoundingSpheres[i] = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n    }\n    primitive._tempBoundingSpheres = newBoundingSpheres;\n  }\n  for (i = 0; i < length; ++i) {\n    var newBS = newBoundingSpheres[i];\n    var offset = primitive._batchTable.getBatchedAttribute(\n      i,\n      offsetIndex,\n      new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z()\n    );\n    newBS = boundingSpheres[i].clone(newBS);\n    transformBoundingSphere(newBS, offset, offsetInstanceExtend[i]);\n  }\n  var combinedBS = [];\n  var combinedWestBS = [];\n  var combinedEastBS = [];\n\n  for (i = 0; i < length; ++i) {\n    var bs = newBoundingSpheres[i];\n\n    var minX = bs.center.x - bs.radius;\n    if (\n      minX > 0 ||\n      _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].intersectPlane */ .Z.intersectPlane(bs, _Core_Plane_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].ORIGIN_ZX_PLANE */ .Z.ORIGIN_ZX_PLANE) !==\n        _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].INTERSECTING */ .Z.INTERSECTING\n    ) {\n      combinedBS.push(bs);\n    } else {\n      combinedWestBS.push(bs);\n      combinedEastBS.push(bs);\n    }\n  }\n\n  var resultBS1 = combinedBS[0];\n  var resultBS2 = combinedEastBS[0];\n  var resultBS3 = combinedWestBS[0];\n\n  for (i = 1; i < combinedBS.length; i++) {\n    resultBS1 = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(resultBS1, combinedBS[i]);\n  }\n  for (i = 1; i < combinedEastBS.length; i++) {\n    resultBS2 = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(resultBS2, combinedEastBS[i]);\n  }\n  for (i = 1; i < combinedWestBS.length; i++) {\n    resultBS3 = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(resultBS3, combinedWestBS[i]);\n  }\n  var result = [];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(resultBS1)) {\n    result.push(resultBS1);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(resultBS2)) {\n    result.push(resultBS2);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(resultBS3)) {\n    result.push(resultBS3);\n  }\n\n  for (i = 0; i < result.length; i++) {\n    var boundingSphere = result[i].clone(primitive._boundingSpheres[i]);\n    primitive._boundingSpheres[i] = boundingSphere;\n    primitive._boundingSphereCV[i] = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].projectTo2D */ .Z.projectTo2D(\n      boundingSphere,\n      frameState.mapProjection,\n      primitive._boundingSphereCV[i]\n    );\n  }\n\n  Primitive._updateBoundingVolumes(\n    primitive,\n    frameState,\n    primitive.modelMatrix,\n    true\n  );\n  primitive._recomputeBoundingSpheres = false;\n}\n\nvar scratchBoundingSphereCenterEncoded = new _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\nvar scratchBoundingSphereCartographic = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchBoundingSphereCenter2D = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchBoundingSphere = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nfunction updateBatchTableBoundingSpheres(primitive, frameState) {\n  var hasDistanceDisplayCondition = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(\n    primitive._batchTableAttributeIndices.distanceDisplayCondition\n  );\n  if (\n    !hasDistanceDisplayCondition ||\n    primitive._batchTableBoundingSpheresUpdated\n  ) {\n    return;\n  }\n\n  var indices = primitive._batchTableBoundingSphereAttributeIndices;\n  var center3DHighIndex = indices.center3DHigh;\n  var center3DLowIndex = indices.center3DLow;\n  var center2DHighIndex = indices.center2DHigh;\n  var center2DLowIndex = indices.center2DLow;\n  var radiusIndex = indices.radius;\n\n  var projection = frameState.mapProjection;\n  var ellipsoid = projection.ellipsoid;\n\n  var batchTable = primitive._batchTable;\n  var boundingSpheres = primitive._instanceBoundingSpheres;\n  var length = boundingSpheres.length;\n\n  for (var i = 0; i < length; ++i) {\n    var boundingSphere = boundingSpheres[i];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(boundingSphere)) {\n      continue;\n    }\n\n    var modelMatrix = primitive.modelMatrix;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(modelMatrix)) {\n      boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].transform */ .Z.transform(\n        boundingSphere,\n        modelMatrix,\n        scratchBoundingSphere\n      );\n    }\n\n    var center = boundingSphere.center;\n    var radius = boundingSphere.radius;\n\n    var encodedCenter = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCartesian */ .Z.fromCartesian(\n      center,\n      scratchBoundingSphereCenterEncoded\n    );\n    batchTable.setBatchedAttribute(i, center3DHighIndex, encodedCenter.high);\n    batchTable.setBatchedAttribute(i, center3DLowIndex, encodedCenter.low);\n\n    if (!frameState.scene3DOnly) {\n      var cartographic = ellipsoid.cartesianToCartographic(\n        center,\n        scratchBoundingSphereCartographic\n      );\n      var center2D = projection.project(\n        cartographic,\n        scratchBoundingSphereCenter2D\n      );\n      encodedCenter = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCartesian */ .Z.fromCartesian(\n        center2D,\n        scratchBoundingSphereCenterEncoded\n      );\n      batchTable.setBatchedAttribute(i, center2DHighIndex, encodedCenter.high);\n      batchTable.setBatchedAttribute(i, center2DLowIndex, encodedCenter.low);\n    }\n\n    batchTable.setBatchedAttribute(i, radiusIndex, radius);\n  }\n\n  primitive._batchTableBoundingSpheresUpdated = true;\n}\n\nvar offsetScratchCartesian = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar offsetCenterScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nfunction updateBatchTableOffsets(primitive, frameState) {\n  var hasOffset = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._batchTableAttributeIndices.offset);\n  if (\n    !hasOffset ||\n    primitive._batchTableOffsetsUpdated ||\n    frameState.scene3DOnly\n  ) {\n    return;\n  }\n\n  var index2D = primitive._batchTableOffsetAttribute2DIndex;\n\n  var projection = frameState.mapProjection;\n  var ellipsoid = projection.ellipsoid;\n\n  var batchTable = primitive._batchTable;\n  var boundingSpheres = primitive._instanceBoundingSpheres;\n  var length = boundingSpheres.length;\n\n  for (var i = 0; i < length; ++i) {\n    var boundingSphere = boundingSpheres[i];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(boundingSphere)) {\n      continue;\n    }\n    var offset = batchTable.getBatchedAttribute(\n      i,\n      primitive._batchTableAttributeIndices.offset\n    );\n    if (_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(offset, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO)) {\n      batchTable.setBatchedAttribute(i, index2D, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO);\n      continue;\n    }\n\n    var modelMatrix = primitive.modelMatrix;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(modelMatrix)) {\n      boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].transform */ .Z.transform(\n        boundingSphere,\n        modelMatrix,\n        scratchBoundingSphere\n      );\n    }\n\n    var center = boundingSphere.center;\n    center = ellipsoid.scaleToGeodeticSurface(center, offsetCenterScratch);\n    var cartographic = ellipsoid.cartesianToCartographic(\n      center,\n      scratchBoundingSphereCartographic\n    );\n    var center2D = projection.project(\n      cartographic,\n      scratchBoundingSphereCenter2D\n    );\n\n    var newPoint = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(offset, center, offsetScratchCartesian);\n    cartographic = ellipsoid.cartesianToCartographic(newPoint, cartographic);\n\n    var newPointProjected = projection.project(\n      cartographic,\n      offsetScratchCartesian\n    );\n\n    var newVector = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(\n      newPointProjected,\n      center2D,\n      offsetScratchCartesian\n    );\n\n    var x = newVector.x;\n    newVector.x = newVector.z;\n    newVector.z = newVector.y;\n    newVector.y = x;\n\n    batchTable.setBatchedAttribute(i, index2D, newVector);\n  }\n\n  primitive._batchTableOffsetsUpdated = true;\n}\n\nfunction createVertexArray(primitive, frameState) {\n  var attributeLocations = primitive._attributeLocations;\n  var geometries = primitive._geometries;\n  var scene3DOnly = frameState.scene3DOnly;\n  var context = frameState.context;\n\n  var va = [];\n  var length = geometries.length;\n  for (var i = 0; i < length; ++i) {\n    var geometry = geometries[i];\n\n    va.push(\n      _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_31__/* ["default"].fromGeometry */ .Z.fromGeometry({\n        context: context,\n        geometry: geometry,\n        attributeLocations: attributeLocations,\n        bufferUsage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n        interleave: primitive._interleave,\n      })\n    );\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._createBoundingVolumeFunction)) {\n      primitive._createBoundingVolumeFunction(frameState, geometry);\n    } else {\n      primitive._boundingSpheres.push(\n        _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(geometry.boundingSphere)\n      );\n      primitive._boundingSphereWC.push(new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z());\n\n      if (!scene3DOnly) {\n        var center = geometry.boundingSphereCV.center;\n        var x = center.x;\n        var y = center.y;\n        var z = center.z;\n        center.x = z;\n        center.y = x;\n        center.z = y;\n\n        primitive._boundingSphereCV.push(\n          _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(geometry.boundingSphereCV)\n        );\n        primitive._boundingSphere2D.push(new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z());\n        primitive._boundingSphereMorph.push(new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z());\n      }\n    }\n  }\n\n  primitive._va = va;\n  primitive._primitiveType = geometries[0].primitiveType;\n\n  if (primitive.releaseGeometryInstances) {\n    primitive.geometryInstances = undefined;\n  }\n\n  primitive._geometries = undefined;\n  setReady(primitive, frameState, _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMPLETE */ .Z.COMPLETE, undefined);\n}\n\nfunction createRenderStates(primitive, context, appearance, twoPasses) {\n  var renderState = appearance.getRenderState();\n  var rs;\n\n  if (twoPasses) {\n    rs = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(renderState, false);\n    rs.cull = {\n      enabled: true,\n      face: _CullFace_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"].BACK */ .Z.BACK,\n    };\n    primitive._frontFaceRS = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"].fromCache */ .Z.fromCache(rs);\n\n    rs.cull.face = _CullFace_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"].FRONT */ .Z.FRONT;\n    primitive._backFaceRS = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"].fromCache */ .Z.fromCache(rs);\n  } else {\n    primitive._frontFaceRS = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"].fromCache */ .Z.fromCache(renderState);\n    primitive._backFaceRS = primitive._frontFaceRS;\n  }\n\n  rs = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(renderState, false);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._depthFailAppearance)) {\n    rs.depthTest.enabled = false;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._depthFailAppearance)) {\n    renderState = primitive._depthFailAppearance.getRenderState();\n    rs = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(renderState, false);\n    rs.depthTest.func = _DepthFunction_js__WEBPACK_IMPORTED_MODULE_35__/* ["default"].GREATER */ .Z.GREATER;\n    if (twoPasses) {\n      rs.cull = {\n        enabled: true,\n        face: _CullFace_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"].BACK */ .Z.BACK,\n      };\n      primitive._frontFaceDepthFailRS = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"].fromCache */ .Z.fromCache(rs);\n\n      rs.cull.face = _CullFace_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"].FRONT */ .Z.FRONT;\n      primitive._backFaceDepthFailRS = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"].fromCache */ .Z.fromCache(rs);\n    } else {\n      primitive._frontFaceDepthFailRS = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"].fromCache */ .Z.fromCache(rs);\n      primitive._backFaceDepthFailRS = primitive._frontFaceRS;\n    }\n  }\n}\n\nfunction createShaderProgram(primitive, frameState, appearance) {\n  var context = frameState.context;\n\n  var attributeLocations = primitive._attributeLocations;\n\n  var vs = primitive._batchTable.getVertexShaderCallback()(\n    appearance.vertexShaderSource\n  );\n  vs = Primitive._appendOffsetToShader(primitive, vs);\n  vs = Primitive._appendShowToShader(primitive, vs);\n  vs = Primitive._appendDistanceDisplayConditionToShader(\n    primitive,\n    vs,\n    frameState.scene3DOnly\n  );\n  vs = appendPickToVertexShader(vs);\n  vs = Primitive._updateColorAttribute(primitive, vs, false);\n  vs = modifyForEncodedNormals(primitive, vs);\n  vs = Primitive._modifyShaderPosition(primitive, vs, frameState.scene3DOnly);\n  var fs = appearance.getFragmentShaderSource();\n  fs = appendPickToFragmentShader(fs);\n\n  primitive._sp = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_29__/* ["default"].replaceCache */ .Z.replaceCache({\n    context: context,\n    shaderProgram: primitive._sp,\n    vertexShaderSource: vs,\n    fragmentShaderSource: fs,\n    attributeLocations: attributeLocations,\n  });\n  validateShaderMatching(primitive._sp, attributeLocations);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._depthFailAppearance)) {\n    vs = primitive._batchTable.getVertexShaderCallback()(\n      primitive._depthFailAppearance.vertexShaderSource\n    );\n    vs = Primitive._appendShowToShader(primitive, vs);\n    vs = Primitive._appendDistanceDisplayConditionToShader(\n      primitive,\n      vs,\n      frameState.scene3DOnly\n    );\n    vs = appendPickToVertexShader(vs);\n    vs = Primitive._updateColorAttribute(primitive, vs, true);\n    vs = modifyForEncodedNormals(primitive, vs);\n    vs = Primitive._modifyShaderPosition(primitive, vs, frameState.scene3DOnly);\n    vs = depthClampVS(vs);\n\n    fs = primitive._depthFailAppearance.getFragmentShaderSource();\n    fs = appendPickToFragmentShader(fs);\n    fs = depthClampFS(fs);\n\n    primitive._spDepthFail = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_29__/* ["default"].replaceCache */ .Z.replaceCache({\n      context: context,\n      shaderProgram: primitive._spDepthFail,\n      vertexShaderSource: vs,\n      fragmentShaderSource: fs,\n      attributeLocations: attributeLocations,\n    });\n    validateShaderMatching(primitive._spDepthFail, attributeLocations);\n  }\n}\n\nvar modifiedModelViewScratch = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\nvar rtcScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nfunction getUniforms(primitive, appearance, material, frameState) {\n  // Create uniform map by combining uniforms from the appearance and material if either have uniforms.\n  var materialUniformMap = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(material) ? material._uniforms : undefined;\n  var appearanceUniformMap = {};\n  var appearanceUniforms = appearance.uniforms;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(appearanceUniforms)) {\n    // Convert to uniform map of functions for the renderer\n    for (var name in appearanceUniforms) {\n      if (appearanceUniforms.hasOwnProperty(name)) {\n        //>>includeStart(\'debug\', pragmas.debug);\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(materialUniformMap) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(materialUniformMap[name])) {\n          // Later, we could rename uniforms behind-the-scenes if needed.\n          throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n            "Appearance and material have a uniform with the same name: " + name\n          );\n        }\n        //>>includeEnd(\'debug\');\n\n        appearanceUniformMap[name] = getUniformFunction(\n          appearanceUniforms,\n          name\n        );\n      }\n    }\n  }\n  var uniforms = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(appearanceUniformMap, materialUniformMap);\n  uniforms = primitive._batchTable.getUniformMapCallback()(uniforms);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive.rtcCenter)) {\n    uniforms.u_modifiedModelView = function () {\n      var viewMatrix = frameState.context.uniformState.view;\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(\n        viewMatrix,\n        primitive._modelMatrix,\n        modifiedModelViewScratch\n      );\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n        modifiedModelViewScratch,\n        primitive.rtcCenter,\n        rtcScratch\n      );\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].setTranslation */ .Z.setTranslation(\n        modifiedModelViewScratch,\n        rtcScratch,\n        modifiedModelViewScratch\n      );\n      return modifiedModelViewScratch;\n    };\n  }\n\n  return uniforms;\n}\n\nfunction createCommands(\n  primitive,\n  appearance,\n  material,\n  translucent,\n  twoPasses,\n  colorCommands,\n  pickCommands,\n  frameState\n) {\n  var uniforms = getUniforms(primitive, appearance, material, frameState);\n\n  var depthFailUniforms;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._depthFailAppearance)) {\n    depthFailUniforms = getUniforms(\n      primitive,\n      primitive._depthFailAppearance,\n      primitive._depthFailAppearance.material,\n      frameState\n    );\n  }\n\n  var pass = translucent ? _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT : _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].OPAQUE */ .Z.OPAQUE;\n\n  var multiplier = twoPasses ? 2 : 1;\n  multiplier *= (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._depthFailAppearance) ? 2 : 1;\n  colorCommands.length = primitive._va.length * multiplier;\n\n  var length = colorCommands.length;\n  var vaIndex = 0;\n  for (var i = 0; i < length; ++i) {\n    var colorCommand;\n\n    if (twoPasses) {\n      colorCommand = colorCommands[i];\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(colorCommand)) {\n        colorCommand = colorCommands[i] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z({\n          owner: primitive,\n          primitiveType: primitive._primitiveType,\n        });\n      }\n      colorCommand.vertexArray = primitive._va[vaIndex];\n      colorCommand.renderState = primitive._backFaceRS;\n      colorCommand.shaderProgram = primitive._sp;\n      colorCommand.uniformMap = uniforms;\n      colorCommand.pass = pass;\n\n      ++i;\n    }\n\n    colorCommand = colorCommands[i];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(colorCommand)) {\n      colorCommand = colorCommands[i] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z({\n        owner: primitive,\n        primitiveType: primitive._primitiveType,\n      });\n    }\n    colorCommand.vertexArray = primitive._va[vaIndex];\n    colorCommand.renderState = primitive._frontFaceRS;\n    colorCommand.shaderProgram = primitive._sp;\n    colorCommand.uniformMap = uniforms;\n    colorCommand.pass = pass;\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._depthFailAppearance)) {\n      if (twoPasses) {\n        ++i;\n\n        colorCommand = colorCommands[i];\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(colorCommand)) {\n          colorCommand = colorCommands[i] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z({\n            owner: primitive,\n            primitiveType: primitive._primitiveType,\n          });\n        }\n        colorCommand.vertexArray = primitive._va[vaIndex];\n        colorCommand.renderState = primitive._backFaceDepthFailRS;\n        colorCommand.shaderProgram = primitive._spDepthFail;\n        colorCommand.uniformMap = depthFailUniforms;\n        colorCommand.pass = pass;\n      }\n\n      ++i;\n\n      colorCommand = colorCommands[i];\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(colorCommand)) {\n        colorCommand = colorCommands[i] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z({\n          owner: primitive,\n          primitiveType: primitive._primitiveType,\n        });\n      }\n      colorCommand.vertexArray = primitive._va[vaIndex];\n      colorCommand.renderState = primitive._frontFaceDepthFailRS;\n      colorCommand.shaderProgram = primitive._spDepthFail;\n      colorCommand.uniformMap = depthFailUniforms;\n      colorCommand.pass = pass;\n    }\n\n    ++vaIndex;\n  }\n}\n\nPrimitive._updateBoundingVolumes = function (\n  primitive,\n  frameState,\n  modelMatrix,\n  forceUpdate\n) {\n  var i;\n  var length;\n  var boundingSphere;\n\n  if (forceUpdate || !_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].equals */ .Z.equals(modelMatrix, primitive._modelMatrix)) {\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].clone */ .Z.clone(modelMatrix, primitive._modelMatrix);\n    length = primitive._boundingSpheres.length;\n    for (i = 0; i < length; ++i) {\n      boundingSphere = primitive._boundingSpheres[i];\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(boundingSphere)) {\n        primitive._boundingSphereWC[i] = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].transform */ .Z.transform(\n          boundingSphere,\n          modelMatrix,\n          primitive._boundingSphereWC[i]\n        );\n        if (!frameState.scene3DOnly) {\n          primitive._boundingSphere2D[i] = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n            primitive._boundingSphereCV[i],\n            primitive._boundingSphere2D[i]\n          );\n          primitive._boundingSphere2D[i].center.x = 0.0;\n          primitive._boundingSphereMorph[i] = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(\n            primitive._boundingSphereWC[i],\n            primitive._boundingSphereCV[i]\n          );\n        }\n      }\n    }\n  }\n\n  // Update bounding volumes for primitives that are sized in pixels.\n  // The pixel size in meters varies based on the distance from the camera.\n  var pixelSize = primitive.appearance.pixelSize;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(pixelSize)) {\n    length = primitive._boundingSpheres.length;\n    for (i = 0; i < length; ++i) {\n      boundingSphere = primitive._boundingSpheres[i];\n      var boundingSphereWC = primitive._boundingSphereWC[i];\n      var pixelSizeInMeters = frameState.camera.getPixelSize(\n        boundingSphere,\n        frameState.context.drawingBufferWidth,\n        frameState.context.drawingBufferHeight\n      );\n      var sizeInMeters = pixelSizeInMeters * pixelSize;\n      boundingSphereWC.radius = boundingSphere.radius + sizeInMeters;\n    }\n  }\n};\n\nfunction updateAndQueueCommands(\n  primitive,\n  frameState,\n  colorCommands,\n  pickCommands,\n  modelMatrix,\n  cull,\n  debugShowBoundingVolume,\n  twoPasses\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    frameState.mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_38__/* ["default"].SCENE3D */ .Z.SCENE3D &&\n    !_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].equals */ .Z.equals(modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].IDENTITY */ .Z.IDENTITY)\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n      "Primitive.modelMatrix is only supported in 3D mode."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  Primitive._updateBoundingVolumes(primitive, frameState, modelMatrix);\n\n  var boundingSpheres;\n  if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_38__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    boundingSpheres = primitive._boundingSphereWC;\n  } else if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_38__/* ["default"].COLUMBUS_VIEW */ .Z.COLUMBUS_VIEW) {\n    boundingSpheres = primitive._boundingSphereCV;\n  } else if (\n    frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_38__/* ["default"].SCENE2D */ .Z.SCENE2D &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._boundingSphere2D)\n  ) {\n    boundingSpheres = primitive._boundingSphere2D;\n  } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._boundingSphereMorph)) {\n    boundingSpheres = primitive._boundingSphereMorph;\n  }\n\n  var commandList = frameState.commandList;\n  var passes = frameState.passes;\n  if (passes.render || passes.pick) {\n    var allowPicking = primitive.allowPicking;\n    var castShadows = _ShadowMode_js__WEBPACK_IMPORTED_MODULE_39__/* ["default"].castShadows */ .Z.castShadows(primitive.shadows);\n    var receiveShadows = _ShadowMode_js__WEBPACK_IMPORTED_MODULE_39__/* ["default"].receiveShadows */ .Z.receiveShadows(primitive.shadows);\n    var colorLength = colorCommands.length;\n\n    var factor = twoPasses ? 2 : 1;\n    factor *= (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(primitive._depthFailAppearance) ? 2 : 1;\n\n    for (var j = 0; j < colorLength; ++j) {\n      var sphereIndex = Math.floor(j / factor);\n      var colorCommand = colorCommands[j];\n      colorCommand.modelMatrix = modelMatrix;\n      colorCommand.boundingVolume = boundingSpheres[sphereIndex];\n      colorCommand.cull = cull;\n      colorCommand.debugShowBoundingVolume = debugShowBoundingVolume;\n      colorCommand.castShadows = castShadows;\n      colorCommand.receiveShadows = receiveShadows;\n\n      if (allowPicking) {\n        colorCommand.pickId = "v_pickColor";\n      } else {\n        colorCommand.pickId = undefined;\n      }\n\n      commandList.push(colorCommand);\n    }\n  }\n}\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {DeveloperError} All instance geometries must have the same primitiveType.\n * @exception {DeveloperError} Appearance and material have a uniform with the same name.\n * @exception {DeveloperError} Primitive.modelMatrix is only supported in 3D mode.\n * @exception {RuntimeError} Vertex texture fetch support is required to render primitives with per-instance attributes. The maximum number of vertex texture image units must be greater than zero.\n */\nPrimitive.prototype.update = function (frameState) {\n  if (\n    (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this.geometryInstances) && this._va.length === 0) ||\n    ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this.geometryInstances) &&\n      Array.isArray(this.geometryInstances) &&\n      this.geometryInstances.length === 0) ||\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this.appearance) ||\n    (frameState.mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_38__/* ["default"].SCENE3D */ .Z.SCENE3D && frameState.scene3DOnly) ||\n    (!frameState.passes.render && !frameState.passes.pick)\n  ) {\n    return;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this._error)) {\n    throw this._error;\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this.rtcCenter) && !frameState.scene3DOnly) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n      "RTC rendering is only available for 3D only scenes."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  if (this._state === _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].FAILED */ .Z.FAILED) {\n    return;\n  }\n\n  var context = frameState.context;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this._batchTable)) {\n    createBatchTable(this, context);\n  }\n  if (this._batchTable.attributes.length > 0) {\n    if (_Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"].maximumVertexTextureImageUnits */ .Z.maximumVertexTextureImageUnits === 0) {\n      throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z(\n        "Vertex texture fetch support is required to render primitives with per-instance attributes. The maximum number of vertex texture image units must be greater than zero."\n      );\n    }\n    this._batchTable.update(frameState);\n  }\n\n  if (\n    this._state !== _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMPLETE */ .Z.COMPLETE &&\n    this._state !== _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMBINED */ .Z.COMBINED\n  ) {\n    if (this.asynchronous) {\n      loadAsynchronous(this, frameState);\n    } else {\n      loadSynchronous(this, frameState);\n    }\n  }\n\n  if (this._state === _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMBINED */ .Z.COMBINED) {\n    updateBatchTableBoundingSpheres(this, frameState);\n    updateBatchTableOffsets(this, frameState);\n    createVertexArray(this, frameState);\n  }\n\n  if (!this.show || this._state !== _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMPLETE */ .Z.COMPLETE) {\n    return;\n  }\n\n  if (!this._batchTableOffsetsUpdated) {\n    updateBatchTableOffsets(this, frameState);\n  }\n  if (this._recomputeBoundingSpheres) {\n    recomputeBoundingSpheres(this, frameState);\n  }\n\n  // Create or recreate render state and shader program if appearance/material changed\n  var appearance = this.appearance;\n  var material = appearance.material;\n  var createRS = false;\n  var createSP = false;\n\n  if (this._appearance !== appearance) {\n    this._appearance = appearance;\n    this._material = material;\n    createRS = true;\n    createSP = true;\n  } else if (this._material !== material) {\n    this._material = material;\n    createSP = true;\n  }\n\n  var depthFailAppearance = this.depthFailAppearance;\n  var depthFailMaterial = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(depthFailAppearance)\n    ? depthFailAppearance.material\n    : undefined;\n\n  if (this._depthFailAppearance !== depthFailAppearance) {\n    this._depthFailAppearance = depthFailAppearance;\n    this._depthFailMaterial = depthFailMaterial;\n    createRS = true;\n    createSP = true;\n  } else if (this._depthFailMaterial !== depthFailMaterial) {\n    this._depthFailMaterial = depthFailMaterial;\n    createSP = true;\n  }\n\n  var translucent = this._appearance.isTranslucent();\n  if (this._translucent !== translucent) {\n    this._translucent = translucent;\n    createRS = true;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this._material)) {\n    this._material.update(context);\n  }\n\n  var twoPasses = appearance.closed && translucent;\n\n  if (createRS) {\n    var rsFunc = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n      this._createRenderStatesFunction,\n      createRenderStates\n    );\n    rsFunc(this, context, appearance, twoPasses);\n  }\n\n  if (createSP) {\n    var spFunc = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n      this._createShaderProgramFunction,\n      createShaderProgram\n    );\n    spFunc(this, frameState, appearance);\n  }\n\n  if (createRS || createSP) {\n    var commandFunc = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n      this._createCommandsFunction,\n      createCommands\n    );\n    commandFunc(\n      this,\n      appearance,\n      material,\n      translucent,\n      twoPasses,\n      this._colorCommands,\n      this._pickCommands,\n      frameState\n    );\n  }\n\n  var updateAndQueueCommandsFunc = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n    this._updateAndQueueCommandsFunction,\n    updateAndQueueCommands\n  );\n  updateAndQueueCommandsFunc(\n    this,\n    frameState,\n    this._colorCommands,\n    this._pickCommands,\n    this.modelMatrix,\n    this.cull,\n    this.debugShowBoundingVolume,\n    twoPasses\n  );\n};\n\nvar offsetBoundingSphereScratch1 = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar offsetBoundingSphereScratch2 = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nfunction transformBoundingSphere(boundingSphere, offset, offsetAttribute) {\n  if (offsetAttribute === _Core_GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].TOP */ .Z.TOP) {\n    var origBS = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n      boundingSphere,\n      offsetBoundingSphereScratch1\n    );\n    var offsetBS = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n      boundingSphere,\n      offsetBoundingSphereScratch2\n    );\n    offsetBS.center = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(offsetBS.center, offset, offsetBS.center);\n    boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(origBS, offsetBS, boundingSphere);\n  } else if (offsetAttribute === _Core_GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].ALL */ .Z.ALL) {\n    boundingSphere.center = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(\n      boundingSphere.center,\n      offset,\n      boundingSphere.center\n    );\n  }\n\n  return boundingSphere;\n}\n\nfunction createGetFunction(batchTable, instanceIndex, attributeIndex) {\n  return function () {\n    var attributeValue = batchTable.getBatchedAttribute(\n      instanceIndex,\n      attributeIndex\n    );\n    var attribute = batchTable.attributes[attributeIndex];\n    var componentsPerAttribute = attribute.componentsPerAttribute;\n    var value = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].createTypedArray */ .Z.createTypedArray(\n      attribute.componentDatatype,\n      componentsPerAttribute\n    );\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(attributeValue.constructor.pack)) {\n      attributeValue.constructor.pack(attributeValue, value, 0);\n    } else {\n      value[0] = attributeValue;\n    }\n    return value;\n  };\n}\n\nfunction createSetFunction(\n  batchTable,\n  instanceIndex,\n  attributeIndex,\n  primitive,\n  name\n) {\n  return function (value) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(value) ||\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(value.length) ||\n      value.length < 1 ||\n      value.length > 4\n    ) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n        "value must be and array with length between 1 and 4."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    var attributeValue = getAttributeValue(value);\n    batchTable.setBatchedAttribute(\n      instanceIndex,\n      attributeIndex,\n      attributeValue\n    );\n    if (name === "offset") {\n      primitive._recomputeBoundingSpheres = true;\n      primitive._batchTableOffsetsUpdated = false;\n    }\n  };\n}\n\nvar offsetScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nfunction createBoundingSphereProperties(primitive, properties, index) {\n  properties.boundingSphere = {\n    get: function () {\n      var boundingSphere = primitive._instanceBoundingSpheres[index];\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(boundingSphere)) {\n        boundingSphere = boundingSphere.clone();\n        var modelMatrix = primitive.modelMatrix;\n        var offset = properties.offset;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(offset)) {\n          transformBoundingSphere(\n            boundingSphere,\n            _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromArray */ .Z.fromArray(offset.get(), 0, offsetScratch),\n            primitive._offsetInstanceExtend[index]\n          );\n        }\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(modelMatrix)) {\n          boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].transform */ .Z.transform(\n            boundingSphere,\n            modelMatrix\n          );\n        }\n      }\n\n      return boundingSphere;\n    },\n  };\n  properties.boundingSphereCV = {\n    get: function () {\n      return primitive._instanceBoundingSpheresCV[index];\n    },\n  };\n}\n\nfunction createPickIdProperty(primitive, properties, index) {\n  properties.pickId = {\n    get: function () {\n      return primitive._pickIds[index];\n    },\n  };\n}\n\n/**\n * Returns the modifiable per-instance attributes for a {@link GeometryInstance}.\n *\n * @param {*} id The id of the {@link GeometryInstance}.\n * @returns {Object} The typed array in the attribute\'s format or undefined if the is no instance with id.\n *\n * @exception {DeveloperError} must call update before calling getGeometryInstanceAttributes.\n *\n * @example\n * var attributes = primitive.getGeometryInstanceAttributes(\'an id\');\n * attributes.color = Cesium.ColorGeometryInstanceAttribute.toValue(Cesium.Color.AQUA);\n * attributes.show = Cesium.ShowGeometryInstanceAttribute.toValue(true);\n * attributes.distanceDisplayCondition = Cesium.DistanceDisplayConditionGeometryInstanceAttribute.toValue(100.0, 10000.0);\n * attributes.offset = Cesium.OffsetGeometryInstanceAttribute.toValue(Cartesian3.IDENTITY);\n */\nPrimitive.prototype.getGeometryInstanceAttributes = function (id) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(id)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z("id is required");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(this._batchTable)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n      "must call update before calling getGeometryInstanceAttributes"\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var index = -1;\n  var lastIndex = this._lastPerInstanceAttributeIndex;\n  var ids = this._instanceIds;\n  var length = ids.length;\n  for (var i = 0; i < length; ++i) {\n    var curIndex = (lastIndex + i) % length;\n    if (id === ids[curIndex]) {\n      index = curIndex;\n      break;\n    }\n  }\n\n  if (index === -1) {\n    return undefined;\n  }\n\n  var attributes = this._perInstanceAttributeCache[index];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(attributes)) {\n    return attributes;\n  }\n\n  var batchTable = this._batchTable;\n  var perInstanceAttributeIndices = this._batchTableAttributeIndices;\n  attributes = {};\n  var properties = {};\n\n  for (var name in perInstanceAttributeIndices) {\n    if (perInstanceAttributeIndices.hasOwnProperty(name)) {\n      var attributeIndex = perInstanceAttributeIndices[name];\n      properties[name] = {\n        get: createGetFunction(batchTable, index, attributeIndex),\n        set: createSetFunction(batchTable, index, attributeIndex, this, name),\n      };\n    }\n  }\n\n  createBoundingSphereProperties(this, properties, index);\n  createPickIdProperty(this, properties, index);\n  Object.defineProperties(attributes, properties);\n\n  this._lastPerInstanceAttributeIndex = index;\n  this._perInstanceAttributeCache[index] = attributes;\n  return attributes;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see Primitive#destroy\n */\nPrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * e = e && e.destroy();\n *\n * @see Primitive#isDestroyed\n */\nPrimitive.prototype.destroy = function () {\n  var length;\n  var i;\n\n  this._sp = this._sp && this._sp.destroy();\n  this._spDepthFail = this._spDepthFail && this._spDepthFail.destroy();\n\n  var va = this._va;\n  length = va.length;\n  for (i = 0; i < length; ++i) {\n    va[i].destroy();\n  }\n  this._va = undefined;\n\n  var pickIds = this._pickIds;\n  length = pickIds.length;\n  for (i = 0; i < length; ++i) {\n    pickIds[i].destroy();\n  }\n  this._pickIds = undefined;\n\n  this._batchTable = this._batchTable && this._batchTable.destroy();\n\n  //These objects may be fairly large and reference other large objects (like Entities)\n  //We explicitly set them to undefined here so that the memory can be freed\n  //even if a reference to the destroyed Primitive has been kept around.\n  this._instanceIds = undefined;\n  this._perInstanceAttributeCache = undefined;\n  this._attributeLocations = undefined;\n\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this);\n};\n\nfunction setReady(primitive, frameState, state, error) {\n  primitive._error = error;\n  primitive._state = state;\n  frameState.afterRender.push(function () {\n    primitive._ready =\n      primitive._state === _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].COMPLETE */ .Z.COMPLETE ||\n      primitive._state === _PrimitiveState_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"].FAILED */ .Z.FAILED;\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z)(error)) {\n      primitive._readyPromise.resolve(primitive);\n    } else {\n      primitive._readyPromise.reject(error);\n    }\n  });\n}\n/* harmony default export */ __webpack_exports__["Z"] = (Primitive);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///34380\n')},73316:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_createGuid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(39960);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n\n\n\n\n\n\n/**\n * A collection of primitives.  This is most often used with {@link Scene#primitives},\n * but <code>PrimitiveCollection</code> is also a primitive itself so collections can\n * be added to collections forming a hierarchy.\n *\n * @alias PrimitiveCollection\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Boolean} [options.show=true] Determines if the primitives in the collection will be shown.\n * @param {Boolean} [options.destroyPrimitives=true] Determines if primitives in the collection are destroyed when they are removed.\n *\n * @example\n * var billboards = new Cesium.BillboardCollection();\n * var labels = new Cesium.LabelCollection();\n *\n * var collection = new Cesium.PrimitiveCollection();\n * collection.add(billboards);\n *\n * scene.primitives.add(collection);  // Add collection\n * scene.primitives.add(labels);      // Add regular primitive\n */\nfunction PrimitiveCollection(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  this._primitives = [];\n  this._guid = (0,_Core_createGuid_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)();\n\n  // Used by the OrderedGroundPrimitiveCollection\n  this._zIndex = undefined;\n\n  /**\n   * Determines if primitives in this collection will be shown.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.show, true);\n\n  /**\n   * Determines if primitives in the collection are destroyed when they are removed by\n   * {@link PrimitiveCollection#destroy} or  {@link PrimitiveCollection#remove} or implicitly\n   * by {@link PrimitiveCollection#removeAll}.\n   *\n   * @type {Boolean}\n   * @default true\n   *\n   * @example\n   * // Example 1. Primitives are destroyed by default.\n   * var primitives = new Cesium.PrimitiveCollection();\n   * var labels = primitives.add(new Cesium.LabelCollection());\n   * primitives = primitives.destroy();\n   * var b = labels.isDestroyed(); // true\n   *\n   * @example\n   * // Example 2. Do not destroy primitives in a collection.\n   * var primitives = new Cesium.PrimitiveCollection();\n   * primitives.destroyPrimitives = false;\n   * var labels = primitives.add(new Cesium.LabelCollection());\n   * primitives = primitives.destroy();\n   * var b = labels.isDestroyed(); // false\n   * labels = labels.destroy();    // explicitly destroy\n   */\n  this.destroyPrimitives = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.destroyPrimitives, true);\n}\n\nObject.defineProperties(PrimitiveCollection.prototype, {\n  /**\n   * Gets the number of primitives in the collection.\n   *\n   * @memberof PrimitiveCollection.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  length: {\n    get: function () {\n      return this._primitives.length;\n    },\n  },\n});\n\n/**\n * Adds a primitive to the collection.\n *\n * @param {Object} primitive The primitive to add.\n * @param {Number} [index] The index to add the layer at.  If omitted, the primitive will be added at the bottom of all existing primitives.\n * @returns {Object} The primitive added to the collection.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * var billboards = scene.primitives.add(new Cesium.BillboardCollection());\n */\nPrimitiveCollection.prototype.add = function (primitive, index) {\n  var hasIndex = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(index);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("primitive is required.");\n  }\n  if (hasIndex) {\n    if (index < 0) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("index must be greater than or equal to zero.");\n    } else if (index > this._primitives.length) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n        "index must be less than or equal to the number of primitives."\n      );\n    }\n  }\n  //>>includeEnd(\'debug\');\n\n  var external = (primitive._external = primitive._external || {});\n  var composites = (external._composites = external._composites || {});\n  composites[this._guid] = {\n    collection: this,\n  };\n\n  if (!hasIndex) {\n    this._primitives.push(primitive);\n  } else {\n    this._primitives.splice(index, 0, primitive);\n  }\n\n  return primitive;\n};\n\n/**\n * Removes a primitive from the collection.\n *\n * @param {Object} [primitive] The primitive to remove.\n * @returns {Boolean} <code>true</code> if the primitive was removed; <code>false</code> if the primitive is <code>undefined</code> or was not found in the collection.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * var billboards = scene.primitives.add(new Cesium.BillboardCollection());\n * scene.primitives.remove(billboards);  // Returns true\n *\n * @see PrimitiveCollection#destroyPrimitives\n */\nPrimitiveCollection.prototype.remove = function (primitive) {\n  // PERFORMANCE_IDEA:  We can obviously make this a lot faster.\n  if (this.contains(primitive)) {\n    var index = this._primitives.indexOf(primitive);\n    if (index !== -1) {\n      this._primitives.splice(index, 1);\n\n      delete primitive._external._composites[this._guid];\n\n      if (this.destroyPrimitives) {\n        primitive.destroy();\n      }\n\n      return true;\n    }\n    // else ... this is not possible, I swear.\n  }\n\n  return false;\n};\n\n/**\n * Removes and destroys a primitive, regardless of destroyPrimitives setting.\n * @private\n */\nPrimitiveCollection.prototype.removeAndDestroy = function (primitive) {\n  var removed = this.remove(primitive);\n  if (removed && !this.destroyPrimitives) {\n    primitive.destroy();\n  }\n  return removed;\n};\n\n/**\n * Removes all primitives in the collection.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see PrimitiveCollection#destroyPrimitives\n */\nPrimitiveCollection.prototype.removeAll = function () {\n  var primitives = this._primitives;\n  var length = primitives.length;\n  for (var i = 0; i < length; ++i) {\n    delete primitives[i]._external._composites[this._guid];\n    if (this.destroyPrimitives) {\n      primitives[i].destroy();\n    }\n  }\n  this._primitives = [];\n};\n\n/**\n * Determines if this collection contains a primitive.\n *\n * @param {Object} [primitive] The primitive to check for.\n * @returns {Boolean} <code>true</code> if the primitive is in the collection; <code>false</code> if the primitive is <code>undefined</code> or was not found in the collection.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see PrimitiveCollection#get\n */\nPrimitiveCollection.prototype.contains = function (primitive) {\n  return !!(\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive) &&\n    primitive._external &&\n    primitive._external._composites &&\n    primitive._external._composites[this._guid]\n  );\n};\n\nfunction getPrimitiveIndex(compositePrimitive, primitive) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!compositePrimitive.contains(primitive)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("primitive is not in this collection.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return compositePrimitive._primitives.indexOf(primitive);\n}\n\n/**\n * Raises a primitive "up one" in the collection.  If all primitives in the collection are drawn\n * on the globe surface, this visually moves the primitive up one.\n *\n * @param {Object} [primitive] The primitive to raise.\n *\n * @exception {DeveloperError} primitive is not in this collection.\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see PrimitiveCollection#raiseToTop\n * @see PrimitiveCollection#lower\n * @see PrimitiveCollection#lowerToBottom\n */\nPrimitiveCollection.prototype.raise = function (primitive) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive)) {\n    var index = getPrimitiveIndex(this, primitive);\n    var primitives = this._primitives;\n\n    if (index !== primitives.length - 1) {\n      var p = primitives[index];\n      primitives[index] = primitives[index + 1];\n      primitives[index + 1] = p;\n    }\n  }\n};\n\n/**\n * Raises a primitive to the "top" of the collection.  If all primitives in the collection are drawn\n * on the globe surface, this visually moves the primitive to the top.\n *\n * @param {Object} [primitive] The primitive to raise the top.\n *\n * @exception {DeveloperError} primitive is not in this collection.\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see PrimitiveCollection#raise\n * @see PrimitiveCollection#lower\n * @see PrimitiveCollection#lowerToBottom\n */\nPrimitiveCollection.prototype.raiseToTop = function (primitive) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive)) {\n    var index = getPrimitiveIndex(this, primitive);\n    var primitives = this._primitives;\n\n    if (index !== primitives.length - 1) {\n      // PERFORMANCE_IDEA:  Could be faster\n      primitives.splice(index, 1);\n      primitives.push(primitive);\n    }\n  }\n};\n\n/**\n * Lowers a primitive "down one" in the collection.  If all primitives in the collection are drawn\n * on the globe surface, this visually moves the primitive down one.\n *\n * @param {Object} [primitive] The primitive to lower.\n *\n * @exception {DeveloperError} primitive is not in this collection.\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see PrimitiveCollection#lowerToBottom\n * @see PrimitiveCollection#raise\n * @see PrimitiveCollection#raiseToTop\n */\nPrimitiveCollection.prototype.lower = function (primitive) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive)) {\n    var index = getPrimitiveIndex(this, primitive);\n    var primitives = this._primitives;\n\n    if (index !== 0) {\n      var p = primitives[index];\n      primitives[index] = primitives[index - 1];\n      primitives[index - 1] = p;\n    }\n  }\n};\n\n/**\n * Lowers a primitive to the "bottom" of the collection.  If all primitives in the collection are drawn\n * on the globe surface, this visually moves the primitive to the bottom.\n *\n * @param {Object} [primitive] The primitive to lower to the bottom.\n *\n * @exception {DeveloperError} primitive is not in this collection.\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see PrimitiveCollection#lower\n * @see PrimitiveCollection#raise\n * @see PrimitiveCollection#raiseToTop\n */\nPrimitiveCollection.prototype.lowerToBottom = function (primitive) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive)) {\n    var index = getPrimitiveIndex(this, primitive);\n    var primitives = this._primitives;\n\n    if (index !== 0) {\n      // PERFORMANCE_IDEA:  Could be faster\n      primitives.splice(index, 1);\n      primitives.unshift(primitive);\n    }\n  }\n};\n\n/**\n * Returns the primitive in the collection at the specified index.\n *\n * @param {Number} index The zero-based index of the primitive to return.\n * @returns {Object} The primitive at the <code>index</code>.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * // Toggle the show property of every primitive in the collection.\n * var primitives = scene.primitives;\n * var length = primitives.length;\n * for (var i = 0; i < length; ++i) {\n *   var p = primitives.get(i);\n *   p.show = !p.show;\n * }\n *\n * @see PrimitiveCollection#length\n */\nPrimitiveCollection.prototype.get = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(index)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("index is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return this._primitives[index];\n};\n\n/**\n * @private\n */\nPrimitiveCollection.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  var primitives = this._primitives;\n  // Using primitives.length in the loop is a temporary workaround\n  // to allow quadtree updates to add and remove primitives in\n  // update().  This will be changed to manage added and removed lists.\n  for (var i = 0; i < primitives.length; ++i) {\n    primitives[i].update(frameState);\n  }\n};\n\n/**\n * @private\n */\nPrimitiveCollection.prototype.prePassesUpdate = function (frameState) {\n  var primitives = this._primitives;\n  // Using primitives.length in the loop is a temporary workaround\n  // to allow quadtree updates to add and remove primitives in\n  // update().  This will be changed to manage added and removed lists.\n  for (var i = 0; i < primitives.length; ++i) {\n    var primitive = primitives[i];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive.prePassesUpdate)) {\n      primitive.prePassesUpdate(frameState);\n    }\n  }\n};\n\n/**\n * @private\n */\nPrimitiveCollection.prototype.updateForPass = function (frameState, passState) {\n  var primitives = this._primitives;\n  // Using primitives.length in the loop is a temporary workaround\n  // to allow quadtree updates to add and remove primitives in\n  // update().  This will be changed to manage added and removed lists.\n  for (var i = 0; i < primitives.length; ++i) {\n    var primitive = primitives[i];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive.updateForPass)) {\n      primitive.updateForPass(frameState, passState);\n    }\n  }\n};\n\n/**\n * @private\n */\nPrimitiveCollection.prototype.postPassesUpdate = function (frameState) {\n  var primitives = this._primitives;\n  // Using primitives.length in the loop is a temporary workaround\n  // to allow quadtree updates to add and remove primitives in\n  // update().  This will be changed to manage added and removed lists.\n  for (var i = 0; i < primitives.length; ++i) {\n    var primitive = primitives[i];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(primitive.postPassesUpdate)) {\n      primitive.postPassesUpdate(frameState);\n    }\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n *\n * @see PrimitiveCollection#destroy\n */\nPrimitiveCollection.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by each primitive in this collection.  Explicitly destroying this\n * collection allows for deterministic release of WebGL resources, instead of relying on the garbage\n * collector to destroy this collection.\n * <br /><br />\n * Since destroying a collection destroys all the contained primitives, only destroy a collection\n * when you are sure no other code is still using any of the contained primitives.\n * <br /><br />\n * Once this collection is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * primitives = primitives && primitives.destroy();\n *\n * @see PrimitiveCollection#isDestroyed\n */\nPrimitiveCollection.prototype.destroy = function () {\n  this.removeAll();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PrimitiveCollection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///73316\n')},1764:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50491);\n/* harmony import */ var _Core_GeographicProjection_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39756);\n/* harmony import */ var _Core_Geometry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82408);\n/* harmony import */ var _Core_GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(13616);\n/* harmony import */ var _Core_GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(56652);\n/* harmony import */ var _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(57552);\n/* harmony import */ var _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(22832);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(72248);\n/* harmony import */ var _Core_OffsetGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(82223);\n/* harmony import */ var _Core_WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(79962);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction transformToWorldCoordinates(\n  instances,\n  primitiveModelMatrix,\n  scene3DOnly\n) {\n  var toWorld = !scene3DOnly;\n  var length = instances.length;\n  var i;\n\n  if (!toWorld && length > 1) {\n    var modelMatrix = instances[0].modelMatrix;\n\n    for (i = 1; i < length; ++i) {\n      if (!_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].equals */ .Z.equals(modelMatrix, instances[i].modelMatrix)) {\n        toWorld = true;\n        break;\n      }\n    }\n  }\n\n  if (toWorld) {\n    for (i = 0; i < length; ++i) {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instances[i].geometry)) {\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].transformToWorldCoordinates */ .Z.transformToWorldCoordinates(instances[i]);\n      }\n    }\n  } else {\n    // Leave geometry in local coordinate system; auto update model-matrix.\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(\n      primitiveModelMatrix,\n      instances[0].modelMatrix,\n      primitiveModelMatrix\n    );\n  }\n}\n\nfunction addGeometryBatchId(geometry, batchId) {\n  var attributes = geometry.attributes;\n  var positionAttr = attributes.position;\n  var numberOfComponents =\n    positionAttr.values.length / positionAttr.componentsPerAttribute;\n\n  attributes.batchId = new _Core_GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 1,\n    values: new Float32Array(numberOfComponents),\n  });\n\n  var values = attributes.batchId.values;\n  for (var j = 0; j < numberOfComponents; ++j) {\n    values[j] = batchId;\n  }\n}\n\nfunction addBatchIds(instances) {\n  var length = instances.length;\n\n  for (var i = 0; i < length; ++i) {\n    var instance = instances[i];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instance.geometry)) {\n      addGeometryBatchId(instance.geometry, i);\n    } else if (\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instance.westHemisphereGeometry) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instance.eastHemisphereGeometry)\n    ) {\n      addGeometryBatchId(instance.westHemisphereGeometry, i);\n      addGeometryBatchId(instance.eastHemisphereGeometry, i);\n    }\n  }\n}\n\nfunction geometryPipeline(parameters) {\n  var instances = parameters.instances;\n  var projection = parameters.projection;\n  var uintIndexSupport = parameters.elementIndexUintSupported;\n  var scene3DOnly = parameters.scene3DOnly;\n  var vertexCacheOptimize = parameters.vertexCacheOptimize;\n  var compressVertices = parameters.compressVertices;\n  var modelMatrix = parameters.modelMatrix;\n\n  var i;\n  var geometry;\n  var primitiveType;\n  var length = instances.length;\n\n  for (i = 0; i < length; ++i) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instances[i].geometry)) {\n      primitiveType = instances[i].geometry.primitiveType;\n      break;\n    }\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  for (i = 1; i < length; ++i) {\n    if (\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instances[i].geometry) &&\n      instances[i].geometry.primitiveType !== primitiveType\n    ) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n        "All instance geometries must have the same primitiveType."\n      );\n    }\n  }\n  //>>includeEnd(\'debug\');\n\n  // Unify to world coordinates before combining.\n  transformToWorldCoordinates(instances, modelMatrix, scene3DOnly);\n\n  // Clip to IDL\n  if (!scene3DOnly) {\n    for (i = 0; i < length; ++i) {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instances[i].geometry)) {\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].splitLongitude */ .Z.splitLongitude(instances[i]);\n      }\n    }\n  }\n\n  addBatchIds(instances);\n\n  // Optimize for vertex shader caches\n  if (vertexCacheOptimize) {\n    for (i = 0; i < length; ++i) {\n      var instance = instances[i];\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instance.geometry)) {\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].reorderForPostVertexCache */ .Z.reorderForPostVertexCache(instance.geometry);\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].reorderForPreVertexCache */ .Z.reorderForPreVertexCache(instance.geometry);\n      } else if (\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instance.westHemisphereGeometry) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instance.eastHemisphereGeometry)\n      ) {\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].reorderForPostVertexCache */ .Z.reorderForPostVertexCache(\n          instance.westHemisphereGeometry\n        );\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].reorderForPreVertexCache */ .Z.reorderForPreVertexCache(\n          instance.westHemisphereGeometry\n        );\n\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].reorderForPostVertexCache */ .Z.reorderForPostVertexCache(\n          instance.eastHemisphereGeometry\n        );\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].reorderForPreVertexCache */ .Z.reorderForPreVertexCache(\n          instance.eastHemisphereGeometry\n        );\n      }\n    }\n  }\n\n  // Combine into single geometry for better rendering performance.\n  var geometries = _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].combineInstances */ .Z.combineInstances(instances);\n\n  length = geometries.length;\n  for (i = 0; i < length; ++i) {\n    geometry = geometries[i];\n\n    // Split positions for GPU RTE\n    var attributes = geometry.attributes;\n    var name;\n    if (!scene3DOnly) {\n      for (name in attributes) {\n        if (\n          attributes.hasOwnProperty(name) &&\n          attributes[name].componentDatatype === _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].DOUBLE */ .Z.DOUBLE\n        ) {\n          var name3D = name + "3D";\n          var name2D = name + "2D";\n\n          // Compute 2D positions\n          _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].projectTo2D */ .Z.projectTo2D(\n            geometry,\n            name,\n            name3D,\n            name2D,\n            projection\n          );\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry.boundingSphere) && name === "position") {\n            geometry.boundingSphereCV = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromVertices */ .Z.fromVertices(\n              geometry.attributes.position2D.values\n            );\n          }\n\n          _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].encodeAttribute */ .Z.encodeAttribute(\n            geometry,\n            name3D,\n            name3D + "High",\n            name3D + "Low"\n          );\n          _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].encodeAttribute */ .Z.encodeAttribute(\n            geometry,\n            name2D,\n            name2D + "High",\n            name2D + "Low"\n          );\n        }\n      }\n    } else {\n      for (name in attributes) {\n        if (\n          attributes.hasOwnProperty(name) &&\n          attributes[name].componentDatatype === _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].DOUBLE */ .Z.DOUBLE\n        ) {\n          _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].encodeAttribute */ .Z.encodeAttribute(\n            geometry,\n            name,\n            name + "3DHigh",\n            name + "3DLow"\n          );\n        }\n      }\n    }\n\n    // oct encode and pack normals, compress texture coordinates\n    if (compressVertices) {\n      _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].compressVertices */ .Z.compressVertices(geometry);\n    }\n  }\n\n  if (!uintIndexSupport) {\n    // Break into multiple geometries to fit within unsigned short indices if needed\n    var splitGeometries = [];\n    length = geometries.length;\n    for (i = 0; i < length; ++i) {\n      geometry = geometries[i];\n      splitGeometries = splitGeometries.concat(\n        _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fitToUnsignedShortIndices */ .Z.fitToUnsignedShortIndices(geometry)\n      );\n    }\n\n    geometries = splitGeometries;\n  }\n\n  return geometries;\n}\n\nfunction createPickOffsets(instances, geometryName, geometries, pickOffsets) {\n  var offset;\n  var indexCount;\n  var geometryIndex;\n\n  var offsetIndex = pickOffsets.length - 1;\n  if (offsetIndex >= 0) {\n    var pickOffset = pickOffsets[offsetIndex];\n    offset = pickOffset.offset + pickOffset.count;\n    geometryIndex = pickOffset.index;\n    indexCount = geometries[geometryIndex].indices.length;\n  } else {\n    offset = 0;\n    geometryIndex = 0;\n    indexCount = geometries[geometryIndex].indices.length;\n  }\n\n  var length = instances.length;\n  for (var i = 0; i < length; ++i) {\n    var instance = instances[i];\n    var geometry = instance[geometryName];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry)) {\n      continue;\n    }\n\n    var count = geometry.indices.length;\n\n    if (offset + count > indexCount) {\n      offset = 0;\n      indexCount = geometries[++geometryIndex].indices.length;\n    }\n\n    pickOffsets.push({\n      index: geometryIndex,\n      offset: offset,\n      count: count,\n    });\n    offset += count;\n  }\n}\n\nfunction createInstancePickOffsets(instances, geometries) {\n  var pickOffsets = [];\n  createPickOffsets(instances, "geometry", geometries, pickOffsets);\n  createPickOffsets(\n    instances,\n    "westHemisphereGeometry",\n    geometries,\n    pickOffsets\n  );\n  createPickOffsets(\n    instances,\n    "eastHemisphereGeometry",\n    geometries,\n    pickOffsets\n  );\n  return pickOffsets;\n}\n\n/**\n * @private\n */\nvar PrimitivePipeline = {};\n\n/**\n * @private\n */\nPrimitivePipeline.combineGeometry = function (parameters) {\n  var geometries;\n  var attributeLocations;\n  var instances = parameters.instances;\n  var length = instances.length;\n  var pickOffsets;\n\n  var offsetInstanceExtend;\n  var hasOffset = false;\n  if (length > 0) {\n    geometries = geometryPipeline(parameters);\n    if (geometries.length > 0) {\n      attributeLocations = _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].createAttributeLocations */ .Z.createAttributeLocations(\n        geometries[0]\n      );\n      if (parameters.createPickOffsets) {\n        pickOffsets = createInstancePickOffsets(instances, geometries);\n      }\n    }\n    if (\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instances[0].attributes) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instances[0].attributes.offset)\n    ) {\n      offsetInstanceExtend = new Array(length);\n      hasOffset = true;\n    }\n  }\n\n  var boundingSpheres = new Array(length);\n  var boundingSpheresCV = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    var instance = instances[i];\n    var geometry = instance.geometry;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry)) {\n      boundingSpheres[i] = geometry.boundingSphere;\n      boundingSpheresCV[i] = geometry.boundingSphereCV;\n      if (hasOffset) {\n        offsetInstanceExtend[i] = instance.geometry.offsetAttribute;\n      }\n    }\n\n    var eastHemisphereGeometry = instance.eastHemisphereGeometry;\n    var westHemisphereGeometry = instance.westHemisphereGeometry;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(eastHemisphereGeometry) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(westHemisphereGeometry)) {\n      if (\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(eastHemisphereGeometry.boundingSphere) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(westHemisphereGeometry.boundingSphere)\n      ) {\n        boundingSpheres[i] = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(\n          eastHemisphereGeometry.boundingSphere,\n          westHemisphereGeometry.boundingSphere\n        );\n      }\n      if (\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(eastHemisphereGeometry.boundingSphereCV) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(westHemisphereGeometry.boundingSphereCV)\n      ) {\n        boundingSpheresCV[i] = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(\n          eastHemisphereGeometry.boundingSphereCV,\n          westHemisphereGeometry.boundingSphereCV\n        );\n      }\n    }\n  }\n\n  return {\n    geometries: geometries,\n    modelMatrix: parameters.modelMatrix,\n    attributeLocations: attributeLocations,\n    pickOffsets: pickOffsets,\n    offsetInstanceExtend: offsetInstanceExtend,\n    boundingSpheres: boundingSpheres,\n    boundingSpheresCV: boundingSpheresCV,\n  };\n};\n\nfunction transferGeometry(geometry, transferableObjects) {\n  var attributes = geometry.attributes;\n  for (var name in attributes) {\n    if (attributes.hasOwnProperty(name)) {\n      var attribute = attributes[name];\n\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(attribute) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(attribute.values)) {\n        transferableObjects.push(attribute.values.buffer);\n      }\n    }\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry.indices)) {\n    transferableObjects.push(geometry.indices.buffer);\n  }\n}\n\nfunction transferGeometries(geometries, transferableObjects) {\n  var length = geometries.length;\n  for (var i = 0; i < length; ++i) {\n    transferGeometry(geometries[i], transferableObjects);\n  }\n}\n\n// This function was created by simplifying packCreateGeometryResults into a count-only operation.\nfunction countCreateGeometryResults(items) {\n  var count = 1;\n  var length = items.length;\n  for (var i = 0; i < length; i++) {\n    var geometry = items[i];\n    ++count;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry)) {\n      continue;\n    }\n\n    var attributes = geometry.attributes;\n\n    count +=\n      7 +\n      2 * _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packedLength */ .Z.packedLength +\n      ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry.indices) ? geometry.indices.length : 0);\n\n    for (var property in attributes) {\n      if (\n        attributes.hasOwnProperty(property) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(attributes[property])\n      ) {\n        var attribute = attributes[property];\n        count += 5 + attribute.values.length;\n      }\n    }\n  }\n\n  return count;\n}\n\n/**\n * @private\n */\nPrimitivePipeline.packCreateGeometryResults = function (\n  items,\n  transferableObjects\n) {\n  var packedData = new Float64Array(countCreateGeometryResults(items));\n  var stringTable = [];\n  var stringHash = {};\n\n  var length = items.length;\n  var count = 0;\n  packedData[count++] = length;\n  for (var i = 0; i < length; i++) {\n    var geometry = items[i];\n\n    var validGeometry = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry);\n    packedData[count++] = validGeometry ? 1.0 : 0.0;\n\n    if (!validGeometry) {\n      continue;\n    }\n\n    packedData[count++] = geometry.primitiveType;\n    packedData[count++] = geometry.geometryType;\n    packedData[count++] = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(geometry.offsetAttribute, -1);\n\n    var validBoundingSphere = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry.boundingSphere) ? 1.0 : 0.0;\n    packedData[count++] = validBoundingSphere;\n    if (validBoundingSphere) {\n      _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(geometry.boundingSphere, packedData, count);\n    }\n\n    count += _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packedLength */ .Z.packedLength;\n\n    var validBoundingSphereCV = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry.boundingSphereCV) ? 1.0 : 0.0;\n    packedData[count++] = validBoundingSphereCV;\n    if (validBoundingSphereCV) {\n      _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(geometry.boundingSphereCV, packedData, count);\n    }\n\n    count += _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packedLength */ .Z.packedLength;\n\n    var attributes = geometry.attributes;\n    var attributesToWrite = [];\n    for (var property in attributes) {\n      if (\n        attributes.hasOwnProperty(property) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(attributes[property])\n      ) {\n        attributesToWrite.push(property);\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(stringHash[property])) {\n          stringHash[property] = stringTable.length;\n          stringTable.push(property);\n        }\n      }\n    }\n\n    packedData[count++] = attributesToWrite.length;\n    for (var q = 0; q < attributesToWrite.length; q++) {\n      var name = attributesToWrite[q];\n      var attribute = attributes[name];\n      packedData[count++] = stringHash[name];\n      packedData[count++] = attribute.componentDatatype;\n      packedData[count++] = attribute.componentsPerAttribute;\n      packedData[count++] = attribute.normalize ? 1 : 0;\n      packedData[count++] = attribute.values.length;\n      packedData.set(attribute.values, count);\n      count += attribute.values.length;\n    }\n\n    var indicesLength = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(geometry.indices) ? geometry.indices.length : 0;\n    packedData[count++] = indicesLength;\n\n    if (indicesLength > 0) {\n      packedData.set(geometry.indices, count);\n      count += indicesLength;\n    }\n  }\n\n  transferableObjects.push(packedData.buffer);\n\n  return {\n    stringTable: stringTable,\n    packedData: packedData,\n  };\n};\n\n/**\n * @private\n */\nPrimitivePipeline.unpackCreateGeometryResults = function (\n  createGeometryResult\n) {\n  var stringTable = createGeometryResult.stringTable;\n  var packedGeometry = createGeometryResult.packedData;\n\n  var i;\n  var result = new Array(packedGeometry[0]);\n  var resultIndex = 0;\n\n  var packedGeometryIndex = 1;\n  while (packedGeometryIndex < packedGeometry.length) {\n    var valid = packedGeometry[packedGeometryIndex++] === 1.0;\n    if (!valid) {\n      result[resultIndex++] = undefined;\n      continue;\n    }\n\n    var primitiveType = packedGeometry[packedGeometryIndex++];\n    var geometryType = packedGeometry[packedGeometryIndex++];\n    var offsetAttribute = packedGeometry[packedGeometryIndex++];\n    if (offsetAttribute === -1) {\n      offsetAttribute = undefined;\n    }\n\n    var boundingSphere;\n    var boundingSphereCV;\n\n    var validBoundingSphere = packedGeometry[packedGeometryIndex++] === 1.0;\n    if (validBoundingSphere) {\n      boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(\n        packedGeometry,\n        packedGeometryIndex\n      );\n    }\n\n    packedGeometryIndex += _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packedLength */ .Z.packedLength;\n\n    var validBoundingSphereCV = packedGeometry[packedGeometryIndex++] === 1.0;\n    if (validBoundingSphereCV) {\n      boundingSphereCV = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(\n        packedGeometry,\n        packedGeometryIndex\n      );\n    }\n\n    packedGeometryIndex += _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packedLength */ .Z.packedLength;\n\n    var length;\n    var values;\n    var componentsPerAttribute;\n    var attributes = new _Core_GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z();\n    var numAttributes = packedGeometry[packedGeometryIndex++];\n    for (i = 0; i < numAttributes; i++) {\n      var name = stringTable[packedGeometry[packedGeometryIndex++]];\n      var componentDatatype = packedGeometry[packedGeometryIndex++];\n      componentsPerAttribute = packedGeometry[packedGeometryIndex++];\n      var normalize = packedGeometry[packedGeometryIndex++] !== 0;\n\n      length = packedGeometry[packedGeometryIndex++];\n      values = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].createTypedArray */ .Z.createTypedArray(componentDatatype, length);\n      for (var valuesIndex = 0; valuesIndex < length; valuesIndex++) {\n        values[valuesIndex] = packedGeometry[packedGeometryIndex++];\n      }\n\n      attributes[name] = new _Core_GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n        componentDatatype: componentDatatype,\n        componentsPerAttribute: componentsPerAttribute,\n        normalize: normalize,\n        values: values,\n      });\n    }\n\n    var indices;\n    length = packedGeometry[packedGeometryIndex++];\n\n    if (length > 0) {\n      var numberOfVertices = values.length / componentsPerAttribute;\n      indices = _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].createTypedArray */ .Z.createTypedArray(numberOfVertices, length);\n      for (i = 0; i < length; i++) {\n        indices[i] = packedGeometry[packedGeometryIndex++];\n      }\n    }\n\n    result[resultIndex++] = new _Core_Geometry_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n      primitiveType: primitiveType,\n      geometryType: geometryType,\n      boundingSphere: boundingSphere,\n      boundingSphereCV: boundingSphereCV,\n      indices: indices,\n      attributes: attributes,\n      offsetAttribute: offsetAttribute,\n    });\n  }\n\n  return result;\n};\n\nfunction packInstancesForCombine(instances, transferableObjects) {\n  var length = instances.length;\n  var packedData = new Float64Array(1 + length * 19);\n  var count = 0;\n  packedData[count++] = length;\n  for (var i = 0; i < length; i++) {\n    var instance = instances[i];\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].pack */ .Z.pack(instance.modelMatrix, packedData, count);\n    count += _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].packedLength */ .Z.packedLength;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instance.attributes) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(instance.attributes.offset)) {\n      var values = instance.attributes.offset.value;\n      packedData[count] = values[0];\n      packedData[count + 1] = values[1];\n      packedData[count + 2] = values[2];\n    }\n    count += 3;\n  }\n  transferableObjects.push(packedData.buffer);\n\n  return packedData;\n}\n\nfunction unpackInstancesForCombine(data) {\n  var packedInstances = data;\n  var result = new Array(packedInstances[0]);\n  var count = 0;\n\n  var i = 1;\n  while (i < packedInstances.length) {\n    var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].unpack */ .Z.unpack(packedInstances, i);\n    var attributes;\n    i += _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].packedLength */ .Z.packedLength;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(packedInstances[i])) {\n      attributes = {\n        offset: new _Core_OffsetGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z(\n          packedInstances[i],\n          packedInstances[i + 1],\n          packedInstances[i + 2]\n        ),\n      };\n    }\n    i += 3;\n\n    result[count++] = {\n      modelMatrix: modelMatrix,\n      attributes: attributes,\n    };\n  }\n\n  return result;\n}\n\n/**\n * @private\n */\nPrimitivePipeline.packCombineGeometryParameters = function (\n  parameters,\n  transferableObjects\n) {\n  var createGeometryResults = parameters.createGeometryResults;\n  var length = createGeometryResults.length;\n\n  for (var i = 0; i < length; i++) {\n    transferableObjects.push(createGeometryResults[i].packedData.buffer);\n  }\n\n  return {\n    createGeometryResults: parameters.createGeometryResults,\n    packedInstances: packInstancesForCombine(\n      parameters.instances,\n      transferableObjects\n    ),\n    ellipsoid: parameters.ellipsoid,\n    isGeographic: parameters.projection instanceof _Core_GeographicProjection_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z,\n    elementIndexUintSupported: parameters.elementIndexUintSupported,\n    scene3DOnly: parameters.scene3DOnly,\n    vertexCacheOptimize: parameters.vertexCacheOptimize,\n    compressVertices: parameters.compressVertices,\n    modelMatrix: parameters.modelMatrix,\n    createPickOffsets: parameters.createPickOffsets,\n  };\n};\n\n/**\n * @private\n */\nPrimitivePipeline.unpackCombineGeometryParameters = function (\n  packedParameters\n) {\n  var instances = unpackInstancesForCombine(packedParameters.packedInstances);\n  var createGeometryResults = packedParameters.createGeometryResults;\n  var length = createGeometryResults.length;\n  var instanceIndex = 0;\n\n  for (var resultIndex = 0; resultIndex < length; resultIndex++) {\n    var geometries = PrimitivePipeline.unpackCreateGeometryResults(\n      createGeometryResults[resultIndex]\n    );\n    var geometriesLength = geometries.length;\n    for (\n      var geometryIndex = 0;\n      geometryIndex < geometriesLength;\n      geometryIndex++\n    ) {\n      var geometry = geometries[geometryIndex];\n      var instance = instances[instanceIndex];\n      instance.geometry = geometry;\n      ++instanceIndex;\n    }\n  }\n\n  var ellipsoid = _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(packedParameters.ellipsoid);\n  var projection = packedParameters.isGeographic\n    ? new _Core_GeographicProjection_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(ellipsoid)\n    : new _Core_WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z(ellipsoid);\n\n  return {\n    instances: instances,\n    ellipsoid: ellipsoid,\n    projection: projection,\n    elementIndexUintSupported: packedParameters.elementIndexUintSupported,\n    scene3DOnly: packedParameters.scene3DOnly,\n    vertexCacheOptimize: packedParameters.vertexCacheOptimize,\n    compressVertices: packedParameters.compressVertices,\n    modelMatrix: _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(packedParameters.modelMatrix),\n    createPickOffsets: packedParameters.createPickOffsets,\n  };\n};\n\nfunction packBoundingSpheres(boundingSpheres) {\n  var length = boundingSpheres.length;\n  var bufferLength = 1 + (_Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packedLength */ .Z.packedLength + 1) * length;\n  var buffer = new Float32Array(bufferLength);\n\n  var bufferIndex = 0;\n  buffer[bufferIndex++] = length;\n\n  for (var i = 0; i < length; ++i) {\n    var bs = boundingSpheres[i];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(bs)) {\n      buffer[bufferIndex++] = 0.0;\n    } else {\n      buffer[bufferIndex++] = 1.0;\n      _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(boundingSpheres[i], buffer, bufferIndex);\n    }\n    bufferIndex += _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packedLength */ .Z.packedLength;\n  }\n\n  return buffer;\n}\n\nfunction unpackBoundingSpheres(buffer) {\n  var result = new Array(buffer[0]);\n  var count = 0;\n\n  var i = 1;\n  while (i < buffer.length) {\n    if (buffer[i++] === 1.0) {\n      result[count] = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(buffer, i);\n    }\n    ++count;\n    i += _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packedLength */ .Z.packedLength;\n  }\n\n  return result;\n}\n\n/**\n * @private\n */\nPrimitivePipeline.packCombineGeometryResults = function (\n  results,\n  transferableObjects\n) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(results.geometries)) {\n    transferGeometries(results.geometries, transferableObjects);\n  }\n\n  var packedBoundingSpheres = packBoundingSpheres(results.boundingSpheres);\n  var packedBoundingSpheresCV = packBoundingSpheres(results.boundingSpheresCV);\n  transferableObjects.push(\n    packedBoundingSpheres.buffer,\n    packedBoundingSpheresCV.buffer\n  );\n\n  return {\n    geometries: results.geometries,\n    attributeLocations: results.attributeLocations,\n    modelMatrix: results.modelMatrix,\n    pickOffsets: results.pickOffsets,\n    offsetInstanceExtend: results.offsetInstanceExtend,\n    boundingSpheres: packedBoundingSpheres,\n    boundingSpheresCV: packedBoundingSpheresCV,\n  };\n};\n\n/**\n * @private\n */\nPrimitivePipeline.unpackCombineGeometryResults = function (packedResult) {\n  return {\n    geometries: packedResult.geometries,\n    attributeLocations: packedResult.attributeLocations,\n    modelMatrix: packedResult.modelMatrix,\n    pickOffsets: packedResult.pickOffsets,\n    offsetInstanceExtend: packedResult.offsetInstanceExtend,\n    boundingSpheres: unpackBoundingSpheres(packedResult.boundingSpheres),\n    boundingSpheresCV: unpackBoundingSpheres(packedResult.boundingSpheresCV),\n  };\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PrimitivePipeline);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1764\n')},88736:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * @private\n */\nvar PrimitiveState = {\n  READY: 0,\n  CREATING: 1,\n  CREATED: 2,\n  COMBINING: 3,\n  COMBINED: 4,\n  COMPLETE: 5,\n  FAILED: 6,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(PrimitiveState));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODg3MzYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsNkJBQTZCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvUHJpbWl0aXZlU3RhdGUuanM/ZjgxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwcml2YXRlXG4gKi9cbnZhciBQcmltaXRpdmVTdGF0ZSA9IHtcbiAgUkVBRFk6IDAsXG4gIENSRUFUSU5HOiAxLFxuICBDUkVBVEVEOiAyLFxuICBDT01CSU5JTkc6IDMsXG4gIENPTUJJTkVEOiA0LFxuICBDT01QTEVURTogNSxcbiAgRkFJTEVEOiA2LFxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoUHJpbWl0aXZlU3RhdGUpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///88736\n')}}]);