"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[7286],{35492:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_Event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14459);\n/* harmony import */ var _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55293);\n/* harmony import */ var _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(61841);\n/* harmony import */ var _ModelAnimationState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45633);\n\n\n\n\n\n\n/**\n * An active glTF animation.  A glTF asset can contain animations.  An active animation\n * is an animation that is currently playing or scheduled to be played because it was\n * added to a model\'s {@link ModelAnimationCollection}.  An active animation is an\n * instance of an animation; for example, there can be multiple active animations\n * for the same glTF animation, each with a different start time.\n * <p>\n * Create this by calling {@link ModelAnimationCollection#add}.\n * </p>\n *\n * @alias ModelAnimation\n * @internalConstructor\n * @class\n *\n * @see ModelAnimationCollection#add\n */\nfunction ModelAnimation(options, model, runtimeAnimation) {\n  this._name = runtimeAnimation.name;\n  this._startTime = _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(options.startTime);\n  this._delay = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.delay, 0.0); // in seconds\n  this._stopTime = options.stopTime;\n\n  /**\n   * When <code>true</code>, the animation is removed after it stops playing.\n   * This is slightly more efficient that not removing it, but if, for example,\n   * time is reversed, the animation is not played again.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.removeOnStop = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.removeOnStop, false);\n  this._multiplier = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.multiplier, 1.0);\n  this._reverse = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.reverse, false);\n  this._loop = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.loop, _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].NONE */ .Z.NONE);\n\n  /**\n   * The event fired when this animation is started.  This can be used, for\n   * example, to play a sound or start a particle system, when the animation starts.\n   * <p>\n   * This event is fired at the end of the frame after the scene is rendered.\n   * </p>\n   *\n   * @type {Event}\n   * @default new Event()\n   *\n   * @example\n   * animation.start.addEventListener(function(model, animation) {\n   *   console.log(\'Animation started: \' + animation.name);\n   * });\n   */\n  this.start = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  /**\n   * The event fired when on each frame when this animation is updated.  The\n   * current time of the animation, relative to the glTF animation time span, is\n   * passed to the event, which allows, for example, starting new animations at a\n   * specific time relative to a playing animation.\n   * <p>\n   * This event is fired at the end of the frame after the scene is rendered.\n   * </p>\n   *\n   * @type {Event}\n   * @default new Event()\n   *\n   * @example\n   * animation.update.addEventListener(function(model, animation, time) {\n   *   console.log(\'Animation updated: \' + animation.name + \'. glTF animation time: \' + time);\n   * });\n   */\n  this.update = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  /**\n   * The event fired when this animation is stopped.  This can be used, for\n   * example, to play a sound or start a particle system, when the animation stops.\n   * <p>\n   * This event is fired at the end of the frame after the scene is rendered.\n   * </p>\n   *\n   * @type {Event}\n   * @default new Event()\n   *\n   * @example\n   * animation.stop.addEventListener(function(model, animation) {\n   *   console.log(\'Animation stopped: \' + animation.name);\n   * });\n   */\n  this.stop = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  this._state = _ModelAnimationState_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].STOPPED */ .Z.STOPPED;\n  this._runtimeAnimation = runtimeAnimation;\n\n  // Set during animation update\n  this._computedStartTime = undefined;\n  this._duration = undefined;\n\n  // To avoid allocations in ModelAnimationCollection.update\n  var that = this;\n  this._raiseStartEvent = function () {\n    that.start.raiseEvent(model, that);\n  };\n  this._updateEventTime = 0.0;\n  this._raiseUpdateEvent = function () {\n    that.update.raiseEvent(model, that, that._updateEventTime);\n  };\n  this._raiseStopEvent = function () {\n    that.stop.raiseEvent(model, that);\n  };\n}\n\nObject.defineProperties(ModelAnimation.prototype, {\n  /**\n   * The glTF animation name that identifies this animation.\n   *\n   * @memberof ModelAnimation.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The scene time to start playing this animation.  When this is <code>undefined</code>,\n   * the animation starts at the next frame.\n   *\n   * @memberof ModelAnimation.prototype\n   *\n   * @type {JulianDate}\n   * @readonly\n   *\n   * @default undefined\n   */\n  startTime: {\n    get: function () {\n      return this._startTime;\n    },\n  },\n\n  /**\n   * The delay, in seconds, from {@link ModelAnimation#startTime} to start playing.\n   *\n   * @memberof ModelAnimation.prototype\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @default undefined\n   */\n  delay: {\n    get: function () {\n      return this._delay;\n    },\n  },\n\n  /**\n   * The scene time to stop playing this animation.  When this is <code>undefined</code>,\n   * the animation is played for its full duration and perhaps repeated depending on\n   * {@link ModelAnimation#loop}.\n   *\n   * @memberof ModelAnimation.prototype\n   *\n   * @type {JulianDate}\n   * @readonly\n   *\n   * @default undefined\n   */\n  stopTime: {\n    get: function () {\n      return this._stopTime;\n    },\n  },\n  /**\n   * Values greater than <code>1.0</code> increase the speed that the animation is played relative\n   * to the scene clock speed; values less than <code>1.0</code> decrease the speed.  A value of\n   * <code>1.0</code> plays the animation at the speed in the glTF animation mapped to the scene\n   * clock speed.  For example, if the scene is played at 2x real-time, a two-second glTF animation\n   * will play in one second even if <code>multiplier</code> is <code>1.0</code>.\n   *\n   * @memberof ModelAnimation.prototype\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @default 1.0\n   */\n  multiplier: {\n    get: function () {\n      return this._multiplier;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the animation is played in reverse.\n   *\n   * @memberof ModelAnimation.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  reverse: {\n    get: function () {\n      return this._reverse;\n    },\n  },\n\n  /**\n   * Determines if and how the animation is looped.\n   *\n   * @memberof ModelAnimation.prototype\n   *\n   * @type {ModelAnimationLoop}\n   * @readonly\n   *\n   * @default {@link ModelAnimationLoop.NONE}\n   */\n  loop: {\n    get: function () {\n      return this._loop;\n    },\n  },\n});\n/* harmony default export */ __webpack_exports__["Z"] = (ModelAnimation);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///35492\n')},81977:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(82982);\n/* harmony import */ var _Core_LinearSpline_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96304);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87811);\n/* harmony import */ var _Core_QuaternionSpline_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(30172);\n/* harmony import */ var _Core_Spline_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(84543);\n/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(52200);\n/* harmony import */ var _Core_WeightSpline_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(32988);\n/* harmony import */ var _GltfPipeline_getAccessorByteStride_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(93224);\n/* harmony import */ var _GltfPipeline_numberOfComponentsForType_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(26806);\n/* harmony import */ var _AttributeType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(77072);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nfunction ModelAnimationCache() {}\n\nvar dataUriRegex = /^data\\:/i;\n\nfunction getAccessorKey(model, accessor) {\n  var gltf = model.gltf;\n  var buffers = gltf.buffers;\n  var bufferViews = gltf.bufferViews;\n\n  var bufferView = bufferViews[accessor.bufferView];\n  var buffer = buffers[bufferView.buffer];\n\n  var byteOffset = bufferView.byteOffset + accessor.byteOffset;\n  var byteLength = accessor.count * (0,_GltfPipeline_numberOfComponentsForType_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(accessor.type);\n\n  var uriKey = dataUriRegex.test(buffer.uri) ? "" : buffer.uri;\n  return model.cacheKey + "//" + uriKey + "/" + byteOffset + "/" + byteLength;\n}\n\nvar cachedAnimationParameters = {};\n\nModelAnimationCache.getAnimationParameterValues = function (model, accessor) {\n  var key = getAccessorKey(model, accessor);\n  var values = cachedAnimationParameters[key];\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(values)) {\n    // Cache miss\n    var gltf = model.gltf;\n\n    var buffers = gltf.buffers;\n    var bufferViews = gltf.bufferViews;\n\n    var bufferView = bufferViews[accessor.bufferView];\n    var bufferId = bufferView.buffer;\n    var buffer = buffers[bufferId];\n    var source = buffer.extras._pipeline.source;\n\n    var componentType = accessor.componentType;\n    var type = accessor.type;\n    var numberOfComponents = (0,_GltfPipeline_numberOfComponentsForType_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(type);\n    var count = accessor.count;\n    var byteStride = (0,_GltfPipeline_getAccessorByteStride_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(gltf, accessor);\n\n    values = new Array(count);\n    var accessorByteOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(accessor.byteOffset, 0);\n    var byteOffset = bufferView.byteOffset + accessorByteOffset;\n    for (var i = 0; i < count; i++) {\n      var typedArrayView = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].createArrayBufferView */ .Z.createArrayBufferView(\n        componentType,\n        source.buffer,\n        source.byteOffset + byteOffset,\n        numberOfComponents\n      );\n      if (type === "SCALAR") {\n        values[i] = typedArrayView[0];\n      } else if (type === "VEC3") {\n        values[i] = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromArray */ .Z.fromArray(typedArrayView);\n      } else if (type === "VEC4") {\n        values[i] = _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].unpack */ .Z.unpack(typedArrayView);\n      }\n      byteOffset += byteStride;\n    }\n    // GLTF_SPEC: Support more parameter types when glTF supports targeting materials. https://github.com/KhronosGroup/glTF/issues/142\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(model.cacheKey)) {\n      // Only cache when we can create a unique id\n      cachedAnimationParameters[key] = values;\n    }\n  }\n\n  return values;\n};\n\nvar cachedAnimationSplines = {};\n\nfunction getAnimationSplineKey(model, animationName, samplerName) {\n  return model.cacheKey + "//" + animationName + "/" + samplerName;\n}\n\nfunction ConstantSpline(value) {\n  this._value = value;\n}\nConstantSpline.prototype.evaluate = function (time, result) {\n  return this._value;\n};\nConstantSpline.prototype.wrapTime = function (time) {\n  return 0.0;\n};\nConstantSpline.prototype.clampTime = function (time) {\n  return 0.0;\n};\n\nfunction SteppedSpline(backingSpline) {\n  this._spline = backingSpline;\n  this._lastTimeIndex = 0;\n}\nSteppedSpline.prototype.findTimeInterval = _Core_Spline_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].prototype.findTimeInterval */ .Z.prototype.findTimeInterval;\nSteppedSpline.prototype.evaluate = function (time, result) {\n  var i = (this._lastTimeIndex = this.findTimeInterval(\n    time,\n    this._lastTimeIndex\n  ));\n  var times = this._spline.times;\n  var steppedTime = time >= times[i + 1] ? times[i + 1] : times[i];\n  return this._spline.evaluate(steppedTime, result);\n};\nObject.defineProperties(SteppedSpline.prototype, {\n  times: {\n    get: function () {\n      return this._spline.times;\n    },\n  },\n});\nSteppedSpline.prototype.wrapTime = function (time) {\n  return this._spline.wrapTime(time);\n};\nSteppedSpline.prototype.clampTime = function (time) {\n  return this._spline.clampTime(time);\n};\n\nModelAnimationCache.getAnimationSpline = function (\n  model,\n  animationName,\n  animation,\n  samplerName,\n  sampler,\n  input,\n  path,\n  output\n) {\n  var key = getAnimationSplineKey(model, animationName, samplerName);\n  var spline = cachedAnimationSplines[key];\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(spline)) {\n    var times = input;\n    var controlPoints = output;\n\n    if (times.length === 1 && controlPoints.length === 1) {\n      spline = new ConstantSpline(controlPoints[0]);\n    } else if (\n      sampler.interpolation === "LINEAR" ||\n      sampler.interpolation === "STEP"\n    ) {\n      if (path === "translation" || path === "scale") {\n        spline = new _Core_LinearSpline_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z({\n          times: times,\n          points: controlPoints,\n        });\n      } else if (path === "rotation") {\n        spline = new _Core_QuaternionSpline_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n          times: times,\n          points: controlPoints,\n        });\n      } else if (path === "weights") {\n        spline = new _Core_WeightSpline_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n          times: times,\n          weights: controlPoints,\n        });\n      }\n\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(spline) && sampler.interpolation === "STEP") {\n        spline = new SteppedSpline(spline);\n      }\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(model.cacheKey)) {\n      // Only cache when we can create a unique id\n      cachedAnimationSplines[key] = spline;\n    }\n  }\n\n  return spline;\n};\n\nvar cachedSkinInverseBindMatrices = {};\n\nModelAnimationCache.getSkinInverseBindMatrices = function (model, accessor) {\n  var key = getAccessorKey(model, accessor);\n  var matrices = cachedSkinInverseBindMatrices[key];\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(matrices)) {\n    // Cache miss\n    var gltf = model.gltf;\n    var buffers = gltf.buffers;\n    var bufferViews = gltf.bufferViews;\n\n    var bufferViewId = accessor.bufferView;\n    var bufferView = bufferViews[bufferViewId];\n    var bufferId = bufferView.buffer;\n    var buffer = buffers[bufferId];\n    var source = buffer.extras._pipeline.source;\n\n    var componentType = accessor.componentType;\n    var type = accessor.type;\n    var count = accessor.count;\n    var byteStride = (0,_GltfPipeline_getAccessorByteStride_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(gltf, accessor);\n    var byteOffset = bufferView.byteOffset + accessor.byteOffset;\n    var numberOfComponents = (0,_GltfPipeline_numberOfComponentsForType_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(type);\n\n    matrices = new Array(count);\n\n    if (componentType === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT && type === _AttributeType_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].MAT4 */ .Z.MAT4) {\n      for (var i = 0; i < count; ++i) {\n        var typedArrayView = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].createArrayBufferView */ .Z.createArrayBufferView(\n          componentType,\n          source.buffer,\n          source.byteOffset + byteOffset,\n          numberOfComponents\n        );\n        matrices[i] = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromArray */ .Z.fromArray(typedArrayView);\n        byteOffset += byteStride;\n      }\n    }\n\n    cachedSkinInverseBindMatrices[key] = matrices;\n  }\n\n  return matrices;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ModelAnimationCache);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODE5NzcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0M7QUFDYztBQUNWO0FBQ1Y7QUFDVTtBQUNWO0FBQ007QUFDWTtBQUNwQjtBQUNnQjtBQUNKO0FBQ3lCO0FBQ1E7QUFDckM7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0MsZ0dBQXlCOztBQUU3RDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLE9BQU8sc0VBQU87QUFDZDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QixnR0FBeUI7QUFDdEQ7QUFDQSxxQkFBcUIsNEZBQXFCOztBQUUxQztBQUNBLDZCQUE2QiwwRUFBWTtBQUN6QztBQUNBLG9CQUFvQixXQUFXO0FBQy9CLDJCQUEyQix1SEFBdUM7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1Isb0JBQW9CLHdGQUFvQjtBQUN4QyxRQUFRO0FBQ1Isb0JBQW9CLGtGQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHNIQUFpQztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTyxzRUFBTztBQUNkO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixzRUFBWTtBQUNqQztBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUixxQkFBcUIsMEVBQWdCO0FBQ3JDO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSLHFCQUFxQixzRUFBWTtBQUNqQztBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBLFVBQVUsc0VBQU87QUFDakI7QUFDQTtBQUNBOztBQUVBLFFBQVEsc0VBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPLHNFQUFPO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNEZBQXFCO0FBQzFDO0FBQ0EsNkJBQTZCLGdHQUF5Qjs7QUFFdEQ7O0FBRUEsMEJBQTBCLG9GQUFvQixhQUFhLDZFQUFrQjtBQUM3RSxzQkFBc0IsV0FBVztBQUNqQyw2QkFBNkIsdUhBQXVDO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IscUZBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx5REFBZSxtQkFBbUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9Nb2RlbEFuaW1hdGlvbkNhY2hlLmpzPzQwOTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhcnRlc2lhbjMgZnJvbSBcIi4uL0NvcmUvQ2FydGVzaWFuMy5qc1wiO1xuaW1wb3J0IENvbXBvbmVudERhdGF0eXBlIGZyb20gXCIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlLmpzXCI7XG5pbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuLi9Db3JlL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuaW1wb3J0IExpbmVhclNwbGluZSBmcm9tIFwiLi4vQ29yZS9MaW5lYXJTcGxpbmUuanNcIjtcbmltcG9ydCBNYXRyaXg0IGZyb20gXCIuLi9Db3JlL01hdHJpeDQuanNcIjtcbmltcG9ydCBRdWF0ZXJuaW9uIGZyb20gXCIuLi9Db3JlL1F1YXRlcm5pb24uanNcIjtcbmltcG9ydCBRdWF0ZXJuaW9uU3BsaW5lIGZyb20gXCIuLi9Db3JlL1F1YXRlcm5pb25TcGxpbmUuanNcIjtcbmltcG9ydCBTcGxpbmUgZnJvbSBcIi4uL0NvcmUvU3BsaW5lLmpzXCI7XG5pbXBvcnQgV2ViR0xDb25zdGFudHMgZnJvbSBcIi4uL0NvcmUvV2ViR0xDb25zdGFudHMuanNcIjtcbmltcG9ydCBXZWlnaHRTcGxpbmUgZnJvbSBcIi4uL0NvcmUvV2VpZ2h0U3BsaW5lLmpzXCI7XG5pbXBvcnQgZ2V0QWNjZXNzb3JCeXRlU3RyaWRlIGZyb20gXCIuL0dsdGZQaXBlbGluZS9nZXRBY2Nlc3NvckJ5dGVTdHJpZGUuanNcIjtcbmltcG9ydCBudW1iZXJPZkNvbXBvbmVudHNGb3JUeXBlIGZyb20gXCIuL0dsdGZQaXBlbGluZS9udW1iZXJPZkNvbXBvbmVudHNGb3JUeXBlLmpzXCI7XG5pbXBvcnQgQXR0cmlidXRlVHlwZSBmcm9tIFwiLi9BdHRyaWJ1dGVUeXBlLmpzXCI7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gTW9kZWxBbmltYXRpb25DYWNoZSgpIHt9XG5cbnZhciBkYXRhVXJpUmVnZXggPSAvXmRhdGFcXDovaTtcblxuZnVuY3Rpb24gZ2V0QWNjZXNzb3JLZXkobW9kZWwsIGFjY2Vzc29yKSB7XG4gIHZhciBnbHRmID0gbW9kZWwuZ2x0ZjtcbiAgdmFyIGJ1ZmZlcnMgPSBnbHRmLmJ1ZmZlcnM7XG4gIHZhciBidWZmZXJWaWV3cyA9IGdsdGYuYnVmZmVyVmlld3M7XG5cbiAgdmFyIGJ1ZmZlclZpZXcgPSBidWZmZXJWaWV3c1thY2Nlc3Nvci5idWZmZXJWaWV3XTtcbiAgdmFyIGJ1ZmZlciA9IGJ1ZmZlcnNbYnVmZmVyVmlldy5idWZmZXJdO1xuXG4gIHZhciBieXRlT2Zmc2V0ID0gYnVmZmVyVmlldy5ieXRlT2Zmc2V0ICsgYWNjZXNzb3IuYnl0ZU9mZnNldDtcbiAgdmFyIGJ5dGVMZW5ndGggPSBhY2Nlc3Nvci5jb3VudCAqIG51bWJlck9mQ29tcG9uZW50c0ZvclR5cGUoYWNjZXNzb3IudHlwZSk7XG5cbiAgdmFyIHVyaUtleSA9IGRhdGFVcmlSZWdleC50ZXN0KGJ1ZmZlci51cmkpID8gXCJcIiA6IGJ1ZmZlci51cmk7XG4gIHJldHVybiBtb2RlbC5jYWNoZUtleSArIFwiLy9cIiArIHVyaUtleSArIFwiL1wiICsgYnl0ZU9mZnNldCArIFwiL1wiICsgYnl0ZUxlbmd0aDtcbn1cblxudmFyIGNhY2hlZEFuaW1hdGlvblBhcmFtZXRlcnMgPSB7fTtcblxuTW9kZWxBbmltYXRpb25DYWNoZS5nZXRBbmltYXRpb25QYXJhbWV0ZXJWYWx1ZXMgPSBmdW5jdGlvbiAobW9kZWwsIGFjY2Vzc29yKSB7XG4gIHZhciBrZXkgPSBnZXRBY2Nlc3NvcktleShtb2RlbCwgYWNjZXNzb3IpO1xuICB2YXIgdmFsdWVzID0gY2FjaGVkQW5pbWF0aW9uUGFyYW1ldGVyc1trZXldO1xuXG4gIGlmICghZGVmaW5lZCh2YWx1ZXMpKSB7XG4gICAgLy8gQ2FjaGUgbWlzc1xuICAgIHZhciBnbHRmID0gbW9kZWwuZ2x0ZjtcblxuICAgIHZhciBidWZmZXJzID0gZ2x0Zi5idWZmZXJzO1xuICAgIHZhciBidWZmZXJWaWV3cyA9IGdsdGYuYnVmZmVyVmlld3M7XG5cbiAgICB2YXIgYnVmZmVyVmlldyA9IGJ1ZmZlclZpZXdzW2FjY2Vzc29yLmJ1ZmZlclZpZXddO1xuICAgIHZhciBidWZmZXJJZCA9IGJ1ZmZlclZpZXcuYnVmZmVyO1xuICAgIHZhciBidWZmZXIgPSBidWZmZXJzW2J1ZmZlcklkXTtcbiAgICB2YXIgc291cmNlID0gYnVmZmVyLmV4dHJhcy5fcGlwZWxpbmUuc291cmNlO1xuXG4gICAgdmFyIGNvbXBvbmVudFR5cGUgPSBhY2Nlc3Nvci5jb21wb25lbnRUeXBlO1xuICAgIHZhciB0eXBlID0gYWNjZXNzb3IudHlwZTtcbiAgICB2YXIgbnVtYmVyT2ZDb21wb25lbnRzID0gbnVtYmVyT2ZDb21wb25lbnRzRm9yVHlwZSh0eXBlKTtcbiAgICB2YXIgY291bnQgPSBhY2Nlc3Nvci5jb3VudDtcbiAgICB2YXIgYnl0ZVN0cmlkZSA9IGdldEFjY2Vzc29yQnl0ZVN0cmlkZShnbHRmLCBhY2Nlc3Nvcik7XG5cbiAgICB2YWx1ZXMgPSBuZXcgQXJyYXkoY291bnQpO1xuICAgIHZhciBhY2Nlc3NvckJ5dGVPZmZzZXQgPSBkZWZhdWx0VmFsdWUoYWNjZXNzb3IuYnl0ZU9mZnNldCwgMCk7XG4gICAgdmFyIGJ5dGVPZmZzZXQgPSBidWZmZXJWaWV3LmJ5dGVPZmZzZXQgKyBhY2Nlc3NvckJ5dGVPZmZzZXQ7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICB2YXIgdHlwZWRBcnJheVZpZXcgPSBDb21wb25lbnREYXRhdHlwZS5jcmVhdGVBcnJheUJ1ZmZlclZpZXcoXG4gICAgICAgIGNvbXBvbmVudFR5cGUsXG4gICAgICAgIHNvdXJjZS5idWZmZXIsXG4gICAgICAgIHNvdXJjZS5ieXRlT2Zmc2V0ICsgYnl0ZU9mZnNldCxcbiAgICAgICAgbnVtYmVyT2ZDb21wb25lbnRzXG4gICAgICApO1xuICAgICAgaWYgKHR5cGUgPT09IFwiU0NBTEFSXCIpIHtcbiAgICAgICAgdmFsdWVzW2ldID0gdHlwZWRBcnJheVZpZXdbMF07XG4gICAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFwiVkVDM1wiKSB7XG4gICAgICAgIHZhbHVlc1tpXSA9IENhcnRlc2lhbjMuZnJvbUFycmF5KHR5cGVkQXJyYXlWaWV3KTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJWRUM0XCIpIHtcbiAgICAgICAgdmFsdWVzW2ldID0gUXVhdGVybmlvbi51bnBhY2sodHlwZWRBcnJheVZpZXcpO1xuICAgICAgfVxuICAgICAgYnl0ZU9mZnNldCArPSBieXRlU3RyaWRlO1xuICAgIH1cbiAgICAvLyBHTFRGX1NQRUM6IFN1cHBvcnQgbW9yZSBwYXJhbWV0ZXIgdHlwZXMgd2hlbiBnbFRGIHN1cHBvcnRzIHRhcmdldGluZyBtYXRlcmlhbHMuIGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9pc3N1ZXMvMTQyXG5cbiAgICBpZiAoZGVmaW5lZChtb2RlbC5jYWNoZUtleSkpIHtcbiAgICAgIC8vIE9ubHkgY2FjaGUgd2hlbiB3ZSBjYW4gY3JlYXRlIGEgdW5pcXVlIGlkXG4gICAgICBjYWNoZWRBbmltYXRpb25QYXJhbWV0ZXJzW2tleV0gPSB2YWx1ZXM7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHZhbHVlcztcbn07XG5cbnZhciBjYWNoZWRBbmltYXRpb25TcGxpbmVzID0ge307XG5cbmZ1bmN0aW9uIGdldEFuaW1hdGlvblNwbGluZUtleShtb2RlbCwgYW5pbWF0aW9uTmFtZSwgc2FtcGxlck5hbWUpIHtcbiAgcmV0dXJuIG1vZGVsLmNhY2hlS2V5ICsgXCIvL1wiICsgYW5pbWF0aW9uTmFtZSArIFwiL1wiICsgc2FtcGxlck5hbWU7XG59XG5cbmZ1bmN0aW9uIENvbnN0YW50U3BsaW5lKHZhbHVlKSB7XG4gIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG59XG5Db25zdGFudFNwbGluZS5wcm90b3R5cGUuZXZhbHVhdGUgPSBmdW5jdGlvbiAodGltZSwgcmVzdWx0KSB7XG4gIHJldHVybiB0aGlzLl92YWx1ZTtcbn07XG5Db25zdGFudFNwbGluZS5wcm90b3R5cGUud3JhcFRpbWUgPSBmdW5jdGlvbiAodGltZSkge1xuICByZXR1cm4gMC4wO1xufTtcbkNvbnN0YW50U3BsaW5lLnByb3RvdHlwZS5jbGFtcFRpbWUgPSBmdW5jdGlvbiAodGltZSkge1xuICByZXR1cm4gMC4wO1xufTtcblxuZnVuY3Rpb24gU3RlcHBlZFNwbGluZShiYWNraW5nU3BsaW5lKSB7XG4gIHRoaXMuX3NwbGluZSA9IGJhY2tpbmdTcGxpbmU7XG4gIHRoaXMuX2xhc3RUaW1lSW5kZXggPSAwO1xufVxuU3RlcHBlZFNwbGluZS5wcm90b3R5cGUuZmluZFRpbWVJbnRlcnZhbCA9IFNwbGluZS5wcm90b3R5cGUuZmluZFRpbWVJbnRlcnZhbDtcblN0ZXBwZWRTcGxpbmUucHJvdG90eXBlLmV2YWx1YXRlID0gZnVuY3Rpb24gKHRpbWUsIHJlc3VsdCkge1xuICB2YXIgaSA9ICh0aGlzLl9sYXN0VGltZUluZGV4ID0gdGhpcy5maW5kVGltZUludGVydmFsKFxuICAgIHRpbWUsXG4gICAgdGhpcy5fbGFzdFRpbWVJbmRleFxuICApKTtcbiAgdmFyIHRpbWVzID0gdGhpcy5fc3BsaW5lLnRpbWVzO1xuICB2YXIgc3RlcHBlZFRpbWUgPSB0aW1lID49IHRpbWVzW2kgKyAxXSA/IHRpbWVzW2kgKyAxXSA6IHRpbWVzW2ldO1xuICByZXR1cm4gdGhpcy5fc3BsaW5lLmV2YWx1YXRlKHN0ZXBwZWRUaW1lLCByZXN1bHQpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFN0ZXBwZWRTcGxpbmUucHJvdG90eXBlLCB7XG4gIHRpbWVzOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc3BsaW5lLnRpbWVzO1xuICAgIH0sXG4gIH0sXG59KTtcblN0ZXBwZWRTcGxpbmUucHJvdG90eXBlLndyYXBUaW1lID0gZnVuY3Rpb24gKHRpbWUpIHtcbiAgcmV0dXJuIHRoaXMuX3NwbGluZS53cmFwVGltZSh0aW1lKTtcbn07XG5TdGVwcGVkU3BsaW5lLnByb3RvdHlwZS5jbGFtcFRpbWUgPSBmdW5jdGlvbiAodGltZSkge1xuICByZXR1cm4gdGhpcy5fc3BsaW5lLmNsYW1wVGltZSh0aW1lKTtcbn07XG5cbk1vZGVsQW5pbWF0aW9uQ2FjaGUuZ2V0QW5pbWF0aW9uU3BsaW5lID0gZnVuY3Rpb24gKFxuICBtb2RlbCxcbiAgYW5pbWF0aW9uTmFtZSxcbiAgYW5pbWF0aW9uLFxuICBzYW1wbGVyTmFtZSxcbiAgc2FtcGxlcixcbiAgaW5wdXQsXG4gIHBhdGgsXG4gIG91dHB1dFxuKSB7XG4gIHZhciBrZXkgPSBnZXRBbmltYXRpb25TcGxpbmVLZXkobW9kZWwsIGFuaW1hdGlvbk5hbWUsIHNhbXBsZXJOYW1lKTtcbiAgdmFyIHNwbGluZSA9IGNhY2hlZEFuaW1hdGlvblNwbGluZXNba2V5XTtcblxuICBpZiAoIWRlZmluZWQoc3BsaW5lKSkge1xuICAgIHZhciB0aW1lcyA9IGlucHV0O1xuICAgIHZhciBjb250cm9sUG9pbnRzID0gb3V0cHV0O1xuXG4gICAgaWYgKHRpbWVzLmxlbmd0aCA9PT0gMSAmJiBjb250cm9sUG9pbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgc3BsaW5lID0gbmV3IENvbnN0YW50U3BsaW5lKGNvbnRyb2xQb2ludHNbMF0pO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICBzYW1wbGVyLmludGVycG9sYXRpb24gPT09IFwiTElORUFSXCIgfHxcbiAgICAgIHNhbXBsZXIuaW50ZXJwb2xhdGlvbiA9PT0gXCJTVEVQXCJcbiAgICApIHtcbiAgICAgIGlmIChwYXRoID09PSBcInRyYW5zbGF0aW9uXCIgfHwgcGF0aCA9PT0gXCJzY2FsZVwiKSB7XG4gICAgICAgIHNwbGluZSA9IG5ldyBMaW5lYXJTcGxpbmUoe1xuICAgICAgICAgIHRpbWVzOiB0aW1lcyxcbiAgICAgICAgICBwb2ludHM6IGNvbnRyb2xQb2ludHMsXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChwYXRoID09PSBcInJvdGF0aW9uXCIpIHtcbiAgICAgICAgc3BsaW5lID0gbmV3IFF1YXRlcm5pb25TcGxpbmUoe1xuICAgICAgICAgIHRpbWVzOiB0aW1lcyxcbiAgICAgICAgICBwb2ludHM6IGNvbnRyb2xQb2ludHMsXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChwYXRoID09PSBcIndlaWdodHNcIikge1xuICAgICAgICBzcGxpbmUgPSBuZXcgV2VpZ2h0U3BsaW5lKHtcbiAgICAgICAgICB0aW1lczogdGltZXMsXG4gICAgICAgICAgd2VpZ2h0czogY29udHJvbFBvaW50cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChkZWZpbmVkKHNwbGluZSkgJiYgc2FtcGxlci5pbnRlcnBvbGF0aW9uID09PSBcIlNURVBcIikge1xuICAgICAgICBzcGxpbmUgPSBuZXcgU3RlcHBlZFNwbGluZShzcGxpbmUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKG1vZGVsLmNhY2hlS2V5KSkge1xuICAgICAgLy8gT25seSBjYWNoZSB3aGVuIHdlIGNhbiBjcmVhdGUgYSB1bmlxdWUgaWRcbiAgICAgIGNhY2hlZEFuaW1hdGlvblNwbGluZXNba2V5XSA9IHNwbGluZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3BsaW5lO1xufTtcblxudmFyIGNhY2hlZFNraW5JbnZlcnNlQmluZE1hdHJpY2VzID0ge307XG5cbk1vZGVsQW5pbWF0aW9uQ2FjaGUuZ2V0U2tpbkludmVyc2VCaW5kTWF0cmljZXMgPSBmdW5jdGlvbiAobW9kZWwsIGFjY2Vzc29yKSB7XG4gIHZhciBrZXkgPSBnZXRBY2Nlc3NvcktleShtb2RlbCwgYWNjZXNzb3IpO1xuICB2YXIgbWF0cmljZXMgPSBjYWNoZWRTa2luSW52ZXJzZUJpbmRNYXRyaWNlc1trZXldO1xuXG4gIGlmICghZGVmaW5lZChtYXRyaWNlcykpIHtcbiAgICAvLyBDYWNoZSBtaXNzXG4gICAgdmFyIGdsdGYgPSBtb2RlbC5nbHRmO1xuICAgIHZhciBidWZmZXJzID0gZ2x0Zi5idWZmZXJzO1xuICAgIHZhciBidWZmZXJWaWV3cyA9IGdsdGYuYnVmZmVyVmlld3M7XG5cbiAgICB2YXIgYnVmZmVyVmlld0lkID0gYWNjZXNzb3IuYnVmZmVyVmlldztcbiAgICB2YXIgYnVmZmVyVmlldyA9IGJ1ZmZlclZpZXdzW2J1ZmZlclZpZXdJZF07XG4gICAgdmFyIGJ1ZmZlcklkID0gYnVmZmVyVmlldy5idWZmZXI7XG4gICAgdmFyIGJ1ZmZlciA9IGJ1ZmZlcnNbYnVmZmVySWRdO1xuICAgIHZhciBzb3VyY2UgPSBidWZmZXIuZXh0cmFzLl9waXBlbGluZS5zb3VyY2U7XG5cbiAgICB2YXIgY29tcG9uZW50VHlwZSA9IGFjY2Vzc29yLmNvbXBvbmVudFR5cGU7XG4gICAgdmFyIHR5cGUgPSBhY2Nlc3Nvci50eXBlO1xuICAgIHZhciBjb3VudCA9IGFjY2Vzc29yLmNvdW50O1xuICAgIHZhciBieXRlU3RyaWRlID0gZ2V0QWNjZXNzb3JCeXRlU3RyaWRlKGdsdGYsIGFjY2Vzc29yKTtcbiAgICB2YXIgYnl0ZU9mZnNldCA9IGJ1ZmZlclZpZXcuYnl0ZU9mZnNldCArIGFjY2Vzc29yLmJ5dGVPZmZzZXQ7XG4gICAgdmFyIG51bWJlck9mQ29tcG9uZW50cyA9IG51bWJlck9mQ29tcG9uZW50c0ZvclR5cGUodHlwZSk7XG5cbiAgICBtYXRyaWNlcyA9IG5ldyBBcnJheShjb3VudCk7XG5cbiAgICBpZiAoY29tcG9uZW50VHlwZSA9PT0gV2ViR0xDb25zdGFudHMuRkxPQVQgJiYgdHlwZSA9PT0gQXR0cmlidXRlVHlwZS5NQVQ0KSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvdW50OyArK2kpIHtcbiAgICAgICAgdmFyIHR5cGVkQXJyYXlWaWV3ID0gQ29tcG9uZW50RGF0YXR5cGUuY3JlYXRlQXJyYXlCdWZmZXJWaWV3KFxuICAgICAgICAgIGNvbXBvbmVudFR5cGUsXG4gICAgICAgICAgc291cmNlLmJ1ZmZlcixcbiAgICAgICAgICBzb3VyY2UuYnl0ZU9mZnNldCArIGJ5dGVPZmZzZXQsXG4gICAgICAgICAgbnVtYmVyT2ZDb21wb25lbnRzXG4gICAgICAgICk7XG4gICAgICAgIG1hdHJpY2VzW2ldID0gTWF0cml4NC5mcm9tQXJyYXkodHlwZWRBcnJheVZpZXcpO1xuICAgICAgICBieXRlT2Zmc2V0ICs9IGJ5dGVTdHJpZGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY2FjaGVkU2tpbkludmVyc2VCaW5kTWF0cmljZXNba2V5XSA9IG1hdHJpY2VzO1xuICB9XG5cbiAgcmV0dXJuIG1hdHJpY2VzO1xufTtcbmV4cG9ydCBkZWZhdWx0IE1vZGVsQW5pbWF0aW9uQ2FjaGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81977\n')},73431:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14459);\n/* harmony import */ var _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55293);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(99417);\n/* harmony import */ var _ModelAnimation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(35492);\n/* harmony import */ var _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(61841);\n/* harmony import */ var _ModelAnimationState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(45633);\n\n\n\n\n\n\n\n\n\n\n/**\n * A collection of active model animations.  Access this using {@link Model#activeAnimations}.\n *\n * @alias ModelAnimationCollection\n * @internalConstructor\n * @class\n *\n * @see Model#activeAnimations\n */\nfunction ModelAnimationCollection(model) {\n  /**\n   * The event fired when an animation is added to the collection.  This can be used, for\n   * example, to keep a UI in sync.\n   *\n   * @type {Event}\n   * @default new Event()\n   *\n   * @example\n   * model.activeAnimations.animationAdded.addEventListener(function(model, animation) {\n   *   console.log(\'Animation added: \' + animation.name);\n   * });\n   */\n  this.animationAdded = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n  /**\n   * The event fired when an animation is removed from the collection.  This can be used, for\n   * example, to keep a UI in sync.\n   *\n   * @type {Event}\n   * @default new Event()\n   *\n   * @example\n   * model.activeAnimations.animationRemoved.addEventListener(function(model, animation) {\n   *   console.log(\'Animation removed: \' + animation.name);\n   * });\n   */\n  this.animationRemoved = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n  this._model = model;\n  this._scheduledAnimations = [];\n  this._previousTime = undefined;\n}\n\nObject.defineProperties(ModelAnimationCollection.prototype, {\n  /**\n   * The number of animations in the collection.\n   *\n   * @memberof ModelAnimationCollection.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  length: {\n    get: function () {\n      return this._scheduledAnimations.length;\n    },\n  },\n});\n\nfunction add(collection, index, options) {\n  var model = collection._model;\n  var animations = model._runtime.animations;\n  var animation = animations[index];\n  var scheduledAnimation = new _ModelAnimation_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(options, model, animation);\n  collection._scheduledAnimations.push(scheduledAnimation);\n  collection.animationAdded.raiseEvent(model, scheduledAnimation);\n  return scheduledAnimation;\n}\n\n/**\n * Creates and adds an animation with the specified initial properties to the collection.\n * <p>\n * This raises the {@link ModelAnimationCollection#animationAdded} event so, for example, a UI can stay in sync.\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {String} [options.name] The glTF animation name that identifies the animation. Must be defined if <code>options.index</code> is <code>undefined</code>.\n * @param {Number} [options.index] The glTF animation index that identifies the animation. Must be defined if <code>options.name</code> is <code>undefined</code>.\n * @param {JulianDate} [options.startTime] The scene time to start playing the animation.  When this is <code>undefined</code>, the animation starts at the next frame.\n * @param {Number} [options.delay=0.0] The delay, in seconds, from <code>startTime</code> to start playing.\n * @param {JulianDate} [options.stopTime] The scene time to stop playing the animation.  When this is <code>undefined</code>, the animation is played for its full duration.\n * @param {Boolean} [options.removeOnStop=false] When <code>true</code>, the animation is removed after it stops playing.\n * @param {Number} [options.multiplier=1.0] Values greater than <code>1.0</code> increase the speed that the animation is played relative to the scene clock speed; values less than <code>1.0</code> decrease the speed.\n * @param {Boolean} [options.reverse=false] When <code>true</code>, the animation is played in reverse.\n * @param {ModelAnimationLoop} [options.loop=ModelAnimationLoop.NONE] Determines if and how the animation is looped.\n * @returns {ModelAnimation} The animation that was added to the collection.\n *\n * @exception {DeveloperError} Animations are not loaded.  Wait for the {@link Model#readyPromise} to resolve.\n * @exception {DeveloperError} options.name must be a valid animation name.\n * @exception {DeveloperError} options.index must be a valid animation index.\n * @exception {DeveloperError} Either options.name or options.index must be defined.\n * @exception {DeveloperError} options.multiplier must be greater than zero.\n *\n * @example\n * // Example 1. Add an animation by name\n * model.activeAnimations.add({\n *   name : \'animation name\'\n * });\n *\n * // Example 2. Add an animation by index\n * model.activeAnimations.add({\n *   index : 0\n * });\n *\n * @example\n * // Example 3. Add an animation and provide all properties and events\n * var startTime = Cesium.JulianDate.now();\n *\n * var animation = model.activeAnimations.add({\n *   name : \'another animation name\',\n *   startTime : startTime,\n *   delay : 0.0,                          // Play at startTime (default)\n *   stopTime : Cesium.JulianDate.addSeconds(startTime, 4.0, new Cesium.JulianDate()),\n *   removeOnStop : false,                 // Do not remove when animation stops (default)\n *   multiplier : 2.0,                        // Play at double speed\n *   reverse : true,                       // Play in reverse\n *   loop : Cesium.ModelAnimationLoop.REPEAT      // Loop the animation\n * });\n *\n * animation.start.addEventListener(function(model, animation) {\n *   console.log(\'Animation started: \' + animation.name);\n * });\n * animation.update.addEventListener(function(model, animation, time) {\n *   console.log(\'Animation updated: \' + animation.name + \'. glTF animation time: \' + time);\n * });\n * animation.stop.addEventListener(function(model, animation) {\n *   console.log(\'Animation stopped: \' + animation.name);\n * });\n */\nModelAnimationCollection.prototype.add = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var model = this._model;\n  var animations = model._runtime.animations;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(animations)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "Animations are not loaded.  Wait for Model.readyPromise to resolve."\n    );\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.name) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.index)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "Either options.name or options.index must be defined."\n    );\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.multiplier) && options.multiplier <= 0.0) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("options.multiplier must be greater than zero.");\n  }\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.index) &&\n    (options.index >= animations.length || options.index < 0)\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("options.index must be a valid animation index.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.index)) {\n    return add(this, options.index, options);\n  }\n\n  // Find the index of the animation with the given name\n  var index;\n  var length = animations.length;\n  for (var i = 0; i < length; ++i) {\n    if (animations[i].name === options.name) {\n      index = i;\n      break;\n    }\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(index)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("options.name must be a valid animation name.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return add(this, index, options);\n};\n\n/**\n * Creates and adds an animation with the specified initial properties to the collection\n * for each animation in the model.\n * <p>\n * This raises the {@link ModelAnimationCollection#animationAdded} event for each model so, for example, a UI can stay in sync.\n * </p>\n *\n * @param {Object} [options] Object with the following properties:\n * @param {JulianDate} [options.startTime] The scene time to start playing the animations.  When this is <code>undefined</code>, the animations starts at the next frame.\n * @param {Number} [options.delay=0.0] The delay, in seconds, from <code>startTime</code> to start playing.\n * @param {JulianDate} [options.stopTime] The scene time to stop playing the animations.  When this is <code>undefined</code>, the animations are played for its full duration.\n * @param {Boolean} [options.removeOnStop=false] When <code>true</code>, the animations are removed after they stop playing.\n * @param {Number} [options.multiplier=1.0] Values greater than <code>1.0</code> increase the speed that the animations play relative to the scene clock speed; values less than <code>1.0</code> decrease the speed.\n * @param {Boolean} [options.reverse=false] When <code>true</code>, the animations are played in reverse.\n * @param {ModelAnimationLoop} [options.loop=ModelAnimationLoop.NONE] Determines if and how the animations are looped.\n * @returns {ModelAnimation[]} An array of {@link ModelAnimation} objects, one for each animation added to the collection.  If there are no glTF animations, the array is empty.\n *\n * @exception {DeveloperError} Animations are not loaded.  Wait for the {@link Model#readyPromise} to resolve.\n * @exception {DeveloperError} options.multiplier must be greater than zero.\n *\n * @example\n * model.activeAnimations.addAll({\n *   multiplier : 0.5,                        // Play at half-speed\n *   loop : Cesium.ModelAnimationLoop.REPEAT      // Loop the animations\n * });\n */\nModelAnimationCollection.prototype.addAll = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(this._model._runtime.animations)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "Animations are not loaded.  Wait for Model.readyPromise to resolve."\n    );\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.multiplier) && options.multiplier <= 0.0) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("options.multiplier must be greater than zero.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var scheduledAnimations = [];\n  var model = this._model;\n  var animations = model._runtime.animations;\n  var length = animations.length;\n  for (var i = 0; i < length; ++i) {\n    scheduledAnimations.push(add(this, i, options));\n  }\n  return scheduledAnimations;\n};\n\n/**\n * Removes an animation from the collection.\n * <p>\n * This raises the {@link ModelAnimationCollection#animationRemoved} event so, for example, a UI can stay in sync.\n * </p>\n * <p>\n * An animation can also be implicitly removed from the collection by setting {@link ModelAnimation#removeOnStop} to\n * <code>true</code>.  The {@link ModelAnimationCollection#animationRemoved} event is still fired when the animation is removed.\n * </p>\n *\n * @param {ModelAnimation} animation The animation to remove.\n * @returns {Boolean} <code>true</code> if the animation was removed; <code>false</code> if the animation was not found in the collection.\n *\n * @example\n * var a = model.activeAnimations.add({\n *   name : \'animation name\'\n * });\n * model.activeAnimations.remove(a); // Returns true\n */\nModelAnimationCollection.prototype.remove = function (animation) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(animation)) {\n    var animations = this._scheduledAnimations;\n    var i = animations.indexOf(animation);\n    if (i !== -1) {\n      animations.splice(i, 1);\n      this.animationRemoved.raiseEvent(this._model, animation);\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Removes all animations from the collection.\n * <p>\n * This raises the {@link ModelAnimationCollection#animationRemoved} event for each\n * animation so, for example, a UI can stay in sync.\n * </p>\n */\nModelAnimationCollection.prototype.removeAll = function () {\n  var model = this._model;\n  var animations = this._scheduledAnimations;\n  var length = animations.length;\n\n  this._scheduledAnimations = [];\n\n  for (var i = 0; i < length; ++i) {\n    this.animationRemoved.raiseEvent(model, animations[i]);\n  }\n};\n\n/**\n * Determines whether this collection contains a given animation.\n *\n * @param {ModelAnimation} animation The animation to check for.\n * @returns {Boolean} <code>true</code> if this collection contains the animation, <code>false</code> otherwise.\n */\nModelAnimationCollection.prototype.contains = function (animation) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(animation)) {\n    return this._scheduledAnimations.indexOf(animation) !== -1;\n  }\n\n  return false;\n};\n\n/**\n * Returns the animation in the collection at the specified index.  Indices are zero-based\n * and increase as animations are added.  Removing an animation shifts all animations after\n * it to the left, changing their indices.  This function is commonly used to iterate over\n * all the animations in the collection.\n *\n * @param {Number} index The zero-based index of the animation.\n * @returns {ModelAnimation} The animation at the specified index.\n *\n * @example\n * // Output the names of all the animations in the collection.\n * var animations = model.activeAnimations;\n * var length = animations.length;\n * for (var i = 0; i < length; ++i) {\n *   console.log(animations.get(i).name);\n * }\n */\nModelAnimationCollection.prototype.get = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(index)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("index is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return this._scheduledAnimations[index];\n};\n\nfunction animateChannels(runtimeAnimation, localAnimationTime) {\n  var channelEvaluators = runtimeAnimation.channelEvaluators;\n  var length = channelEvaluators.length;\n  for (var i = 0; i < length; ++i) {\n    channelEvaluators[i](localAnimationTime);\n  }\n}\n\nvar animationsToRemove = [];\n\nfunction createAnimationRemovedFunction(\n  modelAnimationCollection,\n  model,\n  animation\n) {\n  return function () {\n    modelAnimationCollection.animationRemoved.raiseEvent(model, animation);\n  };\n}\n\n/**\n * @private\n */\nModelAnimationCollection.prototype.update = function (frameState) {\n  var scheduledAnimations = this._scheduledAnimations;\n  var length = scheduledAnimations.length;\n\n  if (length === 0) {\n    // No animations - quick return for performance\n    this._previousTime = undefined;\n    return false;\n  }\n\n  if (_Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(frameState.time, this._previousTime)) {\n    // Animations are currently only time-dependent so do not animate when paused or picking\n    return false;\n  }\n  this._previousTime = _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(frameState.time, this._previousTime);\n\n  var animationOccured = false;\n  var sceneTime = frameState.time;\n  var model = this._model;\n\n  for (var i = 0; i < length; ++i) {\n    var scheduledAnimation = scheduledAnimations[i];\n    var runtimeAnimation = scheduledAnimation._runtimeAnimation;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(scheduledAnimation._computedStartTime)) {\n      scheduledAnimation._computedStartTime = _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].addSeconds */ .Z.addSeconds(\n        (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(scheduledAnimation.startTime, sceneTime),\n        scheduledAnimation.delay,\n        new _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z()\n      );\n    }\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(scheduledAnimation._duration)) {\n      scheduledAnimation._duration =\n        runtimeAnimation.stopTime * (1.0 / scheduledAnimation.multiplier);\n    }\n\n    var startTime = scheduledAnimation._computedStartTime;\n    var duration = scheduledAnimation._duration;\n    var stopTime = scheduledAnimation.stopTime;\n\n    // [0.0, 1.0] normalized local animation time\n    var delta =\n      duration !== 0.0\n        ? _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].secondsDifference */ .Z.secondsDifference(sceneTime, startTime) / duration\n        : 0.0;\n\n    // Clamp delta to stop time, if defined.\n    if (\n      duration !== 0.0 &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(stopTime) &&\n      _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].greaterThan */ .Z.greaterThan(sceneTime, stopTime)\n    ) {\n      delta = _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].secondsDifference */ .Z.secondsDifference(stopTime, startTime) / duration;\n    }\n\n    var pastStartTime = delta >= 0.0;\n\n    // Play animation if\n    // * we are after the start time or the animation is being repeated, and\n    // * before the end of the animation\'s duration or the animation is being repeated, and\n    // * we did not reach a user-provided stop time.\n\n    var repeat =\n      scheduledAnimation.loop === _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].REPEAT */ .Z.REPEAT ||\n      scheduledAnimation.loop === _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].MIRRORED_REPEAT */ .Z.MIRRORED_REPEAT;\n\n    var play =\n      (pastStartTime || (repeat && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(scheduledAnimation.startTime))) &&\n      (delta <= 1.0 || repeat) &&\n      (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(stopTime) || _Core_JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].lessThanOrEquals */ .Z.lessThanOrEquals(sceneTime, stopTime));\n\n    // If it IS, or WAS, animating...\n    if (play || scheduledAnimation._state === _ModelAnimationState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ANIMATING */ .Z.ANIMATING) {\n      // STOPPED -> ANIMATING state transition?\n      if (play && scheduledAnimation._state === _ModelAnimationState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].STOPPED */ .Z.STOPPED) {\n        scheduledAnimation._state = _ModelAnimationState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ANIMATING */ .Z.ANIMATING;\n        if (scheduledAnimation.start.numberOfListeners > 0) {\n          frameState.afterRender.push(scheduledAnimation._raiseStartEvent);\n        }\n      }\n\n      // Truncate to [0.0, 1.0] for repeating animations\n      if (scheduledAnimation.loop === _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].REPEAT */ .Z.REPEAT) {\n        delta = delta - Math.floor(delta);\n      } else if (\n        scheduledAnimation.loop === _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].MIRRORED_REPEAT */ .Z.MIRRORED_REPEAT\n      ) {\n        var floor = Math.floor(delta);\n        var fract = delta - floor;\n        // When even use (1.0 - fract) to mirror repeat\n        delta = floor % 2 === 1.0 ? 1.0 - fract : fract;\n      }\n\n      if (scheduledAnimation.reverse) {\n        delta = 1.0 - delta;\n      }\n\n      var localAnimationTime = delta * duration * scheduledAnimation.multiplier;\n      // Clamp in case floating-point roundoff goes outside the animation\'s first or last keyframe\n      localAnimationTime = _Core_Math_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clamp */ .Z.clamp(\n        localAnimationTime,\n        runtimeAnimation.startTime,\n        runtimeAnimation.stopTime\n      );\n\n      animateChannels(runtimeAnimation, localAnimationTime);\n\n      if (scheduledAnimation.update.numberOfListeners > 0) {\n        scheduledAnimation._updateEventTime = localAnimationTime;\n        frameState.afterRender.push(scheduledAnimation._raiseUpdateEvent);\n      }\n      animationOccured = true;\n\n      if (!play) {\n        // ANIMATING -> STOPPED state transition?\n        scheduledAnimation._state = _ModelAnimationState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].STOPPED */ .Z.STOPPED;\n        if (scheduledAnimation.stop.numberOfListeners > 0) {\n          frameState.afterRender.push(scheduledAnimation._raiseStopEvent);\n        }\n\n        if (scheduledAnimation.removeOnStop) {\n          animationsToRemove.push(scheduledAnimation);\n        }\n      }\n    }\n  }\n\n  // Remove animations that stopped\n  length = animationsToRemove.length;\n  for (var j = 0; j < length; ++j) {\n    var animationToRemove = animationsToRemove[j];\n    scheduledAnimations.splice(\n      scheduledAnimations.indexOf(animationToRemove),\n      1\n    );\n    frameState.afterRender.push(\n      createAnimationRemovedFunction(this, model, animationToRemove)\n    );\n  }\n  animationsToRemove.length = 0;\n\n  return animationOccured;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ModelAnimationCollection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///73431\n')},61841:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Determines if and how a glTF animation is looped.\n *\n * @enum {Number}\n *\n * @see ModelAnimationCollection#add\n */\nvar ModelAnimationLoop = {\n  /**\n   * Play the animation once; do not loop it.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NONE: 0,\n\n  /**\n   * Loop the animation playing it from the start immediately after it stops.\n   *\n   * @type {Number}\n   * @constant\n   */\n  REPEAT: 1,\n\n  /**\n   * Loop the animation.  First, playing it forward, then in reverse, then forward, and so on.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MIRRORED_REPEAT: 2,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(ModelAnimationLoop));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjE4NDEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsaUNBQWlDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTW9kZWxBbmltYXRpb25Mb29wLmpzPzcxMDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEZXRlcm1pbmVzIGlmIGFuZCBob3cgYSBnbFRGIGFuaW1hdGlvbiBpcyBsb29wZWQuXG4gKlxuICogQGVudW0ge051bWJlcn1cbiAqXG4gKiBAc2VlIE1vZGVsQW5pbWF0aW9uQ29sbGVjdGlvbiNhZGRcbiAqL1xudmFyIE1vZGVsQW5pbWF0aW9uTG9vcCA9IHtcbiAgLyoqXG4gICAqIFBsYXkgdGhlIGFuaW1hdGlvbiBvbmNlOyBkbyBub3QgbG9vcCBpdC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBOT05FOiAwLFxuXG4gIC8qKlxuICAgKiBMb29wIHRoZSBhbmltYXRpb24gcGxheWluZyBpdCBmcm9tIHRoZSBzdGFydCBpbW1lZGlhdGVseSBhZnRlciBpdCBzdG9wcy5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBSRVBFQVQ6IDEsXG5cbiAgLyoqXG4gICAqIExvb3AgdGhlIGFuaW1hdGlvbi4gIEZpcnN0LCBwbGF5aW5nIGl0IGZvcndhcmQsIHRoZW4gaW4gcmV2ZXJzZSwgdGhlbiBmb3J3YXJkLCBhbmQgc28gb24uXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTUlSUk9SRURfUkVQRUFUOiAyLFxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoTW9kZWxBbmltYXRpb25Mb29wKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///61841\n')},45633:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * @private\n */\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze({\n  STOPPED: 0,\n  ANIMATING: 1,\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDU2MzMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EseURBQWU7QUFDZjtBQUNBO0FBQ0EsQ0FBQyxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTW9kZWxBbmltYXRpb25TdGF0ZS5qcz8wNTM5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmZyZWV6ZSh7XG4gIFNUT1BQRUQ6IDAsXG4gIEFOSU1BVElORzogMSxcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///45633\n')},7896:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(68201);\n/* harmony import */ var _AlphaMode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82075);\n\n\n\n\n\n/**\n * Components for building models.\n *\n * @namespace ModelComponents\n *\n * @private\n */\nvar ModelComponents = {};\n\n/**\n * Information about the quantized attribute.\n *\n * @alias ModelComponents.Quantization\n * @constructor\n *\n * @private\n */\nfunction Quantization() {\n  /**\n   * Whether the quantized attribute is oct-encoded.\n   *\n   * @type {Boolean}\n   * @private\n   */\n  this.octEncoded = false;\n\n  /**\n   * Whether the oct-encoded values are stored as ZXY instead of XYZ. This is true when decoding from Draco.\n   *\n   * @type {Boolean}\n   */\n  this.octEncodedZXY = false;\n\n  /**\n   * The range used to convert buffer values to normalized values [0.0, 1.0]\n   * This is typically computed as (1 << quantizationBits) - 1.\n   * For oct-encoded values this value is a single Number.\n   *\n   * @type {Number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4}\n   * @private\n   */\n  this.normalizationRange = undefined;\n\n  /**\n   * The bottom-left corner of the quantization volume. Not applicable for oct encoded attributes.\n   * The type should match the attribute type - e.g. if the attribute type\n   * is AttributeType.VEC4 the offset should be a Cartesian4.\n   *\n   * @type {Number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4}\n   * @private\n   */\n  this.quantizedVolumeOffset = undefined;\n\n  /**\n   * The dimensions of the quantization volume. Not applicable for oct encoded attributes.\n   * The type should match the attribute type - e.g. if the attribute type\n   * is AttributeType.VEC4 the dimensions should be a Cartesian4.\n   *\n   * @type {Number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4}\n   * @private\n   */\n  this.quantizedVolumeDimensions = undefined;\n\n  /**\n   * The component data type of the quantized attribute, e.g. ComponentDatatype.UNSIGNED_SHORT.\n   *\n   * <p>\n   * The following component datatypes are not supported:\n   * <ul>\n   *   <li>ComponentDatatype.INT</li>\n   *   <li>ComponentDatatype.UNSIGNED_INT</li>\n   *   <li>ComponentDatatype.DOUBLE</li>\n   * </ul>\n   * </p>\n   *\n   * @type {ComponentDatatype}\n   * @private\n   */\n  this.componentDatatype = undefined;\n\n  /**\n   * The type of the quantized attribute, e.g. AttributeType.VEC2 for oct-encoded normals.\n   *\n   * @type {AttributeType}\n   * @private\n   */\n  this.type = undefined;\n}\n\n/**\n * A per-vertex or per-instance attribute.\n *\n * @alias ModelComponents.Attribute\n * @constructor\n *\n * @private\n */\nfunction Attribute() {\n  /**\n   * The attribute name. Must be unique within the attributes array.\n   *\n   * @type {String}\n   * @private\n   */\n  this.name = undefined;\n\n  /**\n   * The attribute semantic. The combination of semantic and setIndex must be\n   * unique within the attributes array.\n   *\n   * @type {VertexAttributeSemantic|InstanceAttributeSemantic}\n   * @private\n   */\n  this.semantic = undefined;\n\n  /**\n   * The set index of the attribute. Only applicable when the attribute has one\n   * of the following semantics:\n   *\n   * <ul>\n   *   <li>{@link VertexAttributeSemantic.TEXCOORD}</li>\n   *   <li>{@link VertexAttributeSemantic.COLOR}</li>\n   *   <li>{@link VertexAttributeSemantic.JOINTS}</li>\n   *   <li>{@link VertexAttributeSemantic.WEIGHTS}</li>\n   *   <li>{@link VertexAttributeSemantic.FEATURE_ID}</li>\n   *   <li>{@link InstanceAttributeSemantic.FEATURE_ID}</li>\n   * </ul>\n   */\n  this.setIndex = undefined;\n\n  /**\n   * The component data type of the attribute.\n   * <p>\n   * When the data is quantized the componentDatatype should match the\n   * dequantized data, which is typically ComponentDatatype.FLOAT.\n   * </p>\n   * <p>\n   * The following component datatypes are not supported:\n   * <ul>\n   *   <li>ComponentDatatype.INT</li>\n   *   <li>ComponentDatatype.UNSIGNED_INT</li>\n   *   <li>ComponentDatatype.DOUBLE</li>\n   * </ul>\n   * </p>\n   *\n   * @type {ComponentDatatype}\n   * @private\n   */\n  this.componentDatatype = undefined;\n\n  /**\n   * The type of the attribute.\n   * <p>\n   * When the data is oct-encoded the type should match the decoded data, which\n   * is typically AttributeType.VEC3.\n   * </p>\n   *\n   * @type {AttributeType}\n   * @private\n   */\n  this.type = undefined;\n\n  /**\n   * Whether the attribute is normalized.\n   *\n   * @type {Boolean}\n   * @default false\n   * @private\n   */\n  this.normalized = false;\n\n  /**\n   * The number of elements.\n   *\n   * @type {Number}\n   * @private\n   */\n  this.count = undefined;\n\n  /**\n   * Minimum value of each component in the attribute.\n   * <p>\n   * When the data is quantized the min should match the dequantized data.\n   * The normalized property has no effect on these values.\n   * </p>\n   * <p>\n   * Must be defined for POSITION attributes.\n   * </p>\n   *\n   * @type {Number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4}\n   * @private\n   */\n  this.min = undefined;\n\n  /**\n   * Maximum value of each component in the attribute.\n   * <p>\n   * When the data is quantized the max should match the dequantized data.\n   * The normalized property has no effect on these values.\n   * </p>\n   * <p>\n   * Must be defined for POSITION attributes.\n   * </p>\n   *\n   * @type {Number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4}\n   * @private\n   */\n  this.max = undefined;\n\n  /**\n   * A constant value used for all elements when typed array and buffer are undefined.\n   *\n   * @type {Number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4}\n   * @private\n   */\n  this.constant = undefined;\n\n  /**\n   * Information about the quantized attribute.\n   *\n   * @type {ModelComponents.Quantization}\n   * @private\n   */\n  this.quantization = undefined;\n\n  /**\n   * A typed array containing tightly-packed attribute values.\n   *\n   * @type {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array|Float32Array}\n   * @private\n   */\n  this.typedArray = undefined;\n\n  /**\n   * A vertex buffer containing attribute values. Attribute values are accessed using byteOffset and byteStride.\n   *\n   * @type {Buffer}\n   * @private\n   */\n  this.buffer = undefined;\n\n  /**\n   * The byte offset of elements in the buffer.\n   *\n   * @type {Number}\n   * @default 0\n   * @private\n   */\n  this.byteOffset = 0;\n\n  /**\n   * The byte stride of elements in the buffer. When undefined the elements are tightly packed.\n   *\n   * @type {Number}\n   * @private\n   */\n  this.byteStride = undefined;\n}\n\n/**\n * Indices used to select vertices for rendering.\n *\n * @alias ModelComponents.Indices\n * @constructor\n *\n * @private\n */\nfunction Indices() {\n  /**\n   * The index data type of the attribute, e.g. IndexDatatype.UNSIGNED_SHORT.\n   *\n   * @type {IndexDatatype}\n   * @private\n   */\n  this.indexDatatype = undefined;\n\n  /**\n   * The number of indices.\n   *\n   * @type {Number}\n   * @private\n   */\n  this.count = undefined;\n\n  /**\n   * An index buffer containing indices.\n   *\n   * @type {Buffer}\n   * @private\n   */\n  this.buffer = undefined;\n}\n\n/**\n * Maps per-vertex or per-instance feature IDs to a feature table. Feature IDs\n * may be stored in an attribute or implicitly defined by a constant and stride.\n *\n * @alias ModelComponents.FeatureIdAttribute\n * @constructor\n *\n * @private\n */\nfunction FeatureIdAttribute() {\n  /**\n   * The ID of the feature table that feature IDs index into.\n   *\n   * @type {String}\n   * @private\n   */\n  this.featureTableId = undefined;\n\n  /**\n   * The set index of feature ID attribute containing feature IDs.\n   *\n   * @type {Number}\n   * @private\n   */\n  this.setIndex = undefined;\n\n  /**\n   * A constant feature ID to use when setIndex is undefined.\n   *\n   * @type {Number}\n   * @default 0\n   * @private\n   */\n  this.constant = 0;\n\n  /**\n   * The rate at which feature IDs increment when setIndex is undefined.\n   *\n   * @type {Number}\n   * @default 0\n   * @private\n   */\n  this.divisor = 0;\n}\n\n/**\n * A texture that contains per-texel feature IDs that index into a feature table.\n *\n * @alias ModelComponents.FeatureIdTexture\n * @constructor\n *\n * @private\n */\nfunction FeatureIdTexture() {\n  /**\n   * The ID of the feature table that feature IDs index into.\n   *\n   * @type {String}\n   * @private\n   */\n  this.featureTableId = undefined;\n\n  /**\n   * The texture reader containing feature IDs.\n   *\n   * @type {ModelComponents.TextureReader}\n   * @private\n   */\n  this.textureReader = undefined;\n}\n\n/**\n * A morph target where each attribute contains attribute displacement data.\n *\n * @alias ModelComponents.MorphTarget\n * @constructor\n *\n * @private\n */\nfunction MorphTarget() {\n  /**\n   * Attributes that are part of the morph target, e.g. positions, normals, and tangents.\n   *\n   * @type {ModelComponents.Attribute[]}\n   * @private\n   */\n  this.attributes = [];\n}\n\n/**\n * Geometry to be rendered with a material.\n *\n * @alias ModelComponents.Primitive\n * @constructor\n *\n * @private\n */\nfunction Primitive() {\n  /**\n   * The vertex attributes, e.g. positions, normals, etc.\n   *\n   * @type {ModelComponents.Attribute[]}\n   * @private\n   */\n  this.attributes = [];\n\n  /**\n   * The morph targets.\n   *\n   * @type {ModelComponents.MorphTarget[]}\n   * @private\n   */\n  this.morphTargets = [];\n\n  /**\n   * An array of weights to be applied to morph targets.\n   *\n   * @type {Number[]}\n   * @private\n   */\n  this.morphWeights = [];\n\n  /**\n   * The indices.\n   *\n   * @type {ModelComponents.Indices}\n   * @private\n   */\n  this.indices = undefined;\n\n  /**\n   * The material.\n   *\n   * @type {ModelComponents.Material}\n   * @private\n   */\n  this.material = undefined;\n\n  /**\n   * The primitive type, e.g. PrimitiveType.TRIANGLES.\n   *\n   * @type {PrimitiveType}\n   * @private\n   */\n  this.primitiveType = undefined;\n\n  /**\n   * The feature ID attributes.\n   *\n   * @type {ModelComponents.FeatureIdAttribute[]}\n   * @private\n   */\n  this.featureIdAttributes = [];\n\n  /**\n   * The feature ID textures.\n   *\n   * @type {ModelComponents.FeatureIdTexture[]}\n   * @private\n   */\n  this.featureIdTextures = [];\n\n  /**\n   * The feature texture IDs.\n   *\n   * @type {String[]}\n   * @private\n   */\n  this.featureTextureIds = [];\n}\n\n/**\n * Position and metadata information for instances of a node.\n *\n * @alias ModelComponents.Primitive\n * @constructor\n *\n * @private\n */\nfunction Instances() {\n  /**\n   * The instance attributes, e.g. translation, rotation, scale, feature id, etc.\n   *\n   * @type {ModelComponents.Attribute[]}\n   * @private\n   */\n  this.attributes = [];\n\n  /**\n   * The feature ID attributes.\n   *\n   * @type {ModelComponents.FeatureIdAttribute[]}\n   * @private\n   */\n  this.featureIdAttributes = [];\n}\n\n/**\n * Joints and matrices defining a skin.\n *\n * @alias ModelComponents.Skin\n * @constructor\n *\n * @private\n */\nfunction Skin() {\n  /**\n   * The joints.\n   *\n   * @type {ModelComponents.Node[]}\n   * @private\n   */\n  this.joints = undefined;\n\n  /**\n   * The inverse bind matrices of the joints.\n   *\n   * @type {Matrix4[]}\n   * @private\n   */\n  this.inverseBindMatrices = undefined;\n}\n\n/**\n * A node in the node hierarchy.\n *\n * @alias ModelComponents.Node\n * @constructor\n *\n * @private\n */\nfunction Node() {\n  /**\n   * The children nodes.\n   *\n   * @type {ModelComponents.Node[]}\n   * @private\n   */\n  this.children = [];\n\n  /**\n   * The mesh primitives.\n   *\n   * @type {ModelComponents.Primitive[]}\n   * @private\n   */\n  this.primitives = [];\n\n  /**\n   * Instances of this node.\n   *\n   * @type {ModelComponents.Instances}\n   * @private\n   */\n  this.instances = undefined;\n\n  /**\n   * The skin.\n   *\n   * @type {ModelComponents.Skin}\n   * @private\n   */\n  this.skin = undefined;\n\n  /**\n   * The local transformation matrix. When matrix is defined translation,\n   * rotation, and scale must be undefined. When matrix is undefined\n   * translation, rotation, and scale must all be defined.\n   *\n   * @type {Matrix4}\n   * @private\n   */\n  this.matrix = undefined;\n\n  /**\n   * The local translation.\n   *\n   * @type {Cartesian3}\n   * @private\n   */\n  this.translation = undefined;\n\n  /**\n   * The local rotation.\n   *\n   * @type {Quaternion}\n   * @private\n   */\n  this.rotation = undefined;\n\n  /**\n   * The local scale.\n   *\n   * @type {Cartesian3}\n   * @private\n   */\n  this.scale = undefined;\n}\n\n/**\n * A scene containing nodes.\n *\n * @alias ModelComponents.Scene\n * @constructor\n *\n * @private\n */\nfunction Scene() {\n  /**\n   * The nodes belonging to the scene.\n   *\n   * @type {ModelComponents.Node[]}\n   * @private\n   */\n  this.nodes = [];\n\n  /**\n   * The scene\'s up axis.\n   *\n   * @type {Axis}\n   * @private\n   */\n  this.upAxis = undefined;\n\n  /**\n   * The scene\'s forward axis.\n   *\n   * @type {Axis}\n   * @private\n   */\n  this.forwardAxis = undefined;\n}\n\n/**\n * The components that make up a model.\n *\n * @alias ModelComponents.Components\n * @constructor\n *\n * @private\n */\nfunction Components() {\n  /**\n   * The default scene.\n   *\n   * @type {ModelComponents.Scene}\n   * @private\n   */\n  this.scene = undefined;\n\n  /**\n   * All nodes in the model.\n   *\n   * @type {ModelComponents.Node[]}\n   */\n  this.nodes = undefined;\n\n  /**\n   * Feature metadata containing the schema, feature tables, and feature textures.\n   *\n   * @type {FeatureMetadata}\n   * @private\n   */\n  this.featureMetadata = undefined;\n}\n\n/**\n * Information about a GPU texture, including the texture itself\n *\n * @alias ModelComponents.TextureReader\n * @constructor\n *\n * @private\n */\nfunction TextureReader() {\n  /**\n   * The underlying GPU texture. The {@link Texture} contains the sampler.\n   *\n   * @type {Texture}\n   * @private\n   */\n  this.texture = undefined;\n\n  /**\n   * The texture coordinate set.\n   *\n   * @type {Number}\n   * @default 0\n   * @private\n   */\n  this.texCoord = 0;\n\n  /**\n   * Transformation matrix to apply to texture coordinates.\n   *\n   * @type {Matrix3}\n   * @default Matrix3.IDENTITY\n   */\n  this.transform = _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(_Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].IDENTITY */ .Z.IDENTITY);\n\n  /**\n   * The texture channels to read from. When undefined all channels are read.\n   *\n   * @type {String}\n   */\n  this.channels = undefined;\n}\n\n/**\n * Material properties for the PBR metallic roughness shading model.\n *\n * @alias ModelComponents.MetallicRoughness\n * @constructor\n *\n * @private\n */\nfunction MetallicRoughness() {\n  /**\n   * The base color texture reader.\n   *\n   * @type {ModelComponents.TextureReader}\n   * @private\n   */\n  this.baseColorTexture = undefined;\n\n  /**\n   * The metallic roughness texture reader.\n   *\n   * @type {ModelComponents.TextureReader}\n   * @private\n   */\n  this.metallicRoughnessTexture = undefined;\n\n  /**\n   * The base color factor.\n   *\n   * @type {Cartesian4}\n   * @default new Cartesian4(1.0, 1.0, 1.0, 1.0)\n   * @private\n   */\n  this.baseColorFactor = _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n    MetallicRoughness.DEFAULT_BASE_COLOR_FACTOR\n  );\n\n  /**\n   * The metallic factor.\n   *\n   * @type {Number}\n   * @default 1.0\n   * @private\n   */\n  this.metallicFactor = MetallicRoughness.DEFAULT_METALLIC_FACTOR;\n\n  /**\n   * The roughness factor.\n   *\n   * @type {Number}\n   * @default 1.0\n   * @private\n   */\n  this.roughnessFactor = MetallicRoughness.DEFAULT_ROUGHNESS_FACTOR;\n}\n\n/**\n * @private\n */\nMetallicRoughness.DEFAULT_BASE_COLOR_FACTOR = _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ONE */ .Z.ONE;\n\n/**\n * @private\n */\nMetallicRoughness.DEFAULT_METALLIC_FACTOR = 1.0;\n\n/**\n * @private\n */\nMetallicRoughness.DEFAULT_ROUGHNESS_FACTOR = 1.0;\n\n/**\n * Material properties for the PBR specular glossiness shading model.\n *\n * @alias ModelComponents.function SpecularGlossiness\n * @constructor\n *\n * @private\n */\nfunction SpecularGlossiness() {\n  /**\n   * The diffuse texture reader.\n   *\n   * @type {ModelComponents.TextureReader}\n   * @private\n   */\n  this.diffuseTexture = undefined;\n\n  /**\n   * The specular glossiness texture reader.\n   *\n   * @type {ModelComponents.TextureReader}\n   * @private\n   */\n  this.specularGlossinessTexture = undefined;\n\n  /**\n   * The diffuse factor.\n   *\n   * @type {Cartesian4}\n   * @default new Cartesian4(1.0, 1.0, 1.0, 1.0)\n   * @private\n   */\n  this.diffuseFactor = _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n    SpecularGlossiness.DEFAULT_DIFFUSE_FACTOR\n  );\n\n  /**\n   * The specular factor.\n   *\n   * @type {Cartesian3}\n   * @default new Cartesian3(1.0, 1.0, 1.0)\n   * @private\n   */\n  this.specularFactor = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n    SpecularGlossiness.DEFAULT_SPECULAR_FACTOR\n  );\n\n  /**\n   * The glossiness factor.\n   *\n   * @type {Number}\n   * @default 1.0\n   * @private\n   */\n  this.glossinessFactor = SpecularGlossiness.DEFAULT_GLOSSINESS_FACTOR;\n}\n\n/**\n * @private\n */\nSpecularGlossiness.DEFAULT_DIFFUSE_FACTOR = _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ONE */ .Z.ONE;\n\n/**\n * @private\n */\nSpecularGlossiness.DEFAULT_SPECULAR_FACTOR = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ONE */ .Z.ONE;\n\n/**\n * @private\n */\nSpecularGlossiness.DEFAULT_GLOSSINESS_FACTOR = 1.0;\n\n/**\n * The material appearance of a primitive.\n *\n * @alias ModelComponent.Material\n * @constructor\n *\n * @private\n */\nfunction Material() {\n  /**\n   * Material properties for the PBR metallic roughness shading model.\n   *\n   * @type {ModelComponents.MetallicRoughness}\n   * @private\n   */\n  this.metallicRoughness = new MetallicRoughness();\n\n  /**\n   * Material properties for the PBR specular glossiness shading model.\n   *\n   * @type {ModelComponents.SpecularGlossiness}\n   * @private\n   */\n  this.specularGlossiness = undefined;\n\n  /**\n   * The emissive texture reader.\n   *\n   * @type {ModelComponents.TextureReader}\n   * @private\n   */\n  this.emissiveTexture = undefined;\n\n  /**\n   * The normal texture reader.\n   *\n   * @type {ModelComponents.TextureReader}\n   * @private\n   */\n  this.normalTexture = undefined;\n\n  /**\n   * The occlusion texture reader.\n   *\n   * @type {ModelComponents.TextureReader}\n   * @private\n   */\n  this.occlusionTexture = undefined;\n\n  /**\n   * The emissive factor.\n   *\n   * @type {Cartesian3}\n   * @default Cartesian3.ZERO\n   * @private\n   */\n  this.emissiveFactor = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(Material.DEFAULT_EMISSIVE_FACTOR);\n\n  /**\n   * The alpha mode.\n   *\n   * @type {AlphaMode}\n   * @default AlphaMode.OPAQUE\n   * @private\n   */\n  this.alphaMode = _AlphaMode_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].OPAQUE */ .Z.OPAQUE;\n\n  /**\n   * The alpha cutoff value of the material for the MASK alpha mode.\n   *\n   * @type {Number}\n   * @default 0.5\n   * @private\n   */\n  this.alphaCutoff = 0.5;\n\n  /**\n   * Specifies whether the material is double sided.\n   *\n   * @type {Boolean}\n   * @default false\n   * @private\n   */\n  this.doubleSided = false;\n\n  /**\n   * Specifies whether the material is unlit.\n   *\n   * @type {Boolean}\n   * @default false\n   * @private\n   */\n  this.unlit = false;\n}\n\n/**\n * @private\n */\nMaterial.DEFAULT_EMISSIVE_FACTOR = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO;\n\nModelComponents.Quantization = Quantization;\nModelComponents.Attribute = Attribute;\nModelComponents.Indices = Indices;\nModelComponents.FeatureIdAttribute = FeatureIdAttribute;\nModelComponents.FeatureIdTexture = FeatureIdTexture;\nModelComponents.MorphTarget = MorphTarget;\nModelComponents.Primitive = Primitive;\nModelComponents.Instances = Instances;\nModelComponents.Skin = Skin;\nModelComponents.Node = Node;\nModelComponents.Scene = Scene;\nModelComponents.Components = Components;\nModelComponents.TextureReader = TextureReader;\nModelComponents.MetallicRoughness = MetallicRoughness;\nModelComponents.SpecularGlossiness = SpecularGlossiness;\nModelComponents.Material = Material;\n\n/* harmony default export */ __webpack_exports__["Z"] = (ModelComponents);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7896\n')},66913:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87826);\n/* harmony import */ var _AlphaMode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82075);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13633);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8379);\n\n\n\n\n\n\n/**\n * A pipeline stage for configuring the alpha options for handling translucency.\n *\n * @namespace MaterialPipelineStage\n *\n * @private\n */\nvar AlphaPipelineStage = {};\nAlphaPipelineStage.name = "AlphaPipelineStage"; // Helps with debugging\n\nAlphaPipelineStage.process = function (renderResources, primitive, frameState) {\n  var alphaOptions = renderResources.alphaOptions;\n\n  // Ensure the pass is defined\n  var model = renderResources.model;\n  alphaOptions.pass = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(alphaOptions.pass, model.opaquePass);\n\n  var renderStateOptions = renderResources.renderStateOptions;\n  if (alphaOptions.pass === _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT) {\n    renderStateOptions.blending = _BlendingState_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND;\n  } else {\n    renderStateOptions.blending = _BlendingState_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].DISABLED */ .Z.DISABLED;\n  }\n\n  var shaderBuilder = renderResources.shaderBuilder;\n  var uniformMap = renderResources.uniformMap;\n  var alphaMode = alphaOptions.alphaMode;\n\n  if (alphaMode === _AlphaMode_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].MASK */ .Z.MASK) {\n    shaderBuilder.addDefine(\n      "ALPHA_MODE_MASK",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    shaderBuilder.addUniform(\n      "float",\n      "u_alphaCutoff",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    uniformMap.u_alphaCutoff = function () {\n      return alphaOptions.alphaCutoff;\n    };\n  } else if (alphaMode === _AlphaMode_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].BLEND */ .Z.BLEND) {\n    shaderBuilder.addDefine(\n      "ALPHA_MODE_BLEND",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  } else {\n    shaderBuilder.addDefine(\n      "ALPHA_MODE_OPAQUE",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (AlphaPipelineStage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjY5MTMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0Q7QUFDYztBQUM1QjtBQUNRO0FBQ047O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7O0FBRWhEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNCQUFzQiwwRUFBWTs7QUFFbEM7QUFDQSw0QkFBNEIsMEZBQWdCO0FBQzVDLGtDQUFrQywwRkFBeUI7QUFDM0QsSUFBSTtBQUNKLGtDQUFrQyxvRkFBc0I7QUFDeEQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG9CQUFvQix3RUFBYztBQUNsQztBQUNBO0FBQ0E7QUFDQSxNQUFNLGlHQUEwQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0saUdBQTBCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1QkFBdUIsMEVBQWU7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsTUFBTSxpR0FBMEI7QUFDaEM7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsTUFBTSxpR0FBMEI7QUFDaEM7QUFDQTtBQUNBOztBQUVBLHlEQUFlLGtCQUFrQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01vZGVsRXhwZXJpbWVudGFsL0FscGhhUGlwZWxpbmVTdGFnZS5qcz8yOWU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4uLy4uL0NvcmUvZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgU2hhZGVyRGVzdGluYXRpb24gZnJvbSBcIi4uLy4uL1JlbmRlcmVyL1NoYWRlckRlc3RpbmF0aW9uLmpzXCI7XG5pbXBvcnQgQWxwaGFNb2RlIGZyb20gXCIuLi9BbHBoYU1vZGUuanNcIjtcbmltcG9ydCBCbGVuZGluZ1N0YXRlIGZyb20gXCIuLi9CbGVuZGluZ1N0YXRlLmpzXCI7XG5pbXBvcnQgUGFzcyBmcm9tIFwiLi4vLi4vUmVuZGVyZXIvUGFzcy5qc1wiO1xuXG4vKipcbiAqIEEgcGlwZWxpbmUgc3RhZ2UgZm9yIGNvbmZpZ3VyaW5nIHRoZSBhbHBoYSBvcHRpb25zIGZvciBoYW5kbGluZyB0cmFuc2x1Y2VuY3kuXG4gKlxuICogQG5hbWVzcGFjZSBNYXRlcmlhbFBpcGVsaW5lU3RhZ2VcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG52YXIgQWxwaGFQaXBlbGluZVN0YWdlID0ge307XG5BbHBoYVBpcGVsaW5lU3RhZ2UubmFtZSA9IFwiQWxwaGFQaXBlbGluZVN0YWdlXCI7IC8vIEhlbHBzIHdpdGggZGVidWdnaW5nXG5cbkFscGhhUGlwZWxpbmVTdGFnZS5wcm9jZXNzID0gZnVuY3Rpb24gKHJlbmRlclJlc291cmNlcywgcHJpbWl0aXZlLCBmcmFtZVN0YXRlKSB7XG4gIHZhciBhbHBoYU9wdGlvbnMgPSByZW5kZXJSZXNvdXJjZXMuYWxwaGFPcHRpb25zO1xuXG4gIC8vIEVuc3VyZSB0aGUgcGFzcyBpcyBkZWZpbmVkXG4gIHZhciBtb2RlbCA9IHJlbmRlclJlc291cmNlcy5tb2RlbDtcbiAgYWxwaGFPcHRpb25zLnBhc3MgPSBkZWZhdWx0VmFsdWUoYWxwaGFPcHRpb25zLnBhc3MsIG1vZGVsLm9wYXF1ZVBhc3MpO1xuXG4gIHZhciByZW5kZXJTdGF0ZU9wdGlvbnMgPSByZW5kZXJSZXNvdXJjZXMucmVuZGVyU3RhdGVPcHRpb25zO1xuICBpZiAoYWxwaGFPcHRpb25zLnBhc3MgPT09IFBhc3MuVFJBTlNMVUNFTlQpIHtcbiAgICByZW5kZXJTdGF0ZU9wdGlvbnMuYmxlbmRpbmcgPSBCbGVuZGluZ1N0YXRlLkFMUEhBX0JMRU5EO1xuICB9IGVsc2Uge1xuICAgIHJlbmRlclN0YXRlT3B0aW9ucy5ibGVuZGluZyA9IEJsZW5kaW5nU3RhdGUuRElTQUJMRUQ7XG4gIH1cblxuICB2YXIgc2hhZGVyQnVpbGRlciA9IHJlbmRlclJlc291cmNlcy5zaGFkZXJCdWlsZGVyO1xuICB2YXIgdW5pZm9ybU1hcCA9IHJlbmRlclJlc291cmNlcy51bmlmb3JtTWFwO1xuICB2YXIgYWxwaGFNb2RlID0gYWxwaGFPcHRpb25zLmFscGhhTW9kZTtcblxuICBpZiAoYWxwaGFNb2RlID09PSBBbHBoYU1vZGUuTUFTSykge1xuICAgIHNoYWRlckJ1aWxkZXIuYWRkRGVmaW5lKFxuICAgICAgXCJBTFBIQV9NT0RFX01BU0tcIixcbiAgICAgIHVuZGVmaW5lZCxcbiAgICAgIFNoYWRlckRlc3RpbmF0aW9uLkZSQUdNRU5UXG4gICAgKTtcbiAgICBzaGFkZXJCdWlsZGVyLmFkZFVuaWZvcm0oXG4gICAgICBcImZsb2F0XCIsXG4gICAgICBcInVfYWxwaGFDdXRvZmZcIixcbiAgICAgIFNoYWRlckRlc3RpbmF0aW9uLkZSQUdNRU5UXG4gICAgKTtcbiAgICB1bmlmb3JtTWFwLnVfYWxwaGFDdXRvZmYgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYWxwaGFPcHRpb25zLmFscGhhQ3V0b2ZmO1xuICAgIH07XG4gIH0gZWxzZSBpZiAoYWxwaGFNb2RlID09PSBBbHBoYU1vZGUuQkxFTkQpIHtcbiAgICBzaGFkZXJCdWlsZGVyLmFkZERlZmluZShcbiAgICAgIFwiQUxQSEFfTU9ERV9CTEVORFwiLFxuICAgICAgdW5kZWZpbmVkLFxuICAgICAgU2hhZGVyRGVzdGluYXRpb24uRlJBR01FTlRcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIHNoYWRlckJ1aWxkZXIuYWRkRGVmaW5lKFxuICAgICAgXCJBTFBIQV9NT0RFX09QQVFVRVwiLFxuICAgICAgdW5kZWZpbmVkLFxuICAgICAgU2hhZGVyRGVzdGluYXRpb24uRlJBR01FTlRcbiAgICApO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBbHBoYVBpcGVsaW5lU3RhZ2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///66913\n')},44197:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* unused harmony export default */\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _CustomShaderMode_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7377);\n/* harmony import */ var _UniformType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(34754);\n/* harmony import */ var _TextureManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(77174);\n\n\n\n\n\n\n\n\n\n/**\n * An object describing a uniform, its type, and an initial value\n *\n * @typedef {Object} UniformSpecifier\n * @property {UniformType} type The Glsl type of the uniform.\n * @property {Boolean|Number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4|TextureUniform} value The initial value of the uniform\n * @private\n */\n\n/**\n * A set of variables parsed from the user-defined shader code. These can be\n * used for optimizations when generating the overall shader. Though they are\n * represented as JS objects, the intended use is like a set, so only the\n * existence of keys matter. The values will always be <code>true</code> if\n * defined. This data structure is used because:\n * <ul>\n *   <li>We cannot yet use ES6 Set objects</li>\n *   <li>Using a dictionary automatically de-duplicates variable names</li>\n *   <li>Queries such as <code>variableSet.hasOwnProperty("position")</code> are straightforward</li>\n * </ul>\n * @typedef {Object<String, Boolean>} VariableSet\n * @private\n */\n\n/**\n * Variable sets parsed from the user-defined vertex shader text.\n * @typedef {Object} VertexVariableSets\n * @property {VariableSet} attributeSet A set of all unique attributes used in the vertex shader via the <code>vsInput.attributes</code> struct.\n * @private\n */\n\n/**\n * Variable sets parsed from the user-defined fragment shader text.\n * @typedef {Object} FragmentVariableSets\n * @property {VariableSet} attributeSet A set of all unique attributes used in the fragment shader via the <code>fsInput.attributes</code> struct\n * @property {VariableSet} positionSet A set of all position variables like positionWC or positionEC used in the fragment shader via the <code>fsInput</code> struct\n * @property {VariableSet} materialSet A set of all material variables such as diffuse, specular or alpha that are used in the fragment shader via the <code>material</code> struct.\n * @private\n */\n\n/**\n * A user defined GLSL shader used with {@link ModelExperimental} as well\n * as {@link Cesium3DTileset}.\n * <p>\n * If texture uniforms are used, additional resource management must be done:\n * </p>\n * <ul>\n *   <li>\n *      The <code>update</code> function must be called each frame. When a\n *      custom shader is passed to a {@link ModelExperimental} or a\n *      {@link Cesium3DTileset}, this step is handled automaticaly\n *   </li>\n *   <li>\n *      {@link CustomShader#destroy} must be called when the custom shader is\n *      no longer needed to clean up GPU resources properly. The application\n *      is responsible for calling this method.\n *   </li>\n * </ul>\n *\n * @param {Object} options An object with the following options\n * @param {CustomShaderMode} [options.mode=CustomShaderMode.MODIFY_MATERIAL] The custom shader mode, which determines how the custom shader code is inserted into the fragment shader.\n * @param {LightingModel} [options.lightingModel] The lighting model (e.g. PBR or unlit). If present, this overrides the default lighting for the model.\n * @param {Boolean} [options.isTranslucent=false] If set, the model will be rendered as translucent. This overrides the default settings for the model.\n * @param {Object.<String, UniformSpecifier>} [options.uniforms] A dictionary for user-defined uniforms. The key is the uniform name that will appear in the GLSL code. The value is an object that describes the uniform type and initial value\n * @param {Object.<String, VaryingType>} [options.varyings] A dictionary for declaring additional GLSL varyings used in the shader. The key is the varying name that will appear in the GLSL code. The value is the data type of the varying. For each varying, the declaration will be added to the top of the shader automatically. The caller is responsible for assigning a value in the vertex shader and using the value in the fragment shader.\n * @param {String} [options.vertexShaderText] The custom vertex shader as a string of GLSL code. It must include a GLSL function called vertexMain. See the example for the expected signature. If not specified, the custom vertex shader step will be skipped in the computed vertex shader.\n * @param {String} [options.fragmentShaderText] The custom fragment shader as a string of GLSL code. It must include a GLSL function called fragmentMain. See the example for the expected signature. If not specified, the custom fragment shader step will be skipped in the computed fragment shader.\n *\n * @alias CustomShader\n * @constructor\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n *\n * @example\n * var customShader = new CustomShader({\n *   uniforms: {\n *     u_colorIndex: {\n *       type: Cesium.UniformType.FLOAT,\n *       value: 1.0\n *     },\n *     u_normalMap: {\n *       type: Cesium.UniformType.SAMPLER_2D,\n *       value: new Cesium.TextureUniform({\n *         url: "http://example.com/normal.png"\n *       })\n *     }\n *   },\n *   varyings: {\n *     v_selectedColor: Cesium.VaryingType.VEC3\n *   },\n *   vertexShaderText: `\n *   void vertexMain(VertexInput vsInput, inout vec3 position) {\n *     v_selectedColor = mix(vsInput.attributes.color_0, vsInput.attributes.color_1, u_colorIndex);\n *     position += 0.1 * vsInput.attributes.normal;\n *   }\n *   `,\n *   fragmentShaderText: `\n *   void fragmentMain(FragmentInput fsInput, inout czm_modelMaterial material) {\n *     material.normal = texture2D(u_normalMap, fsInput.attributes.texCoord_0);\n *     material.diffuse = v_selectedColor;\n *   }\n *   `\n * });\n */\nfunction CustomShader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  /**\n   * A value determining how the custom shader interacts with the overall\n   * fragment shader. This is used by {@link CustomShaderStage}\n   *\n   * @type {CustomShaderMode}\n   * @readonly\n   * @private\n   */\n  this.mode = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.mode, _CustomShaderMode_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].MODIFY_MATERIAL */ .Z.MODIFY_MATERIAL);\n  /**\n   * The lighting model to use when using the custom shader.\n   * This is used by {@link CustomShaderStage}\n   *\n   * @type {LightingModel}\n   * @readonly\n   * @private\n   */\n  this.lightingModel = options.lightingModel;\n  /**\n   * Additional uniforms as declared by the user.\n   *\n   * @type {Object.<String, UniformSpecifier>}\n   * @readonly\n   * @private\n   */\n  this.uniforms = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.uniforms, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  /**\n   * Additional varyings as declared by the user.\n   * This is used by {@link CustomShaderStage}\n   *\n   * @type {Object.<String, VaryingType>}\n   * @readonly\n   * @private\n   */\n  this.varyings = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.varyings, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  /**\n   * The user-defined GLSL code for the vertex shader\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  this.vertexShaderText = options.vertexShaderText;\n  /**\n   * The user-defined GLSL code for the fragment shader\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  this.fragmentShaderText = options.fragmentShaderText;\n  /**\n   * Whether the shader should be rendered as translucent\n   *\n   * @type {Boolean}\n   * @readonly\n   * @private\n   */\n  this.isTranslucent = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.isTranslucent, false);\n\n  /**\n   * texture uniforms require some asynchronous processing. This is delegated\n   * to a texture manager.\n   *\n   * @type {TextureManager}\n   * @readonly\n   * @private\n   */\n  this._textureManager = new _TextureManager_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\n  /**\n   * The default texture (from the {@link Context}) to use while textures\n   * are loading\n   *\n   * @type {Texture}\n   * @readonly\n   * @private\n   */\n  this._defaultTexture = undefined;\n  /**\n   * The map of uniform names to a function that returns a value. This map\n   * is combined with the overall uniform map used by the {@link DrawCommand}\n   *\n   * @type {Object.<String, Function>}\n   * @readonly\n   * @private\n   */\n  this.uniformMap = buildUniformMap(this);\n\n  /**\n   * A collection of variables used in <code>vertexShaderText</code>. This\n   * is used only for optimizations in {@link CustomShaderStage}.\n   * @type {VertexVariableSets}\n   * @private\n   */\n  this.usedVariablesVertex = {\n    attributeSet: {},\n  };\n  /**\n   * A collection of variables used in <code>fragmentShaderText</code>. This\n   * is used only for optimizations in {@link CustomShaderStage}.\n   * @type {FragmentVariableSets}\n   * @private\n   */\n  this.usedVariablesFragment = {\n    positionSet: {},\n    attributeSet: {},\n    materialSet: {},\n  };\n\n  findUsedVariables(this);\n}\n\nfunction buildUniformMap(customShader) {\n  var uniforms = customShader.uniforms;\n  var uniformMap = {};\n  for (var uniformName in uniforms) {\n    if (uniforms.hasOwnProperty(uniformName)) {\n      var uniform = uniforms[uniformName];\n      var type = uniform.type;\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (type === _UniformType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SAMPLER_CUBE */ .Z.SAMPLER_CUBE) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n          "CustomShader does not support samplerCube uniforms"\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      if (type === _UniformType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SAMPLER_2D */ .Z.SAMPLER_2D) {\n        customShader._textureManager.loadTexture2D(uniformName, uniform.value);\n        uniformMap[uniformName] = createUniformTexture2DFunction(\n          customShader,\n          uniformName\n        );\n      } else {\n        uniformMap[uniformName] = createUniformFunction(\n          customShader,\n          uniformName\n        );\n      }\n    }\n  }\n  return uniformMap;\n}\n\nfunction createUniformTexture2DFunction(customShader, uniformName) {\n  return function () {\n    return (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n      customShader._textureManager.getTexture(uniformName),\n      customShader._defaultTexture\n    );\n  };\n}\n\nfunction createUniformFunction(customShader, uniformName) {\n  return function () {\n    return customShader.uniforms[uniformName].value;\n  };\n}\n\nfunction getVariables(shaderText, regex, outputSet) {\n  var match;\n  while ((match = regex.exec(shaderText)) !== null) {\n    var variableName = match[1];\n\n    // Using a dictionary like a set. The value doesn\'t\n    // matter, as this will only be used for queries such as\n    // if (set.hasOwnProperty(variableName)) { ... }\n    outputSet[variableName] = true;\n  }\n}\n\nfunction findUsedVariables(customShader) {\n  var attributeRegex = /[vf]sInput\\.attributes\\.(\\w+)/g;\n  var attributeSet;\n\n  var vertexShaderText = customShader.vertexShaderText;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(vertexShaderText)) {\n    attributeSet = customShader.usedVariablesVertex.attributeSet;\n    getVariables(vertexShaderText, attributeRegex, attributeSet);\n  }\n\n  var fragmentShaderText = customShader.fragmentShaderText;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(fragmentShaderText)) {\n    attributeSet = customShader.usedVariablesFragment.attributeSet;\n    getVariables(fragmentShaderText, attributeRegex, attributeSet);\n\n    var positionRegex = /fsInput\\.(position\\w+)/g;\n    var positionSet = customShader.usedVariablesFragment.positionSet;\n    getVariables(fragmentShaderText, positionRegex, positionSet);\n\n    var materialRegex = /material\\.(\\w+)/g;\n    var materialSet = customShader.usedVariablesFragment.materialSet;\n    getVariables(fragmentShaderText, materialRegex, materialSet);\n  }\n}\n\n/**\n * Update the value of a uniform declared in the shader\n * @param {String} uniformName The GLSL name of the uniform. This must match one of the uniforms declared in the constructor\n * @param {Boolean|Number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4|String|Resource} value The new value of the uniform.\n */\nCustomShader.prototype.setUniform = function (uniformName, value) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("uniformName", uniformName);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("value", value);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this.uniforms[uniformName])) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Uniform " +\n        uniformName +\n        " must be declared in the CustomShader constructor."\n    );\n  }\n  //>>includeEnd(\'debug\');\n  var uniform = this.uniforms[uniformName];\n  if (uniform.type === _UniformType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SAMPLER_2D */ .Z.SAMPLER_2D) {\n    // Textures are loaded asynchronously\n    this._textureManager.loadTexture2D(uniformName, value);\n  } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(value.clone)) {\n    // clone Cartesian and Matrix types.\n    uniform.value = value.clone(uniform.value);\n  } else {\n    uniform.value = value;\n  }\n};\n\nCustomShader.prototype.update = function (frameState) {\n  this._defaultTexture = frameState.context.defaultTexture;\n  this._textureManager.update(frameState);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n *\n * @see CustomShader#destroy\n * @private\n */\nCustomShader.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * customShader = customShader && customShader.destroy();\n *\n * @see CustomShader#isDestroyed\n * @private\n */\nCustomShader.prototype.destroy = function () {\n  this._textureManager = this._textureManager && this._textureManager.destroy();\n  (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQxOTcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdDO0FBQ2M7QUFDVjtBQUNZO0FBQ0U7QUFDTDtBQUNWO0FBQ007O0FBRWpEO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLGFBQWE7QUFDM0IsY0FBYyx3RkFBd0Y7QUFDdEc7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5QkFBeUI7QUFDdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGNBQWMsYUFBYTtBQUMzQjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxhQUFhO0FBQzNCLGNBQWMsYUFBYTtBQUMzQixjQUFjLGFBQWE7QUFDM0I7QUFDQTs7QUFFQTtBQUNBLHlDQUF5Qyx5QkFBeUI7QUFDbEUsT0FBTyxzQkFBc0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHlCQUF5QjtBQUMvRCxTQUFTLHNCQUFzQjtBQUMvQjtBQUNBO0FBQ0EsU0FBUyw0QkFBNEI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLGtCQUFrQjtBQUM3QixXQUFXLGVBQWU7QUFDMUIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsbUNBQW1DO0FBQzlDLFdBQVcsOEJBQThCO0FBQ3pDLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDZTtBQUNmLFlBQVksMEVBQVksVUFBVSxnR0FBeUI7O0FBRTNEO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsY0FBYywwRUFBWSxlQUFlLHFHQUFnQztBQUN6RTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwwRUFBWSxtQkFBbUIsZ0dBQXlCO0FBQzFFO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDBFQUFZLG1CQUFtQixnR0FBeUI7QUFDMUU7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwwRUFBWTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG1FQUFjO0FBQzNDO0FBQ0Esb0NBQW9DLGNBQWM7QUFDbEQ7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHdDQUF3Qyx3QkFBd0I7QUFDaEUsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0Msd0JBQXdCO0FBQ2hFLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsb0JBQW9CO0FBQ3BCLG1CQUFtQjtBQUNuQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMEZBQXdCO0FBQzNDLGtCQUFrQix3RUFBYztBQUNoQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsc0ZBQXNCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLDBFQUFZO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLHFFQUFPO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSxxRUFBTztBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLHlGQUF5RjtBQUNwRztBQUNBO0FBQ0E7QUFDQSxFQUFFLDJGQUFtQjtBQUNyQixFQUFFLCtFQUFhO0FBQ2YsT0FBTyxxRUFBTztBQUNkLGNBQWMsd0VBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0ZBQXNCO0FBQzdDO0FBQ0E7QUFDQSxJQUFJLFNBQVMscUVBQU87QUFDcEI7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQSx3REFBd0Q7QUFDeEQsOENBQThDLHNCQUFzQjtBQUNwRTtBQUNBLGFBQWEsU0FBUyxtQ0FBbUM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQsOENBQThDLHNCQUFzQjtBQUNwRTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwyRUFBYTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01vZGVsRXhwZXJpbWVudGFsL0N1c3RvbVNoYWRlci5qcz9iYTE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGVjayBmcm9tIFwiLi4vLi4vQ29yZS9DaGVjay5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi8uLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBkZXN0cm95T2JqZWN0IGZyb20gXCIuLi8uLi9Db3JlL2Rlc3Ryb3lPYmplY3QuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi4vLi4vQ29yZS9EZXZlbG9wZXJFcnJvci5qc1wiO1xuaW1wb3J0IEN1c3RvbVNoYWRlck1vZGUgZnJvbSBcIi4vQ3VzdG9tU2hhZGVyTW9kZS5qc1wiO1xuaW1wb3J0IFVuaWZvcm1UeXBlIGZyb20gXCIuL1VuaWZvcm1UeXBlLmpzXCI7XG5pbXBvcnQgVGV4dHVyZU1hbmFnZXIgZnJvbSBcIi4vVGV4dHVyZU1hbmFnZXIuanNcIjtcblxuLyoqXG4gKiBBbiBvYmplY3QgZGVzY3JpYmluZyBhIHVuaWZvcm0sIGl0cyB0eXBlLCBhbmQgYW4gaW5pdGlhbCB2YWx1ZVxuICpcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFVuaWZvcm1TcGVjaWZpZXJcbiAqIEBwcm9wZXJ0eSB7VW5pZm9ybVR5cGV9IHR5cGUgVGhlIEdsc2wgdHlwZSBvZiB0aGUgdW5pZm9ybS5cbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbnxOdW1iZXJ8Q2FydGVzaWFuMnxDYXJ0ZXNpYW4zfENhcnRlc2lhbjR8TWF0cml4MnxNYXRyaXgzfE1hdHJpeDR8VGV4dHVyZVVuaWZvcm19IHZhbHVlIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSB1bmlmb3JtXG4gKiBAcHJpdmF0ZVxuICovXG5cbi8qKlxuICogQSBzZXQgb2YgdmFyaWFibGVzIHBhcnNlZCBmcm9tIHRoZSB1c2VyLWRlZmluZWQgc2hhZGVyIGNvZGUuIFRoZXNlIGNhbiBiZVxuICogdXNlZCBmb3Igb3B0aW1pemF0aW9ucyB3aGVuIGdlbmVyYXRpbmcgdGhlIG92ZXJhbGwgc2hhZGVyLiBUaG91Z2ggdGhleSBhcmVcbiAqIHJlcHJlc2VudGVkIGFzIEpTIG9iamVjdHMsIHRoZSBpbnRlbmRlZCB1c2UgaXMgbGlrZSBhIHNldCwgc28gb25seSB0aGVcbiAqIGV4aXN0ZW5jZSBvZiBrZXlzIG1hdHRlci4gVGhlIHZhbHVlcyB3aWxsIGFsd2F5cyBiZSA8Y29kZT50cnVlPC9jb2RlPiBpZlxuICogZGVmaW5lZC4gVGhpcyBkYXRhIHN0cnVjdHVyZSBpcyB1c2VkIGJlY2F1c2U6XG4gKiA8dWw+XG4gKiAgIDxsaT5XZSBjYW5ub3QgeWV0IHVzZSBFUzYgU2V0IG9iamVjdHM8L2xpPlxuICogICA8bGk+VXNpbmcgYSBkaWN0aW9uYXJ5IGF1dG9tYXRpY2FsbHkgZGUtZHVwbGljYXRlcyB2YXJpYWJsZSBuYW1lczwvbGk+XG4gKiAgIDxsaT5RdWVyaWVzIHN1Y2ggYXMgPGNvZGU+dmFyaWFibGVTZXQuaGFzT3duUHJvcGVydHkoXCJwb3NpdGlvblwiKTwvY29kZT4gYXJlIHN0cmFpZ2h0Zm9yd2FyZDwvbGk+XG4gKiA8L3VsPlxuICogQHR5cGVkZWYge09iamVjdDxTdHJpbmcsIEJvb2xlYW4+fSBWYXJpYWJsZVNldFxuICogQHByaXZhdGVcbiAqL1xuXG4vKipcbiAqIFZhcmlhYmxlIHNldHMgcGFyc2VkIGZyb20gdGhlIHVzZXItZGVmaW5lZCB2ZXJ0ZXggc2hhZGVyIHRleHQuXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBWZXJ0ZXhWYXJpYWJsZVNldHNcbiAqIEBwcm9wZXJ0eSB7VmFyaWFibGVTZXR9IGF0dHJpYnV0ZVNldCBBIHNldCBvZiBhbGwgdW5pcXVlIGF0dHJpYnV0ZXMgdXNlZCBpbiB0aGUgdmVydGV4IHNoYWRlciB2aWEgdGhlIDxjb2RlPnZzSW5wdXQuYXR0cmlidXRlczwvY29kZT4gc3RydWN0LlxuICogQHByaXZhdGVcbiAqL1xuXG4vKipcbiAqIFZhcmlhYmxlIHNldHMgcGFyc2VkIGZyb20gdGhlIHVzZXItZGVmaW5lZCBmcmFnbWVudCBzaGFkZXIgdGV4dC5cbiAqIEB0eXBlZGVmIHtPYmplY3R9IEZyYWdtZW50VmFyaWFibGVTZXRzXG4gKiBAcHJvcGVydHkge1ZhcmlhYmxlU2V0fSBhdHRyaWJ1dGVTZXQgQSBzZXQgb2YgYWxsIHVuaXF1ZSBhdHRyaWJ1dGVzIHVzZWQgaW4gdGhlIGZyYWdtZW50IHNoYWRlciB2aWEgdGhlIDxjb2RlPmZzSW5wdXQuYXR0cmlidXRlczwvY29kZT4gc3RydWN0XG4gKiBAcHJvcGVydHkge1ZhcmlhYmxlU2V0fSBwb3NpdGlvblNldCBBIHNldCBvZiBhbGwgcG9zaXRpb24gdmFyaWFibGVzIGxpa2UgcG9zaXRpb25XQyBvciBwb3NpdGlvbkVDIHVzZWQgaW4gdGhlIGZyYWdtZW50IHNoYWRlciB2aWEgdGhlIDxjb2RlPmZzSW5wdXQ8L2NvZGU+IHN0cnVjdFxuICogQHByb3BlcnR5IHtWYXJpYWJsZVNldH0gbWF0ZXJpYWxTZXQgQSBzZXQgb2YgYWxsIG1hdGVyaWFsIHZhcmlhYmxlcyBzdWNoIGFzIGRpZmZ1c2UsIHNwZWN1bGFyIG9yIGFscGhhIHRoYXQgYXJlIHVzZWQgaW4gdGhlIGZyYWdtZW50IHNoYWRlciB2aWEgdGhlIDxjb2RlPm1hdGVyaWFsPC9jb2RlPiBzdHJ1Y3QuXG4gKiBAcHJpdmF0ZVxuICovXG5cbi8qKlxuICogQSB1c2VyIGRlZmluZWQgR0xTTCBzaGFkZXIgdXNlZCB3aXRoIHtAbGluayBNb2RlbEV4cGVyaW1lbnRhbH0gYXMgd2VsbFxuICogYXMge0BsaW5rIENlc2l1bTNEVGlsZXNldH0uXG4gKiA8cD5cbiAqIElmIHRleHR1cmUgdW5pZm9ybXMgYXJlIHVzZWQsIGFkZGl0aW9uYWwgcmVzb3VyY2UgbWFuYWdlbWVudCBtdXN0IGJlIGRvbmU6XG4gKiA8L3A+XG4gKiA8dWw+XG4gKiAgIDxsaT5cbiAqICAgICAgVGhlIDxjb2RlPnVwZGF0ZTwvY29kZT4gZnVuY3Rpb24gbXVzdCBiZSBjYWxsZWQgZWFjaCBmcmFtZS4gV2hlbiBhXG4gKiAgICAgIGN1c3RvbSBzaGFkZXIgaXMgcGFzc2VkIHRvIGEge0BsaW5rIE1vZGVsRXhwZXJpbWVudGFsfSBvciBhXG4gKiAgICAgIHtAbGluayBDZXNpdW0zRFRpbGVzZXR9LCB0aGlzIHN0ZXAgaXMgaGFuZGxlZCBhdXRvbWF0aWNhbHlcbiAqICAgPC9saT5cbiAqICAgPGxpPlxuICogICAgICB7QGxpbmsgQ3VzdG9tU2hhZGVyI2Rlc3Ryb3l9IG11c3QgYmUgY2FsbGVkIHdoZW4gdGhlIGN1c3RvbSBzaGFkZXIgaXNcbiAqICAgICAgbm8gbG9uZ2VyIG5lZWRlZCB0byBjbGVhbiB1cCBHUFUgcmVzb3VyY2VzIHByb3Blcmx5LiBUaGUgYXBwbGljYXRpb25cbiAqICAgICAgaXMgcmVzcG9uc2libGUgZm9yIGNhbGxpbmcgdGhpcyBtZXRob2QuXG4gKiAgIDwvbGk+XG4gKiA8L3VsPlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIEFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgb3B0aW9uc1xuICogQHBhcmFtIHtDdXN0b21TaGFkZXJNb2RlfSBbb3B0aW9ucy5tb2RlPUN1c3RvbVNoYWRlck1vZGUuTU9ESUZZX01BVEVSSUFMXSBUaGUgY3VzdG9tIHNoYWRlciBtb2RlLCB3aGljaCBkZXRlcm1pbmVzIGhvdyB0aGUgY3VzdG9tIHNoYWRlciBjb2RlIGlzIGluc2VydGVkIGludG8gdGhlIGZyYWdtZW50IHNoYWRlci5cbiAqIEBwYXJhbSB7TGlnaHRpbmdNb2RlbH0gW29wdGlvbnMubGlnaHRpbmdNb2RlbF0gVGhlIGxpZ2h0aW5nIG1vZGVsIChlLmcuIFBCUiBvciB1bmxpdCkuIElmIHByZXNlbnQsIHRoaXMgb3ZlcnJpZGVzIHRoZSBkZWZhdWx0IGxpZ2h0aW5nIGZvciB0aGUgbW9kZWwuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmlzVHJhbnNsdWNlbnQ9ZmFsc2VdIElmIHNldCwgdGhlIG1vZGVsIHdpbGwgYmUgcmVuZGVyZWQgYXMgdHJhbnNsdWNlbnQuIFRoaXMgb3ZlcnJpZGVzIHRoZSBkZWZhdWx0IHNldHRpbmdzIGZvciB0aGUgbW9kZWwuXG4gKiBAcGFyYW0ge09iamVjdC48U3RyaW5nLCBVbmlmb3JtU3BlY2lmaWVyPn0gW29wdGlvbnMudW5pZm9ybXNdIEEgZGljdGlvbmFyeSBmb3IgdXNlci1kZWZpbmVkIHVuaWZvcm1zLiBUaGUga2V5IGlzIHRoZSB1bmlmb3JtIG5hbWUgdGhhdCB3aWxsIGFwcGVhciBpbiB0aGUgR0xTTCBjb2RlLiBUaGUgdmFsdWUgaXMgYW4gb2JqZWN0IHRoYXQgZGVzY3JpYmVzIHRoZSB1bmlmb3JtIHR5cGUgYW5kIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSB7T2JqZWN0LjxTdHJpbmcsIFZhcnlpbmdUeXBlPn0gW29wdGlvbnMudmFyeWluZ3NdIEEgZGljdGlvbmFyeSBmb3IgZGVjbGFyaW5nIGFkZGl0aW9uYWwgR0xTTCB2YXJ5aW5ncyB1c2VkIGluIHRoZSBzaGFkZXIuIFRoZSBrZXkgaXMgdGhlIHZhcnlpbmcgbmFtZSB0aGF0IHdpbGwgYXBwZWFyIGluIHRoZSBHTFNMIGNvZGUuIFRoZSB2YWx1ZSBpcyB0aGUgZGF0YSB0eXBlIG9mIHRoZSB2YXJ5aW5nLiBGb3IgZWFjaCB2YXJ5aW5nLCB0aGUgZGVjbGFyYXRpb24gd2lsbCBiZSBhZGRlZCB0byB0aGUgdG9wIG9mIHRoZSBzaGFkZXIgYXV0b21hdGljYWxseS4gVGhlIGNhbGxlciBpcyByZXNwb25zaWJsZSBmb3IgYXNzaWduaW5nIGEgdmFsdWUgaW4gdGhlIHZlcnRleCBzaGFkZXIgYW5kIHVzaW5nIHRoZSB2YWx1ZSBpbiB0aGUgZnJhZ21lbnQgc2hhZGVyLlxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnZlcnRleFNoYWRlclRleHRdIFRoZSBjdXN0b20gdmVydGV4IHNoYWRlciBhcyBhIHN0cmluZyBvZiBHTFNMIGNvZGUuIEl0IG11c3QgaW5jbHVkZSBhIEdMU0wgZnVuY3Rpb24gY2FsbGVkIHZlcnRleE1haW4uIFNlZSB0aGUgZXhhbXBsZSBmb3IgdGhlIGV4cGVjdGVkIHNpZ25hdHVyZS4gSWYgbm90IHNwZWNpZmllZCwgdGhlIGN1c3RvbSB2ZXJ0ZXggc2hhZGVyIHN0ZXAgd2lsbCBiZSBza2lwcGVkIGluIHRoZSBjb21wdXRlZCB2ZXJ0ZXggc2hhZGVyLlxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmZyYWdtZW50U2hhZGVyVGV4dF0gVGhlIGN1c3RvbSBmcmFnbWVudCBzaGFkZXIgYXMgYSBzdHJpbmcgb2YgR0xTTCBjb2RlLiBJdCBtdXN0IGluY2x1ZGUgYSBHTFNMIGZ1bmN0aW9uIGNhbGxlZCBmcmFnbWVudE1haW4uIFNlZSB0aGUgZXhhbXBsZSBmb3IgdGhlIGV4cGVjdGVkIHNpZ25hdHVyZS4gSWYgbm90IHNwZWNpZmllZCwgdGhlIGN1c3RvbSBmcmFnbWVudCBzaGFkZXIgc3RlcCB3aWxsIGJlIHNraXBwZWQgaW4gdGhlIGNvbXB1dGVkIGZyYWdtZW50IHNoYWRlci5cbiAqXG4gKiBAYWxpYXMgQ3VzdG9tU2hhZGVyXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcHJpdmF0ZVxuICogQGV4cGVyaW1lbnRhbCBUaGlzIGZlYXR1cmUgaXMgdXNpbmcgcGFydCBvZiB0aGUgM0QgVGlsZXMgc3BlYyB0aGF0IGlzIG5vdCBmaW5hbCBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2Ugd2l0aG91dCBDZXNpdW0ncyBzdGFuZGFyZCBkZXByZWNhdGlvbiBwb2xpY3kuXG4gKlxuICogQGV4YW1wbGVcbiAqIHZhciBjdXN0b21TaGFkZXIgPSBuZXcgQ3VzdG9tU2hhZGVyKHtcbiAqICAgdW5pZm9ybXM6IHtcbiAqICAgICB1X2NvbG9ySW5kZXg6IHtcbiAqICAgICAgIHR5cGU6IENlc2l1bS5Vbmlmb3JtVHlwZS5GTE9BVCxcbiAqICAgICAgIHZhbHVlOiAxLjBcbiAqICAgICB9LFxuICogICAgIHVfbm9ybWFsTWFwOiB7XG4gKiAgICAgICB0eXBlOiBDZXNpdW0uVW5pZm9ybVR5cGUuU0FNUExFUl8yRCxcbiAqICAgICAgIHZhbHVlOiBuZXcgQ2VzaXVtLlRleHR1cmVVbmlmb3JtKHtcbiAqICAgICAgICAgdXJsOiBcImh0dHA6Ly9leGFtcGxlLmNvbS9ub3JtYWwucG5nXCJcbiAqICAgICAgIH0pXG4gKiAgICAgfVxuICogICB9LFxuICogICB2YXJ5aW5nczoge1xuICogICAgIHZfc2VsZWN0ZWRDb2xvcjogQ2VzaXVtLlZhcnlpbmdUeXBlLlZFQzNcbiAqICAgfSxcbiAqICAgdmVydGV4U2hhZGVyVGV4dDogYFxuICogICB2b2lkIHZlcnRleE1haW4oVmVydGV4SW5wdXQgdnNJbnB1dCwgaW5vdXQgdmVjMyBwb3NpdGlvbikge1xuICogICAgIHZfc2VsZWN0ZWRDb2xvciA9IG1peCh2c0lucHV0LmF0dHJpYnV0ZXMuY29sb3JfMCwgdnNJbnB1dC5hdHRyaWJ1dGVzLmNvbG9yXzEsIHVfY29sb3JJbmRleCk7XG4gKiAgICAgcG9zaXRpb24gKz0gMC4xICogdnNJbnB1dC5hdHRyaWJ1dGVzLm5vcm1hbDtcbiAqICAgfVxuICogICBgLFxuICogICBmcmFnbWVudFNoYWRlclRleHQ6IGBcbiAqICAgdm9pZCBmcmFnbWVudE1haW4oRnJhZ21lbnRJbnB1dCBmc0lucHV0LCBpbm91dCBjem1fbW9kZWxNYXRlcmlhbCBtYXRlcmlhbCkge1xuICogICAgIG1hdGVyaWFsLm5vcm1hbCA9IHRleHR1cmUyRCh1X25vcm1hbE1hcCwgZnNJbnB1dC5hdHRyaWJ1dGVzLnRleENvb3JkXzApO1xuICogICAgIG1hdGVyaWFsLmRpZmZ1c2UgPSB2X3NlbGVjdGVkQ29sb3I7XG4gKiAgIH1cbiAqICAgYFxuICogfSk7XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEN1c3RvbVNoYWRlcihvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucywgZGVmYXVsdFZhbHVlLkVNUFRZX09CSkVDVCk7XG5cbiAgLyoqXG4gICAqIEEgdmFsdWUgZGV0ZXJtaW5pbmcgaG93IHRoZSBjdXN0b20gc2hhZGVyIGludGVyYWN0cyB3aXRoIHRoZSBvdmVyYWxsXG4gICAqIGZyYWdtZW50IHNoYWRlci4gVGhpcyBpcyB1c2VkIGJ5IHtAbGluayBDdXN0b21TaGFkZXJTdGFnZX1cbiAgICpcbiAgICogQHR5cGUge0N1c3RvbVNoYWRlck1vZGV9XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5tb2RlID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMubW9kZSwgQ3VzdG9tU2hhZGVyTW9kZS5NT0RJRllfTUFURVJJQUwpO1xuICAvKipcbiAgICogVGhlIGxpZ2h0aW5nIG1vZGVsIHRvIHVzZSB3aGVuIHVzaW5nIHRoZSBjdXN0b20gc2hhZGVyLlxuICAgKiBUaGlzIGlzIHVzZWQgYnkge0BsaW5rIEN1c3RvbVNoYWRlclN0YWdlfVxuICAgKlxuICAgKiBAdHlwZSB7TGlnaHRpbmdNb2RlbH1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLmxpZ2h0aW5nTW9kZWwgPSBvcHRpb25zLmxpZ2h0aW5nTW9kZWw7XG4gIC8qKlxuICAgKiBBZGRpdGlvbmFsIHVuaWZvcm1zIGFzIGRlY2xhcmVkIGJ5IHRoZSB1c2VyLlxuICAgKlxuICAgKiBAdHlwZSB7T2JqZWN0LjxTdHJpbmcsIFVuaWZvcm1TcGVjaWZpZXI+fVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRoaXMudW5pZm9ybXMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy51bmlmb3JtcywgZGVmYXVsdFZhbHVlLkVNUFRZX09CSkVDVCk7XG4gIC8qKlxuICAgKiBBZGRpdGlvbmFsIHZhcnlpbmdzIGFzIGRlY2xhcmVkIGJ5IHRoZSB1c2VyLlxuICAgKiBUaGlzIGlzIHVzZWQgYnkge0BsaW5rIEN1c3RvbVNoYWRlclN0YWdlfVxuICAgKlxuICAgKiBAdHlwZSB7T2JqZWN0LjxTdHJpbmcsIFZhcnlpbmdUeXBlPn1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLnZhcnlpbmdzID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMudmFyeWluZ3MsIGRlZmF1bHRWYWx1ZS5FTVBUWV9PQkpFQ1QpO1xuICAvKipcbiAgICogVGhlIHVzZXItZGVmaW5lZCBHTFNMIGNvZGUgZm9yIHRoZSB2ZXJ0ZXggc2hhZGVyXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy52ZXJ0ZXhTaGFkZXJUZXh0ID0gb3B0aW9ucy52ZXJ0ZXhTaGFkZXJUZXh0O1xuICAvKipcbiAgICogVGhlIHVzZXItZGVmaW5lZCBHTFNMIGNvZGUgZm9yIHRoZSBmcmFnbWVudCBzaGFkZXJcbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLmZyYWdtZW50U2hhZGVyVGV4dCA9IG9wdGlvbnMuZnJhZ21lbnRTaGFkZXJUZXh0O1xuICAvKipcbiAgICogV2hldGhlciB0aGUgc2hhZGVyIHNob3VsZCBiZSByZW5kZXJlZCBhcyB0cmFuc2x1Y2VudFxuICAgKlxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLmlzVHJhbnNsdWNlbnQgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5pc1RyYW5zbHVjZW50LCBmYWxzZSk7XG5cbiAgLyoqXG4gICAqIHRleHR1cmUgdW5pZm9ybXMgcmVxdWlyZSBzb21lIGFzeW5jaHJvbm91cyBwcm9jZXNzaW5nLiBUaGlzIGlzIGRlbGVnYXRlZFxuICAgKiB0byBhIHRleHR1cmUgbWFuYWdlci5cbiAgICpcbiAgICogQHR5cGUge1RleHR1cmVNYW5hZ2VyfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRoaXMuX3RleHR1cmVNYW5hZ2VyID0gbmV3IFRleHR1cmVNYW5hZ2VyKCk7XG4gIC8qKlxuICAgKiBUaGUgZGVmYXVsdCB0ZXh0dXJlIChmcm9tIHRoZSB7QGxpbmsgQ29udGV4dH0pIHRvIHVzZSB3aGlsZSB0ZXh0dXJlc1xuICAgKiBhcmUgbG9hZGluZ1xuICAgKlxuICAgKiBAdHlwZSB7VGV4dHVyZX1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLl9kZWZhdWx0VGV4dHVyZSA9IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFRoZSBtYXAgb2YgdW5pZm9ybSBuYW1lcyB0byBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIHZhbHVlLiBUaGlzIG1hcFxuICAgKiBpcyBjb21iaW5lZCB3aXRoIHRoZSBvdmVyYWxsIHVuaWZvcm0gbWFwIHVzZWQgYnkgdGhlIHtAbGluayBEcmF3Q29tbWFuZH1cbiAgICpcbiAgICogQHR5cGUge09iamVjdC48U3RyaW5nLCBGdW5jdGlvbj59XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy51bmlmb3JtTWFwID0gYnVpbGRVbmlmb3JtTWFwKHRoaXMpO1xuXG4gIC8qKlxuICAgKiBBIGNvbGxlY3Rpb24gb2YgdmFyaWFibGVzIHVzZWQgaW4gPGNvZGU+dmVydGV4U2hhZGVyVGV4dDwvY29kZT4uIFRoaXNcbiAgICogaXMgdXNlZCBvbmx5IGZvciBvcHRpbWl6YXRpb25zIGluIHtAbGluayBDdXN0b21TaGFkZXJTdGFnZX0uXG4gICAqIEB0eXBlIHtWZXJ0ZXhWYXJpYWJsZVNldHN9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLnVzZWRWYXJpYWJsZXNWZXJ0ZXggPSB7XG4gICAgYXR0cmlidXRlU2V0OiB7fSxcbiAgfTtcbiAgLyoqXG4gICAqIEEgY29sbGVjdGlvbiBvZiB2YXJpYWJsZXMgdXNlZCBpbiA8Y29kZT5mcmFnbWVudFNoYWRlclRleHQ8L2NvZGU+LiBUaGlzXG4gICAqIGlzIHVzZWQgb25seSBmb3Igb3B0aW1pemF0aW9ucyBpbiB7QGxpbmsgQ3VzdG9tU2hhZGVyU3RhZ2V9LlxuICAgKiBAdHlwZSB7RnJhZ21lbnRWYXJpYWJsZVNldHN9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLnVzZWRWYXJpYWJsZXNGcmFnbWVudCA9IHtcbiAgICBwb3NpdGlvblNldDoge30sXG4gICAgYXR0cmlidXRlU2V0OiB7fSxcbiAgICBtYXRlcmlhbFNldDoge30sXG4gIH07XG5cbiAgZmluZFVzZWRWYXJpYWJsZXModGhpcyk7XG59XG5cbmZ1bmN0aW9uIGJ1aWxkVW5pZm9ybU1hcChjdXN0b21TaGFkZXIpIHtcbiAgdmFyIHVuaWZvcm1zID0gY3VzdG9tU2hhZGVyLnVuaWZvcm1zO1xuICB2YXIgdW5pZm9ybU1hcCA9IHt9O1xuICBmb3IgKHZhciB1bmlmb3JtTmFtZSBpbiB1bmlmb3Jtcykge1xuICAgIGlmICh1bmlmb3Jtcy5oYXNPd25Qcm9wZXJ0eSh1bmlmb3JtTmFtZSkpIHtcbiAgICAgIHZhciB1bmlmb3JtID0gdW5pZm9ybXNbdW5pZm9ybU5hbWVdO1xuICAgICAgdmFyIHR5cGUgPSB1bmlmb3JtLnR5cGU7XG4gICAgICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICAgICAgaWYgKHR5cGUgPT09IFVuaWZvcm1UeXBlLlNBTVBMRVJfQ1VCRSkge1xuICAgICAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICAgICAgXCJDdXN0b21TaGFkZXIgZG9lcyBub3Qgc3VwcG9ydCBzYW1wbGVyQ3ViZSB1bmlmb3Jtc1wiXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICAgICAgaWYgKHR5cGUgPT09IFVuaWZvcm1UeXBlLlNBTVBMRVJfMkQpIHtcbiAgICAgICAgY3VzdG9tU2hhZGVyLl90ZXh0dXJlTWFuYWdlci5sb2FkVGV4dHVyZTJEKHVuaWZvcm1OYW1lLCB1bmlmb3JtLnZhbHVlKTtcbiAgICAgICAgdW5pZm9ybU1hcFt1bmlmb3JtTmFtZV0gPSBjcmVhdGVVbmlmb3JtVGV4dHVyZTJERnVuY3Rpb24oXG4gICAgICAgICAgY3VzdG9tU2hhZGVyLFxuICAgICAgICAgIHVuaWZvcm1OYW1lXG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1bmlmb3JtTWFwW3VuaWZvcm1OYW1lXSA9IGNyZWF0ZVVuaWZvcm1GdW5jdGlvbihcbiAgICAgICAgICBjdXN0b21TaGFkZXIsXG4gICAgICAgICAgdW5pZm9ybU5hbWVcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHVuaWZvcm1NYXA7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVuaWZvcm1UZXh0dXJlMkRGdW5jdGlvbihjdXN0b21TaGFkZXIsIHVuaWZvcm1OYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRWYWx1ZShcbiAgICAgIGN1c3RvbVNoYWRlci5fdGV4dHVyZU1hbmFnZXIuZ2V0VGV4dHVyZSh1bmlmb3JtTmFtZSksXG4gICAgICBjdXN0b21TaGFkZXIuX2RlZmF1bHRUZXh0dXJlXG4gICAgKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVW5pZm9ybUZ1bmN0aW9uKGN1c3RvbVNoYWRlciwgdW5pZm9ybU5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY3VzdG9tU2hhZGVyLnVuaWZvcm1zW3VuaWZvcm1OYW1lXS52YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0VmFyaWFibGVzKHNoYWRlclRleHQsIHJlZ2V4LCBvdXRwdXRTZXQpIHtcbiAgdmFyIG1hdGNoO1xuICB3aGlsZSAoKG1hdGNoID0gcmVnZXguZXhlYyhzaGFkZXJUZXh0KSkgIT09IG51bGwpIHtcbiAgICB2YXIgdmFyaWFibGVOYW1lID0gbWF0Y2hbMV07XG5cbiAgICAvLyBVc2luZyBhIGRpY3Rpb25hcnkgbGlrZSBhIHNldC4gVGhlIHZhbHVlIGRvZXNuJ3RcbiAgICAvLyBtYXR0ZXIsIGFzIHRoaXMgd2lsbCBvbmx5IGJlIHVzZWQgZm9yIHF1ZXJpZXMgc3VjaCBhc1xuICAgIC8vIGlmIChzZXQuaGFzT3duUHJvcGVydHkodmFyaWFibGVOYW1lKSkgeyAuLi4gfVxuICAgIG91dHB1dFNldFt2YXJpYWJsZU5hbWVdID0gdHJ1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBmaW5kVXNlZFZhcmlhYmxlcyhjdXN0b21TaGFkZXIpIHtcbiAgdmFyIGF0dHJpYnV0ZVJlZ2V4ID0gL1t2Zl1zSW5wdXRcXC5hdHRyaWJ1dGVzXFwuKFxcdyspL2c7XG4gIHZhciBhdHRyaWJ1dGVTZXQ7XG5cbiAgdmFyIHZlcnRleFNoYWRlclRleHQgPSBjdXN0b21TaGFkZXIudmVydGV4U2hhZGVyVGV4dDtcbiAgaWYgKGRlZmluZWQodmVydGV4U2hhZGVyVGV4dCkpIHtcbiAgICBhdHRyaWJ1dGVTZXQgPSBjdXN0b21TaGFkZXIudXNlZFZhcmlhYmxlc1ZlcnRleC5hdHRyaWJ1dGVTZXQ7XG4gICAgZ2V0VmFyaWFibGVzKHZlcnRleFNoYWRlclRleHQsIGF0dHJpYnV0ZVJlZ2V4LCBhdHRyaWJ1dGVTZXQpO1xuICB9XG5cbiAgdmFyIGZyYWdtZW50U2hhZGVyVGV4dCA9IGN1c3RvbVNoYWRlci5mcmFnbWVudFNoYWRlclRleHQ7XG4gIGlmIChkZWZpbmVkKGZyYWdtZW50U2hhZGVyVGV4dCkpIHtcbiAgICBhdHRyaWJ1dGVTZXQgPSBjdXN0b21TaGFkZXIudXNlZFZhcmlhYmxlc0ZyYWdtZW50LmF0dHJpYnV0ZVNldDtcbiAgICBnZXRWYXJpYWJsZXMoZnJhZ21lbnRTaGFkZXJUZXh0LCBhdHRyaWJ1dGVSZWdleCwgYXR0cmlidXRlU2V0KTtcblxuICAgIHZhciBwb3NpdGlvblJlZ2V4ID0gL2ZzSW5wdXRcXC4ocG9zaXRpb25cXHcrKS9nO1xuICAgIHZhciBwb3NpdGlvblNldCA9IGN1c3RvbVNoYWRlci51c2VkVmFyaWFibGVzRnJhZ21lbnQucG9zaXRpb25TZXQ7XG4gICAgZ2V0VmFyaWFibGVzKGZyYWdtZW50U2hhZGVyVGV4dCwgcG9zaXRpb25SZWdleCwgcG9zaXRpb25TZXQpO1xuXG4gICAgdmFyIG1hdGVyaWFsUmVnZXggPSAvbWF0ZXJpYWxcXC4oXFx3KykvZztcbiAgICB2YXIgbWF0ZXJpYWxTZXQgPSBjdXN0b21TaGFkZXIudXNlZFZhcmlhYmxlc0ZyYWdtZW50Lm1hdGVyaWFsU2V0O1xuICAgIGdldFZhcmlhYmxlcyhmcmFnbWVudFNoYWRlclRleHQsIG1hdGVyaWFsUmVnZXgsIG1hdGVyaWFsU2V0KTtcbiAgfVxufVxuXG4vKipcbiAqIFVwZGF0ZSB0aGUgdmFsdWUgb2YgYSB1bmlmb3JtIGRlY2xhcmVkIGluIHRoZSBzaGFkZXJcbiAqIEBwYXJhbSB7U3RyaW5nfSB1bmlmb3JtTmFtZSBUaGUgR0xTTCBuYW1lIG9mIHRoZSB1bmlmb3JtLiBUaGlzIG11c3QgbWF0Y2ggb25lIG9mIHRoZSB1bmlmb3JtcyBkZWNsYXJlZCBpbiB0aGUgY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7Qm9vbGVhbnxOdW1iZXJ8Q2FydGVzaWFuMnxDYXJ0ZXNpYW4zfENhcnRlc2lhbjR8TWF0cml4MnxNYXRyaXgzfE1hdHJpeDR8U3RyaW5nfFJlc291cmNlfSB2YWx1ZSBUaGUgbmV3IHZhbHVlIG9mIHRoZSB1bmlmb3JtLlxuICovXG5DdXN0b21TaGFkZXIucHJvdG90eXBlLnNldFVuaWZvcm0gPSBmdW5jdGlvbiAodW5pZm9ybU5hbWUsIHZhbHVlKSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5zdHJpbmcoXCJ1bmlmb3JtTmFtZVwiLCB1bmlmb3JtTmFtZSk7XG4gIENoZWNrLmRlZmluZWQoXCJ2YWx1ZVwiLCB2YWx1ZSk7XG4gIGlmICghZGVmaW5lZCh0aGlzLnVuaWZvcm1zW3VuaWZvcm1OYW1lXSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIlVuaWZvcm0gXCIgK1xuICAgICAgICB1bmlmb3JtTmFtZSArXG4gICAgICAgIFwiIG11c3QgYmUgZGVjbGFyZWQgaW4gdGhlIEN1c3RvbVNoYWRlciBjb25zdHJ1Y3Rvci5cIlxuICAgICk7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG4gIHZhciB1bmlmb3JtID0gdGhpcy51bmlmb3Jtc1t1bmlmb3JtTmFtZV07XG4gIGlmICh1bmlmb3JtLnR5cGUgPT09IFVuaWZvcm1UeXBlLlNBTVBMRVJfMkQpIHtcbiAgICAvLyBUZXh0dXJlcyBhcmUgbG9hZGVkIGFzeW5jaHJvbm91c2x5XG4gICAgdGhpcy5fdGV4dHVyZU1hbmFnZXIubG9hZFRleHR1cmUyRCh1bmlmb3JtTmFtZSwgdmFsdWUpO1xuICB9IGVsc2UgaWYgKGRlZmluZWQodmFsdWUuY2xvbmUpKSB7XG4gICAgLy8gY2xvbmUgQ2FydGVzaWFuIGFuZCBNYXRyaXggdHlwZXMuXG4gICAgdW5pZm9ybS52YWx1ZSA9IHZhbHVlLmNsb25lKHVuaWZvcm0udmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIHVuaWZvcm0udmFsdWUgPSB2YWx1ZTtcbiAgfVxufTtcblxuQ3VzdG9tU2hhZGVyLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoZnJhbWVTdGF0ZSkge1xuICB0aGlzLl9kZWZhdWx0VGV4dHVyZSA9IGZyYW1lU3RhdGUuY29udGV4dC5kZWZhdWx0VGV4dHVyZTtcbiAgdGhpcy5fdGV4dHVyZU1hbmFnZXIudXBkYXRlKGZyYW1lU3RhdGUpO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZDsgb3RoZXJ3aXNlLCBmYWxzZS5cbiAqIDxiciAvPjxiciAvPlxuICogSWYgdGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZCwgaXQgc2hvdWxkIG5vdCBiZSB1c2VkOyBjYWxsaW5nIGFueSBmdW5jdGlvbiBvdGhlciB0aGFuXG4gKiA8Y29kZT5pc0Rlc3Ryb3llZDwvY29kZT4gd2lsbCByZXN1bHQgaW4gYSB7QGxpbmsgRGV2ZWxvcGVyRXJyb3J9IGV4Y2VwdGlvbi5cbiAqXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZiB0aGlzIG9iamVjdCB3YXMgZGVzdHJveWVkOyBvdGhlcndpc2UsIGZhbHNlLlxuICpcbiAqIEBzZWUgQ3VzdG9tU2hhZGVyI2Rlc3Ryb3lcbiAqIEBwcml2YXRlXG4gKi9cbkN1c3RvbVNoYWRlci5wcm90b3R5cGUuaXNEZXN0cm95ZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8qKlxuICogRGVzdHJveXMgdGhlIFdlYkdMIHJlc291cmNlcyBoZWxkIGJ5IHRoaXMgb2JqZWN0LiAgRGVzdHJveWluZyBhbiBvYmplY3QgYWxsb3dzIGZvciBkZXRlcm1pbmlzdGljXG4gKiByZWxlYXNlIG9mIFdlYkdMIHJlc291cmNlcywgaW5zdGVhZCBvZiByZWx5aW5nIG9uIHRoZSBnYXJiYWdlIGNvbGxlY3RvciB0byBkZXN0cm95IHRoaXMgb2JqZWN0LlxuICogPGJyIC8+PGJyIC8+XG4gKiBPbmNlIGFuIG9iamVjdCBpcyBkZXN0cm95ZWQsIGl0IHNob3VsZCBub3QgYmUgdXNlZDsgY2FsbGluZyBhbnkgZnVuY3Rpb24gb3RoZXIgdGhhblxuICogPGNvZGU+aXNEZXN0cm95ZWQ8L2NvZGU+IHdpbGwgcmVzdWx0IGluIGEge0BsaW5rIERldmVsb3BlckVycm9yfSBleGNlcHRpb24uICBUaGVyZWZvcmUsXG4gKiBhc3NpZ24gdGhlIHJldHVybiB2YWx1ZSAoPGNvZGU+dW5kZWZpbmVkPC9jb2RlPikgdG8gdGhlIG9iamVjdCBhcyBkb25lIGluIHRoZSBleGFtcGxlLlxuICpcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBUaGlzIG9iamVjdCB3YXMgZGVzdHJveWVkLCBpLmUuLCBkZXN0cm95KCkgd2FzIGNhbGxlZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogY3VzdG9tU2hhZGVyID0gY3VzdG9tU2hhZGVyICYmIGN1c3RvbVNoYWRlci5kZXN0cm95KCk7XG4gKlxuICogQHNlZSBDdXN0b21TaGFkZXIjaXNEZXN0cm95ZWRcbiAqIEBwcml2YXRlXG4gKi9cbkN1c3RvbVNoYWRlci5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fdGV4dHVyZU1hbmFnZXIgPSB0aGlzLl90ZXh0dXJlTWFuYWdlciAmJiB0aGlzLl90ZXh0dXJlTWFuYWdlci5kZXN0cm95KCk7XG4gIGRlc3Ryb3lPYmplY3QodGhpcyk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///44197\n')},7377:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * An enum describing how the {@link CustomShader} will be added to the\n * fragment shader. This determines how the shader interacts with the material.\n *\n * @enum {String}\n *\n * @private\n */\nvar CustomShaderMode = {\n  /**\n   * The custom shader will be used to modify the results of the material stage\n   * before lighting is applied.\n   *\n   * @type {String}\n   * @constant\n   */\n  MODIFY_MATERIAL: "MODIFY_MATERIAL",\n  /**\n   * The custom shader will be used instead of the material stage. This is a hint\n   * to optimize out the material processing code.\n   *\n   * @type {String}\n   * @constant\n   */\n  REPLACE_MATERIAL: "REPLACE_MATERIAL",\n};\n\n/**\n * Convert the shader mode to an uppercase identifier for use in GLSL define\n * directives. For example:  <code>#define CUSTOM_SHADER_MODIFY_MATERIAL</code>\n * @param {CustomShaderMode} customShaderMode The shader mode\n * @return {String} The name of the GLSL macro to use\n */\nCustomShaderMode.getDefineName = function (customShaderMode) {\n  return "CUSTOM_SHADER_" + customShaderMode;\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(CustomShaderMode));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzM3Ny5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLCtCQUErQixvQkFBb0I7QUFDbkQ7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsa0JBQWtCO0FBQzdCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5REFBZSwrQkFBK0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9Nb2RlbEV4cGVyaW1lbnRhbC9DdXN0b21TaGFkZXJNb2RlLmpzPzJhMTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBbiBlbnVtIGRlc2NyaWJpbmcgaG93IHRoZSB7QGxpbmsgQ3VzdG9tU2hhZGVyfSB3aWxsIGJlIGFkZGVkIHRvIHRoZVxuICogZnJhZ21lbnQgc2hhZGVyLiBUaGlzIGRldGVybWluZXMgaG93IHRoZSBzaGFkZXIgaW50ZXJhY3RzIHdpdGggdGhlIG1hdGVyaWFsLlxuICpcbiAqIEBlbnVtIHtTdHJpbmd9XG4gKlxuICogQHByaXZhdGVcbiAqL1xudmFyIEN1c3RvbVNoYWRlck1vZGUgPSB7XG4gIC8qKlxuICAgKiBUaGUgY3VzdG9tIHNoYWRlciB3aWxsIGJlIHVzZWQgdG8gbW9kaWZ5IHRoZSByZXN1bHRzIG9mIHRoZSBtYXRlcmlhbCBzdGFnZVxuICAgKiBiZWZvcmUgbGlnaHRpbmcgaXMgYXBwbGllZC5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBNT0RJRllfTUFURVJJQUw6IFwiTU9ESUZZX01BVEVSSUFMXCIsXG4gIC8qKlxuICAgKiBUaGUgY3VzdG9tIHNoYWRlciB3aWxsIGJlIHVzZWQgaW5zdGVhZCBvZiB0aGUgbWF0ZXJpYWwgc3RhZ2UuIFRoaXMgaXMgYSBoaW50XG4gICAqIHRvIG9wdGltaXplIG91dCB0aGUgbWF0ZXJpYWwgcHJvY2Vzc2luZyBjb2RlLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFJFUExBQ0VfTUFURVJJQUw6IFwiUkVQTEFDRV9NQVRFUklBTFwiLFxufTtcblxuLyoqXG4gKiBDb252ZXJ0IHRoZSBzaGFkZXIgbW9kZSB0byBhbiB1cHBlcmNhc2UgaWRlbnRpZmllciBmb3IgdXNlIGluIEdMU0wgZGVmaW5lXG4gKiBkaXJlY3RpdmVzLiBGb3IgZXhhbXBsZTogIDxjb2RlPiNkZWZpbmUgQ1VTVE9NX1NIQURFUl9NT0RJRllfTUFURVJJQUw8L2NvZGU+XG4gKiBAcGFyYW0ge0N1c3RvbVNoYWRlck1vZGV9IGN1c3RvbVNoYWRlck1vZGUgVGhlIHNoYWRlciBtb2RlXG4gKiBAcmV0dXJuIHtTdHJpbmd9IFRoZSBuYW1lIG9mIHRoZSBHTFNMIG1hY3JvIHRvIHVzZVxuICovXG5DdXN0b21TaGFkZXJNb2RlLmdldERlZmluZU5hbWUgPSBmdW5jdGlvbiAoY3VzdG9tU2hhZGVyTW9kZSkge1xuICByZXR1cm4gXCJDVVNUT01fU0hBREVSX1wiICsgY3VzdG9tU2hhZGVyTW9kZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoQ3VzdG9tU2hhZGVyTW9kZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7377\n')},85262:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8182);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _Core_oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27671);\n/* harmony import */ var _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87826);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8379);\n/* harmony import */ var _Shaders_ModelExperimental_CustomShaderStageVS_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(87932);\n/* harmony import */ var _Shaders_ModelExperimental_CustomShaderStageFS_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(94077);\n/* harmony import */ var _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(26998);\n/* harmony import */ var _AttributeType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(77072);\n/* harmony import */ var _AlphaMode_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82075);\n/* harmony import */ var _CustomShaderMode_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(7377);\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The custom shader pipeline stage takes GLSL callbacks from the\n * {@link CustomShader} and inserts them into the overall shader code for the\n * {@link ModelExperimental}. The input to the callback is a struct with many\n * properties that depend on the attributes of the primitive. This shader code\n * is automatically generated by this stage.\n *\n * @namespace CustomShaderStage\n *\n * @private\n */\nvar CustomShaderStage = {};\nCustomShaderStage.name = "CustomShaderStage"; // Helps with debugging\n\n/**\n * Process a primitive. This modifies the following parts of the render\n * resources:\n * <ul>\n *   <li>Modifies the shader to include the custom shader code to the vertex and fragment shaders</li>\n *   <li>Modifies the shader to include automatically-generated structs that serve as input to the custom shader callbacks </li>\n *   <li>Modifies the shader to include any additional user-defined uniforms</li>\n *   <li>Modifies the shader to include any additional user-defined varyings</li>\n *   <li>Adds any user-defined uniforms to the uniform map</li>\n *   <li>If the user specified a lighting model, the settings are overridden in the render resources</li>\n * </ul>\n * <p>\n * This pipeline stage is designed to fail gracefully where possible. If the\n * primitive does not have the right attributes to satisfy the shader code,\n * defaults will be inferred (when reasonable to do so). If not, the custom\n * shader will be disabled.\n * <p>\n *\n * @param {PrimitiveRenderResources} renderResources The render resources for the primitive\n * @param {ModelComponents.Primitive} primitive The primitive to be rendered\n * @param {FrameState} frameState The frame state.\n * @private\n */\nCustomShaderStage.process = function (renderResources, primitive, frameState) {\n  var shaderBuilder = renderResources.shaderBuilder;\n  var customShader = renderResources.model.customShader;\n\n  // Generate lines of code for the shader, but don\'t add them to the shader\n  // yet.\n  var generatedCode = generateShaderLines(customShader, primitive);\n\n  // In some corner cases, the primitive may not be compatible with the\n  // shader. In this case, skip the custom shader.\n  if (!generatedCode.customShaderEnabled) {\n    return;\n  }\n\n  // generateShaderLines() will always return an array of shader code, even\n  // if they are empty.\n  shaderBuilder.addVertexLines(generatedCode.vertexLines);\n  shaderBuilder.addFragmentLines(generatedCode.fragmentLines);\n\n  // Enable the vertex shader stage. The fragment shader is handled differently\n  if (generatedCode.vertexLinesEnabled) {\n    shaderBuilder.addDefine(\n      "USE_CUSTOM_SHADER",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].VERTEX */ .Z.VERTEX\n    );\n  }\n\n  // the input to the fragment shader may include a low-precision ECEF position\n  if (generatedCode.shouldComputePositionWC) {\n    shaderBuilder.addDefine(\n      "COMPUTE_POSITION_WC",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].VERTEX */ .Z.VERTEX\n    );\n    shaderBuilder.addVarying("vec3", "v_positionWC");\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(customShader.vertexShaderText)) {\n    shaderBuilder.addDefine(\n      "HAS_CUSTOM_VERTEX_SHADER",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].VERTEX */ .Z.VERTEX\n    );\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(customShader.fragmentShaderText)) {\n    shaderBuilder.addDefine(\n      "HAS_CUSTOM_FRAGMENT_SHADER",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n\n    // add defines like CUSTOM_SHADER_MODIFY_MATERIAL\n    var shaderModeDefine = _CustomShaderMode_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].getDefineName */ .Z.getDefineName(customShader.mode);\n    shaderBuilder.addDefine(\n      shaderModeDefine,\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n\n  var uniforms = customShader.uniforms;\n  for (var uniformName in uniforms) {\n    if (uniforms.hasOwnProperty(uniformName)) {\n      var uniform = uniforms[uniformName];\n      shaderBuilder.addUniform(uniform.type, uniformName);\n    }\n  }\n\n  var varyings = customShader.varyings;\n  for (var varyingName in varyings) {\n    if (varyings.hasOwnProperty(varyingName)) {\n      var varyingType = varyings[varyingName];\n      shaderBuilder.addVarying(varyingType, varyingName);\n    }\n  }\n\n  // if present, the lighting model overrides the material\'s lighting model.\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(customShader.lightingModel)) {\n    renderResources.lightingOptions.lightingModel = customShader.lightingModel;\n  }\n\n  var alphaOptions = renderResources.alphaOptions;\n  if (customShader.isTranslucent) {\n    alphaOptions.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT;\n    alphaOptions.alphaMode = _AlphaMode_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].BLEND */ .Z.BLEND;\n  } else {\n    // Use the default pass (either OPAQUE or 3D_TILES), regardless of whether\n    // the material pipeline stage used translucent. The default is configured\n    // in AlphaPipelineStage\n    alphaOptions.pass = undefined;\n    alphaOptions.alphaMode = _AlphaMode_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].OPAQUE */ .Z.OPAQUE;\n  }\n\n  renderResources.uniformMap = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    renderResources.uniformMap,\n    customShader.uniformMap\n  );\n};\n\nfunction getAttributeNames(attributes) {\n  var names = {};\n  for (var i = 0; i < attributes.length; i++) {\n    var attribute = attributes[i];\n    var semantic = attribute.semantic;\n    var setIndex = attribute.setIndex;\n\n    var variableName;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(semantic)) {\n      variableName = _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].getVariableName */ .Z.getVariableName(\n        semantic,\n        setIndex\n      );\n    } else {\n      // Handle user defined vertex attributes. They must begin with an underscore\n      // For example, "_TEMPERATURE" will be converted to "temperature".\n      variableName = attribute.name.substring(1).toLowerCase();\n    }\n\n    names[variableName] = attribute;\n  }\n  return names;\n}\n\nfunction generateStructField(glslType, fieldName) {\n  return "    " + glslType + " " + fieldName + ";";\n}\n\nfunction generateAttributeField(name, attribute) {\n  var attributeType = attribute.type;\n  var glslType = _AttributeType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getGlslType */ .Z.getGlslType(attributeType);\n\n  // Fields for the Attribute struct. for example:\n  // "    vec3 position;"\n  return generateStructField(glslType, name);\n}\n\n// GLSL types of standard attribute types when uniquely defined\nvar attributeTypeLUT = {\n  position: "vec3",\n  normal: "vec3",\n  tangent: "vec4",\n  texCoord: "vec2",\n  joints: "ivec4",\n  weights: "vec4",\n};\n\n// Corresponding attribute values\nvar attributeDefaultValueLUT = {\n  position: "vec3(0.0)",\n  normal: "vec3(0.0, 0.0, 1.0)",\n  tangent: "vec4(1.0, 0.0, 0.0, 1.0)",\n  texCoord: "vec2(0.0)",\n  joints: "ivec4(0)",\n  weights: "vec4(0.0)",\n};\n\nfunction inferAttributeDefaults(attributeName) {\n  // remove trailing set indices. E.g. "texCoord_0" -> "texCoord"\n  var trimmed = attributeName.replace(/_[0-9]+$/, "");\n  var glslType = attributeTypeLUT[trimmed];\n  var value = attributeDefaultValueLUT[trimmed];\n\n  // Return undefined for other cases that cannot be easily inferred:\n  // - COLOR_x is either a vec3 or vec4\n  // - _CUSTOM_ATTRIBUTE has an unknown type.\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(glslType)) {\n    return undefined;\n  }\n\n  return {\n    attributeField: generateStructField(glslType, attributeName),\n    value: value,\n  };\n}\n\nfunction generateVertexShaderLines(customShader, namedAttributes) {\n  var categories = partitionAttributes(\n    namedAttributes,\n    customShader.usedVariablesVertex.attributeSet\n  );\n  var addToShader = categories.addToShader;\n  var needsDefault = categories.missingAttributes;\n\n  var variableName;\n  var vertexInitialization;\n  var attributeFields = [];\n  var initializationLines = [];\n  for (variableName in addToShader) {\n    if (addToShader.hasOwnProperty(variableName)) {\n      var attribute = addToShader[variableName];\n      var attributeField = generateAttributeField(variableName, attribute);\n      attributeFields.push(attributeField);\n\n      // Initializing attribute structs are just a matter of copying the\n      // attribute or varying: E.g.:\n      // "    vsInput.attributes.position = a_position;"\n      vertexInitialization =\n        "    vsInput.attributes." + variableName + " = a_" + variableName + ";";\n      initializationLines.push(vertexInitialization);\n    }\n  }\n\n  for (var i = 0; i < needsDefault.length; i++) {\n    variableName = needsDefault[i];\n    var attributeDefaults = inferAttributeDefaults(variableName);\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(attributeDefaults)) {\n      // This primitive isn\'t compatible with the shader. To avoid compiling\n      // a shader with a syntax error, the custom shader will be disabled.\n      // this is indicated by returning an empty list of shader lines.\n      CustomShaderStage._oneTimeWarning(\n        "CustomShaderStage.incompatiblePrimitiveVS",\n        "Primitive is missing attribute " +\n          variableName +\n          ", disabling custom vertex shader"\n      );\n      return [];\n    }\n\n    attributeFields.push(attributeDefaults.attributeField);\n    vertexInitialization =\n      "    vsInput.attributes." +\n      variableName +\n      " = " +\n      attributeDefaults.value +\n      ";";\n    initializationLines.push(vertexInitialization);\n  }\n\n  // If there are no attributes, add a placeholder float field so the struct\n  // is not empty\n  if (attributeFields.length === 0) {\n    attributeFields.push("    float _padding;");\n  }\n\n  return [].concat(\n    "struct Attributes",\n    "{",\n    attributeFields,\n    "};",\n    "",\n    "struct VertexInput",\n    "{",\n    "    Attributes attributes;",\n    "};",\n    "",\n    "void initializeInputStruct(out VertexInput vsInput)",\n    "{",\n    initializationLines,\n    "}"\n  );\n}\n\nfunction generatePositionBuiltins(customShader) {\n  var fragmentInputFields = [];\n  var initializationLines = [];\n  var usedVariables = customShader.usedVariablesFragment.positionSet;\n\n  // Model space position is the same position as in the glTF accessor.\n  if (usedVariables.hasOwnProperty("positionMC")) {\n    fragmentInputFields.push("    vec3 positionMC;");\n    initializationLines.push("    fsInput.positionMC = v_position;");\n  }\n\n  // World coordinates in ECEF coordinates. Note that this is\n  // low precision (32-bit floats) on the GPU.\n  if (usedVariables.hasOwnProperty("positionWC")) {\n    fragmentInputFields.push("    vec3 positionWC;");\n    initializationLines.push("    fsInput.positionWC = v_positionWC;");\n  }\n\n  // position in eye coordinates\n  if (usedVariables.hasOwnProperty("positionEC")) {\n    fragmentInputFields.push("    vec3 positionEC;");\n    initializationLines.push("    fsInput.positionEC = v_positionEC;");\n  }\n\n  return {\n    fragmentInputFields: fragmentInputFields,\n    initializationLines: initializationLines,\n  };\n}\n\nfunction generateFragmentShaderLines(customShader, namedAttributes) {\n  var categories = partitionAttributes(\n    namedAttributes,\n    customShader.usedVariablesFragment.attributeSet\n  );\n  var addToShader = categories.addToShader;\n  var needsDefault = categories.missingAttributes;\n\n  var variableName;\n  var fragmentInitialization;\n  var attributeFields = [];\n  var initializationLines = [];\n  for (variableName in addToShader) {\n    if (addToShader.hasOwnProperty(variableName)) {\n      var attribute = addToShader[variableName];\n      var attributeField = generateAttributeField(variableName, attribute);\n      attributeFields.push(attributeField);\n\n      // Initializing attribute structs are just a matter of copying the\n      // attribute or varying: E.g.:\n      // "    fsInput.attributes.position = v_position;"\n      fragmentInitialization =\n        "    " +\n        "fsInput.attributes." +\n        variableName +\n        " = v_" +\n        variableName +\n        ";";\n      initializationLines.push(fragmentInitialization);\n    }\n  }\n\n  for (var i = 0; i < needsDefault.length; i++) {\n    variableName = needsDefault[i];\n    var attributeDefaults = inferAttributeDefaults(variableName);\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(attributeDefaults)) {\n      CustomShaderStage._oneTimeWarning(\n        "CustomShaderStage.incompatiblePrimitiveFS",\n        "Primitive is missing attribute " +\n          variableName +\n          ", disabling custom fragment shader."\n      );\n\n      // This primitive isn\'t compatible with the shader. To avoid compiling\n      // a shader with a syntax error, the custom shader will be disabled.\n      // this is indicated by returning an empty list of shader lines.\n      return [];\n    }\n\n    attributeFields.push(attributeDefaults.attributeField);\n    fragmentInitialization =\n      "    fsInput.attributes." +\n      variableName +\n      " = " +\n      attributeDefaults.value +\n      ";";\n    initializationLines.push(fragmentInitialization);\n  }\n\n  // Built-ins for positions in various coordinate systems.\n  var positionBuiltins = generatePositionBuiltins(customShader);\n\n  // If there are no attributes, add a placeholder float field so the struct\n  // is not empty\n  if (attributeFields.length === 0) {\n    attributeFields.push("    float _padding;");\n  }\n\n  return [].concat(\n    "struct Attributes",\n    "{",\n    attributeFields,\n    "};",\n    "",\n    "struct FragmentInput",\n    "{",\n    "    Attributes attributes;",\n    positionBuiltins.fragmentInputFields,\n    "};",\n    "",\n    "void initializeInputStruct(out FragmentInput fsInput)",\n    "{",\n    positionBuiltins.initializationLines,\n    initializationLines,\n    "}"\n  );\n}\n\nfunction partitionAttributes(primitiveAttributes, shaderAttributeSet) {\n  // shaderAttributes = set of all attributes used in the shader\n  // primitiveAttributes = set of all the primitive\'s attributes\n  // partition into three categories:\n  // - addToShader = shaderAttributes intersect primitiveAttributes\n  // - missingAttributes = shaderAttributes - primitiveAttributes\n  // - unneededAttributes = primitive-attributes - shaderAttributes\n  //\n  // addToShader are attributes that should be added to the shader.\n  // missingAttributes are attributes for which we need to provide a default value\n  // unneededAttributes are other attributes that can be skipped.\n\n  var attributeName;\n  var addToShader = {};\n  for (attributeName in primitiveAttributes) {\n    if (primitiveAttributes.hasOwnProperty(attributeName)) {\n      var attribute = primitiveAttributes[attributeName];\n\n      if (shaderAttributeSet.hasOwnProperty(attributeName)) {\n        addToShader[attributeName] = attribute;\n      }\n    }\n  }\n\n  var missingAttributes = [];\n  for (attributeName in shaderAttributeSet) {\n    if (!primitiveAttributes.hasOwnProperty(attributeName)) {\n      missingAttributes.push(attributeName);\n    }\n  }\n\n  return {\n    addToShader: addToShader,\n    missingAttributes: missingAttributes,\n  };\n}\n\nfunction generateShaderLines(customShader, primitive) {\n  var vertexLines = [];\n  var fragmentLines = [];\n\n  // Attempt to generate vertex and fragment shader lines before adding any\n  // code to the shader.\n  var namedAttributes = getAttributeNames(primitive.attributes);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(customShader.vertexShaderText)) {\n    // this can fail if the primitive\'s attributes cannot satisfy those named\n    // in the shader. If so, vertexLines will be set to [] to\n    vertexLines = generateVertexShaderLines(customShader, namedAttributes);\n  }\n  var vertexLinesEnabled = vertexLines.length > 0;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(customShader.fragmentShaderText)) {\n    // Similarly, this can fail\n    fragmentLines = generateFragmentShaderLines(customShader, namedAttributes);\n  }\n  var fragmentLinesEnabled = fragmentLines.length > 0;\n\n  // positionWC must be computed in the vertex shader\n  // for use in the fragmentShader. However, this can be skipped if:\n  // - positionWC isn\'t used in the fragment shader\n  // - or the fragment shader is disabled\n  var shouldComputePositionWC =\n    "positionWC" in customShader.usedVariablesFragment.positionSet &&\n    fragmentLinesEnabled;\n\n  if (vertexLinesEnabled) {\n    vertexLines.push("#line 0", customShader.vertexShaderText);\n  }\n\n  if (vertexLinesEnabled || shouldComputePositionWC) {\n    vertexLines.push(_Shaders_ModelExperimental_CustomShaderStageVS_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z);\n    vertexLinesEnabled = true;\n  }\n\n  if (fragmentLinesEnabled) {\n    fragmentLines.push(\n      "#line 0",\n      customShader.fragmentShaderText,\n      _Shaders_ModelExperimental_CustomShaderStageFS_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z\n    );\n  }\n\n  // Return any generated shader code along with some flags to indicate which\n  // defines should be added.\n  return {\n    vertexLines: vertexLines,\n    fragmentLines: fragmentLines,\n    vertexLinesEnabled: vertexLinesEnabled,\n    fragmentLinesEnabled: fragmentLinesEnabled,\n    customShaderEnabled: vertexLinesEnabled || fragmentLinesEnabled,\n    shouldComputePositionWC: shouldComputePositionWC,\n  };\n}\n\n// exposed for testing.\nCustomShaderStage._oneTimeWarning = _Core_oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z;\n\n/* harmony default export */ __webpack_exports__["Z"] = (CustomShaderStage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///85262\n')},97943:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97264);\n/* harmony import */ var _AttributeType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77072);\n/* harmony import */ var _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26998);\n/* harmony import */ var _Shaders_ModelExperimental_GeometryStageVS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20885);\n/* harmony import */ var _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87826);\n\n\n\n\n\n\n\n/**\n * The geometry pipeline stage processes the vertex attributes of a primitive.\n *\n * @namespace GeometryPipelineStage\n *\n * @private\n */\nvar GeometryPipelineStage = {};\nGeometryPipelineStage.name = "GeometryPipelineStage"; // Helps with debugging\n\n/**\n * This pipeline stage processes the vertex attributes of a primitive, adding the attribute declarations to the shaders,\n * the attribute objects to the render resources and setting the flags as needed.\n *\n * Processes a primitive. This stage modifies the following parts of the render resources:\n * <ul>\n *  <li> adds attribute and varying declarations for the vertex attributes in the vertex and fragment shaders\n *  <li> creates the objects required to create VertexArrays\n *  <li> sets the flag for point primitive types\n * </ul>\n *\n * @param {PrimitiveRenderResources} renderResources The render resources for this primitive.\n * @param {ModelComponents.Primitive} primitive The primitive.\n *\n * @private\n */\nGeometryPipelineStage.process = function (renderResources, primitive) {\n  var index;\n  var setIndexedAttributeInitializationLines = [];\n  var customAttributeInitializationLines = [];\n  for (var i = 0; i < primitive.attributes.length; i++) {\n    var attribute = primitive.attributes[i];\n    if (attribute.semantic === _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].POSITION */ .Z.POSITION) {\n      index = 0;\n    } else {\n      // The attribute index is taken from the node render resources, which may have added some attributes of its own.\n      index = renderResources.attributeIndex++;\n    }\n    processAttribute(\n      renderResources,\n      attribute,\n      index,\n      setIndexedAttributeInitializationLines,\n      customAttributeInitializationLines\n    );\n  }\n\n  var shaderBuilder = renderResources.shaderBuilder;\n\n  var varyingFunctionLines;\n\n  // Adds a function to initialize varyings for vertex attribute\n  // semantics that have a setIndex. For example:\n  // void initializeSetIndexedAttributes()\n  // {\n  //    #ifdef HAS_TEXCOORD_0\n  //    v_texCoord_0 = a_texCoord_0;\n  //    #endif\n  // }\n  if (setIndexedAttributeInitializationLines.length > 0) {\n    shaderBuilder.addDefine(\n      "HAS_SET_INDEXED_ATTRIBUTES",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].VERTEX */ .Z.VERTEX\n    );\n    varyingFunctionLines = [].concat(\n      "void initializeSetIndexedAttributes()",\n      "{",\n      setIndexedAttributeInitializationLines,\n      "}"\n    );\n    shaderBuilder.addVertexLines(varyingFunctionLines);\n  }\n\n  // Adds a function to initialize varyings for custom vertex attributes.\n  // For example:\n  // void initializeCustomAttributes()\n  // {\n  //    v_customAttribute = a_customAttribute;\n  // }\n  if (customAttributeInitializationLines.length > 0) {\n    shaderBuilder.addDefine("HAS_CUSTOM_ATTRIBUTES");\n    varyingFunctionLines = [].concat(\n      "void initializeCustomAttributes()",\n      "{",\n      customAttributeInitializationLines,\n      "}"\n    );\n    shaderBuilder.addVertexLines(varyingFunctionLines);\n  }\n\n  if (primitive.primitiveType === _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].POINTS */ .Z.POINTS) {\n    shaderBuilder.addDefine("PRIMITIVE_TYPE_POINTS");\n  }\n\n  shaderBuilder.addVertexLines([_Shaders_ModelExperimental_GeometryStageVS_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z]);\n  shaderBuilder.addVarying("vec3", "v_positionEC");\n};\n\nfunction processAttribute(\n  renderResources,\n  attribute,\n  attributeIndex,\n  setIndexedAttributeInitializationLines,\n  customAttributeInitializationLines\n) {\n  var semantic = attribute.semantic;\n  var setIndex = attribute.setIndex;\n  var attributeType = attribute.type;\n\n  var shaderBuilder = renderResources.shaderBuilder;\n\n  var variableName;\n  var varyingName;\n  var glslType = _AttributeType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getGlslType */ .Z.getGlslType(attributeType);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(semantic)) {\n    variableName = _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getVariableName */ .Z.getVariableName(semantic, setIndex);\n    varyingName = "v_" + variableName;\n\n    switch (semantic) {\n      case _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].NORMAL */ .Z.NORMAL:\n        shaderBuilder.addDefine("HAS_NORMALS");\n        break;\n      case _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].TANGENT */ .Z.TANGENT:\n        shaderBuilder.addDefine("HAS_TANGENTS");\n        break;\n      case _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FEATURE_ID */ .Z.FEATURE_ID:\n      case _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].TEXCOORD */ .Z.TEXCOORD:\n      case _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].COLOR */ .Z.COLOR:\n        shaderBuilder.addDefine("HAS_" + semantic + "_" + setIndex);\n        setIndexedAttributeInitializationLines.push(\n          "    #ifdef HAS_" + semantic + "_" + setIndex\n        );\n        setIndexedAttributeInitializationLines.push(\n          "    " + varyingName + " = a_" + variableName + ";"\n        );\n        setIndexedAttributeInitializationLines.push("    #endif");\n    }\n  }\n\n  var vertexAttribute = {\n    index: attributeIndex,\n    value: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(attribute.buffer) ? undefined : attribute.constant,\n    vertexBuffer: attribute.buffer,\n    componentsPerAttribute: _AttributeType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getNumberOfComponents */ .Z.getNumberOfComponents(attributeType),\n    componentDatatype: attribute.componentDatatype,\n    offsetInBytes: attribute.byteOffset,\n    strideInBytes: attribute.byteStride,\n    normalize: attribute.normalized,\n  };\n\n  // Handle custom vertex attributes.\n  // For example, "_TEMPERATURE" will be converted to "a_temperature".\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(variableName)) {\n    variableName = attribute.name;\n\n    // Per the glTF 2.0 spec, custom vertex attributes must be prepended with an underscore.\n    variableName = variableName.substring(1);\n    variableName = variableName.toLowerCase();\n    varyingName = "v_" + variableName;\n\n    var initializationLine =\n      "    " + varyingName + " = a_" + variableName + ";";\n    customAttributeInitializationLines.push(initializationLine);\n  }\n\n  variableName = "a_" + variableName;\n  shaderBuilder.addVarying(glslType, varyingName);\n\n  if (semantic === _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].POSITION */ .Z.POSITION) {\n    shaderBuilder.setPositionAttribute(glslType, variableName);\n  } else {\n    shaderBuilder.addAttribute(glslType, variableName);\n  }\n\n  renderResources.attributes.push(vertexAttribute);\n}\n\n/* harmony default export */ __webpack_exports__["Z"] = (GeometryPipelineStage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///97943\n')},22086:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72248);\n/* harmony import */ var _AttributeType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(77072);\n/* harmony import */ var _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87811);\n/* harmony import */ var _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(99095);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(58597);\n/* harmony import */ var _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(57325);\n/* harmony import */ var _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(60426);\n/* harmony import */ var _Shaders_ModelExperimental_InstancingStageVS_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(70903);\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The instancing pipeline stage is responsible for handling GPU mesh instancing at the node\n * level.\n *\n * @namespace InstancingPipelineStage\n * @private\n */\nvar InstancingPipelineStage = {};\nInstancingPipelineStage.name = "InstancingPipelineStage"; // Helps with debugging\n\n/**\n * Process a node. This modifies the following parts of the render resources:\n * <ul>\n *  <li>adds attribute declarations for the instancing vertex attributes in the vertex shader</li>\n *  <li>adds an instancing translation min and max to compute an accurate bounding volume</li>\n * </ul>\n * @param {NodeRenderResources} renderResources The render resources for this node.\n * @param {ModelComponents.Node} node The node.\n * @param {FrameState} frameState The frame state.\n */\nInstancingPipelineStage.process = function (renderResources, node, frameState) {\n  var instances = node.instances;\n  var instancingVertexAttributes = [];\n\n  var shaderBuilder = renderResources.shaderBuilder;\n  shaderBuilder.addDefine("HAS_INSTANCING");\n  shaderBuilder.addVertexLines([_Shaders_ModelExperimental_InstancingStageVS_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z]);\n\n  var translationAttribute = _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].getAttributeBySemantic */ .Z.getAttributeBySemantic(\n    instances,\n    _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].TRANSLATION */ .Z.TRANSLATION\n  );\n\n  var translationMax;\n  var translationMin;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(translationAttribute)) {\n    translationMax = translationAttribute.max;\n    translationMin = translationAttribute.min;\n  }\n\n  var rotationAttribute = _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].getAttributeBySemantic */ .Z.getAttributeBySemantic(\n    instances,\n    _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ROTATION */ .Z.ROTATION\n  );\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(rotationAttribute) ||\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(translationMax) ||\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(translationMin)\n  ) {\n    instancingVertexAttributes = processMatrixAttributes(\n      node,\n      renderResources,\n      frameState\n    );\n  } else {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(translationAttribute)) {\n      instancingVertexAttributes.push({\n        index: renderResources.attributeIndex++,\n        vertexBuffer: translationAttribute.buffer,\n        componentsPerAttribute: _AttributeType_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getNumberOfComponents */ .Z.getNumberOfComponents(\n          translationAttribute.type\n        ),\n        componentDatatype: translationAttribute.componentDatatype,\n        normalize: false,\n        offsetInBytes: translationAttribute.byteOffset,\n        strideInBytes: translationAttribute.byteStride,\n        instanceDivisor: 1,\n      });\n\n      renderResources.instancingTranslationMax = translationMax;\n      renderResources.instancingTranslationMin = translationMin;\n\n      shaderBuilder.addDefine("HAS_INSTANCE_TRANSLATION");\n      shaderBuilder.addAttribute("vec3", "a_instanceTranslation");\n    }\n\n    var scaleAttribute = _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].getAttributeBySemantic */ .Z.getAttributeBySemantic(\n      instances,\n      _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].SCALE */ .Z.SCALE\n    );\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(scaleAttribute)) {\n      instancingVertexAttributes.push({\n        index: renderResources.attributeIndex++,\n        vertexBuffer: scaleAttribute.buffer,\n        componentsPerAttribute: _AttributeType_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getNumberOfComponents */ .Z.getNumberOfComponents(\n          scaleAttribute.type\n        ),\n        componentDatatype: scaleAttribute.componentDatatype,\n        normalize: false,\n        offsetInBytes: scaleAttribute.byteOffset,\n        strideInBytes: scaleAttribute.byteStride,\n        instanceDivisor: 1,\n      });\n\n      shaderBuilder.addDefine("HAS_INSTANCE_SCALE");\n      shaderBuilder.addAttribute("vec3", "a_instanceScale");\n    }\n  }\n\n  renderResources.instanceCount = node.instances.attributes[0].count;\n  renderResources.attributes.push.apply(\n    renderResources.attributes,\n    instancingVertexAttributes\n  );\n};\n\nvar translationScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar rotationScratch = new _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scaleScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar transformScratch = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nfunction getInstanceTransformsTypedArray(instances, renderResources) {\n  var count = instances.attributes[0].count;\n  var elements = 12;\n  var transformsTypedArray = new Float32Array(count * elements);\n\n  var translationAttribute = _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].getAttributeBySemantic */ .Z.getAttributeBySemantic(\n    instances,\n    _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].TRANSLATION */ .Z.TRANSLATION\n  );\n  var rotationAttribute = _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].getAttributeBySemantic */ .Z.getAttributeBySemantic(\n    instances,\n    _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ROTATION */ .Z.ROTATION\n  );\n  var scaleAttribute = _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].getAttributeBySemantic */ .Z.getAttributeBySemantic(\n    instances,\n    _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].SCALE */ .Z.SCALE\n  );\n\n  var instancingTranslationMax = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n    -Number.MAX_VALUE,\n    -Number.MAX_VALUE,\n    -Number.MAX_VALUE\n  );\n  var instancingTranslationMin = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n    Number.MAX_VALUE,\n    Number.MAX_VALUE,\n    Number.MAX_VALUE\n  );\n\n  var hasTranslation = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(translationAttribute);\n  var hasRotation = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(rotationAttribute);\n  var hasScale = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(scaleAttribute);\n\n  // Translations get initialized to (0, 0, 0).\n  var translationTypedArray = hasTranslation\n    ? translationAttribute.typedArray\n    : new Float32Array(count * 3);\n  // Rotations get initialized to (0, 0, 0, 0). The w-component is set to 1 in the loop below.\n  var rotationTypedArray = hasRotation\n    ? rotationAttribute.typedArray\n    : new Float32Array(count * 4);\n  // Scales get initialized to (1, 1, 1).\n  var scaleTypedArray;\n  if (hasScale) {\n    scaleTypedArray = scaleAttribute.typedArray;\n  } else {\n    scaleTypedArray = new Float32Array(count * 3);\n    scaleTypedArray.fill(1);\n  }\n\n  for (var i = 0; i < count; i++) {\n    var translation = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      translationTypedArray[i * 3],\n      translationTypedArray[i * 3 + 1],\n      translationTypedArray[i * 3 + 2],\n      translationScratch\n    );\n\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].maximumByComponent */ .Z.maximumByComponent(\n      instancingTranslationMax,\n      translation,\n      instancingTranslationMax\n    );\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].minimumByComponent */ .Z.minimumByComponent(\n      instancingTranslationMin,\n      translation,\n      instancingTranslationMin\n    );\n\n    var rotation = new _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      rotationTypedArray[i * 4],\n      rotationTypedArray[i * 4 + 1],\n      rotationTypedArray[i * 4 + 2],\n      hasRotation ? rotationTypedArray[i * 4 + 3] : 1,\n      rotationScratch\n    );\n\n    var scale = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      scaleTypedArray[i * 3],\n      scaleTypedArray[i * 3 + 1],\n      scaleTypedArray[i * 3 + 2],\n      scaleScratch\n    );\n\n    var transform = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromTranslationQuaternionRotationScale */ .Z.fromTranslationQuaternionRotationScale(\n      translation,\n      rotation,\n      scale,\n      transformScratch\n    );\n\n    var offset = elements * i;\n\n    transformsTypedArray[offset + 0] = transform[0];\n    transformsTypedArray[offset + 1] = transform[4];\n    transformsTypedArray[offset + 2] = transform[8];\n    transformsTypedArray[offset + 3] = transform[12];\n    transformsTypedArray[offset + 4] = transform[1];\n    transformsTypedArray[offset + 5] = transform[5];\n    transformsTypedArray[offset + 6] = transform[9];\n    transformsTypedArray[offset + 7] = transform[13];\n    transformsTypedArray[offset + 8] = transform[2];\n    transformsTypedArray[offset + 9] = transform[6];\n    transformsTypedArray[offset + 10] = transform[10];\n    transformsTypedArray[offset + 11] = transform[14];\n\n    renderResources.instancingTranslationMax = instancingTranslationMax;\n    renderResources.instancingTranslationMin = instancingTranslationMin;\n  }\n\n  return transformsTypedArray;\n}\n\nfunction processMatrixAttributes(node, renderResources, frameState) {\n  var transformsTypedArray = getInstanceTransformsTypedArray(\n    node.instances,\n    renderResources\n  );\n  var transformsVertexBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n    context: frameState.context,\n    typedArray: transformsTypedArray,\n    usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n  });\n  // Destruction of resources allocated by the ModelExperimental is handled by ModelExperimental.destroy().\n  transformsVertexBuffer.vertexArrayDestroyable = false;\n  renderResources.model._resources.push(transformsVertexBuffer);\n\n  var vertexSizeInFloats = 12;\n  var componentByteSize = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(\n    _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT\n  );\n\n  var instancingVertexAttributes = [\n    {\n      index: renderResources.attributeIndex++,\n      vertexBuffer: transformsVertexBuffer,\n      componentsPerAttribute: 4,\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT,\n      normalize: false,\n      offsetInBytes: 0,\n      strideInBytes: componentByteSize * vertexSizeInFloats,\n      instanceDivisor: 1,\n    },\n    {\n      index: renderResources.attributeIndex++,\n      vertexBuffer: transformsVertexBuffer,\n      componentsPerAttribute: 4,\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT,\n      normalize: false,\n      offsetInBytes: componentByteSize * 4,\n      strideInBytes: componentByteSize * vertexSizeInFloats,\n      instanceDivisor: 1,\n    },\n    {\n      index: renderResources.attributeIndex++,\n      vertexBuffer: transformsVertexBuffer,\n      componentsPerAttribute: 4,\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT,\n      normalize: false,\n      offsetInBytes: componentByteSize * 8,\n      strideInBytes: componentByteSize * vertexSizeInFloats,\n      instanceDivisor: 1,\n    },\n  ];\n\n  var shaderBuilder = renderResources.shaderBuilder;\n  shaderBuilder.addDefine("HAS_INSTANCE_MATRICES");\n  shaderBuilder.addAttribute("vec4", "a_instancingTransformRow0");\n  shaderBuilder.addAttribute("vec4", "a_instancingTransformRow1");\n  shaderBuilder.addAttribute("vec4", "a_instancingTransformRow2");\n\n  return instancingVertexAttributes;\n}\n\n// Exposed for testing\nInstancingPipelineStage._getInstanceTransformsTypedArray = getInstanceTransformsTypedArray;\n\n/* harmony default export */ __webpack_exports__["Z"] = (InstancingPipelineStage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22086\n')},84775:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * The lighting model to use for lighting a {@link ModelExperimental}. This\n * is applied in the {@link LightingPipelineStage}.\n *\n * @enum {Number}\n * @private\n */\nvar LightingModel = {\n  /**\n   * Use unlit shading, i.e. skip lighting calculations. The model\'s\n   * diffuse color (assumed to be linear RGB, not sRGB) is used directly\n   * when computing <code>gl_FragColor</code>. The alpha mode is still\n   * applied.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNLIT: 0,\n  /**\n   * Use physically-based rendering lighting calculations. This includes\n   * both PBR metallic roughness and PBR specular glossiness. Image-based\n   * lighting is also applied when possible.\n   *\n   * @type {Number}\n   * @constant\n   */\n  PBR: 1,\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(LightingModel));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQ3NzUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw2Q0FBNkMsd0JBQXdCO0FBQ3JFLHNCQUFzQiw0QkFBNEI7QUFDbEQ7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseURBQWUsNEJBQTRCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTW9kZWxFeHBlcmltZW50YWwvTGlnaHRpbmdNb2RlbC5qcz81Yzk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGxpZ2h0aW5nIG1vZGVsIHRvIHVzZSBmb3IgbGlnaHRpbmcgYSB7QGxpbmsgTW9kZWxFeHBlcmltZW50YWx9LiBUaGlzXG4gKiBpcyBhcHBsaWVkIGluIHRoZSB7QGxpbmsgTGlnaHRpbmdQaXBlbGluZVN0YWdlfS5cbiAqXG4gKiBAZW51bSB7TnVtYmVyfVxuICogQHByaXZhdGVcbiAqL1xudmFyIExpZ2h0aW5nTW9kZWwgPSB7XG4gIC8qKlxuICAgKiBVc2UgdW5saXQgc2hhZGluZywgaS5lLiBza2lwIGxpZ2h0aW5nIGNhbGN1bGF0aW9ucy4gVGhlIG1vZGVsJ3NcbiAgICogZGlmZnVzZSBjb2xvciAoYXNzdW1lZCB0byBiZSBsaW5lYXIgUkdCLCBub3Qgc1JHQikgaXMgdXNlZCBkaXJlY3RseVxuICAgKiB3aGVuIGNvbXB1dGluZyA8Y29kZT5nbF9GcmFnQ29sb3I8L2NvZGU+LiBUaGUgYWxwaGEgbW9kZSBpcyBzdGlsbFxuICAgKiBhcHBsaWVkLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFVOTElUOiAwLFxuICAvKipcbiAgICogVXNlIHBoeXNpY2FsbHktYmFzZWQgcmVuZGVyaW5nIGxpZ2h0aW5nIGNhbGN1bGF0aW9ucy4gVGhpcyBpbmNsdWRlc1xuICAgKiBib3RoIFBCUiBtZXRhbGxpYyByb3VnaG5lc3MgYW5kIFBCUiBzcGVjdWxhciBnbG9zc2luZXNzLiBJbWFnZS1iYXNlZFxuICAgKiBsaWdodGluZyBpcyBhbHNvIGFwcGxpZWQgd2hlbiBwb3NzaWJsZS5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBQQlI6IDEsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKExpZ2h0aW5nTW9kZWwpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///84775\n')},93362:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(87826);\n/* harmony import */ var _Shaders_ModelExperimental_LightingStageFS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36564);\n/* harmony import */ var _LightingModel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84775);\n\n\n\n\n/**\n * The lighting pipeline stage is responsible for taking a material and rendering\n * it with a lighting model such as physically based rendering (PBR) or unlit\n * shading\n *\n * @namespace LightingPipelineStage\n *\n * @private\n */\nvar LightingPipelineStage = {};\nLightingPipelineStage.name = "LightingPipelineStage"; // Helps with debugging\n\n/**\n * Process a primitive. This modifies the following parts of the render\n * resources:\n * <ul>\n *   <li>modifies the shader to include the lighting stage</li>\n * </ul>\n * @param {PrimitiveRenderResources} renderResources The render resources for the primitive\n * @param {ModelComponents.Primitive} primitive The primitive to be rendered\n *\n * @private\n */\nLightingPipelineStage.process = function (renderResources, primitive) {\n  var lightingOptions = renderResources.lightingOptions;\n  var shaderBuilder = renderResources.shaderBuilder;\n\n  // The lighting model is always set by the material. However, custom shaders\n  // can override this.\n  var lightingModel = lightingOptions.lightingModel;\n\n  if (lightingModel === _LightingModel_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].PBR */ .Z.PBR) {\n    shaderBuilder.addDefine(\n      "LIGHTING_PBR",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  } else {\n    shaderBuilder.addDefine(\n      "LIGHTING_UNLIT",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n\n  shaderBuilder.addFragmentLines([_Shaders_ModelExperimental_LightingStageFS_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z]);\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (LightingPipelineStage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTMzNjIuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQW9FO0FBQ2E7QUFDbEM7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDBCQUEwQjtBQUNyQyxXQUFXLDJCQUEyQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHdCQUF3QiwwRUFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0EsTUFBTSxpR0FBMEI7QUFDaEM7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsTUFBTSxpR0FBMEI7QUFDaEM7QUFDQTs7QUFFQSxrQ0FBa0MsOEZBQWU7QUFDakQ7O0FBRUEseURBQWUscUJBQXFCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTW9kZWxFeHBlcmltZW50YWwvTGlnaHRpbmdQaXBlbGluZVN0YWdlLmpzPzUyMWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNoYWRlckRlc3RpbmF0aW9uIGZyb20gXCIuLi8uLi9SZW5kZXJlci9TaGFkZXJEZXN0aW5hdGlvbi5qc1wiO1xuaW1wb3J0IExpZ2h0aW5nU3RhZ2VGUyBmcm9tIFwiLi4vLi4vU2hhZGVycy9Nb2RlbEV4cGVyaW1lbnRhbC9MaWdodGluZ1N0YWdlRlMuanNcIjtcbmltcG9ydCBMaWdodGluZ01vZGVsIGZyb20gXCIuL0xpZ2h0aW5nTW9kZWwuanNcIjtcblxuLyoqXG4gKiBUaGUgbGlnaHRpbmcgcGlwZWxpbmUgc3RhZ2UgaXMgcmVzcG9uc2libGUgZm9yIHRha2luZyBhIG1hdGVyaWFsIGFuZCByZW5kZXJpbmdcbiAqIGl0IHdpdGggYSBsaWdodGluZyBtb2RlbCBzdWNoIGFzIHBoeXNpY2FsbHkgYmFzZWQgcmVuZGVyaW5nIChQQlIpIG9yIHVubGl0XG4gKiBzaGFkaW5nXG4gKlxuICogQG5hbWVzcGFjZSBMaWdodGluZ1BpcGVsaW5lU3RhZ2VcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG52YXIgTGlnaHRpbmdQaXBlbGluZVN0YWdlID0ge307XG5MaWdodGluZ1BpcGVsaW5lU3RhZ2UubmFtZSA9IFwiTGlnaHRpbmdQaXBlbGluZVN0YWdlXCI7IC8vIEhlbHBzIHdpdGggZGVidWdnaW5nXG5cbi8qKlxuICogUHJvY2VzcyBhIHByaW1pdGl2ZS4gVGhpcyBtb2RpZmllcyB0aGUgZm9sbG93aW5nIHBhcnRzIG9mIHRoZSByZW5kZXJcbiAqIHJlc291cmNlczpcbiAqIDx1bD5cbiAqICAgPGxpPm1vZGlmaWVzIHRoZSBzaGFkZXIgdG8gaW5jbHVkZSB0aGUgbGlnaHRpbmcgc3RhZ2U8L2xpPlxuICogPC91bD5cbiAqIEBwYXJhbSB7UHJpbWl0aXZlUmVuZGVyUmVzb3VyY2VzfSByZW5kZXJSZXNvdXJjZXMgVGhlIHJlbmRlciByZXNvdXJjZXMgZm9yIHRoZSBwcmltaXRpdmVcbiAqIEBwYXJhbSB7TW9kZWxDb21wb25lbnRzLlByaW1pdGl2ZX0gcHJpbWl0aXZlIFRoZSBwcmltaXRpdmUgdG8gYmUgcmVuZGVyZWRcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5MaWdodGluZ1BpcGVsaW5lU3RhZ2UucHJvY2VzcyA9IGZ1bmN0aW9uIChyZW5kZXJSZXNvdXJjZXMsIHByaW1pdGl2ZSkge1xuICB2YXIgbGlnaHRpbmdPcHRpb25zID0gcmVuZGVyUmVzb3VyY2VzLmxpZ2h0aW5nT3B0aW9ucztcbiAgdmFyIHNoYWRlckJ1aWxkZXIgPSByZW5kZXJSZXNvdXJjZXMuc2hhZGVyQnVpbGRlcjtcblxuICAvLyBUaGUgbGlnaHRpbmcgbW9kZWwgaXMgYWx3YXlzIHNldCBieSB0aGUgbWF0ZXJpYWwuIEhvd2V2ZXIsIGN1c3RvbSBzaGFkZXJzXG4gIC8vIGNhbiBvdmVycmlkZSB0aGlzLlxuICB2YXIgbGlnaHRpbmdNb2RlbCA9IGxpZ2h0aW5nT3B0aW9ucy5saWdodGluZ01vZGVsO1xuXG4gIGlmIChsaWdodGluZ01vZGVsID09PSBMaWdodGluZ01vZGVsLlBCUikge1xuICAgIHNoYWRlckJ1aWxkZXIuYWRkRGVmaW5lKFxuICAgICAgXCJMSUdIVElOR19QQlJcIixcbiAgICAgIHVuZGVmaW5lZCxcbiAgICAgIFNoYWRlckRlc3RpbmF0aW9uLkZSQUdNRU5UXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBzaGFkZXJCdWlsZGVyLmFkZERlZmluZShcbiAgICAgIFwiTElHSFRJTkdfVU5MSVRcIixcbiAgICAgIHVuZGVmaW5lZCxcbiAgICAgIFNoYWRlckRlc3RpbmF0aW9uLkZSQUdNRU5UXG4gICAgKTtcbiAgfVxuXG4gIHNoYWRlckJ1aWxkZXIuYWRkRnJhZ21lbnRMaW5lcyhbTGlnaHRpbmdTdGFnZUZTXSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBMaWdodGluZ1BpcGVsaW5lU3RhZ2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///93362\n')},25152:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87826);\n/* harmony import */ var _AlphaMode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82075);\n/* harmony import */ var _LightingModel_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84775);\n/* harmony import */ var _Shaders_ModelExperimental_MaterialStageFS_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(92667);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8379);\n/* harmony import */ var _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(68201);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63367);\n/* harmony import */ var _ModelComponents_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7896);\n\n\n\n\n\n\n\n\n\n\n\n\nvar Material = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].Material */ .Z.Material;\nvar MetallicRoughness = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].MetallicRoughness */ .Z.MetallicRoughness;\nvar SpecularGlossiness = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].SpecularGlossiness */ .Z.SpecularGlossiness;\n\n/**\n * The material pipeline stage processes textures and other uniforms needed\n * to render a primitive. This handles the following material types:\n * <ul>\n *   <li>Basic glTF materials (PBR metallic roughness model)</li>\n *   <li>The `KHR_materials_pbrSpecularGlossiness` glTF extension</li>\n *   <li>The `KHR_materials_unlit` glTF extension</li>\n * </ul>\n *\n * @namespace MaterialPipelineStage\n *\n * @private\n */\nvar MaterialPipelineStage = {};\nMaterialPipelineStage.name = "MaterialPipelineStage"; // Helps with debugging\n\n/**\n * Process a primitive. This modifies the following parts of the render\n * resources:\n * <ul>\n *   <li>Modifies the shader to include the material processing stage</li>\n *   <li>Modifies the shader to include additional uniforms for textures and other rendering details</li>\n *   <li>Modifies the lighting options to set either PBR or unlit lighting</li>\n *   <li>Sets the render state for back-face culling</li>\n * </ul>\n * @param {PrimitiveRenderResources} renderResources The render resources for the primitive\n * @param {ModelComponents.Primitive} primitive The primitive to be rendered\n * @param {FrameState} frameState The frame state.\n * @private\n */\nMaterialPipelineStage.process = function (\n  renderResources,\n  primitive,\n  frameState\n) {\n  var material = primitive.material;\n\n  var uniformMap = renderResources.uniformMap;\n  var shaderBuilder = renderResources.shaderBuilder;\n\n  // When textures are loaded incrementally, fall back to a default 1x1 texture\n  var defaultTexture = frameState.context.defaultTexture;\n  var defaultNormalTexture = frameState.context.defaultNormalTexture;\n  var defaultEmissiveTexture = frameState.context.defaultEmissiveTexture;\n\n  processMaterialUniforms(\n    material,\n    uniformMap,\n    shaderBuilder,\n    defaultTexture,\n    defaultNormalTexture,\n    defaultEmissiveTexture\n  );\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(material.specularGlossiness)) {\n    processSpecularGlossinessUniforms(\n      material,\n      uniformMap,\n      shaderBuilder,\n      defaultTexture\n    );\n  } else {\n    processMetallicRoughnessUniforms(\n      material,\n      uniformMap,\n      shaderBuilder,\n      defaultTexture\n    );\n  }\n\n  var lightingOptions = renderResources.lightingOptions;\n  if (material.unlit) {\n    lightingOptions.lightingModel = _LightingModel_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].UNLIT */ .Z.UNLIT;\n  } else {\n    lightingOptions.lightingModel = _LightingModel_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].PBR */ .Z.PBR;\n  }\n\n  // Configure back-face culling\n  var cull = !material.doubleSided;\n  renderResources.renderStateOptions.cull = {\n    enabled: cull,\n  };\n\n  var alphaOptions = renderResources.alphaOptions;\n  alphaOptions.alphaMode = material.alphaMode;\n  if (material.alphaMode === _AlphaMode_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].BLEND */ .Z.BLEND) {\n    alphaOptions.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT;\n  } else if (material.alphaMode === _AlphaMode_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].MASK */ .Z.MASK) {\n    alphaOptions.alphaCutoff = material.alphaCutoff;\n  }\n\n  shaderBuilder.addFragmentLines([_Shaders_ModelExperimental_MaterialStageFS_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z]);\n};\n\n/**\n * Process a single texture transformation and add it to the shader and uniform map.\n *\n * @param {ShaderBuilder} shaderBuilder The shader builder to modify\n * @param {Object.<String, Function>} uniformMap The uniform map to modify.\n * @param {ModelComponents.TextureReader} textureReader The texture to add to the shader\n * @param {String} uniformName The name of the sampler uniform such as <code>u_baseColorTexture</code>\n * @param {String} defineName The name of the texture for use in the defines, minus any prefix or suffix. For example, "BASE_COLOR" or "EMISSIVE"\n *\n * @private\n */\nfunction processTextureTransform(\n  shaderBuilder,\n  uniformMap,\n  textureReader,\n  uniformName,\n  defineName\n) {\n  // Add a define to enable the texture transformation code in the shader.\n  var transformDefine = "HAS_" + defineName + "_TEXTURE_TRANSFORM";\n  shaderBuilder.addDefine(\n    transformDefine,\n    undefined,\n    _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n  );\n\n  // Add a uniform for the transformation matrix\n  var transformUniformName = uniformName + "Transform";\n  shaderBuilder.addUniform(\n    "mat3",\n    transformUniformName,\n    _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n  );\n  uniformMap[transformUniformName] = function () {\n    return textureReader.transform;\n  };\n}\n\n/**\n * Process a single texture and add it to the shader and uniform map.\n *\n * @param {ShaderBuilder} shaderBuilder The shader builder to modify\n * @param {Object.<String, Function>} uniformMap The uniform map to modify.\n * @param {ModelComponents.TextureReader} textureReader The texture to add to the shader\n * @param {String} uniformName The name of the sampler uniform such as <code>u_baseColorTexture</code>\n * @param {String} defineName The name of the texture for use in the defines, minus any prefix or suffix. For example, "BASE_COLOR" or "EMISSIVE"\n *\n * @private\n */\nfunction processTexture(\n  shaderBuilder,\n  uniformMap,\n  textureReader,\n  uniformName,\n  defineName,\n  defaultTexture\n) {\n  // Add a uniform for the texture itself\n  shaderBuilder.addUniform(\n    "sampler2D",\n    uniformName,\n    _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n  );\n  uniformMap[uniformName] = function () {\n    return (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(textureReader.texture, defaultTexture);\n  };\n\n  // Add a #define directive to enable using the texture in the shader\n  var textureDefine = "HAS_" + defineName + "_TEXTURE";\n  shaderBuilder.addDefine(textureDefine, undefined, _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT);\n\n  // Add a #define to tell the shader which texture coordinates varying to use.\n  var texCoordIndex = textureReader.texCoord;\n  var texCoordVarying = "v_texCoord_" + texCoordIndex;\n  var texCoordDefine = "TEXCOORD_" + defineName;\n  shaderBuilder.addDefine(\n    texCoordDefine,\n    texCoordVarying,\n    _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n  );\n\n  // Some textures have matrix transforms (e.g. for texture atlases). Add those\n  // to the shader if present.\n  var textureTransform = textureReader.transform;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(textureTransform) &&\n    !_Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].equals */ .Z.equals(textureTransform, _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].IDENTITY */ .Z.IDENTITY)\n  ) {\n    processTextureTransform(\n      shaderBuilder,\n      uniformMap,\n      textureReader,\n      uniformName,\n      defineName\n    );\n  }\n}\n\nfunction processMaterialUniforms(\n  material,\n  uniformMap,\n  shaderBuilder,\n  defaultTexture,\n  defaultNormalTexture,\n  defaultEmissiveTexture\n) {\n  var emissiveTexture = material.emissiveTexture;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(emissiveTexture)) {\n    processTexture(\n      shaderBuilder,\n      uniformMap,\n      emissiveTexture,\n      "u_emissiveTexture",\n      "EMISSIVE",\n      defaultEmissiveTexture\n    );\n  }\n\n  var emissiveFactor = material.emissiveFactor;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(emissiveFactor) &&\n    !_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equals */ .Z.equals(emissiveFactor, Material.DEFAULT_EMISSIVE_FACTOR)\n  ) {\n    shaderBuilder.addUniform(\n      "vec3",\n      "u_emissiveFactor",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    uniformMap.u_emissiveFactor = function () {\n      return material.emissiveFactor;\n    };\n    shaderBuilder.addDefine(\n      "HAS_EMISSIVE_FACTOR",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n\n  var normalTexture = material.normalTexture;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(normalTexture)) {\n    processTexture(\n      shaderBuilder,\n      uniformMap,\n      normalTexture,\n      "u_normalTexture",\n      "NORMAL",\n      defaultNormalTexture\n    );\n  }\n\n  var occlusionTexture = material.occlusionTexture;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(occlusionTexture)) {\n    processTexture(\n      shaderBuilder,\n      uniformMap,\n      occlusionTexture,\n      "u_occlusionTexture",\n      "OCCLUSION",\n      defaultTexture\n    );\n  }\n}\n\nfunction processSpecularGlossinessUniforms(\n  material,\n  uniformMap,\n  shaderBuilder,\n  defaultTexture\n) {\n  var specularGlossiness = material.specularGlossiness;\n  shaderBuilder.addDefine(\n    "USE_SPECULAR_GLOSSINESS",\n    undefined,\n    _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n  );\n\n  var diffuseTexture = specularGlossiness.diffuseTexture;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(diffuseTexture)) {\n    processTexture(\n      shaderBuilder,\n      uniformMap,\n      diffuseTexture,\n      "u_diffuseTexture",\n      "DIFFUSE",\n      defaultTexture\n    );\n  }\n\n  var diffuseFactor = specularGlossiness.diffuseFactor;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(diffuseFactor) &&\n    !_Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(diffuseFactor, SpecularGlossiness.DEFAULT_DIFFUSE_FACTOR)\n  ) {\n    shaderBuilder.addUniform(\n      "vec4",\n      "u_diffuseFactor",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    uniformMap.u_diffuseFactor = function () {\n      return specularGlossiness.diffuseFactor;\n    };\n    shaderBuilder.addDefine(\n      "HAS_DIFFUSE_FACTOR",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n\n  var specularGlossinessTexture = specularGlossiness.specularGlossinessTexture;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(specularGlossinessTexture)) {\n    processTexture(\n      shaderBuilder,\n      uniformMap,\n      specularGlossinessTexture,\n      "u_specularGlossinessTexture",\n      "SPECULAR_GLOSSINESS",\n      defaultTexture\n    );\n  }\n\n  var specularFactor = specularGlossiness.specularFactor;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(specularFactor) &&\n    !_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equals */ .Z.equals(\n      specularFactor,\n      SpecularGlossiness.DEFAULT_SPECULAR_FACTOR\n    )\n  ) {\n    shaderBuilder.addUniform(\n      "vec3",\n      "u_specularFactor",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    uniformMap.u_specularFactor = function () {\n      return specularGlossiness.specularFactor;\n    };\n    shaderBuilder.addDefine(\n      "HAS_SPECULAR_FACTOR",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n\n  var glossinessFactor = specularGlossiness.glossinessFactor;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(glossinessFactor) &&\n    glossinessFactor !== SpecularGlossiness.DEFAULT_GLOSSINESS_FACTOR\n  ) {\n    shaderBuilder.addUniform(\n      "float",\n      "u_glossinessFactor",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    uniformMap.u_glossinessFactor = function () {\n      return specularGlossiness.glossinessFactor;\n    };\n    shaderBuilder.addDefine(\n      "HAS_GLOSSINESS_FACTOR",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n}\n\nfunction processMetallicRoughnessUniforms(\n  material,\n  uniformMap,\n  shaderBuilder,\n  defaultTexture\n) {\n  var metallicRoughness = material.metallicRoughness;\n  shaderBuilder.addDefine(\n    "USE_METALLIC_ROUGHNESS",\n    undefined,\n    _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n  );\n\n  var baseColorTexture = metallicRoughness.baseColorTexture;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(baseColorTexture)) {\n    processTexture(\n      shaderBuilder,\n      uniformMap,\n      baseColorTexture,\n      "u_baseColorTexture",\n      "BASE_COLOR",\n      defaultTexture\n    );\n  }\n\n  var baseColorFactor = metallicRoughness.baseColorFactor;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(baseColorFactor) &&\n    !_Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(\n      baseColorFactor,\n      MetallicRoughness.DEFAULT_BASE_COLOR_FACTOR\n    )\n  ) {\n    shaderBuilder.addUniform(\n      "vec4",\n      "u_baseColorFactor",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    uniformMap.u_baseColorFactor = function () {\n      return metallicRoughness.baseColorFactor;\n    };\n    shaderBuilder.addDefine(\n      "HAS_BASE_COLOR_FACTOR",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n\n  var metallicRoughnessTexture = metallicRoughness.metallicRoughnessTexture;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(metallicRoughnessTexture)) {\n    processTexture(\n      shaderBuilder,\n      uniformMap,\n      metallicRoughnessTexture,\n      "u_metallicRoughnessTexture",\n      "METALLIC_ROUGHNESS",\n      defaultTexture\n    );\n  }\n\n  var metallicFactor = metallicRoughness.metallicFactor;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(metallicFactor) &&\n    metallicFactor !== MetallicRoughness.DEFAULT_METALLIC_FACTOR\n  ) {\n    shaderBuilder.addUniform(\n      "float",\n      "u_metallicFactor",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    uniformMap.u_metallicFactor = function () {\n      return metallicRoughness.metallicFactor;\n    };\n    shaderBuilder.addDefine(\n      "HAS_METALLIC_FACTOR",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n\n  var roughnessFactor = metallicRoughness.roughnessFactor;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(roughnessFactor) &&\n    roughnessFactor !== MetallicRoughness.DEFAULT_ROUGHNESS_FACTOR\n  ) {\n    shaderBuilder.addUniform(\n      "float",\n      "u_roughnessFactor",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n    uniformMap.u_roughnessFactor = function () {\n      return metallicRoughness.roughnessFactor;\n    };\n    shaderBuilder.addDefine(\n      "HAS_ROUGHNESS_FACTOR",\n      undefined,\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n  }\n}\n\n// Exposed for testing\nMaterialPipelineStage._processTexture = processTexture;\nMaterialPipelineStage._processTextureTransform = processTextureTransform;\n\n/* harmony default export */ __webpack_exports__["Z"] = (MaterialPipelineStage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///25152\n')},50999:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ModelAlphaOptions; }\n/* harmony export */ });\n/* harmony import */ var _AlphaMode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82075);\n\n\n/**\n * Options for configuring the {@link AlphaPipelineStage}\n *\n * @alias ModelAlphaOptions\n * @constructor\n *\n * @private\n */\nfunction ModelAlphaOptions() {\n  /**\n   * Which render pass will render the model.\n   *\n   * @type {Pass}\n   * @private\n   */\n  this.pass = undefined;\n  /**\n   * Which method to use for handling the alpha channel in the fragment shader.\n   *\n   * @type {AlphaMode}\n   * @private\n   */\n  this.alphaMode = _AlphaMode_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].OPAQUE */ .Z.OPAQUE;\n  /**\n   * When the alpha mode is MASK, this determines the alpha threshold\n   * below which fragments are discarded\n   *\n   * @type {Number}\n   * @private\n   */\n  this.alphaCutoff = undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA5OTkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUF3Qzs7QUFFeEM7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxtQkFBbUIsNEVBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01vZGVsRXhwZXJpbWVudGFsL01vZGVsQWxwaGFPcHRpb25zLmpzPzdlMDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFscGhhTW9kZSBmcm9tIFwiLi4vQWxwaGFNb2RlLmpzXCI7XG5cbi8qKlxuICogT3B0aW9ucyBmb3IgY29uZmlndXJpbmcgdGhlIHtAbGluayBBbHBoYVBpcGVsaW5lU3RhZ2V9XG4gKlxuICogQGFsaWFzIE1vZGVsQWxwaGFPcHRpb25zXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNb2RlbEFscGhhT3B0aW9ucygpIHtcbiAgLyoqXG4gICAqIFdoaWNoIHJlbmRlciBwYXNzIHdpbGwgcmVuZGVyIHRoZSBtb2RlbC5cbiAgICpcbiAgICogQHR5cGUge1Bhc3N9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLnBhc3MgPSB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBXaGljaCBtZXRob2QgdG8gdXNlIGZvciBoYW5kbGluZyB0aGUgYWxwaGEgY2hhbm5lbCBpbiB0aGUgZnJhZ21lbnQgc2hhZGVyLlxuICAgKlxuICAgKiBAdHlwZSB7QWxwaGFNb2RlfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5hbHBoYU1vZGUgPSBBbHBoYU1vZGUuT1BBUVVFO1xuICAvKipcbiAgICogV2hlbiB0aGUgYWxwaGEgbW9kZSBpcyBNQVNLLCB0aGlzIGRldGVybWluZXMgdGhlIGFscGhhIHRocmVzaG9sZFxuICAgKiBiZWxvdyB3aGljaCBmcmFnbWVudHMgYXJlIGRpc2NhcmRlZFxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5hbHBoYUN1dG9mZiA9IHVuZGVmaW5lZDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50999\n')},46521:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ModelExperimental; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(82982);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n/* harmony import */ var _GltfLoader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6366);\n/* harmony import */ var _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60426);\n/* harmony import */ var _ModelExperimentalSceneGraph_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(46238);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(8379);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(68985);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13222);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(86511);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(72248);\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A 3D model. This is a new architecture that is more decoupled than the older {@link Model}. This class is still experimental.\n *\n * Do not call this function directly, instead use the `from` functions to create\n * the Model from your source data type.\n *\n * @alias ModelExperimental\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {ResourceLoader} options.loader The loader responsible for loading the 3D model.\n * @param {Resource} options.resource The Resource to the 3D model.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY]  The 4x4 transformation matrix that transforms the model from model to world coordinates.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Draws the bounding sphere for each draw command in the model.\n * @param {Boolean} [options.cull=true]  Whether or not to cull the model using frustum/horizon culling. If the model is part of a 3D Tiles tileset, this property will always be false, since the 3D Tiles culling system is used.\n * @param {Boolean} [options.opaquePass=Pass.OPAQUE] The pass to use in the {@link DrawCommand} for the opaque portions of the model.\n * @param {Boolean} [options.allowPicking=true] When <code>true</code>, each primitive is pickable with {@link Scene#pick}.\n * @param {CustomShader} [options.customShader] A custom shader. This will add user-defined GLSL code to the vertex and fragment shaders.\n * @param {Boolean} [options.show=true] Whether or not to render the model.\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction ModelExperimental(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.loader", options.loader);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.resource", options.resource);\n  //>>includeEnd(\'debug\');\n\n  /**\n   * The loader used to load resources for this model.\n   *\n   * @type {ResourceLoader}\n   *\n   * @private\n   */\n  this._loader = options.loader;\n  this._resource = options.resource;\n\n  this._modelMatrix = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].IDENTITY */ .Z.IDENTITY);\n\n  this._resourcesLoaded = false;\n  this._drawCommandsBuilt = false;\n\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].defer */ .Z.defer();\n  this._customShader = options.customShader;\n\n  this._texturesLoaded = false;\n\n  this._cull = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.cull, true);\n  this._opaquePass = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.opaquePass, _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].OPAQUE */ .Z.OPAQUE);\n  this._allowPicking = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.allowPicking, true);\n  this._show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.show, true);\n\n  // Keeps track of resources that need to be destroyed when the Model is destroyed.\n  this._resources = [];\n\n  this._boundingSphere = undefined;\n\n  this._debugShowBoundingVolumeDirty = false;\n  this._debugShowBoundingVolume = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    options.debugShowBoundingVolume,\n    false\n  );\n\n  initialize(this);\n}\n\nfunction initialize(model) {\n  var loader = model._loader;\n  var resource = model._resource;\n  var modelMatrix = model._modelMatrix;\n\n  loader.load();\n\n  loader.promise\n    .then(function (loader) {\n      model._sceneGraph = new _ModelExperimentalSceneGraph_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z({\n        model: model,\n        modelComponents: loader.components,\n        modelMatrix: modelMatrix,\n      });\n      model._resourcesLoaded = true;\n    })\n    .otherwise(function () {\n      _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].getFailedLoadFunction */ .Z.getFailedLoadFunction(this, "model", resource);\n    });\n\n  loader.texturesLoadedPromise\n    .then(function () {\n      model._texturesLoaded = true;\n    })\n    .otherwise(function () {\n      _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].getFailedLoadFunction */ .Z.getFailedLoadFunction(this, "model", resource);\n    });\n}\n\nObject.defineProperties(ModelExperimental.prototype, {\n  /**\n   * When <code>true</code>, this model is ready to render, i.e., the external binary, image,\n   * and shader files were downloaded and the WebGL resources were created.  This is set to\n   * <code>true</code> right before {@link ModelExperimental#readyPromise} is resolved.\n   *\n   * @memberof ModelExperimental.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n\n  /**\n   * Gets the promise that will be resolved when this model is ready to render, i.e. when the external resources\n   * have been downloaded and the WebGL resources are created.\n   * <p>\n   * This promise is resolved at the end of the frame before the first frame the model is rendered in.\n   * </p>\n   *\n   * @memberof ModelExperimental.prototype\n   *\n   * @type {Promise.<ModelExperimental>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n\n  /**\n   * Whether or not to cull the model using frustum/horizon culling. If the model is part of a 3D Tiles tileset, this property\n   * will always be false, since the 3D Tiles culling system is used.\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @private\n   */\n  cull: {\n    get: function () {\n      return this._cull;\n    },\n  },\n\n  /**\n   * The pass to use in the {@link DrawCommand} for the opaque portions of the model.\n   *\n   * @type {Pass}\n   * @readonly\n   *\n   * @private\n   */\n  opaquePass: {\n    get: function () {\n      return this._opaquePass;\n    },\n  },\n  /**\n   * The model\'s custom shader if it exists\n   *\n   * @memberof ModelExperimental.prototype\n   *\n   * @type {CustomShader}\n   * @readonly\n   *\n   * @private\n   */\n  customShader: {\n    get: function () {\n      return this._customShader;\n    },\n  },\n\n  /**\n   * When <code>true</code>, each primitive is pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @private\n   */\n  allowPicking: {\n    get: function () {\n      return this._allowPicking;\n    },\n  },\n\n  /**\n   * Gets the model\'s bounding sphere.\n   *\n   * @memberof ModelExperimental.prototype\n   *\n   * @type {BoundingSphere}\n   * @readonly\n   *\n   * @private\n   */\n  boundingSphere: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this._ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n          "The model is not loaded. Use ModelExperimental.readyPromise or wait for ModelExperimental.ready to be true."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      return this._sceneGraph._boundingSphere;\n    },\n  },\n\n  /**\n   * The 4x4 transformation matrix that transforms the model from model to world coordinates.\n   * When this is the identity matrix, the model is drawn in world coordinates, i.e., Earth\'s Cartesian WGS84 coordinates.\n   * Local reference frames can be used by providing a different transformation matrix, like that returned\n   * by {@link Transforms.eastNorthUpToFixedFrame}.\n   *\n   * @type {Matrix4}\n\n   * @default {@link Matrix4.IDENTITY}\n   *\n   * @example\n   * var origin = Cesium.Cartesian3.fromDegrees(-95.0, 40.0, 200000.0);\n   * m.modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(origin);\n   */\n  modelMatrix: {\n    get: function () {\n      return this._modelMatrix;\n    },\n    set: function (value) {\n      this._modelMatrix = value;\n    },\n  },\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the model.\n   * </p>\n   *\n   * @memberof ModelExperimental.prototype\n   *\n   * @type {Boolean}\n   *\n   * @default false\n   */\n  debugShowBoundingVolume: {\n    get: function () {\n      return this._debugShowBoundingVolume;\n    },\n    set: function (value) {\n      if (this._debugShowBoundingVolume !== value) {\n        this._debugShowBoundingVolumeDirty = true;\n      }\n      this._debugShowBoundingVolume = value;\n    },\n  },\n\n  /**\n   * Whether or not to render the model.\n   *\n   * @memberof ModelExperimental.prototype\n   *\n   * @type {Boolean}\n   *\n   * @default true\n   */\n  show: {\n    get: function () {\n      return this._show;\n    },\n    set: function (value) {\n      this._show = value;\n    },\n  },\n});\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {RuntimeError} Failed to load external reference.\n */\nModelExperimental.prototype.update = function (frameState) {\n  // Keep processing the model every frame until the main resources\n  // (buffer views) and textures (which may be loaded asynchronously)\n  // are processed.\n  if (!this._resourcesLoaded || !this._texturesLoaded) {\n    this._loader.process(frameState);\n  }\n\n  // A custom shader may have to load texture uniforms.\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(this._customShader)) {\n    this._customShader.update(frameState);\n  }\n\n  // short-circuit if the model resources aren\'t ready.\n  if (!this._resourcesLoaded) {\n    return;\n  }\n\n  if (!this._drawCommandsBuilt) {\n    this._sceneGraph.buildDrawCommands(frameState);\n    this._drawCommandsBuilt = true;\n\n    var model = this;\n    // Set the model as ready after the first frame render since the user might set up events subscribed to\n    // the post render event, and the model may not be ready for those past the first frame.\n    frameState.afterRender.push(function () {\n      model._ready = true;\n      model._readyPromise.resolve(model);\n    });\n  }\n\n  if (this._debugShowBoundingVolumeDirty) {\n    updateShowBoundingVolume(this._sceneGraph, this._debugShowBoundingVolume);\n    this._debugShowBoundingVolumeDirty = false;\n  }\n\n  // Check for show here because we still want the draw commands to be built so user can instantly see the model\n  // when show is set to true.\n  if (this._show) {\n    frameState.commandList.push.apply(\n      frameState.commandList,\n      this._sceneGraph._drawCommands\n    );\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see ModelExperimental#destroy\n */\nModelExperimental.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * model = model && model.destroy();\n *\n * @see ModelExperimental#isDestroyed\n */\nModelExperimental.prototype.destroy = function () {\n  var loader = this._loader;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(loader)) {\n    loader.destroy();\n  }\n\n  var resources = this._resources;\n  for (var i = 0; i < resources.length; i++) {\n    resources[i].destroy();\n  }\n\n  (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this);\n};\n\n/**\n * <p>\n * Creates a model from a glTF asset.  When the model is ready to render, i.e., when the external binary, image,\n * and shader files are downloaded and the WebGL resources are created, the {@link Model#readyPromise} is resolved.\n * </p>\n * <p>\n * The model can be a traditional glTF asset with a .gltf extension or a Binary glTF using the .glb extension.\n *\n * @param {Object} options Object with the following properties:\n * @param {String|Resource|Uint8Array|Object} options.gltf A Resource/URL to a glTF/glb file, a binary glTF buffer, or a JSON object containing the glTF contents\n * @param {String|Resource} [options.basePath=\'\'] The base path that paths in the glTF JSON are relative to.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 transformation matrix that transforms the model from model to world coordinates.\n * @param {Boolean} [options.incrementallyLoadTextures=true] Determine if textures may continue to stream in after the model is loaded.\n * @param {Boolean} [options.releaseGltfJson=false] When true, the glTF JSON is released once the glTF is loaded. This is is especially useful for cases like 3D Tiles, where each .gltf model is unique and caching the glTF JSON is not effective.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Draws the bounding sphere for each draw command in the model.\n * @param {Boolean} [options.cull=true]  Whether or not to cull the model using frustum/horizon culling. If the model is part of a 3D Tiles tileset, this property will always be false, since the 3D Tiles culling system is used.\n * @param {Boolean} [options.opaquePass=Pass.OPAQUE] The pass to use in the {@link DrawCommand} for the opaque portions of the model.\n * @param {Axis} [options.upAxis=Axis.Y] The up-axis of the glTF model.\n * @param {Axis} [options.forwardAxis=Axis.Z] The forward-axis of the glTF model.\n * @param {Boolean} [options.allowPicking=true] When <code>true</code>, each primitive is pickable with {@link Scene#pick}.\n * @param {CustomShader} [options.customShader] A custom shader. This will add user-defined GLSL code to the vertex and fragment shaders.\n * @param {Boolean} [options.show=true] Whether or not to render the model.\n *\n * @returns {ModelExperimental} The newly created model.\n *\n * @private\n */\nModelExperimental.fromGltf = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("options.gltf", options.gltf);\n  //>>includeEnd(\'debug\');\n\n  var loaderOptions = {\n    releaseGltfJson: options.releaseGltfJson,\n    incrementallyLoadTextures: options.incrementallyLoadTextures,\n    upAxis: options.upAxis,\n    forwardAxis: options.forwardAxis,\n  };\n\n  var gltf = options.gltf;\n\n  var basePath = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.basePath, "");\n  var baseResource = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].createIfNeeded */ .Z.createIfNeeded(basePath);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(gltf.asset)) {\n    loaderOptions.gltfJson = gltf;\n    loaderOptions.baseResource = baseResource;\n    loaderOptions.gltfResource = baseResource;\n  } else if (gltf instanceof Uint8Array) {\n    loaderOptions.typedArray = gltf;\n    loaderOptions.baseResource = baseResource;\n    loaderOptions.gltfResource = baseResource;\n  } else {\n    loaderOptions.gltfResource = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].createIfNeeded */ .Z.createIfNeeded(options.gltf);\n  }\n\n  var loader = new _GltfLoader_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(loaderOptions);\n\n  var modelOptions = {\n    loader: loader,\n    resource: loaderOptions.gltfResource,\n    modelMatrix: options.modelMatrix,\n    debugShowBoundingVolume: options.debugShowBoundingVolume,\n    cull: options.cull,\n    opaquePass: options.opaquePass,\n    allowPicking: options.allowPicking,\n    customShader: options.customShader,\n    show: options.show,\n  };\n  var model = new ModelExperimental(modelOptions);\n\n  return model;\n};\n\nfunction updateShowBoundingVolume(sceneGraph, debugShowBoundingVolume) {\n  var drawCommands = sceneGraph._drawCommands;\n  for (var i = 0; i < drawCommands.length; i++) {\n    drawCommands[i].debugShowBoundingVolume = debugShowBoundingVolume;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///46521\n')},71640:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ModelExperimentalNode; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _InstancingPipelineStage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22086);\n\n\n\n\n/**\n * An in-memory representation of a node as part of\n * the {@link ModelExperimentalSceneGraph}\n *\n * @param {Object} options An object containing the following options:\n * @param {ModelComponents.Node} options.node The corresponding node components from the 3D model\n * @param {Matrix4} options.modelMatrix The model matrix associated with this node.\n *\n * @alias ModelExperimentalNode\n * @constructor\n *\n * @private\n */\nfunction ModelExperimentalNode(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.node", options.node);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.modelMatrix", options.modelMatrix);\n  //>>includeEnd(\'debug\');\n\n  /**\n   * The model components node associated with this scene graph node.\n   *\n   * @type {ModelComponents.Node}\n   * @readonly\n   *\n   * @private\n   */\n  this.node = options.node;\n\n  /**\n   * The model matrix associated with this node.\n   *\n   * @type {Matrix4}\n   * @readonly\n   *\n   * @private\n   */\n  this.modelMatrix = options.modelMatrix;\n\n  /**\n   * Pipeline stages to apply across all the mesh primitives of this node. This\n   * is an array of classes, each with a static method called\n   * <code>process()</code>\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.pipelineStages = [];\n\n  /**\n   * The mesh primitives that belong to this node\n   *\n   * @type {ModelExperimentalPrimitive[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.runtimePrimitives = [];\n\n  initialize(this);\n}\n\nfunction initialize(runtimeNode) {\n  var node = runtimeNode.node;\n  var pipelineStages = runtimeNode.pipelineStages;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(node.instances)) {\n    pipelineStages.push(_InstancingPipelineStage_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);\n  }\n\n  return;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzE2NDAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNjO0FBQ1Y7QUFDdUI7QUFDbkU7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLHNCQUFzQjtBQUNqQyxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZixZQUFZLDBFQUFZLFVBQVUsZ0dBQXlCO0FBQzNEO0FBQ0EsRUFBRSwyRkFBbUI7QUFDckIsRUFBRSwyRkFBbUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLE1BQU0scUVBQU87QUFDYix3QkFBd0IsNEVBQXVCO0FBQy9DOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTW9kZWxFeHBlcmltZW50YWwvTW9kZWxFeHBlcmltZW50YWxOb2RlLmpzP2Q0Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENoZWNrIGZyb20gXCIuLi8uLi9Db3JlL0NoZWNrLmpzXCI7XG5pbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuLi8uLi9Db3JlL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uLy4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuaW1wb3J0IEluc3RhbmNpbmdQaXBlbGluZVN0YWdlIGZyb20gXCIuL0luc3RhbmNpbmdQaXBlbGluZVN0YWdlLmpzXCI7XG4vKipcbiAqIEFuIGluLW1lbW9yeSByZXByZXNlbnRhdGlvbiBvZiBhIG5vZGUgYXMgcGFydCBvZlxuICogdGhlIHtAbGluayBNb2RlbEV4cGVyaW1lbnRhbFNjZW5lR3JhcGh9XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGZvbGxvd2luZyBvcHRpb25zOlxuICogQHBhcmFtIHtNb2RlbENvbXBvbmVudHMuTm9kZX0gb3B0aW9ucy5ub2RlIFRoZSBjb3JyZXNwb25kaW5nIG5vZGUgY29tcG9uZW50cyBmcm9tIHRoZSAzRCBtb2RlbFxuICogQHBhcmFtIHtNYXRyaXg0fSBvcHRpb25zLm1vZGVsTWF0cml4IFRoZSBtb2RlbCBtYXRyaXggYXNzb2NpYXRlZCB3aXRoIHRoaXMgbm9kZS5cbiAqXG4gKiBAYWxpYXMgTW9kZWxFeHBlcmltZW50YWxOb2RlXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNb2RlbEV4cGVyaW1lbnRhbE5vZGUob3B0aW9ucykge1xuICBvcHRpb25zID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMsIGRlZmF1bHRWYWx1ZS5FTVBUWV9PQkpFQ1QpO1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay50eXBlT2Yub2JqZWN0KFwib3B0aW9ucy5ub2RlXCIsIG9wdGlvbnMubm9kZSk7XG4gIENoZWNrLnR5cGVPZi5vYmplY3QoXCJvcHRpb25zLm1vZGVsTWF0cml4XCIsIG9wdGlvbnMubW9kZWxNYXRyaXgpO1xuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICAvKipcbiAgICogVGhlIG1vZGVsIGNvbXBvbmVudHMgbm9kZSBhc3NvY2lhdGVkIHdpdGggdGhpcyBzY2VuZSBncmFwaCBub2RlLlxuICAgKlxuICAgKiBAdHlwZSB7TW9kZWxDb21wb25lbnRzLk5vZGV9XG4gICAqIEByZWFkb25seVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5ub2RlID0gb3B0aW9ucy5ub2RlO1xuXG4gIC8qKlxuICAgKiBUaGUgbW9kZWwgbWF0cml4IGFzc29jaWF0ZWQgd2l0aCB0aGlzIG5vZGUuXG4gICAqXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKiBAcmVhZG9ubHlcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRoaXMubW9kZWxNYXRyaXggPSBvcHRpb25zLm1vZGVsTWF0cml4O1xuXG4gIC8qKlxuICAgKiBQaXBlbGluZSBzdGFnZXMgdG8gYXBwbHkgYWNyb3NzIGFsbCB0aGUgbWVzaCBwcmltaXRpdmVzIG9mIHRoaXMgbm9kZS4gVGhpc1xuICAgKiBpcyBhbiBhcnJheSBvZiBjbGFzc2VzLCBlYWNoIHdpdGggYSBzdGF0aWMgbWV0aG9kIGNhbGxlZFxuICAgKiA8Y29kZT5wcm9jZXNzKCk8L2NvZGU+XG4gICAqXG4gICAqIEB0eXBlIHtPYmplY3RbXX1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLnBpcGVsaW5lU3RhZ2VzID0gW107XG5cbiAgLyoqXG4gICAqIFRoZSBtZXNoIHByaW1pdGl2ZXMgdGhhdCBiZWxvbmcgdG8gdGhpcyBub2RlXG4gICAqXG4gICAqIEB0eXBlIHtNb2RlbEV4cGVyaW1lbnRhbFByaW1pdGl2ZVtdfVxuICAgKiBAcmVhZG9ubHlcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRoaXMucnVudGltZVByaW1pdGl2ZXMgPSBbXTtcblxuICBpbml0aWFsaXplKHRoaXMpO1xufVxuXG5mdW5jdGlvbiBpbml0aWFsaXplKHJ1bnRpbWVOb2RlKSB7XG4gIHZhciBub2RlID0gcnVudGltZU5vZGUubm9kZTtcbiAgdmFyIHBpcGVsaW5lU3RhZ2VzID0gcnVudGltZU5vZGUucGlwZWxpbmVTdGFnZXM7XG5cbiAgaWYgKGRlZmluZWQobm9kZS5pbnN0YW5jZXMpKSB7XG4gICAgcGlwZWxpbmVTdGFnZXMucHVzaChJbnN0YW5jaW5nUGlwZWxpbmVTdGFnZSk7XG4gIH1cblxuICByZXR1cm47XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///71640\n')},8942:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ModelExperimentalPrimitive; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _CustomShaderStage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(85262);\n/* harmony import */ var _CustomShaderMode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7377);\n/* harmony import */ var _AlphaPipelineStage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(66913);\n/* harmony import */ var _GeometryPipelineStage_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97943);\n/* harmony import */ var _LightingPipelineStage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(93362);\n/* harmony import */ var _MaterialPipelineStage_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(25152);\n/* harmony import */ var _PickingPipelineStage_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(39522);\n\n\n\n\n\n\n\n\n\n\n\n/**\n * In memory representation of a single primitive, that is, a primitive\n * and its corresponding mesh.\n *\n * @param {Object} options An object containing the following options:\n * @param {ModelComponents.Primitive} options.primitive The primitive component.\n * @param {ModelExperimental} options.model The {@link ModelExperimental} this primitive belongs to.\n *\n * @alias ModelExperimentalPrimitive\n * @constructor\n *\n * @private\n */\nfunction ModelExperimentalPrimitive(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.primitive", options.primitive);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.model", options.model);\n  //>>includeEnd(\'debug\');\n\n  /**\n   * The primitive component associated with this primitive.\n   *\n   * @type {ModelComponents.Primitive}\n   *\n   * @private\n   */\n  this.primitive = options.primitive;\n\n  /**\n   * A reference to the model\n   *\n   * @type {ModelExperimental}\n   *\n   * @private\n   */\n  this.model = options.model;\n\n  /**\n   * Pipeline stages to apply to this primitive. This\n   * is an array of classes, each with a static method called\n   * <code>process()</code>\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.pipelineStages = [];\n\n  initialize(this);\n}\n\nfunction initialize(runtimePrimitive) {\n  var pipelineStages = runtimePrimitive.pipelineStages;\n  pipelineStages.push(_GeometryPipelineStage_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z);\n\n  var model = runtimePrimitive.model;\n  var customShader = model.customShader;\n  var hasCustomShader = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(customShader);\n  var hasCustomFragmentShader =\n    hasCustomShader && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(customShader.fragmentShaderText);\n  var materialsEnabled =\n    !hasCustomFragmentShader ||\n    customShader.mode !== _CustomShaderMode_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].REPLACE_MATERIAL */ .Z.REPLACE_MATERIAL;\n\n  if (materialsEnabled) {\n    pipelineStages.push(_MaterialPipelineStage_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z);\n  }\n\n  if (hasCustomShader) {\n    pipelineStages.push(_CustomShaderStage_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z);\n  }\n\n  pipelineStages.push(_LightingPipelineStage_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z);\n\n  if (model.allowPicking) {\n    pipelineStages.push(_PickingPipelineStage_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z);\n  }\n\n  pipelineStages.push(_AlphaPipelineStage_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z);\n\n  return;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODk0Mi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ2M7QUFDVjtBQUNXO0FBQ0Y7QUFDSTtBQUNNO0FBQ0E7QUFDQTtBQUNGOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLDJCQUEyQjtBQUN0QyxXQUFXLG1CQUFtQixtQkFBbUIseUJBQXlCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2YsWUFBWSwwRUFBWSxVQUFVLGdHQUF5QjtBQUMzRDtBQUNBLEVBQUUsMkZBQW1CO0FBQ3JCLEVBQUUsMkZBQW1CO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNCQUFzQiwwRUFBcUI7O0FBRTNDO0FBQ0E7QUFDQSx3QkFBd0IscUVBQU87QUFDL0I7QUFDQSx1QkFBdUIscUVBQU87QUFDOUI7QUFDQTtBQUNBLDBCQUEwQix1R0FBaUM7O0FBRTNEO0FBQ0Esd0JBQXdCLDBFQUFxQjtBQUM3Qzs7QUFFQTtBQUNBLHdCQUF3QixzRUFBaUI7QUFDekM7O0FBRUEsc0JBQXNCLDBFQUFxQjs7QUFFM0M7QUFDQSx3QkFBd0IseUVBQW9CO0FBQzVDOztBQUVBLHNCQUFzQix1RUFBa0I7O0FBRXhDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTW9kZWxFeHBlcmltZW50YWwvTW9kZWxFeHBlcmltZW50YWxQcmltaXRpdmUuanM/ZjQ0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hlY2sgZnJvbSBcIi4uLy4uL0NvcmUvQ2hlY2suanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4uLy4uL0NvcmUvZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgQ3VzdG9tU2hhZGVyU3RhZ2UgZnJvbSBcIi4vQ3VzdG9tU2hhZGVyU3RhZ2UuanNcIjtcbmltcG9ydCBDdXN0b21TaGFkZXJNb2RlIGZyb20gXCIuL0N1c3RvbVNoYWRlck1vZGUuanNcIjtcbmltcG9ydCBBbHBoYVBpcGVsaW5lU3RhZ2UgZnJvbSBcIi4vQWxwaGFQaXBlbGluZVN0YWdlLmpzXCI7XG5pbXBvcnQgR2VvbWV0cnlQaXBlbGluZVN0YWdlIGZyb20gXCIuL0dlb21ldHJ5UGlwZWxpbmVTdGFnZS5qc1wiO1xuaW1wb3J0IExpZ2h0aW5nUGlwZWxpbmVTdGFnZSBmcm9tIFwiLi9MaWdodGluZ1BpcGVsaW5lU3RhZ2UuanNcIjtcbmltcG9ydCBNYXRlcmlhbFBpcGVsaW5lU3RhZ2UgZnJvbSBcIi4vTWF0ZXJpYWxQaXBlbGluZVN0YWdlLmpzXCI7XG5pbXBvcnQgUGlja2luZ1BpcGVsaW5lU3RhZ2UgZnJvbSBcIi4vUGlja2luZ1BpcGVsaW5lU3RhZ2UuanNcIjtcblxuLyoqXG4gKiBJbiBtZW1vcnkgcmVwcmVzZW50YXRpb24gb2YgYSBzaW5nbGUgcHJpbWl0aXZlLCB0aGF0IGlzLCBhIHByaW1pdGl2ZVxuICogYW5kIGl0cyBjb3JyZXNwb25kaW5nIG1lc2guXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGZvbGxvd2luZyBvcHRpb25zOlxuICogQHBhcmFtIHtNb2RlbENvbXBvbmVudHMuUHJpbWl0aXZlfSBvcHRpb25zLnByaW1pdGl2ZSBUaGUgcHJpbWl0aXZlIGNvbXBvbmVudC5cbiAqIEBwYXJhbSB7TW9kZWxFeHBlcmltZW50YWx9IG9wdGlvbnMubW9kZWwgVGhlIHtAbGluayBNb2RlbEV4cGVyaW1lbnRhbH0gdGhpcyBwcmltaXRpdmUgYmVsb25ncyB0by5cbiAqXG4gKiBAYWxpYXMgTW9kZWxFeHBlcmltZW50YWxQcmltaXRpdmVcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vZGVsRXhwZXJpbWVudGFsUHJpbWl0aXZlKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcIm9wdGlvbnMucHJpbWl0aXZlXCIsIG9wdGlvbnMucHJpbWl0aXZlKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcIm9wdGlvbnMubW9kZWxcIiwgb3B0aW9ucy5tb2RlbCk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIC8qKlxuICAgKiBUaGUgcHJpbWl0aXZlIGNvbXBvbmVudCBhc3NvY2lhdGVkIHdpdGggdGhpcyBwcmltaXRpdmUuXG4gICAqXG4gICAqIEB0eXBlIHtNb2RlbENvbXBvbmVudHMuUHJpbWl0aXZlfVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5wcmltaXRpdmUgPSBvcHRpb25zLnByaW1pdGl2ZTtcblxuICAvKipcbiAgICogQSByZWZlcmVuY2UgdG8gdGhlIG1vZGVsXG4gICAqXG4gICAqIEB0eXBlIHtNb2RlbEV4cGVyaW1lbnRhbH1cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRoaXMubW9kZWwgPSBvcHRpb25zLm1vZGVsO1xuXG4gIC8qKlxuICAgKiBQaXBlbGluZSBzdGFnZXMgdG8gYXBwbHkgdG8gdGhpcyBwcmltaXRpdmUuIFRoaXNcbiAgICogaXMgYW4gYXJyYXkgb2YgY2xhc3NlcywgZWFjaCB3aXRoIGEgc3RhdGljIG1ldGhvZCBjYWxsZWRcbiAgICogPGNvZGU+cHJvY2VzcygpPC9jb2RlPlxuICAgKlxuICAgKiBAdHlwZSB7T2JqZWN0W119XG4gICAqIEByZWFkb25seVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5waXBlbGluZVN0YWdlcyA9IFtdO1xuXG4gIGluaXRpYWxpemUodGhpcyk7XG59XG5cbmZ1bmN0aW9uIGluaXRpYWxpemUocnVudGltZVByaW1pdGl2ZSkge1xuICB2YXIgcGlwZWxpbmVTdGFnZXMgPSBydW50aW1lUHJpbWl0aXZlLnBpcGVsaW5lU3RhZ2VzO1xuICBwaXBlbGluZVN0YWdlcy5wdXNoKEdlb21ldHJ5UGlwZWxpbmVTdGFnZSk7XG5cbiAgdmFyIG1vZGVsID0gcnVudGltZVByaW1pdGl2ZS5tb2RlbDtcbiAgdmFyIGN1c3RvbVNoYWRlciA9IG1vZGVsLmN1c3RvbVNoYWRlcjtcbiAgdmFyIGhhc0N1c3RvbVNoYWRlciA9IGRlZmluZWQoY3VzdG9tU2hhZGVyKTtcbiAgdmFyIGhhc0N1c3RvbUZyYWdtZW50U2hhZGVyID1cbiAgICBoYXNDdXN0b21TaGFkZXIgJiYgZGVmaW5lZChjdXN0b21TaGFkZXIuZnJhZ21lbnRTaGFkZXJUZXh0KTtcbiAgdmFyIG1hdGVyaWFsc0VuYWJsZWQgPVxuICAgICFoYXNDdXN0b21GcmFnbWVudFNoYWRlciB8fFxuICAgIGN1c3RvbVNoYWRlci5tb2RlICE9PSBDdXN0b21TaGFkZXJNb2RlLlJFUExBQ0VfTUFURVJJQUw7XG5cbiAgaWYgKG1hdGVyaWFsc0VuYWJsZWQpIHtcbiAgICBwaXBlbGluZVN0YWdlcy5wdXNoKE1hdGVyaWFsUGlwZWxpbmVTdGFnZSk7XG4gIH1cblxuICBpZiAoaGFzQ3VzdG9tU2hhZGVyKSB7XG4gICAgcGlwZWxpbmVTdGFnZXMucHVzaChDdXN0b21TaGFkZXJTdGFnZSk7XG4gIH1cblxuICBwaXBlbGluZVN0YWdlcy5wdXNoKExpZ2h0aW5nUGlwZWxpbmVTdGFnZSk7XG5cbiAgaWYgKG1vZGVsLmFsbG93UGlja2luZykge1xuICAgIHBpcGVsaW5lU3RhZ2VzLnB1c2goUGlja2luZ1BpcGVsaW5lU3RhZ2UpO1xuICB9XG5cbiAgcGlwZWxpbmVTdGFnZXMucHVzaChBbHBoYVBpcGVsaW5lU3RhZ2UpO1xuXG4gIHJldHVybjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8942\n')},46238:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ModelExperimentalSceneGraph; }\n/* harmony export */ });\n/* harmony import */ var _buildDrawCommand_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32347);\n/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72248);\n/* harmony import */ var _ModelExperimentalPrimitive_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8942);\n/* harmony import */ var _ModelExperimentalNode_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(71640);\n/* harmony import */ var _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(60426);\n/* harmony import */ var _ModelRenderResources_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(29265);\n/* harmony import */ var _NodeRenderResources_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(6095);\n/* harmony import */ var _PrimitiveRenderResources_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(37627);\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * An in memory representation of the scene graph for a {@link ModelExperimental}\n *\n * @param {Object} options An object containing the following options\n * @param {ModelExperimental} options.model The model this scene graph belongs to\n * @param {ModelComponents} options.modelComponents The model components describing the model\n *\n * @alias ModelExperimentalSceneGraph\n * @constructor\n *\n * @private\n */\nfunction ModelExperimentalSceneGraph(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("options.model", options.model);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("options.modelComponents", options.modelComponents);\n  //>>includeEnd(\'debug\');\n\n  /**\n   * A reference to the {@link ModelExperimental} that owns this scene graph.\n   *\n   * @type {ModelExperimental}\n   * @readonly\n   *\n   * @private\n   */\n  this._model = options.model;\n\n  /**\n   * The model components that represent the contents of the 3D model file.\n   *\n   * @type {ModelComponents}\n   * @readonly\n   *\n   * @private\n   */\n  this._modelComponents = options.modelComponents;\n\n  /**\n   * Pipeline stages to apply across the model.\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this._pipelineStages = [];\n\n  /**\n   * The runtime nodes that make up the scene graph\n   *\n   * @type {ModelExperimentalNode[]}\n   * @readonly\n   *\n   * @private\n   */\n  this._runtimeNodes = [];\n\n  /**\n   * Once computed, the {@link DrawCommand}s that are used to render this\n   * scene graph are stored here.\n   *\n   * @type {DrawCommand[]}\n   * @readonly\n   *\n   * @private\n   */\n  this._drawCommands = [];\n\n  /**\n   * The bounding sphere containing all the primitives in the scene graph.\n   *\n   * @type {BoundingSphere}\n   * @readonly\n   *\n   * @private\n   */\n  this._boundingSphere = undefined;\n\n  /**\n   * The array of bounding spheres of all the primitives in the scene graph.\n   *\n   * @type {BoundingSphere[]}\n   * @readonly\n   *\n   * @private\n   */\n  this._boundingSpheres = [];\n\n  initialize(this);\n}\n\nfunction initialize(sceneGraph) {\n  var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(sceneGraph._model.modelMatrix);\n  var scene = sceneGraph._modelComponents.scene;\n\n  _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].correctModelMatrix */ .Z.correctModelMatrix(\n    modelMatrix,\n    scene.upAxis,\n    scene.forwardAxis\n  );\n\n  var rootNodes = sceneGraph._modelComponents.scene.nodes;\n  for (var i = 0; i < rootNodes.length; i++) {\n    var rootNode = sceneGraph._modelComponents.scene.nodes[i];\n    var rootNodeModelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].multiply */ .Z.multiply(\n      modelMatrix,\n      _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].getNodeTransform */ .Z.getNodeTransform(rootNode),\n      new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z()\n    );\n\n    traverseSceneGraph(sceneGraph, rootNode, rootNodeModelMatrix);\n  }\n}\n\n/**\n * Recursively traverse through the nodes in the scene graph, using depth-first\n * post-order traversal.\n *\n * @param {ModelSceneGraph} sceneGraph The scene graph\n * @param {ModelComponents.Node} node The current node\n * @param {Matrix4} modelMatrix The current computed model matrix for this node.\n *\n * @private\n */\nfunction traverseSceneGraph(sceneGraph, node, modelMatrix) {\n  // No processing needs to happen if node has no children and no mesh primitives.\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(node.children) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(node.primitives)) {\n    return;\n  }\n\n  // Traverse through scene graph.\n  var i;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(node.children)) {\n    for (i = 0; i < node.children.length; i++) {\n      var childNode = node.children[i];\n      var childNodeModelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].multiply */ .Z.multiply(\n        modelMatrix,\n        _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].getNodeTransform */ .Z.getNodeTransform(childNode),\n        new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z()\n      );\n\n      traverseSceneGraph(sceneGraph, childNode, childNodeModelMatrix);\n    }\n  }\n\n  // Process node and mesh primitives.\n  var runtimeNode = new _ModelExperimentalNode_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n    node: node,\n    modelMatrix: modelMatrix,\n  });\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(node.primitives)) {\n    for (i = 0; i < node.primitives.length; i++) {\n      runtimeNode.runtimePrimitives.push(\n        new _ModelExperimentalPrimitive_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z({\n          primitive: node.primitives[i],\n          model: sceneGraph._model,\n        })\n      );\n    }\n  }\n\n  sceneGraph._runtimeNodes.push(runtimeNode);\n}\n\n/**\n * Generates the draw commands for each primitive in the model.\n *\n * @param {FrameState} frameState The current frame state. This is needed to\n * allocate GPU resources as needed.\n *\n * @private\n */\nModelExperimentalSceneGraph.prototype.buildDrawCommands = function (\n  frameState\n) {\n  var modelRenderResources = new _ModelRenderResources_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(this._model);\n\n  var i, j, k;\n  for (i = 0; i < this._runtimeNodes.length; i++) {\n    var runtimeNode = this._runtimeNodes[i];\n\n    var nodeRenderResources = new _NodeRenderResources_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z(\n      modelRenderResources,\n      runtimeNode\n    );\n\n    for (j = 0; j < runtimeNode.pipelineStages.length; j++) {\n      var nodePipelineStage = runtimeNode.pipelineStages[j];\n\n      nodePipelineStage.process(\n        nodeRenderResources,\n        runtimeNode.node,\n        frameState\n      );\n    }\n\n    for (j = 0; j < runtimeNode.runtimePrimitives.length; j++) {\n      var runtimePrimitive = runtimeNode.runtimePrimitives[j];\n\n      var primitiveRenderResources = new _PrimitiveRenderResources_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n        nodeRenderResources,\n        runtimePrimitive\n      );\n\n      for (k = 0; k < runtimePrimitive.pipelineStages.length; k++) {\n        var primitivePipelineStage = runtimePrimitive.pipelineStages[k];\n\n        primitivePipelineStage.process(\n          primitiveRenderResources,\n          runtimePrimitive.primitive,\n          frameState\n        );\n      }\n\n      this._boundingSpheres.push(primitiveRenderResources.boundingSphere);\n\n      var drawCommand = (0,_buildDrawCommand_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(primitiveRenderResources, frameState);\n      this._drawCommands.push(drawCommand);\n    }\n  }\n  this._boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromBoundingSpheres */ .Z.fromBoundingSpheres(\n    this._boundingSpheres\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///46238\n')},60426:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ModelExperimentalUtility; }\n/* harmony export */ });\n/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87811);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9407);\n/* harmony import */ var _Axis_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66577);\n\n\n\n\n\n\n\n\n/**\n * Utility functions for {@link ModelExperimental}.\n *\n * @private\n */\nfunction ModelExperimentalUtility() {}\n\n/**\n * Create a function for reporting when a model fails to load\n *\n * @param {ModelExperimental} model The model to report about\n * @param {String} type The type of object to report about\n * @param {String} path The URI of the model file\n * @return {Function} An error function that throws an error for the failed model\n *\n * @private\n */\nModelExperimentalUtility.getFailedLoadFunction = function (model, type, path) {\n  return function (error) {\n    var message = "Failed to load " + type + ": " + path;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(error)) {\n      message += "\\n" + error.message;\n    }\n    model._readyPromise.reject(new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(message));\n  };\n};\n\n/**\n * Get a transformation matrix from a node in the model.\n *\n * @param {ModelComponents.Node} node The node components\n * @return {Matrix4} The computed transformation matrix. If no transformation matrix or parameters are specified, this will be the identity matrix.\n *\n * @private\n */\nModelExperimentalUtility.getNodeTransform = function (node) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(node.matrix)) {\n    return node.matrix;\n  }\n\n  return _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromTranslationQuaternionRotationScale */ .Z.fromTranslationQuaternionRotationScale(\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(node.translation) ? node.translation : _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ZERO */ .Z.ZERO,\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(node.rotation) ? node.rotation : _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].IDENTITY */ .Z.IDENTITY,\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(node.scale) ? node.scale : _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ONE */ .Z.ONE\n  );\n};\n\n/**\n * Find an attribute by semantic such as POSITION or TANGENT.\n *\n * @param {ModelComponents.Primitive|ModelComponents.Instances} object The primitive components or instances object\n * @param {VertexAttributeSemantic|InstanceAttributeSemantic} semantic The semantic to search for\n * @param {Number} setIndex The set index of the semantic. May be undefined for some semantics (POSITION, NORMAL, TRANSLATION, ROTATION, for example)\n * @return {ModelComponents.Attribute} The selected attribute, or undefined if not found.\n *\n * @private\n */\nModelExperimentalUtility.getAttributeBySemantic = function (\n  object,\n  semantic,\n  setIndex\n) {\n  var attributes = object.attributes;\n  var attributesLength = attributes.length;\n  for (var i = 0; i < attributesLength; ++i) {\n    var attribute = attributes[i];\n    var matchesSetIndex = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(setIndex)\n      ? attribute.setIndex === setIndex\n      : true;\n    if (attribute.semantic === semantic && matchesSetIndex) {\n      return attribute;\n    }\n  }\n};\n\nvar cartesianMaxScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar cartesianMinScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n/**\n * Create a bounding sphere from a primitive\'s POSITION attribute and model\n * matrix.\n *\n * @param {ModelComponents.Primitive} primitive The primitive components.\n * @param {Matrix4} modelMatrix The primitive\'s model matrix.\n * @param {Cartesian3} [instancingTranslationMax] The component-wise maximum value of the instancing translation attribute.\n * @param {Cartesian3} [instancingTranslationMin] The component-wise minimum value of the instancing translation attribute.\n */\nModelExperimentalUtility.createBoundingSphere = function (\n  primitive,\n  modelMatrix,\n  instancingTranslationMax,\n  instancingTranslationMin\n) {\n  var positionGltfAttribute = ModelExperimentalUtility.getAttributeBySemantic(\n    primitive,\n    "POSITION"\n  );\n\n  var positionMax = positionGltfAttribute.max;\n  var positionMin = positionGltfAttribute.min;\n\n  var boundingSphere;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(instancingTranslationMax) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(instancingTranslationMin)) {\n    var computedMin = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(\n      positionMin,\n      instancingTranslationMin,\n      cartesianMinScratch\n    );\n    var computedMax = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].add */ .Z.add(\n      positionMax,\n      instancingTranslationMax,\n      cartesianMaxScratch\n    );\n    boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromCornerPoints */ .Z.fromCornerPoints(computedMin, computedMax);\n  } else {\n    boundingSphere = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromCornerPoints */ .Z.fromCornerPoints(positionMin, positionMax);\n  }\n\n  _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].transform */ .Z.transform(boundingSphere, modelMatrix, boundingSphere);\n  return boundingSphere;\n};\n\n/**\n * Model matrices in a model file (e.g. glTF) are typically in a different\n * coordinate system, such as with y-up instead of z-up. This method adjusts\n * the matrix so z is up, x is forward.\n *\n * @param {Matrix4} modelMatrix The original model matrix. This will be updated in place\n * @param {Axis} upAxis The original up direction\n * @param {Axis} forwardAxis The original forward direction\n *\n * @private\n */\nModelExperimentalUtility.correctModelMatrix = function (\n  modelMatrix,\n  upAxis,\n  forwardAxis\n) {\n  if (upAxis === _Axis_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].Y */ .Z.Y) {\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(modelMatrix, _Axis_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].Y_UP_TO_Z_UP */ .Z.Y_UP_TO_Z_UP, modelMatrix);\n  } else if (upAxis === _Axis_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].X */ .Z.X) {\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(modelMatrix, _Axis_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].X_UP_TO_Z_UP */ .Z.X_UP_TO_Z_UP, modelMatrix);\n  }\n\n  if (forwardAxis === _Axis_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].Z */ .Z.Z) {\n    // glTF 2.0 has a Z-forward convention that must be adapted here to X-forward.\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(modelMatrix, _Axis_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].Z_UP_TO_X_UP */ .Z.Z_UP_TO_X_UP, modelMatrix);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///60426\n')},12918:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ModelLightingOptions; }\n/* harmony export */ });\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _LightingModel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84775);\n\n\n\n/**\n * Options for configuring the {@link LightingPipelineStage}\n *\n * @param {Object} options An object containing the following options\n * @param {LightingModel} [options.lightingModel=LightingModel.UNLIT] The lighting model to use\n *\n * @alias ModelLightingOptions\n * @constructor\n *\n * @private\n */\nfunction ModelLightingOptions(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  /**\n   * The lighting model to use, such as UNLIT or PBR. This is determined by\n   * the primitive\'s material.\n   *\n   * @type {LightingModel}\n   *\n   * @private\n   */\n  this.lightingModel = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.lightingModel, _LightingModel_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNLIT */ .Z.UNLIT);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI5MTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0Q7QUFDUDs7QUFFL0M7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2YsWUFBWSwwRUFBWSxVQUFVLGdHQUF5Qjs7QUFFM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDBFQUFZLHdCQUF3Qiw4RUFBbUI7QUFDOUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTW9kZWxFeHBlcmltZW50YWwvTW9kZWxMaWdodGluZ09wdGlvbnMuanM/MGI1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuLi8uLi9Db3JlL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IExpZ2h0aW5nTW9kZWwgZnJvbSBcIi4vTGlnaHRpbmdNb2RlbC5qc1wiO1xuXG4vKipcbiAqIE9wdGlvbnMgZm9yIGNvbmZpZ3VyaW5nIHRoZSB7QGxpbmsgTGlnaHRpbmdQaXBlbGluZVN0YWdlfVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBmb2xsb3dpbmcgb3B0aW9uc1xuICogQHBhcmFtIHtMaWdodGluZ01vZGVsfSBbb3B0aW9ucy5saWdodGluZ01vZGVsPUxpZ2h0aW5nTW9kZWwuVU5MSVRdIFRoZSBsaWdodGluZyBtb2RlbCB0byB1c2VcbiAqXG4gKiBAYWxpYXMgTW9kZWxMaWdodGluZ09wdGlvbnNcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vZGVsTGlnaHRpbmdPcHRpb25zKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcblxuICAvKipcbiAgICogVGhlIGxpZ2h0aW5nIG1vZGVsIHRvIHVzZSwgc3VjaCBhcyBVTkxJVCBvciBQQlIuIFRoaXMgaXMgZGV0ZXJtaW5lZCBieVxuICAgKiB0aGUgcHJpbWl0aXZlJ3MgbWF0ZXJpYWwuXG4gICAqXG4gICAqIEB0eXBlIHtMaWdodGluZ01vZGVsfVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5saWdodGluZ01vZGVsID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMubGlnaHRpbmdNb2RlbCwgTGlnaHRpbmdNb2RlbC5VTkxJVCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12918\n')},29265:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ModelRenderResources; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Renderer_ShaderBuilder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62099);\n\n\n\n/**\n * Model render resources are for setting details that are consistent across\n * the entire model.\n *\n * @constructor\n * @param {ModelExperimental} model The model that will be rendered\n *\n * @private\n */\nfunction ModelRenderResources(model) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("model", model);\n  //>>includeEnd(\'debug\');\n\n  /**\n   * An object used to build a shader incrementally. Each pipeline stage\n   * may add lines of shader code to this object.\n   *\n   * @type {ShaderBuilder}\n   * @readonly\n   *\n   * @private\n   */\n  this.shaderBuilder = new _Renderer_ShaderBuilder_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  /**\n   * A reference to the model.\n   *\n   * @type {ModelExperimental}\n   * @readonly\n   *\n   * @private\n   */\n  this.model = model;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkyNjUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDb0I7O0FBRTVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QjtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0EsRUFBRSwyRkFBbUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMkVBQWE7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9Nb2RlbEV4cGVyaW1lbnRhbC9Nb2RlbFJlbmRlclJlc291cmNlcy5qcz9mOTQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGVjayBmcm9tIFwiLi4vLi4vQ29yZS9DaGVjay5qc1wiO1xuaW1wb3J0IFNoYWRlckJ1aWxkZXIgZnJvbSBcIi4uLy4uL1JlbmRlcmVyL1NoYWRlckJ1aWxkZXIuanNcIjtcblxuLyoqXG4gKiBNb2RlbCByZW5kZXIgcmVzb3VyY2VzIGFyZSBmb3Igc2V0dGluZyBkZXRhaWxzIHRoYXQgYXJlIGNvbnNpc3RlbnQgYWNyb3NzXG4gKiB0aGUgZW50aXJlIG1vZGVsLlxuICpcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtNb2RlbEV4cGVyaW1lbnRhbH0gbW9kZWwgVGhlIG1vZGVsIHRoYXQgd2lsbCBiZSByZW5kZXJlZFxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vZGVsUmVuZGVyUmVzb3VyY2VzKG1vZGVsKSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5vYmplY3QoXCJtb2RlbFwiLCBtb2RlbCk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIC8qKlxuICAgKiBBbiBvYmplY3QgdXNlZCB0byBidWlsZCBhIHNoYWRlciBpbmNyZW1lbnRhbGx5LiBFYWNoIHBpcGVsaW5lIHN0YWdlXG4gICAqIG1heSBhZGQgbGluZXMgb2Ygc2hhZGVyIGNvZGUgdG8gdGhpcyBvYmplY3QuXG4gICAqXG4gICAqIEB0eXBlIHtTaGFkZXJCdWlsZGVyfVxuICAgKiBAcmVhZG9ubHlcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRoaXMuc2hhZGVyQnVpbGRlciA9IG5ldyBTaGFkZXJCdWlsZGVyKCk7XG4gIC8qKlxuICAgKiBBIHJlZmVyZW5jZSB0byB0aGUgbW9kZWwuXG4gICAqXG4gICAqIEB0eXBlIHtNb2RlbEV4cGVyaW1lbnRhbH1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLm1vZGVsID0gbW9kZWw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29265\n')},6095:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ NodeRenderResources; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n\n\n/**\n * A model is made up of one or more nodes in the scene graph. Some details\n * such as instancing are computed on a per-node basis. This class provides\n * a place to store such details. It also inherits some properties from\n * the model render resources.\n *\n * @constructor\n *\n * @param {ModelRenderResources} modelRenderResources The model resources to inherit\n * @param {ModelExperimentalNode} runtimeNode The in-memory representation of the scene graph node.\n *\n * @private\n */\nfunction NodeRenderResources(modelRenderResources, runtimeNode) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("modelRenderResources", modelRenderResources);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("runtimeNode", runtimeNode);\n  //>>includeEnd(\'debug\');\n\n  // Properties inherited from the ModelRenderResources.\n  /**\n   * A reference to the model Inherited from the model render resources.\n   *\n   * @type {ModelExperimental}\n   * @readonly\n   *\n   * @private\n   */\n  this.model = modelRenderResources.model;\n  /**\n   * An object used to build a shader incrementally. This is cloned from the\n   * model render resources because each node can compute a different shader.\n   *\n   * @type {ShaderBuilder}\n   * @readonly\n   *\n   * @private\n   */\n  this.shaderBuilder = modelRenderResources.shaderBuilder.clone();\n\n  // other properties\n  /**\n   * A reference to the runtime node\n   *\n   * @type {ModelExperimentalNode}\n   * @readonly\n   *\n   * @private\n   */\n  this.runtimeNode = runtimeNode;\n  /**\n   * The computed model matrix for this node.\n   *\n   * @type {Matrix4}\n   *\n   * @private\n   */\n  this.modelMatrix = runtimeNode.modelMatrix;\n  /**\n   * An array of objects describing vertex attributes that will eventually\n   * be used to create a {@link VertexArray} for the draw command. Attributes\n   * at the node level may be needed for extensions such as EXT_mesh_gpu_instancing.\n   *\n   * @type {Object[]}\n   * @readonly\n   *\n   * @private\n   */\n  this.attributes = [];\n\n  /**\n   * The index to give to the next vertex attribute added to the attributes array. POSITION\n   * takes index 0.\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @private\n   */\n  this.attributeIndex = 1;\n\n  /**\n   * The number of instances. Default is 0, if instancing is not used.\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @private\n   */\n  this.instanceCount = 0;\n\n  /**\n   * The component-wise maximum value of the translations of the instances.\n   *\n   * @type {Cartesian3}\n   * @readonly\n   *\n   * @private\n   */\n  this.instancingTranslationMax = undefined;\n\n  /**\n   * The component-wise minimum value of the translations of the instances.\n   *\n   * @type {Cartesian3}\n   * @readonly\n   *\n   * @private\n   */\n  this.instancingTranslationMin = undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjA5NS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQXdDOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakMsV0FBVyx1QkFBdUI7QUFDbEM7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBLEVBQUUsMkZBQW1CO0FBQ3JCLEVBQUUsMkZBQW1CO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG1CQUFtQjtBQUM3QztBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01vZGVsRXhwZXJpbWVudGFsL05vZGVSZW5kZXJSZXNvdXJjZXMuanM/ZDQ0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hlY2sgZnJvbSBcIi4uLy4uL0NvcmUvQ2hlY2suanNcIjtcblxuLyoqXG4gKiBBIG1vZGVsIGlzIG1hZGUgdXAgb2Ygb25lIG9yIG1vcmUgbm9kZXMgaW4gdGhlIHNjZW5lIGdyYXBoLiBTb21lIGRldGFpbHNcbiAqIHN1Y2ggYXMgaW5zdGFuY2luZyBhcmUgY29tcHV0ZWQgb24gYSBwZXItbm9kZSBiYXNpcy4gVGhpcyBjbGFzcyBwcm92aWRlc1xuICogYSBwbGFjZSB0byBzdG9yZSBzdWNoIGRldGFpbHMuIEl0IGFsc28gaW5oZXJpdHMgc29tZSBwcm9wZXJ0aWVzIGZyb21cbiAqIHRoZSBtb2RlbCByZW5kZXIgcmVzb3VyY2VzLlxuICpcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwYXJhbSB7TW9kZWxSZW5kZXJSZXNvdXJjZXN9IG1vZGVsUmVuZGVyUmVzb3VyY2VzIFRoZSBtb2RlbCByZXNvdXJjZXMgdG8gaW5oZXJpdFxuICogQHBhcmFtIHtNb2RlbEV4cGVyaW1lbnRhbE5vZGV9IHJ1bnRpbWVOb2RlIFRoZSBpbi1tZW1vcnkgcmVwcmVzZW50YXRpb24gb2YgdGhlIHNjZW5lIGdyYXBoIG5vZGUuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTm9kZVJlbmRlclJlc291cmNlcyhtb2RlbFJlbmRlclJlc291cmNlcywgcnVudGltZU5vZGUpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcIm1vZGVsUmVuZGVyUmVzb3VyY2VzXCIsIG1vZGVsUmVuZGVyUmVzb3VyY2VzKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcInJ1bnRpbWVOb2RlXCIsIHJ1bnRpbWVOb2RlKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgLy8gUHJvcGVydGllcyBpbmhlcml0ZWQgZnJvbSB0aGUgTW9kZWxSZW5kZXJSZXNvdXJjZXMuXG4gIC8qKlxuICAgKiBBIHJlZmVyZW5jZSB0byB0aGUgbW9kZWwgSW5oZXJpdGVkIGZyb20gdGhlIG1vZGVsIHJlbmRlciByZXNvdXJjZXMuXG4gICAqXG4gICAqIEB0eXBlIHtNb2RlbEV4cGVyaW1lbnRhbH1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLm1vZGVsID0gbW9kZWxSZW5kZXJSZXNvdXJjZXMubW9kZWw7XG4gIC8qKlxuICAgKiBBbiBvYmplY3QgdXNlZCB0byBidWlsZCBhIHNoYWRlciBpbmNyZW1lbnRhbGx5LiBUaGlzIGlzIGNsb25lZCBmcm9tIHRoZVxuICAgKiBtb2RlbCByZW5kZXIgcmVzb3VyY2VzIGJlY2F1c2UgZWFjaCBub2RlIGNhbiBjb21wdXRlIGEgZGlmZmVyZW50IHNoYWRlci5cbiAgICpcbiAgICogQHR5cGUge1NoYWRlckJ1aWxkZXJ9XG4gICAqIEByZWFkb25seVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5zaGFkZXJCdWlsZGVyID0gbW9kZWxSZW5kZXJSZXNvdXJjZXMuc2hhZGVyQnVpbGRlci5jbG9uZSgpO1xuXG4gIC8vIG90aGVyIHByb3BlcnRpZXNcbiAgLyoqXG4gICAqIEEgcmVmZXJlbmNlIHRvIHRoZSBydW50aW1lIG5vZGVcbiAgICpcbiAgICogQHR5cGUge01vZGVsRXhwZXJpbWVudGFsTm9kZX1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLnJ1bnRpbWVOb2RlID0gcnVudGltZU5vZGU7XG4gIC8qKlxuICAgKiBUaGUgY29tcHV0ZWQgbW9kZWwgbWF0cml4IGZvciB0aGlzIG5vZGUuXG4gICAqXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdGhpcy5tb2RlbE1hdHJpeCA9IHJ1bnRpbWVOb2RlLm1vZGVsTWF0cml4O1xuICAvKipcbiAgICogQW4gYXJyYXkgb2Ygb2JqZWN0cyBkZXNjcmliaW5nIHZlcnRleCBhdHRyaWJ1dGVzIHRoYXQgd2lsbCBldmVudHVhbGx5XG4gICAqIGJlIHVzZWQgdG8gY3JlYXRlIGEge0BsaW5rIFZlcnRleEFycmF5fSBmb3IgdGhlIGRyYXcgY29tbWFuZC4gQXR0cmlidXRlc1xuICAgKiBhdCB0aGUgbm9kZSBsZXZlbCBtYXkgYmUgbmVlZGVkIGZvciBleHRlbnNpb25zIHN1Y2ggYXMgRVhUX21lc2hfZ3B1X2luc3RhbmNpbmcuXG4gICAqXG4gICAqIEB0eXBlIHtPYmplY3RbXX1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLmF0dHJpYnV0ZXMgPSBbXTtcblxuICAvKipcbiAgICogVGhlIGluZGV4IHRvIGdpdmUgdG8gdGhlIG5leHQgdmVydGV4IGF0dHJpYnV0ZSBhZGRlZCB0byB0aGUgYXR0cmlidXRlcyBhcnJheS4gUE9TSVRJT05cbiAgICogdGFrZXMgaW5kZXggMC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLmF0dHJpYnV0ZUluZGV4ID0gMTtcblxuICAvKipcbiAgICogVGhlIG51bWJlciBvZiBpbnN0YW5jZXMuIERlZmF1bHQgaXMgMCwgaWYgaW5zdGFuY2luZyBpcyBub3QgdXNlZC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB0aGlzLmluc3RhbmNlQ291bnQgPSAwO1xuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50LXdpc2UgbWF4aW11bSB2YWx1ZSBvZiB0aGUgdHJhbnNsYXRpb25zIG9mIHRoZSBpbnN0YW5jZXMuXG4gICAqXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4zfVxuICAgKiBAcmVhZG9ubHlcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRoaXMuaW5zdGFuY2luZ1RyYW5zbGF0aW9uTWF4ID0gdW5kZWZpbmVkO1xuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50LXdpc2UgbWluaW11bSB2YWx1ZSBvZiB0aGUgdHJhbnNsYXRpb25zIG9mIHRoZSBpbnN0YW5jZXMuXG4gICAqXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4zfVxuICAgKiBAcmVhZG9ubHlcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHRoaXMuaW5zdGFuY2luZ1RyYW5zbGF0aW9uTWluID0gdW5kZWZpbmVkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6095\n')},39522:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59947);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(99095);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87826);\n\n\n\n\n\n\n\n/**\n * The picking pipeline stage is responsible for handling picking of primitives.\n *\n * @namespace PickingPipelineStage\n * @private\n */\nvar PickingPipelineStage = {};\nPickingPipelineStage.name = "PickingPipelineStage"; // Helps with debugging\n\n/**\n * Process a primitive. This modifies the following parts of the render resources:\n * <ul>\n *  <li>adds attribute and varying declaration for the pick color vertex attribute in the vertex shader for instanced meshes</li>\n *  <li>adds declaration for the pick color uniform for non-instanced meshes</li>\n *  <li>adds defines in the shader for when picking is enabled</li>\n *  <li>creates the pick ID objects in the context</li>\n * </ul>\n * @param {PrimitiveRenderResources} renderResources The render resources for this primitive.\n * @param {ModelComponents.Primitive} node The primitive.\n * @param {FrameState} frameState The frame state.\n */\nPickingPipelineStage.process = function (\n  renderResources,\n  primitive,\n  frameState\n) {\n  var context = frameState.context;\n  var runtimeNode = renderResources.runtimeNode;\n  var shaderBuilder = renderResources.shaderBuilder;\n\n  shaderBuilder.addDefine("USE_PICKING");\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(runtimeNode.node.instances)) {\n    // For instanced meshes, a pick color vertex attribute is used.\n    processInstancedPickIds(renderResources, context);\n  } else {\n    // For non-instanced meshes, a pick color uniform is used.\n    var model = renderResources.model;\n    var pickObject = {\n      model: model,\n      node: renderResources.runtimeNode,\n      primitive: renderResources.runtimePrimitive,\n    };\n\n    var pickId = context.createPickId(pickObject);\n    model._resources.push(pickId);\n    shaderBuilder.addUniform(\n      "vec4",\n      "czm_pickColor",\n      _Renderer_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FRAGMENT */ .Z.FRAGMENT\n    );\n\n    var uniformMap = renderResources.uniformMap;\n    uniformMap.czm_pickColor = function () {\n      return pickId.color;\n    };\n\n    renderResources.pickId = "czm_pickColor";\n  }\n};\n\nfunction processInstancedPickIds(renderResources, context) {\n  var instanceCount = renderResources.instanceCount;\n  var pickIds = new Array(instanceCount);\n  var pickIdsTypedArray = new Uint8Array(instanceCount * 4);\n\n  var modelResources = renderResources.model._resources;\n  for (var i = 0; i < instanceCount; i++) {\n    var pickObject = {\n      model: renderResources.model,\n      node: renderResources.runtimeNode,\n      primitive: renderResources.runtimePrimitive,\n      instanceId: i,\n    };\n\n    var pickId = context.createPickId(pickObject);\n    modelResources.push(pickId);\n    pickIds[i] = pickId;\n\n    var pickColor = pickId.color;\n    pickIdsTypedArray[i * 4 + 0] = _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.red);\n    pickIdsTypedArray[i * 4 + 1] = _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.green);\n    pickIdsTypedArray[i * 4 + 2] = _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.blue);\n    pickIdsTypedArray[i * 4 + 3] = _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.alpha);\n  }\n\n  var pickIdsBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n    context: context,\n    typedArray: pickIdsTypedArray,\n    usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n  });\n  // Destruction of resources allocated by the ModelExperimental is handled by ModelExperimental.destroy().\n  pickIdsBuffer.vertexArrayDestroyable = false;\n  modelResources.push(pickIdsBuffer);\n\n  var pickIdsVertexAttribute = {\n    index: renderResources.attributeIndex++,\n    vertexBuffer: pickIdsBuffer,\n    componentsPerAttribute: 4,\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n    normalize: true,\n    offsetInBytes: 0,\n    strideInBytes: 0,\n    instanceDivisor: 1,\n  };\n\n  renderResources.attributes.push(pickIdsVertexAttribute);\n\n  var shaderBuilder = renderResources.shaderBuilder;\n  shaderBuilder.addAttribute("vec4", "a_pickColor");\n  shaderBuilder.addVarying("vec4", "v_pickColor");\n  renderResources.pickId = "v_pickColor";\n}\n\n/* harmony default export */ __webpack_exports__["Z"] = (PickingPipelineStage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk1MjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdDO0FBQ3dCO0FBQ3BCO0FBQ0U7QUFDVTtBQUNZOztBQUVwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDLFdBQVcsMkJBQTJCO0FBQ3RDLFdBQVcsWUFBWTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsTUFBTSxxRUFBTztBQUNiO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0saUdBQTBCO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQixtQkFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyx1RkFBaUI7QUFDcEQsbUNBQW1DLHVGQUFpQjtBQUNwRCxtQ0FBbUMsdUZBQWlCO0FBQ3BELG1DQUFtQyx1RkFBaUI7QUFDcEQ7O0FBRUEsc0JBQXNCLDBHQUF5QjtBQUMvQztBQUNBO0FBQ0EsV0FBVyxpR0FBdUI7QUFDbEMsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1R0FBK0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlEQUFlLG9CQUFvQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01vZGVsRXhwZXJpbWVudGFsL1BpY2tpbmdQaXBlbGluZVN0YWdlLmpzP2I2NzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbG9yIGZyb20gXCIuLi8uLi9Db3JlL0NvbG9yLmpzXCI7XG5pbXBvcnQgQ29tcG9uZW50RGF0YXR5cGUgZnJvbSBcIi4uLy4uL0NvcmUvQ29tcG9uZW50RGF0YXR5cGUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi8uLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBCdWZmZXIgZnJvbSBcIi4uLy4uL1JlbmRlcmVyL0J1ZmZlci5qc1wiO1xuaW1wb3J0IEJ1ZmZlclVzYWdlIGZyb20gXCIuLi8uLi9SZW5kZXJlci9CdWZmZXJVc2FnZS5qc1wiO1xuaW1wb3J0IFNoYWRlckRlc3RpbmF0aW9uIGZyb20gXCIuLi8uLi9SZW5kZXJlci9TaGFkZXJEZXN0aW5hdGlvbi5qc1wiO1xuXG4vKipcbiAqIFRoZSBwaWNraW5nIHBpcGVsaW5lIHN0YWdlIGlzIHJlc3BvbnNpYmxlIGZvciBoYW5kbGluZyBwaWNraW5nIG9mIHByaW1pdGl2ZXMuXG4gKlxuICogQG5hbWVzcGFjZSBQaWNraW5nUGlwZWxpbmVTdGFnZVxuICogQHByaXZhdGVcbiAqL1xudmFyIFBpY2tpbmdQaXBlbGluZVN0YWdlID0ge307XG5QaWNraW5nUGlwZWxpbmVTdGFnZS5uYW1lID0gXCJQaWNraW5nUGlwZWxpbmVTdGFnZVwiOyAvLyBIZWxwcyB3aXRoIGRlYnVnZ2luZ1xuXG4vKipcbiAqIFByb2Nlc3MgYSBwcmltaXRpdmUuIFRoaXMgbW9kaWZpZXMgdGhlIGZvbGxvd2luZyBwYXJ0cyBvZiB0aGUgcmVuZGVyIHJlc291cmNlczpcbiAqIDx1bD5cbiAqICA8bGk+YWRkcyBhdHRyaWJ1dGUgYW5kIHZhcnlpbmcgZGVjbGFyYXRpb24gZm9yIHRoZSBwaWNrIGNvbG9yIHZlcnRleCBhdHRyaWJ1dGUgaW4gdGhlIHZlcnRleCBzaGFkZXIgZm9yIGluc3RhbmNlZCBtZXNoZXM8L2xpPlxuICogIDxsaT5hZGRzIGRlY2xhcmF0aW9uIGZvciB0aGUgcGljayBjb2xvciB1bmlmb3JtIGZvciBub24taW5zdGFuY2VkIG1lc2hlczwvbGk+XG4gKiAgPGxpPmFkZHMgZGVmaW5lcyBpbiB0aGUgc2hhZGVyIGZvciB3aGVuIHBpY2tpbmcgaXMgZW5hYmxlZDwvbGk+XG4gKiAgPGxpPmNyZWF0ZXMgdGhlIHBpY2sgSUQgb2JqZWN0cyBpbiB0aGUgY29udGV4dDwvbGk+XG4gKiA8L3VsPlxuICogQHBhcmFtIHtQcmltaXRpdmVSZW5kZXJSZXNvdXJjZXN9IHJlbmRlclJlc291cmNlcyBUaGUgcmVuZGVyIHJlc291cmNlcyBmb3IgdGhpcyBwcmltaXRpdmUuXG4gKiBAcGFyYW0ge01vZGVsQ29tcG9uZW50cy5QcmltaXRpdmV9IG5vZGUgVGhlIHByaW1pdGl2ZS5cbiAqIEBwYXJhbSB7RnJhbWVTdGF0ZX0gZnJhbWVTdGF0ZSBUaGUgZnJhbWUgc3RhdGUuXG4gKi9cblBpY2tpbmdQaXBlbGluZVN0YWdlLnByb2Nlc3MgPSBmdW5jdGlvbiAoXG4gIHJlbmRlclJlc291cmNlcyxcbiAgcHJpbWl0aXZlLFxuICBmcmFtZVN0YXRlXG4pIHtcbiAgdmFyIGNvbnRleHQgPSBmcmFtZVN0YXRlLmNvbnRleHQ7XG4gIHZhciBydW50aW1lTm9kZSA9IHJlbmRlclJlc291cmNlcy5ydW50aW1lTm9kZTtcbiAgdmFyIHNoYWRlckJ1aWxkZXIgPSByZW5kZXJSZXNvdXJjZXMuc2hhZGVyQnVpbGRlcjtcblxuICBzaGFkZXJCdWlsZGVyLmFkZERlZmluZShcIlVTRV9QSUNLSU5HXCIpO1xuXG4gIGlmIChkZWZpbmVkKHJ1bnRpbWVOb2RlLm5vZGUuaW5zdGFuY2VzKSkge1xuICAgIC8vIEZvciBpbnN0YW5jZWQgbWVzaGVzLCBhIHBpY2sgY29sb3IgdmVydGV4IGF0dHJpYnV0ZSBpcyB1c2VkLlxuICAgIHByb2Nlc3NJbnN0YW5jZWRQaWNrSWRzKHJlbmRlclJlc291cmNlcywgY29udGV4dCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gRm9yIG5vbi1pbnN0YW5jZWQgbWVzaGVzLCBhIHBpY2sgY29sb3IgdW5pZm9ybSBpcyB1c2VkLlxuICAgIHZhciBtb2RlbCA9IHJlbmRlclJlc291cmNlcy5tb2RlbDtcbiAgICB2YXIgcGlja09iamVjdCA9IHtcbiAgICAgIG1vZGVsOiBtb2RlbCxcbiAgICAgIG5vZGU6IHJlbmRlclJlc291cmNlcy5ydW50aW1lTm9kZSxcbiAgICAgIHByaW1pdGl2ZTogcmVuZGVyUmVzb3VyY2VzLnJ1bnRpbWVQcmltaXRpdmUsXG4gICAgfTtcblxuICAgIHZhciBwaWNrSWQgPSBjb250ZXh0LmNyZWF0ZVBpY2tJZChwaWNrT2JqZWN0KTtcbiAgICBtb2RlbC5fcmVzb3VyY2VzLnB1c2gocGlja0lkKTtcbiAgICBzaGFkZXJCdWlsZGVyLmFkZFVuaWZvcm0oXG4gICAgICBcInZlYzRcIixcbiAgICAgIFwiY3ptX3BpY2tDb2xvclwiLFxuICAgICAgU2hhZGVyRGVzdGluYXRpb24uRlJBR01FTlRcbiAgICApO1xuXG4gICAgdmFyIHVuaWZvcm1NYXAgPSByZW5kZXJSZXNvdXJjZXMudW5pZm9ybU1hcDtcbiAgICB1bmlmb3JtTWFwLmN6bV9waWNrQ29sb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gcGlja0lkLmNvbG9yO1xuICAgIH07XG5cbiAgICByZW5kZXJSZXNvdXJjZXMucGlja0lkID0gXCJjem1fcGlja0NvbG9yXCI7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHByb2Nlc3NJbnN0YW5jZWRQaWNrSWRzKHJlbmRlclJlc291cmNlcywgY29udGV4dCkge1xuICB2YXIgaW5zdGFuY2VDb3VudCA9IHJlbmRlclJlc291cmNlcy5pbnN0YW5jZUNvdW50O1xuICB2YXIgcGlja0lkcyA9IG5ldyBBcnJheShpbnN0YW5jZUNvdW50KTtcbiAgdmFyIHBpY2tJZHNUeXBlZEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoaW5zdGFuY2VDb3VudCAqIDQpO1xuXG4gIHZhciBtb2RlbFJlc291cmNlcyA9IHJlbmRlclJlc291cmNlcy5tb2RlbC5fcmVzb3VyY2VzO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGluc3RhbmNlQ291bnQ7IGkrKykge1xuICAgIHZhciBwaWNrT2JqZWN0ID0ge1xuICAgICAgbW9kZWw6IHJlbmRlclJlc291cmNlcy5tb2RlbCxcbiAgICAgIG5vZGU6IHJlbmRlclJlc291cmNlcy5ydW50aW1lTm9kZSxcbiAgICAgIHByaW1pdGl2ZTogcmVuZGVyUmVzb3VyY2VzLnJ1bnRpbWVQcmltaXRpdmUsXG4gICAgICBpbnN0YW5jZUlkOiBpLFxuICAgIH07XG5cbiAgICB2YXIgcGlja0lkID0gY29udGV4dC5jcmVhdGVQaWNrSWQocGlja09iamVjdCk7XG4gICAgbW9kZWxSZXNvdXJjZXMucHVzaChwaWNrSWQpO1xuICAgIHBpY2tJZHNbaV0gPSBwaWNrSWQ7XG5cbiAgICB2YXIgcGlja0NvbG9yID0gcGlja0lkLmNvbG9yO1xuICAgIHBpY2tJZHNUeXBlZEFycmF5W2kgKiA0ICsgMF0gPSBDb2xvci5mbG9hdFRvQnl0ZShwaWNrQ29sb3IucmVkKTtcbiAgICBwaWNrSWRzVHlwZWRBcnJheVtpICogNCArIDFdID0gQ29sb3IuZmxvYXRUb0J5dGUocGlja0NvbG9yLmdyZWVuKTtcbiAgICBwaWNrSWRzVHlwZWRBcnJheVtpICogNCArIDJdID0gQ29sb3IuZmxvYXRUb0J5dGUocGlja0NvbG9yLmJsdWUpO1xuICAgIHBpY2tJZHNUeXBlZEFycmF5W2kgKiA0ICsgM10gPSBDb2xvci5mbG9hdFRvQnl0ZShwaWNrQ29sb3IuYWxwaGEpO1xuICB9XG5cbiAgdmFyIHBpY2tJZHNCdWZmZXIgPSBCdWZmZXIuY3JlYXRlVmVydGV4QnVmZmVyKHtcbiAgICBjb250ZXh0OiBjb250ZXh0LFxuICAgIHR5cGVkQXJyYXk6IHBpY2tJZHNUeXBlZEFycmF5LFxuICAgIHVzYWdlOiBCdWZmZXJVc2FnZS5TVEFUSUNfRFJBVyxcbiAgfSk7XG4gIC8vIERlc3RydWN0aW9uIG9mIHJlc291cmNlcyBhbGxvY2F0ZWQgYnkgdGhlIE1vZGVsRXhwZXJpbWVudGFsIGlzIGhhbmRsZWQgYnkgTW9kZWxFeHBlcmltZW50YWwuZGVzdHJveSgpLlxuICBwaWNrSWRzQnVmZmVyLnZlcnRleEFycmF5RGVzdHJveWFibGUgPSBmYWxzZTtcbiAgbW9kZWxSZXNvdXJjZXMucHVzaChwaWNrSWRzQnVmZmVyKTtcblxuICB2YXIgcGlja0lkc1ZlcnRleEF0dHJpYnV0ZSA9IHtcbiAgICBpbmRleDogcmVuZGVyUmVzb3VyY2VzLmF0dHJpYnV0ZUluZGV4KyssXG4gICAgdmVydGV4QnVmZmVyOiBwaWNrSWRzQnVmZmVyLFxuICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDQsXG4gICAgY29tcG9uZW50RGF0YXR5cGU6IENvbXBvbmVudERhdGF0eXBlLlVOU0lHTkVEX0JZVEUsXG4gICAgbm9ybWFsaXplOiB0cnVlLFxuICAgIG9mZnNldEluQnl0ZXM6IDAsXG4gICAgc3RyaWRlSW5CeXRlczogMCxcbiAgICBpbnN0YW5jZURpdmlzb3I6IDEsXG4gIH07XG5cbiAgcmVuZGVyUmVzb3VyY2VzLmF0dHJpYnV0ZXMucHVzaChwaWNrSWRzVmVydGV4QXR0cmlidXRlKTtcblxuICB2YXIgc2hhZGVyQnVpbGRlciA9IHJlbmRlclJlc291cmNlcy5zaGFkZXJCdWlsZGVyO1xuICBzaGFkZXJCdWlsZGVyLmFkZEF0dHJpYnV0ZShcInZlYzRcIiwgXCJhX3BpY2tDb2xvclwiKTtcbiAgc2hhZGVyQnVpbGRlci5hZGRWYXJ5aW5nKFwidmVjNFwiLCBcInZfcGlja0NvbG9yXCIpO1xuICByZW5kZXJSZXNvdXJjZXMucGlja0lkID0gXCJ2X3BpY2tDb2xvclwiO1xufVxuXG5leHBvcnQgZGVmYXVsdCBQaWNraW5nUGlwZWxpbmVTdGFnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///39522\n')},37627:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ PrimitiveRenderResources; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13633);\n/* harmony import */ var _DepthFunction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7976);\n/* harmony import */ var _ModelAlphaOptions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50999);\n/* harmony import */ var _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60426);\n/* harmony import */ var _ModelLightingOptions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12918);\n\n\n\n\n\n\n\n\n/**\n * Each node may have many mesh primitives. Most model pipeline stages operate\n * at the primitive level. Again, properties are inherited from the parent.\n *\n * @param {NodeRenderResources} nodeRenderResources The node resources to inherit from\n * @param {ModelExperimentalPrimitive} runtimePrimitive The primitive.\n *\n * @private\n */\nfunction PrimitiveRenderResources(\n  nodeRenderResources,\n  runtimePrimitive\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("nodeRenderResources", nodeRenderResources);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("runtimePrimitive", runtimePrimitive);\n  //>>includeEnd(\'debug\');\n\n  // Properties inherited from NodeRenderResources.\n  /**\n   * A reference to the model. Inherited from the node render resources.\n   *\n   * @type {ModelExperimental}\n   * @readonly\n   *\n   * @private\n   */\n  this.model = nodeRenderResources.model;\n  /**\n   * A reference to the runtime node. Inherited from the node render resources.\n   *\n   * @type {ModelExperimentalNode}\n   * @readonly\n   *\n   * @private\n   */\n  this.runtimeNode = nodeRenderResources.runtimeNode;\n  /**\n   * The vertex attributes. This is shallow cloned from the node render\n   * resources as the primitive will add additional properties.\n   *\n   * @type {Object[]}\n   *\n   * @private\n   */\n  this.attributes = nodeRenderResources.attributes.slice();\n\n  /**\n   * The index to give to the next vertex attribute added to the attributes array. POSITION\n   * takes index 0. Inherited from the node render resources.\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @private\n   */\n  this.attributeIndex = nodeRenderResources.attributeIndex;\n\n  /**\n   * The computed model matrix for this primitive. This is cloned from the\n   * node render resources as the primitive may further modify it\n   *\n   * @type {Matrix4}\n   *\n   * @private\n   */\n\n  this.modelMatrix = nodeRenderResources.modelMatrix.clone();\n  /**\n   * An object used to build a shader incrementally. This is cloned from the\n   * node render resources because each primitive can compute a different shader.\n   *\n   * @type {ShaderBuilder}\n   * @readonly\n   *\n   * @private\n   */\n  this.shaderBuilder = nodeRenderResources.shaderBuilder.clone();\n\n  /**\n   * The number of instances. Default is 0, if instancing is not used. Inherited from the node render resources.\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @private\n   */\n  this.instanceCount = nodeRenderResources.instanceCount;\n\n  /**\n   * A reference to the runtime node\n   *\n   * @type {ModelExperimentalPrimitive}\n   * @readonly\n   *\n   * @private\n   */\n  this.runtimePrimitive = runtimePrimitive;\n\n  /**\n   * The primitive associated with the render resources.\n   *\n   * @type {ModelComponents.Primitive}\n   * @readonly\n   *\n   * @private\n   */\n  var primitive = runtimePrimitive.primitive;\n\n  // other properties\n  /**\n   * The number of indices in the primitive. The interpretation of this\n   * depends on the primitive type.\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @private\n   */\n  this.count = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(primitive.indices)\n    ? primitive.indices.count\n    : _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].getAttributeBySemantic */ .Z.getAttributeBySemantic(primitive, "POSITION")\n        .count;\n  /**\n   * The indices for this primitive\n   *\n   * @type {ModelComponents.Indices}\n   * @readonly\n   *\n   * @private\n   */\n  this.indices = primitive.indices;\n  /**\n   * The primitive type such as TRIANGLES or POINTS\n   *\n   * @type {PrimitiveType}\n   * @readonly\n   *\n   * @private\n   */\n  this.primitiveType = primitive.primitiveType;\n  /**\n   * The bounding sphere that contains all the vertices in this primitive.\n   *\n   * @type {BoundingSphere}\n   */\n  this.boundingSphere = _ModelExperimentalUtility_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].createBoundingSphere */ .Z.createBoundingSphere(\n    primitive,\n    this.modelMatrix,\n    nodeRenderResources.instancingTranslationMax,\n    nodeRenderResources.instancingTranslationMin\n  );\n  /**\n   * A dictionary mapping uniform name to functions that return the uniform\n   * values.\n   *\n   * @type {Object.<String, Function>}\n   * @readonly\n   *\n   * @private\n   */\n  this.uniformMap = {};\n  /**\n   * Options for configuring the lighting stage such as selecting between\n   * unlit and PBR shading.\n   *\n   * @type {ModelLightingOptions}\n   * @readonly\n   *\n   * @private\n   */\n  this.lightingOptions = new _ModelLightingOptions_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n  /**\n   * Options for configuring the alpha stage such as pass and alpha mode.\n   *\n   * @type {ModelAlphaOptions}\n   * @readonly\n   *\n   * @private\n   */\n  this.alphaOptions = new _ModelAlphaOptions_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\n  /**\n   * The shader variable to use for picking.\n   *\n   * @type {String}\n   * @readonly\n   *\n   * @private\n   */\n  this.pickId = undefined;\n\n  /**\n   * An object storing options for creating a {@link RenderState}.\n   * the pipeline stages simply set the options, the render state is created\n   * when the {@link DrawCommand} is constructed.\n   *\n   * @type {Object}\n   * @readonly\n   *\n   * @private\n   */\n  this.renderStateOptions = {\n    depthTest: {\n      enabled: true,\n      func: _DepthFunction_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].LESS_OR_EQUAL */ .Z.LESS_OR_EQUAL,\n    },\n    blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].DISABLED */ .Z.DISABLED,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37627\n')},77174:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ TextureManager; }\n/* harmony export */ });\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86511);\n/* harmony import */ var _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8743);\n\n\n\n\n/**\n * An object to manage loading textures\n *\n * @alias TextureManager\n * @constructor\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction TextureManager() {\n  this._defaultTexture = undefined;\n  this._textures = {};\n  this._loadedImages = [];\n\n  // Keep track of the last time update() was called to avoid\n  // calling update() twice.\n  this._lastUpdatedFrame = -1;\n}\n\n/**\n * Get one of the loaded textures\n * @param {String} textureId The unique ID of the texture loaded by {@link TextureManager#loadTexture2D}\n * @return {Texture} The texture or <code>undefined</code> if no texture exists\n */\nTextureManager.prototype.getTexture = function (textureId) {\n  return this._textures[textureId];\n};\n\nfunction fetchTexture2D(textureManager, textureId, textureUniform) {\n  textureUniform.resource\n    .fetchImage()\n    .then(function (image) {\n      textureManager._loadedImages.push({\n        id: textureId,\n        image: image,\n        textureUniform: textureUniform,\n      });\n    })\n    .otherwise(function () {\n      var texture = textureManager._textures[textureId];\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(texture) && texture !== textureManager._defaultTexture) {\n        texture.destroy();\n      }\n\n      textureManager._textures[textureId] = textureManager._defaultTexture;\n    });\n}\n\n/**\n * Load a texture 2D asynchronously. Note that {@link TextureManager#update}\n * must be called in the render loop to finish processing the textures.\n *\n * @param {String} textureId A unique ID to identify this texture.\n * @param {TextureUniform} textureUniform A description of the texture\n *\n * @private\n */\nTextureManager.prototype.loadTexture2D = function (textureId, textureUniform) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(textureUniform.typedArray)) {\n    this._loadedImages.push({\n      id: textureId,\n      textureUniform: textureUniform,\n    });\n  } else {\n    fetchTexture2D(this, textureId, textureUniform);\n  }\n};\n\nfunction createTexture(textureManager, loadedImage, context) {\n  var id = loadedImage.id;\n  var textureUniform = loadedImage.textureUniform;\n\n  var typedArray = textureUniform.typedArray;\n  var sampler = textureUniform.sampler;\n\n  var texture;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(typedArray)) {\n    texture = new _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({\n      context: context,\n      pixelFormat: textureUniform.pixelFormat,\n      pixelDatatype: textureUniform.pixelDatatype,\n      source: {\n        arrayBufferView: typedArray,\n        width: textureUniform.width,\n        height: textureUniform.height,\n      },\n      sampler: sampler,\n      flipY: false,\n    });\n  } else {\n    texture = new _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({\n      context: context,\n      source: loadedImage.image,\n      sampler: sampler,\n    });\n  }\n\n  // Destroy the old texture once the new one is loaded for more seamless\n  // transitions between values\n  var oldTexture = textureManager._textures[id];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(oldTexture) && oldTexture !== context.defaultTexture) {\n    oldTexture.destroy();\n  }\n  textureManager._textures[id] = texture;\n}\n\nTextureManager.prototype.update = function (frameState) {\n  // update only needs to be called once a frame.\n  if (frameState.frameNumber === this._lastUpdatedFrame) {\n    return;\n  }\n  this._lastUpdatedFrame = frameState.frameNumber;\n\n  var context = frameState.context;\n  this._defaultTexture = context.defaultTexture;\n\n  // If any images were loaded since the last frame, create Textures\n  // for them and store in the uniform dictionary\n  var loadedImages = this._loadedImages;\n  for (var i = 0; i < loadedImages.length; i++) {\n    var loadedImage = loadedImages[i];\n    createTexture(this, loadedImage, context);\n  }\n  loadedImages.length = 0;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n *\n * @see TextureManager#destroy\n * @private\n */\nTextureManager.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * textureManager = textureManager && textureManager.destroy();\n *\n * @see TextureManager#isDestroyed\n * @private\n */\nTextureManager.prototype.destroy = function () {\n  var textures = this._textures;\n  for (var texture in textures) {\n    if (textures.hasOwnProperty(texture)) {\n      var instance = textures[texture];\n      if (instance !== this._defaultTexture) {\n        instance.destroy();\n      }\n    }\n  }\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(this);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///77174\n')},9774:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* unused harmony export default */\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(68985);\n/* harmony import */ var _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38443);\n/* harmony import */ var _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21572);\n/* harmony import */ var _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87721);\n/* harmony import */ var _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(88453);\n\n\n\n\n\n\n\n\n\n/**\n * A simple struct that serves as a value of a <code>sampler2D</code>-valued\n * uniform. This is used with {@link CustomShader} and {@link TextureManager}\n *\n * @param {Object} options An object with the following properties:\n * @param {Uint8Array} [options.typedArray] A typed array storing the contents of a texture. Values are stored in row-major order. Since WebGL uses a y-up convention for textures, rows are listed from bottom to top.\n * @param {Number} [options.width] The width of the image. Required when options.typedArray is present\n * @param {Number} [options.height] The height of the image. Required when options.typedArray is present.\n * @param {String|Resource} [options.url] A URL string or resource pointing to a texture image.\n * @param {Boolean} [options.repeat=true] When defined, the texture sampler will be set to wrap in both directions\n * @param {PixelFormat} [options.pixelFormat=PixelFormat.RGBA] When options.typedArray is defined, this is used to determine the pixel format of the texture\n * @param {PixelDatatype} [options.pixelDatatype=PixelDatatype.UNSIGNED_BYTE] When options.typedArray is defined, this is the data type of pixel values in the typed array.\n * @param {TextureMinificationFilter} [textureMinificationFilter=TextureMinificationFilter.LINEAR] The minification filter of the texture sampler.\n * @param {TextureMagnificationFilter} [textureMagnificationFilter=TextureMagnificationFilter.LINEAR] The magnification filter of the texture sampler.\n * @param {Number} [options.maximumAnisotropy=1.0] The maximum anisotropy of the texture sampler\n *\n * @alias TextureUniform\n * @constructor\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction TextureUniform(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  //>>includeStart(\'debug\', pragmas.debug);\n  var hasTypedArray = defined(options.typedArray);\n  var hasUrl = defined(options.url);\n  if (hasTypedArray === hasUrl) {\n    throw new DeveloperError(\n      "exactly one of options.typedArray, options.url must be defined"\n    );\n  }\n  if (hasTypedArray && (!defined(options.width) || !defined(options.height))) {\n    throw new DeveloperError(\n      "options.width and options.height are required when options.typedArray is defined"\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this.typedArray = options.typedArray;\n  this.width = options.width;\n  this.height = options.height;\n  this.pixelFormat = defaultValue(options.pixelFormat, PixelFormat.RGBA);\n  this.pixelDatatype = defaultValue(\n    options.pixelDatatype,\n    PixelDatatype.UNSIGNED_BYTE\n  );\n\n  var resource = options.url;\n  if (typeof resource === "string") {\n    resource = Resource.createIfNeeded(resource);\n  }\n  this.resource = resource;\n\n  var repeat = defaultValue(options.repeat, true);\n  var wrap = repeat ? TextureWrap.REPEAT : TextureWrap.CLAMP_TO_EDGE;\n  this.sampler = new Sampler({\n    wrapS: wrap,\n    wrapT: wrap,\n    minificationFilter: options.minificationFilter,\n    magnificationFilter: options.magnificationFilter,\n    maximumAnisotropy: options.maximumAnisotropy,\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTc3NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFzRDtBQUNWO0FBQ2M7QUFDWjtBQUNNO0FBQ1E7QUFDWjtBQUNROztBQUV4RDtBQUNBO0FBQ0EsK0JBQStCLG9CQUFvQixLQUFLO0FBQ3hEO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsU0FBUztBQUNwQixXQUFXLGFBQWE7QUFDeEIsV0FBVyxlQUFlO0FBQzFCLFdBQVcsMkJBQTJCO0FBQ3RDLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01vZGVsRXhwZXJpbWVudGFsL1RleHR1cmVVbmlmb3JtLmpzP2ZhMzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi8uLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi4vLi4vQ29yZS9EZXZlbG9wZXJFcnJvci5qc1wiO1xuaW1wb3J0IFJlc291cmNlIGZyb20gXCIuLi8uLi9Db3JlL1Jlc291cmNlLmpzXCI7XG5pbXBvcnQgUGl4ZWxGb3JtYXQgZnJvbSBcIi4uLy4uL0NvcmUvUGl4ZWxGb3JtYXQuanNcIjtcbmltcG9ydCBQaXhlbERhdGF0eXBlIGZyb20gXCIuLi8uLi9SZW5kZXJlci9QaXhlbERhdGF0eXBlLmpzXCI7XG5pbXBvcnQgU2FtcGxlciBmcm9tIFwiLi4vLi4vUmVuZGVyZXIvU2FtcGxlci5qc1wiO1xuaW1wb3J0IFRleHR1cmVXcmFwIGZyb20gXCIuLi8uLi9SZW5kZXJlci9UZXh0dXJlV3JhcC5qc1wiO1xuXG4vKipcbiAqIEEgc2ltcGxlIHN0cnVjdCB0aGF0IHNlcnZlcyBhcyBhIHZhbHVlIG9mIGEgPGNvZGU+c2FtcGxlcjJEPC9jb2RlPi12YWx1ZWRcbiAqIHVuaWZvcm0uIFRoaXMgaXMgdXNlZCB3aXRoIHtAbGluayBDdXN0b21TaGFkZXJ9IGFuZCB7QGxpbmsgVGV4dHVyZU1hbmFnZXJ9XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgQW4gb2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBbb3B0aW9ucy50eXBlZEFycmF5XSBBIHR5cGVkIGFycmF5IHN0b3JpbmcgdGhlIGNvbnRlbnRzIG9mIGEgdGV4dHVyZS4gVmFsdWVzIGFyZSBzdG9yZWQgaW4gcm93LW1ham9yIG9yZGVyLiBTaW5jZSBXZWJHTCB1c2VzIGEgeS11cCBjb252ZW50aW9uIGZvciB0ZXh0dXJlcywgcm93cyBhcmUgbGlzdGVkIGZyb20gYm90dG9tIHRvIHRvcC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy53aWR0aF0gVGhlIHdpZHRoIG9mIHRoZSBpbWFnZS4gUmVxdWlyZWQgd2hlbiBvcHRpb25zLnR5cGVkQXJyYXkgaXMgcHJlc2VudFxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLmhlaWdodF0gVGhlIGhlaWdodCBvZiB0aGUgaW1hZ2UuIFJlcXVpcmVkIHdoZW4gb3B0aW9ucy50eXBlZEFycmF5IGlzIHByZXNlbnQuXG4gKiBAcGFyYW0ge1N0cmluZ3xSZXNvdXJjZX0gW29wdGlvbnMudXJsXSBBIFVSTCBzdHJpbmcgb3IgcmVzb3VyY2UgcG9pbnRpbmcgdG8gYSB0ZXh0dXJlIGltYWdlLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5yZXBlYXQ9dHJ1ZV0gV2hlbiBkZWZpbmVkLCB0aGUgdGV4dHVyZSBzYW1wbGVyIHdpbGwgYmUgc2V0IHRvIHdyYXAgaW4gYm90aCBkaXJlY3Rpb25zXG4gKiBAcGFyYW0ge1BpeGVsRm9ybWF0fSBbb3B0aW9ucy5waXhlbEZvcm1hdD1QaXhlbEZvcm1hdC5SR0JBXSBXaGVuIG9wdGlvbnMudHlwZWRBcnJheSBpcyBkZWZpbmVkLCB0aGlzIGlzIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBwaXhlbCBmb3JtYXQgb2YgdGhlIHRleHR1cmVcbiAqIEBwYXJhbSB7UGl4ZWxEYXRhdHlwZX0gW29wdGlvbnMucGl4ZWxEYXRhdHlwZT1QaXhlbERhdGF0eXBlLlVOU0lHTkVEX0JZVEVdIFdoZW4gb3B0aW9ucy50eXBlZEFycmF5IGlzIGRlZmluZWQsIHRoaXMgaXMgdGhlIGRhdGEgdHlwZSBvZiBwaXhlbCB2YWx1ZXMgaW4gdGhlIHR5cGVkIGFycmF5LlxuICogQHBhcmFtIHtUZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyfSBbdGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlcj1UZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyLkxJTkVBUl0gVGhlIG1pbmlmaWNhdGlvbiBmaWx0ZXIgb2YgdGhlIHRleHR1cmUgc2FtcGxlci5cbiAqIEBwYXJhbSB7VGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXJ9IFt0ZXh0dXJlTWFnbmlmaWNhdGlvbkZpbHRlcj1UZXh0dXJlTWFnbmlmaWNhdGlvbkZpbHRlci5MSU5FQVJdIFRoZSBtYWduaWZpY2F0aW9uIGZpbHRlciBvZiB0aGUgdGV4dHVyZSBzYW1wbGVyLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLm1heGltdW1Bbmlzb3Ryb3B5PTEuMF0gVGhlIG1heGltdW0gYW5pc290cm9weSBvZiB0aGUgdGV4dHVyZSBzYW1wbGVyXG4gKlxuICogQGFsaWFzIFRleHR1cmVVbmlmb3JtXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcHJpdmF0ZVxuICogQGV4cGVyaW1lbnRhbCBUaGlzIGZlYXR1cmUgaXMgdXNpbmcgcGFydCBvZiB0aGUgM0QgVGlsZXMgc3BlYyB0aGF0IGlzIG5vdCBmaW5hbCBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2Ugd2l0aG91dCBDZXNpdW0ncyBzdGFuZGFyZCBkZXByZWNhdGlvbiBwb2xpY3kuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRleHR1cmVVbmlmb3JtKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgdmFyIGhhc1R5cGVkQXJyYXkgPSBkZWZpbmVkKG9wdGlvbnMudHlwZWRBcnJheSk7XG4gIHZhciBoYXNVcmwgPSBkZWZpbmVkKG9wdGlvbnMudXJsKTtcbiAgaWYgKGhhc1R5cGVkQXJyYXkgPT09IGhhc1VybCkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIFwiZXhhY3RseSBvbmUgb2Ygb3B0aW9ucy50eXBlZEFycmF5LCBvcHRpb25zLnVybCBtdXN0IGJlIGRlZmluZWRcIlxuICAgICk7XG4gIH1cbiAgaWYgKGhhc1R5cGVkQXJyYXkgJiYgKCFkZWZpbmVkKG9wdGlvbnMud2lkdGgpIHx8ICFkZWZpbmVkKG9wdGlvbnMuaGVpZ2h0KSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIm9wdGlvbnMud2lkdGggYW5kIG9wdGlvbnMuaGVpZ2h0IGFyZSByZXF1aXJlZCB3aGVuIG9wdGlvbnMudHlwZWRBcnJheSBpcyBkZWZpbmVkXCJcbiAgICApO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHRoaXMudHlwZWRBcnJheSA9IG9wdGlvbnMudHlwZWRBcnJheTtcbiAgdGhpcy53aWR0aCA9IG9wdGlvbnMud2lkdGg7XG4gIHRoaXMuaGVpZ2h0ID0gb3B0aW9ucy5oZWlnaHQ7XG4gIHRoaXMucGl4ZWxGb3JtYXQgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5waXhlbEZvcm1hdCwgUGl4ZWxGb3JtYXQuUkdCQSk7XG4gIHRoaXMucGl4ZWxEYXRhdHlwZSA9IGRlZmF1bHRWYWx1ZShcbiAgICBvcHRpb25zLnBpeGVsRGF0YXR5cGUsXG4gICAgUGl4ZWxEYXRhdHlwZS5VTlNJR05FRF9CWVRFXG4gICk7XG5cbiAgdmFyIHJlc291cmNlID0gb3B0aW9ucy51cmw7XG4gIGlmICh0eXBlb2YgcmVzb3VyY2UgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXNvdXJjZSA9IFJlc291cmNlLmNyZWF0ZUlmTmVlZGVkKHJlc291cmNlKTtcbiAgfVxuICB0aGlzLnJlc291cmNlID0gcmVzb3VyY2U7XG5cbiAgdmFyIHJlcGVhdCA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLnJlcGVhdCwgdHJ1ZSk7XG4gIHZhciB3cmFwID0gcmVwZWF0ID8gVGV4dHVyZVdyYXAuUkVQRUFUIDogVGV4dHVyZVdyYXAuQ0xBTVBfVE9fRURHRTtcbiAgdGhpcy5zYW1wbGVyID0gbmV3IFNhbXBsZXIoe1xuICAgIHdyYXBTOiB3cmFwLFxuICAgIHdyYXBUOiB3cmFwLFxuICAgIG1pbmlmaWNhdGlvbkZpbHRlcjogb3B0aW9ucy5taW5pZmljYXRpb25GaWx0ZXIsXG4gICAgbWFnbmlmaWNhdGlvbkZpbHRlcjogb3B0aW9ucy5tYWduaWZpY2F0aW9uRmlsdGVyLFxuICAgIG1heGltdW1Bbmlzb3Ryb3B5OiBvcHRpb25zLm1heGltdW1Bbmlzb3Ryb3B5LFxuICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9774\n')},34754:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * An enum of the basic GLSL uniform types. These can be used with\n * {@link CustomShader} to declare user-defined uniforms.\n *\n * @enum {String}\n *\n * @private\n */\nvar UniformType = {\n  /**\n   * A single floating point value.\n   *\n   * @type {String}\n   * @constant\n   */\n  FLOAT: "float",\n  /**\n   * A vector of 2 floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  VEC2: "vec2",\n  /**\n   * A vector of 3 floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  VEC3: "vec3",\n  /**\n   * A vector of 4 floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  VEC4: "vec4",\n  /**\n   * A single integer value\n   *\n   * @type {String}\n   * @constant\n   */\n  INT: "int",\n  /**\n   * A vector of 2 integer values.\n   *\n   * @type {String}\n   * @constant\n   */\n  INT_VEC2: "ivec2",\n  /**\n   * A vector of 3 integer values.\n   *\n   * @type {String}\n   * @constant\n   */\n  INT_VEC3: "ivec3",\n  /**\n   * A vector of 4 integer values.\n   *\n   * @type {String}\n   * @constant\n   */\n  INT_VEC4: "ivec4",\n  /**\n   * A single boolean value.\n   *\n   * @type {String}\n   * @constant\n   */\n  BOOL: "bool",\n  /**\n   * A vector of 2 boolean values.\n   *\n   * @type {String}\n   * @constant\n   */\n  BOOL_VEC2: "bvec2",\n  /**\n   * A vector of 3 boolean values.\n   *\n   * @type {String}\n   * @constant\n   */\n  BOOL_VEC3: "bvec3",\n  /**\n   * A vector of 4 boolean values.\n   *\n   * @type {String}\n   * @constant\n   */\n  BOOL_VEC4: "bvec4",\n  /**\n   * A 2x2 matrix of floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  MAT2: "mat2",\n  /**\n   * A 3x3 matrix of floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  MAT3: "mat2",\n  /**\n   * A 3x3 matrix of floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  MAT4: "mat4",\n  /**\n   * A 2D sampled texture.\n   * @type {String}\n   * @constant\n   */\n  SAMPLER_2D: "sampler2D",\n  SAMPLER_CUBE: "samplerCube",\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(UniformType));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQ3NTQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLElBQUksb0JBQW9CO0FBQ3hCO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlEQUFlLDBCQUEwQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01vZGVsRXhwZXJpbWVudGFsL1VuaWZvcm1UeXBlLmpzP2IxNjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBbiBlbnVtIG9mIHRoZSBiYXNpYyBHTFNMIHVuaWZvcm0gdHlwZXMuIFRoZXNlIGNhbiBiZSB1c2VkIHdpdGhcbiAqIHtAbGluayBDdXN0b21TaGFkZXJ9IHRvIGRlY2xhcmUgdXNlci1kZWZpbmVkIHVuaWZvcm1zLlxuICpcbiAqIEBlbnVtIHtTdHJpbmd9XG4gKlxuICogQHByaXZhdGVcbiAqL1xudmFyIFVuaWZvcm1UeXBlID0ge1xuICAvKipcbiAgICogQSBzaW5nbGUgZmxvYXRpbmcgcG9pbnQgdmFsdWUuXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgRkxPQVQ6IFwiZmxvYXRcIixcbiAgLyoqXG4gICAqIEEgdmVjdG9yIG9mIDIgZmxvYXRpbmcgcG9pbnQgdmFsdWVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFZFQzI6IFwidmVjMlwiLFxuICAvKipcbiAgICogQSB2ZWN0b3Igb2YgMyBmbG9hdGluZyBwb2ludCB2YWx1ZXMuXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgVkVDMzogXCJ2ZWMzXCIsXG4gIC8qKlxuICAgKiBBIHZlY3RvciBvZiA0IGZsb2F0aW5nIHBvaW50IHZhbHVlcy5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBWRUM0OiBcInZlYzRcIixcbiAgLyoqXG4gICAqIEEgc2luZ2xlIGludGVnZXIgdmFsdWVcbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBJTlQ6IFwiaW50XCIsXG4gIC8qKlxuICAgKiBBIHZlY3RvciBvZiAyIGludGVnZXIgdmFsdWVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIElOVF9WRUMyOiBcIml2ZWMyXCIsXG4gIC8qKlxuICAgKiBBIHZlY3RvciBvZiAzIGludGVnZXIgdmFsdWVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIElOVF9WRUMzOiBcIml2ZWMzXCIsXG4gIC8qKlxuICAgKiBBIHZlY3RvciBvZiA0IGludGVnZXIgdmFsdWVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIElOVF9WRUM0OiBcIml2ZWM0XCIsXG4gIC8qKlxuICAgKiBBIHNpbmdsZSBib29sZWFuIHZhbHVlLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIEJPT0w6IFwiYm9vbFwiLFxuICAvKipcbiAgICogQSB2ZWN0b3Igb2YgMiBib29sZWFuIHZhbHVlcy5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBCT09MX1ZFQzI6IFwiYnZlYzJcIixcbiAgLyoqXG4gICAqIEEgdmVjdG9yIG9mIDMgYm9vbGVhbiB2YWx1ZXMuXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgQk9PTF9WRUMzOiBcImJ2ZWMzXCIsXG4gIC8qKlxuICAgKiBBIHZlY3RvciBvZiA0IGJvb2xlYW4gdmFsdWVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIEJPT0xfVkVDNDogXCJidmVjNFwiLFxuICAvKipcbiAgICogQSAyeDIgbWF0cml4IG9mIGZsb2F0aW5nIHBvaW50IHZhbHVlcy5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBNQVQyOiBcIm1hdDJcIixcbiAgLyoqXG4gICAqIEEgM3gzIG1hdHJpeCBvZiBmbG9hdGluZyBwb2ludCB2YWx1ZXMuXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTUFUMzogXCJtYXQyXCIsXG4gIC8qKlxuICAgKiBBIDN4MyBtYXRyaXggb2YgZmxvYXRpbmcgcG9pbnQgdmFsdWVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIE1BVDQ6IFwibWF0NFwiLFxuICAvKipcbiAgICogQSAyRCBzYW1wbGVkIHRleHR1cmUuXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgU0FNUExFUl8yRDogXCJzYW1wbGVyMkRcIixcbiAgU0FNUExFUl9DVUJFOiBcInNhbXBsZXJDdWJlXCIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKFVuaWZvcm1UeXBlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34754\n')},11773:function(){eval('/**\n * An enum for the GLSL varying types. These can be used for declaring varyings\n * in {@link CustomShader}\n *\n * @enum {String}\n *\n * @private\n */\nvar VaryingType = {\n  /**\n   * A single floating point value.\n   *\n   * @type {String}\n   * @constant\n   */\n  FLOAT: "float",\n  /**\n   * A vector of 2 floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  VEC2: "vec2",\n  /**\n   * A vector of 3 floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  VEC3: "vec3",\n  /**\n   * A vector of 4 floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  VEC4: "vec4",\n  /**\n   * A 2x2 matrix of floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  MAT2: "mat2",\n  /**\n   * A 3x3 matrix of floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  MAT3: "mat2",\n  /**\n   * A 3x3 matrix of floating point values.\n   *\n   * @type {String}\n   * @constant\n   */\n  MAT4: "mat4",\n};\n\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = (Object.freeze(VaryingType));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE3NzMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzRUFBZSwwQkFBMEIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9Nb2RlbEV4cGVyaW1lbnRhbC9WYXJ5aW5nVHlwZS5qcz84MDg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQW4gZW51bSBmb3IgdGhlIEdMU0wgdmFyeWluZyB0eXBlcy4gVGhlc2UgY2FuIGJlIHVzZWQgZm9yIGRlY2xhcmluZyB2YXJ5aW5nc1xuICogaW4ge0BsaW5rIEN1c3RvbVNoYWRlcn1cbiAqXG4gKiBAZW51bSB7U3RyaW5nfVxuICpcbiAqIEBwcml2YXRlXG4gKi9cbnZhciBWYXJ5aW5nVHlwZSA9IHtcbiAgLyoqXG4gICAqIEEgc2luZ2xlIGZsb2F0aW5nIHBvaW50IHZhbHVlLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIEZMT0FUOiBcImZsb2F0XCIsXG4gIC8qKlxuICAgKiBBIHZlY3RvciBvZiAyIGZsb2F0aW5nIHBvaW50IHZhbHVlcy5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBWRUMyOiBcInZlYzJcIixcbiAgLyoqXG4gICAqIEEgdmVjdG9yIG9mIDMgZmxvYXRpbmcgcG9pbnQgdmFsdWVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFZFQzM6IFwidmVjM1wiLFxuICAvKipcbiAgICogQSB2ZWN0b3Igb2YgNCBmbG9hdGluZyBwb2ludCB2YWx1ZXMuXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgVkVDNDogXCJ2ZWM0XCIsXG4gIC8qKlxuICAgKiBBIDJ4MiBtYXRyaXggb2YgZmxvYXRpbmcgcG9pbnQgdmFsdWVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIE1BVDI6IFwibWF0MlwiLFxuICAvKipcbiAgICogQSAzeDMgbWF0cml4IG9mIGZsb2F0aW5nIHBvaW50IHZhbHVlcy5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBNQVQzOiBcIm1hdDJcIixcbiAgLyoqXG4gICAqIEEgM3gzIG1hdHJpeCBvZiBmbG9hdGluZyBwb2ludCB2YWx1ZXMuXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTUFUNDogXCJtYXQ0XCIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKFZhcnlpbmdUeXBlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11773\n')},32347:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ buildDrawCommand; }\n/* harmony export */ });\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60072);\n/* harmony import */ var _Shaders_ModelExperimental_ModelExperimentalFS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3166);\n/* harmony import */ var _Shaders_ModelExperimental_ModelExperimentalVS_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(73373);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18192);\n\n\n\n\n\n\n\n/**\n * Builds a DrawCommand for a {@link ModelExperimentalPrimitive} using its render resources.\n *\n * @param {PrimitiveRenderResources} primitiveRenderResources The render resources for a primitive.\n * @param {FrameState} frameState The frame state for creating GPU resources.\n *\n * @returns {DrawCommand} The generated DrawCommand.\n *\n * @private\n */\nfunction buildDrawCommand(primitiveRenderResources, frameState) {\n  var shaderBuilder = primitiveRenderResources.shaderBuilder;\n  shaderBuilder.addVertexLines([_Shaders_ModelExperimental_ModelExperimentalVS_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z]);\n  shaderBuilder.addFragmentLines([_Shaders_ModelExperimental_ModelExperimentalFS_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z]);\n\n  var indexBuffer = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(primitiveRenderResources.indices)\n    ? primitiveRenderResources.indices.buffer\n    : undefined;\n\n  var vertexArray = new _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({\n    context: frameState.context,\n    indexBuffer: indexBuffer,\n    attributes: primitiveRenderResources.attributes,\n  });\n\n  var model = primitiveRenderResources.model;\n  model._resources.push(vertexArray);\n\n  var renderState = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromCache */ .Z.fromCache(\n    primitiveRenderResources.renderStateOptions\n  );\n\n  var shaderProgram = shaderBuilder.buildShaderProgram(frameState.context);\n  model._resources.push(shaderProgram);\n\n  return new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z({\n    boundingVolume: primitiveRenderResources.boundingSphere,\n    modelMatrix: primitiveRenderResources.modelMatrix,\n    uniformMap: primitiveRenderResources.uniformMap,\n    renderState: renderState,\n    vertexArray: vertexArray,\n    shaderProgram: shaderProgram,\n    cull: model.cull,\n    pass: primitiveRenderResources.alphaOptions.pass,\n    count: primitiveRenderResources.count,\n    pickId: primitiveRenderResources.pickId,\n    instanceCount: primitiveRenderResources.instanceCount,\n    primitiveType: primitiveRenderResources.primitiveType,\n    debugShowBoundingVolume: model.debugShowBoundingVolume,\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIzNDcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTRDO0FBQ1k7QUFDaUM7QUFDQTtBQUNqQztBQUNBOztBQUV4RDtBQUNBLCtCQUErQixrQ0FBa0M7QUFDakU7QUFDQSxXQUFXLDBCQUEwQjtBQUNyQyxXQUFXLFlBQVk7QUFDdkI7QUFDQSxhQUFhLGFBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBLGdDQUFnQyxrR0FBbUI7QUFDbkQsa0NBQWtDLGtHQUFtQjs7QUFFckQsb0JBQW9CLHFFQUFPO0FBQzNCO0FBQ0E7O0FBRUEsd0JBQXdCLHlFQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQSxvQkFBb0IsNkZBQXFCO0FBQ3pDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxhQUFhLHlFQUFXO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01vZGVsRXhwZXJpbWVudGFsL2J1aWxkRHJhd0NvbW1hbmQuanM/NmE4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRHJhd0NvbW1hbmQgZnJvbSBcIi4uLy4uL1JlbmRlcmVyL0RyYXdDb21tYW5kLmpzXCI7XG5pbXBvcnQgTW9kZWxFeHBlcmltZW50YWxGUyBmcm9tIFwiLi4vLi4vU2hhZGVycy9Nb2RlbEV4cGVyaW1lbnRhbC9Nb2RlbEV4cGVyaW1lbnRhbEZTLmpzXCI7XG5pbXBvcnQgTW9kZWxFeHBlcmltZW50YWxWUyBmcm9tIFwiLi4vLi4vU2hhZGVycy9Nb2RlbEV4cGVyaW1lbnRhbC9Nb2RlbEV4cGVyaW1lbnRhbFZTLmpzXCI7XG5pbXBvcnQgUmVuZGVyU3RhdGUgZnJvbSBcIi4uLy4uL1JlbmRlcmVyL1JlbmRlclN0YXRlLmpzXCI7XG5pbXBvcnQgVmVydGV4QXJyYXkgZnJvbSBcIi4uLy4uL1JlbmRlcmVyL1ZlcnRleEFycmF5LmpzXCI7XG5cbi8qKlxuICogQnVpbGRzIGEgRHJhd0NvbW1hbmQgZm9yIGEge0BsaW5rIE1vZGVsRXhwZXJpbWVudGFsUHJpbWl0aXZlfSB1c2luZyBpdHMgcmVuZGVyIHJlc291cmNlcy5cbiAqXG4gKiBAcGFyYW0ge1ByaW1pdGl2ZVJlbmRlclJlc291cmNlc30gcHJpbWl0aXZlUmVuZGVyUmVzb3VyY2VzIFRoZSByZW5kZXIgcmVzb3VyY2VzIGZvciBhIHByaW1pdGl2ZS5cbiAqIEBwYXJhbSB7RnJhbWVTdGF0ZX0gZnJhbWVTdGF0ZSBUaGUgZnJhbWUgc3RhdGUgZm9yIGNyZWF0aW5nIEdQVSByZXNvdXJjZXMuXG4gKlxuICogQHJldHVybnMge0RyYXdDb21tYW5kfSBUaGUgZ2VuZXJhdGVkIERyYXdDb21tYW5kLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJ1aWxkRHJhd0NvbW1hbmQocHJpbWl0aXZlUmVuZGVyUmVzb3VyY2VzLCBmcmFtZVN0YXRlKSB7XG4gIHZhciBzaGFkZXJCdWlsZGVyID0gcHJpbWl0aXZlUmVuZGVyUmVzb3VyY2VzLnNoYWRlckJ1aWxkZXI7XG4gIHNoYWRlckJ1aWxkZXIuYWRkVmVydGV4TGluZXMoW01vZGVsRXhwZXJpbWVudGFsVlNdKTtcbiAgc2hhZGVyQnVpbGRlci5hZGRGcmFnbWVudExpbmVzKFtNb2RlbEV4cGVyaW1lbnRhbEZTXSk7XG5cbiAgdmFyIGluZGV4QnVmZmVyID0gZGVmaW5lZChwcmltaXRpdmVSZW5kZXJSZXNvdXJjZXMuaW5kaWNlcylcbiAgICA/IHByaW1pdGl2ZVJlbmRlclJlc291cmNlcy5pbmRpY2VzLmJ1ZmZlclxuICAgIDogdW5kZWZpbmVkO1xuXG4gIHZhciB2ZXJ0ZXhBcnJheSA9IG5ldyBWZXJ0ZXhBcnJheSh7XG4gICAgY29udGV4dDogZnJhbWVTdGF0ZS5jb250ZXh0LFxuICAgIGluZGV4QnVmZmVyOiBpbmRleEJ1ZmZlcixcbiAgICBhdHRyaWJ1dGVzOiBwcmltaXRpdmVSZW5kZXJSZXNvdXJjZXMuYXR0cmlidXRlcyxcbiAgfSk7XG5cbiAgdmFyIG1vZGVsID0gcHJpbWl0aXZlUmVuZGVyUmVzb3VyY2VzLm1vZGVsO1xuICBtb2RlbC5fcmVzb3VyY2VzLnB1c2godmVydGV4QXJyYXkpO1xuXG4gIHZhciByZW5kZXJTdGF0ZSA9IFJlbmRlclN0YXRlLmZyb21DYWNoZShcbiAgICBwcmltaXRpdmVSZW5kZXJSZXNvdXJjZXMucmVuZGVyU3RhdGVPcHRpb25zXG4gICk7XG5cbiAgdmFyIHNoYWRlclByb2dyYW0gPSBzaGFkZXJCdWlsZGVyLmJ1aWxkU2hhZGVyUHJvZ3JhbShmcmFtZVN0YXRlLmNvbnRleHQpO1xuICBtb2RlbC5fcmVzb3VyY2VzLnB1c2goc2hhZGVyUHJvZ3JhbSk7XG5cbiAgcmV0dXJuIG5ldyBEcmF3Q29tbWFuZCh7XG4gICAgYm91bmRpbmdWb2x1bWU6IHByaW1pdGl2ZVJlbmRlclJlc291cmNlcy5ib3VuZGluZ1NwaGVyZSxcbiAgICBtb2RlbE1hdHJpeDogcHJpbWl0aXZlUmVuZGVyUmVzb3VyY2VzLm1vZGVsTWF0cml4LFxuICAgIHVuaWZvcm1NYXA6IHByaW1pdGl2ZVJlbmRlclJlc291cmNlcy51bmlmb3JtTWFwLFxuICAgIHJlbmRlclN0YXRlOiByZW5kZXJTdGF0ZSxcbiAgICB2ZXJ0ZXhBcnJheTogdmVydGV4QXJyYXksXG4gICAgc2hhZGVyUHJvZ3JhbTogc2hhZGVyUHJvZ3JhbSxcbiAgICBjdWxsOiBtb2RlbC5jdWxsLFxuICAgIHBhc3M6IHByaW1pdGl2ZVJlbmRlclJlc291cmNlcy5hbHBoYU9wdGlvbnMucGFzcyxcbiAgICBjb3VudDogcHJpbWl0aXZlUmVuZGVyUmVzb3VyY2VzLmNvdW50LFxuICAgIHBpY2tJZDogcHJpbWl0aXZlUmVuZGVyUmVzb3VyY2VzLnBpY2tJZCxcbiAgICBpbnN0YW5jZUNvdW50OiBwcmltaXRpdmVSZW5kZXJSZXNvdXJjZXMuaW5zdGFuY2VDb3VudCxcbiAgICBwcmltaXRpdmVUeXBlOiBwcmltaXRpdmVSZW5kZXJSZXNvdXJjZXMucHJpbWl0aXZlVHlwZSxcbiAgICBkZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZTogbW9kZWwuZGVidWdTaG93Qm91bmRpbmdWb2x1bWUsXG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///32347\n')},61021:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(72248);\n\n\n/**\n * @private\n */\nfunction ModelInstance(collection, modelMatrix, instanceId) {\n  this.primitive = collection;\n  this._modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(modelMatrix);\n  this._instanceId = instanceId;\n}\n\nObject.defineProperties(ModelInstance.prototype, {\n  instanceId: {\n    get: function () {\n      return this._instanceId;\n    },\n  },\n  model: {\n    get: function () {\n      return this.primitive._model;\n    },\n  },\n  modelMatrix: {\n    get: function () {\n      return _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(this._modelMatrix);\n    },\n    set: function (value) {\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(value, this._modelMatrix);\n      this.primitive.expandBoundingSphere(this._modelMatrix);\n      this.primitive._dirty = true;\n    },\n  },\n});\n/* harmony default export */ __webpack_exports__["Z"] = (ModelInstance);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUF5Qzs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw2RUFBYTtBQUNuQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQSxhQUFhLDZFQUFhO0FBQzFCLEtBQUs7QUFDTDtBQUNBLE1BQU0sNkVBQWE7QUFDbkI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsQ0FBQztBQUNELHlEQUFlLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9Nb2RlbEluc3RhbmNlLmpzP2QyNDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1hdHJpeDQgZnJvbSBcIi4uL0NvcmUvTWF0cml4NC5qc1wiO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIE1vZGVsSW5zdGFuY2UoY29sbGVjdGlvbiwgbW9kZWxNYXRyaXgsIGluc3RhbmNlSWQpIHtcbiAgdGhpcy5wcmltaXRpdmUgPSBjb2xsZWN0aW9uO1xuICB0aGlzLl9tb2RlbE1hdHJpeCA9IE1hdHJpeDQuY2xvbmUobW9kZWxNYXRyaXgpO1xuICB0aGlzLl9pbnN0YW5jZUlkID0gaW5zdGFuY2VJZDtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoTW9kZWxJbnN0YW5jZS5wcm90b3R5cGUsIHtcbiAgaW5zdGFuY2VJZDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlSWQ7XG4gICAgfSxcbiAgfSxcbiAgbW9kZWw6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLnByaW1pdGl2ZS5fbW9kZWw7XG4gICAgfSxcbiAgfSxcbiAgbW9kZWxNYXRyaXg6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBNYXRyaXg0LmNsb25lKHRoaXMuX21vZGVsTWF0cml4KTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBNYXRyaXg0LmNsb25lKHZhbHVlLCB0aGlzLl9tb2RlbE1hdHJpeCk7XG4gICAgICB0aGlzLnByaW1pdGl2ZS5leHBhbmRCb3VuZGluZ1NwaGVyZSh0aGlzLl9tb2RlbE1hdHJpeCk7XG4gICAgICB0aGlzLnByaW1pdGl2ZS5fZGlydHkgPSB0cnVlO1xuICAgIH0sXG4gIH0sXG59KTtcbmV4cG9ydCBkZWZhdWx0IE1vZGVsSW5zdGFuY2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///61021\n')},41074:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _Core_clone_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(83856);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59947);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(72248);\n/* harmony import */ var _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(97264);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(68985);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(9407);\n/* harmony import */ var _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(95555);\n/* harmony import */ var _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(99095);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(53642);\n/* harmony import */ var _GltfPipeline_ForEach_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(56629);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(13222);\n/* harmony import */ var _Model_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(16626);\n/* harmony import */ var _ModelInstance_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(61021);\n/* harmony import */ var _ModelUtility_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(15322);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(89917);\n/* harmony import */ var _ShadowMode_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(34125);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LoadState = {\n  NEEDS_LOAD: 0,\n  LOADING: 1,\n  LOADED: 2,\n  FAILED: 3,\n};\n\n/**\n * A 3D model instance collection. All instances reference the same underlying model, but have unique\n * per-instance properties like model matrix, pick id, etc.\n *\n * Instances are rendered relative-to-center and for best results instances should be positioned close to one another.\n * Otherwise there may be precision issues if, for example, instances are placed on opposite sides of the globe.\n *\n * @alias ModelInstanceCollection\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Object[]} [options.instances] An array of instances, where each instance contains a modelMatrix and optional batchId when options.batchTable is defined.\n * @param {Cesium3DTileBatchTable} [options.batchTable] The batch table of the instanced 3D Tile.\n * @param {Resource|String} [options.url] The url to the .gltf file.\n * @param {Object} [options.requestType] The request type, used for request prioritization\n * @param {Object|ArrayBuffer|Uint8Array} [options.gltf] A glTF JSON object, or a binary glTF buffer.\n * @param {Resource|String} [options.basePath=\'\'] The base path that paths in the glTF JSON are relative to.\n * @param {Boolean} [options.dynamic=false] Hint if instance model matrices will be updated frequently.\n * @param {Boolean} [options.show=true] Determines if the collection will be shown.\n * @param {Boolean} [options.allowPicking=true] When <code>true</code>, each instance is pickable with {@link Scene#pick}.\n * @param {Boolean} [options.asynchronous=true] Determines if model WebGL resource creation will be spread out over several frames or block until completion once all glTF files are loaded.\n * @param {Boolean} [options.incrementallyLoadTextures=true] Determine if textures may continue to stream in after the model is loaded.\n * @param {ShadowMode} [options.shadows=ShadowMode.ENABLED] Determines whether the collection casts or receives shadows from light sources.\n * @param {Cartesian2} [options.imageBasedLightingFactor=new Cartesian2(1.0, 1.0)] Scales the diffuse and specular image-based lighting from the earth, sky, atmosphere and star skybox.\n * @param {Cartesian3} [options.lightColor] The light color when shading models. When <code>undefined</code> the scene\'s light color is used instead.\n * @param {Number} [options.luminanceAtZenith=0.2] The sun\'s luminance at the zenith in kilo candela per meter squared to use for this model\'s procedural environment map.\n * @param {Cartesian3[]} [options.sphericalHarmonicCoefficients] The third order spherical harmonic coefficients used for the diffuse color of image-based lighting.\n * @param {String} [options.specularEnvironmentMaps] A URL to a KTX2 file that contains a cube map of the specular lighting and the convoluted specular mipmaps.\n * @param {Boolean} [options.backFaceCulling=true] Whether to cull back-facing geometry. When true, back face culling is determined by the glTF material\'s doubleSided property; when false, back face culling is disabled.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Draws the bounding sphere for the collection.\n * @param {Boolean} [options.debugWireframe=false] For debugging only. Draws the instances in wireframe.\n *\n * @exception {DeveloperError} Must specify either <options.gltf> or <options.url>, but not both.\n * @exception {DeveloperError} Shader program cannot be optimized for instancing. Parameters cannot have any of the following semantics: MODEL, MODELINVERSE, MODELVIEWINVERSE, MODELVIEWPROJECTIONINVERSE, MODELINVERSETRANSPOSE.\n *\n * @private\n */\nfunction ModelInstanceCollection(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.gltf) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.url)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z("Either options.gltf or options.url is required.");\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.gltf) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(options.url)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z(\n      "Cannot pass in both options.gltf and options.url."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this.show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.show, true);\n\n  this._instancingSupported = false;\n  this._dynamic = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.dynamic, false);\n  this._allowPicking = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.allowPicking, true);\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].defer */ .Z.defer();\n  this._state = LoadState.NEEDS_LOAD;\n  this._dirty = false;\n\n  // Undocumented options\n  this._cull = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.cull, true);\n  this._opaquePass = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.opaquePass, _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].OPAQUE */ .Z.OPAQUE);\n\n  this._instances = createInstances(this, options.instances);\n\n  // When the model instance collection is backed by an i3dm tile,\n  // use its batch table resources to modify the shaders, attributes, and uniform maps.\n  this._batchTable = options.batchTable;\n\n  this._model = undefined;\n  this._vertexBufferTypedArray = undefined; // Hold onto the vertex buffer contents when dynamic is true\n  this._vertexBuffer = undefined;\n  this._batchIdBuffer = undefined;\n  this._instancedUniformsByProgram = undefined;\n\n  this._drawCommands = [];\n  this._modelCommands = undefined;\n\n  this._renderStates = undefined;\n  this._disableCullingRenderStates = undefined;\n\n  this._boundingSphere = createBoundingSphere(this);\n  this._center = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(this._boundingSphere.center);\n  this._rtcTransform = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n  this._rtcModelView = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(); // Holds onto uniform\n\n  this._mode = undefined;\n\n  this.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  this._modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(this.modelMatrix);\n\n  // Passed on to Model\n  this._url = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createIfNeeded */ .Z.createIfNeeded(options.url);\n  this._requestType = options.requestType;\n  this._gltf = options.gltf;\n  this._basePath = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createIfNeeded */ .Z.createIfNeeded(options.basePath);\n  this._asynchronous = options.asynchronous;\n  this._incrementallyLoadTextures = options.incrementallyLoadTextures;\n  this._upAxis = options.upAxis; // Undocumented option\n  this._forwardAxis = options.forwardAxis; // Undocumented option\n\n  this.shadows = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.shadows, _ShadowMode_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].ENABLED */ .Z.ENABLED);\n  this._shadows = this.shadows;\n\n  this._pickIdLoaded = options.pickIdLoaded;\n\n  this.debugShowBoundingVolume = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(\n    options.debugShowBoundingVolume,\n    false\n  );\n  this._debugShowBoundingVolume = false;\n\n  this.debugWireframe = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.debugWireframe, false);\n  this._debugWireframe = false;\n\n  this._imageBasedLightingFactor = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(1.0, 1.0);\n  _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n    options.imageBasedLightingFactor,\n    this._imageBasedLightingFactor\n  );\n  this.lightColor = options.lightColor;\n  this.luminanceAtZenith = options.luminanceAtZenith;\n  this.sphericalHarmonicCoefficients = options.sphericalHarmonicCoefficients;\n  this.specularEnvironmentMaps = options.specularEnvironmentMaps;\n  this.backFaceCulling = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(options.backFaceCulling, true);\n  this._backFaceCulling = this.backFaceCulling;\n}\n\nObject.defineProperties(ModelInstanceCollection.prototype, {\n  allowPicking: {\n    get: function () {\n      return this._allowPicking;\n    },\n  },\n  length: {\n    get: function () {\n      return this._instances.length;\n    },\n  },\n  activeAnimations: {\n    get: function () {\n      return this._model.activeAnimations;\n    },\n  },\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n  imageBasedLightingFactor: {\n    get: function () {\n      return this._imageBasedLightingFactor;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("imageBasedLightingFactor", value);\n      _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals(\n        "imageBasedLightingFactor.x",\n        value.x,\n        0.0\n      );\n      _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n        "imageBasedLightingFactor.x",\n        value.x,\n        1.0\n      );\n      _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals(\n        "imageBasedLightingFactor.y",\n        value.y,\n        0.0\n      );\n      _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n        "imageBasedLightingFactor.y",\n        value.y,\n        1.0\n      );\n      //>>includeEnd(\'debug\');\n      _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(value, this._imageBasedLightingFactor);\n    },\n  },\n});\n\nfunction createInstances(collection, instancesOptions) {\n  instancesOptions = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(instancesOptions, []);\n  var length = instancesOptions.length;\n  var instances = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    var instanceOptions = instancesOptions[i];\n    var modelMatrix = instanceOptions.modelMatrix;\n    var instanceId = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(instanceOptions.batchId, i);\n    instances[i] = new _ModelInstance_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z(collection, modelMatrix, instanceId);\n  }\n  return instances;\n}\n\nfunction createBoundingSphere(collection) {\n  var instancesLength = collection.length;\n  var points = new Array(instancesLength);\n  for (var i = 0; i < instancesLength; ++i) {\n    points[i] = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getTranslation */ .Z.getTranslation(\n      collection._instances[i]._modelMatrix,\n      new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z()\n    );\n  }\n\n  return _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromPoints */ .Z.fromPoints(points);\n}\n\nvar scratchCartesian = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\nModelInstanceCollection.prototype.expandBoundingSphere = function (\n  instanceModelMatrix\n) {\n  var translation = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getTranslation */ .Z.getTranslation(\n    instanceModelMatrix,\n    scratchCartesian\n  );\n  _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].expand */ .Z.expand(\n    this._boundingSphere,\n    translation,\n    this._boundingSphere\n  );\n};\n\nfunction getCheckUniformSemanticFunction(\n  modelSemantics,\n  supportedSemantics,\n  programId,\n  uniformMap\n) {\n  return function (uniform, uniformName) {\n    var semantic = uniform.semantic;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(semantic) && modelSemantics.indexOf(semantic) > -1) {\n      if (supportedSemantics.indexOf(semantic) > -1) {\n        uniformMap[uniformName] = semantic;\n      } else {\n        throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z(\n          "Shader program cannot be optimized for instancing. " +\n            \'Uniform "\' +\n            uniformName +\n            \'" in program "\' +\n            programId +\n            \'" uses unsupported semantic "\' +\n            semantic +\n            \'"\'\n        );\n      }\n    }\n  };\n}\n\nfunction getInstancedUniforms(collection, programId) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._instancedUniformsByProgram)) {\n    return collection._instancedUniformsByProgram[programId];\n  }\n\n  var instancedUniformsByProgram = {};\n  collection._instancedUniformsByProgram = instancedUniformsByProgram;\n\n  // When using CESIUM_RTC_MODELVIEW the CESIUM_RTC center is ignored. Instances are always rendered relative-to-center.\n  var modelSemantics = [\n    "MODEL",\n    "MODELVIEW",\n    "CESIUM_RTC_MODELVIEW",\n    "MODELVIEWPROJECTION",\n    "MODELINVERSE",\n    "MODELVIEWINVERSE",\n    "MODELVIEWPROJECTIONINVERSE",\n    "MODELINVERSETRANSPOSE",\n    "MODELVIEWINVERSETRANSPOSE",\n  ];\n  var supportedSemantics = [\n    "MODELVIEW",\n    "CESIUM_RTC_MODELVIEW",\n    "MODELVIEWPROJECTION",\n    "MODELVIEWINVERSETRANSPOSE",\n  ];\n\n  var techniques = collection._model._sourceTechniques;\n  for (var techniqueId in techniques) {\n    if (techniques.hasOwnProperty(techniqueId)) {\n      var technique = techniques[techniqueId];\n      var program = technique.program;\n\n      // Different techniques may share the same program, skip if already processed.\n      // This assumes techniques that share a program do not declare different semantics for the same uniforms.\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(instancedUniformsByProgram[program])) {\n        var uniformMap = {};\n        instancedUniformsByProgram[program] = uniformMap;\n        _GltfPipeline_ForEach_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].techniqueUniform */ .Z.techniqueUniform(\n          technique,\n          getCheckUniformSemanticFunction(\n            modelSemantics,\n            supportedSemantics,\n            programId,\n            uniformMap\n          )\n        );\n      }\n    }\n  }\n\n  return instancedUniformsByProgram[programId];\n}\n\nfunction getVertexShaderCallback(collection) {\n  return function (vs, programId) {\n    var instancedUniforms = getInstancedUniforms(collection, programId);\n    var usesBatchTable = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._batchTable);\n\n    var renamedSource = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].replaceMain */ .Z.replaceMain(vs, "czm_instancing_main");\n\n    var globalVarsHeader = "";\n    var globalVarsMain = "";\n    for (var uniform in instancedUniforms) {\n      if (instancedUniforms.hasOwnProperty(uniform)) {\n        var semantic = instancedUniforms[uniform];\n        var varName;\n        if (semantic === "MODELVIEW" || semantic === "CESIUM_RTC_MODELVIEW") {\n          varName = "czm_instanced_modelView";\n        } else if (semantic === "MODELVIEWPROJECTION") {\n          varName = "czm_instanced_modelViewProjection";\n          globalVarsHeader += "mat4 czm_instanced_modelViewProjection;\\n";\n          globalVarsMain +=\n            "czm_instanced_modelViewProjection = czm_projection * czm_instanced_modelView;\\n";\n        } else if (semantic === "MODELVIEWINVERSETRANSPOSE") {\n          varName = "czm_instanced_modelViewInverseTranspose";\n          globalVarsHeader += "mat3 czm_instanced_modelViewInverseTranspose;\\n";\n          globalVarsMain +=\n            "czm_instanced_modelViewInverseTranspose = mat3(czm_instanced_modelView);\\n";\n        }\n\n        // Remove the uniform declaration\n        var regex = new RegExp("uniform.*" + uniform + ".*");\n        renamedSource = renamedSource.replace(regex, "");\n\n        // Replace all occurrences of the uniform with the global variable\n        regex = new RegExp(uniform + "\\\\b", "g");\n        renamedSource = renamedSource.replace(regex, varName);\n      }\n    }\n\n    // czm_instanced_model is the model matrix of the instance relative to center\n    // czm_instanced_modifiedModelView is the transform from the center to view\n    // czm_instanced_nodeTransform is the local offset of the node within the model\n    var uniforms =\n      "uniform mat4 czm_instanced_modifiedModelView;\\n" +\n      "uniform mat4 czm_instanced_nodeTransform;\\n";\n\n    var batchIdAttribute;\n    var pickAttribute;\n    var pickVarying;\n\n    if (usesBatchTable) {\n      batchIdAttribute = "attribute float a_batchId;\\n";\n      pickAttribute = "";\n      pickVarying = "";\n    } else {\n      batchIdAttribute = "";\n      pickAttribute =\n        "attribute vec4 pickColor;\\n" + "varying vec4 v_pickColor;\\n";\n      pickVarying = "    v_pickColor = pickColor;\\n";\n    }\n\n    var instancedSource =\n      uniforms +\n      globalVarsHeader +\n      "mat4 czm_instanced_modelView;\\n" +\n      "attribute vec4 czm_modelMatrixRow0;\\n" +\n      "attribute vec4 czm_modelMatrixRow1;\\n" +\n      "attribute vec4 czm_modelMatrixRow2;\\n" +\n      batchIdAttribute +\n      pickAttribute +\n      renamedSource +\n      "void main()\\n" +\n      "{\\n" +\n      "    mat4 czm_instanced_model = mat4(czm_modelMatrixRow0.x, czm_modelMatrixRow1.x, czm_modelMatrixRow2.x, 0.0, czm_modelMatrixRow0.y, czm_modelMatrixRow1.y, czm_modelMatrixRow2.y, 0.0, czm_modelMatrixRow0.z, czm_modelMatrixRow1.z, czm_modelMatrixRow2.z, 0.0, czm_modelMatrixRow0.w, czm_modelMatrixRow1.w, czm_modelMatrixRow2.w, 1.0);\\n" +\n      "    czm_instanced_modelView = czm_instanced_modifiedModelView * czm_instanced_model * czm_instanced_nodeTransform;\\n" +\n      globalVarsMain +\n      "    czm_instancing_main();\\n" +\n      pickVarying +\n      "}\\n";\n\n    if (usesBatchTable) {\n      var gltf = collection._model.gltf;\n      var diffuseAttributeOrUniformName = _ModelUtility_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"].getDiffuseAttributeOrUniform */ .Z.getDiffuseAttributeOrUniform(\n        gltf,\n        programId\n      );\n      instancedSource = collection._batchTable.getVertexShaderCallback(\n        true,\n        "a_batchId",\n        diffuseAttributeOrUniformName\n      )(instancedSource);\n    }\n\n    return instancedSource;\n  };\n}\n\nfunction getFragmentShaderCallback(collection) {\n  return function (fs, programId) {\n    var batchTable = collection._batchTable;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(batchTable)) {\n      var gltf = collection._model.gltf;\n      var diffuseAttributeOrUniformName = _ModelUtility_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"].getDiffuseAttributeOrUniform */ .Z.getDiffuseAttributeOrUniform(\n        gltf,\n        programId\n      );\n      fs = batchTable.getFragmentShaderCallback(\n        true,\n        diffuseAttributeOrUniformName,\n        false\n      )(fs);\n    } else {\n      fs = "varying vec4 v_pickColor;\\n" + fs;\n    }\n    return fs;\n  };\n}\n\nfunction createModifiedModelView(collection, context) {\n  return function () {\n    return _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiply */ .Z.multiply(\n      context.uniformState.view,\n      collection._rtcTransform,\n      collection._rtcModelView\n    );\n  };\n}\n\nfunction createNodeTransformFunction(node) {\n  return function () {\n    return node.computedMatrix;\n  };\n}\n\nfunction getUniformMapCallback(collection, context) {\n  return function (uniformMap, programId, node) {\n    uniformMap = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(uniformMap);\n    uniformMap.czm_instanced_modifiedModelView = createModifiedModelView(\n      collection,\n      context\n    );\n    uniformMap.czm_instanced_nodeTransform = createNodeTransformFunction(node);\n\n    // Remove instanced uniforms from the uniform map\n    var instancedUniforms = getInstancedUniforms(collection, programId);\n    for (var uniform in instancedUniforms) {\n      if (instancedUniforms.hasOwnProperty(uniform)) {\n        delete uniformMap[uniform];\n      }\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._batchTable)) {\n      uniformMap = collection._batchTable.getUniformMapCallback()(uniformMap);\n    }\n\n    return uniformMap;\n  };\n}\n\nfunction getVertexShaderNonInstancedCallback(collection) {\n  return function (vs, programId) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._batchTable)) {\n      var gltf = collection._model.gltf;\n      var diffuseAttributeOrUniformName = _ModelUtility_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"].getDiffuseAttributeOrUniform */ .Z.getDiffuseAttributeOrUniform(\n        gltf,\n        programId\n      );\n      vs = collection._batchTable.getVertexShaderCallback(\n        true,\n        "a_batchId",\n        diffuseAttributeOrUniformName\n      )(vs);\n      // Treat a_batchId as a uniform rather than a vertex attribute\n      vs = "uniform float a_batchId\\n;" + vs;\n    }\n    return vs;\n  };\n}\n\nfunction getFragmentShaderNonInstancedCallback(collection) {\n  return function (fs, programId) {\n    var batchTable = collection._batchTable;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(batchTable)) {\n      var gltf = collection._model.gltf;\n      var diffuseAttributeOrUniformName = _ModelUtility_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"].getDiffuseAttributeOrUniform */ .Z.getDiffuseAttributeOrUniform(\n        gltf,\n        programId\n      );\n      fs = batchTable.getFragmentShaderCallback(\n        true,\n        diffuseAttributeOrUniformName,\n        false\n      )(fs);\n    } else {\n      fs = "uniform vec4 czm_pickColor;\\n" + fs;\n    }\n    return fs;\n  };\n}\n\nfunction getUniformMapNonInstancedCallback(collection) {\n  return function (uniformMap) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._batchTable)) {\n      uniformMap = collection._batchTable.getUniformMapCallback()(uniformMap);\n    }\n\n    return uniformMap;\n  };\n}\n\nfunction getVertexBufferTypedArray(collection) {\n  var instances = collection._instances;\n  var instancesLength = collection.length;\n  var collectionCenter = collection._center;\n  var vertexSizeInFloats = 12;\n\n  var bufferData = collection._vertexBufferTypedArray;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(bufferData)) {\n    bufferData = new Float32Array(instancesLength * vertexSizeInFloats);\n  }\n  if (collection._dynamic) {\n    // Hold onto the buffer data so we don\'t have to allocate new memory every frame.\n    collection._vertexBufferTypedArray = bufferData;\n  }\n\n  for (var i = 0; i < instancesLength; ++i) {\n    var modelMatrix = instances[i]._modelMatrix;\n\n    // Instance matrix is relative to center\n    var instanceMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(modelMatrix, scratchMatrix);\n    instanceMatrix[12] -= collectionCenter.x;\n    instanceMatrix[13] -= collectionCenter.y;\n    instanceMatrix[14] -= collectionCenter.z;\n\n    var offset = i * vertexSizeInFloats;\n\n    // First three rows of the model matrix\n    bufferData[offset + 0] = instanceMatrix[0];\n    bufferData[offset + 1] = instanceMatrix[4];\n    bufferData[offset + 2] = instanceMatrix[8];\n    bufferData[offset + 3] = instanceMatrix[12];\n    bufferData[offset + 4] = instanceMatrix[1];\n    bufferData[offset + 5] = instanceMatrix[5];\n    bufferData[offset + 6] = instanceMatrix[9];\n    bufferData[offset + 7] = instanceMatrix[13];\n    bufferData[offset + 8] = instanceMatrix[2];\n    bufferData[offset + 9] = instanceMatrix[6];\n    bufferData[offset + 10] = instanceMatrix[10];\n    bufferData[offset + 11] = instanceMatrix[14];\n  }\n\n  return bufferData;\n}\n\nfunction createVertexBuffer(collection, context) {\n  var i;\n  var instances = collection._instances;\n  var instancesLength = collection.length;\n  var dynamic = collection._dynamic;\n  var usesBatchTable = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._batchTable);\n\n  if (usesBatchTable) {\n    var batchIdBufferData = new Uint16Array(instancesLength);\n    for (i = 0; i < instancesLength; ++i) {\n      batchIdBufferData[i] = instances[i]._instanceId;\n    }\n    collection._batchIdBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: batchIdBufferData,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n  }\n\n  if (!usesBatchTable) {\n    var pickIdBuffer = new Uint8Array(instancesLength * 4);\n    for (i = 0; i < instancesLength; ++i) {\n      var pickId = collection._pickIds[i];\n      var pickColor = pickId.color;\n      var offset = i * 4;\n      pickIdBuffer[offset] = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.red);\n      pickIdBuffer[offset + 1] = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.green);\n      pickIdBuffer[offset + 2] = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.blue);\n      pickIdBuffer[offset + 3] = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.alpha);\n    }\n    collection._pickIdBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: pickIdBuffer,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n  }\n\n  var vertexBufferTypedArray = getVertexBufferTypedArray(collection);\n  collection._vertexBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n    context: context,\n    typedArray: vertexBufferTypedArray,\n    usage: dynamic ? _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STREAM_DRAW */ .Z.STREAM_DRAW : _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n  });\n}\n\nfunction updateVertexBuffer(collection) {\n  var vertexBufferTypedArray = getVertexBufferTypedArray(collection);\n  collection._vertexBuffer.copyFromArrayView(vertexBufferTypedArray);\n}\n\nfunction createPickIds(collection, context) {\n  // PERFORMANCE_IDEA: we could skip the pick buffer completely by allocating\n  // a continuous range of pickIds and then converting the base pickId + batchId\n  // to RGBA in the shader.  The only consider is precision issues, which might\n  // not be an issue in WebGL 2.\n  var instances = collection._instances;\n  var instancesLength = instances.length;\n  var pickIds = new Array(instancesLength);\n  for (var i = 0; i < instancesLength; ++i) {\n    pickIds[i] = context.createPickId(instances[i]);\n  }\n  return pickIds;\n}\n\nfunction createModel(collection, context) {\n  var instancingSupported = collection._instancingSupported;\n  var usesBatchTable = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._batchTable);\n  var allowPicking = collection._allowPicking;\n\n  var modelOptions = {\n    url: collection._url,\n    requestType: collection._requestType,\n    gltf: collection._gltf,\n    basePath: collection._basePath,\n    shadows: collection._shadows,\n    cacheKey: undefined,\n    asynchronous: collection._asynchronous,\n    allowPicking: allowPicking,\n    incrementallyLoadTextures: collection._incrementallyLoadTextures,\n    upAxis: collection._upAxis,\n    forwardAxis: collection._forwardAxis,\n    precreatedAttributes: undefined,\n    vertexShaderLoaded: undefined,\n    fragmentShaderLoaded: undefined,\n    uniformMapLoaded: undefined,\n    pickIdLoaded: collection._pickIdLoaded,\n    ignoreCommands: true,\n    opaquePass: collection._opaquePass,\n    imageBasedLightingFactor: collection.imageBasedLightingFactor,\n    lightColor: collection.lightColor,\n    luminanceAtZenith: collection.luminanceAtZenith,\n    sphericalHarmonicCoefficients: collection.sphericalHarmonicCoefficients,\n    specularEnvironmentMaps: collection.specularEnvironmentMaps,\n    showOutline: collection.showOutline,\n  };\n\n  if (!usesBatchTable) {\n    collection._pickIds = createPickIds(collection, context);\n  }\n\n  if (instancingSupported) {\n    createVertexBuffer(collection, context);\n\n    var vertexSizeInFloats = 12;\n    var componentSizeInBytes = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT\n    );\n\n    var instancedAttributes = {\n      czm_modelMatrixRow0: {\n        index: 0, // updated in Model\n        vertexBuffer: collection._vertexBuffer,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n        normalize: false,\n        offsetInBytes: 0,\n        strideInBytes: componentSizeInBytes * vertexSizeInFloats,\n        instanceDivisor: 1,\n      },\n      czm_modelMatrixRow1: {\n        index: 0, // updated in Model\n        vertexBuffer: collection._vertexBuffer,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n        normalize: false,\n        offsetInBytes: componentSizeInBytes * 4,\n        strideInBytes: componentSizeInBytes * vertexSizeInFloats,\n        instanceDivisor: 1,\n      },\n      czm_modelMatrixRow2: {\n        index: 0, // updated in Model\n        vertexBuffer: collection._vertexBuffer,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n        normalize: false,\n        offsetInBytes: componentSizeInBytes * 8,\n        strideInBytes: componentSizeInBytes * vertexSizeInFloats,\n        instanceDivisor: 1,\n      },\n    };\n\n    // When using a batch table, add a batch id attribute\n    if (usesBatchTable) {\n      instancedAttributes.a_batchId = {\n        index: 0, // updated in Model\n        vertexBuffer: collection._batchIdBuffer,\n        componentsPerAttribute: 1,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n        normalize: false,\n        offsetInBytes: 0,\n        strideInBytes: 0,\n        instanceDivisor: 1,\n      };\n    }\n\n    if (!usesBatchTable) {\n      instancedAttributes.pickColor = {\n        index: 0, // updated in Model\n        vertexBuffer: collection._pickIdBuffer,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n        normalize: true,\n        offsetInBytes: 0,\n        strideInBytes: 0,\n        instanceDivisor: 1,\n      };\n    }\n\n    modelOptions.precreatedAttributes = instancedAttributes;\n    modelOptions.vertexShaderLoaded = getVertexShaderCallback(collection);\n    modelOptions.fragmentShaderLoaded = getFragmentShaderCallback(collection);\n    modelOptions.uniformMapLoaded = getUniformMapCallback(collection, context);\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._url)) {\n      modelOptions.cacheKey = collection._url.getUrlComponent() + "#instanced";\n    }\n  } else {\n    modelOptions.vertexShaderLoaded = getVertexShaderNonInstancedCallback(\n      collection\n    );\n    modelOptions.fragmentShaderLoaded = getFragmentShaderNonInstancedCallback(\n      collection\n    );\n    modelOptions.uniformMapLoaded = getUniformMapNonInstancedCallback(\n      collection,\n      context\n    );\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._url)) {\n    collection._model = _Model_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].fromGltf */ .Z.fromGltf(modelOptions);\n  } else {\n    collection._model = new _Model_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z(modelOptions);\n  }\n}\n\nfunction updateWireframe(collection, force) {\n  if (collection._debugWireframe !== collection.debugWireframe || force) {\n    collection._debugWireframe = collection.debugWireframe;\n\n    // This assumes the original primitive was TRIANGLES and that the triangles\n    // are connected for the wireframe to look perfect.\n    var primitiveType = collection.debugWireframe\n      ? _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].LINES */ .Z.LINES\n      : _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].TRIANGLES */ .Z.TRIANGLES;\n    var commands = collection._drawCommands;\n    var length = commands.length;\n    for (var i = 0; i < length; ++i) {\n      commands[i].primitiveType = primitiveType;\n    }\n  }\n}\n\nfunction getDisableCullingRenderState(renderState) {\n  var rs = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(renderState, true);\n  rs.cull.enabled = false;\n  return _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].fromCache */ .Z.fromCache(rs);\n}\n\nfunction updateBackFaceCulling(collection, force) {\n  if (collection._backFaceCulling !== collection.backFaceCulling || force) {\n    collection._backFaceCulling = collection.backFaceCulling;\n\n    var commands = collection._drawCommands;\n    var length = commands.length;\n    var i;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._disableCullingRenderStates)) {\n      collection._disableCullingRenderStates = new Array(length);\n      collection._renderStates = new Array(length);\n      for (i = 0; i < length; ++i) {\n        var renderState = commands[i].renderState;\n        var derivedRenderState = getDisableCullingRenderState(renderState);\n        collection._disableCullingRenderStates[i] = derivedRenderState;\n        collection._renderStates[i] = renderState;\n      }\n    }\n\n    for (i = 0; i < length; ++i) {\n      commands[i].renderState = collection._backFaceCulling\n        ? collection._renderStates[i]\n        : collection._disableCullingRenderStates[i];\n    }\n  }\n}\n\nfunction updateShowBoundingVolume(collection, force) {\n  if (\n    collection.debugShowBoundingVolume !==\n      collection._debugShowBoundingVolume ||\n    force\n  ) {\n    collection._debugShowBoundingVolume = collection.debugShowBoundingVolume;\n\n    var commands = collection._drawCommands;\n    var length = commands.length;\n    for (var i = 0; i < length; ++i) {\n      commands[i].debugShowBoundingVolume = collection.debugShowBoundingVolume;\n    }\n  }\n}\n\nfunction createCommands(collection, drawCommands) {\n  var commandsLength = drawCommands.length;\n  var instancesLength = collection.length;\n  var boundingSphere = collection._boundingSphere;\n  var cull = collection._cull;\n\n  for (var i = 0; i < commandsLength; ++i) {\n    var drawCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].shallowClone */ .Z.shallowClone(drawCommands[i]);\n    drawCommand.instanceCount = instancesLength;\n    drawCommand.boundingVolume = boundingSphere;\n    drawCommand.cull = cull;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(collection._batchTable)) {\n      drawCommand.pickId = collection._batchTable.getPickId();\n    } else {\n      drawCommand.pickId = "v_pickColor";\n    }\n    collection._drawCommands.push(drawCommand);\n  }\n}\n\nfunction createBatchIdFunction(batchId) {\n  return function () {\n    return batchId;\n  };\n}\n\nfunction createPickColorFunction(color) {\n  return function () {\n    return color;\n  };\n}\n\nfunction createCommandsNonInstanced(collection, drawCommands) {\n  // When instancing is disabled, create commands for every instance.\n  var instances = collection._instances;\n  var commandsLength = drawCommands.length;\n  var instancesLength = collection.length;\n  var batchTable = collection._batchTable;\n  var usesBatchTable = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(batchTable);\n  var cull = collection._cull;\n\n  for (var i = 0; i < commandsLength; ++i) {\n    for (var j = 0; j < instancesLength; ++j) {\n      var drawCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].shallowClone */ .Z.shallowClone(drawCommands[i]);\n      drawCommand.modelMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(); // Updated in updateCommandsNonInstanced\n      drawCommand.boundingVolume = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(); // Updated in updateCommandsNonInstanced\n      drawCommand.cull = cull;\n      drawCommand.uniformMap = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(drawCommand.uniformMap);\n      if (usesBatchTable) {\n        drawCommand.uniformMap.a_batchId = createBatchIdFunction(\n          instances[j]._instanceId\n        );\n      } else {\n        var pickId = collection._pickIds[j];\n        drawCommand.uniformMap.czm_pickColor = createPickColorFunction(\n          pickId.color\n        );\n      }\n      collection._drawCommands.push(drawCommand);\n    }\n  }\n}\n\nfunction updateCommandsNonInstanced(collection) {\n  var modelCommands = collection._modelCommands;\n  var commandsLength = modelCommands.length;\n  var instancesLength = collection.length;\n  var collectionTransform = collection._rtcTransform;\n  var collectionCenter = collection._center;\n\n  for (var i = 0; i < commandsLength; ++i) {\n    var modelCommand = modelCommands[i];\n    for (var j = 0; j < instancesLength; ++j) {\n      var commandIndex = i * instancesLength + j;\n      var drawCommand = collection._drawCommands[commandIndex];\n      var instanceMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(\n        collection._instances[j]._modelMatrix,\n        scratchMatrix\n      );\n      instanceMatrix[12] -= collectionCenter.x;\n      instanceMatrix[13] -= collectionCenter.y;\n      instanceMatrix[14] -= collectionCenter.z;\n      instanceMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiply */ .Z.multiply(\n        collectionTransform,\n        instanceMatrix,\n        scratchMatrix\n      );\n      var nodeMatrix = modelCommand.modelMatrix;\n      var modelMatrix = drawCommand.modelMatrix;\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiply */ .Z.multiply(instanceMatrix, nodeMatrix, modelMatrix);\n\n      var nodeBoundingSphere = modelCommand.boundingVolume;\n      var boundingSphere = drawCommand.boundingVolume;\n      _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].transform */ .Z.transform(\n        nodeBoundingSphere,\n        instanceMatrix,\n        boundingSphere\n      );\n    }\n  }\n}\n\nfunction getModelCommands(model) {\n  var nodeCommands = model._nodeCommands;\n  var length = nodeCommands.length;\n\n  var drawCommands = [];\n\n  for (var i = 0; i < length; ++i) {\n    var nc = nodeCommands[i];\n    if (nc.show) {\n      drawCommands.push(nc.command);\n    }\n  }\n\n  return drawCommands;\n}\n\nfunction commandsDirty(model) {\n  var nodeCommands = model._nodeCommands;\n  var length = nodeCommands.length;\n\n  var commandsDirty = false;\n\n  for (var i = 0; i < length; i++) {\n    var nc = nodeCommands[i];\n    if (nc.command.dirty) {\n      nc.command.dirty = false;\n      commandsDirty = true;\n    }\n  }\n  return commandsDirty;\n}\n\nfunction generateModelCommands(modelInstanceCollection, instancingSupported) {\n  modelInstanceCollection._drawCommands = [];\n\n  var modelCommands = getModelCommands(modelInstanceCollection._model);\n  if (instancingSupported) {\n    createCommands(modelInstanceCollection, modelCommands);\n  } else {\n    createCommandsNonInstanced(modelInstanceCollection, modelCommands);\n    updateCommandsNonInstanced(modelInstanceCollection);\n  }\n}\n\nfunction updateShadows(collection, force) {\n  if (collection.shadows !== collection._shadows || force) {\n    collection._shadows = collection.shadows;\n\n    var castShadows = _ShadowMode_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].castShadows */ .Z.castShadows(collection.shadows);\n    var receiveShadows = _ShadowMode_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].receiveShadows */ .Z.receiveShadows(collection.shadows);\n\n    var drawCommands = collection._drawCommands;\n    var length = drawCommands.length;\n    for (var i = 0; i < length; ++i) {\n      var drawCommand = drawCommands[i];\n      drawCommand.castShadows = castShadows;\n      drawCommand.receiveShadows = receiveShadows;\n    }\n  }\n}\n\nModelInstanceCollection.prototype.update = function (frameState) {\n  if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].MORPHING */ .Z.MORPHING) {\n    return;\n  }\n\n  if (!this.show) {\n    return;\n  }\n\n  if (this.length === 0) {\n    return;\n  }\n\n  var context = frameState.context;\n\n  if (this._state === LoadState.NEEDS_LOAD) {\n    this._state = LoadState.LOADING;\n    this._instancingSupported = context.instancedArrays;\n    createModel(this, context);\n    var that = this;\n    this._model.readyPromise.otherwise(function (error) {\n      that._state = LoadState.FAILED;\n      that._readyPromise.reject(error);\n    });\n  }\n\n  var instancingSupported = this._instancingSupported;\n  var model = this._model;\n\n  model.imageBasedLightingFactor = this.imageBasedLightingFactor;\n  model.lightColor = this.lightColor;\n  model.luminanceAtZenith = this.luminanceAtZenith;\n  model.sphericalHarmonicCoefficients = this.sphericalHarmonicCoefficients;\n  model.specularEnvironmentMaps = this.specularEnvironmentMaps;\n\n  model.update(frameState);\n\n  if (model.ready && this._state === LoadState.LOADING) {\n    this._state = LoadState.LOADED;\n    this._ready = true;\n\n    // Expand bounding volume to fit the radius of the loaded model including the model\'s offset from the center\n    var modelRadius =\n      model.boundingSphere.radius +\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitude */ .Z.magnitude(model.boundingSphere.center);\n    this._boundingSphere.radius += modelRadius;\n    this._modelCommands = getModelCommands(model);\n\n    generateModelCommands(this, instancingSupported);\n\n    this._readyPromise.resolve(this);\n    return;\n  }\n\n  if (this._state !== LoadState.LOADED) {\n    return;\n  }\n\n  var modeChanged = frameState.mode !== this._mode;\n  var modelMatrix = this.modelMatrix;\n  var modelMatrixChanged = !_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].equals */ .Z.equals(this._modelMatrix, modelMatrix);\n\n  if (modeChanged || modelMatrixChanged) {\n    this._mode = frameState.mode;\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(modelMatrix, this._modelMatrix);\n    var rtcTransform = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiplyByTranslation */ .Z.multiplyByTranslation(\n      this._modelMatrix,\n      this._center,\n      this._rtcTransform\n    );\n    if (this._mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n      rtcTransform = _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].basisTo2D */ .Z.basisTo2D(\n        frameState.mapProjection,\n        rtcTransform,\n        rtcTransform\n      );\n    }\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getTranslation */ .Z.getTranslation(rtcTransform, this._boundingSphere.center);\n  }\n\n  if (instancingSupported && this._dirty) {\n    // If at least one instance has moved assume the collection is now dynamic\n    this._dynamic = true;\n    this._dirty = false;\n\n    // PERFORMANCE_IDEA: only update dirty sub-sections instead of the whole collection\n    updateVertexBuffer(this);\n  }\n\n  // If the model was set to rebuild shaders during update, rebuild instanced commands.\n  var modelCommandsDirty = commandsDirty(model);\n  if (modelCommandsDirty) {\n    generateModelCommands(this, instancingSupported);\n  }\n\n  // If any node changes due to an animation, update the commands. This could be inefficient if the model is\n  // composed of many nodes and only one changes, however it is probably fine in the general use case.\n  // Only applies when instancing is disabled. The instanced shader automatically handles node transformations.\n  if (\n    !instancingSupported &&\n    (model.dirty || this._dirty || modeChanged || modelMatrixChanged)\n  ) {\n    updateCommandsNonInstanced(this);\n  }\n\n  updateShadows(this, modelCommandsDirty);\n  updateWireframe(this, modelCommandsDirty);\n  updateBackFaceCulling(this, modelCommandsDirty);\n  updateShowBoundingVolume(this, modelCommandsDirty);\n\n  var passes = frameState.passes;\n  if (!passes.render && !passes.pick) {\n    return;\n  }\n\n  var commandList = frameState.commandList;\n  var commands = this._drawCommands;\n  var commandsLength = commands.length;\n\n  for (var i = 0; i < commandsLength; ++i) {\n    commandList.push(commands[i]);\n  }\n};\n\nModelInstanceCollection.prototype.isDestroyed = function () {\n  return false;\n};\n\nModelInstanceCollection.prototype.destroy = function () {\n  this._model = this._model && this._model.destroy();\n\n  var pickIds = this._pickIds;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z)(pickIds)) {\n    var length = pickIds.length;\n    for (var i = 0; i < length; ++i) {\n      pickIds[i].destroy();\n    }\n  }\n\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ModelInstanceCollection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEwNzQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBdUQ7QUFDUjtBQUNBO0FBQ1Y7QUFDQTtBQUNBO0FBQ3dCO0FBQ1Y7QUFDVjtBQUNZO0FBQ0U7QUFDZDtBQUNZO0FBQ1Y7QUFDUTtBQUNKO0FBQ0o7QUFDVTtBQUNBO0FBQ2Q7QUFDYztBQUNFO0FBQ1A7QUFDUDtBQUNWO0FBQ2dCO0FBQ0Y7QUFDTjtBQUNFOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsd0JBQXdCO0FBQ25DLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsUUFBUTtBQUNuQixXQUFXLCtCQUErQjtBQUMxQyxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUyxvRkFBb0YsaUJBQWlCO0FBQ3pILFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTLDZKQUE2SjtBQUNqTCxXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0IsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDBFQUFZLFVBQVUsZ0dBQXlCOztBQUUzRDtBQUNBLE9BQU8sc0VBQU8sbUJBQW1CLHNFQUFPO0FBQ3hDLGNBQWMsd0VBQWM7QUFDNUI7O0FBRUEsTUFBTSxzRUFBTyxrQkFBa0Isc0VBQU87QUFDdEMsY0FBYyx3RUFBYztBQUM1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLDBFQUFZOztBQUUxQjtBQUNBLGtCQUFrQiwwRUFBWTtBQUM5Qix1QkFBdUIsMEVBQVk7QUFDbkM7QUFDQSx1QkFBdUIsaUZBQVU7QUFDakM7QUFDQTs7QUFFQTtBQUNBLGVBQWUsMEVBQVk7QUFDM0IscUJBQXFCLDBFQUFZLHFCQUFxQixpRkFBVzs7QUFFakU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsZ0ZBQWdCO0FBQ2pDLDJCQUEyQixrRUFBTztBQUNsQywyQkFBMkIsa0VBQU8sSUFBSTs7QUFFdEM7O0FBRUEscUJBQXFCLDhFQUFhLENBQUMsb0ZBQWdCO0FBQ25ELHNCQUFzQiw4RUFBYTs7QUFFbkM7QUFDQSxjQUFjLGlHQUF1QjtBQUNyQztBQUNBO0FBQ0EsbUJBQW1CLGlHQUF1QjtBQUMxQztBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLDJDQUEyQzs7QUFFM0MsaUJBQWlCLDBFQUFZLGtCQUFrQixnRkFBa0I7QUFDakU7O0FBRUE7O0FBRUEsaUNBQWlDLDBFQUFZO0FBQzdDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QiwwRUFBWTtBQUNwQzs7QUFFQSx1Q0FBdUMsb0VBQVU7QUFDakQsRUFBRSxnRkFBZ0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMEVBQVk7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE1BQU0sMkZBQW1CO0FBQ3pCLE1BQU0sbUlBQXVDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw2SEFBb0M7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLG1JQUF1QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNkhBQW9DO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLGdGQUFnQjtBQUN0QixLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQSxxQkFBcUIsMEVBQVk7QUFDakM7QUFDQTtBQUNBLGtCQUFrQixZQUFZO0FBQzlCO0FBQ0E7QUFDQSxxQkFBcUIsMEVBQVk7QUFDakMsdUJBQXVCLG1FQUFhO0FBQ3BDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscUJBQXFCO0FBQ3ZDLGdCQUFnQixnR0FBc0I7QUFDdEM7QUFDQSxVQUFVLG9FQUFVO0FBQ3BCO0FBQ0E7O0FBRUEsU0FBUyw4RkFBeUI7QUFDbEM7O0FBRUEsMkJBQTJCLG9FQUFVO0FBQ3JDLHdCQUF3QixrRUFBTzs7QUFFL0I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdHQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQSxFQUFFLHNGQUFxQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQTtBQUNBLFFBQVE7QUFDUixrQkFBa0IsdUVBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLHNFQUFPO0FBQ2I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLHNFQUFPO0FBQ2xCO0FBQ0E7QUFDQSxRQUFRLDRHQUF3QjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHNFQUFPOztBQUVoQyx3QkFBd0IsbUdBQXdCOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0Esc0VBQXNFO0FBQ3RFO0FBQ0EsMEZBQTBGO0FBQzFGLFVBQVU7QUFDVjtBQUNBLDRFQUE0RTtBQUM1RTtBQUNBLHFGQUFxRjtBQUNyRjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRCxnREFBZ0Q7O0FBRWhEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxrQ0FBa0MsZ0NBQWdDO0FBQ2xFLGlEQUFpRDtBQUNqRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEMsMENBQTBDO0FBQzFDLDBDQUEwQztBQUMxQywwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsbVZBQW1WO0FBQ25WLHlIQUF5SDtBQUN6SDtBQUNBLGlDQUFpQztBQUNqQztBQUNBLFFBQVE7O0FBRVI7QUFDQTtBQUNBLDBDQUEwQyw0SEFBeUM7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQSwwQ0FBMEMsNEhBQXlDO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04scUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLG9GQUFnQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLG1FQUFLO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQSwwQ0FBMEMsNEhBQXlDO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQSwwQ0FBMEMsNEhBQXlDO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE9BQU8sc0VBQU87QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLHFCQUFxQjtBQUN2Qzs7QUFFQTtBQUNBLHlCQUF5Qiw4RUFBYTtBQUN0QztBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0VBQU87O0FBRTlCO0FBQ0E7QUFDQSxnQkFBZ0IscUJBQXFCO0FBQ3JDO0FBQ0E7QUFDQSxnQ0FBZ0MsMkdBQXlCO0FBQ3pEO0FBQ0E7QUFDQSxhQUFhLGtHQUF1QjtBQUNwQyxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQixxQkFBcUI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHVGQUFpQjtBQUM5QyxpQ0FBaUMsdUZBQWlCO0FBQ2xELGlDQUFpQyx1RkFBaUI7QUFDbEQsaUNBQWlDLHVGQUFpQjtBQUNsRDtBQUNBLCtCQUErQiwyR0FBeUI7QUFDeEQ7QUFDQTtBQUNBLGFBQWEsa0dBQXVCO0FBQ3BDLEtBQUs7QUFDTDs7QUFFQTtBQUNBLDZCQUE2QiwyR0FBeUI7QUFDdEQ7QUFDQTtBQUNBLHFCQUFxQixrR0FBdUIsR0FBRyxrR0FBdUI7QUFDdEUsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscUJBQXFCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBdUIsc0VBQU87QUFDOUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLCtCQUErQix5R0FBZ0M7QUFDL0QsTUFBTSx1RkFBdUI7QUFDN0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1RkFBdUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsdUZBQXVCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHVGQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIseUdBQWdDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHVHQUErQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLHNFQUFPO0FBQ2Isd0JBQXdCLDZFQUFjO0FBQ3RDLElBQUk7QUFDSiw0QkFBNEIsMkRBQUs7QUFDakM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUSxvRkFBbUI7QUFDM0IsUUFBUSw0RkFBdUI7QUFDL0I7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxtRUFBSztBQUNoQjtBQUNBLFNBQVMsOEZBQXFCO0FBQzlCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxzRUFBTztBQUNoQjtBQUNBO0FBQ0Esa0JBQWtCLFlBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdCQUFnQixZQUFZO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0Isb0JBQW9CO0FBQ3RDLHNCQUFzQixvR0FBd0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRUFBTztBQUNmO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzRUFBTztBQUM5Qjs7QUFFQSxrQkFBa0Isb0JBQW9CO0FBQ3RDLG9CQUFvQixxQkFBcUI7QUFDekMsd0JBQXdCLG9HQUF3QjtBQUNoRCxvQ0FBb0Msa0VBQU8sSUFBSTtBQUMvQyx1Q0FBdUMsd0VBQWMsSUFBSTtBQUN6RDtBQUNBLCtCQUErQixtRUFBSztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixvQkFBb0I7QUFDdEM7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQSwyQkFBMkIsOEVBQWE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9GQUFnQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLG9GQUFnQjs7QUFFdEI7QUFDQTtBQUNBLE1BQU0sNEZBQXdCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxrQkFBa0IsWUFBWTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLGtCQUFrQixZQUFZO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHNCQUFzQix3RkFBc0I7QUFDNUMseUJBQXlCLDhGQUF5Qjs7QUFFbEQ7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQixpRkFBa0I7QUFDNUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHdGQUFvQjtBQUMxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRCQUE0QixnRkFBYzs7QUFFMUM7QUFDQTtBQUNBLElBQUksOEVBQWE7QUFDakIsdUJBQXVCLDhHQUE2QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwrRUFBaUI7QUFDeEMscUJBQXFCLHlGQUFvQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxnR0FBc0I7QUFDMUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0Isb0JBQW9CO0FBQ3RDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLE1BQU0sc0VBQU87QUFDYjtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLDJFQUFhO0FBQ3RCO0FBQ0EseURBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTW9kZWxJbnN0YW5jZUNvbGxlY3Rpb24uanM/NzdlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQm91bmRpbmdTcGhlcmUgZnJvbSBcIi4uL0NvcmUvQm91bmRpbmdTcGhlcmUuanNcIjtcbmltcG9ydCBDYXJ0ZXNpYW4yIGZyb20gXCIuLi9Db3JlL0NhcnRlc2lhbjIuanNcIjtcbmltcG9ydCBDYXJ0ZXNpYW4zIGZyb20gXCIuLi9Db3JlL0NhcnRlc2lhbjMuanNcIjtcbmltcG9ydCBDaGVjayBmcm9tIFwiLi4vQ29yZS9DaGVjay5qc1wiO1xuaW1wb3J0IGNsb25lIGZyb20gXCIuLi9Db3JlL2Nsb25lLmpzXCI7XG5pbXBvcnQgQ29sb3IgZnJvbSBcIi4uL0NvcmUvQ29sb3IuanNcIjtcbmltcG9ydCBDb21wb25lbnREYXRhdHlwZSBmcm9tIFwiLi4vQ29yZS9Db21wb25lbnREYXRhdHlwZS5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBkZXN0cm95T2JqZWN0IGZyb20gXCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvci5qc1wiO1xuaW1wb3J0IE1hdHJpeDQgZnJvbSBcIi4uL0NvcmUvTWF0cml4NC5qc1wiO1xuaW1wb3J0IFByaW1pdGl2ZVR5cGUgZnJvbSBcIi4uL0NvcmUvUHJpbWl0aXZlVHlwZS5qc1wiO1xuaW1wb3J0IFJlc291cmNlIGZyb20gXCIuLi9Db3JlL1Jlc291cmNlLmpzXCI7XG5pbXBvcnQgUnVudGltZUVycm9yIGZyb20gXCIuLi9Db3JlL1J1bnRpbWVFcnJvci5qc1wiO1xuaW1wb3J0IFRyYW5zZm9ybXMgZnJvbSBcIi4uL0NvcmUvVHJhbnNmb3Jtcy5qc1wiO1xuaW1wb3J0IEJ1ZmZlciBmcm9tIFwiLi4vUmVuZGVyZXIvQnVmZmVyLmpzXCI7XG5pbXBvcnQgQnVmZmVyVXNhZ2UgZnJvbSBcIi4uL1JlbmRlcmVyL0J1ZmZlclVzYWdlLmpzXCI7XG5pbXBvcnQgRHJhd0NvbW1hbmQgZnJvbSBcIi4uL1JlbmRlcmVyL0RyYXdDb21tYW5kLmpzXCI7XG5pbXBvcnQgUGFzcyBmcm9tIFwiLi4vUmVuZGVyZXIvUGFzcy5qc1wiO1xuaW1wb3J0IFJlbmRlclN0YXRlIGZyb20gXCIuLi9SZW5kZXJlci9SZW5kZXJTdGF0ZS5qc1wiO1xuaW1wb3J0IFNoYWRlclNvdXJjZSBmcm9tIFwiLi4vUmVuZGVyZXIvU2hhZGVyU291cmNlLmpzXCI7XG5pbXBvcnQgRm9yRWFjaCBmcm9tIFwiLi9HbHRmUGlwZWxpbmUvRm9yRWFjaC5qc1wiO1xuaW1wb3J0IHdoZW4gZnJvbSBcIi4uL1RoaXJkUGFydHkvd2hlbi5qc1wiO1xuaW1wb3J0IE1vZGVsIGZyb20gXCIuL01vZGVsLmpzXCI7XG5pbXBvcnQgTW9kZWxJbnN0YW5jZSBmcm9tIFwiLi9Nb2RlbEluc3RhbmNlLmpzXCI7XG5pbXBvcnQgTW9kZWxVdGlsaXR5IGZyb20gXCIuL01vZGVsVXRpbGl0eS5qc1wiO1xuaW1wb3J0IFNjZW5lTW9kZSBmcm9tIFwiLi9TY2VuZU1vZGUuanNcIjtcbmltcG9ydCBTaGFkb3dNb2RlIGZyb20gXCIuL1NoYWRvd01vZGUuanNcIjtcblxudmFyIExvYWRTdGF0ZSA9IHtcbiAgTkVFRFNfTE9BRDogMCxcbiAgTE9BRElORzogMSxcbiAgTE9BREVEOiAyLFxuICBGQUlMRUQ6IDMsXG59O1xuXG4vKipcbiAqIEEgM0QgbW9kZWwgaW5zdGFuY2UgY29sbGVjdGlvbi4gQWxsIGluc3RhbmNlcyByZWZlcmVuY2UgdGhlIHNhbWUgdW5kZXJseWluZyBtb2RlbCwgYnV0IGhhdmUgdW5pcXVlXG4gKiBwZXItaW5zdGFuY2UgcHJvcGVydGllcyBsaWtlIG1vZGVsIG1hdHJpeCwgcGljayBpZCwgZXRjLlxuICpcbiAqIEluc3RhbmNlcyBhcmUgcmVuZGVyZWQgcmVsYXRpdmUtdG8tY2VudGVyIGFuZCBmb3IgYmVzdCByZXN1bHRzIGluc3RhbmNlcyBzaG91bGQgYmUgcG9zaXRpb25lZCBjbG9zZSB0byBvbmUgYW5vdGhlci5cbiAqIE90aGVyd2lzZSB0aGVyZSBtYXkgYmUgcHJlY2lzaW9uIGlzc3VlcyBpZiwgZm9yIGV4YW1wbGUsIGluc3RhbmNlcyBhcmUgcGxhY2VkIG9uIG9wcG9zaXRlIHNpZGVzIG9mIHRoZSBnbG9iZS5cbiAqXG4gKiBAYWxpYXMgTW9kZWxJbnN0YW5jZUNvbGxlY3Rpb25cbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqIEBwYXJhbSB7T2JqZWN0W119IFtvcHRpb25zLmluc3RhbmNlc10gQW4gYXJyYXkgb2YgaW5zdGFuY2VzLCB3aGVyZSBlYWNoIGluc3RhbmNlIGNvbnRhaW5zIGEgbW9kZWxNYXRyaXggYW5kIG9wdGlvbmFsIGJhdGNoSWQgd2hlbiBvcHRpb25zLmJhdGNoVGFibGUgaXMgZGVmaW5lZC5cbiAqIEBwYXJhbSB7Q2VzaXVtM0RUaWxlQmF0Y2hUYWJsZX0gW29wdGlvbnMuYmF0Y2hUYWJsZV0gVGhlIGJhdGNoIHRhYmxlIG9mIHRoZSBpbnN0YW5jZWQgM0QgVGlsZS5cbiAqIEBwYXJhbSB7UmVzb3VyY2V8U3RyaW5nfSBbb3B0aW9ucy51cmxdIFRoZSB1cmwgdG8gdGhlIC5nbHRmIGZpbGUuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMucmVxdWVzdFR5cGVdIFRoZSByZXF1ZXN0IHR5cGUsIHVzZWQgZm9yIHJlcXVlc3QgcHJpb3JpdGl6YXRpb25cbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5QnVmZmVyfFVpbnQ4QXJyYXl9IFtvcHRpb25zLmdsdGZdIEEgZ2xURiBKU09OIG9iamVjdCwgb3IgYSBiaW5hcnkgZ2xURiBidWZmZXIuXG4gKiBAcGFyYW0ge1Jlc291cmNlfFN0cmluZ30gW29wdGlvbnMuYmFzZVBhdGg9JyddIFRoZSBiYXNlIHBhdGggdGhhdCBwYXRocyBpbiB0aGUgZ2xURiBKU09OIGFyZSByZWxhdGl2ZSB0by5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuZHluYW1pYz1mYWxzZV0gSGludCBpZiBpbnN0YW5jZSBtb2RlbCBtYXRyaWNlcyB3aWxsIGJlIHVwZGF0ZWQgZnJlcXVlbnRseS5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuc2hvdz10cnVlXSBEZXRlcm1pbmVzIGlmIHRoZSBjb2xsZWN0aW9uIHdpbGwgYmUgc2hvd24uXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFsbG93UGlja2luZz10cnVlXSBXaGVuIDxjb2RlPnRydWU8L2NvZGU+LCBlYWNoIGluc3RhbmNlIGlzIHBpY2thYmxlIHdpdGgge0BsaW5rIFNjZW5lI3BpY2t9LlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hc3luY2hyb25vdXM9dHJ1ZV0gRGV0ZXJtaW5lcyBpZiBtb2RlbCBXZWJHTCByZXNvdXJjZSBjcmVhdGlvbiB3aWxsIGJlIHNwcmVhZCBvdXQgb3ZlciBzZXZlcmFsIGZyYW1lcyBvciBibG9jayB1bnRpbCBjb21wbGV0aW9uIG9uY2UgYWxsIGdsVEYgZmlsZXMgYXJlIGxvYWRlZC5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuaW5jcmVtZW50YWxseUxvYWRUZXh0dXJlcz10cnVlXSBEZXRlcm1pbmUgaWYgdGV4dHVyZXMgbWF5IGNvbnRpbnVlIHRvIHN0cmVhbSBpbiBhZnRlciB0aGUgbW9kZWwgaXMgbG9hZGVkLlxuICogQHBhcmFtIHtTaGFkb3dNb2RlfSBbb3B0aW9ucy5zaGFkb3dzPVNoYWRvd01vZGUuRU5BQkxFRF0gRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBjb2xsZWN0aW9uIGNhc3RzIG9yIHJlY2VpdmVzIHNoYWRvd3MgZnJvbSBsaWdodCBzb3VyY2VzLlxuICogQHBhcmFtIHtDYXJ0ZXNpYW4yfSBbb3B0aW9ucy5pbWFnZUJhc2VkTGlnaHRpbmdGYWN0b3I9bmV3IENhcnRlc2lhbjIoMS4wLCAxLjApXSBTY2FsZXMgdGhlIGRpZmZ1c2UgYW5kIHNwZWN1bGFyIGltYWdlLWJhc2VkIGxpZ2h0aW5nIGZyb20gdGhlIGVhcnRoLCBza3ksIGF0bW9zcGhlcmUgYW5kIHN0YXIgc2t5Ym94LlxuICogQHBhcmFtIHtDYXJ0ZXNpYW4zfSBbb3B0aW9ucy5saWdodENvbG9yXSBUaGUgbGlnaHQgY29sb3Igd2hlbiBzaGFkaW5nIG1vZGVscy4gV2hlbiA8Y29kZT51bmRlZmluZWQ8L2NvZGU+IHRoZSBzY2VuZSdzIGxpZ2h0IGNvbG9yIGlzIHVzZWQgaW5zdGVhZC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5sdW1pbmFuY2VBdFplbml0aD0wLjJdIFRoZSBzdW4ncyBsdW1pbmFuY2UgYXQgdGhlIHplbml0aCBpbiBraWxvIGNhbmRlbGEgcGVyIG1ldGVyIHNxdWFyZWQgdG8gdXNlIGZvciB0aGlzIG1vZGVsJ3MgcHJvY2VkdXJhbCBlbnZpcm9ubWVudCBtYXAuXG4gKiBAcGFyYW0ge0NhcnRlc2lhbjNbXX0gW29wdGlvbnMuc3BoZXJpY2FsSGFybW9uaWNDb2VmZmljaWVudHNdIFRoZSB0aGlyZCBvcmRlciBzcGhlcmljYWwgaGFybW9uaWMgY29lZmZpY2llbnRzIHVzZWQgZm9yIHRoZSBkaWZmdXNlIGNvbG9yIG9mIGltYWdlLWJhc2VkIGxpZ2h0aW5nLlxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnNwZWN1bGFyRW52aXJvbm1lbnRNYXBzXSBBIFVSTCB0byBhIEtUWDIgZmlsZSB0aGF0IGNvbnRhaW5zIGEgY3ViZSBtYXAgb2YgdGhlIHNwZWN1bGFyIGxpZ2h0aW5nIGFuZCB0aGUgY29udm9sdXRlZCBzcGVjdWxhciBtaXBtYXBzLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5iYWNrRmFjZUN1bGxpbmc9dHJ1ZV0gV2hldGhlciB0byBjdWxsIGJhY2stZmFjaW5nIGdlb21ldHJ5LiBXaGVuIHRydWUsIGJhY2sgZmFjZSBjdWxsaW5nIGlzIGRldGVybWluZWQgYnkgdGhlIGdsVEYgbWF0ZXJpYWwncyBkb3VibGVTaWRlZCBwcm9wZXJ0eTsgd2hlbiBmYWxzZSwgYmFjayBmYWNlIGN1bGxpbmcgaXMgZGlzYWJsZWQuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPWZhbHNlXSBGb3IgZGVidWdnaW5nIG9ubHkuIERyYXdzIHRoZSBib3VuZGluZyBzcGhlcmUgZm9yIHRoZSBjb2xsZWN0aW9uLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5kZWJ1Z1dpcmVmcmFtZT1mYWxzZV0gRm9yIGRlYnVnZ2luZyBvbmx5LiBEcmF3cyB0aGUgaW5zdGFuY2VzIGluIHdpcmVmcmFtZS5cbiAqXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gTXVzdCBzcGVjaWZ5IGVpdGhlciA8b3B0aW9ucy5nbHRmPiBvciA8b3B0aW9ucy51cmw+LCBidXQgbm90IGJvdGguXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gU2hhZGVyIHByb2dyYW0gY2Fubm90IGJlIG9wdGltaXplZCBmb3IgaW5zdGFuY2luZy4gUGFyYW1ldGVycyBjYW5ub3QgaGF2ZSBhbnkgb2YgdGhlIGZvbGxvd2luZyBzZW1hbnRpY3M6IE1PREVMLCBNT0RFTElOVkVSU0UsIE1PREVMVklFV0lOVkVSU0UsIE1PREVMVklFV1BST0pFQ1RJT05JTlZFUlNFLCBNT0RFTElOVkVSU0VUUkFOU1BPU0UuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gTW9kZWxJbnN0YW5jZUNvbGxlY3Rpb24ob3B0aW9ucykge1xuICBvcHRpb25zID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMsIGRlZmF1bHRWYWx1ZS5FTVBUWV9PQkpFQ1QpO1xuXG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICghZGVmaW5lZChvcHRpb25zLmdsdGYpICYmICFkZWZpbmVkKG9wdGlvbnMudXJsKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIkVpdGhlciBvcHRpb25zLmdsdGYgb3Igb3B0aW9ucy51cmwgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG5cbiAgaWYgKGRlZmluZWQob3B0aW9ucy5nbHRmKSAmJiBkZWZpbmVkKG9wdGlvbnMudXJsKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIFwiQ2Fubm90IHBhc3MgaW4gYm90aCBvcHRpb25zLmdsdGYgYW5kIG9wdGlvbnMudXJsLlwiXG4gICAgKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB0aGlzLnNob3cgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5zaG93LCB0cnVlKTtcblxuICB0aGlzLl9pbnN0YW5jaW5nU3VwcG9ydGVkID0gZmFsc2U7XG4gIHRoaXMuX2R5bmFtaWMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5keW5hbWljLCBmYWxzZSk7XG4gIHRoaXMuX2FsbG93UGlja2luZyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLmFsbG93UGlja2luZywgdHJ1ZSk7XG4gIHRoaXMuX3JlYWR5ID0gZmFsc2U7XG4gIHRoaXMuX3JlYWR5UHJvbWlzZSA9IHdoZW4uZGVmZXIoKTtcbiAgdGhpcy5fc3RhdGUgPSBMb2FkU3RhdGUuTkVFRFNfTE9BRDtcbiAgdGhpcy5fZGlydHkgPSBmYWxzZTtcblxuICAvLyBVbmRvY3VtZW50ZWQgb3B0aW9uc1xuICB0aGlzLl9jdWxsID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMuY3VsbCwgdHJ1ZSk7XG4gIHRoaXMuX29wYXF1ZVBhc3MgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5vcGFxdWVQYXNzLCBQYXNzLk9QQVFVRSk7XG5cbiAgdGhpcy5faW5zdGFuY2VzID0gY3JlYXRlSW5zdGFuY2VzKHRoaXMsIG9wdGlvbnMuaW5zdGFuY2VzKTtcblxuICAvLyBXaGVuIHRoZSBtb2RlbCBpbnN0YW5jZSBjb2xsZWN0aW9uIGlzIGJhY2tlZCBieSBhbiBpM2RtIHRpbGUsXG4gIC8vIHVzZSBpdHMgYmF0Y2ggdGFibGUgcmVzb3VyY2VzIHRvIG1vZGlmeSB0aGUgc2hhZGVycywgYXR0cmlidXRlcywgYW5kIHVuaWZvcm0gbWFwcy5cbiAgdGhpcy5fYmF0Y2hUYWJsZSA9IG9wdGlvbnMuYmF0Y2hUYWJsZTtcblxuICB0aGlzLl9tb2RlbCA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fdmVydGV4QnVmZmVyVHlwZWRBcnJheSA9IHVuZGVmaW5lZDsgLy8gSG9sZCBvbnRvIHRoZSB2ZXJ0ZXggYnVmZmVyIGNvbnRlbnRzIHdoZW4gZHluYW1pYyBpcyB0cnVlXG4gIHRoaXMuX3ZlcnRleEJ1ZmZlciA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fYmF0Y2hJZEJ1ZmZlciA9IHVuZGVmaW5lZDtcbiAgdGhpcy5faW5zdGFuY2VkVW5pZm9ybXNCeVByb2dyYW0gPSB1bmRlZmluZWQ7XG5cbiAgdGhpcy5fZHJhd0NvbW1hbmRzID0gW107XG4gIHRoaXMuX21vZGVsQ29tbWFuZHMgPSB1bmRlZmluZWQ7XG5cbiAgdGhpcy5fcmVuZGVyU3RhdGVzID0gdW5kZWZpbmVkO1xuICB0aGlzLl9kaXNhYmxlQ3VsbGluZ1JlbmRlclN0YXRlcyA9IHVuZGVmaW5lZDtcblxuICB0aGlzLl9ib3VuZGluZ1NwaGVyZSA9IGNyZWF0ZUJvdW5kaW5nU3BoZXJlKHRoaXMpO1xuICB0aGlzLl9jZW50ZXIgPSBDYXJ0ZXNpYW4zLmNsb25lKHRoaXMuX2JvdW5kaW5nU3BoZXJlLmNlbnRlcik7XG4gIHRoaXMuX3J0Y1RyYW5zZm9ybSA9IG5ldyBNYXRyaXg0KCk7XG4gIHRoaXMuX3J0Y01vZGVsVmlldyA9IG5ldyBNYXRyaXg0KCk7IC8vIEhvbGRzIG9udG8gdW5pZm9ybVxuXG4gIHRoaXMuX21vZGUgPSB1bmRlZmluZWQ7XG5cbiAgdGhpcy5tb2RlbE1hdHJpeCA9IE1hdHJpeDQuY2xvbmUoTWF0cml4NC5JREVOVElUWSk7XG4gIHRoaXMuX21vZGVsTWF0cml4ID0gTWF0cml4NC5jbG9uZSh0aGlzLm1vZGVsTWF0cml4KTtcblxuICAvLyBQYXNzZWQgb24gdG8gTW9kZWxcbiAgdGhpcy5fdXJsID0gUmVzb3VyY2UuY3JlYXRlSWZOZWVkZWQob3B0aW9ucy51cmwpO1xuICB0aGlzLl9yZXF1ZXN0VHlwZSA9IG9wdGlvbnMucmVxdWVzdFR5cGU7XG4gIHRoaXMuX2dsdGYgPSBvcHRpb25zLmdsdGY7XG4gIHRoaXMuX2Jhc2VQYXRoID0gUmVzb3VyY2UuY3JlYXRlSWZOZWVkZWQob3B0aW9ucy5iYXNlUGF0aCk7XG4gIHRoaXMuX2FzeW5jaHJvbm91cyA9IG9wdGlvbnMuYXN5bmNocm9ub3VzO1xuICB0aGlzLl9pbmNyZW1lbnRhbGx5TG9hZFRleHR1cmVzID0gb3B0aW9ucy5pbmNyZW1lbnRhbGx5TG9hZFRleHR1cmVzO1xuICB0aGlzLl91cEF4aXMgPSBvcHRpb25zLnVwQXhpczsgLy8gVW5kb2N1bWVudGVkIG9wdGlvblxuICB0aGlzLl9mb3J3YXJkQXhpcyA9IG9wdGlvbnMuZm9yd2FyZEF4aXM7IC8vIFVuZG9jdW1lbnRlZCBvcHRpb25cblxuICB0aGlzLnNoYWRvd3MgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5zaGFkb3dzLCBTaGFkb3dNb2RlLkVOQUJMRUQpO1xuICB0aGlzLl9zaGFkb3dzID0gdGhpcy5zaGFkb3dzO1xuXG4gIHRoaXMuX3BpY2tJZExvYWRlZCA9IG9wdGlvbnMucGlja0lkTG9hZGVkO1xuXG4gIHRoaXMuZGVidWdTaG93Qm91bmRpbmdWb2x1bWUgPSBkZWZhdWx0VmFsdWUoXG4gICAgb3B0aW9ucy5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSxcbiAgICBmYWxzZVxuICApO1xuICB0aGlzLl9kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSA9IGZhbHNlO1xuXG4gIHRoaXMuZGVidWdXaXJlZnJhbWUgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5kZWJ1Z1dpcmVmcmFtZSwgZmFsc2UpO1xuICB0aGlzLl9kZWJ1Z1dpcmVmcmFtZSA9IGZhbHNlO1xuXG4gIHRoaXMuX2ltYWdlQmFzZWRMaWdodGluZ0ZhY3RvciA9IG5ldyBDYXJ0ZXNpYW4yKDEuMCwgMS4wKTtcbiAgQ2FydGVzaWFuMi5jbG9uZShcbiAgICBvcHRpb25zLmltYWdlQmFzZWRMaWdodGluZ0ZhY3RvcixcbiAgICB0aGlzLl9pbWFnZUJhc2VkTGlnaHRpbmdGYWN0b3JcbiAgKTtcbiAgdGhpcy5saWdodENvbG9yID0gb3B0aW9ucy5saWdodENvbG9yO1xuICB0aGlzLmx1bWluYW5jZUF0WmVuaXRoID0gb3B0aW9ucy5sdW1pbmFuY2VBdFplbml0aDtcbiAgdGhpcy5zcGhlcmljYWxIYXJtb25pY0NvZWZmaWNpZW50cyA9IG9wdGlvbnMuc3BoZXJpY2FsSGFybW9uaWNDb2VmZmljaWVudHM7XG4gIHRoaXMuc3BlY3VsYXJFbnZpcm9ubWVudE1hcHMgPSBvcHRpb25zLnNwZWN1bGFyRW52aXJvbm1lbnRNYXBzO1xuICB0aGlzLmJhY2tGYWNlQ3VsbGluZyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLmJhY2tGYWNlQ3VsbGluZywgdHJ1ZSk7XG4gIHRoaXMuX2JhY2tGYWNlQ3VsbGluZyA9IHRoaXMuYmFja0ZhY2VDdWxsaW5nO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhNb2RlbEluc3RhbmNlQ29sbGVjdGlvbi5wcm90b3R5cGUsIHtcbiAgYWxsb3dQaWNraW5nOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fYWxsb3dQaWNraW5nO1xuICAgIH0sXG4gIH0sXG4gIGxlbmd0aDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlcy5sZW5ndGg7XG4gICAgfSxcbiAgfSxcbiAgYWN0aXZlQW5pbWF0aW9uczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX21vZGVsLmFjdGl2ZUFuaW1hdGlvbnM7XG4gICAgfSxcbiAgfSxcbiAgcmVhZHk6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZWFkeTtcbiAgICB9LFxuICB9LFxuICByZWFkeVByb21pc2U6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZWFkeVByb21pc2UucHJvbWlzZTtcbiAgICB9LFxuICB9LFxuICBpbWFnZUJhc2VkTGlnaHRpbmdGYWN0b3I6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pbWFnZUJhc2VkTGlnaHRpbmdGYWN0b3I7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgICAgIENoZWNrLnR5cGVPZi5vYmplY3QoXCJpbWFnZUJhc2VkTGlnaHRpbmdGYWN0b3JcIiwgdmFsdWUpO1xuICAgICAgQ2hlY2sudHlwZU9mLm51bWJlci5ncmVhdGVyVGhhbk9yRXF1YWxzKFxuICAgICAgICBcImltYWdlQmFzZWRMaWdodGluZ0ZhY3Rvci54XCIsXG4gICAgICAgIHZhbHVlLngsXG4gICAgICAgIDAuMFxuICAgICAgKTtcbiAgICAgIENoZWNrLnR5cGVPZi5udW1iZXIubGVzc1RoYW5PckVxdWFscyhcbiAgICAgICAgXCJpbWFnZUJhc2VkTGlnaHRpbmdGYWN0b3IueFwiLFxuICAgICAgICB2YWx1ZS54LFxuICAgICAgICAxLjBcbiAgICAgICk7XG4gICAgICBDaGVjay50eXBlT2YubnVtYmVyLmdyZWF0ZXJUaGFuT3JFcXVhbHMoXG4gICAgICAgIFwiaW1hZ2VCYXNlZExpZ2h0aW5nRmFjdG9yLnlcIixcbiAgICAgICAgdmFsdWUueSxcbiAgICAgICAgMC4wXG4gICAgICApO1xuICAgICAgQ2hlY2sudHlwZU9mLm51bWJlci5sZXNzVGhhbk9yRXF1YWxzKFxuICAgICAgICBcImltYWdlQmFzZWRMaWdodGluZ0ZhY3Rvci55XCIsXG4gICAgICAgIHZhbHVlLnksXG4gICAgICAgIDEuMFxuICAgICAgKTtcbiAgICAgIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuICAgICAgQ2FydGVzaWFuMi5jbG9uZSh2YWx1ZSwgdGhpcy5faW1hZ2VCYXNlZExpZ2h0aW5nRmFjdG9yKTtcbiAgICB9LFxuICB9LFxufSk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlcyhjb2xsZWN0aW9uLCBpbnN0YW5jZXNPcHRpb25zKSB7XG4gIGluc3RhbmNlc09wdGlvbnMgPSBkZWZhdWx0VmFsdWUoaW5zdGFuY2VzT3B0aW9ucywgW10pO1xuICB2YXIgbGVuZ3RoID0gaW5zdGFuY2VzT3B0aW9ucy5sZW5ndGg7XG4gIHZhciBpbnN0YW5jZXMgPSBuZXcgQXJyYXkobGVuZ3RoKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBpbnN0YW5jZU9wdGlvbnMgPSBpbnN0YW5jZXNPcHRpb25zW2ldO1xuICAgIHZhciBtb2RlbE1hdHJpeCA9IGluc3RhbmNlT3B0aW9ucy5tb2RlbE1hdHJpeDtcbiAgICB2YXIgaW5zdGFuY2VJZCA9IGRlZmF1bHRWYWx1ZShpbnN0YW5jZU9wdGlvbnMuYmF0Y2hJZCwgaSk7XG4gICAgaW5zdGFuY2VzW2ldID0gbmV3IE1vZGVsSW5zdGFuY2UoY29sbGVjdGlvbiwgbW9kZWxNYXRyaXgsIGluc3RhbmNlSWQpO1xuICB9XG4gIHJldHVybiBpbnN0YW5jZXM7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUJvdW5kaW5nU3BoZXJlKGNvbGxlY3Rpb24pIHtcbiAgdmFyIGluc3RhbmNlc0xlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuICB2YXIgcG9pbnRzID0gbmV3IEFycmF5KGluc3RhbmNlc0xlbmd0aCk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgaW5zdGFuY2VzTGVuZ3RoOyArK2kpIHtcbiAgICBwb2ludHNbaV0gPSBNYXRyaXg0LmdldFRyYW5zbGF0aW9uKFxuICAgICAgY29sbGVjdGlvbi5faW5zdGFuY2VzW2ldLl9tb2RlbE1hdHJpeCxcbiAgICAgIG5ldyBDYXJ0ZXNpYW4zKClcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIEJvdW5kaW5nU3BoZXJlLmZyb21Qb2ludHMocG9pbnRzKTtcbn1cblxudmFyIHNjcmF0Y2hDYXJ0ZXNpYW4gPSBuZXcgQ2FydGVzaWFuMygpO1xudmFyIHNjcmF0Y2hNYXRyaXggPSBuZXcgTWF0cml4NCgpO1xuXG5Nb2RlbEluc3RhbmNlQ29sbGVjdGlvbi5wcm90b3R5cGUuZXhwYW5kQm91bmRpbmdTcGhlcmUgPSBmdW5jdGlvbiAoXG4gIGluc3RhbmNlTW9kZWxNYXRyaXhcbikge1xuICB2YXIgdHJhbnNsYXRpb24gPSBNYXRyaXg0LmdldFRyYW5zbGF0aW9uKFxuICAgIGluc3RhbmNlTW9kZWxNYXRyaXgsXG4gICAgc2NyYXRjaENhcnRlc2lhblxuICApO1xuICBCb3VuZGluZ1NwaGVyZS5leHBhbmQoXG4gICAgdGhpcy5fYm91bmRpbmdTcGhlcmUsXG4gICAgdHJhbnNsYXRpb24sXG4gICAgdGhpcy5fYm91bmRpbmdTcGhlcmVcbiAgKTtcbn07XG5cbmZ1bmN0aW9uIGdldENoZWNrVW5pZm9ybVNlbWFudGljRnVuY3Rpb24oXG4gIG1vZGVsU2VtYW50aWNzLFxuICBzdXBwb3J0ZWRTZW1hbnRpY3MsXG4gIHByb2dyYW1JZCxcbiAgdW5pZm9ybU1hcFxuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodW5pZm9ybSwgdW5pZm9ybU5hbWUpIHtcbiAgICB2YXIgc2VtYW50aWMgPSB1bmlmb3JtLnNlbWFudGljO1xuICAgIGlmIChkZWZpbmVkKHNlbWFudGljKSAmJiBtb2RlbFNlbWFudGljcy5pbmRleE9mKHNlbWFudGljKSA+IC0xKSB7XG4gICAgICBpZiAoc3VwcG9ydGVkU2VtYW50aWNzLmluZGV4T2Yoc2VtYW50aWMpID4gLTEpIHtcbiAgICAgICAgdW5pZm9ybU1hcFt1bmlmb3JtTmFtZV0gPSBzZW1hbnRpYztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBSdW50aW1lRXJyb3IoXG4gICAgICAgICAgXCJTaGFkZXIgcHJvZ3JhbSBjYW5ub3QgYmUgb3B0aW1pemVkIGZvciBpbnN0YW5jaW5nLiBcIiArXG4gICAgICAgICAgICAnVW5pZm9ybSBcIicgK1xuICAgICAgICAgICAgdW5pZm9ybU5hbWUgK1xuICAgICAgICAgICAgJ1wiIGluIHByb2dyYW0gXCInICtcbiAgICAgICAgICAgIHByb2dyYW1JZCArXG4gICAgICAgICAgICAnXCIgdXNlcyB1bnN1cHBvcnRlZCBzZW1hbnRpYyBcIicgK1xuICAgICAgICAgICAgc2VtYW50aWMgK1xuICAgICAgICAgICAgJ1wiJ1xuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0SW5zdGFuY2VkVW5pZm9ybXMoY29sbGVjdGlvbiwgcHJvZ3JhbUlkKSB7XG4gIGlmIChkZWZpbmVkKGNvbGxlY3Rpb24uX2luc3RhbmNlZFVuaWZvcm1zQnlQcm9ncmFtKSkge1xuICAgIHJldHVybiBjb2xsZWN0aW9uLl9pbnN0YW5jZWRVbmlmb3Jtc0J5UHJvZ3JhbVtwcm9ncmFtSWRdO1xuICB9XG5cbiAgdmFyIGluc3RhbmNlZFVuaWZvcm1zQnlQcm9ncmFtID0ge307XG4gIGNvbGxlY3Rpb24uX2luc3RhbmNlZFVuaWZvcm1zQnlQcm9ncmFtID0gaW5zdGFuY2VkVW5pZm9ybXNCeVByb2dyYW07XG5cbiAgLy8gV2hlbiB1c2luZyBDRVNJVU1fUlRDX01PREVMVklFVyB0aGUgQ0VTSVVNX1JUQyBjZW50ZXIgaXMgaWdub3JlZC4gSW5zdGFuY2VzIGFyZSBhbHdheXMgcmVuZGVyZWQgcmVsYXRpdmUtdG8tY2VudGVyLlxuICB2YXIgbW9kZWxTZW1hbnRpY3MgPSBbXG4gICAgXCJNT0RFTFwiLFxuICAgIFwiTU9ERUxWSUVXXCIsXG4gICAgXCJDRVNJVU1fUlRDX01PREVMVklFV1wiLFxuICAgIFwiTU9ERUxWSUVXUFJPSkVDVElPTlwiLFxuICAgIFwiTU9ERUxJTlZFUlNFXCIsXG4gICAgXCJNT0RFTFZJRVdJTlZFUlNFXCIsXG4gICAgXCJNT0RFTFZJRVdQUk9KRUNUSU9OSU5WRVJTRVwiLFxuICAgIFwiTU9ERUxJTlZFUlNFVFJBTlNQT1NFXCIsXG4gICAgXCJNT0RFTFZJRVdJTlZFUlNFVFJBTlNQT1NFXCIsXG4gIF07XG4gIHZhciBzdXBwb3J0ZWRTZW1hbnRpY3MgPSBbXG4gICAgXCJNT0RFTFZJRVdcIixcbiAgICBcIkNFU0lVTV9SVENfTU9ERUxWSUVXXCIsXG4gICAgXCJNT0RFTFZJRVdQUk9KRUNUSU9OXCIsXG4gICAgXCJNT0RFTFZJRVdJTlZFUlNFVFJBTlNQT1NFXCIsXG4gIF07XG5cbiAgdmFyIHRlY2huaXF1ZXMgPSBjb2xsZWN0aW9uLl9tb2RlbC5fc291cmNlVGVjaG5pcXVlcztcbiAgZm9yICh2YXIgdGVjaG5pcXVlSWQgaW4gdGVjaG5pcXVlcykge1xuICAgIGlmICh0ZWNobmlxdWVzLmhhc093blByb3BlcnR5KHRlY2huaXF1ZUlkKSkge1xuICAgICAgdmFyIHRlY2huaXF1ZSA9IHRlY2huaXF1ZXNbdGVjaG5pcXVlSWRdO1xuICAgICAgdmFyIHByb2dyYW0gPSB0ZWNobmlxdWUucHJvZ3JhbTtcblxuICAgICAgLy8gRGlmZmVyZW50IHRlY2huaXF1ZXMgbWF5IHNoYXJlIHRoZSBzYW1lIHByb2dyYW0sIHNraXAgaWYgYWxyZWFkeSBwcm9jZXNzZWQuXG4gICAgICAvLyBUaGlzIGFzc3VtZXMgdGVjaG5pcXVlcyB0aGF0IHNoYXJlIGEgcHJvZ3JhbSBkbyBub3QgZGVjbGFyZSBkaWZmZXJlbnQgc2VtYW50aWNzIGZvciB0aGUgc2FtZSB1bmlmb3Jtcy5cbiAgICAgIGlmICghZGVmaW5lZChpbnN0YW5jZWRVbmlmb3Jtc0J5UHJvZ3JhbVtwcm9ncmFtXSkpIHtcbiAgICAgICAgdmFyIHVuaWZvcm1NYXAgPSB7fTtcbiAgICAgICAgaW5zdGFuY2VkVW5pZm9ybXNCeVByb2dyYW1bcHJvZ3JhbV0gPSB1bmlmb3JtTWFwO1xuICAgICAgICBGb3JFYWNoLnRlY2huaXF1ZVVuaWZvcm0oXG4gICAgICAgICAgdGVjaG5pcXVlLFxuICAgICAgICAgIGdldENoZWNrVW5pZm9ybVNlbWFudGljRnVuY3Rpb24oXG4gICAgICAgICAgICBtb2RlbFNlbWFudGljcyxcbiAgICAgICAgICAgIHN1cHBvcnRlZFNlbWFudGljcyxcbiAgICAgICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAgICAgIHVuaWZvcm1NYXBcbiAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGluc3RhbmNlZFVuaWZvcm1zQnlQcm9ncmFtW3Byb2dyYW1JZF07XG59XG5cbmZ1bmN0aW9uIGdldFZlcnRleFNoYWRlckNhbGxiYWNrKGNvbGxlY3Rpb24pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICh2cywgcHJvZ3JhbUlkKSB7XG4gICAgdmFyIGluc3RhbmNlZFVuaWZvcm1zID0gZ2V0SW5zdGFuY2VkVW5pZm9ybXMoY29sbGVjdGlvbiwgcHJvZ3JhbUlkKTtcbiAgICB2YXIgdXNlc0JhdGNoVGFibGUgPSBkZWZpbmVkKGNvbGxlY3Rpb24uX2JhdGNoVGFibGUpO1xuXG4gICAgdmFyIHJlbmFtZWRTb3VyY2UgPSBTaGFkZXJTb3VyY2UucmVwbGFjZU1haW4odnMsIFwiY3ptX2luc3RhbmNpbmdfbWFpblwiKTtcblxuICAgIHZhciBnbG9iYWxWYXJzSGVhZGVyID0gXCJcIjtcbiAgICB2YXIgZ2xvYmFsVmFyc01haW4gPSBcIlwiO1xuICAgIGZvciAodmFyIHVuaWZvcm0gaW4gaW5zdGFuY2VkVW5pZm9ybXMpIHtcbiAgICAgIGlmIChpbnN0YW5jZWRVbmlmb3Jtcy5oYXNPd25Qcm9wZXJ0eSh1bmlmb3JtKSkge1xuICAgICAgICB2YXIgc2VtYW50aWMgPSBpbnN0YW5jZWRVbmlmb3Jtc1t1bmlmb3JtXTtcbiAgICAgICAgdmFyIHZhck5hbWU7XG4gICAgICAgIGlmIChzZW1hbnRpYyA9PT0gXCJNT0RFTFZJRVdcIiB8fCBzZW1hbnRpYyA9PT0gXCJDRVNJVU1fUlRDX01PREVMVklFV1wiKSB7XG4gICAgICAgICAgdmFyTmFtZSA9IFwiY3ptX2luc3RhbmNlZF9tb2RlbFZpZXdcIjtcbiAgICAgICAgfSBlbHNlIGlmIChzZW1hbnRpYyA9PT0gXCJNT0RFTFZJRVdQUk9KRUNUSU9OXCIpIHtcbiAgICAgICAgICB2YXJOYW1lID0gXCJjem1faW5zdGFuY2VkX21vZGVsVmlld1Byb2plY3Rpb25cIjtcbiAgICAgICAgICBnbG9iYWxWYXJzSGVhZGVyICs9IFwibWF0NCBjem1faW5zdGFuY2VkX21vZGVsVmlld1Byb2plY3Rpb247XFxuXCI7XG4gICAgICAgICAgZ2xvYmFsVmFyc01haW4gKz1cbiAgICAgICAgICAgIFwiY3ptX2luc3RhbmNlZF9tb2RlbFZpZXdQcm9qZWN0aW9uID0gY3ptX3Byb2plY3Rpb24gKiBjem1faW5zdGFuY2VkX21vZGVsVmlldztcXG5cIjtcbiAgICAgICAgfSBlbHNlIGlmIChzZW1hbnRpYyA9PT0gXCJNT0RFTFZJRVdJTlZFUlNFVFJBTlNQT1NFXCIpIHtcbiAgICAgICAgICB2YXJOYW1lID0gXCJjem1faW5zdGFuY2VkX21vZGVsVmlld0ludmVyc2VUcmFuc3Bvc2VcIjtcbiAgICAgICAgICBnbG9iYWxWYXJzSGVhZGVyICs9IFwibWF0MyBjem1faW5zdGFuY2VkX21vZGVsVmlld0ludmVyc2VUcmFuc3Bvc2U7XFxuXCI7XG4gICAgICAgICAgZ2xvYmFsVmFyc01haW4gKz1cbiAgICAgICAgICAgIFwiY3ptX2luc3RhbmNlZF9tb2RlbFZpZXdJbnZlcnNlVHJhbnNwb3NlID0gbWF0Myhjem1faW5zdGFuY2VkX21vZGVsVmlldyk7XFxuXCI7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZW1vdmUgdGhlIHVuaWZvcm0gZGVjbGFyYXRpb25cbiAgICAgICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cChcInVuaWZvcm0uKlwiICsgdW5pZm9ybSArIFwiLipcIik7XG4gICAgICAgIHJlbmFtZWRTb3VyY2UgPSByZW5hbWVkU291cmNlLnJlcGxhY2UocmVnZXgsIFwiXCIpO1xuXG4gICAgICAgIC8vIFJlcGxhY2UgYWxsIG9jY3VycmVuY2VzIG9mIHRoZSB1bmlmb3JtIHdpdGggdGhlIGdsb2JhbCB2YXJpYWJsZVxuICAgICAgICByZWdleCA9IG5ldyBSZWdFeHAodW5pZm9ybSArIFwiXFxcXGJcIiwgXCJnXCIpO1xuICAgICAgICByZW5hbWVkU291cmNlID0gcmVuYW1lZFNvdXJjZS5yZXBsYWNlKHJlZ2V4LCB2YXJOYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjem1faW5zdGFuY2VkX21vZGVsIGlzIHRoZSBtb2RlbCBtYXRyaXggb2YgdGhlIGluc3RhbmNlIHJlbGF0aXZlIHRvIGNlbnRlclxuICAgIC8vIGN6bV9pbnN0YW5jZWRfbW9kaWZpZWRNb2RlbFZpZXcgaXMgdGhlIHRyYW5zZm9ybSBmcm9tIHRoZSBjZW50ZXIgdG8gdmlld1xuICAgIC8vIGN6bV9pbnN0YW5jZWRfbm9kZVRyYW5zZm9ybSBpcyB0aGUgbG9jYWwgb2Zmc2V0IG9mIHRoZSBub2RlIHdpdGhpbiB0aGUgbW9kZWxcbiAgICB2YXIgdW5pZm9ybXMgPVxuICAgICAgXCJ1bmlmb3JtIG1hdDQgY3ptX2luc3RhbmNlZF9tb2RpZmllZE1vZGVsVmlldztcXG5cIiArXG4gICAgICBcInVuaWZvcm0gbWF0NCBjem1faW5zdGFuY2VkX25vZGVUcmFuc2Zvcm07XFxuXCI7XG5cbiAgICB2YXIgYmF0Y2hJZEF0dHJpYnV0ZTtcbiAgICB2YXIgcGlja0F0dHJpYnV0ZTtcbiAgICB2YXIgcGlja1Zhcnlpbmc7XG5cbiAgICBpZiAodXNlc0JhdGNoVGFibGUpIHtcbiAgICAgIGJhdGNoSWRBdHRyaWJ1dGUgPSBcImF0dHJpYnV0ZSBmbG9hdCBhX2JhdGNoSWQ7XFxuXCI7XG4gICAgICBwaWNrQXR0cmlidXRlID0gXCJcIjtcbiAgICAgIHBpY2tWYXJ5aW5nID0gXCJcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgYmF0Y2hJZEF0dHJpYnV0ZSA9IFwiXCI7XG4gICAgICBwaWNrQXR0cmlidXRlID1cbiAgICAgICAgXCJhdHRyaWJ1dGUgdmVjNCBwaWNrQ29sb3I7XFxuXCIgKyBcInZhcnlpbmcgdmVjNCB2X3BpY2tDb2xvcjtcXG5cIjtcbiAgICAgIHBpY2tWYXJ5aW5nID0gXCIgICAgdl9waWNrQ29sb3IgPSBwaWNrQ29sb3I7XFxuXCI7XG4gICAgfVxuXG4gICAgdmFyIGluc3RhbmNlZFNvdXJjZSA9XG4gICAgICB1bmlmb3JtcyArXG4gICAgICBnbG9iYWxWYXJzSGVhZGVyICtcbiAgICAgIFwibWF0NCBjem1faW5zdGFuY2VkX21vZGVsVmlldztcXG5cIiArXG4gICAgICBcImF0dHJpYnV0ZSB2ZWM0IGN6bV9tb2RlbE1hdHJpeFJvdzA7XFxuXCIgK1xuICAgICAgXCJhdHRyaWJ1dGUgdmVjNCBjem1fbW9kZWxNYXRyaXhSb3cxO1xcblwiICtcbiAgICAgIFwiYXR0cmlidXRlIHZlYzQgY3ptX21vZGVsTWF0cml4Um93MjtcXG5cIiArXG4gICAgICBiYXRjaElkQXR0cmlidXRlICtcbiAgICAgIHBpY2tBdHRyaWJ1dGUgK1xuICAgICAgcmVuYW1lZFNvdXJjZSArXG4gICAgICBcInZvaWQgbWFpbigpXFxuXCIgK1xuICAgICAgXCJ7XFxuXCIgK1xuICAgICAgXCIgICAgbWF0NCBjem1faW5zdGFuY2VkX21vZGVsID0gbWF0NChjem1fbW9kZWxNYXRyaXhSb3cwLngsIGN6bV9tb2RlbE1hdHJpeFJvdzEueCwgY3ptX21vZGVsTWF0cml4Um93Mi54LCAwLjAsIGN6bV9tb2RlbE1hdHJpeFJvdzAueSwgY3ptX21vZGVsTWF0cml4Um93MS55LCBjem1fbW9kZWxNYXRyaXhSb3cyLnksIDAuMCwgY3ptX21vZGVsTWF0cml4Um93MC56LCBjem1fbW9kZWxNYXRyaXhSb3cxLnosIGN6bV9tb2RlbE1hdHJpeFJvdzIueiwgMC4wLCBjem1fbW9kZWxNYXRyaXhSb3cwLncsIGN6bV9tb2RlbE1hdHJpeFJvdzEudywgY3ptX21vZGVsTWF0cml4Um93Mi53LCAxLjApO1xcblwiICtcbiAgICAgIFwiICAgIGN6bV9pbnN0YW5jZWRfbW9kZWxWaWV3ID0gY3ptX2luc3RhbmNlZF9tb2RpZmllZE1vZGVsVmlldyAqIGN6bV9pbnN0YW5jZWRfbW9kZWwgKiBjem1faW5zdGFuY2VkX25vZGVUcmFuc2Zvcm07XFxuXCIgK1xuICAgICAgZ2xvYmFsVmFyc01haW4gK1xuICAgICAgXCIgICAgY3ptX2luc3RhbmNpbmdfbWFpbigpO1xcblwiICtcbiAgICAgIHBpY2tWYXJ5aW5nICtcbiAgICAgIFwifVxcblwiO1xuXG4gICAgaWYgKHVzZXNCYXRjaFRhYmxlKSB7XG4gICAgICB2YXIgZ2x0ZiA9IGNvbGxlY3Rpb24uX21vZGVsLmdsdGY7XG4gICAgICB2YXIgZGlmZnVzZUF0dHJpYnV0ZU9yVW5pZm9ybU5hbWUgPSBNb2RlbFV0aWxpdHkuZ2V0RGlmZnVzZUF0dHJpYnV0ZU9yVW5pZm9ybShcbiAgICAgICAgZ2x0ZixcbiAgICAgICAgcHJvZ3JhbUlkXG4gICAgICApO1xuICAgICAgaW5zdGFuY2VkU291cmNlID0gY29sbGVjdGlvbi5fYmF0Y2hUYWJsZS5nZXRWZXJ0ZXhTaGFkZXJDYWxsYmFjayhcbiAgICAgICAgdHJ1ZSxcbiAgICAgICAgXCJhX2JhdGNoSWRcIixcbiAgICAgICAgZGlmZnVzZUF0dHJpYnV0ZU9yVW5pZm9ybU5hbWVcbiAgICAgICkoaW5zdGFuY2VkU291cmNlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5zdGFuY2VkU291cmNlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBnZXRGcmFnbWVudFNoYWRlckNhbGxiYWNrKGNvbGxlY3Rpb24pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChmcywgcHJvZ3JhbUlkKSB7XG4gICAgdmFyIGJhdGNoVGFibGUgPSBjb2xsZWN0aW9uLl9iYXRjaFRhYmxlO1xuICAgIGlmIChkZWZpbmVkKGJhdGNoVGFibGUpKSB7XG4gICAgICB2YXIgZ2x0ZiA9IGNvbGxlY3Rpb24uX21vZGVsLmdsdGY7XG4gICAgICB2YXIgZGlmZnVzZUF0dHJpYnV0ZU9yVW5pZm9ybU5hbWUgPSBNb2RlbFV0aWxpdHkuZ2V0RGlmZnVzZUF0dHJpYnV0ZU9yVW5pZm9ybShcbiAgICAgICAgZ2x0ZixcbiAgICAgICAgcHJvZ3JhbUlkXG4gICAgICApO1xuICAgICAgZnMgPSBiYXRjaFRhYmxlLmdldEZyYWdtZW50U2hhZGVyQ2FsbGJhY2soXG4gICAgICAgIHRydWUsXG4gICAgICAgIGRpZmZ1c2VBdHRyaWJ1dGVPclVuaWZvcm1OYW1lLFxuICAgICAgICBmYWxzZVxuICAgICAgKShmcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZzID0gXCJ2YXJ5aW5nIHZlYzQgdl9waWNrQ29sb3I7XFxuXCIgKyBmcztcbiAgICB9XG4gICAgcmV0dXJuIGZzO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVNb2RpZmllZE1vZGVsVmlldyhjb2xsZWN0aW9uLCBjb250ZXh0KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIE1hdHJpeDQubXVsdGlwbHkoXG4gICAgICBjb250ZXh0LnVuaWZvcm1TdGF0ZS52aWV3LFxuICAgICAgY29sbGVjdGlvbi5fcnRjVHJhbnNmb3JtLFxuICAgICAgY29sbGVjdGlvbi5fcnRjTW9kZWxWaWV3XG4gICAgKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTm9kZVRyYW5zZm9ybUZ1bmN0aW9uKG5vZGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gbm9kZS5jb21wdXRlZE1hdHJpeDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0VW5pZm9ybU1hcENhbGxiYWNrKGNvbGxlY3Rpb24sIGNvbnRleHQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICh1bmlmb3JtTWFwLCBwcm9ncmFtSWQsIG5vZGUpIHtcbiAgICB1bmlmb3JtTWFwID0gY2xvbmUodW5pZm9ybU1hcCk7XG4gICAgdW5pZm9ybU1hcC5jem1faW5zdGFuY2VkX21vZGlmaWVkTW9kZWxWaWV3ID0gY3JlYXRlTW9kaWZpZWRNb2RlbFZpZXcoXG4gICAgICBjb2xsZWN0aW9uLFxuICAgICAgY29udGV4dFxuICAgICk7XG4gICAgdW5pZm9ybU1hcC5jem1faW5zdGFuY2VkX25vZGVUcmFuc2Zvcm0gPSBjcmVhdGVOb2RlVHJhbnNmb3JtRnVuY3Rpb24obm9kZSk7XG5cbiAgICAvLyBSZW1vdmUgaW5zdGFuY2VkIHVuaWZvcm1zIGZyb20gdGhlIHVuaWZvcm0gbWFwXG4gICAgdmFyIGluc3RhbmNlZFVuaWZvcm1zID0gZ2V0SW5zdGFuY2VkVW5pZm9ybXMoY29sbGVjdGlvbiwgcHJvZ3JhbUlkKTtcbiAgICBmb3IgKHZhciB1bmlmb3JtIGluIGluc3RhbmNlZFVuaWZvcm1zKSB7XG4gICAgICBpZiAoaW5zdGFuY2VkVW5pZm9ybXMuaGFzT3duUHJvcGVydHkodW5pZm9ybSkpIHtcbiAgICAgICAgZGVsZXRlIHVuaWZvcm1NYXBbdW5pZm9ybV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGRlZmluZWQoY29sbGVjdGlvbi5fYmF0Y2hUYWJsZSkpIHtcbiAgICAgIHVuaWZvcm1NYXAgPSBjb2xsZWN0aW9uLl9iYXRjaFRhYmxlLmdldFVuaWZvcm1NYXBDYWxsYmFjaygpKHVuaWZvcm1NYXApO1xuICAgIH1cblxuICAgIHJldHVybiB1bmlmb3JtTWFwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBnZXRWZXJ0ZXhTaGFkZXJOb25JbnN0YW5jZWRDYWxsYmFjayhjb2xsZWN0aW9uKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodnMsIHByb2dyYW1JZCkge1xuICAgIGlmIChkZWZpbmVkKGNvbGxlY3Rpb24uX2JhdGNoVGFibGUpKSB7XG4gICAgICB2YXIgZ2x0ZiA9IGNvbGxlY3Rpb24uX21vZGVsLmdsdGY7XG4gICAgICB2YXIgZGlmZnVzZUF0dHJpYnV0ZU9yVW5pZm9ybU5hbWUgPSBNb2RlbFV0aWxpdHkuZ2V0RGlmZnVzZUF0dHJpYnV0ZU9yVW5pZm9ybShcbiAgICAgICAgZ2x0ZixcbiAgICAgICAgcHJvZ3JhbUlkXG4gICAgICApO1xuICAgICAgdnMgPSBjb2xsZWN0aW9uLl9iYXRjaFRhYmxlLmdldFZlcnRleFNoYWRlckNhbGxiYWNrKFxuICAgICAgICB0cnVlLFxuICAgICAgICBcImFfYmF0Y2hJZFwiLFxuICAgICAgICBkaWZmdXNlQXR0cmlidXRlT3JVbmlmb3JtTmFtZVxuICAgICAgKSh2cyk7XG4gICAgICAvLyBUcmVhdCBhX2JhdGNoSWQgYXMgYSB1bmlmb3JtIHJhdGhlciB0aGFuIGEgdmVydGV4IGF0dHJpYnV0ZVxuICAgICAgdnMgPSBcInVuaWZvcm0gZmxvYXQgYV9iYXRjaElkXFxuO1wiICsgdnM7XG4gICAgfVxuICAgIHJldHVybiB2cztcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RnJhZ21lbnRTaGFkZXJOb25JbnN0YW5jZWRDYWxsYmFjayhjb2xsZWN0aW9uKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoZnMsIHByb2dyYW1JZCkge1xuICAgIHZhciBiYXRjaFRhYmxlID0gY29sbGVjdGlvbi5fYmF0Y2hUYWJsZTtcbiAgICBpZiAoZGVmaW5lZChiYXRjaFRhYmxlKSkge1xuICAgICAgdmFyIGdsdGYgPSBjb2xsZWN0aW9uLl9tb2RlbC5nbHRmO1xuICAgICAgdmFyIGRpZmZ1c2VBdHRyaWJ1dGVPclVuaWZvcm1OYW1lID0gTW9kZWxVdGlsaXR5LmdldERpZmZ1c2VBdHRyaWJ1dGVPclVuaWZvcm0oXG4gICAgICAgIGdsdGYsXG4gICAgICAgIHByb2dyYW1JZFxuICAgICAgKTtcbiAgICAgIGZzID0gYmF0Y2hUYWJsZS5nZXRGcmFnbWVudFNoYWRlckNhbGxiYWNrKFxuICAgICAgICB0cnVlLFxuICAgICAgICBkaWZmdXNlQXR0cmlidXRlT3JVbmlmb3JtTmFtZSxcbiAgICAgICAgZmFsc2VcbiAgICAgICkoZnMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmcyA9IFwidW5pZm9ybSB2ZWM0IGN6bV9waWNrQ29sb3I7XFxuXCIgKyBmcztcbiAgICB9XG4gICAgcmV0dXJuIGZzO1xuICB9O1xufVxuXG5mdW5jdGlvbiBnZXRVbmlmb3JtTWFwTm9uSW5zdGFuY2VkQ2FsbGJhY2soY29sbGVjdGlvbikge1xuICByZXR1cm4gZnVuY3Rpb24gKHVuaWZvcm1NYXApIHtcbiAgICBpZiAoZGVmaW5lZChjb2xsZWN0aW9uLl9iYXRjaFRhYmxlKSkge1xuICAgICAgdW5pZm9ybU1hcCA9IGNvbGxlY3Rpb24uX2JhdGNoVGFibGUuZ2V0VW5pZm9ybU1hcENhbGxiYWNrKCkodW5pZm9ybU1hcCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuaWZvcm1NYXA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFZlcnRleEJ1ZmZlclR5cGVkQXJyYXkoY29sbGVjdGlvbikge1xuICB2YXIgaW5zdGFuY2VzID0gY29sbGVjdGlvbi5faW5zdGFuY2VzO1xuICB2YXIgaW5zdGFuY2VzTGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7XG4gIHZhciBjb2xsZWN0aW9uQ2VudGVyID0gY29sbGVjdGlvbi5fY2VudGVyO1xuICB2YXIgdmVydGV4U2l6ZUluRmxvYXRzID0gMTI7XG5cbiAgdmFyIGJ1ZmZlckRhdGEgPSBjb2xsZWN0aW9uLl92ZXJ0ZXhCdWZmZXJUeXBlZEFycmF5O1xuICBpZiAoIWRlZmluZWQoYnVmZmVyRGF0YSkpIHtcbiAgICBidWZmZXJEYXRhID0gbmV3IEZsb2F0MzJBcnJheShpbnN0YW5jZXNMZW5ndGggKiB2ZXJ0ZXhTaXplSW5GbG9hdHMpO1xuICB9XG4gIGlmIChjb2xsZWN0aW9uLl9keW5hbWljKSB7XG4gICAgLy8gSG9sZCBvbnRvIHRoZSBidWZmZXIgZGF0YSBzbyB3ZSBkb24ndCBoYXZlIHRvIGFsbG9jYXRlIG5ldyBtZW1vcnkgZXZlcnkgZnJhbWUuXG4gICAgY29sbGVjdGlvbi5fdmVydGV4QnVmZmVyVHlwZWRBcnJheSA9IGJ1ZmZlckRhdGE7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGluc3RhbmNlc0xlbmd0aDsgKytpKSB7XG4gICAgdmFyIG1vZGVsTWF0cml4ID0gaW5zdGFuY2VzW2ldLl9tb2RlbE1hdHJpeDtcblxuICAgIC8vIEluc3RhbmNlIG1hdHJpeCBpcyByZWxhdGl2ZSB0byBjZW50ZXJcbiAgICB2YXIgaW5zdGFuY2VNYXRyaXggPSBNYXRyaXg0LmNsb25lKG1vZGVsTWF0cml4LCBzY3JhdGNoTWF0cml4KTtcbiAgICBpbnN0YW5jZU1hdHJpeFsxMl0gLT0gY29sbGVjdGlvbkNlbnRlci54O1xuICAgIGluc3RhbmNlTWF0cml4WzEzXSAtPSBjb2xsZWN0aW9uQ2VudGVyLnk7XG4gICAgaW5zdGFuY2VNYXRyaXhbMTRdIC09IGNvbGxlY3Rpb25DZW50ZXIuejtcblxuICAgIHZhciBvZmZzZXQgPSBpICogdmVydGV4U2l6ZUluRmxvYXRzO1xuXG4gICAgLy8gRmlyc3QgdGhyZWUgcm93cyBvZiB0aGUgbW9kZWwgbWF0cml4XG4gICAgYnVmZmVyRGF0YVtvZmZzZXQgKyAwXSA9IGluc3RhbmNlTWF0cml4WzBdO1xuICAgIGJ1ZmZlckRhdGFbb2Zmc2V0ICsgMV0gPSBpbnN0YW5jZU1hdHJpeFs0XTtcbiAgICBidWZmZXJEYXRhW29mZnNldCArIDJdID0gaW5zdGFuY2VNYXRyaXhbOF07XG4gICAgYnVmZmVyRGF0YVtvZmZzZXQgKyAzXSA9IGluc3RhbmNlTWF0cml4WzEyXTtcbiAgICBidWZmZXJEYXRhW29mZnNldCArIDRdID0gaW5zdGFuY2VNYXRyaXhbMV07XG4gICAgYnVmZmVyRGF0YVtvZmZzZXQgKyA1XSA9IGluc3RhbmNlTWF0cml4WzVdO1xuICAgIGJ1ZmZlckRhdGFbb2Zmc2V0ICsgNl0gPSBpbnN0YW5jZU1hdHJpeFs5XTtcbiAgICBidWZmZXJEYXRhW29mZnNldCArIDddID0gaW5zdGFuY2VNYXRyaXhbMTNdO1xuICAgIGJ1ZmZlckRhdGFbb2Zmc2V0ICsgOF0gPSBpbnN0YW5jZU1hdHJpeFsyXTtcbiAgICBidWZmZXJEYXRhW29mZnNldCArIDldID0gaW5zdGFuY2VNYXRyaXhbNl07XG4gICAgYnVmZmVyRGF0YVtvZmZzZXQgKyAxMF0gPSBpbnN0YW5jZU1hdHJpeFsxMF07XG4gICAgYnVmZmVyRGF0YVtvZmZzZXQgKyAxMV0gPSBpbnN0YW5jZU1hdHJpeFsxNF07XG4gIH1cblxuICByZXR1cm4gYnVmZmVyRGF0YTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVmVydGV4QnVmZmVyKGNvbGxlY3Rpb24sIGNvbnRleHQpIHtcbiAgdmFyIGk7XG4gIHZhciBpbnN0YW5jZXMgPSBjb2xsZWN0aW9uLl9pbnN0YW5jZXM7XG4gIHZhciBpbnN0YW5jZXNMZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aDtcbiAgdmFyIGR5bmFtaWMgPSBjb2xsZWN0aW9uLl9keW5hbWljO1xuICB2YXIgdXNlc0JhdGNoVGFibGUgPSBkZWZpbmVkKGNvbGxlY3Rpb24uX2JhdGNoVGFibGUpO1xuXG4gIGlmICh1c2VzQmF0Y2hUYWJsZSkge1xuICAgIHZhciBiYXRjaElkQnVmZmVyRGF0YSA9IG5ldyBVaW50MTZBcnJheShpbnN0YW5jZXNMZW5ndGgpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBpbnN0YW5jZXNMZW5ndGg7ICsraSkge1xuICAgICAgYmF0Y2hJZEJ1ZmZlckRhdGFbaV0gPSBpbnN0YW5jZXNbaV0uX2luc3RhbmNlSWQ7XG4gICAgfVxuICAgIGNvbGxlY3Rpb24uX2JhdGNoSWRCdWZmZXIgPSBCdWZmZXIuY3JlYXRlVmVydGV4QnVmZmVyKHtcbiAgICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgICB0eXBlZEFycmF5OiBiYXRjaElkQnVmZmVyRGF0YSxcbiAgICAgIHVzYWdlOiBCdWZmZXJVc2FnZS5TVEFUSUNfRFJBVyxcbiAgICB9KTtcbiAgfVxuXG4gIGlmICghdXNlc0JhdGNoVGFibGUpIHtcbiAgICB2YXIgcGlja0lkQnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoaW5zdGFuY2VzTGVuZ3RoICogNCk7XG4gICAgZm9yIChpID0gMDsgaSA8IGluc3RhbmNlc0xlbmd0aDsgKytpKSB7XG4gICAgICB2YXIgcGlja0lkID0gY29sbGVjdGlvbi5fcGlja0lkc1tpXTtcbiAgICAgIHZhciBwaWNrQ29sb3IgPSBwaWNrSWQuY29sb3I7XG4gICAgICB2YXIgb2Zmc2V0ID0gaSAqIDQ7XG4gICAgICBwaWNrSWRCdWZmZXJbb2Zmc2V0XSA9IENvbG9yLmZsb2F0VG9CeXRlKHBpY2tDb2xvci5yZWQpO1xuICAgICAgcGlja0lkQnVmZmVyW29mZnNldCArIDFdID0gQ29sb3IuZmxvYXRUb0J5dGUocGlja0NvbG9yLmdyZWVuKTtcbiAgICAgIHBpY2tJZEJ1ZmZlcltvZmZzZXQgKyAyXSA9IENvbG9yLmZsb2F0VG9CeXRlKHBpY2tDb2xvci5ibHVlKTtcbiAgICAgIHBpY2tJZEJ1ZmZlcltvZmZzZXQgKyAzXSA9IENvbG9yLmZsb2F0VG9CeXRlKHBpY2tDb2xvci5hbHBoYSk7XG4gICAgfVxuICAgIGNvbGxlY3Rpb24uX3BpY2tJZEJ1ZmZlciA9IEJ1ZmZlci5jcmVhdGVWZXJ0ZXhCdWZmZXIoe1xuICAgICAgY29udGV4dDogY29udGV4dCxcbiAgICAgIHR5cGVkQXJyYXk6IHBpY2tJZEJ1ZmZlcixcbiAgICAgIHVzYWdlOiBCdWZmZXJVc2FnZS5TVEFUSUNfRFJBVyxcbiAgICB9KTtcbiAgfVxuXG4gIHZhciB2ZXJ0ZXhCdWZmZXJUeXBlZEFycmF5ID0gZ2V0VmVydGV4QnVmZmVyVHlwZWRBcnJheShjb2xsZWN0aW9uKTtcbiAgY29sbGVjdGlvbi5fdmVydGV4QnVmZmVyID0gQnVmZmVyLmNyZWF0ZVZlcnRleEJ1ZmZlcih7XG4gICAgY29udGV4dDogY29udGV4dCxcbiAgICB0eXBlZEFycmF5OiB2ZXJ0ZXhCdWZmZXJUeXBlZEFycmF5LFxuICAgIHVzYWdlOiBkeW5hbWljID8gQnVmZmVyVXNhZ2UuU1RSRUFNX0RSQVcgOiBCdWZmZXJVc2FnZS5TVEFUSUNfRFJBVyxcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVZlcnRleEJ1ZmZlcihjb2xsZWN0aW9uKSB7XG4gIHZhciB2ZXJ0ZXhCdWZmZXJUeXBlZEFycmF5ID0gZ2V0VmVydGV4QnVmZmVyVHlwZWRBcnJheShjb2xsZWN0aW9uKTtcbiAgY29sbGVjdGlvbi5fdmVydGV4QnVmZmVyLmNvcHlGcm9tQXJyYXlWaWV3KHZlcnRleEJ1ZmZlclR5cGVkQXJyYXkpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVQaWNrSWRzKGNvbGxlY3Rpb24sIGNvbnRleHQpIHtcbiAgLy8gUEVSRk9STUFOQ0VfSURFQTogd2UgY291bGQgc2tpcCB0aGUgcGljayBidWZmZXIgY29tcGxldGVseSBieSBhbGxvY2F0aW5nXG4gIC8vIGEgY29udGludW91cyByYW5nZSBvZiBwaWNrSWRzIGFuZCB0aGVuIGNvbnZlcnRpbmcgdGhlIGJhc2UgcGlja0lkICsgYmF0Y2hJZFxuICAvLyB0byBSR0JBIGluIHRoZSBzaGFkZXIuICBUaGUgb25seSBjb25zaWRlciBpcyBwcmVjaXNpb24gaXNzdWVzLCB3aGljaCBtaWdodFxuICAvLyBub3QgYmUgYW4gaXNzdWUgaW4gV2ViR0wgMi5cbiAgdmFyIGluc3RhbmNlcyA9IGNvbGxlY3Rpb24uX2luc3RhbmNlcztcbiAgdmFyIGluc3RhbmNlc0xlbmd0aCA9IGluc3RhbmNlcy5sZW5ndGg7XG4gIHZhciBwaWNrSWRzID0gbmV3IEFycmF5KGluc3RhbmNlc0xlbmd0aCk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgaW5zdGFuY2VzTGVuZ3RoOyArK2kpIHtcbiAgICBwaWNrSWRzW2ldID0gY29udGV4dC5jcmVhdGVQaWNrSWQoaW5zdGFuY2VzW2ldKTtcbiAgfVxuICByZXR1cm4gcGlja0lkcztcbn1cblxuZnVuY3Rpb24gY3JlYXRlTW9kZWwoY29sbGVjdGlvbiwgY29udGV4dCkge1xuICB2YXIgaW5zdGFuY2luZ1N1cHBvcnRlZCA9IGNvbGxlY3Rpb24uX2luc3RhbmNpbmdTdXBwb3J0ZWQ7XG4gIHZhciB1c2VzQmF0Y2hUYWJsZSA9IGRlZmluZWQoY29sbGVjdGlvbi5fYmF0Y2hUYWJsZSk7XG4gIHZhciBhbGxvd1BpY2tpbmcgPSBjb2xsZWN0aW9uLl9hbGxvd1BpY2tpbmc7XG5cbiAgdmFyIG1vZGVsT3B0aW9ucyA9IHtcbiAgICB1cmw6IGNvbGxlY3Rpb24uX3VybCxcbiAgICByZXF1ZXN0VHlwZTogY29sbGVjdGlvbi5fcmVxdWVzdFR5cGUsXG4gICAgZ2x0ZjogY29sbGVjdGlvbi5fZ2x0ZixcbiAgICBiYXNlUGF0aDogY29sbGVjdGlvbi5fYmFzZVBhdGgsXG4gICAgc2hhZG93czogY29sbGVjdGlvbi5fc2hhZG93cyxcbiAgICBjYWNoZUtleTogdW5kZWZpbmVkLFxuICAgIGFzeW5jaHJvbm91czogY29sbGVjdGlvbi5fYXN5bmNocm9ub3VzLFxuICAgIGFsbG93UGlja2luZzogYWxsb3dQaWNraW5nLFxuICAgIGluY3JlbWVudGFsbHlMb2FkVGV4dHVyZXM6IGNvbGxlY3Rpb24uX2luY3JlbWVudGFsbHlMb2FkVGV4dHVyZXMsXG4gICAgdXBBeGlzOiBjb2xsZWN0aW9uLl91cEF4aXMsXG4gICAgZm9yd2FyZEF4aXM6IGNvbGxlY3Rpb24uX2ZvcndhcmRBeGlzLFxuICAgIHByZWNyZWF0ZWRBdHRyaWJ1dGVzOiB1bmRlZmluZWQsXG4gICAgdmVydGV4U2hhZGVyTG9hZGVkOiB1bmRlZmluZWQsXG4gICAgZnJhZ21lbnRTaGFkZXJMb2FkZWQ6IHVuZGVmaW5lZCxcbiAgICB1bmlmb3JtTWFwTG9hZGVkOiB1bmRlZmluZWQsXG4gICAgcGlja0lkTG9hZGVkOiBjb2xsZWN0aW9uLl9waWNrSWRMb2FkZWQsXG4gICAgaWdub3JlQ29tbWFuZHM6IHRydWUsXG4gICAgb3BhcXVlUGFzczogY29sbGVjdGlvbi5fb3BhcXVlUGFzcyxcbiAgICBpbWFnZUJhc2VkTGlnaHRpbmdGYWN0b3I6IGNvbGxlY3Rpb24uaW1hZ2VCYXNlZExpZ2h0aW5nRmFjdG9yLFxuICAgIGxpZ2h0Q29sb3I6IGNvbGxlY3Rpb24ubGlnaHRDb2xvcixcbiAgICBsdW1pbmFuY2VBdFplbml0aDogY29sbGVjdGlvbi5sdW1pbmFuY2VBdFplbml0aCxcbiAgICBzcGhlcmljYWxIYXJtb25pY0NvZWZmaWNpZW50czogY29sbGVjdGlvbi5zcGhlcmljYWxIYXJtb25pY0NvZWZmaWNpZW50cyxcbiAgICBzcGVjdWxhckVudmlyb25tZW50TWFwczogY29sbGVjdGlvbi5zcGVjdWxhckVudmlyb25tZW50TWFwcyxcbiAgICBzaG93T3V0bGluZTogY29sbGVjdGlvbi5zaG93T3V0bGluZSxcbiAgfTtcblxuICBpZiAoIXVzZXNCYXRjaFRhYmxlKSB7XG4gICAgY29sbGVjdGlvbi5fcGlja0lkcyA9IGNyZWF0ZVBpY2tJZHMoY29sbGVjdGlvbiwgY29udGV4dCk7XG4gIH1cblxuICBpZiAoaW5zdGFuY2luZ1N1cHBvcnRlZCkge1xuICAgIGNyZWF0ZVZlcnRleEJ1ZmZlcihjb2xsZWN0aW9uLCBjb250ZXh0KTtcblxuICAgIHZhciB2ZXJ0ZXhTaXplSW5GbG9hdHMgPSAxMjtcbiAgICB2YXIgY29tcG9uZW50U2l6ZUluQnl0ZXMgPSBDb21wb25lbnREYXRhdHlwZS5nZXRTaXplSW5CeXRlcyhcbiAgICAgIENvbXBvbmVudERhdGF0eXBlLkZMT0FUXG4gICAgKTtcblxuICAgIHZhciBpbnN0YW5jZWRBdHRyaWJ1dGVzID0ge1xuICAgICAgY3ptX21vZGVsTWF0cml4Um93MDoge1xuICAgICAgICBpbmRleDogMCwgLy8gdXBkYXRlZCBpbiBNb2RlbFxuICAgICAgICB2ZXJ0ZXhCdWZmZXI6IGNvbGxlY3Rpb24uX3ZlcnRleEJ1ZmZlcixcbiAgICAgICAgY29tcG9uZW50c1BlckF0dHJpYnV0ZTogNCxcbiAgICAgICAgY29tcG9uZW50RGF0YXR5cGU6IENvbXBvbmVudERhdGF0eXBlLkZMT0FULFxuICAgICAgICBub3JtYWxpemU6IGZhbHNlLFxuICAgICAgICBvZmZzZXRJbkJ5dGVzOiAwLFxuICAgICAgICBzdHJpZGVJbkJ5dGVzOiBjb21wb25lbnRTaXplSW5CeXRlcyAqIHZlcnRleFNpemVJbkZsb2F0cyxcbiAgICAgICAgaW5zdGFuY2VEaXZpc29yOiAxLFxuICAgICAgfSxcbiAgICAgIGN6bV9tb2RlbE1hdHJpeFJvdzE6IHtcbiAgICAgICAgaW5kZXg6IDAsIC8vIHVwZGF0ZWQgaW4gTW9kZWxcbiAgICAgICAgdmVydGV4QnVmZmVyOiBjb2xsZWN0aW9uLl92ZXJ0ZXhCdWZmZXIsXG4gICAgICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDQsXG4gICAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5GTE9BVCxcbiAgICAgICAgbm9ybWFsaXplOiBmYWxzZSxcbiAgICAgICAgb2Zmc2V0SW5CeXRlczogY29tcG9uZW50U2l6ZUluQnl0ZXMgKiA0LFxuICAgICAgICBzdHJpZGVJbkJ5dGVzOiBjb21wb25lbnRTaXplSW5CeXRlcyAqIHZlcnRleFNpemVJbkZsb2F0cyxcbiAgICAgICAgaW5zdGFuY2VEaXZpc29yOiAxLFxuICAgICAgfSxcbiAgICAgIGN6bV9tb2RlbE1hdHJpeFJvdzI6IHtcbiAgICAgICAgaW5kZXg6IDAsIC8vIHVwZGF0ZWQgaW4gTW9kZWxcbiAgICAgICAgdmVydGV4QnVmZmVyOiBjb2xsZWN0aW9uLl92ZXJ0ZXhCdWZmZXIsXG4gICAgICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDQsXG4gICAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5GTE9BVCxcbiAgICAgICAgbm9ybWFsaXplOiBmYWxzZSxcbiAgICAgICAgb2Zmc2V0SW5CeXRlczogY29tcG9uZW50U2l6ZUluQnl0ZXMgKiA4LFxuICAgICAgICBzdHJpZGVJbkJ5dGVzOiBjb21wb25lbnRTaXplSW5CeXRlcyAqIHZlcnRleFNpemVJbkZsb2F0cyxcbiAgICAgICAgaW5zdGFuY2VEaXZpc29yOiAxLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgLy8gV2hlbiB1c2luZyBhIGJhdGNoIHRhYmxlLCBhZGQgYSBiYXRjaCBpZCBhdHRyaWJ1dGVcbiAgICBpZiAodXNlc0JhdGNoVGFibGUpIHtcbiAgICAgIGluc3RhbmNlZEF0dHJpYnV0ZXMuYV9iYXRjaElkID0ge1xuICAgICAgICBpbmRleDogMCwgLy8gdXBkYXRlZCBpbiBNb2RlbFxuICAgICAgICB2ZXJ0ZXhCdWZmZXI6IGNvbGxlY3Rpb24uX2JhdGNoSWRCdWZmZXIsXG4gICAgICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDEsXG4gICAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5VTlNJR05FRF9TSE9SVCxcbiAgICAgICAgbm9ybWFsaXplOiBmYWxzZSxcbiAgICAgICAgb2Zmc2V0SW5CeXRlczogMCxcbiAgICAgICAgc3RyaWRlSW5CeXRlczogMCxcbiAgICAgICAgaW5zdGFuY2VEaXZpc29yOiAxLFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAoIXVzZXNCYXRjaFRhYmxlKSB7XG4gICAgICBpbnN0YW5jZWRBdHRyaWJ1dGVzLnBpY2tDb2xvciA9IHtcbiAgICAgICAgaW5kZXg6IDAsIC8vIHVwZGF0ZWQgaW4gTW9kZWxcbiAgICAgICAgdmVydGV4QnVmZmVyOiBjb2xsZWN0aW9uLl9waWNrSWRCdWZmZXIsXG4gICAgICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDQsXG4gICAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5VTlNJR05FRF9CWVRFLFxuICAgICAgICBub3JtYWxpemU6IHRydWUsXG4gICAgICAgIG9mZnNldEluQnl0ZXM6IDAsXG4gICAgICAgIHN0cmlkZUluQnl0ZXM6IDAsXG4gICAgICAgIGluc3RhbmNlRGl2aXNvcjogMSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgbW9kZWxPcHRpb25zLnByZWNyZWF0ZWRBdHRyaWJ1dGVzID0gaW5zdGFuY2VkQXR0cmlidXRlcztcbiAgICBtb2RlbE9wdGlvbnMudmVydGV4U2hhZGVyTG9hZGVkID0gZ2V0VmVydGV4U2hhZGVyQ2FsbGJhY2soY29sbGVjdGlvbik7XG4gICAgbW9kZWxPcHRpb25zLmZyYWdtZW50U2hhZGVyTG9hZGVkID0gZ2V0RnJhZ21lbnRTaGFkZXJDYWxsYmFjayhjb2xsZWN0aW9uKTtcbiAgICBtb2RlbE9wdGlvbnMudW5pZm9ybU1hcExvYWRlZCA9IGdldFVuaWZvcm1NYXBDYWxsYmFjayhjb2xsZWN0aW9uLCBjb250ZXh0KTtcblxuICAgIGlmIChkZWZpbmVkKGNvbGxlY3Rpb24uX3VybCkpIHtcbiAgICAgIG1vZGVsT3B0aW9ucy5jYWNoZUtleSA9IGNvbGxlY3Rpb24uX3VybC5nZXRVcmxDb21wb25lbnQoKSArIFwiI2luc3RhbmNlZFwiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBtb2RlbE9wdGlvbnMudmVydGV4U2hhZGVyTG9hZGVkID0gZ2V0VmVydGV4U2hhZGVyTm9uSW5zdGFuY2VkQ2FsbGJhY2soXG4gICAgICBjb2xsZWN0aW9uXG4gICAgKTtcbiAgICBtb2RlbE9wdGlvbnMuZnJhZ21lbnRTaGFkZXJMb2FkZWQgPSBnZXRGcmFnbWVudFNoYWRlck5vbkluc3RhbmNlZENhbGxiYWNrKFxuICAgICAgY29sbGVjdGlvblxuICAgICk7XG4gICAgbW9kZWxPcHRpb25zLnVuaWZvcm1NYXBMb2FkZWQgPSBnZXRVbmlmb3JtTWFwTm9uSW5zdGFuY2VkQ2FsbGJhY2soXG4gICAgICBjb2xsZWN0aW9uLFxuICAgICAgY29udGV4dFxuICAgICk7XG4gIH1cblxuICBpZiAoZGVmaW5lZChjb2xsZWN0aW9uLl91cmwpKSB7XG4gICAgY29sbGVjdGlvbi5fbW9kZWwgPSBNb2RlbC5mcm9tR2x0Zihtb2RlbE9wdGlvbnMpO1xuICB9IGVsc2Uge1xuICAgIGNvbGxlY3Rpb24uX21vZGVsID0gbmV3IE1vZGVsKG1vZGVsT3B0aW9ucyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlV2lyZWZyYW1lKGNvbGxlY3Rpb24sIGZvcmNlKSB7XG4gIGlmIChjb2xsZWN0aW9uLl9kZWJ1Z1dpcmVmcmFtZSAhPT0gY29sbGVjdGlvbi5kZWJ1Z1dpcmVmcmFtZSB8fCBmb3JjZSkge1xuICAgIGNvbGxlY3Rpb24uX2RlYnVnV2lyZWZyYW1lID0gY29sbGVjdGlvbi5kZWJ1Z1dpcmVmcmFtZTtcblxuICAgIC8vIFRoaXMgYXNzdW1lcyB0aGUgb3JpZ2luYWwgcHJpbWl0aXZlIHdhcyBUUklBTkdMRVMgYW5kIHRoYXQgdGhlIHRyaWFuZ2xlc1xuICAgIC8vIGFyZSBjb25uZWN0ZWQgZm9yIHRoZSB3aXJlZnJhbWUgdG8gbG9vayBwZXJmZWN0LlxuICAgIHZhciBwcmltaXRpdmVUeXBlID0gY29sbGVjdGlvbi5kZWJ1Z1dpcmVmcmFtZVxuICAgICAgPyBQcmltaXRpdmVUeXBlLkxJTkVTXG4gICAgICA6IFByaW1pdGl2ZVR5cGUuVFJJQU5HTEVTO1xuICAgIHZhciBjb21tYW5kcyA9IGNvbGxlY3Rpb24uX2RyYXdDb21tYW5kcztcbiAgICB2YXIgbGVuZ3RoID0gY29tbWFuZHMubGVuZ3RoO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICAgIGNvbW1hbmRzW2ldLnByaW1pdGl2ZVR5cGUgPSBwcmltaXRpdmVUeXBlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREaXNhYmxlQ3VsbGluZ1JlbmRlclN0YXRlKHJlbmRlclN0YXRlKSB7XG4gIHZhciBycyA9IGNsb25lKHJlbmRlclN0YXRlLCB0cnVlKTtcbiAgcnMuY3VsbC5lbmFibGVkID0gZmFsc2U7XG4gIHJldHVybiBSZW5kZXJTdGF0ZS5mcm9tQ2FjaGUocnMpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVCYWNrRmFjZUN1bGxpbmcoY29sbGVjdGlvbiwgZm9yY2UpIHtcbiAgaWYgKGNvbGxlY3Rpb24uX2JhY2tGYWNlQ3VsbGluZyAhPT0gY29sbGVjdGlvbi5iYWNrRmFjZUN1bGxpbmcgfHwgZm9yY2UpIHtcbiAgICBjb2xsZWN0aW9uLl9iYWNrRmFjZUN1bGxpbmcgPSBjb2xsZWN0aW9uLmJhY2tGYWNlQ3VsbGluZztcblxuICAgIHZhciBjb21tYW5kcyA9IGNvbGxlY3Rpb24uX2RyYXdDb21tYW5kcztcbiAgICB2YXIgbGVuZ3RoID0gY29tbWFuZHMubGVuZ3RoO1xuICAgIHZhciBpO1xuXG4gICAgaWYgKCFkZWZpbmVkKGNvbGxlY3Rpb24uX2Rpc2FibGVDdWxsaW5nUmVuZGVyU3RhdGVzKSkge1xuICAgICAgY29sbGVjdGlvbi5fZGlzYWJsZUN1bGxpbmdSZW5kZXJTdGF0ZXMgPSBuZXcgQXJyYXkobGVuZ3RoKTtcbiAgICAgIGNvbGxlY3Rpb24uX3JlbmRlclN0YXRlcyA9IG5ldyBBcnJheShsZW5ndGgpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciByZW5kZXJTdGF0ZSA9IGNvbW1hbmRzW2ldLnJlbmRlclN0YXRlO1xuICAgICAgICB2YXIgZGVyaXZlZFJlbmRlclN0YXRlID0gZ2V0RGlzYWJsZUN1bGxpbmdSZW5kZXJTdGF0ZShyZW5kZXJTdGF0ZSk7XG4gICAgICAgIGNvbGxlY3Rpb24uX2Rpc2FibGVDdWxsaW5nUmVuZGVyU3RhdGVzW2ldID0gZGVyaXZlZFJlbmRlclN0YXRlO1xuICAgICAgICBjb2xsZWN0aW9uLl9yZW5kZXJTdGF0ZXNbaV0gPSByZW5kZXJTdGF0ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICAgIGNvbW1hbmRzW2ldLnJlbmRlclN0YXRlID0gY29sbGVjdGlvbi5fYmFja0ZhY2VDdWxsaW5nXG4gICAgICAgID8gY29sbGVjdGlvbi5fcmVuZGVyU3RhdGVzW2ldXG4gICAgICAgIDogY29sbGVjdGlvbi5fZGlzYWJsZUN1bGxpbmdSZW5kZXJTdGF0ZXNbaV07XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVNob3dCb3VuZGluZ1ZvbHVtZShjb2xsZWN0aW9uLCBmb3JjZSkge1xuICBpZiAoXG4gICAgY29sbGVjdGlvbi5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSAhPT1cbiAgICAgIGNvbGxlY3Rpb24uX2RlYnVnU2hvd0JvdW5kaW5nVm9sdW1lIHx8XG4gICAgZm9yY2VcbiAgKSB7XG4gICAgY29sbGVjdGlvbi5fZGVidWdTaG93Qm91bmRpbmdWb2x1bWUgPSBjb2xsZWN0aW9uLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lO1xuXG4gICAgdmFyIGNvbW1hbmRzID0gY29sbGVjdGlvbi5fZHJhd0NvbW1hbmRzO1xuICAgIHZhciBsZW5ndGggPSBjb21tYW5kcy5sZW5ndGg7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgICAgY29tbWFuZHNbaV0uZGVidWdTaG93Qm91bmRpbmdWb2x1bWUgPSBjb2xsZWN0aW9uLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21tYW5kcyhjb2xsZWN0aW9uLCBkcmF3Q29tbWFuZHMpIHtcbiAgdmFyIGNvbW1hbmRzTGVuZ3RoID0gZHJhd0NvbW1hbmRzLmxlbmd0aDtcbiAgdmFyIGluc3RhbmNlc0xlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuICB2YXIgYm91bmRpbmdTcGhlcmUgPSBjb2xsZWN0aW9uLl9ib3VuZGluZ1NwaGVyZTtcbiAgdmFyIGN1bGwgPSBjb2xsZWN0aW9uLl9jdWxsO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY29tbWFuZHNMZW5ndGg7ICsraSkge1xuICAgIHZhciBkcmF3Q29tbWFuZCA9IERyYXdDb21tYW5kLnNoYWxsb3dDbG9uZShkcmF3Q29tbWFuZHNbaV0pO1xuICAgIGRyYXdDb21tYW5kLmluc3RhbmNlQ291bnQgPSBpbnN0YW5jZXNMZW5ndGg7XG4gICAgZHJhd0NvbW1hbmQuYm91bmRpbmdWb2x1bWUgPSBib3VuZGluZ1NwaGVyZTtcbiAgICBkcmF3Q29tbWFuZC5jdWxsID0gY3VsbDtcbiAgICBpZiAoZGVmaW5lZChjb2xsZWN0aW9uLl9iYXRjaFRhYmxlKSkge1xuICAgICAgZHJhd0NvbW1hbmQucGlja0lkID0gY29sbGVjdGlvbi5fYmF0Y2hUYWJsZS5nZXRQaWNrSWQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZHJhd0NvbW1hbmQucGlja0lkID0gXCJ2X3BpY2tDb2xvclwiO1xuICAgIH1cbiAgICBjb2xsZWN0aW9uLl9kcmF3Q29tbWFuZHMucHVzaChkcmF3Q29tbWFuZCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlQmF0Y2hJZEZ1bmN0aW9uKGJhdGNoSWQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYmF0Y2hJZDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUGlja0NvbG9yRnVuY3Rpb24oY29sb3IpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY29sb3I7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbW1hbmRzTm9uSW5zdGFuY2VkKGNvbGxlY3Rpb24sIGRyYXdDb21tYW5kcykge1xuICAvLyBXaGVuIGluc3RhbmNpbmcgaXMgZGlzYWJsZWQsIGNyZWF0ZSBjb21tYW5kcyBmb3IgZXZlcnkgaW5zdGFuY2UuXG4gIHZhciBpbnN0YW5jZXMgPSBjb2xsZWN0aW9uLl9pbnN0YW5jZXM7XG4gIHZhciBjb21tYW5kc0xlbmd0aCA9IGRyYXdDb21tYW5kcy5sZW5ndGg7XG4gIHZhciBpbnN0YW5jZXNMZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aDtcbiAgdmFyIGJhdGNoVGFibGUgPSBjb2xsZWN0aW9uLl9iYXRjaFRhYmxlO1xuICB2YXIgdXNlc0JhdGNoVGFibGUgPSBkZWZpbmVkKGJhdGNoVGFibGUpO1xuICB2YXIgY3VsbCA9IGNvbGxlY3Rpb24uX2N1bGw7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb21tYW5kc0xlbmd0aDsgKytpKSB7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBpbnN0YW5jZXNMZW5ndGg7ICsraikge1xuICAgICAgdmFyIGRyYXdDb21tYW5kID0gRHJhd0NvbW1hbmQuc2hhbGxvd0Nsb25lKGRyYXdDb21tYW5kc1tpXSk7XG4gICAgICBkcmF3Q29tbWFuZC5tb2RlbE1hdHJpeCA9IG5ldyBNYXRyaXg0KCk7IC8vIFVwZGF0ZWQgaW4gdXBkYXRlQ29tbWFuZHNOb25JbnN0YW5jZWRcbiAgICAgIGRyYXdDb21tYW5kLmJvdW5kaW5nVm9sdW1lID0gbmV3IEJvdW5kaW5nU3BoZXJlKCk7IC8vIFVwZGF0ZWQgaW4gdXBkYXRlQ29tbWFuZHNOb25JbnN0YW5jZWRcbiAgICAgIGRyYXdDb21tYW5kLmN1bGwgPSBjdWxsO1xuICAgICAgZHJhd0NvbW1hbmQudW5pZm9ybU1hcCA9IGNsb25lKGRyYXdDb21tYW5kLnVuaWZvcm1NYXApO1xuICAgICAgaWYgKHVzZXNCYXRjaFRhYmxlKSB7XG4gICAgICAgIGRyYXdDb21tYW5kLnVuaWZvcm1NYXAuYV9iYXRjaElkID0gY3JlYXRlQmF0Y2hJZEZ1bmN0aW9uKFxuICAgICAgICAgIGluc3RhbmNlc1tqXS5faW5zdGFuY2VJZFxuICAgICAgICApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHBpY2tJZCA9IGNvbGxlY3Rpb24uX3BpY2tJZHNbal07XG4gICAgICAgIGRyYXdDb21tYW5kLnVuaWZvcm1NYXAuY3ptX3BpY2tDb2xvciA9IGNyZWF0ZVBpY2tDb2xvckZ1bmN0aW9uKFxuICAgICAgICAgIHBpY2tJZC5jb2xvclxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgY29sbGVjdGlvbi5fZHJhd0NvbW1hbmRzLnB1c2goZHJhd0NvbW1hbmQpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiB1cGRhdGVDb21tYW5kc05vbkluc3RhbmNlZChjb2xsZWN0aW9uKSB7XG4gIHZhciBtb2RlbENvbW1hbmRzID0gY29sbGVjdGlvbi5fbW9kZWxDb21tYW5kcztcbiAgdmFyIGNvbW1hbmRzTGVuZ3RoID0gbW9kZWxDb21tYW5kcy5sZW5ndGg7XG4gIHZhciBpbnN0YW5jZXNMZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aDtcbiAgdmFyIGNvbGxlY3Rpb25UcmFuc2Zvcm0gPSBjb2xsZWN0aW9uLl9ydGNUcmFuc2Zvcm07XG4gIHZhciBjb2xsZWN0aW9uQ2VudGVyID0gY29sbGVjdGlvbi5fY2VudGVyO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY29tbWFuZHNMZW5ndGg7ICsraSkge1xuICAgIHZhciBtb2RlbENvbW1hbmQgPSBtb2RlbENvbW1hbmRzW2ldO1xuICAgIGZvciAodmFyIGogPSAwOyBqIDwgaW5zdGFuY2VzTGVuZ3RoOyArK2opIHtcbiAgICAgIHZhciBjb21tYW5kSW5kZXggPSBpICogaW5zdGFuY2VzTGVuZ3RoICsgajtcbiAgICAgIHZhciBkcmF3Q29tbWFuZCA9IGNvbGxlY3Rpb24uX2RyYXdDb21tYW5kc1tjb21tYW5kSW5kZXhdO1xuICAgICAgdmFyIGluc3RhbmNlTWF0cml4ID0gTWF0cml4NC5jbG9uZShcbiAgICAgICAgY29sbGVjdGlvbi5faW5zdGFuY2VzW2pdLl9tb2RlbE1hdHJpeCxcbiAgICAgICAgc2NyYXRjaE1hdHJpeFxuICAgICAgKTtcbiAgICAgIGluc3RhbmNlTWF0cml4WzEyXSAtPSBjb2xsZWN0aW9uQ2VudGVyLng7XG4gICAgICBpbnN0YW5jZU1hdHJpeFsxM10gLT0gY29sbGVjdGlvbkNlbnRlci55O1xuICAgICAgaW5zdGFuY2VNYXRyaXhbMTRdIC09IGNvbGxlY3Rpb25DZW50ZXIuejtcbiAgICAgIGluc3RhbmNlTWF0cml4ID0gTWF0cml4NC5tdWx0aXBseShcbiAgICAgICAgY29sbGVjdGlvblRyYW5zZm9ybSxcbiAgICAgICAgaW5zdGFuY2VNYXRyaXgsXG4gICAgICAgIHNjcmF0Y2hNYXRyaXhcbiAgICAgICk7XG4gICAgICB2YXIgbm9kZU1hdHJpeCA9IG1vZGVsQ29tbWFuZC5tb2RlbE1hdHJpeDtcbiAgICAgIHZhciBtb2RlbE1hdHJpeCA9IGRyYXdDb21tYW5kLm1vZGVsTWF0cml4O1xuICAgICAgTWF0cml4NC5tdWx0aXBseShpbnN0YW5jZU1hdHJpeCwgbm9kZU1hdHJpeCwgbW9kZWxNYXRyaXgpO1xuXG4gICAgICB2YXIgbm9kZUJvdW5kaW5nU3BoZXJlID0gbW9kZWxDb21tYW5kLmJvdW5kaW5nVm9sdW1lO1xuICAgICAgdmFyIGJvdW5kaW5nU3BoZXJlID0gZHJhd0NvbW1hbmQuYm91bmRpbmdWb2x1bWU7XG4gICAgICBCb3VuZGluZ1NwaGVyZS50cmFuc2Zvcm0oXG4gICAgICAgIG5vZGVCb3VuZGluZ1NwaGVyZSxcbiAgICAgICAgaW5zdGFuY2VNYXRyaXgsXG4gICAgICAgIGJvdW5kaW5nU3BoZXJlXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRNb2RlbENvbW1hbmRzKG1vZGVsKSB7XG4gIHZhciBub2RlQ29tbWFuZHMgPSBtb2RlbC5fbm9kZUNvbW1hbmRzO1xuICB2YXIgbGVuZ3RoID0gbm9kZUNvbW1hbmRzLmxlbmd0aDtcblxuICB2YXIgZHJhd0NvbW1hbmRzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBuYyA9IG5vZGVDb21tYW5kc1tpXTtcbiAgICBpZiAobmMuc2hvdykge1xuICAgICAgZHJhd0NvbW1hbmRzLnB1c2gobmMuY29tbWFuZCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRyYXdDb21tYW5kcztcbn1cblxuZnVuY3Rpb24gY29tbWFuZHNEaXJ0eShtb2RlbCkge1xuICB2YXIgbm9kZUNvbW1hbmRzID0gbW9kZWwuX25vZGVDb21tYW5kcztcbiAgdmFyIGxlbmd0aCA9IG5vZGVDb21tYW5kcy5sZW5ndGg7XG5cbiAgdmFyIGNvbW1hbmRzRGlydHkgPSBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIG5jID0gbm9kZUNvbW1hbmRzW2ldO1xuICAgIGlmIChuYy5jb21tYW5kLmRpcnR5KSB7XG4gICAgICBuYy5jb21tYW5kLmRpcnR5ID0gZmFsc2U7XG4gICAgICBjb21tYW5kc0RpcnR5ID0gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGNvbW1hbmRzRGlydHk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlTW9kZWxDb21tYW5kcyhtb2RlbEluc3RhbmNlQ29sbGVjdGlvbiwgaW5zdGFuY2luZ1N1cHBvcnRlZCkge1xuICBtb2RlbEluc3RhbmNlQ29sbGVjdGlvbi5fZHJhd0NvbW1hbmRzID0gW107XG5cbiAgdmFyIG1vZGVsQ29tbWFuZHMgPSBnZXRNb2RlbENvbW1hbmRzKG1vZGVsSW5zdGFuY2VDb2xsZWN0aW9uLl9tb2RlbCk7XG4gIGlmIChpbnN0YW5jaW5nU3VwcG9ydGVkKSB7XG4gICAgY3JlYXRlQ29tbWFuZHMobW9kZWxJbnN0YW5jZUNvbGxlY3Rpb24sIG1vZGVsQ29tbWFuZHMpO1xuICB9IGVsc2Uge1xuICAgIGNyZWF0ZUNvbW1hbmRzTm9uSW5zdGFuY2VkKG1vZGVsSW5zdGFuY2VDb2xsZWN0aW9uLCBtb2RlbENvbW1hbmRzKTtcbiAgICB1cGRhdGVDb21tYW5kc05vbkluc3RhbmNlZChtb2RlbEluc3RhbmNlQ29sbGVjdGlvbik7XG4gIH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlU2hhZG93cyhjb2xsZWN0aW9uLCBmb3JjZSkge1xuICBpZiAoY29sbGVjdGlvbi5zaGFkb3dzICE9PSBjb2xsZWN0aW9uLl9zaGFkb3dzIHx8IGZvcmNlKSB7XG4gICAgY29sbGVjdGlvbi5fc2hhZG93cyA9IGNvbGxlY3Rpb24uc2hhZG93cztcblxuICAgIHZhciBjYXN0U2hhZG93cyA9IFNoYWRvd01vZGUuY2FzdFNoYWRvd3MoY29sbGVjdGlvbi5zaGFkb3dzKTtcbiAgICB2YXIgcmVjZWl2ZVNoYWRvd3MgPSBTaGFkb3dNb2RlLnJlY2VpdmVTaGFkb3dzKGNvbGxlY3Rpb24uc2hhZG93cyk7XG5cbiAgICB2YXIgZHJhd0NvbW1hbmRzID0gY29sbGVjdGlvbi5fZHJhd0NvbW1hbmRzO1xuICAgIHZhciBsZW5ndGggPSBkcmF3Q29tbWFuZHMubGVuZ3RoO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBkcmF3Q29tbWFuZCA9IGRyYXdDb21tYW5kc1tpXTtcbiAgICAgIGRyYXdDb21tYW5kLmNhc3RTaGFkb3dzID0gY2FzdFNoYWRvd3M7XG4gICAgICBkcmF3Q29tbWFuZC5yZWNlaXZlU2hhZG93cyA9IHJlY2VpdmVTaGFkb3dzO1xuICAgIH1cbiAgfVxufVxuXG5Nb2RlbEluc3RhbmNlQ29sbGVjdGlvbi5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGZyYW1lU3RhdGUpIHtcbiAgaWYgKGZyYW1lU3RhdGUubW9kZSA9PT0gU2NlbmVNb2RlLk1PUlBISU5HKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKCF0aGlzLnNob3cpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAodGhpcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgY29udGV4dCA9IGZyYW1lU3RhdGUuY29udGV4dDtcblxuICBpZiAodGhpcy5fc3RhdGUgPT09IExvYWRTdGF0ZS5ORUVEU19MT0FEKSB7XG4gICAgdGhpcy5fc3RhdGUgPSBMb2FkU3RhdGUuTE9BRElORztcbiAgICB0aGlzLl9pbnN0YW5jaW5nU3VwcG9ydGVkID0gY29udGV4dC5pbnN0YW5jZWRBcnJheXM7XG4gICAgY3JlYXRlTW9kZWwodGhpcywgY29udGV4dCk7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHRoaXMuX21vZGVsLnJlYWR5UHJvbWlzZS5vdGhlcndpc2UoZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICB0aGF0Ll9zdGF0ZSA9IExvYWRTdGF0ZS5GQUlMRUQ7XG4gICAgICB0aGF0Ll9yZWFkeVByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBpbnN0YW5jaW5nU3VwcG9ydGVkID0gdGhpcy5faW5zdGFuY2luZ1N1cHBvcnRlZDtcbiAgdmFyIG1vZGVsID0gdGhpcy5fbW9kZWw7XG5cbiAgbW9kZWwuaW1hZ2VCYXNlZExpZ2h0aW5nRmFjdG9yID0gdGhpcy5pbWFnZUJhc2VkTGlnaHRpbmdGYWN0b3I7XG4gIG1vZGVsLmxpZ2h0Q29sb3IgPSB0aGlzLmxpZ2h0Q29sb3I7XG4gIG1vZGVsLmx1bWluYW5jZUF0WmVuaXRoID0gdGhpcy5sdW1pbmFuY2VBdFplbml0aDtcbiAgbW9kZWwuc3BoZXJpY2FsSGFybW9uaWNDb2VmZmljaWVudHMgPSB0aGlzLnNwaGVyaWNhbEhhcm1vbmljQ29lZmZpY2llbnRzO1xuICBtb2RlbC5zcGVjdWxhckVudmlyb25tZW50TWFwcyA9IHRoaXMuc3BlY3VsYXJFbnZpcm9ubWVudE1hcHM7XG5cbiAgbW9kZWwudXBkYXRlKGZyYW1lU3RhdGUpO1xuXG4gIGlmIChtb2RlbC5yZWFkeSAmJiB0aGlzLl9zdGF0ZSA9PT0gTG9hZFN0YXRlLkxPQURJTkcpIHtcbiAgICB0aGlzLl9zdGF0ZSA9IExvYWRTdGF0ZS5MT0FERUQ7XG4gICAgdGhpcy5fcmVhZHkgPSB0cnVlO1xuXG4gICAgLy8gRXhwYW5kIGJvdW5kaW5nIHZvbHVtZSB0byBmaXQgdGhlIHJhZGl1cyBvZiB0aGUgbG9hZGVkIG1vZGVsIGluY2x1ZGluZyB0aGUgbW9kZWwncyBvZmZzZXQgZnJvbSB0aGUgY2VudGVyXG4gICAgdmFyIG1vZGVsUmFkaXVzID1cbiAgICAgIG1vZGVsLmJvdW5kaW5nU3BoZXJlLnJhZGl1cyArXG4gICAgICBDYXJ0ZXNpYW4zLm1hZ25pdHVkZShtb2RlbC5ib3VuZGluZ1NwaGVyZS5jZW50ZXIpO1xuICAgIHRoaXMuX2JvdW5kaW5nU3BoZXJlLnJhZGl1cyArPSBtb2RlbFJhZGl1cztcbiAgICB0aGlzLl9tb2RlbENvbW1hbmRzID0gZ2V0TW9kZWxDb21tYW5kcyhtb2RlbCk7XG5cbiAgICBnZW5lcmF0ZU1vZGVsQ29tbWFuZHModGhpcywgaW5zdGFuY2luZ1N1cHBvcnRlZCk7XG5cbiAgICB0aGlzLl9yZWFkeVByb21pc2UucmVzb2x2ZSh0aGlzKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAodGhpcy5fc3RhdGUgIT09IExvYWRTdGF0ZS5MT0FERUQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgbW9kZUNoYW5nZWQgPSBmcmFtZVN0YXRlLm1vZGUgIT09IHRoaXMuX21vZGU7XG4gIHZhciBtb2RlbE1hdHJpeCA9IHRoaXMubW9kZWxNYXRyaXg7XG4gIHZhciBtb2RlbE1hdHJpeENoYW5nZWQgPSAhTWF0cml4NC5lcXVhbHModGhpcy5fbW9kZWxNYXRyaXgsIG1vZGVsTWF0cml4KTtcblxuICBpZiAobW9kZUNoYW5nZWQgfHwgbW9kZWxNYXRyaXhDaGFuZ2VkKSB7XG4gICAgdGhpcy5fbW9kZSA9IGZyYW1lU3RhdGUubW9kZTtcbiAgICBNYXRyaXg0LmNsb25lKG1vZGVsTWF0cml4LCB0aGlzLl9tb2RlbE1hdHJpeCk7XG4gICAgdmFyIHJ0Y1RyYW5zZm9ybSA9IE1hdHJpeDQubXVsdGlwbHlCeVRyYW5zbGF0aW9uKFxuICAgICAgdGhpcy5fbW9kZWxNYXRyaXgsXG4gICAgICB0aGlzLl9jZW50ZXIsXG4gICAgICB0aGlzLl9ydGNUcmFuc2Zvcm1cbiAgICApO1xuICAgIGlmICh0aGlzLl9tb2RlICE9PSBTY2VuZU1vZGUuU0NFTkUzRCkge1xuICAgICAgcnRjVHJhbnNmb3JtID0gVHJhbnNmb3Jtcy5iYXNpc1RvMkQoXG4gICAgICAgIGZyYW1lU3RhdGUubWFwUHJvamVjdGlvbixcbiAgICAgICAgcnRjVHJhbnNmb3JtLFxuICAgICAgICBydGNUcmFuc2Zvcm1cbiAgICAgICk7XG4gICAgfVxuICAgIE1hdHJpeDQuZ2V0VHJhbnNsYXRpb24ocnRjVHJhbnNmb3JtLCB0aGlzLl9ib3VuZGluZ1NwaGVyZS5jZW50ZXIpO1xuICB9XG5cbiAgaWYgKGluc3RhbmNpbmdTdXBwb3J0ZWQgJiYgdGhpcy5fZGlydHkpIHtcbiAgICAvLyBJZiBhdCBsZWFzdCBvbmUgaW5zdGFuY2UgaGFzIG1vdmVkIGFzc3VtZSB0aGUgY29sbGVjdGlvbiBpcyBub3cgZHluYW1pY1xuICAgIHRoaXMuX2R5bmFtaWMgPSB0cnVlO1xuICAgIHRoaXMuX2RpcnR5ID0gZmFsc2U7XG5cbiAgICAvLyBQRVJGT1JNQU5DRV9JREVBOiBvbmx5IHVwZGF0ZSBkaXJ0eSBzdWItc2VjdGlvbnMgaW5zdGVhZCBvZiB0aGUgd2hvbGUgY29sbGVjdGlvblxuICAgIHVwZGF0ZVZlcnRleEJ1ZmZlcih0aGlzKTtcbiAgfVxuXG4gIC8vIElmIHRoZSBtb2RlbCB3YXMgc2V0IHRvIHJlYnVpbGQgc2hhZGVycyBkdXJpbmcgdXBkYXRlLCByZWJ1aWxkIGluc3RhbmNlZCBjb21tYW5kcy5cbiAgdmFyIG1vZGVsQ29tbWFuZHNEaXJ0eSA9IGNvbW1hbmRzRGlydHkobW9kZWwpO1xuICBpZiAobW9kZWxDb21tYW5kc0RpcnR5KSB7XG4gICAgZ2VuZXJhdGVNb2RlbENvbW1hbmRzKHRoaXMsIGluc3RhbmNpbmdTdXBwb3J0ZWQpO1xuICB9XG5cbiAgLy8gSWYgYW55IG5vZGUgY2hhbmdlcyBkdWUgdG8gYW4gYW5pbWF0aW9uLCB1cGRhdGUgdGhlIGNvbW1hbmRzLiBUaGlzIGNvdWxkIGJlIGluZWZmaWNpZW50IGlmIHRoZSBtb2RlbCBpc1xuICAvLyBjb21wb3NlZCBvZiBtYW55IG5vZGVzIGFuZCBvbmx5IG9uZSBjaGFuZ2VzLCBob3dldmVyIGl0IGlzIHByb2JhYmx5IGZpbmUgaW4gdGhlIGdlbmVyYWwgdXNlIGNhc2UuXG4gIC8vIE9ubHkgYXBwbGllcyB3aGVuIGluc3RhbmNpbmcgaXMgZGlzYWJsZWQuIFRoZSBpbnN0YW5jZWQgc2hhZGVyIGF1dG9tYXRpY2FsbHkgaGFuZGxlcyBub2RlIHRyYW5zZm9ybWF0aW9ucy5cbiAgaWYgKFxuICAgICFpbnN0YW5jaW5nU3VwcG9ydGVkICYmXG4gICAgKG1vZGVsLmRpcnR5IHx8IHRoaXMuX2RpcnR5IHx8IG1vZGVDaGFuZ2VkIHx8IG1vZGVsTWF0cml4Q2hhbmdlZClcbiAgKSB7XG4gICAgdXBkYXRlQ29tbWFuZHNOb25JbnN0YW5jZWQodGhpcyk7XG4gIH1cblxuICB1cGRhdGVTaGFkb3dzKHRoaXMsIG1vZGVsQ29tbWFuZHNEaXJ0eSk7XG4gIHVwZGF0ZVdpcmVmcmFtZSh0aGlzLCBtb2RlbENvbW1hbmRzRGlydHkpO1xuICB1cGRhdGVCYWNrRmFjZUN1bGxpbmcodGhpcywgbW9kZWxDb21tYW5kc0RpcnR5KTtcbiAgdXBkYXRlU2hvd0JvdW5kaW5nVm9sdW1lKHRoaXMsIG1vZGVsQ29tbWFuZHNEaXJ0eSk7XG5cbiAgdmFyIHBhc3NlcyA9IGZyYW1lU3RhdGUucGFzc2VzO1xuICBpZiAoIXBhc3Nlcy5yZW5kZXIgJiYgIXBhc3Nlcy5waWNrKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGNvbW1hbmRMaXN0ID0gZnJhbWVTdGF0ZS5jb21tYW5kTGlzdDtcbiAgdmFyIGNvbW1hbmRzID0gdGhpcy5fZHJhd0NvbW1hbmRzO1xuICB2YXIgY29tbWFuZHNMZW5ndGggPSBjb21tYW5kcy5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb21tYW5kc0xlbmd0aDsgKytpKSB7XG4gICAgY29tbWFuZExpc3QucHVzaChjb21tYW5kc1tpXSk7XG4gIH1cbn07XG5cbk1vZGVsSW5zdGFuY2VDb2xsZWN0aW9uLnByb3RvdHlwZS5pc0Rlc3Ryb3llZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuTW9kZWxJbnN0YW5jZUNvbGxlY3Rpb24ucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuX21vZGVsID0gdGhpcy5fbW9kZWwgJiYgdGhpcy5fbW9kZWwuZGVzdHJveSgpO1xuXG4gIHZhciBwaWNrSWRzID0gdGhpcy5fcGlja0lkcztcbiAgaWYgKGRlZmluZWQocGlja0lkcykpIHtcbiAgICB2YXIgbGVuZ3RoID0gcGlja0lkcy5sZW5ndGg7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgICAgcGlja0lkc1tpXS5kZXN0cm95KCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRlc3Ryb3lPYmplY3QodGhpcyk7XG59O1xuZXhwb3J0IGRlZmF1bHQgTW9kZWxJbnN0YW5jZUNvbGxlY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///41074\n')},28770:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Queue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79120);\n\n\n/**\n * @private\n */\nfunction ModelLoadResources() {\n  this.initialized = false;\n  this.resourcesParsed = false;\n\n  this.vertexBuffersToCreate = new _Core_Queue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this.indexBuffersToCreate = new _Core_Queue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this.buffers = {};\n  this.pendingBufferLoads = 0;\n\n  this.programsToCreate = new _Core_Queue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this.shaders = {};\n  this.pendingShaderLoads = 0;\n\n  this.texturesToCreate = new _Core_Queue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this.pendingTextureLoads = 0;\n\n  this.texturesToCreateFromBufferView = new _Core_Queue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this.pendingBufferViewToImage = 0;\n\n  this.createSamplers = true;\n  this.createSkins = true;\n  this.createRuntimeAnimations = true;\n  this.createVertexArrays = true;\n  this.createRenderStates = true;\n  this.createUniformMaps = true;\n  this.createRuntimeNodes = true;\n\n  this.createdBufferViews = {};\n  this.primitivesToDecode = new _Core_Queue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this.activeDecodingTasks = 0;\n  this.pendingDecodingCache = false;\n\n  this.skinnedNodesIds = [];\n}\n\n/**\n * This function differs from the normal subarray function\n * because it takes offset and length, rather than begin and end.\n * @private\n */\nfunction getSubarray(array, offset, length) {\n  return array.subarray(offset, offset + length);\n}\n\nModelLoadResources.prototype.getBuffer = function (bufferView) {\n  return getSubarray(\n    this.buffers[bufferView.buffer],\n    bufferView.byteOffset,\n    bufferView.byteLength\n  );\n};\n\nModelLoadResources.prototype.finishedPendingBufferLoads = function () {\n  return this.pendingBufferLoads === 0;\n};\n\nModelLoadResources.prototype.finishedBuffersCreation = function () {\n  return (\n    this.pendingBufferLoads === 0 &&\n    this.vertexBuffersToCreate.length === 0 &&\n    this.indexBuffersToCreate.length === 0\n  );\n};\n\nModelLoadResources.prototype.finishedProgramCreation = function () {\n  return this.pendingShaderLoads === 0 && this.programsToCreate.length === 0;\n};\n\nModelLoadResources.prototype.finishedTextureCreation = function () {\n  var finishedPendingLoads = this.pendingTextureLoads === 0;\n  var finishedResourceCreation =\n    this.texturesToCreate.length === 0 &&\n    this.texturesToCreateFromBufferView.length === 0;\n\n  return finishedPendingLoads && finishedResourceCreation;\n};\n\nModelLoadResources.prototype.finishedEverythingButTextureCreation = function () {\n  var finishedPendingLoads =\n    this.pendingBufferLoads === 0 && this.pendingShaderLoads === 0;\n  var finishedResourceCreation =\n    this.vertexBuffersToCreate.length === 0 &&\n    this.indexBuffersToCreate.length === 0 &&\n    this.programsToCreate.length === 0 &&\n    this.pendingBufferViewToImage === 0;\n\n  return (\n    this.finishedDecoding() && finishedPendingLoads && finishedResourceCreation\n  );\n};\n\nModelLoadResources.prototype.finishedDecoding = function () {\n  return (\n    this.primitivesToDecode.length === 0 &&\n    this.activeDecodingTasks === 0 &&\n    !this.pendingDecodingCache\n  );\n};\n\nModelLoadResources.prototype.finished = function () {\n  return (\n    this.finishedDecoding() &&\n    this.finishedTextureCreation() &&\n    this.finishedEverythingButTextureCreation()\n  );\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ModelLoadResources);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjg3NzAuanMiLCJtYXBwaW5ncyI6IjtBQUFxQzs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1DQUFtQywrREFBSztBQUN4QyxrQ0FBa0MsK0RBQUs7QUFDdkM7QUFDQTs7QUFFQSw4QkFBOEIsK0RBQUs7QUFDbkM7QUFDQTs7QUFFQSw4QkFBOEIsK0RBQUs7QUFDbkM7O0FBRUEsNENBQTRDLCtEQUFLO0FBQ2pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDLCtEQUFLO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBZSxrQkFBa0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9Nb2RlbExvYWRSZXNvdXJjZXMuanM/OTZhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUXVldWUgZnJvbSBcIi4uL0NvcmUvUXVldWUuanNcIjtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBNb2RlbExvYWRSZXNvdXJjZXMoKSB7XG4gIHRoaXMuaW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgdGhpcy5yZXNvdXJjZXNQYXJzZWQgPSBmYWxzZTtcblxuICB0aGlzLnZlcnRleEJ1ZmZlcnNUb0NyZWF0ZSA9IG5ldyBRdWV1ZSgpO1xuICB0aGlzLmluZGV4QnVmZmVyc1RvQ3JlYXRlID0gbmV3IFF1ZXVlKCk7XG4gIHRoaXMuYnVmZmVycyA9IHt9O1xuICB0aGlzLnBlbmRpbmdCdWZmZXJMb2FkcyA9IDA7XG5cbiAgdGhpcy5wcm9ncmFtc1RvQ3JlYXRlID0gbmV3IFF1ZXVlKCk7XG4gIHRoaXMuc2hhZGVycyA9IHt9O1xuICB0aGlzLnBlbmRpbmdTaGFkZXJMb2FkcyA9IDA7XG5cbiAgdGhpcy50ZXh0dXJlc1RvQ3JlYXRlID0gbmV3IFF1ZXVlKCk7XG4gIHRoaXMucGVuZGluZ1RleHR1cmVMb2FkcyA9IDA7XG5cbiAgdGhpcy50ZXh0dXJlc1RvQ3JlYXRlRnJvbUJ1ZmZlclZpZXcgPSBuZXcgUXVldWUoKTtcbiAgdGhpcy5wZW5kaW5nQnVmZmVyVmlld1RvSW1hZ2UgPSAwO1xuXG4gIHRoaXMuY3JlYXRlU2FtcGxlcnMgPSB0cnVlO1xuICB0aGlzLmNyZWF0ZVNraW5zID0gdHJ1ZTtcbiAgdGhpcy5jcmVhdGVSdW50aW1lQW5pbWF0aW9ucyA9IHRydWU7XG4gIHRoaXMuY3JlYXRlVmVydGV4QXJyYXlzID0gdHJ1ZTtcbiAgdGhpcy5jcmVhdGVSZW5kZXJTdGF0ZXMgPSB0cnVlO1xuICB0aGlzLmNyZWF0ZVVuaWZvcm1NYXBzID0gdHJ1ZTtcbiAgdGhpcy5jcmVhdGVSdW50aW1lTm9kZXMgPSB0cnVlO1xuXG4gIHRoaXMuY3JlYXRlZEJ1ZmZlclZpZXdzID0ge307XG4gIHRoaXMucHJpbWl0aXZlc1RvRGVjb2RlID0gbmV3IFF1ZXVlKCk7XG4gIHRoaXMuYWN0aXZlRGVjb2RpbmdUYXNrcyA9IDA7XG4gIHRoaXMucGVuZGluZ0RlY29kaW5nQ2FjaGUgPSBmYWxzZTtcblxuICB0aGlzLnNraW5uZWROb2Rlc0lkcyA9IFtdO1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gZGlmZmVycyBmcm9tIHRoZSBub3JtYWwgc3ViYXJyYXkgZnVuY3Rpb25cbiAqIGJlY2F1c2UgaXQgdGFrZXMgb2Zmc2V0IGFuZCBsZW5ndGgsIHJhdGhlciB0aGFuIGJlZ2luIGFuZCBlbmQuXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBnZXRTdWJhcnJheShhcnJheSwgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGFycmF5LnN1YmFycmF5KG9mZnNldCwgb2Zmc2V0ICsgbGVuZ3RoKTtcbn1cblxuTW9kZWxMb2FkUmVzb3VyY2VzLnByb3RvdHlwZS5nZXRCdWZmZXIgPSBmdW5jdGlvbiAoYnVmZmVyVmlldykge1xuICByZXR1cm4gZ2V0U3ViYXJyYXkoXG4gICAgdGhpcy5idWZmZXJzW2J1ZmZlclZpZXcuYnVmZmVyXSxcbiAgICBidWZmZXJWaWV3LmJ5dGVPZmZzZXQsXG4gICAgYnVmZmVyVmlldy5ieXRlTGVuZ3RoXG4gICk7XG59O1xuXG5Nb2RlbExvYWRSZXNvdXJjZXMucHJvdG90eXBlLmZpbmlzaGVkUGVuZGluZ0J1ZmZlckxvYWRzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5wZW5kaW5nQnVmZmVyTG9hZHMgPT09IDA7XG59O1xuXG5Nb2RlbExvYWRSZXNvdXJjZXMucHJvdG90eXBlLmZpbmlzaGVkQnVmZmVyc0NyZWF0aW9uID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gKFxuICAgIHRoaXMucGVuZGluZ0J1ZmZlckxvYWRzID09PSAwICYmXG4gICAgdGhpcy52ZXJ0ZXhCdWZmZXJzVG9DcmVhdGUubGVuZ3RoID09PSAwICYmXG4gICAgdGhpcy5pbmRleEJ1ZmZlcnNUb0NyZWF0ZS5sZW5ndGggPT09IDBcbiAgKTtcbn07XG5cbk1vZGVsTG9hZFJlc291cmNlcy5wcm90b3R5cGUuZmluaXNoZWRQcm9ncmFtQ3JlYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLnBlbmRpbmdTaGFkZXJMb2FkcyA9PT0gMCAmJiB0aGlzLnByb2dyYW1zVG9DcmVhdGUubGVuZ3RoID09PSAwO1xufTtcblxuTW9kZWxMb2FkUmVzb3VyY2VzLnByb3RvdHlwZS5maW5pc2hlZFRleHR1cmVDcmVhdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGZpbmlzaGVkUGVuZGluZ0xvYWRzID0gdGhpcy5wZW5kaW5nVGV4dHVyZUxvYWRzID09PSAwO1xuICB2YXIgZmluaXNoZWRSZXNvdXJjZUNyZWF0aW9uID1cbiAgICB0aGlzLnRleHR1cmVzVG9DcmVhdGUubGVuZ3RoID09PSAwICYmXG4gICAgdGhpcy50ZXh0dXJlc1RvQ3JlYXRlRnJvbUJ1ZmZlclZpZXcubGVuZ3RoID09PSAwO1xuXG4gIHJldHVybiBmaW5pc2hlZFBlbmRpbmdMb2FkcyAmJiBmaW5pc2hlZFJlc291cmNlQ3JlYXRpb247XG59O1xuXG5Nb2RlbExvYWRSZXNvdXJjZXMucHJvdG90eXBlLmZpbmlzaGVkRXZlcnl0aGluZ0J1dFRleHR1cmVDcmVhdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGZpbmlzaGVkUGVuZGluZ0xvYWRzID1cbiAgICB0aGlzLnBlbmRpbmdCdWZmZXJMb2FkcyA9PT0gMCAmJiB0aGlzLnBlbmRpbmdTaGFkZXJMb2FkcyA9PT0gMDtcbiAgdmFyIGZpbmlzaGVkUmVzb3VyY2VDcmVhdGlvbiA9XG4gICAgdGhpcy52ZXJ0ZXhCdWZmZXJzVG9DcmVhdGUubGVuZ3RoID09PSAwICYmXG4gICAgdGhpcy5pbmRleEJ1ZmZlcnNUb0NyZWF0ZS5sZW5ndGggPT09IDAgJiZcbiAgICB0aGlzLnByb2dyYW1zVG9DcmVhdGUubGVuZ3RoID09PSAwICYmXG4gICAgdGhpcy5wZW5kaW5nQnVmZmVyVmlld1RvSW1hZ2UgPT09IDA7XG5cbiAgcmV0dXJuIChcbiAgICB0aGlzLmZpbmlzaGVkRGVjb2RpbmcoKSAmJiBmaW5pc2hlZFBlbmRpbmdMb2FkcyAmJiBmaW5pc2hlZFJlc291cmNlQ3JlYXRpb25cbiAgKTtcbn07XG5cbk1vZGVsTG9hZFJlc291cmNlcy5wcm90b3R5cGUuZmluaXNoZWREZWNvZGluZyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIChcbiAgICB0aGlzLnByaW1pdGl2ZXNUb0RlY29kZS5sZW5ndGggPT09IDAgJiZcbiAgICB0aGlzLmFjdGl2ZURlY29kaW5nVGFza3MgPT09IDAgJiZcbiAgICAhdGhpcy5wZW5kaW5nRGVjb2RpbmdDYWNoZVxuICApO1xufTtcblxuTW9kZWxMb2FkUmVzb3VyY2VzLnByb3RvdHlwZS5maW5pc2hlZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIChcbiAgICB0aGlzLmZpbmlzaGVkRGVjb2RpbmcoKSAmJlxuICAgIHRoaXMuZmluaXNoZWRUZXh0dXJlQ3JlYXRpb24oKSAmJlxuICAgIHRoaXMuZmluaXNoZWRFdmVyeXRoaW5nQnV0VGV4dHVyZUNyZWF0aW9uKClcbiAgKTtcbn07XG5leHBvcnQgZGVmYXVsdCBNb2RlbExvYWRSZXNvdXJjZXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///28770\n')}}]);