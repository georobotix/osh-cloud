"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[3827],{70419:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_CullingVolume_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(17711);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(82982);\n/* harmony import */ var _Core_getTimestamp_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59081);\n/* harmony import */ var _Core_Interval_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9058);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72248);\n/* harmony import */ var _Renderer_ClearCommand_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(39899);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_PassState_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(65121);\n/* harmony import */ var _Camera_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(70561);\n/* harmony import */ var _FrustumCommands_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(37577);\n/* harmony import */ var _GlobeDepth_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(55977);\n/* harmony import */ var _GlobeTranslucencyFramebuffer_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(55606);\n/* harmony import */ var _OIT_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(45216);\n/* harmony import */ var _PickDepthFramebuffer_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(37811);\n/* harmony import */ var _PickFramebuffer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(93704);\n/* harmony import */ var _SceneFramebuffer_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(65448);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(89917);\n/* harmony import */ var _ShadowMap_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(79162);\n/* harmony import */ var _TranslucentTileClassification_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(7853);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction CommandExtent() {\n  this.command = undefined;\n  this.near = undefined;\n  this.far = undefined;\n}\n\n/**\n * @private\n */\nfunction View(scene, camera, viewport) {\n  var context = scene.context;\n\n  var globeDepth;\n  if (context.depthTexture) {\n    globeDepth = new _GlobeDepth_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n  }\n\n  var oit;\n  if (scene._useOIT && context.depthTexture) {\n    oit = new _OIT_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z(context);\n  }\n\n  var passState = new _Renderer_PassState_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z(context);\n  passState.viewport = _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(viewport);\n\n  this.camera = camera;\n  this._cameraClone = _Camera_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(camera);\n  this._cameraStartFired = false;\n  this._cameraMovedTime = undefined;\n\n  this.viewport = viewport;\n  this.passState = passState;\n  this.pickFramebuffer = new _PickFramebuffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z(context);\n  this.pickDepthFramebuffer = new _PickDepthFramebuffer_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z();\n  this.sceneFramebuffer = new _SceneFramebuffer_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z();\n  this.globeDepth = globeDepth;\n  this.globeTranslucencyFramebuffer = new _GlobeTranslucencyFramebuffer_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\n  this.oit = oit;\n  this.translucentTileClassification = new _TranslucentTileClassification_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z(\n    context\n  );\n  this.pickDepths = [];\n  this.debugGlobeDepths = [];\n  this.frustumCommandsList = [];\n  this.debugFrustumStatistics = undefined;\n\n  // Array of all commands that get rendered into frustums along with their near / far values.\n  // Acts similar to a ManagedArray.\n  this._commandExtents = [];\n}\n\nvar scratchPosition0 = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchPosition1 = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nfunction maxComponent(a, b) {\n  var x = Math.max(Math.abs(a.x), Math.abs(b.x));\n  var y = Math.max(Math.abs(a.y), Math.abs(b.y));\n  var z = Math.max(Math.abs(a.z), Math.abs(b.z));\n  return Math.max(Math.max(x, y), z);\n}\n\nfunction cameraEqual(camera0, camera1, epsilon) {\n  var scalar =\n    1 / Math.max(1, maxComponent(camera0.position, camera1.position));\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(camera0.position, scalar, scratchPosition0);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(camera1.position, scalar, scratchPosition1);\n  return (\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(scratchPosition0, scratchPosition1, epsilon) &&\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(camera0.direction, camera1.direction, epsilon) &&\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(camera0.up, camera1.up, epsilon) &&\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(camera0.right, camera1.right, epsilon) &&\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(camera0.transform, camera1.transform, epsilon) &&\n    camera0.frustum.equalsEpsilon(camera1.frustum, epsilon)\n  );\n}\n\nView.prototype.checkForCameraUpdates = function (scene) {\n  var camera = this.camera;\n  var cameraClone = this._cameraClone;\n  if (!cameraEqual(camera, cameraClone, _Core_Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON15 */ .Z.EPSILON15)) {\n    if (!this._cameraStartFired) {\n      camera.moveStart.raiseEvent();\n      this._cameraStartFired = true;\n    }\n    this._cameraMovedTime = (0,_Core_getTimestamp_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)();\n    _Camera_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(camera, cameraClone);\n\n    return true;\n  }\n\n  if (\n    this._cameraStartFired &&\n    (0,_Core_getTimestamp_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)() - this._cameraMovedTime > scene.cameraEventWaitTime\n  ) {\n    camera.moveEnd.raiseEvent();\n    this._cameraStartFired = false;\n  }\n\n  return false;\n};\n\nfunction updateFrustums(view, scene, near, far) {\n  var frameState = scene.frameState;\n  var camera = frameState.camera;\n  var farToNearRatio = frameState.useLogDepth\n    ? scene.logarithmicDepthFarToNearRatio\n    : scene.farToNearRatio;\n  var is2D = scene.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].SCENE2D */ .Z.SCENE2D;\n  var nearToFarDistance2D = scene.nearToFarDistance2D;\n\n  // Extend the far plane slightly further to prevent geometry clipping against the far plane.\n  far *= 1.0 + _Core_Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON2 */ .Z.EPSILON2;\n\n  // The computed near plane must be between the user defined near and far planes.\n  // The computed far plane must between the user defined far and computed near.\n  // This will handle the case where the computed near plane is further than the user defined far plane.\n  near = Math.min(Math.max(near, camera.frustum.near), camera.frustum.far);\n  far = Math.max(Math.min(far, camera.frustum.far), near);\n\n  var numFrustums;\n  if (is2D) {\n    // The multifrustum for 2D is uniformly distributed. To avoid z-fighting in 2D,\n    // the camera is moved to just before the frustum and the frustum depth is scaled\n    // to be in [1.0, nearToFarDistance2D].\n    far = Math.min(far, camera.position.z + scene.nearToFarDistance2D);\n    near = Math.min(near, far);\n    numFrustums = Math.ceil(\n      Math.max(1.0, far - near) / scene.nearToFarDistance2D\n    );\n  } else {\n    // The multifrustum for 3D/CV is non-uniformly distributed.\n    numFrustums = Math.ceil(Math.log(far / near) / Math.log(farToNearRatio));\n  }\n\n  var frustumCommandsList = view.frustumCommandsList;\n  frustumCommandsList.length = numFrustums;\n  for (var m = 0; m < numFrustums; ++m) {\n    var curNear;\n    var curFar;\n\n    if (is2D) {\n      curNear = Math.min(\n        far - nearToFarDistance2D,\n        near + m * nearToFarDistance2D\n      );\n      curFar = Math.min(far, curNear + nearToFarDistance2D);\n    } else {\n      curNear = Math.max(near, Math.pow(farToNearRatio, m) * near);\n      curFar = Math.min(far, farToNearRatio * curNear);\n    }\n    var frustumCommands = frustumCommandsList[m];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(frustumCommands)) {\n      frustumCommands = frustumCommandsList[m] = new _FrustumCommands_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n        curNear,\n        curFar\n      );\n    } else {\n      frustumCommands.near = curNear;\n      frustumCommands.far = curFar;\n    }\n  }\n}\n\nfunction insertIntoBin(view, scene, command, commandNear, commandFar) {\n  if (scene.debugShowFrustums) {\n    command.debugOverlappingFrustums = 0;\n  }\n\n  var frustumCommandsList = view.frustumCommandsList;\n  var length = frustumCommandsList.length;\n\n  for (var i = 0; i < length; ++i) {\n    var frustumCommands = frustumCommandsList[i];\n    var curNear = frustumCommands.near;\n    var curFar = frustumCommands.far;\n\n    if (commandNear > curFar) {\n      continue;\n    }\n\n    if (commandFar < curNear) {\n      break;\n    }\n\n    var pass = command.pass;\n    var index = frustumCommands.indices[pass]++;\n    frustumCommands.commands[pass][index] = command;\n\n    if (scene.debugShowFrustums) {\n      command.debugOverlappingFrustums |= 1 << i;\n    }\n\n    if (command.executeInClosestFrustum) {\n      break;\n    }\n  }\n\n  if (scene.debugShowFrustums) {\n    var cf = view.debugFrustumStatistics.commandsInFrustums;\n    cf[command.debugOverlappingFrustums] = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(\n      cf[command.debugOverlappingFrustums]\n    )\n      ? cf[command.debugOverlappingFrustums] + 1\n      : 1;\n    ++view.debugFrustumStatistics.totalCommands;\n  }\n\n  scene.updateDerivedCommands(command);\n}\n\nvar scratchCullingVolume = new _Core_CullingVolume_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchNearFarInterval = new _Core_Interval_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nView.prototype.createPotentiallyVisibleSet = function (scene) {\n  var frameState = scene.frameState;\n  var camera = frameState.camera;\n  var direction = camera.directionWC;\n  var position = camera.positionWC;\n\n  var computeList = scene._computeCommandList;\n  var overlayList = scene._overlayCommandList;\n  var commandList = frameState.commandList;\n\n  if (scene.debugShowFrustums) {\n    this.debugFrustumStatistics = {\n      totalCommands: 0,\n      commandsInFrustums: {},\n    };\n  }\n\n  var frustumCommandsList = this.frustumCommandsList;\n  var numberOfFrustums = frustumCommandsList.length;\n  var numberOfPasses = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].NUMBER_OF_PASSES */ .Z.NUMBER_OF_PASSES;\n  for (var n = 0; n < numberOfFrustums; ++n) {\n    for (var p = 0; p < numberOfPasses; ++p) {\n      frustumCommandsList[n].indices[p] = 0;\n    }\n  }\n\n  computeList.length = 0;\n  overlayList.length = 0;\n\n  var commandExtents = this._commandExtents;\n  var commandExtentCapacity = commandExtents.length;\n  var commandExtentCount = 0;\n\n  var near = +Number.MAX_VALUE;\n  var far = -Number.MAX_VALUE;\n\n  var shadowsEnabled = frameState.shadowState.shadowsEnabled;\n  var shadowNear = +Number.MAX_VALUE;\n  var shadowFar = -Number.MAX_VALUE;\n  var shadowClosestObjectSize = Number.MAX_VALUE;\n\n  var occluder =\n    frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].SCENE3D */ .Z.SCENE3D ? frameState.occluder : undefined;\n  var cullingVolume = frameState.cullingVolume;\n\n  // get user culling volume minus the far plane.\n  var planes = scratchCullingVolume.planes;\n  for (var k = 0; k < 5; ++k) {\n    planes[k] = cullingVolume.planes[k];\n  }\n  cullingVolume = scratchCullingVolume;\n\n  var length = commandList.length;\n  for (var i = 0; i < length; ++i) {\n    var command = commandList[i];\n    var pass = command.pass;\n\n    if (pass === _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].COMPUTE */ .Z.COMPUTE) {\n      computeList.push(command);\n    } else if (pass === _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].OVERLAY */ .Z.OVERLAY) {\n      overlayList.push(command);\n    } else {\n      var commandNear;\n      var commandFar;\n\n      var boundingVolume = command.boundingVolume;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(boundingVolume)) {\n        if (!scene.isVisible(command, cullingVolume, occluder)) {\n          continue;\n        }\n\n        var nearFarInterval = boundingVolume.computePlaneDistances(\n          position,\n          direction,\n          scratchNearFarInterval\n        );\n        commandNear = nearFarInterval.start;\n        commandFar = nearFarInterval.stop;\n        near = Math.min(near, commandNear);\n        far = Math.max(far, commandFar);\n\n        // Compute a tight near and far plane for commands that receive shadows. This helps compute\n        // good splits for cascaded shadow maps. Ignore commands that exceed the maximum distance.\n        // When moving the camera low LOD globe tiles begin to load, whose bounding volumes\n        // throw off the near/far fitting for the shadow map. Only update for globe tiles that the\n        // camera isn\'t inside.\n        if (\n          shadowsEnabled &&\n          command.receiveShadows &&\n          commandNear < _ShadowMap_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].MAXIMUM_DISTANCE */ .Z.MAXIMUM_DISTANCE &&\n          !(pass === _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].GLOBE */ .Z.GLOBE && commandNear < -100.0 && commandFar > 100.0)\n        ) {\n          // Get the smallest bounding volume the camera is near. This is used to place more shadow detail near the object.\n          var size = commandFar - commandNear;\n          if (pass !== _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].GLOBE */ .Z.GLOBE && commandNear < 100.0) {\n            shadowClosestObjectSize = Math.min(shadowClosestObjectSize, size);\n          }\n          shadowNear = Math.min(shadowNear, commandNear);\n          shadowFar = Math.max(shadowFar, commandFar);\n        }\n      } else if (command instanceof _Renderer_ClearCommand_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z) {\n        // Clear commands don\'t need a bounding volume - just add the clear to all frustums.\n        commandNear = camera.frustum.near;\n        commandFar = camera.frustum.far;\n      } else {\n        // If command has no bounding volume we need to use the camera\'s\n        // worst-case near and far planes to avoid clipping something important.\n        commandNear = camera.frustum.near;\n        commandFar = camera.frustum.far;\n        near = Math.min(near, commandNear);\n        far = Math.max(far, commandFar);\n      }\n\n      var extent = commandExtents[commandExtentCount];\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(extent)) {\n        extent = commandExtents[commandExtentCount] = new CommandExtent();\n      }\n      extent.command = command;\n      extent.near = commandNear;\n      extent.far = commandFar;\n      commandExtentCount++;\n    }\n  }\n\n  if (shadowsEnabled) {\n    shadowNear = Math.min(\n      Math.max(shadowNear, camera.frustum.near),\n      camera.frustum.far\n    );\n    shadowFar = Math.max(Math.min(shadowFar, camera.frustum.far), shadowNear);\n  }\n\n  // Use the computed near and far for shadows\n  if (shadowsEnabled) {\n    frameState.shadowState.nearPlane = shadowNear;\n    frameState.shadowState.farPlane = shadowFar;\n    frameState.shadowState.closestObjectSize = shadowClosestObjectSize;\n  }\n\n  updateFrustums(this, scene, near, far);\n\n  var c;\n  var ce;\n\n  for (c = 0; c < commandExtentCount; c++) {\n    ce = commandExtents[c];\n    insertIntoBin(this, scene, ce.command, ce.near, ce.far);\n  }\n\n  // Dereference old commands\n  if (commandExtentCount < commandExtentCapacity) {\n    for (c = commandExtentCount; c < commandExtentCapacity; c++) {\n      ce = commandExtents[c];\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(ce.command)) {\n        // If the command is undefined, it\'s assumed that all\n        // subsequent commmands were set to undefined as well,\n        // so no need to loop over them all\n        break;\n      }\n      ce.command = undefined;\n    }\n  }\n\n  var numFrustums = frustumCommandsList.length;\n  var frustumSplits = frameState.frustumSplits;\n  frustumSplits.length = numFrustums + 1;\n  for (var j = 0; j < numFrustums; ++j) {\n    frustumSplits[j] = frustumCommandsList[j].near;\n    if (j === numFrustums - 1) {\n      frustumSplits[j + 1] = frustumCommandsList[j].far;\n    }\n  }\n};\n\nView.prototype.destroy = function () {\n  this.pickFramebuffer = this.pickFramebuffer && this.pickFramebuffer.destroy();\n  this.pickDepthFramebuffer =\n    this.pickDepthFramebuffer && this.pickDepthFramebuffer.destroy();\n  this.sceneFramebuffer =\n    this.sceneFramebuffer && this.sceneFramebuffer.destroy();\n  this.globeDepth = this.globeDepth && this.globeDepth.destroy();\n  this.oit = this.oit && this.oit.destroy();\n  this.translucentTileClassification =\n    this.translucentTileClassification &&\n    this.translucentTileClassification.destroy();\n  this.globeTranslucencyFramebuffer =\n    this.globeTranslucencyFramebuffer &&\n    this.globeTranslucencyFramebuffer.destroy();\n\n  var i;\n  var length;\n\n  var pickDepths = this.pickDepths;\n  var debugGlobeDepths = this.debugGlobeDepths;\n\n  length = pickDepths.length;\n  for (i = 0; i < length; ++i) {\n    pickDepths[i].destroy();\n  }\n\n  length = debugGlobeDepths.length;\n  for (i = 0; i < length; ++i) {\n    debugGlobeDepths[i].destroy();\n  }\n};\n/* harmony default export */ __webpack_exports__["Z"] = (View);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///70419\n')},20160:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(53642);\n/* harmony import */ var _Shaders_ViewportQuadFS_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(5821);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(13633);\n/* harmony import */ var _Material_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(69592);\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A viewport aligned quad.\n *\n * @alias ViewportQuad\n * @constructor\n *\n * @param {BoundingRectangle} [rectangle] The {@link BoundingRectangle} defining the quad\'s position within the viewport.\n * @param {Material} [material] The {@link Material} defining the surface appearance of the viewport quad.\n *\n * @example\n * var viewportQuad = new Cesium.ViewportQuad(new Cesium.BoundingRectangle(0, 0, 80, 40));\n * viewportQuad.material.uniforms.color = new Cesium.Color(1.0, 0.0, 0.0, 1.0);\n */\nfunction ViewportQuad(rectangle, material) {\n  /**\n   * Determines if the viewport quad primitive will be shown.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.show = true;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(rectangle)) {\n    rectangle = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  /**\n   * The BoundingRectangle defining the quad\'s position within the viewport.\n   *\n   * @type {BoundingRectangle}\n   *\n   * @example\n   * viewportQuad.rectangle = new Cesium.BoundingRectangle(0, 0, 80, 40);\n   */\n  this.rectangle = _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(rectangle);\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(material)) {\n    material = _Material_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].fromType */ .Z.fromType(_Material_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].ColorType */ .Z.ColorType, {\n      color: new _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(1.0, 1.0, 1.0, 1.0),\n    });\n  }\n\n  /**\n   * The surface appearance of the viewport quad.  This can be one of several built-in {@link Material} objects or a custom material, scripted with\n   * {@link https://github.com/CesiumGS/cesium/wiki/Fabric|Fabric}.\n   * <p>\n   * The default material is <code>Material.ColorType</code>.\n   * </p>\n   *\n   * @type Material\n   *\n   * @example\n   * // 1. Change the color of the default material to yellow\n   * viewportQuad.material.uniforms.color = new Cesium.Color(1.0, 1.0, 0.0, 1.0);\n   *\n   * // 2. Change material to horizontal stripes\n   * viewportQuad.material = Cesium.Material.fromType(Cesium.Material.StripeType);\n   *\n   * @see {@link https://github.com/CesiumGS/cesium/wiki/Fabric|Fabric}\n   */\n  this.material = material;\n  this._material = undefined;\n\n  this._overlayCommand = undefined;\n  this._rs = undefined;\n}\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {DeveloperError} this.material must be defined.\n * @exception {DeveloperError} this.rectangle must be defined.\n */\nViewportQuad.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this.material)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("this.material must be defined.");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this.rectangle)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("this.rectangle must be defined.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var rs = this._rs;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(rs) || !_Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(rs.viewport, this.rectangle)) {\n    this._rs = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromCache */ .Z.fromCache({\n      blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND,\n      viewport: this.rectangle,\n    });\n  }\n\n  var pass = frameState.passes;\n  if (pass.render) {\n    var context = frameState.context;\n\n    if (this._material !== this.material || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._overlayCommand)) {\n      // Recompile shader when material changes\n      this._material = this.material;\n\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._overlayCommand)) {\n        this._overlayCommand.shaderProgram.destroy();\n      }\n\n      var fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n        sources: [this._material.shaderSource, _Shaders_ViewportQuadFS_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z],\n      });\n      this._overlayCommand = context.createViewportQuadCommand(fs, {\n        renderState: this._rs,\n        uniformMap: this._material._uniforms,\n        owner: this,\n      });\n      this._overlayCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].OVERLAY */ .Z.OVERLAY;\n    }\n\n    this._material.update(context);\n\n    this._overlayCommand.renderState = this._rs;\n    this._overlayCommand.uniformMap = this._material._uniforms;\n    frameState.commandList.push(this._overlayCommand);\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n *\n * @see ViewportQuad#destroy\n */\nViewportQuad.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * quad = quad && quad.destroy();\n *\n * @see ViewportQuad#isDestroyed\n */\nViewportQuad.prototype.destroy = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._overlayCommand)) {\n    this._overlayCommand.shaderProgram =\n      this._overlayCommand.shaderProgram &&\n      this._overlayCommand.shaderProgram.destroy();\n  }\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this);\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ViewportQuad)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAxNjAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBNkQ7QUFDeEI7QUFDSTtBQUNZO0FBQ0U7QUFDaEI7QUFDYztBQUNFO0FBQ0c7QUFDWDtBQUNWOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQixpQkFBaUIseUJBQXlCO0FBQ3hFLFdBQVcsVUFBVSxnQkFBZ0IsZ0JBQWdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUEsT0FBTyxxRUFBTztBQUNkLG9CQUFvQiwyRUFBaUI7QUFDckM7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVGQUF1Qjs7QUFFMUMsT0FBTyxxRUFBTztBQUNkLGVBQWUsK0VBQWlCLENBQUMsaUZBQWtCO0FBQ25ELGlCQUFpQiwrREFBSztBQUN0QixLQUFLO0FBQ0w7O0FBRUE7QUFDQSx3RkFBd0YsZ0JBQWdCO0FBQ3hHLE1BQU0sNERBQTREO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsY0FBYyxJQUFJLG9CQUFvQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQixlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyxxRUFBTztBQUNkLGNBQWMsd0VBQWM7QUFDNUI7QUFDQSxPQUFPLHFFQUFPO0FBQ2QsY0FBYyx3RUFBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0EsT0FBTyxxRUFBTyxTQUFTLHlGQUF3QjtBQUMvQyxlQUFlLDZGQUFxQjtBQUNwQyxnQkFBZ0IsMEZBQXlCO0FBQ3pDO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSw2Q0FBNkMscUVBQU87QUFDcEQ7QUFDQTs7QUFFQSxVQUFVLHFFQUFPO0FBQ2pCO0FBQ0E7O0FBRUEsbUJBQW1CLDBFQUFZO0FBQy9CLCtDQUErQyw0RUFBYztBQUM3RCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1Asa0NBQWtDLGtGQUFZO0FBQzlDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQSx3REFBd0Q7QUFDeEQsOENBQThDLHNCQUFzQjtBQUNwRTtBQUNBLGFBQWEsU0FBUyxtQ0FBbUM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELDhDQUE4QyxzQkFBc0I7QUFDcEU7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFFQUFPO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDJFQUFhO0FBQ3RCO0FBQ0Esc0VBQWUsNERBQVksSUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9WaWV3cG9ydFF1YWQuanM/YzU3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQm91bmRpbmdSZWN0YW5nbGUgZnJvbSBcIi4uL0NvcmUvQm91bmRpbmdSZWN0YW5nbGUuanNcIjtcbmltcG9ydCBDb2xvciBmcm9tIFwiLi4vQ29yZS9Db2xvci5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuaW1wb3J0IGRlc3Ryb3lPYmplY3QgZnJvbSBcIi4uL0NvcmUvZGVzdHJveU9iamVjdC5qc1wiO1xuaW1wb3J0IERldmVsb3BlckVycm9yIGZyb20gXCIuLi9Db3JlL0RldmVsb3BlckVycm9yLmpzXCI7XG5pbXBvcnQgUGFzcyBmcm9tIFwiLi4vUmVuZGVyZXIvUGFzcy5qc1wiO1xuaW1wb3J0IFJlbmRlclN0YXRlIGZyb20gXCIuLi9SZW5kZXJlci9SZW5kZXJTdGF0ZS5qc1wiO1xuaW1wb3J0IFNoYWRlclNvdXJjZSBmcm9tIFwiLi4vUmVuZGVyZXIvU2hhZGVyU291cmNlLmpzXCI7XG5pbXBvcnQgVmlld3BvcnRRdWFkRlMgZnJvbSBcIi4uL1NoYWRlcnMvVmlld3BvcnRRdWFkRlMuanNcIjtcbmltcG9ydCBCbGVuZGluZ1N0YXRlIGZyb20gXCIuL0JsZW5kaW5nU3RhdGUuanNcIjtcbmltcG9ydCBNYXRlcmlhbCBmcm9tIFwiLi9NYXRlcmlhbC5qc1wiO1xuXG4vKipcbiAqIEEgdmlld3BvcnQgYWxpZ25lZCBxdWFkLlxuICpcbiAqIEBhbGlhcyBWaWV3cG9ydFF1YWRcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwYXJhbSB7Qm91bmRpbmdSZWN0YW5nbGV9IFtyZWN0YW5nbGVdIFRoZSB7QGxpbmsgQm91bmRpbmdSZWN0YW5nbGV9IGRlZmluaW5nIHRoZSBxdWFkJ3MgcG9zaXRpb24gd2l0aGluIHRoZSB2aWV3cG9ydC5cbiAqIEBwYXJhbSB7TWF0ZXJpYWx9IFttYXRlcmlhbF0gVGhlIHtAbGluayBNYXRlcmlhbH0gZGVmaW5pbmcgdGhlIHN1cmZhY2UgYXBwZWFyYW5jZSBvZiB0aGUgdmlld3BvcnQgcXVhZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogdmFyIHZpZXdwb3J0UXVhZCA9IG5ldyBDZXNpdW0uVmlld3BvcnRRdWFkKG5ldyBDZXNpdW0uQm91bmRpbmdSZWN0YW5nbGUoMCwgMCwgODAsIDQwKSk7XG4gKiB2aWV3cG9ydFF1YWQubWF0ZXJpYWwudW5pZm9ybXMuY29sb3IgPSBuZXcgQ2VzaXVtLkNvbG9yKDEuMCwgMC4wLCAwLjAsIDEuMCk7XG4gKi9cbmZ1bmN0aW9uIFZpZXdwb3J0UXVhZChyZWN0YW5nbGUsIG1hdGVyaWFsKSB7XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIGlmIHRoZSB2aWV3cG9ydCBxdWFkIHByaW1pdGl2ZSB3aWxsIGJlIHNob3duLlxuICAgKlxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlZmF1bHQgdHJ1ZVxuICAgKi9cbiAgdGhpcy5zaG93ID0gdHJ1ZTtcblxuICBpZiAoIWRlZmluZWQocmVjdGFuZ2xlKSkge1xuICAgIHJlY3RhbmdsZSA9IG5ldyBCb3VuZGluZ1JlY3RhbmdsZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBCb3VuZGluZ1JlY3RhbmdsZSBkZWZpbmluZyB0aGUgcXVhZCdzIHBvc2l0aW9uIHdpdGhpbiB0aGUgdmlld3BvcnQuXG4gICAqXG4gICAqIEB0eXBlIHtCb3VuZGluZ1JlY3RhbmdsZX1cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogdmlld3BvcnRRdWFkLnJlY3RhbmdsZSA9IG5ldyBDZXNpdW0uQm91bmRpbmdSZWN0YW5nbGUoMCwgMCwgODAsIDQwKTtcbiAgICovXG4gIHRoaXMucmVjdGFuZ2xlID0gQm91bmRpbmdSZWN0YW5nbGUuY2xvbmUocmVjdGFuZ2xlKTtcblxuICBpZiAoIWRlZmluZWQobWF0ZXJpYWwpKSB7XG4gICAgbWF0ZXJpYWwgPSBNYXRlcmlhbC5mcm9tVHlwZShNYXRlcmlhbC5Db2xvclR5cGUsIHtcbiAgICAgIGNvbG9yOiBuZXcgQ29sb3IoMS4wLCAxLjAsIDEuMCwgMS4wKSxcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgc3VyZmFjZSBhcHBlYXJhbmNlIG9mIHRoZSB2aWV3cG9ydCBxdWFkLiAgVGhpcyBjYW4gYmUgb25lIG9mIHNldmVyYWwgYnVpbHQtaW4ge0BsaW5rIE1hdGVyaWFsfSBvYmplY3RzIG9yIGEgY3VzdG9tIG1hdGVyaWFsLCBzY3JpcHRlZCB3aXRoXG4gICAqIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vQ2VzaXVtR1MvY2VzaXVtL3dpa2kvRmFicmljfEZhYnJpY30uXG4gICAqIDxwPlxuICAgKiBUaGUgZGVmYXVsdCBtYXRlcmlhbCBpcyA8Y29kZT5NYXRlcmlhbC5Db2xvclR5cGU8L2NvZGU+LlxuICAgKiA8L3A+XG4gICAqXG4gICAqIEB0eXBlIE1hdGVyaWFsXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIC8vIDEuIENoYW5nZSB0aGUgY29sb3Igb2YgdGhlIGRlZmF1bHQgbWF0ZXJpYWwgdG8geWVsbG93XG4gICAqIHZpZXdwb3J0UXVhZC5tYXRlcmlhbC51bmlmb3Jtcy5jb2xvciA9IG5ldyBDZXNpdW0uQ29sb3IoMS4wLCAxLjAsIDAuMCwgMS4wKTtcbiAgICpcbiAgICogLy8gMi4gQ2hhbmdlIG1hdGVyaWFsIHRvIGhvcml6b250YWwgc3RyaXBlc1xuICAgKiB2aWV3cG9ydFF1YWQubWF0ZXJpYWwgPSBDZXNpdW0uTWF0ZXJpYWwuZnJvbVR5cGUoQ2VzaXVtLk1hdGVyaWFsLlN0cmlwZVR5cGUpO1xuICAgKlxuICAgKiBAc2VlIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vQ2VzaXVtR1MvY2VzaXVtL3dpa2kvRmFicmljfEZhYnJpY31cbiAgICovXG4gIHRoaXMubWF0ZXJpYWwgPSBtYXRlcmlhbDtcbiAgdGhpcy5fbWF0ZXJpYWwgPSB1bmRlZmluZWQ7XG5cbiAgdGhpcy5fb3ZlcmxheUNvbW1hbmQgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX3JzID0gdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIENhbGxlZCB3aGVuIHtAbGluayBWaWV3ZXJ9IG9yIHtAbGluayBDZXNpdW1XaWRnZXR9IHJlbmRlciB0aGUgc2NlbmUgdG9cbiAqIGdldCB0aGUgZHJhdyBjb21tYW5kcyBuZWVkZWQgdG8gcmVuZGVyIHRoaXMgcHJpbWl0aXZlLlxuICogPHA+XG4gKiBEbyBub3QgY2FsbCB0aGlzIGZ1bmN0aW9uIGRpcmVjdGx5LiAgVGhpcyBpcyBkb2N1bWVudGVkIGp1c3QgdG9cbiAqIGxpc3QgdGhlIGV4Y2VwdGlvbnMgdGhhdCBtYXkgYmUgcHJvcGFnYXRlZCB3aGVuIHRoZSBzY2VuZSBpcyByZW5kZXJlZDpcbiAqIDwvcD5cbiAqXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gdGhpcy5tYXRlcmlhbCBtdXN0IGJlIGRlZmluZWQuXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gdGhpcy5yZWN0YW5nbGUgbXVzdCBiZSBkZWZpbmVkLlxuICovXG5WaWV3cG9ydFF1YWQucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChmcmFtZVN0YXRlKSB7XG4gIGlmICghdGhpcy5zaG93KSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKHRoaXMubWF0ZXJpYWwpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwidGhpcy5tYXRlcmlhbCBtdXN0IGJlIGRlZmluZWQuXCIpO1xuICB9XG4gIGlmICghZGVmaW5lZCh0aGlzLnJlY3RhbmdsZSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJ0aGlzLnJlY3RhbmdsZSBtdXN0IGJlIGRlZmluZWQuXCIpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBycyA9IHRoaXMuX3JzO1xuICBpZiAoIWRlZmluZWQocnMpIHx8ICFCb3VuZGluZ1JlY3RhbmdsZS5lcXVhbHMocnMudmlld3BvcnQsIHRoaXMucmVjdGFuZ2xlKSkge1xuICAgIHRoaXMuX3JzID0gUmVuZGVyU3RhdGUuZnJvbUNhY2hlKHtcbiAgICAgIGJsZW5kaW5nOiBCbGVuZGluZ1N0YXRlLkFMUEhBX0JMRU5ELFxuICAgICAgdmlld3BvcnQ6IHRoaXMucmVjdGFuZ2xlLFxuICAgIH0pO1xuICB9XG5cbiAgdmFyIHBhc3MgPSBmcmFtZVN0YXRlLnBhc3NlcztcbiAgaWYgKHBhc3MucmVuZGVyKSB7XG4gICAgdmFyIGNvbnRleHQgPSBmcmFtZVN0YXRlLmNvbnRleHQ7XG5cbiAgICBpZiAodGhpcy5fbWF0ZXJpYWwgIT09IHRoaXMubWF0ZXJpYWwgfHwgIWRlZmluZWQodGhpcy5fb3ZlcmxheUNvbW1hbmQpKSB7XG4gICAgICAvLyBSZWNvbXBpbGUgc2hhZGVyIHdoZW4gbWF0ZXJpYWwgY2hhbmdlc1xuICAgICAgdGhpcy5fbWF0ZXJpYWwgPSB0aGlzLm1hdGVyaWFsO1xuXG4gICAgICBpZiAoZGVmaW5lZCh0aGlzLl9vdmVybGF5Q29tbWFuZCkpIHtcbiAgICAgICAgdGhpcy5fb3ZlcmxheUNvbW1hbmQuc2hhZGVyUHJvZ3JhbS5kZXN0cm95KCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBmcyA9IG5ldyBTaGFkZXJTb3VyY2Uoe1xuICAgICAgICBzb3VyY2VzOiBbdGhpcy5fbWF0ZXJpYWwuc2hhZGVyU291cmNlLCBWaWV3cG9ydFF1YWRGU10sXG4gICAgICB9KTtcbiAgICAgIHRoaXMuX292ZXJsYXlDb21tYW5kID0gY29udGV4dC5jcmVhdGVWaWV3cG9ydFF1YWRDb21tYW5kKGZzLCB7XG4gICAgICAgIHJlbmRlclN0YXRlOiB0aGlzLl9ycyxcbiAgICAgICAgdW5pZm9ybU1hcDogdGhpcy5fbWF0ZXJpYWwuX3VuaWZvcm1zLFxuICAgICAgICBvd25lcjogdGhpcyxcbiAgICAgIH0pO1xuICAgICAgdGhpcy5fb3ZlcmxheUNvbW1hbmQucGFzcyA9IFBhc3MuT1ZFUkxBWTtcbiAgICB9XG5cbiAgICB0aGlzLl9tYXRlcmlhbC51cGRhdGUoY29udGV4dCk7XG5cbiAgICB0aGlzLl9vdmVybGF5Q29tbWFuZC5yZW5kZXJTdGF0ZSA9IHRoaXMuX3JzO1xuICAgIHRoaXMuX292ZXJsYXlDb21tYW5kLnVuaWZvcm1NYXAgPSB0aGlzLl9tYXRlcmlhbC5fdW5pZm9ybXM7XG4gICAgZnJhbWVTdGF0ZS5jb21tYW5kTGlzdC5wdXNoKHRoaXMuX292ZXJsYXlDb21tYW5kKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZDsgb3RoZXJ3aXNlLCBmYWxzZS5cbiAqIDxiciAvPjxiciAvPlxuICogSWYgdGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZCwgaXQgc2hvdWxkIG5vdCBiZSB1c2VkOyBjYWxsaW5nIGFueSBmdW5jdGlvbiBvdGhlciB0aGFuXG4gKiA8Y29kZT5pc0Rlc3Ryb3llZDwvY29kZT4gd2lsbCByZXN1bHQgaW4gYSB7QGxpbmsgRGV2ZWxvcGVyRXJyb3J9IGV4Y2VwdGlvbi5cbiAqXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZiB0aGlzIG9iamVjdCB3YXMgZGVzdHJveWVkOyBvdGhlcndpc2UsIGZhbHNlLlxuICpcbiAqIEBzZWUgVmlld3BvcnRRdWFkI2Rlc3Ryb3lcbiAqL1xuVmlld3BvcnRRdWFkLnByb3RvdHlwZS5pc0Rlc3Ryb3llZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuLyoqXG4gKiBEZXN0cm95cyB0aGUgV2ViR0wgcmVzb3VyY2VzIGhlbGQgYnkgdGhpcyBvYmplY3QuICBEZXN0cm95aW5nIGFuIG9iamVjdCBhbGxvd3MgZm9yIGRldGVybWluaXN0aWNcbiAqIHJlbGVhc2Ugb2YgV2ViR0wgcmVzb3VyY2VzLCBpbnN0ZWFkIG9mIHJlbHlpbmcgb24gdGhlIGdhcmJhZ2UgY29sbGVjdG9yIHRvIGRlc3Ryb3kgdGhpcyBvYmplY3QuXG4gKiA8YnIgLz48YnIgLz5cbiAqIE9uY2UgYW4gb2JqZWN0IGlzIGRlc3Ryb3llZCwgaXQgc2hvdWxkIG5vdCBiZSB1c2VkOyBjYWxsaW5nIGFueSBmdW5jdGlvbiBvdGhlciB0aGFuXG4gKiA8Y29kZT5pc0Rlc3Ryb3llZDwvY29kZT4gd2lsbCByZXN1bHQgaW4gYSB7QGxpbmsgRGV2ZWxvcGVyRXJyb3J9IGV4Y2VwdGlvbi4gIFRoZXJlZm9yZSxcbiAqIGFzc2lnbiB0aGUgcmV0dXJuIHZhbHVlICg8Y29kZT51bmRlZmluZWQ8L2NvZGU+KSB0byB0aGUgb2JqZWN0IGFzIGRvbmUgaW4gdGhlIGV4YW1wbGUuXG4gKlxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IFRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQsIGkuZS4sIGRlc3Ryb3koKSB3YXMgY2FsbGVkLlxuICpcbiAqXG4gKiBAZXhhbXBsZVxuICogcXVhZCA9IHF1YWQgJiYgcXVhZC5kZXN0cm95KCk7XG4gKlxuICogQHNlZSBWaWV3cG9ydFF1YWQjaXNEZXN0cm95ZWRcbiAqL1xuVmlld3BvcnRRdWFkLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICBpZiAoZGVmaW5lZCh0aGlzLl9vdmVybGF5Q29tbWFuZCkpIHtcbiAgICB0aGlzLl9vdmVybGF5Q29tbWFuZC5zaGFkZXJQcm9ncmFtID1cbiAgICAgIHRoaXMuX292ZXJsYXlDb21tYW5kLnNoYWRlclByb2dyYW0gJiZcbiAgICAgIHRoaXMuX292ZXJsYXlDb21tYW5kLnNoYWRlclByb2dyYW0uZGVzdHJveSgpO1xuICB9XG4gIHJldHVybiBkZXN0cm95T2JqZWN0KHRoaXMpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFZpZXdwb3J0UXVhZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20160\n')},85200:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _Core_GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71351);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(68985);\n/* harmony import */ var _Core_WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79962);\n/* harmony import */ var _GetFeatureInfoFormat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(46867);\n/* harmony import */ var _TimeDynamicImagery_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(90299);\n/* harmony import */ var _UrlTemplateImageryProvider_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(24855);\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {Object} WebMapServiceImageryProvider.ConstructorOptions\n *\n * Initialization options for the WebMapServiceImageryProvider constructor\n *\n * @property {Resource|String} url The URL of the WMS service. The URL supports the same keywords as the {@link UrlTemplateImageryProvider}.\n * @property {String} layers The layers to include, separated by commas.\n * @property {Object} [parameters=WebMapServiceImageryProvider.DefaultParameters] Additional parameters to pass to the WMS server in the GetMap URL.\n * @property {Object} [getFeatureInfoParameters=WebMapServiceImageryProvider.GetFeatureInfoDefaultParameters] Additional parameters to pass to the WMS server in the GetFeatureInfo URL.\n * @property {Boolean} [enablePickFeatures=true] If true, {@link WebMapServiceImageryProvider#pickFeatures} will invoke\n *        the GetFeatureInfo operation on the WMS server and return the features included in the response.  If false,\n *        {@link WebMapServiceImageryProvider#pickFeatures} will immediately return undefined (indicating no pickable features)\n *        without communicating with the server.  Set this property to false if you know your WMS server does not support\n *        GetFeatureInfo or if you don\'t want this provider\'s features to be pickable. Note that this can be dynamically\n *        overridden by modifying the WebMapServiceImageryProvider#enablePickFeatures property.\n * @property {GetFeatureInfoFormat[]} [getFeatureInfoFormats=WebMapServiceImageryProvider.DefaultGetFeatureInfoFormats] The formats\n *        in which to try WMS GetFeatureInfo requests.\n * @property {Rectangle} [rectangle=Rectangle.MAX_VALUE] The rectangle of the layer.\n * @property {TilingScheme} [tilingScheme=new GeographicTilingScheme()] The tiling scheme to use to divide the world into tiles.\n * @property {Ellipsoid} [ellipsoid] The ellipsoid.  If the tilingScheme is specified,\n *        this parameter is ignored and the tiling scheme\'s ellipsoid is used instead. If neither\n *        parameter is specified, the WGS84 ellipsoid is used.\n * @property {Number} [tileWidth=256] The width of each tile in pixels.\n * @property {Number} [tileHeight=256] The height of each tile in pixels.\n * @property {Number} [minimumLevel=0] The minimum level-of-detail supported by the imagery provider.  Take care when\n *        specifying this that the number of tiles at the minimum level is small, such as four or less.  A larger number is\n *        likely to result in rendering problems.\n * @property {Number} [maximumLevel] The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n *        If not specified, there is no limit.\n * @property {String} [crs] CRS specification, for use with WMS specification >= 1.3.0.\n * @property {String} [srs] SRS specification, for use with WMS specification 1.1.0 or 1.1.1\n * @property {Credit|String} [credit] A credit for the data source, which is displayed on the canvas.\n * @property {String|String[]} [subdomains=\'abc\'] The subdomains to use for the <code>{s}</code> placeholder in the URL template.\n *                          If this parameter is a single string, each character in the string is a subdomain.  If it is\n *                          an array, each element in the array is a subdomain.\n * @property {Clock} [clock] A Clock instance that is used when determining the value for the time dimension. Required when `times` is specified.\n * @property {TimeIntervalCollection} [times] TimeIntervalCollection with its data property being an object containing time dynamic dimension and their values.\n */\n\n/**\n * Provides tiled imagery hosted by a Web Map Service (WMS) server.\n *\n * @alias WebMapServiceImageryProvider\n * @constructor\n *\n * @param {WebMapServiceImageryProvider.ConstructorOptions} options Object describing initialization options\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see OpenStreetMapImageryProvider\n * @see SingleTileImageryProvider\n * @see TileMapServiceImageryProvider\n * @see WebMapTileServiceImageryProvider\n * @see UrlTemplateImageryProvider\n *\n * @see {@link http://resources.esri.com/help/9.3/arcgisserver/apis/rest/|ArcGIS Server REST API}\n * @see {@link http://www.w3.org/TR/cors/|Cross-Origin Resource Sharing}\n *\n * @example\n * var provider = new Cesium.WebMapServiceImageryProvider({\n *     url : \'https://sampleserver1.arcgisonline.com/ArcGIS/services/Specialty/ESRI_StatesCitiesRivers_USA/MapServer/WMSServer\',\n *     layers : \'0\',\n *     proxy: new Cesium.DefaultProxy(\'/proxy/\')\n * });\n *\n * viewer.imageryLayers.addImageryProvider(provider);\n */\nfunction WebMapServiceImageryProvider(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.url)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("options.url is required.");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.layers)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("options.layers is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.times) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.clock)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "options.times was specified, so options.clock is required."\n    );\n  }\n\n  /**\n   * The default alpha blending value of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the night side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultNightAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the day side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultDayAlpha = undefined;\n\n  /**\n   * The default brightness of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0\n   * makes the imagery darker while greater than 1.0 makes it brighter.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultBrightness = undefined;\n\n  /**\n   * The default contrast of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0 reduces\n   * the contrast while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultContrast = undefined;\n\n  /**\n   * The default hue of this provider in radians. 0.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultHue = undefined;\n\n  /**\n   * The default saturation of this provider. 1.0 uses the unmodified imagery color. Less than 1.0 reduces the\n   * saturation while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultSaturation = undefined;\n\n  /**\n   * The default gamma correction to apply to this provider.  1.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultGamma = undefined;\n\n  /**\n   * The default texture minification filter to apply to this provider.\n   *\n   * @type {TextureMinificationFilter}\n   * @default undefined\n   */\n  this.defaultMinificationFilter = undefined;\n\n  /**\n   * The default texture magnification filter to apply to this provider.\n   *\n   * @type {TextureMagnificationFilter}\n   * @default undefined\n   */\n  this.defaultMagnificationFilter = undefined;\n\n  var resource = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].createIfNeeded */ .Z.createIfNeeded(options.url);\n\n  var pickFeatureResource = resource.clone();\n\n  resource.setQueryParameters(\n    WebMapServiceImageryProvider.DefaultParameters,\n    true\n  );\n  pickFeatureResource.setQueryParameters(\n    WebMapServiceImageryProvider.GetFeatureInfoDefaultParameters,\n    true\n  );\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.parameters)) {\n    resource.setQueryParameters(objectToLowercase(options.parameters));\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.getFeatureInfoParameters)) {\n    pickFeatureResource.setQueryParameters(\n      objectToLowercase(options.getFeatureInfoParameters)\n    );\n  }\n\n  var that = this;\n  this._reload = undefined;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.times)) {\n    this._timeDynamicImagery = new _TimeDynamicImagery_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n      clock: options.clock,\n      times: options.times,\n      requestImageFunction: function (x, y, level, request, interval) {\n        return requestImage(that, x, y, level, request, interval);\n      },\n      reloadFunction: function () {\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(that._reload)) {\n          that._reload();\n        }\n      },\n    });\n  }\n\n  var parameters = {};\n  parameters.layers = options.layers;\n  parameters.bbox =\n    "{westProjected},{southProjected},{eastProjected},{northProjected}";\n  parameters.width = "{width}";\n  parameters.height = "{height}";\n\n  // Use SRS or CRS based on the WMS version.\n  if (parseFloat(resource.queryParameters.version) >= 1.3) {\n    // Use CRS with 1.3.0 and going forward.\n    // For GeographicTilingScheme, use CRS:84 vice EPSG:4326 to specify lon, lat (x, y) ordering for\n    // bbox requests.\n    parameters.crs = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n      options.crs,\n      options.tilingScheme &&\n        options.tilingScheme.projection instanceof _Core_WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z\n        ? "EPSG:3857"\n        : "CRS:84"\n    );\n  } else {\n    // SRS for WMS 1.1.0 or 1.1.1.\n    parameters.srs = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n      options.srs,\n      options.tilingScheme &&\n        options.tilingScheme.projection instanceof _Core_WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z\n        ? "EPSG:3857"\n        : "EPSG:4326"\n    );\n  }\n\n  resource.setQueryParameters(parameters, true);\n  pickFeatureResource.setQueryParameters(parameters, true);\n\n  var pickFeatureParams = {\n    query_layers: options.layers,\n    info_format: "{format}",\n  };\n  // use correct pixel coordinate identifier based on version\n  if (parseFloat(pickFeatureResource.queryParameters.version) >= 1.3) {\n    pickFeatureParams.i = "{i}";\n    pickFeatureParams.j = "{j}";\n  } else {\n    pickFeatureParams.x = "{i}";\n    pickFeatureParams.y = "{j}";\n  }\n  pickFeatureResource.setQueryParameters(pickFeatureParams, true);\n\n  this._resource = resource;\n  this._pickFeaturesResource = pickFeatureResource;\n  this._layers = options.layers;\n\n  // Let UrlTemplateImageryProvider do the actual URL building.\n  this._tileProvider = new _UrlTemplateImageryProvider_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    url: resource,\n    pickFeaturesUrl: pickFeatureResource,\n    tilingScheme: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n      options.tilingScheme,\n      new _Core_GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({ ellipsoid: options.ellipsoid })\n    ),\n    rectangle: options.rectangle,\n    tileWidth: options.tileWidth,\n    tileHeight: options.tileHeight,\n    minimumLevel: options.minimumLevel,\n    maximumLevel: options.maximumLevel,\n    subdomains: options.subdomains,\n    tileDiscardPolicy: options.tileDiscardPolicy,\n    credit: options.credit,\n    getFeatureInfoFormats: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n      options.getFeatureInfoFormats,\n      WebMapServiceImageryProvider.DefaultGetFeatureInfoFormats\n    ),\n    enablePickFeatures: options.enablePickFeatures,\n  });\n}\n\nfunction requestImage(imageryProvider, col, row, level, request, interval) {\n  var dynamicIntervalData = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(interval) ? interval.data : undefined;\n  var tileProvider = imageryProvider._tileProvider;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(dynamicIntervalData)) {\n    // We set the query parameters within the tile provider, because it is managing the query.\n    tileProvider._resource.setQueryParameters(dynamicIntervalData);\n  }\n  return tileProvider.requestImage(col, row, level, request);\n}\n\nfunction pickFeatures(\n  imageryProvider,\n  x,\n  y,\n  level,\n  longitude,\n  latitude,\n  interval\n) {\n  var dynamicIntervalData = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(interval) ? interval.data : undefined;\n  var tileProvider = imageryProvider._tileProvider;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(dynamicIntervalData)) {\n    // We set the query parameters within the tile provider, because it is managing the query.\n    tileProvider._pickFeaturesResource.setQueryParameters(dynamicIntervalData);\n  }\n  return tileProvider.pickFeatures(x, y, level, longitude, latitude);\n}\n\nObject.defineProperties(WebMapServiceImageryProvider.prototype, {\n  /**\n   * Gets the URL of the WMS server.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {String}\n   * @readonly\n   */\n  url: {\n    get: function () {\n      return this._resource._url;\n    },\n  },\n\n  /**\n   * Gets the proxy used by this provider.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Proxy}\n   * @readonly\n   */\n  proxy: {\n    get: function () {\n      return this._resource.proxy;\n    },\n  },\n\n  /**\n   * Gets the names of the WMS layers, separated by commas.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {String}\n   * @readonly\n   */\n  layers: {\n    get: function () {\n      return this._layers;\n    },\n  },\n\n  /**\n   * Gets the width of each tile, in pixels. This function should\n   * not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  tileWidth: {\n    get: function () {\n      return this._tileProvider.tileWidth;\n    },\n  },\n\n  /**\n   * Gets the height of each tile, in pixels.  This function should\n   * not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  tileHeight: {\n    get: function () {\n      return this._tileProvider.tileHeight;\n    },\n  },\n\n  /**\n   * Gets the maximum level-of-detail that can be requested.  This function should\n   * not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Number|undefined}\n   * @readonly\n   */\n  maximumLevel: {\n    get: function () {\n      return this._tileProvider.maximumLevel;\n    },\n  },\n\n  /**\n   * Gets the minimum level-of-detail that can be requested.  This function should\n   * not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  minimumLevel: {\n    get: function () {\n      return this._tileProvider.minimumLevel;\n    },\n  },\n\n  /**\n   * Gets the tiling scheme used by this provider.  This function should\n   * not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {TilingScheme}\n   * @readonly\n   */\n  tilingScheme: {\n    get: function () {\n      return this._tileProvider.tilingScheme;\n    },\n  },\n\n  /**\n   * Gets the rectangle, in radians, of the imagery provided by this instance.  This function should\n   * not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Rectangle}\n   * @readonly\n   */\n  rectangle: {\n    get: function () {\n      return this._tileProvider.rectangle;\n    },\n  },\n\n  /**\n   * Gets the tile discard policy.  If not undefined, the discard policy is responsible\n   * for filtering out "missing" tiles via its shouldDiscardImage function.  If this function\n   * returns undefined, no tiles are filtered.  This function should\n   * not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {TileDiscardPolicy}\n   * @readonly\n   */\n  tileDiscardPolicy: {\n    get: function () {\n      return this._tileProvider.tileDiscardPolicy;\n    },\n  },\n\n  /**\n   * Gets an event that is raised when the imagery provider encounters an asynchronous error.  By subscribing\n   * to the event, you will be notified of the error and can potentially recover from it.  Event listeners\n   * are passed an instance of {@link TileProviderError}.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Event}\n   * @readonly\n   */\n  errorEvent: {\n    get: function () {\n      return this._tileProvider.errorEvent;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the provider is ready for use.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return this._tileProvider.ready;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves to true when the provider is ready for use.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Promise.<Boolean>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._tileProvider.readyPromise;\n    },\n  },\n\n  /**\n   * Gets the credit to display when this imagery provider is active.  Typically this is used to credit\n   * the source of the imagery.  This function should not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Credit}\n   * @readonly\n   */\n  credit: {\n    get: function () {\n      return this._tileProvider.credit;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the images provided by this imagery provider\n   * include an alpha channel.  If this property is false, an alpha channel, if present, will\n   * be ignored.  If this property is true, any images without an alpha channel will be treated\n   * as if their alpha is 1.0 everywhere.  When this property is false, memory usage\n   * and texture upload time are reduced.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  hasAlphaChannel: {\n    get: function () {\n      return this._tileProvider.hasAlphaChannel;\n    },\n  },\n\n  /**\n   * Gets or sets a value indicating whether feature picking is enabled.  If true, {@link WebMapServiceImageryProvider#pickFeatures} will\n   * invoke the <code>GetFeatureInfo</code> service on the WMS server and attempt to interpret the features included in the response.  If false,\n   * {@link WebMapServiceImageryProvider#pickFeatures} will immediately return undefined (indicating no pickable\n   * features) without communicating with the server.  Set this property to false if you know your data\n   * source does not support picking features or if you don\'t want this provider\'s features to be pickable.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Boolean}\n   * @default true\n   */\n  enablePickFeatures: {\n    get: function () {\n      return this._tileProvider.enablePickFeatures;\n    },\n    set: function (enablePickFeatures) {\n      this._tileProvider.enablePickFeatures = enablePickFeatures;\n    },\n  },\n\n  /**\n   * Gets or sets a clock that is used to get keep the time used for time dynamic parameters.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {Clock}\n   */\n  clock: {\n    get: function () {\n      return this._timeDynamicImagery.clock;\n    },\n    set: function (value) {\n      this._timeDynamicImagery.clock = value;\n    },\n  },\n  /**\n   * Gets or sets a time interval collection that is used to get time dynamic parameters. The data of each\n   * TimeInterval is an object containing the keys and values of the properties that are used during\n   * tile requests.\n   * @memberof WebMapServiceImageryProvider.prototype\n   * @type {TimeIntervalCollection}\n   */\n  times: {\n    get: function () {\n      return this._timeDynamicImagery.times;\n    },\n    set: function (value) {\n      this._timeDynamicImagery.times = value;\n    },\n  },\n});\n\n/**\n * Gets the credits to be displayed when a given tile is displayed.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level;\n * @returns {Credit[]} The credits to be displayed when the tile is displayed.\n *\n * @exception {DeveloperError} <code>getTileCredits</code> must not be called before the imagery provider is ready.\n */\nWebMapServiceImageryProvider.prototype.getTileCredits = function (x, y, level) {\n  return this._tileProvider.getTileCredits(x, y, level);\n};\n\n/**\n * Requests the image for a given tile.  This function should\n * not be called before {@link WebMapServiceImageryProvider#ready} returns true.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Request} [request] The request object. Intended for internal use only.\n * @returns {Promise.<HTMLImageElement|HTMLCanvasElement>|undefined} A promise for the image that will resolve when the image is available, or\n *          undefined if there are too many active requests to the server, and the request\n *          should be retried later.  The resolved image may be either an\n *          Image or a Canvas DOM object.\n *\n * @exception {DeveloperError} <code>requestImage</code> must not be called before the imagery provider is ready.\n */\nWebMapServiceImageryProvider.prototype.requestImage = function (\n  x,\n  y,\n  level,\n  request\n) {\n  var result;\n  var timeDynamicImagery = this._timeDynamicImagery;\n  var currentInterval;\n\n  // Try and load from cache\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(timeDynamicImagery)) {\n    currentInterval = timeDynamicImagery.currentInterval;\n    result = timeDynamicImagery.getFromCache(x, y, level, request);\n  }\n\n  // Couldn\'t load from cache\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    result = requestImage(this, x, y, level, request, currentInterval);\n  }\n\n  // If we are approaching an interval, preload this tile in the next interval\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(timeDynamicImagery)) {\n    timeDynamicImagery.checkApproachingInterval(x, y, level, request);\n  }\n\n  return result;\n};\n\n/**\n * Asynchronously determines what features, if any, are located at a given longitude and latitude within\n * a tile.  This function should not be called before {@link ImageryProvider#ready} returns true.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Number} longitude The longitude at which to pick features.\n * @param {Number} latitude  The latitude at which to pick features.\n * @return {Promise.<ImageryLayerFeatureInfo[]>|undefined} A promise for the picked features that will resolve when the asynchronous\n *                   picking completes.  The resolved value is an array of {@link ImageryLayerFeatureInfo}\n *                   instances.  The array may be empty if no features are found at the given location.\n *\n * @exception {DeveloperError} <code>pickFeatures</code> must not be called before the imagery provider is ready.\n */\nWebMapServiceImageryProvider.prototype.pickFeatures = function (\n  x,\n  y,\n  level,\n  longitude,\n  latitude\n) {\n  var timeDynamicImagery = this._timeDynamicImagery;\n  var currentInterval = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(timeDynamicImagery)\n    ? timeDynamicImagery.currentInterval\n    : undefined;\n\n  return pickFeatures(this, x, y, level, longitude, latitude, currentInterval);\n};\n\n/**\n * The default parameters to include in the WMS URL to obtain images.  The values are as follows:\n *    service=WMS\n *    version=1.1.1\n *    request=GetMap\n *    styles=\n *    format=image/jpeg\n *\n * @constant\n * @type {Object}\n */\nWebMapServiceImageryProvider.DefaultParameters = Object.freeze({\n  service: "WMS",\n  version: "1.1.1",\n  request: "GetMap",\n  styles: "",\n  format: "image/jpeg",\n});\n\n/**\n * The default parameters to include in the WMS URL to get feature information.  The values are as follows:\n *     service=WMS\n *     version=1.1.1\n *     request=GetFeatureInfo\n *\n * @constant\n * @type {Object}\n */\nWebMapServiceImageryProvider.GetFeatureInfoDefaultParameters = Object.freeze({\n  service: "WMS",\n  version: "1.1.1",\n  request: "GetFeatureInfo",\n});\n\nWebMapServiceImageryProvider.DefaultGetFeatureInfoFormats = Object.freeze([\n  Object.freeze(new _GetFeatureInfoFormat_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("json", "application/json")),\n  Object.freeze(new _GetFeatureInfoFormat_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("xml", "text/xml")),\n  Object.freeze(new _GetFeatureInfoFormat_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("text", "text/html")),\n]);\n\nfunction objectToLowercase(obj) {\n  var result = {};\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      result[key.toLowerCase()] = obj[key];\n    }\n  }\n  return result;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (WebMapServiceImageryProvider);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUyMDAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW1EO0FBQ1Y7QUFDYztBQUNnQjtBQUM1QjtBQUMwQjtBQUNSO0FBQ0o7QUFDZ0I7O0FBRXpFO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUJBQWlCLDJFQUEyRSxpQ0FBaUM7QUFDM0ksY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxTQUFTLG9DQUFvQyxpREFBaUQ7QUFDNUc7QUFDQSxXQUFXLGlEQUFpRDtBQUM1RDtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdCQUF3QjtBQUN0QztBQUNBLGNBQWMsV0FBVztBQUN6QixjQUFjLGNBQWM7QUFDNUIsY0FBYyxXQUFXO0FBQ3pCO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLGVBQWU7QUFDN0IsY0FBYyxpQkFBaUIsd0RBQXdELEVBQUU7QUFDekY7QUFDQTtBQUNBLGNBQWMsT0FBTztBQUNyQixjQUFjLHdCQUF3QjtBQUN0Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlEQUFpRDtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwRUFBWSxVQUFVLGdHQUF5Qjs7QUFFM0Q7QUFDQSxPQUFPLHFFQUFPO0FBQ2QsY0FBYyx3RUFBYztBQUM1QjtBQUNBLE9BQU8scUVBQU87QUFDZCxjQUFjLHdFQUFjO0FBQzVCO0FBQ0E7O0FBRUEsTUFBTSxxRUFBTyxvQkFBb0IscUVBQU87QUFDeEMsY0FBYyx3RUFBYztBQUM1QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsZ0dBQXVCOztBQUV4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0scUVBQU87QUFDYjtBQUNBOztBQUVBLE1BQU0scUVBQU87QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxxRUFBTztBQUNiLG1DQUFtQyx1RUFBa0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxZQUFZLHFFQUFPO0FBQ25CO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sY0FBYyxFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUsZUFBZTtBQUN0RSx1QkFBdUIsTUFBTTtBQUM3Qix3QkFBd0IsT0FBTzs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwRUFBWTtBQUNqQztBQUNBO0FBQ0EsbURBQW1ELCtFQUFxQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxxQkFBcUIsMEVBQVk7QUFDakM7QUFDQTtBQUNBLG1EQUFtRCwrRUFBcUI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLEVBQUU7QUFDOUIsNEJBQTRCLEVBQUU7QUFDOUIsSUFBSTtBQUNKLDRCQUE0QixFQUFFO0FBQzlCLDRCQUE0QixFQUFFO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLCtFQUEwQjtBQUNyRDtBQUNBO0FBQ0Esa0JBQWtCLDBFQUFZO0FBQzlCO0FBQ0EsVUFBVSxnRkFBc0IsR0FBRyw4QkFBOEI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBFQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0EsNEJBQTRCLHFFQUFPO0FBQ25DOztBQUVBLE1BQU0scUVBQU87QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixxRUFBTztBQUNuQzs7QUFFQSxNQUFNLHFFQUFPO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSwyQkFBMkIsMENBQTBDO0FBQ3JFO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsMkJBQTJCLDBDQUEwQztBQUNyRTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLDJCQUEyQiwwQ0FBMEM7QUFDckU7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSwyQkFBMkIsMENBQTBDO0FBQ3JFO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsMkJBQTJCLDBDQUEwQztBQUNyRTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLDJCQUEyQiwwQ0FBMEM7QUFDckU7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBDQUEwQztBQUNyRTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHdCQUF3QjtBQUN4RDtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSw0RUFBNEUsMENBQTBDO0FBQ3RIO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQSxvRkFBb0YsaURBQWlEO0FBQ3JJO0FBQ0EsTUFBTSxpREFBaUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHlCQUF5QiwwQ0FBMEM7QUFDbkU7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEIsYUFBYSx3REFBd0Q7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0scUVBQU87QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPLHFFQUFPO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBLE1BQU0scUVBQU8sWUFBWSxxRUFBTztBQUNoQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVEQUF1RCw2QkFBNkI7QUFDcEY7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFlBQVksK0NBQStDO0FBQzNELDRFQUE0RTtBQUM1RTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFFQUFPO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0Esb0JBQW9CLHlFQUFvQjtBQUN4QyxvQkFBb0IseUVBQW9CO0FBQ3hDLG9CQUFvQix5RUFBb0I7QUFDeEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsNEJBQTRCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5qcz82ZTNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4uL0NvcmUvZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IuanNcIjtcbmltcG9ydCBHZW9ncmFwaGljVGlsaW5nU2NoZW1lIGZyb20gXCIuLi9Db3JlL0dlb2dyYXBoaWNUaWxpbmdTY2hlbWUuanNcIjtcbmltcG9ydCBSZXNvdXJjZSBmcm9tIFwiLi4vQ29yZS9SZXNvdXJjZS5qc1wiO1xuaW1wb3J0IFdlYk1lcmNhdG9yUHJvamVjdGlvbiBmcm9tIFwiLi4vQ29yZS9XZWJNZXJjYXRvclByb2plY3Rpb24uanNcIjtcbmltcG9ydCBHZXRGZWF0dXJlSW5mb0Zvcm1hdCBmcm9tIFwiLi9HZXRGZWF0dXJlSW5mb0Zvcm1hdC5qc1wiO1xuaW1wb3J0IFRpbWVEeW5hbWljSW1hZ2VyeSBmcm9tIFwiLi9UaW1lRHluYW1pY0ltYWdlcnkuanNcIjtcbmltcG9ydCBVcmxUZW1wbGF0ZUltYWdlcnlQcm92aWRlciBmcm9tIFwiLi9VcmxUZW1wbGF0ZUltYWdlcnlQcm92aWRlci5qc1wiO1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIuQ29uc3RydWN0b3JPcHRpb25zXG4gKlxuICogSW5pdGlhbGl6YXRpb24gb3B0aW9ucyBmb3IgdGhlIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIgY29uc3RydWN0b3JcbiAqXG4gKiBAcHJvcGVydHkge1Jlc291cmNlfFN0cmluZ30gdXJsIFRoZSBVUkwgb2YgdGhlIFdNUyBzZXJ2aWNlLiBUaGUgVVJMIHN1cHBvcnRzIHRoZSBzYW1lIGtleXdvcmRzIGFzIHRoZSB7QGxpbmsgVXJsVGVtcGxhdGVJbWFnZXJ5UHJvdmlkZXJ9LlxuICogQHByb3BlcnR5IHtTdHJpbmd9IGxheWVycyBUaGUgbGF5ZXJzIHRvIGluY2x1ZGUsIHNlcGFyYXRlZCBieSBjb21tYXMuXG4gKiBAcHJvcGVydHkge09iamVjdH0gW3BhcmFtZXRlcnM9V2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5EZWZhdWx0UGFyYW1ldGVyc10gQWRkaXRpb25hbCBwYXJhbWV0ZXJzIHRvIHBhc3MgdG8gdGhlIFdNUyBzZXJ2ZXIgaW4gdGhlIEdldE1hcCBVUkwuXG4gKiBAcHJvcGVydHkge09iamVjdH0gW2dldEZlYXR1cmVJbmZvUGFyYW1ldGVycz1XZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLkdldEZlYXR1cmVJbmZvRGVmYXVsdFBhcmFtZXRlcnNdIEFkZGl0aW9uYWwgcGFyYW1ldGVycyB0byBwYXNzIHRvIHRoZSBXTVMgc2VydmVyIGluIHRoZSBHZXRGZWF0dXJlSW5mbyBVUkwuXG4gKiBAcHJvcGVydHkge0Jvb2xlYW59IFtlbmFibGVQaWNrRmVhdHVyZXM9dHJ1ZV0gSWYgdHJ1ZSwge0BsaW5rIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIjcGlja0ZlYXR1cmVzfSB3aWxsIGludm9rZVxuICogICAgICAgIHRoZSBHZXRGZWF0dXJlSW5mbyBvcGVyYXRpb24gb24gdGhlIFdNUyBzZXJ2ZXIgYW5kIHJldHVybiB0aGUgZmVhdHVyZXMgaW5jbHVkZWQgaW4gdGhlIHJlc3BvbnNlLiAgSWYgZmFsc2UsXG4gKiAgICAgICAge0BsaW5rIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIjcGlja0ZlYXR1cmVzfSB3aWxsIGltbWVkaWF0ZWx5IHJldHVybiB1bmRlZmluZWQgKGluZGljYXRpbmcgbm8gcGlja2FibGUgZmVhdHVyZXMpXG4gKiAgICAgICAgd2l0aG91dCBjb21tdW5pY2F0aW5nIHdpdGggdGhlIHNlcnZlci4gIFNldCB0aGlzIHByb3BlcnR5IHRvIGZhbHNlIGlmIHlvdSBrbm93IHlvdXIgV01TIHNlcnZlciBkb2VzIG5vdCBzdXBwb3J0XG4gKiAgICAgICAgR2V0RmVhdHVyZUluZm8gb3IgaWYgeW91IGRvbid0IHdhbnQgdGhpcyBwcm92aWRlcidzIGZlYXR1cmVzIHRvIGJlIHBpY2thYmxlLiBOb3RlIHRoYXQgdGhpcyBjYW4gYmUgZHluYW1pY2FsbHlcbiAqICAgICAgICBvdmVycmlkZGVuIGJ5IG1vZGlmeWluZyB0aGUgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlciNlbmFibGVQaWNrRmVhdHVyZXMgcHJvcGVydHkuXG4gKiBAcHJvcGVydHkge0dldEZlYXR1cmVJbmZvRm9ybWF0W119IFtnZXRGZWF0dXJlSW5mb0Zvcm1hdHM9V2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5EZWZhdWx0R2V0RmVhdHVyZUluZm9Gb3JtYXRzXSBUaGUgZm9ybWF0c1xuICogICAgICAgIGluIHdoaWNoIHRvIHRyeSBXTVMgR2V0RmVhdHVyZUluZm8gcmVxdWVzdHMuXG4gKiBAcHJvcGVydHkge1JlY3RhbmdsZX0gW3JlY3RhbmdsZT1SZWN0YW5nbGUuTUFYX1ZBTFVFXSBUaGUgcmVjdGFuZ2xlIG9mIHRoZSBsYXllci5cbiAqIEBwcm9wZXJ0eSB7VGlsaW5nU2NoZW1lfSBbdGlsaW5nU2NoZW1lPW5ldyBHZW9ncmFwaGljVGlsaW5nU2NoZW1lKCldIFRoZSB0aWxpbmcgc2NoZW1lIHRvIHVzZSB0byBkaXZpZGUgdGhlIHdvcmxkIGludG8gdGlsZXMuXG4gKiBAcHJvcGVydHkge0VsbGlwc29pZH0gW2VsbGlwc29pZF0gVGhlIGVsbGlwc29pZC4gIElmIHRoZSB0aWxpbmdTY2hlbWUgaXMgc3BlY2lmaWVkLFxuICogICAgICAgIHRoaXMgcGFyYW1ldGVyIGlzIGlnbm9yZWQgYW5kIHRoZSB0aWxpbmcgc2NoZW1lJ3MgZWxsaXBzb2lkIGlzIHVzZWQgaW5zdGVhZC4gSWYgbmVpdGhlclxuICogICAgICAgIHBhcmFtZXRlciBpcyBzcGVjaWZpZWQsIHRoZSBXR1M4NCBlbGxpcHNvaWQgaXMgdXNlZC5cbiAqIEBwcm9wZXJ0eSB7TnVtYmVyfSBbdGlsZVdpZHRoPTI1Nl0gVGhlIHdpZHRoIG9mIGVhY2ggdGlsZSBpbiBwaXhlbHMuXG4gKiBAcHJvcGVydHkge051bWJlcn0gW3RpbGVIZWlnaHQ9MjU2XSBUaGUgaGVpZ2h0IG9mIGVhY2ggdGlsZSBpbiBwaXhlbHMuXG4gKiBAcHJvcGVydHkge051bWJlcn0gW21pbmltdW1MZXZlbD0wXSBUaGUgbWluaW11bSBsZXZlbC1vZi1kZXRhaWwgc3VwcG9ydGVkIGJ5IHRoZSBpbWFnZXJ5IHByb3ZpZGVyLiAgVGFrZSBjYXJlIHdoZW5cbiAqICAgICAgICBzcGVjaWZ5aW5nIHRoaXMgdGhhdCB0aGUgbnVtYmVyIG9mIHRpbGVzIGF0IHRoZSBtaW5pbXVtIGxldmVsIGlzIHNtYWxsLCBzdWNoIGFzIGZvdXIgb3IgbGVzcy4gIEEgbGFyZ2VyIG51bWJlciBpc1xuICogICAgICAgIGxpa2VseSB0byByZXN1bHQgaW4gcmVuZGVyaW5nIHByb2JsZW1zLlxuICogQHByb3BlcnR5IHtOdW1iZXJ9IFttYXhpbXVtTGV2ZWxdIFRoZSBtYXhpbXVtIGxldmVsLW9mLWRldGFpbCBzdXBwb3J0ZWQgYnkgdGhlIGltYWdlcnkgcHJvdmlkZXIsIG9yIHVuZGVmaW5lZCBpZiB0aGVyZSBpcyBubyBsaW1pdC5cbiAqICAgICAgICBJZiBub3Qgc3BlY2lmaWVkLCB0aGVyZSBpcyBubyBsaW1pdC5cbiAqIEBwcm9wZXJ0eSB7U3RyaW5nfSBbY3JzXSBDUlMgc3BlY2lmaWNhdGlvbiwgZm9yIHVzZSB3aXRoIFdNUyBzcGVjaWZpY2F0aW9uID49IDEuMy4wLlxuICogQHByb3BlcnR5IHtTdHJpbmd9IFtzcnNdIFNSUyBzcGVjaWZpY2F0aW9uLCBmb3IgdXNlIHdpdGggV01TIHNwZWNpZmljYXRpb24gMS4xLjAgb3IgMS4xLjFcbiAqIEBwcm9wZXJ0eSB7Q3JlZGl0fFN0cmluZ30gW2NyZWRpdF0gQSBjcmVkaXQgZm9yIHRoZSBkYXRhIHNvdXJjZSwgd2hpY2ggaXMgZGlzcGxheWVkIG9uIHRoZSBjYW52YXMuXG4gKiBAcHJvcGVydHkge1N0cmluZ3xTdHJpbmdbXX0gW3N1YmRvbWFpbnM9J2FiYyddIFRoZSBzdWJkb21haW5zIHRvIHVzZSBmb3IgdGhlIDxjb2RlPntzfTwvY29kZT4gcGxhY2Vob2xkZXIgaW4gdGhlIFVSTCB0ZW1wbGF0ZS5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICBJZiB0aGlzIHBhcmFtZXRlciBpcyBhIHNpbmdsZSBzdHJpbmcsIGVhY2ggY2hhcmFjdGVyIGluIHRoZSBzdHJpbmcgaXMgYSBzdWJkb21haW4uICBJZiBpdCBpc1xuICogICAgICAgICAgICAgICAgICAgICAgICAgIGFuIGFycmF5LCBlYWNoIGVsZW1lbnQgaW4gdGhlIGFycmF5IGlzIGEgc3ViZG9tYWluLlxuICogQHByb3BlcnR5IHtDbG9ja30gW2Nsb2NrXSBBIENsb2NrIGluc3RhbmNlIHRoYXQgaXMgdXNlZCB3aGVuIGRldGVybWluaW5nIHRoZSB2YWx1ZSBmb3IgdGhlIHRpbWUgZGltZW5zaW9uLiBSZXF1aXJlZCB3aGVuIGB0aW1lc2AgaXMgc3BlY2lmaWVkLlxuICogQHByb3BlcnR5IHtUaW1lSW50ZXJ2YWxDb2xsZWN0aW9ufSBbdGltZXNdIFRpbWVJbnRlcnZhbENvbGxlY3Rpb24gd2l0aCBpdHMgZGF0YSBwcm9wZXJ0eSBiZWluZyBhbiBvYmplY3QgY29udGFpbmluZyB0aW1lIGR5bmFtaWMgZGltZW5zaW9uIGFuZCB0aGVpciB2YWx1ZXMuXG4gKi9cblxuLyoqXG4gKiBQcm92aWRlcyB0aWxlZCBpbWFnZXJ5IGhvc3RlZCBieSBhIFdlYiBNYXAgU2VydmljZSAoV01TKSBzZXJ2ZXIuXG4gKlxuICogQGFsaWFzIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXJcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwYXJhbSB7V2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5Db25zdHJ1Y3Rvck9wdGlvbnN9IG9wdGlvbnMgT2JqZWN0IGRlc2NyaWJpbmcgaW5pdGlhbGl6YXRpb24gb3B0aW9uc1xuICpcbiAqIEBzZWUgQXJjR2lzTWFwU2VydmVySW1hZ2VyeVByb3ZpZGVyXG4gKiBAc2VlIEJpbmdNYXBzSW1hZ2VyeVByb3ZpZGVyXG4gKiBAc2VlIEdvb2dsZUVhcnRoRW50ZXJwcmlzZU1hcHNQcm92aWRlclxuICogQHNlZSBPcGVuU3RyZWV0TWFwSW1hZ2VyeVByb3ZpZGVyXG4gKiBAc2VlIFNpbmdsZVRpbGVJbWFnZXJ5UHJvdmlkZXJcbiAqIEBzZWUgVGlsZU1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXJcbiAqIEBzZWUgV2ViTWFwVGlsZVNlcnZpY2VJbWFnZXJ5UHJvdmlkZXJcbiAqIEBzZWUgVXJsVGVtcGxhdGVJbWFnZXJ5UHJvdmlkZXJcbiAqXG4gKiBAc2VlIHtAbGluayBodHRwOi8vcmVzb3VyY2VzLmVzcmkuY29tL2hlbHAvOS4zL2FyY2dpc3NlcnZlci9hcGlzL3Jlc3QvfEFyY0dJUyBTZXJ2ZXIgUkVTVCBBUEl9XG4gKiBAc2VlIHtAbGluayBodHRwOi8vd3d3LnczLm9yZy9UUi9jb3JzL3xDcm9zcy1PcmlnaW4gUmVzb3VyY2UgU2hhcmluZ31cbiAqXG4gKiBAZXhhbXBsZVxuICogdmFyIHByb3ZpZGVyID0gbmV3IENlc2l1bS5XZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyKHtcbiAqICAgICB1cmwgOiAnaHR0cHM6Ly9zYW1wbGVzZXJ2ZXIxLmFyY2dpc29ubGluZS5jb20vQXJjR0lTL3NlcnZpY2VzL1NwZWNpYWx0eS9FU1JJX1N0YXRlc0NpdGllc1JpdmVyc19VU0EvTWFwU2VydmVyL1dNU1NlcnZlcicsXG4gKiAgICAgbGF5ZXJzIDogJzAnLFxuICogICAgIHByb3h5OiBuZXcgQ2VzaXVtLkRlZmF1bHRQcm94eSgnL3Byb3h5LycpXG4gKiB9KTtcbiAqXG4gKiB2aWV3ZXIuaW1hZ2VyeUxheWVycy5hZGRJbWFnZXJ5UHJvdmlkZXIocHJvdmlkZXIpO1xuICovXG5mdW5jdGlvbiBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcblxuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIWRlZmluZWQob3B0aW9ucy51cmwpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwib3B0aW9ucy51cmwgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIGlmICghZGVmaW5lZChvcHRpb25zLmxheWVycykpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJvcHRpb25zLmxheWVycyBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgaWYgKGRlZmluZWQob3B0aW9ucy50aW1lcykgJiYgIWRlZmluZWQob3B0aW9ucy5jbG9jaykpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIm9wdGlvbnMudGltZXMgd2FzIHNwZWNpZmllZCwgc28gb3B0aW9ucy5jbG9jayBpcyByZXF1aXJlZC5cIlxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgYWxwaGEgYmxlbmRpbmcgdmFsdWUgb2YgdGhpcyBwcm92aWRlciwgd2l0aCAwLjAgcmVwcmVzZW50aW5nIGZ1bGx5IHRyYW5zcGFyZW50IGFuZFxuICAgKiAxLjAgcmVwcmVzZW50aW5nIGZ1bGx5IG9wYXF1ZS5cbiAgICpcbiAgICogQHR5cGUge051bWJlcnx1bmRlZmluZWR9XG4gICAqIEBkZWZhdWx0IHVuZGVmaW5lZFxuICAgKi9cbiAgdGhpcy5kZWZhdWx0QWxwaGEgPSB1bmRlZmluZWQ7XG5cbiAgLyoqXG4gICAqIFRoZSBkZWZhdWx0IGFscGhhIGJsZW5kaW5nIHZhbHVlIG9uIHRoZSBuaWdodCBzaWRlIG9mIHRoZSBnbG9iZSBvZiB0aGlzIHByb3ZpZGVyLCB3aXRoIDAuMCByZXByZXNlbnRpbmcgZnVsbHkgdHJhbnNwYXJlbnQgYW5kXG4gICAqIDEuMCByZXByZXNlbnRpbmcgZnVsbHkgb3BhcXVlLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfHVuZGVmaW5lZH1cbiAgICogQGRlZmF1bHQgdW5kZWZpbmVkXG4gICAqL1xuICB0aGlzLmRlZmF1bHROaWdodEFscGhhID0gdW5kZWZpbmVkO1xuXG4gIC8qKlxuICAgKiBUaGUgZGVmYXVsdCBhbHBoYSBibGVuZGluZyB2YWx1ZSBvbiB0aGUgZGF5IHNpZGUgb2YgdGhlIGdsb2JlIG9mIHRoaXMgcHJvdmlkZXIsIHdpdGggMC4wIHJlcHJlc2VudGluZyBmdWxseSB0cmFuc3BhcmVudCBhbmRcbiAgICogMS4wIHJlcHJlc2VudGluZyBmdWxseSBvcGFxdWUuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ8dW5kZWZpbmVkfVxuICAgKiBAZGVmYXVsdCB1bmRlZmluZWRcbiAgICovXG4gIHRoaXMuZGVmYXVsdERheUFscGhhID0gdW5kZWZpbmVkO1xuXG4gIC8qKlxuICAgKiBUaGUgZGVmYXVsdCBicmlnaHRuZXNzIG9mIHRoaXMgcHJvdmlkZXIuICAxLjAgdXNlcyB0aGUgdW5tb2RpZmllZCBpbWFnZXJ5IGNvbG9yLiAgTGVzcyB0aGFuIDEuMFxuICAgKiBtYWtlcyB0aGUgaW1hZ2VyeSBkYXJrZXIgd2hpbGUgZ3JlYXRlciB0aGFuIDEuMCBtYWtlcyBpdCBicmlnaHRlci5cbiAgICpcbiAgICogQHR5cGUge051bWJlcnx1bmRlZmluZWR9XG4gICAqIEBkZWZhdWx0IHVuZGVmaW5lZFxuICAgKi9cbiAgdGhpcy5kZWZhdWx0QnJpZ2h0bmVzcyA9IHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgY29udHJhc3Qgb2YgdGhpcyBwcm92aWRlci4gIDEuMCB1c2VzIHRoZSB1bm1vZGlmaWVkIGltYWdlcnkgY29sb3IuICBMZXNzIHRoYW4gMS4wIHJlZHVjZXNcbiAgICogdGhlIGNvbnRyYXN0IHdoaWxlIGdyZWF0ZXIgdGhhbiAxLjAgaW5jcmVhc2VzIGl0LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfHVuZGVmaW5lZH1cbiAgICogQGRlZmF1bHQgdW5kZWZpbmVkXG4gICAqL1xuICB0aGlzLmRlZmF1bHRDb250cmFzdCA9IHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgaHVlIG9mIHRoaXMgcHJvdmlkZXIgaW4gcmFkaWFucy4gMC4wIHVzZXMgdGhlIHVubW9kaWZpZWQgaW1hZ2VyeSBjb2xvci5cbiAgICpcbiAgICogQHR5cGUge051bWJlcnx1bmRlZmluZWR9XG4gICAqIEBkZWZhdWx0IHVuZGVmaW5lZFxuICAgKi9cbiAgdGhpcy5kZWZhdWx0SHVlID0gdW5kZWZpbmVkO1xuXG4gIC8qKlxuICAgKiBUaGUgZGVmYXVsdCBzYXR1cmF0aW9uIG9mIHRoaXMgcHJvdmlkZXIuIDEuMCB1c2VzIHRoZSB1bm1vZGlmaWVkIGltYWdlcnkgY29sb3IuIExlc3MgdGhhbiAxLjAgcmVkdWNlcyB0aGVcbiAgICogc2F0dXJhdGlvbiB3aGlsZSBncmVhdGVyIHRoYW4gMS4wIGluY3JlYXNlcyBpdC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcnx1bmRlZmluZWR9XG4gICAqIEBkZWZhdWx0IHVuZGVmaW5lZFxuICAgKi9cbiAgdGhpcy5kZWZhdWx0U2F0dXJhdGlvbiA9IHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgZ2FtbWEgY29ycmVjdGlvbiB0byBhcHBseSB0byB0aGlzIHByb3ZpZGVyLiAgMS4wIHVzZXMgdGhlIHVubW9kaWZpZWQgaW1hZ2VyeSBjb2xvci5cbiAgICpcbiAgICogQHR5cGUge051bWJlcnx1bmRlZmluZWR9XG4gICAqIEBkZWZhdWx0IHVuZGVmaW5lZFxuICAgKi9cbiAgdGhpcy5kZWZhdWx0R2FtbWEgPSB1bmRlZmluZWQ7XG5cbiAgLyoqXG4gICAqIFRoZSBkZWZhdWx0IHRleHR1cmUgbWluaWZpY2F0aW9uIGZpbHRlciB0byBhcHBseSB0byB0aGlzIHByb3ZpZGVyLlxuICAgKlxuICAgKiBAdHlwZSB7VGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlcn1cbiAgICogQGRlZmF1bHQgdW5kZWZpbmVkXG4gICAqL1xuICB0aGlzLmRlZmF1bHRNaW5pZmljYXRpb25GaWx0ZXIgPSB1bmRlZmluZWQ7XG5cbiAgLyoqXG4gICAqIFRoZSBkZWZhdWx0IHRleHR1cmUgbWFnbmlmaWNhdGlvbiBmaWx0ZXIgdG8gYXBwbHkgdG8gdGhpcyBwcm92aWRlci5cbiAgICpcbiAgICogQHR5cGUge1RleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyfVxuICAgKiBAZGVmYXVsdCB1bmRlZmluZWRcbiAgICovXG4gIHRoaXMuZGVmYXVsdE1hZ25pZmljYXRpb25GaWx0ZXIgPSB1bmRlZmluZWQ7XG5cbiAgdmFyIHJlc291cmNlID0gUmVzb3VyY2UuY3JlYXRlSWZOZWVkZWQob3B0aW9ucy51cmwpO1xuXG4gIHZhciBwaWNrRmVhdHVyZVJlc291cmNlID0gcmVzb3VyY2UuY2xvbmUoKTtcblxuICByZXNvdXJjZS5zZXRRdWVyeVBhcmFtZXRlcnMoXG4gICAgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5EZWZhdWx0UGFyYW1ldGVycyxcbiAgICB0cnVlXG4gICk7XG4gIHBpY2tGZWF0dXJlUmVzb3VyY2Uuc2V0UXVlcnlQYXJhbWV0ZXJzKFxuICAgIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIuR2V0RmVhdHVyZUluZm9EZWZhdWx0UGFyYW1ldGVycyxcbiAgICB0cnVlXG4gICk7XG5cbiAgaWYgKGRlZmluZWQob3B0aW9ucy5wYXJhbWV0ZXJzKSkge1xuICAgIHJlc291cmNlLnNldFF1ZXJ5UGFyYW1ldGVycyhvYmplY3RUb0xvd2VyY2FzZShvcHRpb25zLnBhcmFtZXRlcnMpKTtcbiAgfVxuXG4gIGlmIChkZWZpbmVkKG9wdGlvbnMuZ2V0RmVhdHVyZUluZm9QYXJhbWV0ZXJzKSkge1xuICAgIHBpY2tGZWF0dXJlUmVzb3VyY2Uuc2V0UXVlcnlQYXJhbWV0ZXJzKFxuICAgICAgb2JqZWN0VG9Mb3dlcmNhc2Uob3B0aW9ucy5nZXRGZWF0dXJlSW5mb1BhcmFtZXRlcnMpXG4gICAgKTtcbiAgfVxuXG4gIHZhciB0aGF0ID0gdGhpcztcbiAgdGhpcy5fcmVsb2FkID0gdW5kZWZpbmVkO1xuICBpZiAoZGVmaW5lZChvcHRpb25zLnRpbWVzKSkge1xuICAgIHRoaXMuX3RpbWVEeW5hbWljSW1hZ2VyeSA9IG5ldyBUaW1lRHluYW1pY0ltYWdlcnkoe1xuICAgICAgY2xvY2s6IG9wdGlvbnMuY2xvY2ssXG4gICAgICB0aW1lczogb3B0aW9ucy50aW1lcyxcbiAgICAgIHJlcXVlc3RJbWFnZUZ1bmN0aW9uOiBmdW5jdGlvbiAoeCwgeSwgbGV2ZWwsIHJlcXVlc3QsIGludGVydmFsKSB7XG4gICAgICAgIHJldHVybiByZXF1ZXN0SW1hZ2UodGhhdCwgeCwgeSwgbGV2ZWwsIHJlcXVlc3QsIGludGVydmFsKTtcbiAgICAgIH0sXG4gICAgICByZWxvYWRGdW5jdGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoZGVmaW5lZCh0aGF0Ll9yZWxvYWQpKSB7XG4gICAgICAgICAgdGhhdC5fcmVsb2FkKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICB2YXIgcGFyYW1ldGVycyA9IHt9O1xuICBwYXJhbWV0ZXJzLmxheWVycyA9IG9wdGlvbnMubGF5ZXJzO1xuICBwYXJhbWV0ZXJzLmJib3ggPVxuICAgIFwie3dlc3RQcm9qZWN0ZWR9LHtzb3V0aFByb2plY3RlZH0se2Vhc3RQcm9qZWN0ZWR9LHtub3J0aFByb2plY3RlZH1cIjtcbiAgcGFyYW1ldGVycy53aWR0aCA9IFwie3dpZHRofVwiO1xuICBwYXJhbWV0ZXJzLmhlaWdodCA9IFwie2hlaWdodH1cIjtcblxuICAvLyBVc2UgU1JTIG9yIENSUyBiYXNlZCBvbiB0aGUgV01TIHZlcnNpb24uXG4gIGlmIChwYXJzZUZsb2F0KHJlc291cmNlLnF1ZXJ5UGFyYW1ldGVycy52ZXJzaW9uKSA+PSAxLjMpIHtcbiAgICAvLyBVc2UgQ1JTIHdpdGggMS4zLjAgYW5kIGdvaW5nIGZvcndhcmQuXG4gICAgLy8gRm9yIEdlb2dyYXBoaWNUaWxpbmdTY2hlbWUsIHVzZSBDUlM6ODQgdmljZSBFUFNHOjQzMjYgdG8gc3BlY2lmeSBsb24sIGxhdCAoeCwgeSkgb3JkZXJpbmcgZm9yXG4gICAgLy8gYmJveCByZXF1ZXN0cy5cbiAgICBwYXJhbWV0ZXJzLmNycyA9IGRlZmF1bHRWYWx1ZShcbiAgICAgIG9wdGlvbnMuY3JzLFxuICAgICAgb3B0aW9ucy50aWxpbmdTY2hlbWUgJiZcbiAgICAgICAgb3B0aW9ucy50aWxpbmdTY2hlbWUucHJvamVjdGlvbiBpbnN0YW5jZW9mIFdlYk1lcmNhdG9yUHJvamVjdGlvblxuICAgICAgICA/IFwiRVBTRzozODU3XCJcbiAgICAgICAgOiBcIkNSUzo4NFwiXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTUlMgZm9yIFdNUyAxLjEuMCBvciAxLjEuMS5cbiAgICBwYXJhbWV0ZXJzLnNycyA9IGRlZmF1bHRWYWx1ZShcbiAgICAgIG9wdGlvbnMuc3JzLFxuICAgICAgb3B0aW9ucy50aWxpbmdTY2hlbWUgJiZcbiAgICAgICAgb3B0aW9ucy50aWxpbmdTY2hlbWUucHJvamVjdGlvbiBpbnN0YW5jZW9mIFdlYk1lcmNhdG9yUHJvamVjdGlvblxuICAgICAgICA/IFwiRVBTRzozODU3XCJcbiAgICAgICAgOiBcIkVQU0c6NDMyNlwiXG4gICAgKTtcbiAgfVxuXG4gIHJlc291cmNlLnNldFF1ZXJ5UGFyYW1ldGVycyhwYXJhbWV0ZXJzLCB0cnVlKTtcbiAgcGlja0ZlYXR1cmVSZXNvdXJjZS5zZXRRdWVyeVBhcmFtZXRlcnMocGFyYW1ldGVycywgdHJ1ZSk7XG5cbiAgdmFyIHBpY2tGZWF0dXJlUGFyYW1zID0ge1xuICAgIHF1ZXJ5X2xheWVyczogb3B0aW9ucy5sYXllcnMsXG4gICAgaW5mb19mb3JtYXQ6IFwie2Zvcm1hdH1cIixcbiAgfTtcbiAgLy8gdXNlIGNvcnJlY3QgcGl4ZWwgY29vcmRpbmF0ZSBpZGVudGlmaWVyIGJhc2VkIG9uIHZlcnNpb25cbiAgaWYgKHBhcnNlRmxvYXQocGlja0ZlYXR1cmVSZXNvdXJjZS5xdWVyeVBhcmFtZXRlcnMudmVyc2lvbikgPj0gMS4zKSB7XG4gICAgcGlja0ZlYXR1cmVQYXJhbXMuaSA9IFwie2l9XCI7XG4gICAgcGlja0ZlYXR1cmVQYXJhbXMuaiA9IFwie2p9XCI7XG4gIH0gZWxzZSB7XG4gICAgcGlja0ZlYXR1cmVQYXJhbXMueCA9IFwie2l9XCI7XG4gICAgcGlja0ZlYXR1cmVQYXJhbXMueSA9IFwie2p9XCI7XG4gIH1cbiAgcGlja0ZlYXR1cmVSZXNvdXJjZS5zZXRRdWVyeVBhcmFtZXRlcnMocGlja0ZlYXR1cmVQYXJhbXMsIHRydWUpO1xuXG4gIHRoaXMuX3Jlc291cmNlID0gcmVzb3VyY2U7XG4gIHRoaXMuX3BpY2tGZWF0dXJlc1Jlc291cmNlID0gcGlja0ZlYXR1cmVSZXNvdXJjZTtcbiAgdGhpcy5fbGF5ZXJzID0gb3B0aW9ucy5sYXllcnM7XG5cbiAgLy8gTGV0IFVybFRlbXBsYXRlSW1hZ2VyeVByb3ZpZGVyIGRvIHRoZSBhY3R1YWwgVVJMIGJ1aWxkaW5nLlxuICB0aGlzLl90aWxlUHJvdmlkZXIgPSBuZXcgVXJsVGVtcGxhdGVJbWFnZXJ5UHJvdmlkZXIoe1xuICAgIHVybDogcmVzb3VyY2UsXG4gICAgcGlja0ZlYXR1cmVzVXJsOiBwaWNrRmVhdHVyZVJlc291cmNlLFxuICAgIHRpbGluZ1NjaGVtZTogZGVmYXVsdFZhbHVlKFxuICAgICAgb3B0aW9ucy50aWxpbmdTY2hlbWUsXG4gICAgICBuZXcgR2VvZ3JhcGhpY1RpbGluZ1NjaGVtZSh7IGVsbGlwc29pZDogb3B0aW9ucy5lbGxpcHNvaWQgfSlcbiAgICApLFxuICAgIHJlY3RhbmdsZTogb3B0aW9ucy5yZWN0YW5nbGUsXG4gICAgdGlsZVdpZHRoOiBvcHRpb25zLnRpbGVXaWR0aCxcbiAgICB0aWxlSGVpZ2h0OiBvcHRpb25zLnRpbGVIZWlnaHQsXG4gICAgbWluaW11bUxldmVsOiBvcHRpb25zLm1pbmltdW1MZXZlbCxcbiAgICBtYXhpbXVtTGV2ZWw6IG9wdGlvbnMubWF4aW11bUxldmVsLFxuICAgIHN1YmRvbWFpbnM6IG9wdGlvbnMuc3ViZG9tYWlucyxcbiAgICB0aWxlRGlzY2FyZFBvbGljeTogb3B0aW9ucy50aWxlRGlzY2FyZFBvbGljeSxcbiAgICBjcmVkaXQ6IG9wdGlvbnMuY3JlZGl0LFxuICAgIGdldEZlYXR1cmVJbmZvRm9ybWF0czogZGVmYXVsdFZhbHVlKFxuICAgICAgb3B0aW9ucy5nZXRGZWF0dXJlSW5mb0Zvcm1hdHMsXG4gICAgICBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLkRlZmF1bHRHZXRGZWF0dXJlSW5mb0Zvcm1hdHNcbiAgICApLFxuICAgIGVuYWJsZVBpY2tGZWF0dXJlczogb3B0aW9ucy5lbmFibGVQaWNrRmVhdHVyZXMsXG4gIH0pO1xufVxuXG5mdW5jdGlvbiByZXF1ZXN0SW1hZ2UoaW1hZ2VyeVByb3ZpZGVyLCBjb2wsIHJvdywgbGV2ZWwsIHJlcXVlc3QsIGludGVydmFsKSB7XG4gIHZhciBkeW5hbWljSW50ZXJ2YWxEYXRhID0gZGVmaW5lZChpbnRlcnZhbCkgPyBpbnRlcnZhbC5kYXRhIDogdW5kZWZpbmVkO1xuICB2YXIgdGlsZVByb3ZpZGVyID0gaW1hZ2VyeVByb3ZpZGVyLl90aWxlUHJvdmlkZXI7XG5cbiAgaWYgKGRlZmluZWQoZHluYW1pY0ludGVydmFsRGF0YSkpIHtcbiAgICAvLyBXZSBzZXQgdGhlIHF1ZXJ5IHBhcmFtZXRlcnMgd2l0aGluIHRoZSB0aWxlIHByb3ZpZGVyLCBiZWNhdXNlIGl0IGlzIG1hbmFnaW5nIHRoZSBxdWVyeS5cbiAgICB0aWxlUHJvdmlkZXIuX3Jlc291cmNlLnNldFF1ZXJ5UGFyYW1ldGVycyhkeW5hbWljSW50ZXJ2YWxEYXRhKTtcbiAgfVxuICByZXR1cm4gdGlsZVByb3ZpZGVyLnJlcXVlc3RJbWFnZShjb2wsIHJvdywgbGV2ZWwsIHJlcXVlc3QpO1xufVxuXG5mdW5jdGlvbiBwaWNrRmVhdHVyZXMoXG4gIGltYWdlcnlQcm92aWRlcixcbiAgeCxcbiAgeSxcbiAgbGV2ZWwsXG4gIGxvbmdpdHVkZSxcbiAgbGF0aXR1ZGUsXG4gIGludGVydmFsXG4pIHtcbiAgdmFyIGR5bmFtaWNJbnRlcnZhbERhdGEgPSBkZWZpbmVkKGludGVydmFsKSA/IGludGVydmFsLmRhdGEgOiB1bmRlZmluZWQ7XG4gIHZhciB0aWxlUHJvdmlkZXIgPSBpbWFnZXJ5UHJvdmlkZXIuX3RpbGVQcm92aWRlcjtcblxuICBpZiAoZGVmaW5lZChkeW5hbWljSW50ZXJ2YWxEYXRhKSkge1xuICAgIC8vIFdlIHNldCB0aGUgcXVlcnkgcGFyYW1ldGVycyB3aXRoaW4gdGhlIHRpbGUgcHJvdmlkZXIsIGJlY2F1c2UgaXQgaXMgbWFuYWdpbmcgdGhlIHF1ZXJ5LlxuICAgIHRpbGVQcm92aWRlci5fcGlja0ZlYXR1cmVzUmVzb3VyY2Uuc2V0UXVlcnlQYXJhbWV0ZXJzKGR5bmFtaWNJbnRlcnZhbERhdGEpO1xuICB9XG4gIHJldHVybiB0aWxlUHJvdmlkZXIucGlja0ZlYXR1cmVzKHgsIHksIGxldmVsLCBsb25naXR1ZGUsIGxhdGl0dWRlKTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGUsIHtcbiAgLyoqXG4gICAqIEdldHMgdGhlIFVSTCBvZiB0aGUgV01TIHNlcnZlci5cbiAgICogQG1lbWJlcm9mIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIucHJvdG90eXBlXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgdXJsOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVzb3VyY2UuX3VybDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBwcm94eSB1c2VkIGJ5IHRoaXMgcHJvdmlkZXIuXG4gICAqIEBtZW1iZXJvZiBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7UHJveHl9XG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgcHJveHk6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZXNvdXJjZS5wcm94eTtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBuYW1lcyBvZiB0aGUgV01TIGxheWVycywgc2VwYXJhdGVkIGJ5IGNvbW1hcy5cbiAgICogQG1lbWJlcm9mIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIucHJvdG90eXBlXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgbGF5ZXJzOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbGF5ZXJzO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIHdpZHRoIG9mIGVhY2ggdGlsZSwgaW4gcGl4ZWxzLiBUaGlzIGZ1bmN0aW9uIHNob3VsZFxuICAgKiBub3QgYmUgY2FsbGVkIGJlZm9yZSB7QGxpbmsgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlciNyZWFkeX0gcmV0dXJucyB0cnVlLlxuICAgKiBAbWVtYmVyb2YgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICB0aWxlV2lkdGg6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aWxlUHJvdmlkZXIudGlsZVdpZHRoO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIGhlaWdodCBvZiBlYWNoIHRpbGUsIGluIHBpeGVscy4gIFRoaXMgZnVuY3Rpb24gc2hvdWxkXG4gICAqIG5vdCBiZSBjYWxsZWQgYmVmb3JlIHtAbGluayBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyI3JlYWR5fSByZXR1cm5zIHRydWUuXG4gICAqIEBtZW1iZXJvZiBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIHRpbGVIZWlnaHQ6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aWxlUHJvdmlkZXIudGlsZUhlaWdodDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBtYXhpbXVtIGxldmVsLW9mLWRldGFpbCB0aGF0IGNhbiBiZSByZXF1ZXN0ZWQuICBUaGlzIGZ1bmN0aW9uIHNob3VsZFxuICAgKiBub3QgYmUgY2FsbGVkIGJlZm9yZSB7QGxpbmsgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlciNyZWFkeX0gcmV0dXJucyB0cnVlLlxuICAgKiBAbWVtYmVyb2YgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGVcbiAgICogQHR5cGUge051bWJlcnx1bmRlZmluZWR9XG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgbWF4aW11bUxldmVsOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdGlsZVByb3ZpZGVyLm1heGltdW1MZXZlbDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBtaW5pbXVtIGxldmVsLW9mLWRldGFpbCB0aGF0IGNhbiBiZSByZXF1ZXN0ZWQuICBUaGlzIGZ1bmN0aW9uIHNob3VsZFxuICAgKiBub3QgYmUgY2FsbGVkIGJlZm9yZSB7QGxpbmsgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlciNyZWFkeX0gcmV0dXJucyB0cnVlLlxuICAgKiBAbWVtYmVyb2YgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICBtaW5pbXVtTGV2ZWw6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aWxlUHJvdmlkZXIubWluaW11bUxldmVsO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIHRpbGluZyBzY2hlbWUgdXNlZCBieSB0aGlzIHByb3ZpZGVyLiAgVGhpcyBmdW5jdGlvbiBzaG91bGRcbiAgICogbm90IGJlIGNhbGxlZCBiZWZvcmUge0BsaW5rIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIjcmVhZHl9IHJldHVybnMgdHJ1ZS5cbiAgICogQG1lbWJlcm9mIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIucHJvdG90eXBlXG4gICAqIEB0eXBlIHtUaWxpbmdTY2hlbWV9XG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgdGlsaW5nU2NoZW1lOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdGlsZVByb3ZpZGVyLnRpbGluZ1NjaGVtZTtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSByZWN0YW5nbGUsIGluIHJhZGlhbnMsIG9mIHRoZSBpbWFnZXJ5IHByb3ZpZGVkIGJ5IHRoaXMgaW5zdGFuY2UuICBUaGlzIGZ1bmN0aW9uIHNob3VsZFxuICAgKiBub3QgYmUgY2FsbGVkIGJlZm9yZSB7QGxpbmsgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlciNyZWFkeX0gcmV0dXJucyB0cnVlLlxuICAgKiBAbWVtYmVyb2YgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGVcbiAgICogQHR5cGUge1JlY3RhbmdsZX1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICByZWN0YW5nbGU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aWxlUHJvdmlkZXIucmVjdGFuZ2xlO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIHRpbGUgZGlzY2FyZCBwb2xpY3kuICBJZiBub3QgdW5kZWZpbmVkLCB0aGUgZGlzY2FyZCBwb2xpY3kgaXMgcmVzcG9uc2libGVcbiAgICogZm9yIGZpbHRlcmluZyBvdXQgXCJtaXNzaW5nXCIgdGlsZXMgdmlhIGl0cyBzaG91bGREaXNjYXJkSW1hZ2UgZnVuY3Rpb24uICBJZiB0aGlzIGZ1bmN0aW9uXG4gICAqIHJldHVybnMgdW5kZWZpbmVkLCBubyB0aWxlcyBhcmUgZmlsdGVyZWQuICBUaGlzIGZ1bmN0aW9uIHNob3VsZFxuICAgKiBub3QgYmUgY2FsbGVkIGJlZm9yZSB7QGxpbmsgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlciNyZWFkeX0gcmV0dXJucyB0cnVlLlxuICAgKiBAbWVtYmVyb2YgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGVcbiAgICogQHR5cGUge1RpbGVEaXNjYXJkUG9saWN5fVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIHRpbGVEaXNjYXJkUG9saWN5OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdGlsZVByb3ZpZGVyLnRpbGVEaXNjYXJkUG9saWN5O1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgYW4gZXZlbnQgdGhhdCBpcyByYWlzZWQgd2hlbiB0aGUgaW1hZ2VyeSBwcm92aWRlciBlbmNvdW50ZXJzIGFuIGFzeW5jaHJvbm91cyBlcnJvci4gIEJ5IHN1YnNjcmliaW5nXG4gICAqIHRvIHRoZSBldmVudCwgeW91IHdpbGwgYmUgbm90aWZpZWQgb2YgdGhlIGVycm9yIGFuZCBjYW4gcG90ZW50aWFsbHkgcmVjb3ZlciBmcm9tIGl0LiAgRXZlbnQgbGlzdGVuZXJzXG4gICAqIGFyZSBwYXNzZWQgYW4gaW5zdGFuY2Ugb2Yge0BsaW5rIFRpbGVQcm92aWRlckVycm9yfS5cbiAgICogQG1lbWJlcm9mIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIucHJvdG90eXBlXG4gICAqIEB0eXBlIHtFdmVudH1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICBlcnJvckV2ZW50OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdGlsZVByb3ZpZGVyLmVycm9yRXZlbnQ7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogR2V0cyBhIHZhbHVlIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgdGhlIHByb3ZpZGVyIGlzIHJlYWR5IGZvciB1c2UuXG4gICAqIEBtZW1iZXJvZiBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICByZWFkeToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3RpbGVQcm92aWRlci5yZWFkeTtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBHZXRzIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRydWUgd2hlbiB0aGUgcHJvdmlkZXIgaXMgcmVhZHkgZm9yIHVzZS5cbiAgICogQG1lbWJlcm9mIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIucHJvdG90eXBlXG4gICAqIEB0eXBlIHtQcm9taXNlLjxCb29sZWFuPn1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICByZWFkeVByb21pc2U6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aWxlUHJvdmlkZXIucmVhZHlQcm9taXNlO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIGNyZWRpdCB0byBkaXNwbGF5IHdoZW4gdGhpcyBpbWFnZXJ5IHByb3ZpZGVyIGlzIGFjdGl2ZS4gIFR5cGljYWxseSB0aGlzIGlzIHVzZWQgdG8gY3JlZGl0XG4gICAqIHRoZSBzb3VyY2Ugb2YgdGhlIGltYWdlcnkuICBUaGlzIGZ1bmN0aW9uIHNob3VsZCBub3QgYmUgY2FsbGVkIGJlZm9yZSB7QGxpbmsgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlciNyZWFkeX0gcmV0dXJucyB0cnVlLlxuICAgKiBAbWVtYmVyb2YgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGVcbiAgICogQHR5cGUge0NyZWRpdH1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICBjcmVkaXQ6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aWxlUHJvdmlkZXIuY3JlZGl0O1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgYSB2YWx1ZSBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IHRoZSBpbWFnZXMgcHJvdmlkZWQgYnkgdGhpcyBpbWFnZXJ5IHByb3ZpZGVyXG4gICAqIGluY2x1ZGUgYW4gYWxwaGEgY2hhbm5lbC4gIElmIHRoaXMgcHJvcGVydHkgaXMgZmFsc2UsIGFuIGFscGhhIGNoYW5uZWwsIGlmIHByZXNlbnQsIHdpbGxcbiAgICogYmUgaWdub3JlZC4gIElmIHRoaXMgcHJvcGVydHkgaXMgdHJ1ZSwgYW55IGltYWdlcyB3aXRob3V0IGFuIGFscGhhIGNoYW5uZWwgd2lsbCBiZSB0cmVhdGVkXG4gICAqIGFzIGlmIHRoZWlyIGFscGhhIGlzIDEuMCBldmVyeXdoZXJlLiAgV2hlbiB0aGlzIHByb3BlcnR5IGlzIGZhbHNlLCBtZW1vcnkgdXNhZ2VcbiAgICogYW5kIHRleHR1cmUgdXBsb2FkIHRpbWUgYXJlIHJlZHVjZWQuXG4gICAqIEBtZW1iZXJvZiBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICBoYXNBbHBoYUNoYW5uZWw6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aWxlUHJvdmlkZXIuaGFzQWxwaGFDaGFubmVsO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgb3Igc2V0cyBhIHZhbHVlIGluZGljYXRpbmcgd2hldGhlciBmZWF0dXJlIHBpY2tpbmcgaXMgZW5hYmxlZC4gIElmIHRydWUsIHtAbGluayBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyI3BpY2tGZWF0dXJlc30gd2lsbFxuICAgKiBpbnZva2UgdGhlIDxjb2RlPkdldEZlYXR1cmVJbmZvPC9jb2RlPiBzZXJ2aWNlIG9uIHRoZSBXTVMgc2VydmVyIGFuZCBhdHRlbXB0IHRvIGludGVycHJldCB0aGUgZmVhdHVyZXMgaW5jbHVkZWQgaW4gdGhlIHJlc3BvbnNlLiAgSWYgZmFsc2UsXG4gICAqIHtAbGluayBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyI3BpY2tGZWF0dXJlc30gd2lsbCBpbW1lZGlhdGVseSByZXR1cm4gdW5kZWZpbmVkIChpbmRpY2F0aW5nIG5vIHBpY2thYmxlXG4gICAqIGZlYXR1cmVzKSB3aXRob3V0IGNvbW11bmljYXRpbmcgd2l0aCB0aGUgc2VydmVyLiAgU2V0IHRoaXMgcHJvcGVydHkgdG8gZmFsc2UgaWYgeW91IGtub3cgeW91ciBkYXRhXG4gICAqIHNvdXJjZSBkb2VzIG5vdCBzdXBwb3J0IHBpY2tpbmcgZmVhdHVyZXMgb3IgaWYgeW91IGRvbid0IHdhbnQgdGhpcyBwcm92aWRlcidzIGZlYXR1cmVzIHRvIGJlIHBpY2thYmxlLlxuICAgKiBAbWVtYmVyb2YgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZWZhdWx0IHRydWVcbiAgICovXG4gIGVuYWJsZVBpY2tGZWF0dXJlczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3RpbGVQcm92aWRlci5lbmFibGVQaWNrRmVhdHVyZXM7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIChlbmFibGVQaWNrRmVhdHVyZXMpIHtcbiAgICAgIHRoaXMuX3RpbGVQcm92aWRlci5lbmFibGVQaWNrRmVhdHVyZXMgPSBlbmFibGVQaWNrRmVhdHVyZXM7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogR2V0cyBvciBzZXRzIGEgY2xvY2sgdGhhdCBpcyB1c2VkIHRvIGdldCBrZWVwIHRoZSB0aW1lIHVzZWQgZm9yIHRpbWUgZHluYW1pYyBwYXJhbWV0ZXJzLlxuICAgKiBAbWVtYmVyb2YgV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGVcbiAgICogQHR5cGUge0Nsb2NrfVxuICAgKi9cbiAgY2xvY2s6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90aW1lRHluYW1pY0ltYWdlcnkuY2xvY2s7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgdGhpcy5fdGltZUR5bmFtaWNJbWFnZXJ5LmNsb2NrID0gdmFsdWU7XG4gICAgfSxcbiAgfSxcbiAgLyoqXG4gICAqIEdldHMgb3Igc2V0cyBhIHRpbWUgaW50ZXJ2YWwgY29sbGVjdGlvbiB0aGF0IGlzIHVzZWQgdG8gZ2V0IHRpbWUgZHluYW1pYyBwYXJhbWV0ZXJzLiBUaGUgZGF0YSBvZiBlYWNoXG4gICAqIFRpbWVJbnRlcnZhbCBpcyBhbiBvYmplY3QgY29udGFpbmluZyB0aGUga2V5cyBhbmQgdmFsdWVzIG9mIHRoZSBwcm9wZXJ0aWVzIHRoYXQgYXJlIHVzZWQgZHVyaW5nXG4gICAqIHRpbGUgcmVxdWVzdHMuXG4gICAqIEBtZW1iZXJvZiBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7VGltZUludGVydmFsQ29sbGVjdGlvbn1cbiAgICovXG4gIHRpbWVzOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdGltZUR5bmFtaWNJbWFnZXJ5LnRpbWVzO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIHRoaXMuX3RpbWVEeW5hbWljSW1hZ2VyeS50aW1lcyA9IHZhbHVlO1xuICAgIH0sXG4gIH0sXG59KTtcblxuLyoqXG4gKiBHZXRzIHRoZSBjcmVkaXRzIHRvIGJlIGRpc3BsYXllZCB3aGVuIGEgZ2l2ZW4gdGlsZSBpcyBkaXNwbGF5ZWQuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IHggVGhlIHRpbGUgWCBjb29yZGluYXRlLlxuICogQHBhcmFtIHtOdW1iZXJ9IHkgVGhlIHRpbGUgWSBjb29yZGluYXRlLlxuICogQHBhcmFtIHtOdW1iZXJ9IGxldmVsIFRoZSB0aWxlIGxldmVsO1xuICogQHJldHVybnMge0NyZWRpdFtdfSBUaGUgY3JlZGl0cyB0byBiZSBkaXNwbGF5ZWQgd2hlbiB0aGUgdGlsZSBpcyBkaXNwbGF5ZWQuXG4gKlxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IDxjb2RlPmdldFRpbGVDcmVkaXRzPC9jb2RlPiBtdXN0IG5vdCBiZSBjYWxsZWQgYmVmb3JlIHRoZSBpbWFnZXJ5IHByb3ZpZGVyIGlzIHJlYWR5LlxuICovXG5XZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLnByb3RvdHlwZS5nZXRUaWxlQ3JlZGl0cyA9IGZ1bmN0aW9uICh4LCB5LCBsZXZlbCkge1xuICByZXR1cm4gdGhpcy5fdGlsZVByb3ZpZGVyLmdldFRpbGVDcmVkaXRzKHgsIHksIGxldmVsKTtcbn07XG5cbi8qKlxuICogUmVxdWVzdHMgdGhlIGltYWdlIGZvciBhIGdpdmVuIHRpbGUuICBUaGlzIGZ1bmN0aW9uIHNob3VsZFxuICogbm90IGJlIGNhbGxlZCBiZWZvcmUge0BsaW5rIFdlYk1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIjcmVhZHl9IHJldHVybnMgdHJ1ZS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0geCBUaGUgdGlsZSBYIGNvb3JkaW5hdGUuXG4gKiBAcGFyYW0ge051bWJlcn0geSBUaGUgdGlsZSBZIGNvb3JkaW5hdGUuXG4gKiBAcGFyYW0ge051bWJlcn0gbGV2ZWwgVGhlIHRpbGUgbGV2ZWwuXG4gKiBAcGFyYW0ge1JlcXVlc3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdCBvYmplY3QuIEludGVuZGVkIGZvciBpbnRlcm5hbCB1c2Ugb25seS5cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxIVE1MSW1hZ2VFbGVtZW50fEhUTUxDYW52YXNFbGVtZW50Pnx1bmRlZmluZWR9IEEgcHJvbWlzZSBmb3IgdGhlIGltYWdlIHRoYXQgd2lsbCByZXNvbHZlIHdoZW4gdGhlIGltYWdlIGlzIGF2YWlsYWJsZSwgb3JcbiAqICAgICAgICAgIHVuZGVmaW5lZCBpZiB0aGVyZSBhcmUgdG9vIG1hbnkgYWN0aXZlIHJlcXVlc3RzIHRvIHRoZSBzZXJ2ZXIsIGFuZCB0aGUgcmVxdWVzdFxuICogICAgICAgICAgc2hvdWxkIGJlIHJldHJpZWQgbGF0ZXIuICBUaGUgcmVzb2x2ZWQgaW1hZ2UgbWF5IGJlIGVpdGhlciBhblxuICogICAgICAgICAgSW1hZ2Ugb3IgYSBDYW52YXMgRE9NIG9iamVjdC5cbiAqXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gPGNvZGU+cmVxdWVzdEltYWdlPC9jb2RlPiBtdXN0IG5vdCBiZSBjYWxsZWQgYmVmb3JlIHRoZSBpbWFnZXJ5IHByb3ZpZGVyIGlzIHJlYWR5LlxuICovXG5XZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLnByb3RvdHlwZS5yZXF1ZXN0SW1hZ2UgPSBmdW5jdGlvbiAoXG4gIHgsXG4gIHksXG4gIGxldmVsLFxuICByZXF1ZXN0XG4pIHtcbiAgdmFyIHJlc3VsdDtcbiAgdmFyIHRpbWVEeW5hbWljSW1hZ2VyeSA9IHRoaXMuX3RpbWVEeW5hbWljSW1hZ2VyeTtcbiAgdmFyIGN1cnJlbnRJbnRlcnZhbDtcblxuICAvLyBUcnkgYW5kIGxvYWQgZnJvbSBjYWNoZVxuICBpZiAoZGVmaW5lZCh0aW1lRHluYW1pY0ltYWdlcnkpKSB7XG4gICAgY3VycmVudEludGVydmFsID0gdGltZUR5bmFtaWNJbWFnZXJ5LmN1cnJlbnRJbnRlcnZhbDtcbiAgICByZXN1bHQgPSB0aW1lRHluYW1pY0ltYWdlcnkuZ2V0RnJvbUNhY2hlKHgsIHksIGxldmVsLCByZXF1ZXN0KTtcbiAgfVxuXG4gIC8vIENvdWxkbid0IGxvYWQgZnJvbSBjYWNoZVxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHJlc3VsdCA9IHJlcXVlc3RJbWFnZSh0aGlzLCB4LCB5LCBsZXZlbCwgcmVxdWVzdCwgY3VycmVudEludGVydmFsKTtcbiAgfVxuXG4gIC8vIElmIHdlIGFyZSBhcHByb2FjaGluZyBhbiBpbnRlcnZhbCwgcHJlbG9hZCB0aGlzIHRpbGUgaW4gdGhlIG5leHQgaW50ZXJ2YWxcbiAgaWYgKGRlZmluZWQocmVzdWx0KSAmJiBkZWZpbmVkKHRpbWVEeW5hbWljSW1hZ2VyeSkpIHtcbiAgICB0aW1lRHluYW1pY0ltYWdlcnkuY2hlY2tBcHByb2FjaGluZ0ludGVydmFsKHgsIHksIGxldmVsLCByZXF1ZXN0KTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIEFzeW5jaHJvbm91c2x5IGRldGVybWluZXMgd2hhdCBmZWF0dXJlcywgaWYgYW55LCBhcmUgbG9jYXRlZCBhdCBhIGdpdmVuIGxvbmdpdHVkZSBhbmQgbGF0aXR1ZGUgd2l0aGluXG4gKiBhIHRpbGUuICBUaGlzIGZ1bmN0aW9uIHNob3VsZCBub3QgYmUgY2FsbGVkIGJlZm9yZSB7QGxpbmsgSW1hZ2VyeVByb3ZpZGVyI3JlYWR5fSByZXR1cm5zIHRydWUuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IHggVGhlIHRpbGUgWCBjb29yZGluYXRlLlxuICogQHBhcmFtIHtOdW1iZXJ9IHkgVGhlIHRpbGUgWSBjb29yZGluYXRlLlxuICogQHBhcmFtIHtOdW1iZXJ9IGxldmVsIFRoZSB0aWxlIGxldmVsLlxuICogQHBhcmFtIHtOdW1iZXJ9IGxvbmdpdHVkZSBUaGUgbG9uZ2l0dWRlIGF0IHdoaWNoIHRvIHBpY2sgZmVhdHVyZXMuXG4gKiBAcGFyYW0ge051bWJlcn0gbGF0aXR1ZGUgIFRoZSBsYXRpdHVkZSBhdCB3aGljaCB0byBwaWNrIGZlYXR1cmVzLlxuICogQHJldHVybiB7UHJvbWlzZS48SW1hZ2VyeUxheWVyRmVhdHVyZUluZm9bXT58dW5kZWZpbmVkfSBBIHByb21pc2UgZm9yIHRoZSBwaWNrZWQgZmVhdHVyZXMgdGhhdCB3aWxsIHJlc29sdmUgd2hlbiB0aGUgYXN5bmNocm9ub3VzXG4gKiAgICAgICAgICAgICAgICAgICBwaWNraW5nIGNvbXBsZXRlcy4gIFRoZSByZXNvbHZlZCB2YWx1ZSBpcyBhbiBhcnJheSBvZiB7QGxpbmsgSW1hZ2VyeUxheWVyRmVhdHVyZUluZm99XG4gKiAgICAgICAgICAgICAgICAgICBpbnN0YW5jZXMuICBUaGUgYXJyYXkgbWF5IGJlIGVtcHR5IGlmIG5vIGZlYXR1cmVzIGFyZSBmb3VuZCBhdCB0aGUgZ2l2ZW4gbG9jYXRpb24uXG4gKlxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IDxjb2RlPnBpY2tGZWF0dXJlczwvY29kZT4gbXVzdCBub3QgYmUgY2FsbGVkIGJlZm9yZSB0aGUgaW1hZ2VyeSBwcm92aWRlciBpcyByZWFkeS5cbiAqL1xuV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5wcm90b3R5cGUucGlja0ZlYXR1cmVzID0gZnVuY3Rpb24gKFxuICB4LFxuICB5LFxuICBsZXZlbCxcbiAgbG9uZ2l0dWRlLFxuICBsYXRpdHVkZVxuKSB7XG4gIHZhciB0aW1lRHluYW1pY0ltYWdlcnkgPSB0aGlzLl90aW1lRHluYW1pY0ltYWdlcnk7XG4gIHZhciBjdXJyZW50SW50ZXJ2YWwgPSBkZWZpbmVkKHRpbWVEeW5hbWljSW1hZ2VyeSlcbiAgICA/IHRpbWVEeW5hbWljSW1hZ2VyeS5jdXJyZW50SW50ZXJ2YWxcbiAgICA6IHVuZGVmaW5lZDtcblxuICByZXR1cm4gcGlja0ZlYXR1cmVzKHRoaXMsIHgsIHksIGxldmVsLCBsb25naXR1ZGUsIGxhdGl0dWRlLCBjdXJyZW50SW50ZXJ2YWwpO1xufTtcblxuLyoqXG4gKiBUaGUgZGVmYXVsdCBwYXJhbWV0ZXJzIHRvIGluY2x1ZGUgaW4gdGhlIFdNUyBVUkwgdG8gb2J0YWluIGltYWdlcy4gIFRoZSB2YWx1ZXMgYXJlIGFzIGZvbGxvd3M6XG4gKiAgICBzZXJ2aWNlPVdNU1xuICogICAgdmVyc2lvbj0xLjEuMVxuICogICAgcmVxdWVzdD1HZXRNYXBcbiAqICAgIHN0eWxlcz1cbiAqICAgIGZvcm1hdD1pbWFnZS9qcGVnXG4gKlxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7T2JqZWN0fVxuICovXG5XZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLkRlZmF1bHRQYXJhbWV0ZXJzID0gT2JqZWN0LmZyZWV6ZSh7XG4gIHNlcnZpY2U6IFwiV01TXCIsXG4gIHZlcnNpb246IFwiMS4xLjFcIixcbiAgcmVxdWVzdDogXCJHZXRNYXBcIixcbiAgc3R5bGVzOiBcIlwiLFxuICBmb3JtYXQ6IFwiaW1hZ2UvanBlZ1wiLFxufSk7XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgcGFyYW1ldGVycyB0byBpbmNsdWRlIGluIHRoZSBXTVMgVVJMIHRvIGdldCBmZWF0dXJlIGluZm9ybWF0aW9uLiAgVGhlIHZhbHVlcyBhcmUgYXMgZm9sbG93czpcbiAqICAgICBzZXJ2aWNlPVdNU1xuICogICAgIHZlcnNpb249MS4xLjFcbiAqICAgICByZXF1ZXN0PUdldEZlYXR1cmVJbmZvXG4gKlxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7T2JqZWN0fVxuICovXG5XZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLkdldEZlYXR1cmVJbmZvRGVmYXVsdFBhcmFtZXRlcnMgPSBPYmplY3QuZnJlZXplKHtcbiAgc2VydmljZTogXCJXTVNcIixcbiAgdmVyc2lvbjogXCIxLjEuMVwiLFxuICByZXF1ZXN0OiBcIkdldEZlYXR1cmVJbmZvXCIsXG59KTtcblxuV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5EZWZhdWx0R2V0RmVhdHVyZUluZm9Gb3JtYXRzID0gT2JqZWN0LmZyZWV6ZShbXG4gIE9iamVjdC5mcmVlemUobmV3IEdldEZlYXR1cmVJbmZvRm9ybWF0KFwianNvblwiLCBcImFwcGxpY2F0aW9uL2pzb25cIikpLFxuICBPYmplY3QuZnJlZXplKG5ldyBHZXRGZWF0dXJlSW5mb0Zvcm1hdChcInhtbFwiLCBcInRleHQveG1sXCIpKSxcbiAgT2JqZWN0LmZyZWV6ZShuZXcgR2V0RmVhdHVyZUluZm9Gb3JtYXQoXCJ0ZXh0XCIsIFwidGV4dC9odG1sXCIpKSxcbl0pO1xuXG5mdW5jdGlvbiBvYmplY3RUb0xvd2VyY2FzZShvYmopIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICByZXN1bHRba2V5LnRvTG93ZXJDYXNlKCldID0gb2JqW2tleV07XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgZGVmYXVsdCBXZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///85200\n')},15583:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8182);\n/* harmony import */ var _Core_Credit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52975);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Event_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14459);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(96190);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(68985);\n/* harmony import */ var _Core_WebMercatorTilingScheme_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(42423);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13222);\n/* harmony import */ var _ImageryProvider_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(95451);\n/* harmony import */ var _TimeDynamicImagery_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(90299);\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar defaultParameters = Object.freeze({\n  service: "WMTS",\n  version: "1.0.0",\n  request: "GetTile",\n});\n\n/**\n * @typedef {Object} WebMapTileServiceImageryProvider.ConstructorOptions\n *\n * Initialization options for the WebMapTileServiceImageryProvider constructor\n *\n * @property {Resource|String} url The base URL for the WMTS GetTile operation (for KVP-encoded requests) or the tile-URL template (for RESTful requests). The tile-URL template should contain the following variables: &#123;style&#125;, &#123;TileMatrixSet&#125;, &#123;TileMatrix&#125;, &#123;TileRow&#125;, &#123;TileCol&#125;. The first two are optional if actual values are hardcoded or not required by the server. The &#123;s&#125; keyword may be used to specify subdomains.\n * @property {String} [format=\'image/jpeg\'] The MIME type for images to retrieve from the server.\n * @property {String} layer The layer name for WMTS requests.\n * @property {String} style The style name for WMTS requests.\n * @property {String} tileMatrixSetID The identifier of the TileMatrixSet to use for WMTS requests.\n * @property {Array} [tileMatrixLabels] A list of identifiers in the TileMatrix to use for WMTS requests, one per TileMatrix level.\n * @property {Clock} [clock] A Clock instance that is used when determining the value for the time dimension. Required when `times` is specified.\n * @property {TimeIntervalCollection} [times] TimeIntervalCollection with its <code>data</code> property being an object containing time dynamic dimension and their values.\n * @property {Object} [dimensions] A object containing static dimensions and their values.\n * @property {Number} [tileWidth=256] The tile width in pixels.\n * @property {Number} [tileHeight=256] The tile height in pixels.\n * @property {TilingScheme} [tilingScheme] The tiling scheme corresponding to the organization of the tiles in the TileMatrixSet.\n * @property {Rectangle} [rectangle=Rectangle.MAX_VALUE] The rectangle covered by the layer.\n * @property {Number} [minimumLevel=0] The minimum level-of-detail supported by the imagery provider.\n * @property {Number} [maximumLevel] The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n * @property {Ellipsoid} [ellipsoid] The ellipsoid.  If not specified, the WGS84 ellipsoid is used.\n * @property {Credit|String} [credit] A credit for the data source, which is displayed on the canvas.\n * @property {String|String[]} [subdomains=\'abc\'] The subdomains to use for the <code>{s}</code> placeholder in the URL template.\n *                          If this parameter is a single string, each character in the string is a subdomain.  If it is\n *                          an array, each element in the array is a subdomain.\n */\n\n/**\n * Provides tiled imagery served by {@link http://www.opengeospatial.org/standards/wmts|WMTS 1.0.0} compliant servers.\n * This provider supports HTTP KVP-encoded and RESTful GetTile requests, but does not yet support the SOAP encoding.\n *\n * @alias WebMapTileServiceImageryProvider\n * @constructor\n *\n * @param {WebMapTileServiceImageryProvider.ConstructorOptions} options Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Web%20Map%20Tile%20Service%20with%20Time.html|Cesium Sandcastle Web Map Tile Service with Time Demo}\n *\n * @example\n * // Example 1. USGS shaded relief tiles (KVP)\n * var shadedRelief1 = new Cesium.WebMapTileServiceImageryProvider({\n *     url : \'http://basemap.nationalmap.gov/arcgis/rest/services/USGSShadedReliefOnly/MapServer/WMTS\',\n *     layer : \'USGSShadedReliefOnly\',\n *     style : \'default\',\n *     format : \'image/jpeg\',\n *     tileMatrixSetID : \'default028mm\',\n *     // tileMatrixLabels : [\'default028mm:0\', \'default028mm:1\', \'default028mm:2\' ...],\n *     maximumLevel: 19,\n *     credit : new Cesium.Credit(\'U. S. Geological Survey\')\n * });\n * viewer.imageryLayers.addImageryProvider(shadedRelief1);\n *\n * @example\n * // Example 2. USGS shaded relief tiles (RESTful)\n * var shadedRelief2 = new Cesium.WebMapTileServiceImageryProvider({\n *     url : \'http://basemap.nationalmap.gov/arcgis/rest/services/USGSShadedReliefOnly/MapServer/WMTS/tile/1.0.0/USGSShadedReliefOnly/{Style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.jpg\',\n *     layer : \'USGSShadedReliefOnly\',\n *     style : \'default\',\n *     format : \'image/jpeg\',\n *     tileMatrixSetID : \'default028mm\',\n *     maximumLevel: 19,\n *     credit : new Cesium.Credit(\'U. S. Geological Survey\')\n * });\n * viewer.imageryLayers.addImageryProvider(shadedRelief2);\n *\n * @example\n * // Example 3. NASA time dynamic weather data (RESTful)\n * var times = Cesium.TimeIntervalCollection.fromIso8601({\n *     iso8601: \'2015-07-30/2017-06-16/P1D\',\n *     dataCallback: function dataCallback(interval, index) {\n *         return {\n *             Time: Cesium.JulianDate.toIso8601(interval.start)\n *         };\n *     }\n * });\n * var weather = new Cesium.WebMapTileServiceImageryProvider({\n *     url : \'https://gibs.earthdata.nasa.gov/wmts/epsg4326/best/AMSR2_Snow_Water_Equivalent/default/{Time}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png\',\n *     layer : \'AMSR2_Snow_Water_Equivalent\',\n *     style : \'default\',\n *     tileMatrixSetID : \'2km\',\n *     maximumLevel : 5,\n *     format : \'image/png\',\n *     clock: clock,\n *     times: times,\n *     credit : new Cesium.Credit(\'NASA Global Imagery Browse Services for EOSDIS\')\n * });\n * viewer.imageryLayers.addImageryProvider(weather);\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see OpenStreetMapImageryProvider\n * @see SingleTileImageryProvider\n * @see TileMapServiceImageryProvider\n * @see WebMapServiceImageryProvider\n * @see UrlTemplateImageryProvider\n */\nfunction WebMapTileServiceImageryProvider(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.url)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("options.url is required.");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.layer)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("options.layer is required.");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.style)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("options.style is required.");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.tileMatrixSetID)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("options.tileMatrixSetID is required.");\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.times) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.clock)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "options.times was specified, so options.clock is required."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  /**\n   * The default alpha blending value of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the night side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultNightAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the day side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultDayAlpha = undefined;\n\n  /**\n   * The default brightness of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0\n   * makes the imagery darker while greater than 1.0 makes it brighter.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultBrightness = undefined;\n\n  /**\n   * The default contrast of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0 reduces\n   * the contrast while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultContrast = undefined;\n\n  /**\n   * The default hue of this provider in radians. 0.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultHue = undefined;\n\n  /**\n   * The default saturation of this provider. 1.0 uses the unmodified imagery color. Less than 1.0 reduces the\n   * saturation while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultSaturation = undefined;\n\n  /**\n   * The default gamma correction to apply to this provider.  1.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultGamma = undefined;\n\n  /**\n   * The default texture minification filter to apply to this provider.\n   *\n   * @type {TextureMinificationFilter}\n   * @default undefined\n   */\n  this.defaultMinificationFilter = undefined;\n\n  /**\n   * The default texture magnification filter to apply to this provider.\n   *\n   * @type {TextureMagnificationFilter}\n   * @default undefined\n   */\n  this.defaultMagnificationFilter = undefined;\n\n  var resource = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].createIfNeeded */ .Z.createIfNeeded(options.url);\n\n  var style = options.style;\n  var tileMatrixSetID = options.tileMatrixSetID;\n  var url = resource.url;\n\n  var bracketMatch = url.match(/{/g);\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(bracketMatch) ||\n    (bracketMatch.length === 1 && /{s}/.test(url))\n  ) {\n    resource.setQueryParameters(defaultParameters);\n    this._useKvp = true;\n  } else {\n    var templateValues = {\n      style: style,\n      Style: style,\n      TileMatrixSet: tileMatrixSetID,\n    };\n\n    resource.setTemplateValues(templateValues);\n    this._useKvp = false;\n  }\n\n  this._resource = resource;\n  this._layer = options.layer;\n  this._style = style;\n  this._tileMatrixSetID = tileMatrixSetID;\n  this._tileMatrixLabels = options.tileMatrixLabels;\n  this._format = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.format, "image/jpeg");\n  this._tileDiscardPolicy = options.tileDiscardPolicy;\n\n  this._tilingScheme = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.tilingScheme)\n    ? options.tilingScheme\n    : new _Core_WebMercatorTilingScheme_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({ ellipsoid: options.ellipsoid });\n  this._tileWidth = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.tileWidth, 256);\n  this._tileHeight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.tileHeight, 256);\n\n  this._minimumLevel = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.minimumLevel, 0);\n  this._maximumLevel = options.maximumLevel;\n\n  this._rectangle = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.rectangle,\n    this._tilingScheme.rectangle\n  );\n  this._dimensions = options.dimensions;\n\n  var that = this;\n  this._reload = undefined;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.times)) {\n    this._timeDynamicImagery = new _TimeDynamicImagery_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n      clock: options.clock,\n      times: options.times,\n      requestImageFunction: function (x, y, level, request, interval) {\n        return requestImage(that, x, y, level, request, interval);\n      },\n      reloadFunction: function () {\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(that._reload)) {\n          that._reload();\n        }\n      },\n    });\n  }\n\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].resolve */ .Z.resolve(true);\n\n  // Check the number of tiles at the minimum level.  If it\'s more than four,\n  // throw an exception, because starting at the higher minimum\n  // level will cause too many tiles to be downloaded and rendered.\n  var swTile = this._tilingScheme.positionToTileXY(\n    _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].southwest */ .Z.southwest(this._rectangle),\n    this._minimumLevel\n  );\n  var neTile = this._tilingScheme.positionToTileXY(\n    _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].northeast */ .Z.northeast(this._rectangle),\n    this._minimumLevel\n  );\n  var tileCount =\n    (Math.abs(neTile.x - swTile.x) + 1) * (Math.abs(neTile.y - swTile.y) + 1);\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (tileCount > 4) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "The imagery provider\'s rectangle and minimumLevel indicate that there are " +\n        tileCount +\n        " tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this._errorEvent = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\n  var credit = options.credit;\n  this._credit = typeof credit === "string" ? new _Core_Credit_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(credit) : credit;\n\n  this._subdomains = options.subdomains;\n  if (Array.isArray(this._subdomains)) {\n    this._subdomains = this._subdomains.slice();\n  } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(this._subdomains) && this._subdomains.length > 0) {\n    this._subdomains = this._subdomains.split("");\n  } else {\n    this._subdomains = ["a", "b", "c"];\n  }\n}\n\nfunction requestImage(imageryProvider, col, row, level, request, interval) {\n  var labels = imageryProvider._tileMatrixLabels;\n  var tileMatrix = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(labels) ? labels[level] : level.toString();\n  var subdomains = imageryProvider._subdomains;\n  var staticDimensions = imageryProvider._dimensions;\n  var dynamicIntervalData = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(interval) ? interval.data : undefined;\n\n  var resource;\n  var templateValues;\n  if (!imageryProvider._useKvp) {\n    templateValues = {\n      TileMatrix: tileMatrix,\n      TileRow: row.toString(),\n      TileCol: col.toString(),\n      s: subdomains[(col + row + level) % subdomains.length],\n    };\n\n    resource = imageryProvider._resource.getDerivedResource({\n      request: request,\n    });\n    resource.setTemplateValues(templateValues);\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(staticDimensions)) {\n      resource.setTemplateValues(staticDimensions);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(dynamicIntervalData)) {\n      resource.setTemplateValues(dynamicIntervalData);\n    }\n  } else {\n    // build KVP request\n    var query = {};\n    query.tilematrix = tileMatrix;\n    query.layer = imageryProvider._layer;\n    query.style = imageryProvider._style;\n    query.tilerow = row;\n    query.tilecol = col;\n    query.tilematrixset = imageryProvider._tileMatrixSetID;\n    query.format = imageryProvider._format;\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(staticDimensions)) {\n      query = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(query, staticDimensions);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(dynamicIntervalData)) {\n      query = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(query, dynamicIntervalData);\n    }\n\n    templateValues = {\n      s: subdomains[(col + row + level) % subdomains.length],\n    };\n\n    resource = imageryProvider._resource.getDerivedResource({\n      queryParameters: query,\n      request: request,\n    });\n    resource.setTemplateValues(templateValues);\n  }\n\n  return _ImageryProvider_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].loadImage */ .Z.loadImage(imageryProvider, resource);\n}\n\nObject.defineProperties(WebMapTileServiceImageryProvider.prototype, {\n  /**\n   * Gets the URL of the service hosting the imagery.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {String}\n   * @readonly\n   */\n  url: {\n    get: function () {\n      return this._resource.url;\n    },\n  },\n\n  /**\n   * Gets the proxy used by this provider.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Proxy}\n   * @readonly\n   */\n  proxy: {\n    get: function () {\n      return this._resource.proxy;\n    },\n  },\n\n  /**\n   * Gets the width of each tile, in pixels. This function should\n   * not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  tileWidth: {\n    get: function () {\n      return this._tileWidth;\n    },\n  },\n\n  /**\n   * Gets the height of each tile, in pixels.  This function should\n   * not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  tileHeight: {\n    get: function () {\n      return this._tileHeight;\n    },\n  },\n\n  /**\n   * Gets the maximum level-of-detail that can be requested.  This function should\n   * not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Number|undefined}\n   * @readonly\n   */\n  maximumLevel: {\n    get: function () {\n      return this._maximumLevel;\n    },\n  },\n\n  /**\n   * Gets the minimum level-of-detail that can be requested.  This function should\n   * not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  minimumLevel: {\n    get: function () {\n      return this._minimumLevel;\n    },\n  },\n\n  /**\n   * Gets the tiling scheme used by this provider.  This function should\n   * not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {TilingScheme}\n   * @readonly\n   */\n  tilingScheme: {\n    get: function () {\n      return this._tilingScheme;\n    },\n  },\n\n  /**\n   * Gets the rectangle, in radians, of the imagery provided by this instance.  This function should\n   * not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Rectangle}\n   * @readonly\n   */\n  rectangle: {\n    get: function () {\n      return this._rectangle;\n    },\n  },\n\n  /**\n   * Gets the tile discard policy.  If not undefined, the discard policy is responsible\n   * for filtering out "missing" tiles via its shouldDiscardImage function.  If this function\n   * returns undefined, no tiles are filtered.  This function should\n   * not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {TileDiscardPolicy}\n   * @readonly\n   */\n  tileDiscardPolicy: {\n    get: function () {\n      return this._tileDiscardPolicy;\n    },\n  },\n\n  /**\n   * Gets an event that is raised when the imagery provider encounters an asynchronous error.  By subscribing\n   * to the event, you will be notified of the error and can potentially recover from it.  Event listeners\n   * are passed an instance of {@link TileProviderError}.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Event}\n   * @readonly\n   */\n  errorEvent: {\n    get: function () {\n      return this._errorEvent;\n    },\n  },\n\n  /**\n   * Gets the mime type of images returned by this imagery provider.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {String}\n   * @readonly\n   */\n  format: {\n    get: function () {\n      return this._format;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the provider is ready for use.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  ready: {\n    value: true,\n  },\n\n  /**\n   * Gets a promise that resolves to true when the provider is ready for use.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Promise.<Boolean>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise;\n    },\n  },\n\n  /**\n   * Gets the credit to display when this imagery provider is active.  Typically this is used to credit\n   * the source of the imagery.  This function should not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Credit}\n   * @readonly\n   */\n  credit: {\n    get: function () {\n      return this._credit;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the images provided by this imagery provider\n   * include an alpha channel.  If this property is false, an alpha channel, if present, will\n   * be ignored.  If this property is true, any images without an alpha channel will be treated\n   * as if their alpha is 1.0 everywhere.  When this property is false, memory usage\n   * and texture upload time are reduced.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  hasAlphaChannel: {\n    get: function () {\n      return true;\n    },\n  },\n  /**\n   * Gets or sets a clock that is used to get keep the time used for time dynamic parameters.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Clock}\n   */\n  clock: {\n    get: function () {\n      return this._timeDynamicImagery.clock;\n    },\n    set: function (value) {\n      this._timeDynamicImagery.clock = value;\n    },\n  },\n  /**\n   * Gets or sets a time interval collection that is used to get time dynamic parameters. The data of each\n   * TimeInterval is an object containing the keys and values of the properties that are used during\n   * tile requests.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {TimeIntervalCollection}\n   */\n  times: {\n    get: function () {\n      return this._timeDynamicImagery.times;\n    },\n    set: function (value) {\n      this._timeDynamicImagery.times = value;\n    },\n  },\n  /**\n   * Gets or sets an object that contains static dimensions and their values.\n   * @memberof WebMapTileServiceImageryProvider.prototype\n   * @type {Object}\n   */\n  dimensions: {\n    get: function () {\n      return this._dimensions;\n    },\n    set: function (value) {\n      if (this._dimensions !== value) {\n        this._dimensions = value;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(this._reload)) {\n          this._reload();\n        }\n      }\n    },\n  },\n});\n\n/**\n * Gets the credits to be displayed when a given tile is displayed.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level;\n * @returns {Credit[]} The credits to be displayed when the tile is displayed.\n *\n * @exception {DeveloperError} <code>getTileCredits</code> must not be called before the imagery provider is ready.\n */\nWebMapTileServiceImageryProvider.prototype.getTileCredits = function (\n  x,\n  y,\n  level\n) {\n  return undefined;\n};\n\n/**\n * Requests the image for a given tile.  This function should\n * not be called before {@link WebMapTileServiceImageryProvider#ready} returns true.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Request} [request] The request object. Intended for internal use only.\n * @returns {Promise.<HTMLImageElement|HTMLCanvasElement>|undefined} A promise for the image that will resolve when the image is available, or\n *          undefined if there are too many active requests to the server, and the request\n *          should be retried later.  The resolved image may be either an\n *          Image or a Canvas DOM object.\n *\n * @exception {DeveloperError} <code>requestImage</code> must not be called before the imagery provider is ready.\n */\nWebMapTileServiceImageryProvider.prototype.requestImage = function (\n  x,\n  y,\n  level,\n  request\n) {\n  var result;\n  var timeDynamicImagery = this._timeDynamicImagery;\n  var currentInterval;\n\n  // Try and load from cache\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(timeDynamicImagery)) {\n    currentInterval = timeDynamicImagery.currentInterval;\n    result = timeDynamicImagery.getFromCache(x, y, level, request);\n  }\n\n  // Couldn\'t load from cache\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(result)) {\n    result = requestImage(this, x, y, level, request, currentInterval);\n  }\n\n  // If we are approaching an interval, preload this tile in the next interval\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(result) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(timeDynamicImagery)) {\n    timeDynamicImagery.checkApproachingInterval(x, y, level, request);\n  }\n\n  return result;\n};\n\n/**\n * Picking features is not currently supported by this imagery provider, so this function simply returns\n * undefined.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Number} longitude The longitude at which to pick features.\n * @param {Number} latitude  The latitude at which to pick features.\n * @return {Promise.<ImageryLayerFeatureInfo[]>|undefined} A promise for the picked features that will resolve when the asynchronous\n *                   picking completes.  The resolved value is an array of {@link ImageryLayerFeatureInfo}\n *                   instances.  The array may be empty if no features are found at the given location.\n *                   It may also be undefined if picking is not supported.\n */\nWebMapTileServiceImageryProvider.prototype.pickFeatures = function (\n  x,\n  y,\n  level,\n  longitude,\n  latitude\n) {\n  return undefined;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (WebMapTileServiceImageryProvider);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15583\n')},64585:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(96190);\n/* harmony import */ var _Core_sampleTerrainMostDetailed_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28325);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13222);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(89917);\n\n\n\n\n\n\n/**\n * Computes the final camera location to view a rectangle adjusted for the current terrain.\n * If the terrain does not support availability, the height above the ellipsoid is used.\n *\n * @param {Rectangle} rectangle The rectangle being zoomed to.\n * @param {Scene} scene The scene being used.\n *\n * @returns {Cartographic} The optimal location to place the camera so that the entire rectangle is in view.\n *\n * @private\n */\nfunction computeFlyToLocationForRectangle(rectangle, scene) {\n  var terrainProvider = scene.terrainProvider;\n  var mapProjection = scene.mapProjection;\n  var ellipsoid = mapProjection.ellipsoid;\n\n  var positionWithoutTerrain;\n  var tmp = scene.camera.getRectangleCameraCoordinates(rectangle);\n  if (scene.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    positionWithoutTerrain = ellipsoid.cartesianToCartographic(tmp);\n  } else {\n    positionWithoutTerrain = mapProjection.unproject(tmp);\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(terrainProvider)) {\n    return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].resolve */ .Z.resolve(positionWithoutTerrain);\n  }\n\n  return terrainProvider.readyPromise.then(function () {\n    var availability = terrainProvider.availability;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(availability) || scene.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].SCENE2D */ .Z.SCENE2D) {\n      return positionWithoutTerrain;\n    }\n\n    var cartographics = [\n      _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].center */ .Z.center(rectangle),\n      _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].southeast */ .Z.southeast(rectangle),\n      _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].southwest */ .Z.southwest(rectangle),\n      _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].northeast */ .Z.northeast(rectangle),\n      _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].northwest */ .Z.northwest(rectangle),\n    ];\n\n    return computeFlyToLocationForRectangle\n      ._sampleTerrainMostDetailed(terrainProvider, cartographics)\n      .then(function (positionsOnTerrain) {\n        var maxHeight = positionsOnTerrain.reduce(function (currentMax, item) {\n          return Math.max(item.height, currentMax);\n        }, -Number.MAX_VALUE);\n\n        var finalPosition = positionWithoutTerrain;\n        finalPosition.height += maxHeight;\n        return finalPosition;\n      });\n  });\n}\n\n//Exposed for testing.\ncomputeFlyToLocationForRectangle._sampleTerrainMostDetailed = _Core_sampleTerrainMostDetailed_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z;\n/* harmony default export */ __webpack_exports__["Z"] = (computeFlyToLocationForRectangle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ1ODUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFDSTtBQUNnQztBQUNwQztBQUNGOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsV0FBVztBQUN0QixXQUFXLE9BQU87QUFDbEI7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQiw4RUFBaUI7QUFDdEM7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQSxPQUFPLHFFQUFPO0FBQ2QsV0FBVyxvRkFBWTtBQUN2Qjs7QUFFQTtBQUNBOztBQUVBLFNBQVMscUVBQU8saUNBQWlDLDhFQUFpQjtBQUNsRTtBQUNBOztBQUVBO0FBQ0EsTUFBTSxpRkFBZ0I7QUFDdEIsTUFBTSx1RkFBbUI7QUFDekIsTUFBTSx1RkFBbUI7QUFDekIsTUFBTSx1RkFBbUI7QUFDekIsTUFBTSx1RkFBbUI7QUFDekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEdBQUc7QUFDSDs7QUFFQTtBQUNBLDhEQUE4RCxtRkFBeUI7QUFDdkYseURBQWUsZ0NBQWdDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvY29tcHV0ZUZseVRvTG9jYXRpb25Gb3JSZWN0YW5nbGUuanM/ZGIxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgUmVjdGFuZ2xlIGZyb20gXCIuLi9Db3JlL1JlY3RhbmdsZS5qc1wiO1xuaW1wb3J0IHNhbXBsZVRlcnJhaW5Nb3N0RGV0YWlsZWQgZnJvbSBcIi4uL0NvcmUvc2FtcGxlVGVycmFpbk1vc3REZXRhaWxlZC5qc1wiO1xuaW1wb3J0IHdoZW4gZnJvbSBcIi4uL1RoaXJkUGFydHkvd2hlbi5qc1wiO1xuaW1wb3J0IFNjZW5lTW9kZSBmcm9tIFwiLi9TY2VuZU1vZGUuanNcIjtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgZmluYWwgY2FtZXJhIGxvY2F0aW9uIHRvIHZpZXcgYSByZWN0YW5nbGUgYWRqdXN0ZWQgZm9yIHRoZSBjdXJyZW50IHRlcnJhaW4uXG4gKiBJZiB0aGUgdGVycmFpbiBkb2VzIG5vdCBzdXBwb3J0IGF2YWlsYWJpbGl0eSwgdGhlIGhlaWdodCBhYm92ZSB0aGUgZWxsaXBzb2lkIGlzIHVzZWQuXG4gKlxuICogQHBhcmFtIHtSZWN0YW5nbGV9IHJlY3RhbmdsZSBUaGUgcmVjdGFuZ2xlIGJlaW5nIHpvb21lZCB0by5cbiAqIEBwYXJhbSB7U2NlbmV9IHNjZW5lIFRoZSBzY2VuZSBiZWluZyB1c2VkLlxuICpcbiAqIEByZXR1cm5zIHtDYXJ0b2dyYXBoaWN9IFRoZSBvcHRpbWFsIGxvY2F0aW9uIHRvIHBsYWNlIHRoZSBjYW1lcmEgc28gdGhhdCB0aGUgZW50aXJlIHJlY3RhbmdsZSBpcyBpbiB2aWV3LlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGNvbXB1dGVGbHlUb0xvY2F0aW9uRm9yUmVjdGFuZ2xlKHJlY3RhbmdsZSwgc2NlbmUpIHtcbiAgdmFyIHRlcnJhaW5Qcm92aWRlciA9IHNjZW5lLnRlcnJhaW5Qcm92aWRlcjtcbiAgdmFyIG1hcFByb2plY3Rpb24gPSBzY2VuZS5tYXBQcm9qZWN0aW9uO1xuICB2YXIgZWxsaXBzb2lkID0gbWFwUHJvamVjdGlvbi5lbGxpcHNvaWQ7XG5cbiAgdmFyIHBvc2l0aW9uV2l0aG91dFRlcnJhaW47XG4gIHZhciB0bXAgPSBzY2VuZS5jYW1lcmEuZ2V0UmVjdGFuZ2xlQ2FtZXJhQ29vcmRpbmF0ZXMocmVjdGFuZ2xlKTtcbiAgaWYgKHNjZW5lLm1vZGUgPT09IFNjZW5lTW9kZS5TQ0VORTNEKSB7XG4gICAgcG9zaXRpb25XaXRob3V0VGVycmFpbiA9IGVsbGlwc29pZC5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyh0bXApO1xuICB9IGVsc2Uge1xuICAgIHBvc2l0aW9uV2l0aG91dFRlcnJhaW4gPSBtYXBQcm9qZWN0aW9uLnVucHJvamVjdCh0bXApO1xuICB9XG5cbiAgaWYgKCFkZWZpbmVkKHRlcnJhaW5Qcm92aWRlcikpIHtcbiAgICByZXR1cm4gd2hlbi5yZXNvbHZlKHBvc2l0aW9uV2l0aG91dFRlcnJhaW4pO1xuICB9XG5cbiAgcmV0dXJuIHRlcnJhaW5Qcm92aWRlci5yZWFkeVByb21pc2UudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGF2YWlsYWJpbGl0eSA9IHRlcnJhaW5Qcm92aWRlci5hdmFpbGFiaWxpdHk7XG5cbiAgICBpZiAoIWRlZmluZWQoYXZhaWxhYmlsaXR5KSB8fCBzY2VuZS5tb2RlID09PSBTY2VuZU1vZGUuU0NFTkUyRCkge1xuICAgICAgcmV0dXJuIHBvc2l0aW9uV2l0aG91dFRlcnJhaW47XG4gICAgfVxuXG4gICAgdmFyIGNhcnRvZ3JhcGhpY3MgPSBbXG4gICAgICBSZWN0YW5nbGUuY2VudGVyKHJlY3RhbmdsZSksXG4gICAgICBSZWN0YW5nbGUuc291dGhlYXN0KHJlY3RhbmdsZSksXG4gICAgICBSZWN0YW5nbGUuc291dGh3ZXN0KHJlY3RhbmdsZSksXG4gICAgICBSZWN0YW5nbGUubm9ydGhlYXN0KHJlY3RhbmdsZSksXG4gICAgICBSZWN0YW5nbGUubm9ydGh3ZXN0KHJlY3RhbmdsZSksXG4gICAgXTtcblxuICAgIHJldHVybiBjb21wdXRlRmx5VG9Mb2NhdGlvbkZvclJlY3RhbmdsZVxuICAgICAgLl9zYW1wbGVUZXJyYWluTW9zdERldGFpbGVkKHRlcnJhaW5Qcm92aWRlciwgY2FydG9ncmFwaGljcylcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChwb3NpdGlvbnNPblRlcnJhaW4pIHtcbiAgICAgICAgdmFyIG1heEhlaWdodCA9IHBvc2l0aW9uc09uVGVycmFpbi5yZWR1Y2UoZnVuY3Rpb24gKGN1cnJlbnRNYXgsIGl0ZW0pIHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoaXRlbS5oZWlnaHQsIGN1cnJlbnRNYXgpO1xuICAgICAgICB9LCAtTnVtYmVyLk1BWF9WQUxVRSk7XG5cbiAgICAgICAgdmFyIGZpbmFsUG9zaXRpb24gPSBwb3NpdGlvbldpdGhvdXRUZXJyYWluO1xuICAgICAgICBmaW5hbFBvc2l0aW9uLmhlaWdodCArPSBtYXhIZWlnaHQ7XG4gICAgICAgIHJldHVybiBmaW5hbFBvc2l0aW9uO1xuICAgICAgfSk7XG4gIH0pO1xufVxuXG4vL0V4cG9zZWQgZm9yIHRlc3RpbmcuXG5jb21wdXRlRmx5VG9Mb2NhdGlvbkZvclJlY3RhbmdsZS5fc2FtcGxlVGVycmFpbk1vc3REZXRhaWxlZCA9IHNhbXBsZVRlcnJhaW5Nb3N0RGV0YWlsZWQ7XG5leHBvcnQgZGVmYXVsdCBjb21wdXRlRmx5VG9Mb2NhdGlvbkZvclJlY3RhbmdsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///64585\n')},13304:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Creates a {@link createBillboardPointCallback.CanvasFunction} that will create a canvas with a point.\n *\n * @param {Number} centerAlpha The alpha of the center of the point. The value must be in the range [0.0, 1.0].\n * @param {String} cssColor The CSS color string.\n * @param {String} cssOutlineColor The CSS color of the point outline.\n * @param {Number} cssOutlineWidth The width of the outline in pixels.\n * @param {Number} pixelSize The size of the point in pixels.\n * @return {createBillboardPointCallback.CanvasFunction} The function that will return a canvas with the point drawn on it.\n *\n * @private\n */\nfunction createBillboardPointCallback(\n  centerAlpha,\n  cssColor,\n  cssOutlineColor,\n  cssOutlineWidth,\n  pixelSize\n) {\n  return function () {\n    var canvas = document.createElement("canvas");\n\n    var length = pixelSize + 2 * cssOutlineWidth;\n    canvas.height = canvas.width = length;\n\n    var context2D = canvas.getContext("2d");\n    context2D.clearRect(0, 0, length, length);\n\n    if (cssOutlineWidth !== 0) {\n      context2D.beginPath();\n      context2D.arc(length / 2, length / 2, length / 2, 0, 2 * Math.PI, true);\n      context2D.closePath();\n      context2D.fillStyle = cssOutlineColor;\n      context2D.fill();\n      // Punch a hole in the center if needed.\n      if (centerAlpha < 1.0) {\n        context2D.save();\n        context2D.globalCompositeOperation = "destination-out";\n        context2D.beginPath();\n        context2D.arc(\n          length / 2,\n          length / 2,\n          pixelSize / 2,\n          0,\n          2 * Math.PI,\n          true\n        );\n        context2D.closePath();\n        context2D.fillStyle = "black";\n        context2D.fill();\n        context2D.restore();\n      }\n    }\n\n    context2D.beginPath();\n    context2D.arc(length / 2, length / 2, pixelSize / 2, 0, 2 * Math.PI, true);\n    context2D.closePath();\n    context2D.fillStyle = cssColor;\n    context2D.fill();\n\n    return canvas;\n  };\n}\n\n/**\n * A function that returns a canvas containing an image of a point.\n * @callback createBillboardPointCallback.CanvasFunction\n * @returns {HTMLCanvasElement} The result of the calculation.\n */\n/* harmony default export */ __webpack_exports__["Z"] = (createBillboardPointCallback);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMzMDQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxjQUFjLG1EQUFtRDtBQUNqRTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsWUFBWSw2Q0FBNkM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFtQjtBQUNoQztBQUNBLHlEQUFlLDRCQUE0QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL2NyZWF0ZUJpbGxib2FyZFBvaW50Q2FsbGJhY2suanM/N2U3OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZXMgYSB7QGxpbmsgY3JlYXRlQmlsbGJvYXJkUG9pbnRDYWxsYmFjay5DYW52YXNGdW5jdGlvbn0gdGhhdCB3aWxsIGNyZWF0ZSBhIGNhbnZhcyB3aXRoIGEgcG9pbnQuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGNlbnRlckFscGhhIFRoZSBhbHBoYSBvZiB0aGUgY2VudGVyIG9mIHRoZSBwb2ludC4gVGhlIHZhbHVlIG11c3QgYmUgaW4gdGhlIHJhbmdlIFswLjAsIDEuMF0uXG4gKiBAcGFyYW0ge1N0cmluZ30gY3NzQ29sb3IgVGhlIENTUyBjb2xvciBzdHJpbmcuXG4gKiBAcGFyYW0ge1N0cmluZ30gY3NzT3V0bGluZUNvbG9yIFRoZSBDU1MgY29sb3Igb2YgdGhlIHBvaW50IG91dGxpbmUuXG4gKiBAcGFyYW0ge051bWJlcn0gY3NzT3V0bGluZVdpZHRoIFRoZSB3aWR0aCBvZiB0aGUgb3V0bGluZSBpbiBwaXhlbHMuXG4gKiBAcGFyYW0ge051bWJlcn0gcGl4ZWxTaXplIFRoZSBzaXplIG9mIHRoZSBwb2ludCBpbiBwaXhlbHMuXG4gKiBAcmV0dXJuIHtjcmVhdGVCaWxsYm9hcmRQb2ludENhbGxiYWNrLkNhbnZhc0Z1bmN0aW9ufSBUaGUgZnVuY3Rpb24gdGhhdCB3aWxsIHJldHVybiBhIGNhbnZhcyB3aXRoIHRoZSBwb2ludCBkcmF3biBvbiBpdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjcmVhdGVCaWxsYm9hcmRQb2ludENhbGxiYWNrKFxuICBjZW50ZXJBbHBoYSxcbiAgY3NzQ29sb3IsXG4gIGNzc091dGxpbmVDb2xvcixcbiAgY3NzT3V0bGluZVdpZHRoLFxuICBwaXhlbFNpemVcbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuXG4gICAgdmFyIGxlbmd0aCA9IHBpeGVsU2l6ZSArIDIgKiBjc3NPdXRsaW5lV2lkdGg7XG4gICAgY2FudmFzLmhlaWdodCA9IGNhbnZhcy53aWR0aCA9IGxlbmd0aDtcblxuICAgIHZhciBjb250ZXh0MkQgPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgIGNvbnRleHQyRC5jbGVhclJlY3QoMCwgMCwgbGVuZ3RoLCBsZW5ndGgpO1xuXG4gICAgaWYgKGNzc091dGxpbmVXaWR0aCAhPT0gMCkge1xuICAgICAgY29udGV4dDJELmJlZ2luUGF0aCgpO1xuICAgICAgY29udGV4dDJELmFyYyhsZW5ndGggLyAyLCBsZW5ndGggLyAyLCBsZW5ndGggLyAyLCAwLCAyICogTWF0aC5QSSwgdHJ1ZSk7XG4gICAgICBjb250ZXh0MkQuY2xvc2VQYXRoKCk7XG4gICAgICBjb250ZXh0MkQuZmlsbFN0eWxlID0gY3NzT3V0bGluZUNvbG9yO1xuICAgICAgY29udGV4dDJELmZpbGwoKTtcbiAgICAgIC8vIFB1bmNoIGEgaG9sZSBpbiB0aGUgY2VudGVyIGlmIG5lZWRlZC5cbiAgICAgIGlmIChjZW50ZXJBbHBoYSA8IDEuMCkge1xuICAgICAgICBjb250ZXh0MkQuc2F2ZSgpO1xuICAgICAgICBjb250ZXh0MkQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gXCJkZXN0aW5hdGlvbi1vdXRcIjtcbiAgICAgICAgY29udGV4dDJELmJlZ2luUGF0aCgpO1xuICAgICAgICBjb250ZXh0MkQuYXJjKFxuICAgICAgICAgIGxlbmd0aCAvIDIsXG4gICAgICAgICAgbGVuZ3RoIC8gMixcbiAgICAgICAgICBwaXhlbFNpemUgLyAyLFxuICAgICAgICAgIDAsXG4gICAgICAgICAgMiAqIE1hdGguUEksXG4gICAgICAgICAgdHJ1ZVxuICAgICAgICApO1xuICAgICAgICBjb250ZXh0MkQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGNvbnRleHQyRC5maWxsU3R5bGUgPSBcImJsYWNrXCI7XG4gICAgICAgIGNvbnRleHQyRC5maWxsKCk7XG4gICAgICAgIGNvbnRleHQyRC5yZXN0b3JlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29udGV4dDJELmJlZ2luUGF0aCgpO1xuICAgIGNvbnRleHQyRC5hcmMobGVuZ3RoIC8gMiwgbGVuZ3RoIC8gMiwgcGl4ZWxTaXplIC8gMiwgMCwgMiAqIE1hdGguUEksIHRydWUpO1xuICAgIGNvbnRleHQyRC5jbG9zZVBhdGgoKTtcbiAgICBjb250ZXh0MkQuZmlsbFN0eWxlID0gY3NzQ29sb3I7XG4gICAgY29udGV4dDJELmZpbGwoKTtcblxuICAgIHJldHVybiBjYW52YXM7XG4gIH07XG59XG5cbi8qKlxuICogQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBjYW52YXMgY29udGFpbmluZyBhbiBpbWFnZSBvZiBhIHBvaW50LlxuICogQGNhbGxiYWNrIGNyZWF0ZUJpbGxib2FyZFBvaW50Q2FsbGJhY2suQ2FudmFzRnVuY3Rpb25cbiAqIEByZXR1cm5zIHtIVE1MQ2FudmFzRWxlbWVudH0gVGhlIHJlc3VsdCBvZiB0aGUgY2FsY3VsYXRpb24uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUJpbGxib2FyZFBvaW50Q2FsbGJhY2s7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13304\n')},14519:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12572);\n/* harmony import */ var _Core_mergeSort_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4197);\n/* harmony import */ var _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(38443);\n/* harmony import */ var _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(21572);\n/* harmony import */ var _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(87721);\n/* harmony import */ var _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(8743);\n/* harmony import */ var _Renderer_TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(42246);\n/* harmony import */ var _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(80188);\n/* harmony import */ var _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(88453);\n/* harmony import */ var _Material_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(69592);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar scratchColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchColorAbove = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchColorBelow = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchColorBlend = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchPackedFloat = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchColorBytes = new Uint8Array(4);\n\nfunction lerpEntryColor(height, entryBefore, entryAfter, result) {\n  var lerpFactor =\n    entryBefore.height === entryAfter.height\n      ? 0.0\n      : (height - entryBefore.height) /\n        (entryAfter.height - entryBefore.height);\n  return _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].lerp */ .Z.lerp(entryBefore.color, entryAfter.color, lerpFactor, result);\n}\n\nfunction createNewEntry(height, color) {\n  return {\n    height: height,\n    color: _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(color),\n  };\n}\n\nfunction removeDuplicates(entries) {\n  // This function expects entries to be sorted from lowest to highest.\n\n  // Remove entries that have the same height as before and after.\n  entries = entries.filter(function (entry, index, array) {\n    var hasPrev = index > 0;\n    var hasNext = index < array.length - 1;\n\n    var sameHeightAsPrev = hasPrev\n      ? entry.height === array[index - 1].height\n      : true;\n    var sameHeightAsNext = hasNext\n      ? entry.height === array[index + 1].height\n      : true;\n\n    var keep = !sameHeightAsPrev || !sameHeightAsNext;\n    return keep;\n  });\n\n  // Remove entries that have the same color as before and after.\n  entries = entries.filter(function (entry, index, array) {\n    var hasPrev = index > 0;\n    var hasNext = index < array.length - 1;\n\n    var sameColorAsPrev = hasPrev\n      ? _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(entry.color, array[index - 1].color)\n      : false;\n    var sameColorAsNext = hasNext\n      ? _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(entry.color, array[index + 1].color)\n      : false;\n\n    var keep = !sameColorAsPrev || !sameColorAsNext;\n    return keep;\n  });\n\n  // Also remove entries that have the same height AND color as the entry before.\n  entries = entries.filter(function (entry, index, array) {\n    var hasPrev = index > 0;\n\n    var sameColorAsPrev = hasPrev\n      ? _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(entry.color, array[index - 1].color)\n      : false;\n\n    var sameHeightAsPrev = hasPrev\n      ? entry.height === array[index - 1].height\n      : true;\n\n    var keep = !sameColorAsPrev || !sameHeightAsPrev;\n    return keep;\n  });\n\n  return entries;\n}\n\nfunction preprocess(layers) {\n  var i, j;\n\n  var layeredEntries = [];\n\n  var layersLength = layers.length;\n  for (i = 0; i < layersLength; i++) {\n    var layer = layers[i];\n    var entriesOrig = layer.entries;\n    var entriesLength = entriesOrig.length;\n\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (!Array.isArray(entriesOrig) || entriesLength === 0) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("entries must be an array with size > 0.");\n    }\n    //>>includeEnd(\'debug\');\n\n    var entries = [];\n\n    for (j = 0; j < entriesLength; j++) {\n      var entryOrig = entriesOrig[j];\n\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryOrig.height)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("entry requires a height.");\n      }\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryOrig.color)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("entry requires a color.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var height = _Core_Math_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clamp */ .Z.clamp(\n        entryOrig.height,\n        createElevationBandMaterial._minimumHeight,\n        createElevationBandMaterial._maximumHeight\n      );\n\n      // premultiplied alpha\n      var color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(entryOrig.color, scratchColor);\n      color.red *= color.alpha;\n      color.green *= color.alpha;\n      color.blue *= color.alpha;\n\n      entries.push(createNewEntry(height, color));\n    }\n\n    var sortedAscending = true;\n    var sortedDescending = true;\n    for (j = 0; j < entriesLength - 1; j++) {\n      var currEntry = entries[j + 0];\n      var nextEntry = entries[j + 1];\n\n      sortedAscending = sortedAscending && currEntry.height <= nextEntry.height;\n      sortedDescending =\n        sortedDescending && currEntry.height >= nextEntry.height;\n    }\n\n    // When the array is fully descending, reverse it.\n    if (sortedDescending) {\n      entries = entries.reverse();\n    } else if (!sortedAscending) {\n      // Stable sort from lowest to greatest height.\n      (0,_Core_mergeSort_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(entries, function (a, b) {\n        return _Core_Math_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].sign */ .Z.sign(a.height - b.height);\n      });\n    }\n\n    var extendDownwards = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(layer.extendDownwards, false);\n    var extendUpwards = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(layer.extendUpwards, false);\n\n    // Interpret a single entry to extend all the way up and down.\n    if (entries.length === 1 && !extendDownwards && !extendUpwards) {\n      extendDownwards = true;\n      extendUpwards = true;\n    }\n\n    if (extendDownwards) {\n      entries.splice(\n        0,\n        0,\n        createNewEntry(\n          createElevationBandMaterial._minimumHeight,\n          entries[0].color\n        )\n      );\n    }\n    if (extendUpwards) {\n      entries.splice(\n        entries.length,\n        0,\n        createNewEntry(\n          createElevationBandMaterial._maximumHeight,\n          entries[entries.length - 1].color\n        )\n      );\n    }\n\n    entries = removeDuplicates(entries);\n\n    layeredEntries.push(entries);\n  }\n\n  return layeredEntries;\n}\n\nfunction createLayeredEntries(layers) {\n  // clean up the input data and check for errors\n  var layeredEntries = preprocess(layers);\n\n  var entriesAccumNext = [];\n  var entriesAccumCurr = [];\n  var i;\n\n  function addEntry(height, color) {\n    entriesAccumNext.push(createNewEntry(height, color));\n  }\n  function addBlendEntry(height, a, b) {\n    var result = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(b, 1.0 - a.alpha, scratchColorBlend);\n    result = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(result, a, result);\n    addEntry(height, result);\n  }\n\n  // alpha blend new layers on top of old ones\n  var layerLength = layeredEntries.length;\n  for (i = 0; i < layerLength; i++) {\n    var entries = layeredEntries[i];\n    var idx = 0;\n    var accumIdx = 0;\n\n    // swap the arrays\n    entriesAccumCurr = entriesAccumNext;\n    entriesAccumNext = [];\n\n    var entriesLength = entries.length;\n    var entriesAccumLength = entriesAccumCurr.length;\n    while (idx < entriesLength || accumIdx < entriesAccumLength) {\n      var entry = idx < entriesLength ? entries[idx] : undefined;\n      var prevEntry = idx > 0 ? entries[idx - 1] : undefined;\n      var nextEntry = idx < entriesLength - 1 ? entries[idx + 1] : undefined;\n\n      var entryAccum =\n        accumIdx < entriesAccumLength ? entriesAccumCurr[accumIdx] : undefined;\n      var prevEntryAccum =\n        accumIdx > 0 ? entriesAccumCurr[accumIdx - 1] : undefined;\n      var nextEntryAccum =\n        accumIdx < entriesAccumLength - 1\n          ? entriesAccumCurr[accumIdx + 1]\n          : undefined;\n\n      if (\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entry) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryAccum) &&\n        entry.height === entryAccum.height\n      ) {\n        // New entry directly on top of accum entry\n        var isSplitAccum =\n          (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(nextEntryAccum) &&\n          entryAccum.height === nextEntryAccum.height;\n        var isStartAccum = !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntryAccum);\n        var isEndAccum = !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(nextEntryAccum);\n\n        var isSplit = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(nextEntry) && entry.height === nextEntry.height;\n        var isStart = !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntry);\n        var isEnd = !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(nextEntry);\n\n        if (isSplitAccum) {\n          if (isSplit) {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n            addBlendEntry(entry.height, nextEntry.color, nextEntryAccum.color);\n          } else if (isStart) {\n            addEntry(entry.height, entryAccum.color);\n            addBlendEntry(entry.height, entry.color, nextEntryAccum.color);\n          } else if (isEnd) {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n            addEntry(entry.height, nextEntryAccum.color);\n          } else {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n            addBlendEntry(entry.height, entry.color, nextEntryAccum.color);\n          }\n        } else if (isStartAccum) {\n          if (isSplit) {\n            addEntry(entry.height, entry.color);\n            addBlendEntry(entry.height, nextEntry.color, entryAccum.color);\n          } else if (isEnd) {\n            addEntry(entry.height, entry.color);\n            addEntry(entry.height, entryAccum.color);\n          } else if (isStart) {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n          } else {\n            addEntry(entry.height, entry.color);\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n          }\n        } else if (isEndAccum) {\n          if (isSplit) {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n            addEntry(entry.height, nextEntry.color);\n          } else if (isStart) {\n            addEntry(entry.height, entryAccum.color);\n            addEntry(entry.height, entry.color);\n          } else if (isEnd) {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n          } else {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n            addEntry(entry.height, entry.color);\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isSplit) {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n            addBlendEntry(entry.height, nextEntry.color, entryAccum.color);\n          } else if (isStart) {\n            addEntry(entry.height, entryAccum.color);\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n          } else if (isEnd) {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n            addEntry(entry.height, entryAccum.color);\n          } else {\n            addBlendEntry(entry.height, entry.color, entryAccum.color);\n          }\n        }\n        idx += isSplit ? 2 : 1;\n        accumIdx += isSplitAccum ? 2 : 1;\n      } else if (\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entry) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryAccum) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntryAccum) &&\n        entry.height < entryAccum.height\n      ) {\n        // New entry between two accum entries\n        var colorBelow = lerpEntryColor(\n          entry.height,\n          prevEntryAccum,\n          entryAccum,\n          scratchColorBelow\n        );\n\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntry)) {\n          addEntry(entry.height, colorBelow);\n          addBlendEntry(entry.height, entry.color, colorBelow);\n        } else if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(nextEntry)) {\n          addBlendEntry(entry.height, entry.color, colorBelow);\n          addEntry(entry.height, colorBelow);\n        } else {\n          addBlendEntry(entry.height, entry.color, colorBelow);\n        }\n        idx++;\n      } else if (\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryAccum) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entry) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntry) &&\n        entryAccum.height < entry.height\n      ) {\n        // Accum entry between two new entries\n        var colorAbove = lerpEntryColor(\n          entryAccum.height,\n          prevEntry,\n          entry,\n          scratchColorAbove\n        );\n\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntryAccum)) {\n          addEntry(entryAccum.height, colorAbove);\n          addBlendEntry(entryAccum.height, colorAbove, entryAccum.color);\n        } else if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(nextEntryAccum)) {\n          addBlendEntry(entryAccum.height, colorAbove, entryAccum.color);\n          addEntry(entryAccum.height, colorAbove);\n        } else {\n          addBlendEntry(entryAccum.height, colorAbove, entryAccum.color);\n        }\n        accumIdx++;\n      } else if (\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entry) &&\n        (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryAccum) || entry.height < entryAccum.height)\n      ) {\n        // New entry completely before or completely after accum entries\n        if (\n          (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryAccum) &&\n          !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntryAccum) &&\n          !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(nextEntry)\n        ) {\n          // Insert blank gap between last entry and first accum entry\n          addEntry(entry.height, entry.color);\n          addEntry(entry.height, createElevationBandMaterial._emptyColor);\n          addEntry(entryAccum.height, createElevationBandMaterial._emptyColor);\n        } else if (\n          !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryAccum) &&\n          (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntryAccum) &&\n          !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(prevEntry)\n        ) {\n          // Insert blank gap between last accum entry and first entry\n          addEntry(\n            prevEntryAccum.height,\n            createElevationBandMaterial._emptyColor\n          );\n          addEntry(entry.height, createElevationBandMaterial._emptyColor);\n          addEntry(entry.height, entry.color);\n        } else {\n          addEntry(entry.height, entry.color);\n        }\n        idx++;\n      } else if (\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entryAccum) &&\n        (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(entry) || entryAccum.height < entry.height)\n      ) {\n        // Accum entry completely before or completely after new entries\n        addEntry(entryAccum.height, entryAccum.color);\n        accumIdx++;\n      }\n    }\n  }\n\n  // one final cleanup pass in case duplicate colors show up in the final result\n  var allEntries = removeDuplicates(entriesAccumNext);\n  return allEntries;\n}\n\n/**\n * @typedef createElevationBandMaterialEntry\n *\n * @property {Number} height The height.\n * @property {Color} color The color at this height.\n */\n/**\n * @typedef createElevationBandMaterialBand\n *\n * @property {createElevationBandMaterialEntry[]} entries A list of elevation entries. They will automatically be sorted from lowest to highest. If there is only one entry and <code>extendsDownards</code> and <code>extendUpwards</code> are both <code>false</code>, they will both be set to <code>true</code>.\n * @property {Boolean} [extendDownwards=false] If <code>true</code>, the band\'s minimum elevation color will extend infinitely downwards.\n * @property {Boolean} [extendUpwards=false] If <code>true</code>, the band\'s maximum elevation color will extend infinitely upwards.\n */\n\n/**\n * Creates a {@link Material} that combines multiple layers of color/gradient bands and maps them to terrain heights.\n *\n * The shader does a binary search over all the heights to find out which colors are above and below a given height, and\n * interpolates between them for the final color. This material supports hundreds of entries relatively cheaply.\n *\n * @function createElevationBandMaterial\n *\n * @param {Object} options Object with the following properties:\n * @param {Scene} options.scene The scene where the visualization is taking place.\n * @param {createElevationBandMaterialBand[]} options.layers A list of bands ordered from lowest to highest precedence.\n * @returns {Material} A new {@link Material} instance.\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Elevation%20Band%20Material.html|Cesium Sandcastle Elevation Band Demo}\n *\n * @example\n * scene.globe.material = Cesium.createElevationBandMaterial({\n *     scene : scene,\n *     layers : [{\n *         entries : [{\n *             height : 4200.0,\n *             color : new Cesium.Color(0.0, 0.0, 0.0, 1.0)\n *         }, {\n *             height : 8848.0,\n *             color : new Cesium.Color(1.0, 1.0, 1.0, 1.0)\n *         }],\n *         extendDownwards : true,\n *         extendUpwards : true,\n *     }, {\n *         entries : [{\n *             height : 7000.0,\n *             color : new Cesium.Color(1.0, 0.0, 0.0, 0.5)\n *         }, {\n *             height : 7100.0,\n *             color : new Cesium.Color(1.0, 0.0, 0.0, 0.5)\n *         }]\n *     }]\n * });\n */\nfunction createElevationBandMaterial(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var scene = options.scene;\n  var layers = options.layers;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("options.scene", scene);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("options.layers", layers);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("options.layers.length", layers.length, 0);\n  //>>includeEnd(\'debug\');\n\n  var entries = createLayeredEntries(layers);\n  var entriesLength = entries.length;\n  var i;\n\n  var heightTexBuffer;\n  var heightTexDatatype;\n  var heightTexFormat;\n\n  var isPackedHeight = !createElevationBandMaterial._useFloatTexture(\n    scene.context\n  );\n  if (isPackedHeight) {\n    heightTexDatatype = _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE;\n    heightTexFormat = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].RGBA */ .Z.RGBA;\n    heightTexBuffer = new Uint8Array(entriesLength * 4);\n    for (i = 0; i < entriesLength; i++) {\n      _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].packFloat */ .Z.packFloat(entries[i].height, scratchPackedFloat);\n      _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(scratchPackedFloat, heightTexBuffer, i * 4);\n    }\n  } else {\n    heightTexDatatype = _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FLOAT */ .Z.FLOAT;\n    heightTexFormat = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].LUMINANCE */ .Z.LUMINANCE;\n    heightTexBuffer = new Float32Array(entriesLength);\n    for (i = 0; i < entriesLength; i++) {\n      heightTexBuffer[i] = entries[i].height;\n    }\n  }\n\n  var heightsTex = _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].create */ .Z.create({\n    context: scene.context,\n    pixelFormat: heightTexFormat,\n    pixelDatatype: heightTexDatatype,\n    source: {\n      arrayBufferView: heightTexBuffer,\n      width: entriesLength,\n      height: 1,\n    },\n    sampler: new _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      wrapS: _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE,\n      wrapT: _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE,\n      minificationFilter: _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].NEAREST */ .Z.NEAREST,\n      magnificationFilter: _Renderer_TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].NEAREST */ .Z.NEAREST,\n    }),\n  });\n\n  var colorsArray = new Uint8Array(entriesLength * 4);\n  for (i = 0; i < entriesLength; i++) {\n    var color = entries[i].color;\n    color.toBytes(scratchColorBytes);\n    colorsArray[i * 4 + 0] = scratchColorBytes[0];\n    colorsArray[i * 4 + 1] = scratchColorBytes[1];\n    colorsArray[i * 4 + 2] = scratchColorBytes[2];\n    colorsArray[i * 4 + 3] = scratchColorBytes[3];\n  }\n\n  var colorsTex = _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].create */ .Z.create({\n    context: scene.context,\n    pixelFormat: _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].RGBA */ .Z.RGBA,\n    pixelDatatype: _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n    source: {\n      arrayBufferView: colorsArray,\n      width: entriesLength,\n      height: 1,\n    },\n    sampler: new _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      wrapS: _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE,\n      wrapT: _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE,\n      minificationFilter: _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].LINEAR */ .Z.LINEAR,\n      magnificationFilter: _Renderer_TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].LINEAR */ .Z.LINEAR,\n    }),\n  });\n\n  var material = _Material_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].fromType */ .Z.fromType("ElevationBand", {\n    heights: heightsTex,\n    colors: colorsTex,\n  });\n  return material;\n}\n\n/**\n * Function for checking if the context will allow floating point textures for heights.\n *\n * @param {Context} context The {@link Context}.\n * @returns {Boolean} <code>true</code> if floating point textures can be used for heights.\n * @private\n */\ncreateElevationBandMaterial._useFloatTexture = function (context) {\n  return context.floatingPointTexture;\n};\n\n/**\n * This is the height that gets stored in the texture when using extendUpwards.\n * There\'s nothing special about it, it\'s just a really big number.\n * @private\n */\ncreateElevationBandMaterial._maximumHeight = +5906376425472;\n\n/**\n * This is the height that gets stored in the texture when using extendDownwards.\n * There\'s nothing special about it, it\'s just a really big number.\n * @private\n */\ncreateElevationBandMaterial._minimumHeight = -5906376425472;\n\n/**\n * Color used to create empty space in the color texture\n * @private\n */\ncreateElevationBandMaterial._emptyColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(0.0, 0.0, 0.0, 0.0);\n\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (createElevationBandMaterial)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14519\n')},15090:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval("/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59947);\n/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8182);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_IonResource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48604);\n/* harmony import */ var _Cesium3DTileset_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(49104);\n/* harmony import */ var _Cesium3DTileStyle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39154);\n\n\n\n\n\n\n\n\n/**\n * Creates a {@link Cesium3DTileset} instance for the\n * {@link https://cesium.com/content/cesium-osm-buildings/|Cesium OSM Buildings}\n * tileset.\n *\n * @function\n *\n * @param {Object} [options] Construction options. Any options allowed by the {@link Cesium3DTileset} constructor\n *        may be specified here. In addition to those, the following properties are supported:\n * @param {Color} [options.defaultColor=Color.WHITE] The default color to use for buildings\n *        that do not have a color. This parameter is ignored if <code>options.style</code> is specified.\n * @param {Cesium3DTileStyle} [options.style] The style to use with the tileset. If not\n *        specified, a default style is used which gives each building or building part a\n *        color inferred from its OpenStreetMap <code>tags</code>. If no color can be inferred,\n *        <code>options.defaultColor</code> is used.\n * @param {Boolean} [options.showOutline=true] Whether to show outlines around buildings. When true,\n *        outlines are displayed. When false, outlines are not displayed.\n * @returns {Cesium3DTileset}\n *\n * @see Ion\n *\n * @example\n * // Create Cesium OSM Buildings with default styling\n * var viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.scene.primitives.add(Cesium.createOsmBuildings());\n *\n * @example\n * // Create Cesium OSM Buildings with a custom style highlighting\n * // schools and hospitals.\n * viewer.scene.primitives.add(Cesium.createOsmBuildings({\n *   style: new Cesium.Cesium3DTileStyle({\n *     color: {\n *       conditions: [\n *         [\"${feature['building']} === 'hospital'\", \"color('#0000FF')\"],\n *         [\"${feature['building']} === 'school'\", \"color('#00FF00')\"],\n *         [true, \"color('#ffffff')\"]\n *       ]\n *     }\n *   })\n * }));\n */\nfunction createOsmBuildings(options) {\n  options = combine(options, {\n    url: IonResource.fromAssetId(96188),\n  });\n\n  var tileset = new Cesium3DTileset(options);\n\n  var style = options.style;\n\n  if (!defined(style)) {\n    var color = defaultValue(\n      options.defaultColor,\n      Color.WHITE\n    ).toCssColorString();\n    style = new Cesium3DTileStyle({\n      color:\n        \"Boolean(${feature['cesium#color']}) ? color(${feature['cesium#color']}) : \" +\n        color,\n    });\n  }\n\n  tileset.style = style;\n\n  return tileset;\n}\n\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (createOsmBuildings)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUwOTAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0k7QUFDVTtBQUNWO0FBQ1E7QUFDRTtBQUNJOztBQUV2RDtBQUNBLGNBQWMsdUJBQXVCO0FBQ3JDLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUSw0REFBNEQsdUJBQXVCO0FBQ3RHO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUscUJBQXFCO0FBQ3BDLGVBQWUscUJBQXFCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdCQUF3QixZQUFZLHdCQUF3QjtBQUMvRTtBQUNBLEtBQUs7QUFDTDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLHNFQUFlLGtFQUFrQixJQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL2NyZWF0ZU9zbUJ1aWxkaW5ncy5qcz8zMmI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2xvciBmcm9tIFwiLi4vQ29yZS9Db2xvci5qc1wiO1xuaW1wb3J0IGNvbWJpbmUgZnJvbSBcIi4uL0NvcmUvY29tYmluZS5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBJb25SZXNvdXJjZSBmcm9tIFwiLi4vQ29yZS9Jb25SZXNvdXJjZS5qc1wiO1xuaW1wb3J0IENlc2l1bTNEVGlsZXNldCBmcm9tIFwiLi9DZXNpdW0zRFRpbGVzZXQuanNcIjtcbmltcG9ydCBDZXNpdW0zRFRpbGVTdHlsZSBmcm9tIFwiLi9DZXNpdW0zRFRpbGVTdHlsZS5qc1wiO1xuXG4vKipcbiAqIENyZWF0ZXMgYSB7QGxpbmsgQ2VzaXVtM0RUaWxlc2V0fSBpbnN0YW5jZSBmb3IgdGhlXG4gKiB7QGxpbmsgaHR0cHM6Ly9jZXNpdW0uY29tL2NvbnRlbnQvY2VzaXVtLW9zbS1idWlsZGluZ3MvfENlc2l1bSBPU00gQnVpbGRpbmdzfVxuICogdGlsZXNldC5cbiAqXG4gKiBAZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIENvbnN0cnVjdGlvbiBvcHRpb25zLiBBbnkgb3B0aW9ucyBhbGxvd2VkIGJ5IHRoZSB7QGxpbmsgQ2VzaXVtM0RUaWxlc2V0fSBjb25zdHJ1Y3RvclxuICogICAgICAgIG1heSBiZSBzcGVjaWZpZWQgaGVyZS4gSW4gYWRkaXRpb24gdG8gdGhvc2UsIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllcyBhcmUgc3VwcG9ydGVkOlxuICogQHBhcmFtIHtDb2xvcn0gW29wdGlvbnMuZGVmYXVsdENvbG9yPUNvbG9yLldISVRFXSBUaGUgZGVmYXVsdCBjb2xvciB0byB1c2UgZm9yIGJ1aWxkaW5nc1xuICogICAgICAgIHRoYXQgZG8gbm90IGhhdmUgYSBjb2xvci4gVGhpcyBwYXJhbWV0ZXIgaXMgaWdub3JlZCBpZiA8Y29kZT5vcHRpb25zLnN0eWxlPC9jb2RlPiBpcyBzcGVjaWZpZWQuXG4gKiBAcGFyYW0ge0Nlc2l1bTNEVGlsZVN0eWxlfSBbb3B0aW9ucy5zdHlsZV0gVGhlIHN0eWxlIHRvIHVzZSB3aXRoIHRoZSB0aWxlc2V0LiBJZiBub3RcbiAqICAgICAgICBzcGVjaWZpZWQsIGEgZGVmYXVsdCBzdHlsZSBpcyB1c2VkIHdoaWNoIGdpdmVzIGVhY2ggYnVpbGRpbmcgb3IgYnVpbGRpbmcgcGFydCBhXG4gKiAgICAgICAgY29sb3IgaW5mZXJyZWQgZnJvbSBpdHMgT3BlblN0cmVldE1hcCA8Y29kZT50YWdzPC9jb2RlPi4gSWYgbm8gY29sb3IgY2FuIGJlIGluZmVycmVkLFxuICogICAgICAgIDxjb2RlPm9wdGlvbnMuZGVmYXVsdENvbG9yPC9jb2RlPiBpcyB1c2VkLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5zaG93T3V0bGluZT10cnVlXSBXaGV0aGVyIHRvIHNob3cgb3V0bGluZXMgYXJvdW5kIGJ1aWxkaW5ncy4gV2hlbiB0cnVlLFxuICogICAgICAgIG91dGxpbmVzIGFyZSBkaXNwbGF5ZWQuIFdoZW4gZmFsc2UsIG91dGxpbmVzIGFyZSBub3QgZGlzcGxheWVkLlxuICogQHJldHVybnMge0Nlc2l1bTNEVGlsZXNldH1cbiAqXG4gKiBAc2VlIElvblxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDcmVhdGUgQ2VzaXVtIE9TTSBCdWlsZGluZ3Mgd2l0aCBkZWZhdWx0IHN0eWxpbmdcbiAqIHZhciB2aWV3ZXIgPSBuZXcgQ2VzaXVtLlZpZXdlcignY2VzaXVtQ29udGFpbmVyJyk7XG4gKiB2aWV3ZXIuc2NlbmUucHJpbWl0aXZlcy5hZGQoQ2VzaXVtLmNyZWF0ZU9zbUJ1aWxkaW5ncygpKTtcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ3JlYXRlIENlc2l1bSBPU00gQnVpbGRpbmdzIHdpdGggYSBjdXN0b20gc3R5bGUgaGlnaGxpZ2h0aW5nXG4gKiAvLyBzY2hvb2xzIGFuZCBob3NwaXRhbHMuXG4gKiB2aWV3ZXIuc2NlbmUucHJpbWl0aXZlcy5hZGQoQ2VzaXVtLmNyZWF0ZU9zbUJ1aWxkaW5ncyh7XG4gKiAgIHN0eWxlOiBuZXcgQ2VzaXVtLkNlc2l1bTNEVGlsZVN0eWxlKHtcbiAqICAgICBjb2xvcjoge1xuICogICAgICAgY29uZGl0aW9uczogW1xuICogICAgICAgICBbXCIke2ZlYXR1cmVbJ2J1aWxkaW5nJ119ID09PSAnaG9zcGl0YWwnXCIsIFwiY29sb3IoJyMwMDAwRkYnKVwiXSxcbiAqICAgICAgICAgW1wiJHtmZWF0dXJlWydidWlsZGluZyddfSA9PT0gJ3NjaG9vbCdcIiwgXCJjb2xvcignIzAwRkYwMCcpXCJdLFxuICogICAgICAgICBbdHJ1ZSwgXCJjb2xvcignI2ZmZmZmZicpXCJdXG4gKiAgICAgICBdXG4gKiAgICAgfVxuICogICB9KVxuICogfSkpO1xuICovXG5mdW5jdGlvbiBjcmVhdGVPc21CdWlsZGluZ3Mob3B0aW9ucykge1xuICBvcHRpb25zID0gY29tYmluZShvcHRpb25zLCB7XG4gICAgdXJsOiBJb25SZXNvdXJjZS5mcm9tQXNzZXRJZCg5NjE4OCksXG4gIH0pO1xuXG4gIHZhciB0aWxlc2V0ID0gbmV3IENlc2l1bTNEVGlsZXNldChvcHRpb25zKTtcblxuICB2YXIgc3R5bGUgPSBvcHRpb25zLnN0eWxlO1xuXG4gIGlmICghZGVmaW5lZChzdHlsZSkpIHtcbiAgICB2YXIgY29sb3IgPSBkZWZhdWx0VmFsdWUoXG4gICAgICBvcHRpb25zLmRlZmF1bHRDb2xvcixcbiAgICAgIENvbG9yLldISVRFXG4gICAgKS50b0Nzc0NvbG9yU3RyaW5nKCk7XG4gICAgc3R5bGUgPSBuZXcgQ2VzaXVtM0RUaWxlU3R5bGUoe1xuICAgICAgY29sb3I6XG4gICAgICAgIFwiQm9vbGVhbigke2ZlYXR1cmVbJ2Nlc2l1bSNjb2xvciddfSkgPyBjb2xvcigke2ZlYXR1cmVbJ2Nlc2l1bSNjb2xvciddfSkgOiBcIiArXG4gICAgICAgIGNvbG9yLFxuICAgIH0pO1xuICB9XG5cbiAgdGlsZXNldC5zdHlsZSA9IHN0eWxlO1xuXG4gIHJldHVybiB0aWxlc2V0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVPc21CdWlsZGluZ3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///15090\n")},31441:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(92062);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n/* harmony import */ var _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(26865);\n/* harmony import */ var _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(57552);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(72248);\n/* harmony import */ var _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(64060);\n/* harmony import */ var _Primitive_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(34380);\n\n\n\n\n\n\n\n\n\n\n/**\n * Creates a {@link Primitive} to visualize well-known vector vertex attributes:\n * <code>normal</code>, <code>tangent</code>, and <code>bitangent</code>.  Normal\n * is red; tangent is green; and bitangent is blue.  If an attribute is not\n * present, it is not drawn.\n *\n * @function\n *\n * @param {Object} options Object with the following properties:\n * @param {Geometry} options.geometry The <code>Geometry</code> instance with the attribute.\n * @param {Number} [options.length=10000.0] The length of each line segment in meters.  This can be negative to point the vector in the opposite direction.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The model matrix that transforms to transform the geometry from model to world coordinates.\n * @returns {Primitive} A new <code>Primitive</code> instance with geometry for the vectors.\n *\n * @example\n * scene.primitives.add(Cesium.createTangentSpaceDebugPrimitive({\n *    geometry : instance.geometry,\n *    length : 100000.0,\n *    modelMatrix : instance.modelMatrix\n * }));\n */\nfunction createTangentSpaceDebugPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  var instances = [];\n  var geometry = options.geometry;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!defined(geometry)) {\n    throw new DeveloperError("options.geometry is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (!defined(geometry.attributes) || !defined(geometry.primitiveType)) {\n    // to create the debug lines, we need the computed attributes.\n    // compute them if they are undefined.\n    geometry = geometry.constructor.createGeometry(geometry);\n  }\n\n  var attributes = geometry.attributes;\n  var modelMatrix = Matrix4.clone(\n    defaultValue(options.modelMatrix, Matrix4.IDENTITY)\n  );\n  var length = defaultValue(options.length, 10000.0);\n\n  if (defined(attributes.normal)) {\n    instances.push(\n      new GeometryInstance({\n        geometry: GeometryPipeline.createLineSegmentsForVectors(\n          geometry,\n          "normal",\n          length\n        ),\n        attributes: {\n          color: new ColorGeometryInstanceAttribute(1.0, 0.0, 0.0, 1.0),\n        },\n        modelMatrix: modelMatrix,\n      })\n    );\n  }\n\n  if (defined(attributes.tangent)) {\n    instances.push(\n      new GeometryInstance({\n        geometry: GeometryPipeline.createLineSegmentsForVectors(\n          geometry,\n          "tangent",\n          length\n        ),\n        attributes: {\n          color: new ColorGeometryInstanceAttribute(0.0, 1.0, 0.0, 1.0),\n        },\n        modelMatrix: modelMatrix,\n      })\n    );\n  }\n\n  if (defined(attributes.bitangent)) {\n    instances.push(\n      new GeometryInstance({\n        geometry: GeometryPipeline.createLineSegmentsForVectors(\n          geometry,\n          "bitangent",\n          length\n        ),\n        attributes: {\n          color: new ColorGeometryInstanceAttribute(0.0, 0.0, 1.0, 1.0),\n        },\n        modelMatrix: modelMatrix,\n      })\n    );\n  }\n\n  if (instances.length > 0) {\n    return new Primitive({\n      asynchronous: false,\n      geometryInstances: instances,\n      appearance: new PerInstanceColorAppearance({\n        flat: true,\n        translucent: false,\n      }),\n    });\n  }\n\n  return undefined;\n}\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (createTangentSpaceDebugPrimitive)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0NDEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUY7QUFDcEM7QUFDVjtBQUNjO0FBQ0k7QUFDQTtBQUNsQjtBQUNnQztBQUNsQzs7QUFFdkM7QUFDQSxjQUFjLGlCQUFpQjtBQUMvQjtBQUNBLFdBQVcsa0JBQWtCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsV0FBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLHNFQUFlLGdGQUFnQyxJQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL2NyZWF0ZVRhbmdlbnRTcGFjZURlYnVnUHJpbWl0aXZlLmpzPzliN2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSBmcm9tIFwiLi4vQ29yZS9Db2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUuanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4uL0NvcmUvZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IuanNcIjtcbmltcG9ydCBHZW9tZXRyeUluc3RhbmNlIGZyb20gXCIuLi9Db3JlL0dlb21ldHJ5SW5zdGFuY2UuanNcIjtcbmltcG9ydCBHZW9tZXRyeVBpcGVsaW5lIGZyb20gXCIuLi9Db3JlL0dlb21ldHJ5UGlwZWxpbmUuanNcIjtcbmltcG9ydCBNYXRyaXg0IGZyb20gXCIuLi9Db3JlL01hdHJpeDQuanNcIjtcbmltcG9ydCBQZXJJbnN0YW5jZUNvbG9yQXBwZWFyYW5jZSBmcm9tIFwiLi9QZXJJbnN0YW5jZUNvbG9yQXBwZWFyYW5jZS5qc1wiO1xuaW1wb3J0IFByaW1pdGl2ZSBmcm9tIFwiLi9QcmltaXRpdmUuanNcIjtcblxuLyoqXG4gKiBDcmVhdGVzIGEge0BsaW5rIFByaW1pdGl2ZX0gdG8gdmlzdWFsaXplIHdlbGwta25vd24gdmVjdG9yIHZlcnRleCBhdHRyaWJ1dGVzOlxuICogPGNvZGU+bm9ybWFsPC9jb2RlPiwgPGNvZGU+dGFuZ2VudDwvY29kZT4sIGFuZCA8Y29kZT5iaXRhbmdlbnQ8L2NvZGU+LiAgTm9ybWFsXG4gKiBpcyByZWQ7IHRhbmdlbnQgaXMgZ3JlZW47IGFuZCBiaXRhbmdlbnQgaXMgYmx1ZS4gIElmIGFuIGF0dHJpYnV0ZSBpcyBub3RcbiAqIHByZXNlbnQsIGl0IGlzIG5vdCBkcmF3bi5cbiAqXG4gKiBAZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBPYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge0dlb21ldHJ5fSBvcHRpb25zLmdlb21ldHJ5IFRoZSA8Y29kZT5HZW9tZXRyeTwvY29kZT4gaW5zdGFuY2Ugd2l0aCB0aGUgYXR0cmlidXRlLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLmxlbmd0aD0xMDAwMC4wXSBUaGUgbGVuZ3RoIG9mIGVhY2ggbGluZSBzZWdtZW50IGluIG1ldGVycy4gIFRoaXMgY2FuIGJlIG5lZ2F0aXZlIHRvIHBvaW50IHRoZSB2ZWN0b3IgaW4gdGhlIG9wcG9zaXRlIGRpcmVjdGlvbi5cbiAqIEBwYXJhbSB7TWF0cml4NH0gW29wdGlvbnMubW9kZWxNYXRyaXg9TWF0cml4NC5JREVOVElUWV0gVGhlIG1vZGVsIG1hdHJpeCB0aGF0IHRyYW5zZm9ybXMgdG8gdHJhbnNmb3JtIHRoZSBnZW9tZXRyeSBmcm9tIG1vZGVsIHRvIHdvcmxkIGNvb3JkaW5hdGVzLlxuICogQHJldHVybnMge1ByaW1pdGl2ZX0gQSBuZXcgPGNvZGU+UHJpbWl0aXZlPC9jb2RlPiBpbnN0YW5jZSB3aXRoIGdlb21ldHJ5IGZvciB0aGUgdmVjdG9ycy5cbiAqXG4gKiBAZXhhbXBsZVxuICogc2NlbmUucHJpbWl0aXZlcy5hZGQoQ2VzaXVtLmNyZWF0ZVRhbmdlbnRTcGFjZURlYnVnUHJpbWl0aXZlKHtcbiAqICAgIGdlb21ldHJ5IDogaW5zdGFuY2UuZ2VvbWV0cnksXG4gKiAgICBsZW5ndGggOiAxMDAwMDAuMCxcbiAqICAgIG1vZGVsTWF0cml4IDogaW5zdGFuY2UubW9kZWxNYXRyaXhcbiAqIH0pKTtcbiAqL1xuZnVuY3Rpb24gY3JlYXRlVGFuZ2VudFNwYWNlRGVidWdQcmltaXRpdmUob3B0aW9ucykge1xuICBvcHRpb25zID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMsIGRlZmF1bHRWYWx1ZS5FTVBUWV9PQkpFQ1QpO1xuICB2YXIgaW5zdGFuY2VzID0gW107XG4gIHZhciBnZW9tZXRyeSA9IG9wdGlvbnMuZ2VvbWV0cnk7XG5cbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGdlb21ldHJ5KSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIm9wdGlvbnMuZ2VvbWV0cnkgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIGlmICghZGVmaW5lZChnZW9tZXRyeS5hdHRyaWJ1dGVzKSB8fCAhZGVmaW5lZChnZW9tZXRyeS5wcmltaXRpdmVUeXBlKSkge1xuICAgIC8vIHRvIGNyZWF0ZSB0aGUgZGVidWcgbGluZXMsIHdlIG5lZWQgdGhlIGNvbXB1dGVkIGF0dHJpYnV0ZXMuXG4gICAgLy8gY29tcHV0ZSB0aGVtIGlmIHRoZXkgYXJlIHVuZGVmaW5lZC5cbiAgICBnZW9tZXRyeSA9IGdlb21ldHJ5LmNvbnN0cnVjdG9yLmNyZWF0ZUdlb21ldHJ5KGdlb21ldHJ5KTtcbiAgfVxuXG4gIHZhciBhdHRyaWJ1dGVzID0gZ2VvbWV0cnkuYXR0cmlidXRlcztcbiAgdmFyIG1vZGVsTWF0cml4ID0gTWF0cml4NC5jbG9uZShcbiAgICBkZWZhdWx0VmFsdWUob3B0aW9ucy5tb2RlbE1hdHJpeCwgTWF0cml4NC5JREVOVElUWSlcbiAgKTtcbiAgdmFyIGxlbmd0aCA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLmxlbmd0aCwgMTAwMDAuMCk7XG5cbiAgaWYgKGRlZmluZWQoYXR0cmlidXRlcy5ub3JtYWwpKSB7XG4gICAgaW5zdGFuY2VzLnB1c2goXG4gICAgICBuZXcgR2VvbWV0cnlJbnN0YW5jZSh7XG4gICAgICAgIGdlb21ldHJ5OiBHZW9tZXRyeVBpcGVsaW5lLmNyZWF0ZUxpbmVTZWdtZW50c0ZvclZlY3RvcnMoXG4gICAgICAgICAgZ2VvbWV0cnksXG4gICAgICAgICAgXCJub3JtYWxcIixcbiAgICAgICAgICBsZW5ndGhcbiAgICAgICAgKSxcbiAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgIGNvbG9yOiBuZXcgQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlKDEuMCwgMC4wLCAwLjAsIDEuMCksXG4gICAgICAgIH0sXG4gICAgICAgIG1vZGVsTWF0cml4OiBtb2RlbE1hdHJpeCxcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIGlmIChkZWZpbmVkKGF0dHJpYnV0ZXMudGFuZ2VudCkpIHtcbiAgICBpbnN0YW5jZXMucHVzaChcbiAgICAgIG5ldyBHZW9tZXRyeUluc3RhbmNlKHtcbiAgICAgICAgZ2VvbWV0cnk6IEdlb21ldHJ5UGlwZWxpbmUuY3JlYXRlTGluZVNlZ21lbnRzRm9yVmVjdG9ycyhcbiAgICAgICAgICBnZW9tZXRyeSxcbiAgICAgICAgICBcInRhbmdlbnRcIixcbiAgICAgICAgICBsZW5ndGhcbiAgICAgICAgKSxcbiAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgIGNvbG9yOiBuZXcgQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlKDAuMCwgMS4wLCAwLjAsIDEuMCksXG4gICAgICAgIH0sXG4gICAgICAgIG1vZGVsTWF0cml4OiBtb2RlbE1hdHJpeCxcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIGlmIChkZWZpbmVkKGF0dHJpYnV0ZXMuYml0YW5nZW50KSkge1xuICAgIGluc3RhbmNlcy5wdXNoKFxuICAgICAgbmV3IEdlb21ldHJ5SW5zdGFuY2Uoe1xuICAgICAgICBnZW9tZXRyeTogR2VvbWV0cnlQaXBlbGluZS5jcmVhdGVMaW5lU2VnbWVudHNGb3JWZWN0b3JzKFxuICAgICAgICAgIGdlb21ldHJ5LFxuICAgICAgICAgIFwiYml0YW5nZW50XCIsXG4gICAgICAgICAgbGVuZ3RoXG4gICAgICAgICksXG4gICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICBjb2xvcjogbmV3IENvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSgwLjAsIDAuMCwgMS4wLCAxLjApLFxuICAgICAgICB9LFxuICAgICAgICBtb2RlbE1hdHJpeDogbW9kZWxNYXRyaXgsXG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBpZiAoaW5zdGFuY2VzLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gbmV3IFByaW1pdGl2ZSh7XG4gICAgICBhc3luY2hyb25vdXM6IGZhbHNlLFxuICAgICAgZ2VvbWV0cnlJbnN0YW5jZXM6IGluc3RhbmNlcyxcbiAgICAgIGFwcGVhcmFuY2U6IG5ldyBQZXJJbnN0YW5jZUNvbG9yQXBwZWFyYW5jZSh7XG4gICAgICAgIGZsYXQ6IHRydWUsXG4gICAgICAgIHRyYW5zbHVjZW50OiBmYWxzZSxcbiAgICAgIH0pLFxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVRhbmdlbnRTcGFjZURlYnVnUHJpbWl0aXZlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///31441\n')},30289:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _IonImageryProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(43234);\n/* harmony import */ var _IonWorldImageryStyle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40999);\n\n\n\n\n/**\n * Creates an {@link IonImageryProvider} instance for ion\'s default global base imagery layer, currently Bing Maps.\n *\n * @function\n *\n * @param {Object} [options] Object with the following properties:\n * @param {IonWorldImageryStyle} [options.style=IonWorldImageryStyle] The style of base imagery, only AERIAL, AERIAL_WITH_LABELS, and ROAD are currently supported.\n * @returns {IonImageryProvider}\n *\n * @see Ion\n *\n * @example\n * // Create Cesium World Terrain with default settings\n * var viewer = new Cesium.Viewer(\'cesiumContainer\', {\n *     imageryProvider : Cesium.createWorldImagery();\n * });\n *\n * @example\n * // Create Cesium World Terrain with water and normals.\n * var viewer = new Cesium.Viewer(\'cesiumContainer\', {\n *     imageryProvider : Cesium.createWorldImagery({\n *         style: Cesium.IonWorldImageryStyle.AERIAL_WITH_LABELS\n *     })\n * });\n *\n */\nfunction createWorldImagery(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var style = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.style, _IonWorldImageryStyle_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].AERIAL */ .Z.AERIAL);\n  return new _IonImageryProvider_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({\n    assetId: style,\n  });\n}\n/* harmony default export */ __webpack_exports__["Z"] = (createWorldImagery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAyODkuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQW1EO0FBQ007QUFDSTs7QUFFN0Q7QUFDQSxlQUFlLDBCQUEwQjtBQUN6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxzQkFBc0I7QUFDakMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwRUFBWSxVQUFVLGdHQUF5QjtBQUMzRCxjQUFjLDBFQUFZLGdCQUFnQix1RkFBMkI7QUFDckUsYUFBYSx1RUFBa0I7QUFDL0I7QUFDQSxHQUFHO0FBQ0g7QUFDQSx5REFBZSxrQkFBa0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9jcmVhdGVXb3JsZEltYWdlcnkuanM/NmNjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuLi9Db3JlL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IElvbkltYWdlcnlQcm92aWRlciBmcm9tIFwiLi9Jb25JbWFnZXJ5UHJvdmlkZXIuanNcIjtcbmltcG9ydCBJb25Xb3JsZEltYWdlcnlTdHlsZSBmcm9tIFwiLi9Jb25Xb3JsZEltYWdlcnlTdHlsZS5qc1wiO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4ge0BsaW5rIElvbkltYWdlcnlQcm92aWRlcn0gaW5zdGFuY2UgZm9yIGlvbidzIGRlZmF1bHQgZ2xvYmFsIGJhc2UgaW1hZ2VyeSBsYXllciwgY3VycmVudGx5IEJpbmcgTWFwcy5cbiAqXG4gKiBAZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqIEBwYXJhbSB7SW9uV29ybGRJbWFnZXJ5U3R5bGV9IFtvcHRpb25zLnN0eWxlPUlvbldvcmxkSW1hZ2VyeVN0eWxlXSBUaGUgc3R5bGUgb2YgYmFzZSBpbWFnZXJ5LCBvbmx5IEFFUklBTCwgQUVSSUFMX1dJVEhfTEFCRUxTLCBhbmQgUk9BRCBhcmUgY3VycmVudGx5IHN1cHBvcnRlZC5cbiAqIEByZXR1cm5zIHtJb25JbWFnZXJ5UHJvdmlkZXJ9XG4gKlxuICogQHNlZSBJb25cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ3JlYXRlIENlc2l1bSBXb3JsZCBUZXJyYWluIHdpdGggZGVmYXVsdCBzZXR0aW5nc1xuICogdmFyIHZpZXdlciA9IG5ldyBDZXNpdW0uVmlld2VyKCdjZXNpdW1Db250YWluZXInLCB7XG4gKiAgICAgaW1hZ2VyeVByb3ZpZGVyIDogQ2VzaXVtLmNyZWF0ZVdvcmxkSW1hZ2VyeSgpO1xuICogfSk7XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENyZWF0ZSBDZXNpdW0gV29ybGQgVGVycmFpbiB3aXRoIHdhdGVyIGFuZCBub3JtYWxzLlxuICogdmFyIHZpZXdlciA9IG5ldyBDZXNpdW0uVmlld2VyKCdjZXNpdW1Db250YWluZXInLCB7XG4gKiAgICAgaW1hZ2VyeVByb3ZpZGVyIDogQ2VzaXVtLmNyZWF0ZVdvcmxkSW1hZ2VyeSh7XG4gKiAgICAgICAgIHN0eWxlOiBDZXNpdW0uSW9uV29ybGRJbWFnZXJ5U3R5bGUuQUVSSUFMX1dJVEhfTEFCRUxTXG4gKiAgICAgfSlcbiAqIH0pO1xuICpcbiAqL1xuZnVuY3Rpb24gY3JlYXRlV29ybGRJbWFnZXJ5KG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcbiAgdmFyIHN0eWxlID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMuc3R5bGUsIElvbldvcmxkSW1hZ2VyeVN0eWxlLkFFUklBTCk7XG4gIHJldHVybiBuZXcgSW9uSW1hZ2VyeVByb3ZpZGVyKHtcbiAgICBhc3NldElkOiBzdHlsZSxcbiAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVXb3JsZEltYWdlcnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///30289\n')},20107:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ findGroupMetadata; }\n/* harmony export */ });\n/* harmony import */ var _hasExtension_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81326);\n\n\n/**\n * Check if a content has a <code>3DTILES_metadata</code> extension, and if so,\n * look up the group from the <code>3DTILES_metadata.groups</code> object.\n *\n * @function\n *\n * @param {Cesium3DTileset} tileset The tileset to query for group metadata\n * @param {Object} contentHeader the JSON header for a {@link Cesium3DTileContent}\n * @return {GroupMetadata} the group metadata, or <code>undefined</code> if not found\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction findGroupMetadata(tileset, contentHeader) {\n  if ((0,_hasExtension_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(contentHeader, "3DTILES_metadata")) {\n    var extension = contentHeader.extensions["3DTILES_metadata"];\n    var groupId = extension.group;\n    return tileset.metadata.groups[groupId];\n  }\n\n  return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAxMDcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUE2Qzs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxRQUFRLHFDQUFxQztBQUN4RCxZQUFZLGVBQWU7QUFDM0I7QUFDQTtBQUNBO0FBQ2U7QUFDZixNQUFNLHFFQUFZO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvZmluZEdyb3VwTWV0YWRhdGEuanM/NjNjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaGFzRXh0ZW5zaW9uIGZyb20gXCIuL2hhc0V4dGVuc2lvbi5qc1wiO1xuXG4vKipcbiAqIENoZWNrIGlmIGEgY29udGVudCBoYXMgYSA8Y29kZT4zRFRJTEVTX21ldGFkYXRhPC9jb2RlPiBleHRlbnNpb24sIGFuZCBpZiBzbyxcbiAqIGxvb2sgdXAgdGhlIGdyb3VwIGZyb20gdGhlIDxjb2RlPjNEVElMRVNfbWV0YWRhdGEuZ3JvdXBzPC9jb2RlPiBvYmplY3QuXG4gKlxuICogQGZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtDZXNpdW0zRFRpbGVzZXR9IHRpbGVzZXQgVGhlIHRpbGVzZXQgdG8gcXVlcnkgZm9yIGdyb3VwIG1ldGFkYXRhXG4gKiBAcGFyYW0ge09iamVjdH0gY29udGVudEhlYWRlciB0aGUgSlNPTiBoZWFkZXIgZm9yIGEge0BsaW5rIENlc2l1bTNEVGlsZUNvbnRlbnR9XG4gKiBAcmV0dXJuIHtHcm91cE1ldGFkYXRhfSB0aGUgZ3JvdXAgbWV0YWRhdGEsIG9yIDxjb2RlPnVuZGVmaW5lZDwvY29kZT4gaWYgbm90IGZvdW5kXG4gKiBAcHJpdmF0ZVxuICogQGV4cGVyaW1lbnRhbCBUaGlzIGZlYXR1cmUgaXMgdXNpbmcgcGFydCBvZiB0aGUgM0QgVGlsZXMgc3BlYyB0aGF0IGlzIG5vdCBmaW5hbCBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2Ugd2l0aG91dCBDZXNpdW0ncyBzdGFuZGFyZCBkZXByZWNhdGlvbiBwb2xpY3kuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZpbmRHcm91cE1ldGFkYXRhKHRpbGVzZXQsIGNvbnRlbnRIZWFkZXIpIHtcbiAgaWYgKGhhc0V4dGVuc2lvbihjb250ZW50SGVhZGVyLCBcIjNEVElMRVNfbWV0YWRhdGFcIikpIHtcbiAgICB2YXIgZXh0ZW5zaW9uID0gY29udGVudEhlYWRlci5leHRlbnNpb25zW1wiM0RUSUxFU19tZXRhZGF0YVwiXTtcbiAgICB2YXIgZ3JvdXBJZCA9IGV4dGVuc2lvbi5ncm91cDtcbiAgICByZXR1cm4gdGlsZXNldC5tZXRhZGF0YS5ncm91cHNbZ3JvdXBJZF07XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20107\n')},17041:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(63367);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84828);\n/* harmony import */ var _Core_Matrix2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(71171);\n/* harmony import */ var _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(68201);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72248);\n\n\n\n\n\n\n\n\nvar ComponentsPerAttribute = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16,\n};\n\nvar ClassPerType = {\n  SCALAR: undefined,\n  VEC2: _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z,\n  VEC3: _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z,\n  VEC4: _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z,\n  MAT2: _Core_Matrix2_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z,\n  MAT3: _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z,\n  MAT4: _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z,\n};\n\n/**\n * @private\n */\nfunction getBinaryAccessor(accessor) {\n  var componentType = accessor.componentType;\n  var componentDatatype;\n  if (typeof componentType === "string") {\n    componentDatatype = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromName */ .Z.fromName(componentType);\n  } else {\n    componentDatatype = componentType;\n  }\n\n  var componentsPerAttribute = ComponentsPerAttribute[accessor.type];\n  var classType = ClassPerType[accessor.type];\n  return {\n    componentsPerAttribute: componentsPerAttribute,\n    classType: classType,\n    createArrayBufferView: function (buffer, byteOffset, length) {\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].createArrayBufferView */ .Z.createArrayBufferView(\n        componentDatatype,\n        buffer,\n        byteOffset,\n        componentsPerAttribute * length\n      );\n    },\n  };\n}\n/* harmony default export */ __webpack_exports__["Z"] = (getBinaryAccessor);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcwNDEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQztBQUNBO0FBQ0E7QUFDYztBQUNwQjtBQUNBO0FBQ0E7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUSxvRUFBVTtBQUNsQixRQUFRLG9FQUFVO0FBQ2xCLFFBQVEsb0VBQVU7QUFDbEIsUUFBUSxpRUFBTztBQUNmLFFBQVEsaUVBQU87QUFDZixRQUFRLGlFQUFPO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkZBQTBCO0FBQ2xELElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsdUhBQXVDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHlEQUFlLGlCQUFpQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL2dldEJpbmFyeUFjY2Vzc29yLmpzPzQ5NjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhcnRlc2lhbjIgZnJvbSBcIi4uL0NvcmUvQ2FydGVzaWFuMi5qc1wiO1xuaW1wb3J0IENhcnRlc2lhbjMgZnJvbSBcIi4uL0NvcmUvQ2FydGVzaWFuMy5qc1wiO1xuaW1wb3J0IENhcnRlc2lhbjQgZnJvbSBcIi4uL0NvcmUvQ2FydGVzaWFuNC5qc1wiO1xuaW1wb3J0IENvbXBvbmVudERhdGF0eXBlIGZyb20gXCIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlLmpzXCI7XG5pbXBvcnQgTWF0cml4MiBmcm9tIFwiLi4vQ29yZS9NYXRyaXgyLmpzXCI7XG5pbXBvcnQgTWF0cml4MyBmcm9tIFwiLi4vQ29yZS9NYXRyaXgzLmpzXCI7XG5pbXBvcnQgTWF0cml4NCBmcm9tIFwiLi4vQ29yZS9NYXRyaXg0LmpzXCI7XG5cbnZhciBDb21wb25lbnRzUGVyQXR0cmlidXRlID0ge1xuICBTQ0FMQVI6IDEsXG4gIFZFQzI6IDIsXG4gIFZFQzM6IDMsXG4gIFZFQzQ6IDQsXG4gIE1BVDI6IDQsXG4gIE1BVDM6IDksXG4gIE1BVDQ6IDE2LFxufTtcblxudmFyIENsYXNzUGVyVHlwZSA9IHtcbiAgU0NBTEFSOiB1bmRlZmluZWQsXG4gIFZFQzI6IENhcnRlc2lhbjIsXG4gIFZFQzM6IENhcnRlc2lhbjMsXG4gIFZFQzQ6IENhcnRlc2lhbjQsXG4gIE1BVDI6IE1hdHJpeDIsXG4gIE1BVDM6IE1hdHJpeDMsXG4gIE1BVDQ6IE1hdHJpeDQsXG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGdldEJpbmFyeUFjY2Vzc29yKGFjY2Vzc29yKSB7XG4gIHZhciBjb21wb25lbnRUeXBlID0gYWNjZXNzb3IuY29tcG9uZW50VHlwZTtcbiAgdmFyIGNvbXBvbmVudERhdGF0eXBlO1xuICBpZiAodHlwZW9mIGNvbXBvbmVudFR5cGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICBjb21wb25lbnREYXRhdHlwZSA9IENvbXBvbmVudERhdGF0eXBlLmZyb21OYW1lKGNvbXBvbmVudFR5cGUpO1xuICB9IGVsc2Uge1xuICAgIGNvbXBvbmVudERhdGF0eXBlID0gY29tcG9uZW50VHlwZTtcbiAgfVxuXG4gIHZhciBjb21wb25lbnRzUGVyQXR0cmlidXRlID0gQ29tcG9uZW50c1BlckF0dHJpYnV0ZVthY2Nlc3Nvci50eXBlXTtcbiAgdmFyIGNsYXNzVHlwZSA9IENsYXNzUGVyVHlwZVthY2Nlc3Nvci50eXBlXTtcbiAgcmV0dXJuIHtcbiAgICBjb21wb25lbnRzUGVyQXR0cmlidXRlOiBjb21wb25lbnRzUGVyQXR0cmlidXRlLFxuICAgIGNsYXNzVHlwZTogY2xhc3NUeXBlLFxuICAgIGNyZWF0ZUFycmF5QnVmZmVyVmlldzogZnVuY3Rpb24gKGJ1ZmZlciwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICByZXR1cm4gQ29tcG9uZW50RGF0YXR5cGUuY3JlYXRlQXJyYXlCdWZmZXJWaWV3KFxuICAgICAgICBjb21wb25lbnREYXRhdHlwZSxcbiAgICAgICAgYnVmZmVyLFxuICAgICAgICBieXRlT2Zmc2V0LFxuICAgICAgICBjb21wb25lbnRzUGVyQXR0cmlidXRlICogbGVuZ3RoXG4gICAgICApO1xuICAgIH0sXG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCBnZXRCaW5hcnlBY2Nlc3NvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17041\n')},11013:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n\n\n/**\n * Gets a GLSL snippet that clips a fragment using the `clip` function from {@link getClippingFunction} and styles it.\n *\n * @param {String} samplerUniformName Name of the uniform for the clipping planes texture sampler.\n * @param {String} matrixUniformName Name of the uniform for the clipping planes matrix.\n * @param {String} styleUniformName Name of the uniform for the clipping planes style, a vec4.\n * @returns {String} A string containing GLSL that clips and styles the current fragment.\n * @private\n */\nfunction getClipAndStyleCode(\n  samplerUniformName,\n  matrixUniformName,\n  styleUniformName\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("samplerUniformName", samplerUniformName);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("matrixUniformName", matrixUniformName);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("styleUniformName", styleUniformName);\n  //>>includeEnd(\'debug\');\n\n  var shaderCode =\n    "    float clipDistance = clip(gl_FragCoord, " +\n    samplerUniformName +\n    ", " +\n    matrixUniformName +\n    "); \\n" +\n    "    vec4 clippingPlanesEdgeColor = vec4(1.0); \\n" +\n    "    clippingPlanesEdgeColor.rgb = " +\n    styleUniformName +\n    ".rgb; \\n" +\n    "    float clippingPlanesEdgeWidth = " +\n    styleUniformName +\n    ".a; \\n" +\n    "    if (clipDistance > 0.0 && clipDistance < clippingPlanesEdgeWidth) \\n" +\n    "    { \\n" +\n    "        gl_FragColor = clippingPlanesEdgeColor;\\n" +\n    "    } \\n";\n  return shaderCode;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (getClipAndStyleCode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEwMTMuanMiLCJtYXBwaW5ncyI6IjtBQUFxQzs7QUFFckM7QUFDQSw2RUFBNkUsMkJBQTJCO0FBQ3hHO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDJGQUFtQjtBQUNyQixFQUFFLDJGQUFtQjtBQUNyQixFQUFFLDJGQUFtQjtBQUNyQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxXQUFXO0FBQ1gsb0RBQW9EO0FBQ3BELFdBQVc7QUFDWDtBQUNBO0FBQ0EseURBQWUsbUJBQW1CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvZ2V0Q2xpcEFuZFN0eWxlQ29kZS5qcz83NzdkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGVjayBmcm9tIFwiLi4vQ29yZS9DaGVjay5qc1wiO1xuXG4vKipcbiAqIEdldHMgYSBHTFNMIHNuaXBwZXQgdGhhdCBjbGlwcyBhIGZyYWdtZW50IHVzaW5nIHRoZSBgY2xpcGAgZnVuY3Rpb24gZnJvbSB7QGxpbmsgZ2V0Q2xpcHBpbmdGdW5jdGlvbn0gYW5kIHN0eWxlcyBpdC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc2FtcGxlclVuaWZvcm1OYW1lIE5hbWUgb2YgdGhlIHVuaWZvcm0gZm9yIHRoZSBjbGlwcGluZyBwbGFuZXMgdGV4dHVyZSBzYW1wbGVyLlxuICogQHBhcmFtIHtTdHJpbmd9IG1hdHJpeFVuaWZvcm1OYW1lIE5hbWUgb2YgdGhlIHVuaWZvcm0gZm9yIHRoZSBjbGlwcGluZyBwbGFuZXMgbWF0cml4LlxuICogQHBhcmFtIHtTdHJpbmd9IHN0eWxlVW5pZm9ybU5hbWUgTmFtZSBvZiB0aGUgdW5pZm9ybSBmb3IgdGhlIGNsaXBwaW5nIHBsYW5lcyBzdHlsZSwgYSB2ZWM0LlxuICogQHJldHVybnMge1N0cmluZ30gQSBzdHJpbmcgY29udGFpbmluZyBHTFNMIHRoYXQgY2xpcHMgYW5kIHN0eWxlcyB0aGUgY3VycmVudCBmcmFnbWVudC5cbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGdldENsaXBBbmRTdHlsZUNvZGUoXG4gIHNhbXBsZXJVbmlmb3JtTmFtZSxcbiAgbWF0cml4VW5pZm9ybU5hbWUsXG4gIHN0eWxlVW5pZm9ybU5hbWVcbikge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay50eXBlT2Yuc3RyaW5nKFwic2FtcGxlclVuaWZvcm1OYW1lXCIsIHNhbXBsZXJVbmlmb3JtTmFtZSk7XG4gIENoZWNrLnR5cGVPZi5zdHJpbmcoXCJtYXRyaXhVbmlmb3JtTmFtZVwiLCBtYXRyaXhVbmlmb3JtTmFtZSk7XG4gIENoZWNrLnR5cGVPZi5zdHJpbmcoXCJzdHlsZVVuaWZvcm1OYW1lXCIsIHN0eWxlVW5pZm9ybU5hbWUpO1xuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB2YXIgc2hhZGVyQ29kZSA9XG4gICAgXCIgICAgZmxvYXQgY2xpcERpc3RhbmNlID0gY2xpcChnbF9GcmFnQ29vcmQsIFwiICtcbiAgICBzYW1wbGVyVW5pZm9ybU5hbWUgK1xuICAgIFwiLCBcIiArXG4gICAgbWF0cml4VW5pZm9ybU5hbWUgK1xuICAgIFwiKTsgXFxuXCIgK1xuICAgIFwiICAgIHZlYzQgY2xpcHBpbmdQbGFuZXNFZGdlQ29sb3IgPSB2ZWM0KDEuMCk7IFxcblwiICtcbiAgICBcIiAgICBjbGlwcGluZ1BsYW5lc0VkZ2VDb2xvci5yZ2IgPSBcIiArXG4gICAgc3R5bGVVbmlmb3JtTmFtZSArXG4gICAgXCIucmdiOyBcXG5cIiArXG4gICAgXCIgICAgZmxvYXQgY2xpcHBpbmdQbGFuZXNFZGdlV2lkdGggPSBcIiArXG4gICAgc3R5bGVVbmlmb3JtTmFtZSArXG4gICAgXCIuYTsgXFxuXCIgK1xuICAgIFwiICAgIGlmIChjbGlwRGlzdGFuY2UgPiAwLjAgJiYgY2xpcERpc3RhbmNlIDwgY2xpcHBpbmdQbGFuZXNFZGdlV2lkdGgpIFxcblwiICtcbiAgICBcIiAgICB7IFxcblwiICtcbiAgICBcIiAgICAgICAgZ2xfRnJhZ0NvbG9yID0gY2xpcHBpbmdQbGFuZXNFZGdlQ29sb3I7XFxuXCIgK1xuICAgIFwiICAgIH0gXFxuXCI7XG4gIHJldHVybiBzaGFkZXJDb2RlO1xufVxuZXhwb3J0IGRlZmF1bHQgZ2V0Q2xpcEFuZFN0eWxlQ29kZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11013\n')},84167:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _ClippingPlaneCollection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21809);\n\n\n\n\nvar textureResolutionScratch = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * Gets the GLSL functions needed to retrieve clipping planes from a ClippingPlaneCollection\'s texture.\n *\n * @param {ClippingPlaneCollection} clippingPlaneCollection ClippingPlaneCollection with a defined texture.\n * @param {Context} context The current rendering context.\n * @returns {String} A string containing GLSL functions for retrieving clipping planes.\n * @private\n */\nfunction getClippingFunction(clippingPlaneCollection, context) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("clippingPlaneCollection", clippingPlaneCollection);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("context", context);\n  //>>includeEnd(\'debug\');\n  var unionClippingRegions = clippingPlaneCollection.unionClippingRegions;\n  var clippingPlanesLength = clippingPlaneCollection.length;\n  var usingFloatTexture = _ClippingPlaneCollection_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].useFloatTexture */ .Z.useFloatTexture(context);\n  var textureResolution = _ClippingPlaneCollection_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getTextureResolution */ .Z.getTextureResolution(\n    clippingPlaneCollection,\n    context,\n    textureResolutionScratch\n  );\n  var width = textureResolution.x;\n  var height = textureResolution.y;\n\n  var functions = usingFloatTexture\n    ? getClippingPlaneFloat(width, height)\n    : getClippingPlaneUint8(width, height);\n  functions += "\\n";\n  functions += unionClippingRegions\n    ? clippingFunctionUnion(clippingPlanesLength)\n    : clippingFunctionIntersect(clippingPlanesLength);\n  return functions;\n}\n\nfunction clippingFunctionUnion(clippingPlanesLength) {\n  var functionString =\n    "float clip(vec4 fragCoord, sampler2D clippingPlanes, mat4 clippingPlanesMatrix)\\n" +\n    "{\\n" +\n    "    vec4 position = czm_windowToEyeCoordinates(fragCoord);\\n" +\n    "    vec3 clipNormal = vec3(0.0);\\n" +\n    "    vec3 clipPosition = vec3(0.0);\\n" +\n    "    float clipAmount;\\n" + // For union planes, we want to get the min distance. So we set the initial value to the first plane distance in the loop below.\n    "    float pixelWidth = czm_metersPerPixel(position);\\n" +\n    "    bool breakAndDiscard = false;\\n" +\n    "    for (int i = 0; i < " +\n    clippingPlanesLength +\n    "; ++i)\\n" +\n    "    {\\n" +\n    "        vec4 clippingPlane = getClippingPlane(clippingPlanes, i, clippingPlanesMatrix);\\n" +\n    "        clipNormal = clippingPlane.xyz;\\n" +\n    "        clipPosition = -clippingPlane.w * clipNormal;\\n" +\n    "        float amount = dot(clipNormal, (position.xyz - clipPosition)) / pixelWidth;\\n" +\n    "        clipAmount = czm_branchFreeTernary(i == 0, amount, min(amount, clipAmount));\\n" +\n    "        if (amount <= 0.0)\\n" +\n    "        {\\n" +\n    "           breakAndDiscard = true;\\n" +\n    "           break;\\n" + // HLSL compiler bug if we discard here: https://bugs.chromium.org/p/angleproject/issues/detail?id=1945#c6\n    "        }\\n" +\n    "    }\\n" +\n    "    if (breakAndDiscard) {\\n" +\n    "        discard;\\n" +\n    "    }\\n" +\n    "    return clipAmount;\\n" +\n    "}\\n";\n  return functionString;\n}\n\nfunction clippingFunctionIntersect(clippingPlanesLength) {\n  var functionString =\n    "float clip(vec4 fragCoord, sampler2D clippingPlanes, mat4 clippingPlanesMatrix)\\n" +\n    "{\\n" +\n    "    bool clipped = true;\\n" +\n    "    vec4 position = czm_windowToEyeCoordinates(fragCoord);\\n" +\n    "    vec3 clipNormal = vec3(0.0);\\n" +\n    "    vec3 clipPosition = vec3(0.0);\\n" +\n    "    float clipAmount = 0.0;\\n" +\n    "    float pixelWidth = czm_metersPerPixel(position);\\n" +\n    "    for (int i = 0; i < " +\n    clippingPlanesLength +\n    "; ++i)\\n" +\n    "    {\\n" +\n    "        vec4 clippingPlane = getClippingPlane(clippingPlanes, i, clippingPlanesMatrix);\\n" +\n    "        clipNormal = clippingPlane.xyz;\\n" +\n    "        clipPosition = -clippingPlane.w * clipNormal;\\n" +\n    "        float amount = dot(clipNormal, (position.xyz - clipPosition)) / pixelWidth;\\n" +\n    "        clipAmount = max(amount, clipAmount);\\n" +\n    "        clipped = clipped && (amount <= 0.0);\\n" +\n    "    }\\n" +\n    "    if (clipped)\\n" +\n    "    {\\n" +\n    "        discard;\\n" +\n    "    }\\n" +\n    "    return clipAmount;\\n" +\n    "}\\n";\n  return functionString;\n}\n\nfunction getClippingPlaneFloat(width, height) {\n  var pixelWidth = 1.0 / width;\n  var pixelHeight = 1.0 / height;\n\n  var pixelWidthString = pixelWidth + "";\n  if (pixelWidthString.indexOf(".") === -1) {\n    pixelWidthString += ".0";\n  }\n  var pixelHeightString = pixelHeight + "";\n  if (pixelHeightString.indexOf(".") === -1) {\n    pixelHeightString += ".0";\n  }\n\n  var functionString =\n    "vec4 getClippingPlane(highp sampler2D packedClippingPlanes, int clippingPlaneNumber, mat4 transform)\\n" +\n    "{\\n" +\n    "    int pixY = clippingPlaneNumber / " +\n    width +\n    ";\\n" +\n    "    int pixX = clippingPlaneNumber - (pixY * " +\n    width +\n    ");\\n" +\n    "    float u = (float(pixX) + 0.5) * " +\n    pixelWidthString +\n    ";\\n" + // sample from center of pixel\n    "    float v = (float(pixY) + 0.5) * " +\n    pixelHeightString +\n    ";\\n" +\n    "    vec4 plane = texture2D(packedClippingPlanes, vec2(u, v));\\n" +\n    "    return czm_transformPlane(plane, transform);\\n" +\n    "}\\n";\n  return functionString;\n}\n\nfunction getClippingPlaneUint8(width, height) {\n  var pixelWidth = 1.0 / width;\n  var pixelHeight = 1.0 / height;\n\n  var pixelWidthString = pixelWidth + "";\n  if (pixelWidthString.indexOf(".") === -1) {\n    pixelWidthString += ".0";\n  }\n  var pixelHeightString = pixelHeight + "";\n  if (pixelHeightString.indexOf(".") === -1) {\n    pixelHeightString += ".0";\n  }\n\n  var functionString =\n    "vec4 getClippingPlane(highp sampler2D packedClippingPlanes, int clippingPlaneNumber, mat4 transform)\\n" +\n    "{\\n" +\n    "    int clippingPlaneStartIndex = clippingPlaneNumber * 2;\\n" + // clipping planes are two pixels each\n    "    int pixY = clippingPlaneStartIndex / " +\n    width +\n    ";\\n" +\n    "    int pixX = clippingPlaneStartIndex - (pixY * " +\n    width +\n    ");\\n" +\n    "    float u = (float(pixX) + 0.5) * " +\n    pixelWidthString +\n    ";\\n" + // sample from center of pixel\n    "    float v = (float(pixY) + 0.5) * " +\n    pixelHeightString +\n    ";\\n" +\n    "    vec4 oct32 = texture2D(packedClippingPlanes, vec2(u, v)) * 255.0;\\n" +\n    "    vec2 oct = vec2(oct32.x * 256.0 + oct32.y, oct32.z * 256.0 + oct32.w);\\n" +\n    "    vec4 plane;\\n" +\n    "    plane.xyz = czm_octDecode(oct, 65535.0);\\n" +\n    "    plane.w = czm_unpackFloat(texture2D(packedClippingPlanes, vec2(u + " +\n    pixelWidthString +\n    ", v)));\\n" +\n    "    return czm_transformPlane(plane, transform);\\n" +\n    "}\\n";\n  return functionString;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (getClippingFunction);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84167\n')}}]);