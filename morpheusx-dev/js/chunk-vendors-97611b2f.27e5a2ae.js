"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[4004],{25489:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * The encoding that is used for a heightmap\n *\n * @enum {Number}\n */\nvar HeightmapEncoding = {\n  /**\n   * No encoding\n   *\n   * @type {Number}\n   * @constant\n   */\n  NONE: 0,\n\n  /**\n   * LERC encoding\n   *\n   * @type {Number}\n   * @constant\n   *\n   * @see {@link https://github.com/Esri/lerc|The LERC specification}\n   */\n  LERC: 1,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(HeightmapEncoding));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU0ODkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLHlEQUFlLGdDQUFnQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvSGVpZ2h0bWFwRW5jb2RpbmcuanM/Nzc4MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBlbmNvZGluZyB0aGF0IGlzIHVzZWQgZm9yIGEgaGVpZ2h0bWFwXG4gKlxuICogQGVudW0ge051bWJlcn1cbiAqL1xudmFyIEhlaWdodG1hcEVuY29kaW5nID0ge1xuICAvKipcbiAgICogTm8gZW5jb2RpbmdcbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBOT05FOiAwLFxuXG4gIC8qKlxuICAgKiBMRVJDIGVuY29kaW5nXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKlxuICAgKiBAc2VlIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9sZXJjfFRoZSBMRVJDIHNwZWNpZmljYXRpb259XG4gICAqL1xuICBMRVJDOiAxLFxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoSGVpZ2h0bWFwRW5jb2RpbmcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25489\n')},57134:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13222);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12572);\n/* harmony import */ var _GeographicProjection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39756);\n/* harmony import */ var _HeightmapEncoding_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(25489);\n/* harmony import */ var _HeightmapTessellator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(25260);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(99417);\n/* harmony import */ var _OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(25405);\n/* harmony import */ var _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(96190);\n/* harmony import */ var _TaskProcessor_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(2819);\n/* harmony import */ var _TerrainData_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(99978);\n/* harmony import */ var _TerrainEncoding_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(41782);\n/* harmony import */ var _TerrainMesh_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(13758);\n/* harmony import */ var _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(1497);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Terrain data for a single tile where the terrain data is represented as a heightmap.  A heightmap\n * is a rectangular array of heights in row-major order from north to south and west to east.\n *\n * @alias HeightmapTerrainData\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} options.buffer The buffer containing height data.\n * @param {Number} options.width The width (longitude direction) of the heightmap, in samples.\n * @param {Number} options.height The height (latitude direction) of the heightmap, in samples.\n * @param {Number} [options.childTileMask=15] A bit mask indicating which of this tile\'s four children exist.\n *                 If a child\'s bit is set, geometry will be requested for that tile as well when it\n *                 is needed.  If the bit is cleared, the child tile is not requested and geometry is\n *                 instead upsampled from the parent.  The bit values are as follows:\n *                 <table>\n *                  <tr><th>Bit Position</th><th>Bit Value</th><th>Child Tile</th></tr>\n *                  <tr><td>0</td><td>1</td><td>Southwest</td></tr>\n *                  <tr><td>1</td><td>2</td><td>Southeast</td></tr>\n *                  <tr><td>2</td><td>4</td><td>Northwest</td></tr>\n *                  <tr><td>3</td><td>8</td><td>Northeast</td></tr>\n *                 </table>\n * @param {Uint8Array} [options.waterMask] The water mask included in this terrain data, if any.  A water mask is a square\n *                     Uint8Array or image where a value of 255 indicates water and a value of 0 indicates land.\n *                     Values in between 0 and 255 are allowed as well to smoothly blend between land and water.\n * @param {Object} [options.structure] An object describing the structure of the height data.\n * @param {Number} [options.structure.heightScale=1.0] The factor by which to multiply height samples in order to obtain\n *                 the height above the heightOffset, in meters.  The heightOffset is added to the resulting\n *                 height after multiplying by the scale.\n * @param {Number} [options.structure.heightOffset=0.0] The offset to add to the scaled height to obtain the final\n *                 height in meters.  The offset is added after the height sample is multiplied by the\n *                 heightScale.\n * @param {Number} [options.structure.elementsPerHeight=1] The number of elements in the buffer that make up a single height\n *                 sample.  This is usually 1, indicating that each element is a separate height sample.  If\n *                 it is greater than 1, that number of elements together form the height sample, which is\n *                 computed according to the structure.elementMultiplier and structure.isBigEndian properties.\n * @param {Number} [options.structure.stride=1] The number of elements to skip to get from the first element of\n *                 one height to the first element of the next height.\n * @param {Number} [options.structure.elementMultiplier=256.0] The multiplier used to compute the height value when the\n *                 stride property is greater than 1.  For example, if the stride is 4 and the strideMultiplier\n *                 is 256, the height is computed as follows:\n *                 `height = buffer[index] + buffer[index + 1] * 256 + buffer[index + 2] * 256 * 256 + buffer[index + 3] * 256 * 256 * 256`\n *                 This is assuming that the isBigEndian property is false.  If it is true, the order of the\n *                 elements is reversed.\n * @param {Boolean} [options.structure.isBigEndian=false] Indicates endianness of the elements in the buffer when the\n *                  stride property is greater than 1.  If this property is false, the first element is the\n *                  low-order element.  If it is true, the first element is the high-order element.\n * @param {Number} [options.structure.lowestEncodedHeight] The lowest value that can be stored in the height buffer.  Any heights that are lower\n *                 than this value after encoding with the `heightScale` and `heightOffset` are clamped to this value.  For example, if the height\n *                 buffer is a `Uint16Array`, this value should be 0 because a `Uint16Array` cannot store negative numbers.  If this parameter is\n *                 not specified, no minimum value is enforced.\n * @param {Number} [options.structure.highestEncodedHeight] The highest value that can be stored in the height buffer.  Any heights that are higher\n *                 than this value after encoding with the `heightScale` and `heightOffset` are clamped to this value.  For example, if the height\n *                 buffer is a `Uint16Array`, this value should be `256 * 256 - 1` or 65535 because a `Uint16Array` cannot store numbers larger\n *                 than 65535.  If this parameter is not specified, no maximum value is enforced.\n * @param {HeightmapEncoding} [options.encoding=HeightmapEncoding.NONE] The encoding that is used on the buffer.\n * @param {Boolean} [options.createdByUpsampling=false] True if this instance was created by upsampling another instance;\n *                  otherwise, false.\n *\n *\n * @example\n * var buffer = ...\n * var heightBuffer = new Uint16Array(buffer, 0, that._heightmapWidth * that._heightmapWidth);\n * var childTileMask = new Uint8Array(buffer, heightBuffer.byteLength, 1)[0];\n * var waterMask = new Uint8Array(buffer, heightBuffer.byteLength + 1, buffer.byteLength - heightBuffer.byteLength - 1);\n * var terrainData = new Cesium.HeightmapTerrainData({\n *   buffer : heightBuffer,\n *   width : 65,\n *   height : 65,\n *   childTileMask : childTileMask,\n *   waterMask : waterMask\n * });\n *\n * @see TerrainData\n * @see QuantizedMeshTerrainData\n * @see GoogleEarthEnterpriseTerrainData\n */\nfunction HeightmapTerrainData(options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(options) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(options.buffer)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("options.buffer is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(options.width)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("options.width is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(options.height)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("options.height is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._buffer = options.buffer;\n  this._width = options.width;\n  this._height = options.height;\n  this._childTileMask = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.childTileMask, 15);\n  this._encoding = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.encoding, _HeightmapEncoding_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].NONE */ .Z.NONE);\n\n  var defaultStructure = _HeightmapTessellator_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].DEFAULT_STRUCTURE */ .Z.DEFAULT_STRUCTURE;\n  var structure = options.structure;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(structure)) {\n    structure = defaultStructure;\n  } else if (structure !== defaultStructure) {\n    structure.heightScale = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n      structure.heightScale,\n      defaultStructure.heightScale\n    );\n    structure.heightOffset = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n      structure.heightOffset,\n      defaultStructure.heightOffset\n    );\n    structure.elementsPerHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n      structure.elementsPerHeight,\n      defaultStructure.elementsPerHeight\n    );\n    structure.stride = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(structure.stride, defaultStructure.stride);\n    structure.elementMultiplier = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n      structure.elementMultiplier,\n      defaultStructure.elementMultiplier\n    );\n    structure.isBigEndian = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n      structure.isBigEndian,\n      defaultStructure.isBigEndian\n    );\n  }\n\n  this._structure = structure;\n  this._createdByUpsampling = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.createdByUpsampling, false);\n  this._waterMask = options.waterMask;\n\n  this._skirtHeight = undefined;\n  this._bufferType =\n    this._encoding === _HeightmapEncoding_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].LERC */ .Z.LERC\n      ? Float32Array\n      : this._buffer.constructor;\n  this._mesh = undefined;\n}\n\nObject.defineProperties(HeightmapTerrainData.prototype, {\n  /**\n   * An array of credits for this tile.\n   * @memberof HeightmapTerrainData.prototype\n   * @type {Credit[]}\n   */\n  credits: {\n    get: function () {\n      return undefined;\n    },\n  },\n  /**\n   * The water mask included in this terrain data, if any.  A water mask is a square\n   * Uint8Array or image where a value of 255 indicates water and a value of 0 indicates land.\n   * Values in between 0 and 255 are allowed as well to smoothly blend between land and water.\n   * @memberof HeightmapTerrainData.prototype\n   * @type {Uint8Array|HTMLImageElement|HTMLCanvasElement}\n   */\n  waterMask: {\n    get: function () {\n      return this._waterMask;\n    },\n  },\n\n  childTileMask: {\n    get: function () {\n      return this._childTileMask;\n    },\n  },\n});\n\nvar createMeshTaskName = "createVerticesFromHeightmap";\nvar createMeshTaskProcessorNoThrottle = new _TaskProcessor_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z(createMeshTaskName);\nvar createMeshTaskProcessorThrottle = new _TaskProcessor_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z(\n  createMeshTaskName,\n  _TerrainData_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].maximumAsynchronousTasks */ .Z.maximumAsynchronousTasks\n);\n\n/**\n * Creates a {@link TerrainMesh} from this terrain data.\n *\n * @private\n *\n * @param {Object} options Object with the following properties:\n * @param {TilingScheme} options.tilingScheme The tiling scheme to which this tile belongs.\n * @param {Number} options.x The X coordinate of the tile for which to create the terrain data.\n * @param {Number} options.y The Y coordinate of the tile for which to create the terrain data.\n * @param {Number} options.level The level of the tile for which to create the terrain data.\n * @param {Number} [options.exaggeration=1.0] The scale used to exaggerate the terrain.\n * @param {Number} [options.exaggerationRelativeHeight=0.0] The height relative to which terrain is exaggerated.\n * @param {Boolean} [options.throttle=true] If true, indicates that this operation will need to be retried if too many asynchronous mesh creations are already in progress.\n * @returns {Promise.<TerrainMesh>|undefined} A promise for the terrain mesh, or undefined if too many\n *          asynchronous mesh creations are already in progress and the operation should\n *          be retried later.\n */\nHeightmapTerrainData.prototype.createMesh = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("options.tilingScheme", options.tilingScheme);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number */ .Z.typeOf.number("options.x", options.x);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number */ .Z.typeOf.number("options.y", options.y);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number */ .Z.typeOf.number("options.level", options.level);\n  //>>includeEnd(\'debug\');\n\n  var tilingScheme = options.tilingScheme;\n  var x = options.x;\n  var y = options.y;\n  var level = options.level;\n  var exaggeration = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.exaggeration, 1.0);\n  var exaggerationRelativeHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    options.exaggerationRelativeHeight,\n    0.0\n  );\n  var throttle = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.throttle, true);\n\n  var ellipsoid = tilingScheme.ellipsoid;\n  var nativeRectangle = tilingScheme.tileXYToNativeRectangle(x, y, level);\n  var rectangle = tilingScheme.tileXYToRectangle(x, y, level);\n\n  // Compute the center of the tile for RTC rendering.\n  var center = ellipsoid.cartographicToCartesian(_Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].center */ .Z.center(rectangle));\n\n  var structure = this._structure;\n\n  var levelZeroMaxError = _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].getEstimatedLevelZeroGeometricErrorForAHeightmap */ .Z.getEstimatedLevelZeroGeometricErrorForAHeightmap(\n    ellipsoid,\n    this._width,\n    tilingScheme.getNumberOfXTilesAtLevel(0)\n  );\n  var thisLevelMaxError = levelZeroMaxError / (1 << level);\n  this._skirtHeight = Math.min(thisLevelMaxError * 4.0, 1000.0);\n\n  var createMeshTaskProcessor = throttle\n    ? createMeshTaskProcessorThrottle\n    : createMeshTaskProcessorNoThrottle;\n\n  var verticesPromise = createMeshTaskProcessor.scheduleTask({\n    heightmap: this._buffer,\n    structure: structure,\n    includeWebMercatorT: true,\n    width: this._width,\n    height: this._height,\n    nativeRectangle: nativeRectangle,\n    rectangle: rectangle,\n    relativeToCenter: center,\n    ellipsoid: ellipsoid,\n    skirtHeight: this._skirtHeight,\n    isGeographic: tilingScheme.projection instanceof _GeographicProjection_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z,\n    exaggeration: exaggeration,\n    exaggerationRelativeHeight: exaggerationRelativeHeight,\n    encoding: this._encoding,\n  });\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(verticesPromise)) {\n    // Postponed\n    return undefined;\n  }\n\n  var that = this;\n  return (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(verticesPromise, function (result) {\n    var indicesAndEdges;\n    if (that._skirtHeight > 0.0) {\n      indicesAndEdges = _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].getRegularGridAndSkirtIndicesAndEdgeIndices */ .Z.getRegularGridAndSkirtIndicesAndEdgeIndices(\n        result.gridWidth,\n        result.gridHeight\n      );\n    } else {\n      indicesAndEdges = _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].getRegularGridIndicesAndEdgeIndices */ .Z.getRegularGridIndicesAndEdgeIndices(\n        result.gridWidth,\n        result.gridHeight\n      );\n    }\n\n    var vertexCountWithoutSkirts = result.gridWidth * result.gridHeight;\n\n    // Clone complex result objects because the transfer from the web worker\n    // has stripped them down to JSON-style objects.\n    that._mesh = new _TerrainMesh_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z(\n      center,\n      new Float32Array(result.vertices),\n      indicesAndEdges.indices,\n      indicesAndEdges.indexCountWithoutSkirts,\n      vertexCountWithoutSkirts,\n      result.minimumHeight,\n      result.maximumHeight,\n      _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(result.boundingSphere3D),\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(result.occludeePointInScaledSpace),\n      result.numberOfAttributes,\n      _OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(result.orientedBoundingBox),\n      _TerrainEncoding_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].clone */ .Z.clone(result.encoding),\n      indicesAndEdges.westIndicesSouthToNorth,\n      indicesAndEdges.southIndicesEastToWest,\n      indicesAndEdges.eastIndicesNorthToSouth,\n      indicesAndEdges.northIndicesWestToEast\n    );\n\n    // Free memory received from server after mesh is created.\n    that._buffer = undefined;\n    return that._mesh;\n  });\n};\n\n/**\n * @param {Object} options Object with the following properties:\n * @param {TilingScheme} options.tilingScheme The tiling scheme to which this tile belongs.\n * @param {Number} options.x The X coordinate of the tile for which to create the terrain data.\n * @param {Number} options.y The Y coordinate of the tile for which to create the terrain data.\n * @param {Number} options.level The level of the tile for which to create the terrain data.\n * @param {Number} [options.exaggeration=1.0] The scale used to exaggerate the terrain.\n * @param {Number} [options.exaggerationRelativeHeight=0.0] The height relative to which terrain is exaggerated.\n *\n * @private\n */\nHeightmapTerrainData.prototype._createMeshSync = function (options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("options.tilingScheme", options.tilingScheme);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number */ .Z.typeOf.number("options.x", options.x);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number */ .Z.typeOf.number("options.y", options.y);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number */ .Z.typeOf.number("options.level", options.level);\n  //>>includeEnd(\'debug\');\n\n  var tilingScheme = options.tilingScheme;\n  var x = options.x;\n  var y = options.y;\n  var level = options.level;\n  var exaggeration = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.exaggeration, 1.0);\n  var exaggerationRelativeHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    options.exaggerationRelativeHeight,\n    0.0\n  );\n\n  var ellipsoid = tilingScheme.ellipsoid;\n  var nativeRectangle = tilingScheme.tileXYToNativeRectangle(x, y, level);\n  var rectangle = tilingScheme.tileXYToRectangle(x, y, level);\n\n  // Compute the center of the tile for RTC rendering.\n  var center = ellipsoid.cartographicToCartesian(_Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].center */ .Z.center(rectangle));\n\n  var structure = this._structure;\n\n  var levelZeroMaxError = _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].getEstimatedLevelZeroGeometricErrorForAHeightmap */ .Z.getEstimatedLevelZeroGeometricErrorForAHeightmap(\n    ellipsoid,\n    this._width,\n    tilingScheme.getNumberOfXTilesAtLevel(0)\n  );\n  var thisLevelMaxError = levelZeroMaxError / (1 << level);\n  this._skirtHeight = Math.min(thisLevelMaxError * 4.0, 1000.0);\n\n  var result = _HeightmapTessellator_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].computeVertices */ .Z.computeVertices({\n    heightmap: this._buffer,\n    structure: structure,\n    includeWebMercatorT: true,\n    width: this._width,\n    height: this._height,\n    nativeRectangle: nativeRectangle,\n    rectangle: rectangle,\n    relativeToCenter: center,\n    ellipsoid: ellipsoid,\n    skirtHeight: this._skirtHeight,\n    isGeographic: tilingScheme.projection instanceof _GeographicProjection_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z,\n    exaggeration: exaggeration,\n    exaggerationRelativeHeight: exaggerationRelativeHeight,\n  });\n\n  // Free memory received from server after mesh is created.\n  this._buffer = undefined;\n\n  var indicesAndEdges;\n  if (this._skirtHeight > 0.0) {\n    indicesAndEdges = _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].getRegularGridAndSkirtIndicesAndEdgeIndices */ .Z.getRegularGridAndSkirtIndicesAndEdgeIndices(\n      this._width,\n      this._height\n    );\n  } else {\n    indicesAndEdges = _TerrainProvider_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].getRegularGridIndicesAndEdgeIndices */ .Z.getRegularGridIndicesAndEdgeIndices(\n      this._width,\n      this._height\n    );\n  }\n\n  var vertexCountWithoutSkirts = result.gridWidth * result.gridHeight;\n\n  // No need to clone here (as we do in the async version) because the result\n  // is not coming from a web worker.\n  this._mesh = new _TerrainMesh_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z(\n    center,\n    result.vertices,\n    indicesAndEdges.indices,\n    indicesAndEdges.indexCountWithoutSkirts,\n    vertexCountWithoutSkirts,\n    result.minimumHeight,\n    result.maximumHeight,\n    result.boundingSphere3D,\n    result.occludeePointInScaledSpace,\n    result.encoding.stride,\n    result.orientedBoundingBox,\n    result.encoding,\n    indicesAndEdges.westIndicesSouthToNorth,\n    indicesAndEdges.southIndicesEastToWest,\n    indicesAndEdges.eastIndicesNorthToSouth,\n    indicesAndEdges.northIndicesWestToEast\n  );\n\n  return this._mesh;\n};\n\n/**\n * Computes the terrain height at a specified longitude and latitude.\n *\n * @param {Rectangle} rectangle The rectangle covered by this terrain data.\n * @param {Number} longitude The longitude in radians.\n * @param {Number} latitude The latitude in radians.\n * @returns {Number} The terrain height at the specified position.  If the position\n *          is outside the rectangle, this method will extrapolate the height, which is likely to be wildly\n *          incorrect for positions far outside the rectangle.\n */\nHeightmapTerrainData.prototype.interpolateHeight = function (\n  rectangle,\n  longitude,\n  latitude\n) {\n  var width = this._width;\n  var height = this._height;\n\n  var structure = this._structure;\n  var stride = structure.stride;\n  var elementsPerHeight = structure.elementsPerHeight;\n  var elementMultiplier = structure.elementMultiplier;\n  var isBigEndian = structure.isBigEndian;\n  var heightOffset = structure.heightOffset;\n  var heightScale = structure.heightScale;\n\n  var isMeshCreated = (0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(this._mesh);\n  var isLERCEncoding = this._encoding === _HeightmapEncoding_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].LERC */ .Z.LERC;\n  var isInterpolationImpossible = !isMeshCreated && isLERCEncoding;\n  if (isInterpolationImpossible) {\n    // We can\'t interpolate using the buffer because it\'s LERC encoded\n    //  so please call createMesh() first and interpolate using the mesh;\n    //  as mesh creation will decode the LERC buffer\n    return undefined;\n  }\n\n  var heightSample;\n  if (isMeshCreated) {\n    var buffer = this._mesh.vertices;\n    var encoding = this._mesh.encoding;\n    heightSample = interpolateMeshHeight(\n      buffer,\n      encoding,\n      heightOffset,\n      heightScale,\n      rectangle,\n      width,\n      height,\n      longitude,\n      latitude\n    );\n  } else {\n    heightSample = interpolateHeight(\n      this._buffer,\n      elementsPerHeight,\n      elementMultiplier,\n      stride,\n      isBigEndian,\n      rectangle,\n      width,\n      height,\n      longitude,\n      latitude\n    );\n    heightSample = heightSample * heightScale + heightOffset;\n  }\n\n  return heightSample;\n};\n\n/**\n * Upsamples this terrain data for use by a descendant tile.  The resulting instance will contain a subset of the\n * height samples in this instance, interpolated if necessary.\n *\n * @param {TilingScheme} tilingScheme The tiling scheme of this terrain data.\n * @param {Number} thisX The X coordinate of this tile in the tiling scheme.\n * @param {Number} thisY The Y coordinate of this tile in the tiling scheme.\n * @param {Number} thisLevel The level of this tile in the tiling scheme.\n * @param {Number} descendantX The X coordinate within the tiling scheme of the descendant tile for which we are upsampling.\n * @param {Number} descendantY The Y coordinate within the tiling scheme of the descendant tile for which we are upsampling.\n * @param {Number} descendantLevel The level within the tiling scheme of the descendant tile for which we are upsampling.\n * @returns {Promise.<HeightmapTerrainData>|undefined} A promise for upsampled heightmap terrain data for the descendant tile,\n *          or undefined if too many asynchronous upsample operations are in progress and the request has been\n *          deferred.\n */\nHeightmapTerrainData.prototype.upsample = function (\n  tilingScheme,\n  thisX,\n  thisY,\n  thisLevel,\n  descendantX,\n  descendantY,\n  descendantLevel\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(tilingScheme)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("tilingScheme is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(thisX)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("thisX is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(thisY)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("thisY is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(thisLevel)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("thisLevel is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(descendantX)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("descendantX is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(descendantY)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("descendantY is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(descendantLevel)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("descendantLevel is required.");\n  }\n  var levelDifference = descendantLevel - thisLevel;\n  if (levelDifference > 1) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n      "Upsampling through more than one level at a time is not currently supported."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var meshData = this._mesh;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(meshData)) {\n    return undefined;\n  }\n\n  var width = this._width;\n  var height = this._height;\n  var structure = this._structure;\n  var stride = structure.stride;\n\n  var heights = new this._bufferType(width * height * stride);\n\n  var buffer = meshData.vertices;\n  var encoding = meshData.encoding;\n\n  // PERFORMANCE_IDEA: don\'t recompute these rectangles - the caller already knows them.\n  var sourceRectangle = tilingScheme.tileXYToRectangle(thisX, thisY, thisLevel);\n  var destinationRectangle = tilingScheme.tileXYToRectangle(\n    descendantX,\n    descendantY,\n    descendantLevel\n  );\n\n  var heightOffset = structure.heightOffset;\n  var heightScale = structure.heightScale;\n\n  var elementsPerHeight = structure.elementsPerHeight;\n  var elementMultiplier = structure.elementMultiplier;\n  var isBigEndian = structure.isBigEndian;\n\n  var divisor = Math.pow(elementMultiplier, elementsPerHeight - 1);\n\n  for (var j = 0; j < height; ++j) {\n    var latitude = _Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].lerp */ .Z.lerp(\n      destinationRectangle.north,\n      destinationRectangle.south,\n      j / (height - 1)\n    );\n    for (var i = 0; i < width; ++i) {\n      var longitude = _Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].lerp */ .Z.lerp(\n        destinationRectangle.west,\n        destinationRectangle.east,\n        i / (width - 1)\n      );\n      var heightSample = interpolateMeshHeight(\n        buffer,\n        encoding,\n        heightOffset,\n        heightScale,\n        sourceRectangle,\n        width,\n        height,\n        longitude,\n        latitude\n      );\n\n      // Use conditionals here instead of Math.min and Math.max so that an undefined\n      // lowestEncodedHeight or highestEncodedHeight has no effect.\n      heightSample =\n        heightSample < structure.lowestEncodedHeight\n          ? structure.lowestEncodedHeight\n          : heightSample;\n      heightSample =\n        heightSample > structure.highestEncodedHeight\n          ? structure.highestEncodedHeight\n          : heightSample;\n\n      setHeight(\n        heights,\n        elementsPerHeight,\n        elementMultiplier,\n        divisor,\n        stride,\n        isBigEndian,\n        j * width + i,\n        heightSample\n      );\n    }\n  }\n\n  return new HeightmapTerrainData({\n    buffer: heights,\n    width: width,\n    height: height,\n    childTileMask: 0,\n    structure: this._structure,\n    createdByUpsampling: true,\n  });\n};\n\n/**\n * Determines if a given child tile is available, based on the\n * {@link HeightmapTerrainData.childTileMask}.  The given child tile coordinates are assumed\n * to be one of the four children of this tile.  If non-child tile coordinates are\n * given, the availability of the southeast child tile is returned.\n *\n * @param {Number} thisX The tile X coordinate of this (the parent) tile.\n * @param {Number} thisY The tile Y coordinate of this (the parent) tile.\n * @param {Number} childX The tile X coordinate of the child tile to check for availability.\n * @param {Number} childY The tile Y coordinate of the child tile to check for availability.\n * @returns {Boolean} True if the child tile is available; otherwise, false.\n */\nHeightmapTerrainData.prototype.isChildAvailable = function (\n  thisX,\n  thisY,\n  childX,\n  childY\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(thisX)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("thisX is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(thisY)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("thisY is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(childX)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("childX is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(childY)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("childY is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var bitNumber = 2; // northwest child\n  if (childX !== thisX * 2) {\n    ++bitNumber; // east child\n  }\n  if (childY !== thisY * 2) {\n    bitNumber -= 2; // south child\n  }\n\n  return (this._childTileMask & (1 << bitNumber)) !== 0;\n};\n\n/**\n * Gets a value indicating whether or not this terrain data was created by upsampling lower resolution\n * terrain data.  If this value is false, the data was obtained from some other source, such\n * as by downloading it from a remote server.  This method should return true for instances\n * returned from a call to {@link HeightmapTerrainData#upsample}.\n *\n * @returns {Boolean} True if this instance was created by upsampling; otherwise, false.\n */\nHeightmapTerrainData.prototype.wasCreatedByUpsampling = function () {\n  return this._createdByUpsampling;\n};\n\nfunction interpolateHeight(\n  sourceHeights,\n  elementsPerHeight,\n  elementMultiplier,\n  stride,\n  isBigEndian,\n  sourceRectangle,\n  width,\n  height,\n  longitude,\n  latitude\n) {\n  var fromWest =\n    ((longitude - sourceRectangle.west) * (width - 1)) /\n    (sourceRectangle.east - sourceRectangle.west);\n  var fromSouth =\n    ((latitude - sourceRectangle.south) * (height - 1)) /\n    (sourceRectangle.north - sourceRectangle.south);\n\n  var westInteger = fromWest | 0;\n  var eastInteger = westInteger + 1;\n  if (eastInteger >= width) {\n    eastInteger = width - 1;\n    westInteger = width - 2;\n  }\n\n  var southInteger = fromSouth | 0;\n  var northInteger = southInteger + 1;\n  if (northInteger >= height) {\n    northInteger = height - 1;\n    southInteger = height - 2;\n  }\n\n  var dx = fromWest - westInteger;\n  var dy = fromSouth - southInteger;\n\n  southInteger = height - 1 - southInteger;\n  northInteger = height - 1 - northInteger;\n\n  var southwestHeight = getHeight(\n    sourceHeights,\n    elementsPerHeight,\n    elementMultiplier,\n    stride,\n    isBigEndian,\n    southInteger * width + westInteger\n  );\n  var southeastHeight = getHeight(\n    sourceHeights,\n    elementsPerHeight,\n    elementMultiplier,\n    stride,\n    isBigEndian,\n    southInteger * width + eastInteger\n  );\n  var northwestHeight = getHeight(\n    sourceHeights,\n    elementsPerHeight,\n    elementMultiplier,\n    stride,\n    isBigEndian,\n    northInteger * width + westInteger\n  );\n  var northeastHeight = getHeight(\n    sourceHeights,\n    elementsPerHeight,\n    elementMultiplier,\n    stride,\n    isBigEndian,\n    northInteger * width + eastInteger\n  );\n\n  return triangleInterpolateHeight(\n    dx,\n    dy,\n    southwestHeight,\n    southeastHeight,\n    northwestHeight,\n    northeastHeight\n  );\n}\n\nfunction interpolateMeshHeight(\n  buffer,\n  encoding,\n  heightOffset,\n  heightScale,\n  sourceRectangle,\n  width,\n  height,\n  longitude,\n  latitude\n) {\n  // returns a height encoded according to the structure\'s heightScale and heightOffset.\n  var fromWest =\n    ((longitude - sourceRectangle.west) * (width - 1)) /\n    (sourceRectangle.east - sourceRectangle.west);\n  var fromSouth =\n    ((latitude - sourceRectangle.south) * (height - 1)) /\n    (sourceRectangle.north - sourceRectangle.south);\n\n  var westInteger = fromWest | 0;\n  var eastInteger = westInteger + 1;\n  if (eastInteger >= width) {\n    eastInteger = width - 1;\n    westInteger = width - 2;\n  }\n\n  var southInteger = fromSouth | 0;\n  var northInteger = southInteger + 1;\n  if (northInteger >= height) {\n    northInteger = height - 1;\n    southInteger = height - 2;\n  }\n\n  var dx = fromWest - westInteger;\n  var dy = fromSouth - southInteger;\n\n  southInteger = height - 1 - southInteger;\n  northInteger = height - 1 - northInteger;\n\n  var southwestHeight =\n    (encoding.decodeHeight(buffer, southInteger * width + westInteger) -\n      heightOffset) /\n    heightScale;\n  var southeastHeight =\n    (encoding.decodeHeight(buffer, southInteger * width + eastInteger) -\n      heightOffset) /\n    heightScale;\n  var northwestHeight =\n    (encoding.decodeHeight(buffer, northInteger * width + westInteger) -\n      heightOffset) /\n    heightScale;\n  var northeastHeight =\n    (encoding.decodeHeight(buffer, northInteger * width + eastInteger) -\n      heightOffset) /\n    heightScale;\n\n  return triangleInterpolateHeight(\n    dx,\n    dy,\n    southwestHeight,\n    southeastHeight,\n    northwestHeight,\n    northeastHeight\n  );\n}\n\nfunction triangleInterpolateHeight(\n  dX,\n  dY,\n  southwestHeight,\n  southeastHeight,\n  northwestHeight,\n  northeastHeight\n) {\n  // The HeightmapTessellator bisects the quad from southwest to northeast.\n  if (dY < dX) {\n    // Lower right triangle\n    return (\n      southwestHeight +\n      dX * (southeastHeight - southwestHeight) +\n      dY * (northeastHeight - southeastHeight)\n    );\n  }\n\n  // Upper left triangle\n  return (\n    southwestHeight +\n    dX * (northeastHeight - northwestHeight) +\n    dY * (northwestHeight - southwestHeight)\n  );\n}\n\nfunction getHeight(\n  heights,\n  elementsPerHeight,\n  elementMultiplier,\n  stride,\n  isBigEndian,\n  index\n) {\n  index *= stride;\n\n  var height = 0;\n  var i;\n\n  if (isBigEndian) {\n    for (i = 0; i < elementsPerHeight; ++i) {\n      height = height * elementMultiplier + heights[index + i];\n    }\n  } else {\n    for (i = elementsPerHeight - 1; i >= 0; --i) {\n      height = height * elementMultiplier + heights[index + i];\n    }\n  }\n\n  return height;\n}\n\nfunction setHeight(\n  heights,\n  elementsPerHeight,\n  elementMultiplier,\n  divisor,\n  stride,\n  isBigEndian,\n  index,\n  height\n) {\n  index *= stride;\n\n  var i;\n  if (isBigEndian) {\n    for (i = 0; i < elementsPerHeight - 1; ++i) {\n      heights[index + i] = (height / divisor) | 0;\n      height -= heights[index + i] * divisor;\n      divisor /= elementMultiplier;\n    }\n  } else {\n    for (i = elementsPerHeight - 1; i > 0; --i) {\n      heights[index + i] = (height / divisor) | 0;\n      height -= heights[index + i] * divisor;\n      divisor /= elementMultiplier;\n    }\n  }\n  heights[index + i] = height;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (HeightmapTerrainData);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///57134\n')},25260:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _AxisAlignedBoundingBox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(55829);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60216);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12572);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(50491);\n/* harmony import */ var _EllipsoidalOccluder_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(61252);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(72248);\n/* harmony import */ var _OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(25405);\n/* harmony import */ var _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(96190);\n/* harmony import */ var _TerrainEncoding_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(41782);\n/* harmony import */ var _Transforms_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(95555);\n/* harmony import */ var _WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(79962);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Contains functions to create a mesh from a heightmap image.\n *\n * @namespace HeightmapTessellator\n *\n * @private\n */\nvar HeightmapTessellator = {};\n\n/**\n * The default structure of a heightmap, as given to {@link HeightmapTessellator.computeVertices}.\n *\n * @constant\n */\nHeightmapTessellator.DEFAULT_STRUCTURE = Object.freeze({\n  heightScale: 1.0,\n  heightOffset: 0.0,\n  elementsPerHeight: 1,\n  stride: 1,\n  elementMultiplier: 256.0,\n  isBigEndian: false,\n});\n\nvar cartesian3Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar matrix4Scratch = new _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\nvar minimumScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar maximumScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\n/**\n * Fills an array of vertices from a heightmap image.\n *\n * @param {Object} options Object with the following properties:\n * @param {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} options.heightmap The heightmap to tessellate.\n * @param {Number} options.width The width of the heightmap, in height samples.\n * @param {Number} options.height The height of the heightmap, in height samples.\n * @param {Number} options.skirtHeight The height of skirts to drape at the edges of the heightmap.\n * @param {Rectangle} options.nativeRectangle A rectangle in the native coordinates of the heightmap\'s projection.  For\n *                 a heightmap with a geographic projection, this is degrees.  For the web mercator\n *                 projection, this is meters.\n * @param {Number} [options.exaggeration=1.0] The scale used to exaggerate the terrain.\n * @param {Number} [options.exaggerationRelativeHeight=0.0] The height from which terrain is exaggerated.\n * @param {Rectangle} [options.rectangle] The rectangle covered by the heightmap, in geodetic coordinates with north, south, east and\n *                 west properties in radians.  Either rectangle or nativeRectangle must be provided.  If both\n *                 are provided, they\'re assumed to be consistent.\n * @param {Boolean} [options.isGeographic=true] True if the heightmap uses a {@link GeographicProjection}, or false if it uses\n *                  a {@link WebMercatorProjection}.\n * @param {Cartesian3} [options.relativeToCenter=Cartesian3.ZERO] The positions will be computed as <code>Cartesian3.subtract(worldPosition, relativeToCenter)</code>.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to which the heightmap applies.\n * @param {Object} [options.structure] An object describing the structure of the height data.\n * @param {Number} [options.structure.heightScale=1.0] The factor by which to multiply height samples in order to obtain\n *                 the height above the heightOffset, in meters.  The heightOffset is added to the resulting\n *                 height after multiplying by the scale.\n * @param {Number} [options.structure.heightOffset=0.0] The offset to add to the scaled height to obtain the final\n *                 height in meters.  The offset is added after the height sample is multiplied by the\n *                 heightScale.\n * @param {Number} [options.structure.elementsPerHeight=1] The number of elements in the buffer that make up a single height\n *                 sample.  This is usually 1, indicating that each element is a separate height sample.  If\n *                 it is greater than 1, that number of elements together form the height sample, which is\n *                 computed according to the structure.elementMultiplier and structure.isBigEndian properties.\n * @param {Number} [options.structure.stride=1] The number of elements to skip to get from the first element of\n *                 one height to the first element of the next height.\n * @param {Number} [options.structure.elementMultiplier=256.0] The multiplier used to compute the height value when the\n *                 stride property is greater than 1.  For example, if the stride is 4 and the strideMultiplier\n *                 is 256, the height is computed as follows:\n *                 `height = buffer[index] + buffer[index + 1] * 256 + buffer[index + 2] * 256 * 256 + buffer[index + 3] * 256 * 256 * 256`\n *                 This is assuming that the isBigEndian property is false.  If it is true, the order of the\n *                 elements is reversed.\n * @param {Number} [options.structure.lowestEncodedHeight] The lowest value that can be stored in the height buffer.  Any heights that are lower\n *                 than this value after encoding with the `heightScale` and `heightOffset` are clamped to this value.  For example, if the height\n *                 buffer is a `Uint16Array`, this value should be 0 because a `Uint16Array` cannot store negative numbers.  If this parameter is\n *                 not specified, no minimum value is enforced.\n * @param {Number} [options.structure.highestEncodedHeight] The highest value that can be stored in the height buffer.  Any heights that are higher\n *                 than this value after encoding with the `heightScale` and `heightOffset` are clamped to this value.  For example, if the height\n *                 buffer is a `Uint16Array`, this value should be `256 * 256 - 1` or 65535 because a `Uint16Array` cannot store numbers larger\n *                 than 65535.  If this parameter is not specified, no maximum value is enforced.\n * @param {Boolean} [options.structure.isBigEndian=false] Indicates endianness of the elements in the buffer when the\n *                  stride property is greater than 1.  If this property is false, the first element is the\n *                  low-order element.  If it is true, the first element is the high-order element.\n *\n * @example\n * var width = 5;\n * var height = 5;\n * var statistics = Cesium.HeightmapTessellator.computeVertices({\n *     heightmap : [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0],\n *     width : width,\n *     height : height,\n *     skirtHeight : 0.0,\n *     nativeRectangle : {\n *         west : 10.0,\n *         east : 20.0,\n *         south : 30.0,\n *         north : 40.0\n *     }\n * });\n *\n * var encoding = statistics.encoding;\n * var position = encoding.decodePosition(statistics.vertices, index);\n */\nHeightmapTessellator.computeVertices = function (options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options.heightmap)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("options.heightmap is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options.width) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options.height)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("options.width and options.height are required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options.nativeRectangle)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("options.nativeRectangle is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(options.skirtHeight)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("options.skirtHeight is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  // This function tends to be a performance hotspot for terrain rendering,\n  // so it employs a lot of inlining and unrolling as an optimization.\n  // In particular, the functionality of Ellipsoid.cartographicToCartesian\n  // is inlined.\n\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var sqrt = Math.sqrt;\n  var atan = Math.atan;\n  var exp = Math.exp;\n  var piOverTwo = _Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO;\n  var toRadians = _Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].toRadians */ .Z.toRadians;\n\n  var heightmap = options.heightmap;\n  var width = options.width;\n  var height = options.height;\n  var skirtHeight = options.skirtHeight;\n  var hasSkirts = skirtHeight > 0.0;\n\n  var isGeographic = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.isGeographic, true);\n  var ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].WGS84 */ .Z.WGS84);\n\n  var oneOverGlobeSemimajorAxis = 1.0 / ellipsoid.maximumRadius;\n\n  var nativeRectangle = _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(options.nativeRectangle);\n  var rectangle = _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(options.rectangle);\n\n  var geographicWest;\n  var geographicSouth;\n  var geographicEast;\n  var geographicNorth;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(rectangle)) {\n    if (isGeographic) {\n      geographicWest = toRadians(nativeRectangle.west);\n      geographicSouth = toRadians(nativeRectangle.south);\n      geographicEast = toRadians(nativeRectangle.east);\n      geographicNorth = toRadians(nativeRectangle.north);\n    } else {\n      geographicWest = nativeRectangle.west * oneOverGlobeSemimajorAxis;\n      geographicSouth =\n        piOverTwo -\n        2.0 * atan(exp(-nativeRectangle.south * oneOverGlobeSemimajorAxis));\n      geographicEast = nativeRectangle.east * oneOverGlobeSemimajorAxis;\n      geographicNorth =\n        piOverTwo -\n        2.0 * atan(exp(-nativeRectangle.north * oneOverGlobeSemimajorAxis));\n    }\n  } else {\n    geographicWest = rectangle.west;\n    geographicSouth = rectangle.south;\n    geographicEast = rectangle.east;\n    geographicNorth = rectangle.north;\n  }\n\n  var relativeToCenter = options.relativeToCenter;\n  var hasRelativeToCenter = (0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(relativeToCenter);\n  relativeToCenter = hasRelativeToCenter ? relativeToCenter : _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].ZERO */ .Z.ZERO;\n  var includeWebMercatorT = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.includeWebMercatorT, false);\n\n  var exaggeration = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.exaggeration, 1.0);\n  var exaggerationRelativeHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    options.exaggerationRelativeHeight,\n    0.0\n  );\n  var hasExaggeration = exaggeration !== 1.0;\n  var includeGeodeticSurfaceNormals = hasExaggeration;\n\n  var structure = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    options.structure,\n    HeightmapTessellator.DEFAULT_STRUCTURE\n  );\n  var heightScale = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    structure.heightScale,\n    HeightmapTessellator.DEFAULT_STRUCTURE.heightScale\n  );\n  var heightOffset = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    structure.heightOffset,\n    HeightmapTessellator.DEFAULT_STRUCTURE.heightOffset\n  );\n  var elementsPerHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    structure.elementsPerHeight,\n    HeightmapTessellator.DEFAULT_STRUCTURE.elementsPerHeight\n  );\n  var stride = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    structure.stride,\n    HeightmapTessellator.DEFAULT_STRUCTURE.stride\n  );\n  var elementMultiplier = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    structure.elementMultiplier,\n    HeightmapTessellator.DEFAULT_STRUCTURE.elementMultiplier\n  );\n  var isBigEndian = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    structure.isBigEndian,\n    HeightmapTessellator.DEFAULT_STRUCTURE.isBigEndian\n  );\n\n  var rectangleWidth = _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].computeWidth */ .Z.computeWidth(nativeRectangle);\n  var rectangleHeight = _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].computeHeight */ .Z.computeHeight(nativeRectangle);\n\n  var granularityX = rectangleWidth / (width - 1);\n  var granularityY = rectangleHeight / (height - 1);\n\n  if (!isGeographic) {\n    rectangleWidth *= oneOverGlobeSemimajorAxis;\n    rectangleHeight *= oneOverGlobeSemimajorAxis;\n  }\n\n  var radiiSquared = ellipsoid.radiiSquared;\n  var radiiSquaredX = radiiSquared.x;\n  var radiiSquaredY = radiiSquared.y;\n  var radiiSquaredZ = radiiSquared.z;\n\n  var minimumHeight = 65536.0;\n  var maximumHeight = -65536.0;\n\n  var fromENU = _Transforms_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].eastNorthUpToFixedFrame */ .Z.eastNorthUpToFixedFrame(relativeToCenter, ellipsoid);\n  var toENU = _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].inverseTransformation */ .Z.inverseTransformation(fromENU, matrix4Scratch);\n\n  var southMercatorY;\n  var oneOverMercatorHeight;\n  if (includeWebMercatorT) {\n    southMercatorY = _WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].geodeticLatitudeToMercatorAngle */ .Z.geodeticLatitudeToMercatorAngle(\n      geographicSouth\n    );\n    oneOverMercatorHeight =\n      1.0 /\n      (_WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].geodeticLatitudeToMercatorAngle */ .Z.geodeticLatitudeToMercatorAngle(geographicNorth) -\n        southMercatorY);\n  }\n\n  var minimum = minimumScratch;\n  minimum.x = Number.POSITIVE_INFINITY;\n  minimum.y = Number.POSITIVE_INFINITY;\n  minimum.z = Number.POSITIVE_INFINITY;\n\n  var maximum = maximumScratch;\n  maximum.x = Number.NEGATIVE_INFINITY;\n  maximum.y = Number.NEGATIVE_INFINITY;\n  maximum.z = Number.NEGATIVE_INFINITY;\n\n  var hMin = Number.POSITIVE_INFINITY;\n\n  var gridVertexCount = width * height;\n  var edgeVertexCount = skirtHeight > 0.0 ? width * 2 + height * 2 : 0;\n  var vertexCount = gridVertexCount + edgeVertexCount;\n\n  var positions = new Array(vertexCount);\n  var heights = new Array(vertexCount);\n  var uvs = new Array(vertexCount);\n  var webMercatorTs = includeWebMercatorT ? new Array(vertexCount) : [];\n  var geodeticSurfaceNormals = includeGeodeticSurfaceNormals\n    ? new Array(vertexCount)\n    : [];\n\n  var startRow = 0;\n  var endRow = height;\n  var startCol = 0;\n  var endCol = width;\n\n  if (hasSkirts) {\n    --startRow;\n    ++endRow;\n    --startCol;\n    ++endCol;\n  }\n\n  var skirtOffsetPercentage = 0.00001;\n\n  for (var rowIndex = startRow; rowIndex < endRow; ++rowIndex) {\n    var row = rowIndex;\n    if (row < 0) {\n      row = 0;\n    }\n    if (row >= height) {\n      row = height - 1;\n    }\n\n    var latitude = nativeRectangle.north - granularityY * row;\n\n    if (!isGeographic) {\n      latitude =\n        piOverTwo - 2.0 * atan(exp(-latitude * oneOverGlobeSemimajorAxis));\n    } else {\n      latitude = toRadians(latitude);\n    }\n\n    var v = (latitude - geographicSouth) / (geographicNorth - geographicSouth);\n    v = _Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].clamp */ .Z.clamp(v, 0.0, 1.0);\n\n    var isNorthEdge = rowIndex === startRow;\n    var isSouthEdge = rowIndex === endRow - 1;\n    if (skirtHeight > 0.0) {\n      if (isNorthEdge) {\n        latitude += skirtOffsetPercentage * rectangleHeight;\n      } else if (isSouthEdge) {\n        latitude -= skirtOffsetPercentage * rectangleHeight;\n      }\n    }\n\n    var cosLatitude = cos(latitude);\n    var nZ = sin(latitude);\n    var kZ = radiiSquaredZ * nZ;\n\n    var webMercatorT;\n    if (includeWebMercatorT) {\n      webMercatorT =\n        (_WebMercatorProjection_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].geodeticLatitudeToMercatorAngle */ .Z.geodeticLatitudeToMercatorAngle(latitude) -\n          southMercatorY) *\n        oneOverMercatorHeight;\n    }\n\n    for (var colIndex = startCol; colIndex < endCol; ++colIndex) {\n      var col = colIndex;\n      if (col < 0) {\n        col = 0;\n      }\n      if (col >= width) {\n        col = width - 1;\n      }\n\n      var terrainOffset = row * (width * stride) + col * stride;\n\n      var heightSample;\n      if (elementsPerHeight === 1) {\n        heightSample = heightmap[terrainOffset];\n      } else {\n        heightSample = 0;\n\n        var elementOffset;\n        if (isBigEndian) {\n          for (\n            elementOffset = 0;\n            elementOffset < elementsPerHeight;\n            ++elementOffset\n          ) {\n            heightSample =\n              heightSample * elementMultiplier +\n              heightmap[terrainOffset + elementOffset];\n          }\n        } else {\n          for (\n            elementOffset = elementsPerHeight - 1;\n            elementOffset >= 0;\n            --elementOffset\n          ) {\n            heightSample =\n              heightSample * elementMultiplier +\n              heightmap[terrainOffset + elementOffset];\n          }\n        }\n      }\n\n      heightSample = heightSample * heightScale + heightOffset;\n\n      maximumHeight = Math.max(maximumHeight, heightSample);\n      minimumHeight = Math.min(minimumHeight, heightSample);\n\n      var longitude = nativeRectangle.west + granularityX * col;\n\n      if (!isGeographic) {\n        longitude = longitude * oneOverGlobeSemimajorAxis;\n      } else {\n        longitude = toRadians(longitude);\n      }\n\n      var u = (longitude - geographicWest) / (geographicEast - geographicWest);\n      u = _Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].clamp */ .Z.clamp(u, 0.0, 1.0);\n\n      var index = row * width + col;\n\n      if (skirtHeight > 0.0) {\n        var isWestEdge = colIndex === startCol;\n        var isEastEdge = colIndex === endCol - 1;\n        var isEdge = isNorthEdge || isSouthEdge || isWestEdge || isEastEdge;\n        var isCorner =\n          (isNorthEdge || isSouthEdge) && (isWestEdge || isEastEdge);\n        if (isCorner) {\n          // Don\'t generate skirts on the corners.\n          continue;\n        } else if (isEdge) {\n          heightSample -= skirtHeight;\n\n          if (isWestEdge) {\n            // The outer loop iterates north to south but the indices are ordered south to north, hence the index flip below\n            index = gridVertexCount + (height - row - 1);\n            longitude -= skirtOffsetPercentage * rectangleWidth;\n          } else if (isSouthEdge) {\n            // Add after west indices. South indices are ordered east to west.\n            index = gridVertexCount + height + (width - col - 1);\n          } else if (isEastEdge) {\n            // Add after west and south indices. East indices are ordered north to south. The index is flipped like above.\n            index = gridVertexCount + height + width + row;\n            longitude += skirtOffsetPercentage * rectangleWidth;\n          } else if (isNorthEdge) {\n            // Add after west, south, and east indices. North indices are ordered west to east.\n            index = gridVertexCount + height + width + height + col;\n          }\n        }\n      }\n\n      var nX = cosLatitude * cos(longitude);\n      var nY = cosLatitude * sin(longitude);\n\n      var kX = radiiSquaredX * nX;\n      var kY = radiiSquaredY * nY;\n\n      var gamma = sqrt(kX * nX + kY * nY + kZ * nZ);\n      var oneOverGamma = 1.0 / gamma;\n\n      var rSurfaceX = kX * oneOverGamma;\n      var rSurfaceY = kY * oneOverGamma;\n      var rSurfaceZ = kZ * oneOverGamma;\n\n      var position = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n      position.x = rSurfaceX + nX * heightSample;\n      position.y = rSurfaceY + nY * heightSample;\n      position.z = rSurfaceZ + nZ * heightSample;\n\n      _Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(toENU, position, cartesian3Scratch);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].minimumByComponent */ .Z.minimumByComponent(cartesian3Scratch, minimum, minimum);\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].maximumByComponent */ .Z.maximumByComponent(cartesian3Scratch, maximum, maximum);\n      hMin = Math.min(hMin, heightSample);\n\n      positions[index] = position;\n      uvs[index] = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(u, v);\n      heights[index] = heightSample;\n\n      if (includeWebMercatorT) {\n        webMercatorTs[index] = webMercatorT;\n      }\n\n      if (includeGeodeticSurfaceNormals) {\n        geodeticSurfaceNormals[index] = ellipsoid.geodeticSurfaceNormal(\n          position\n        );\n      }\n    }\n  }\n\n  var boundingSphere3D = _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromPoints */ .Z.fromPoints(positions);\n  var orientedBoundingBox;\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(rectangle)) {\n    orientedBoundingBox = _OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].fromRectangle */ .Z.fromRectangle(\n      rectangle,\n      minimumHeight,\n      maximumHeight,\n      ellipsoid\n    );\n  }\n\n  var occludeePointInScaledSpace;\n  if (hasRelativeToCenter) {\n    var occluder = new _EllipsoidalOccluder_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(ellipsoid);\n    occludeePointInScaledSpace = occluder.computeHorizonCullingPointPossiblyUnderEllipsoid(\n      relativeToCenter,\n      positions,\n      minimumHeight\n    );\n  }\n\n  var aaBox = new _AxisAlignedBoundingBox_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(minimum, maximum, relativeToCenter);\n  var encoding = new _TerrainEncoding_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z(\n    relativeToCenter,\n    aaBox,\n    hMin,\n    maximumHeight,\n    fromENU,\n    false,\n    includeWebMercatorT,\n    includeGeodeticSurfaceNormals,\n    exaggeration,\n    exaggerationRelativeHeight\n  );\n  var vertices = new Float32Array(vertexCount * encoding.stride);\n\n  var bufferIndex = 0;\n  for (var j = 0; j < vertexCount; ++j) {\n    bufferIndex = encoding.encode(\n      vertices,\n      bufferIndex,\n      positions[j],\n      uvs[j],\n      heights[j],\n      undefined,\n      webMercatorTs[j],\n      geodeticSurfaceNormals[j]\n    );\n  }\n\n  return {\n    vertices: vertices,\n    maximumHeight: maximumHeight,\n    minimumHeight: minimumHeight,\n    encoding: encoding,\n    boundingSphere3D: boundingSphere3D,\n    orientedBoundingBox: orientedBoundingBox,\n    occludeePointInScaledSpace: occludeePointInScaledSpace,\n  };\n};\n/* harmony default export */ __webpack_exports__["Z"] = (HeightmapTessellator);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///25260\n')},72241:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(99417);\n\n\n\n\n\nvar factorial = _Math_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].factorial */ .Z.factorial;\n\nfunction calculateCoefficientTerm(\n  x,\n  zIndices,\n  xTable,\n  derivOrder,\n  termOrder,\n  reservedIndices\n) {\n  var result = 0;\n  var reserved;\n  var i;\n  var j;\n\n  if (derivOrder > 0) {\n    for (i = 0; i < termOrder; i++) {\n      reserved = false;\n      for (j = 0; j < reservedIndices.length && !reserved; j++) {\n        if (i === reservedIndices[j]) {\n          reserved = true;\n        }\n      }\n\n      if (!reserved) {\n        reservedIndices.push(i);\n        result += calculateCoefficientTerm(\n          x,\n          zIndices,\n          xTable,\n          derivOrder - 1,\n          termOrder,\n          reservedIndices\n        );\n        reservedIndices.splice(reservedIndices.length - 1, 1);\n      }\n    }\n\n    return result;\n  }\n\n  result = 1;\n  for (i = 0; i < termOrder; i++) {\n    reserved = false;\n    for (j = 0; j < reservedIndices.length && !reserved; j++) {\n      if (i === reservedIndices[j]) {\n        reserved = true;\n      }\n    }\n\n    if (!reserved) {\n      result *= x - xTable[zIndices[i]];\n    }\n  }\n\n  return result;\n}\n\n/**\n * An {@link InterpolationAlgorithm} for performing Hermite interpolation.\n *\n * @namespace HermitePolynomialApproximation\n */\nvar HermitePolynomialApproximation = {\n  type: "Hermite",\n};\n\n/**\n * Given the desired degree, returns the number of data points required for interpolation.\n *\n * @param {Number} degree The desired degree of interpolation.\n * @param {Number} [inputOrder=0]  The order of the inputs (0 means just the data, 1 means the data and its derivative, etc).\n * @returns {Number} The number of required data points needed for the desired degree of interpolation.\n * @exception {DeveloperError} degree must be 0 or greater.\n * @exception {DeveloperError} inputOrder must be 0 or greater.\n */\nHermitePolynomialApproximation.getRequiredDataPoints = function (\n  degree,\n  inputOrder\n) {\n  inputOrder = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(inputOrder, 0);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(degree)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("degree is required.");\n  }\n  if (degree < 0) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("degree must be 0 or greater.");\n  }\n  if (inputOrder < 0) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("inputOrder must be 0 or greater.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return Math.max(Math.floor((degree + 1) / (inputOrder + 1)), 2);\n};\n\n/**\n * Interpolates values using Hermite Polynomial Approximation.\n *\n * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {Number[]} [result] An existing array into which to store the result.\n * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nHermitePolynomialApproximation.interpolateOrderZero = function (\n  x,\n  xTable,\n  yTable,\n  yStride,\n  result\n) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(result)) {\n    result = new Array(yStride);\n  }\n\n  var i;\n  var j;\n  var d;\n  var s;\n  var len;\n  var index;\n  var length = xTable.length;\n  var coefficients = new Array(yStride);\n\n  for (i = 0; i < yStride; i++) {\n    result[i] = 0;\n\n    var l = new Array(length);\n    coefficients[i] = l;\n    for (j = 0; j < length; j++) {\n      l[j] = [];\n    }\n  }\n\n  var zIndicesLength = length,\n    zIndices = new Array(zIndicesLength);\n\n  for (i = 0; i < zIndicesLength; i++) {\n    zIndices[i] = i;\n  }\n\n  var highestNonZeroCoef = length - 1;\n  for (s = 0; s < yStride; s++) {\n    for (j = 0; j < zIndicesLength; j++) {\n      index = zIndices[j] * yStride + s;\n      coefficients[s][0].push(yTable[index]);\n    }\n\n    for (i = 1; i < zIndicesLength; i++) {\n      var nonZeroCoefficients = false;\n      for (j = 0; j < zIndicesLength - i; j++) {\n        var zj = xTable[zIndices[j]];\n        var zn = xTable[zIndices[j + i]];\n\n        var numerator;\n        if (zn - zj <= 0) {\n          index = zIndices[j] * yStride + yStride * i + s;\n          numerator = yTable[index];\n          coefficients[s][i].push(numerator / factorial(i));\n        } else {\n          numerator = coefficients[s][i - 1][j + 1] - coefficients[s][i - 1][j];\n          coefficients[s][i].push(numerator / (zn - zj));\n        }\n        nonZeroCoefficients = nonZeroCoefficients || numerator !== 0;\n      }\n\n      if (!nonZeroCoefficients) {\n        highestNonZeroCoef = i - 1;\n      }\n    }\n  }\n\n  for (d = 0, len = 0; d <= len; d++) {\n    for (i = d; i <= highestNonZeroCoef; i++) {\n      var tempTerm = calculateCoefficientTerm(x, zIndices, xTable, d, i, []);\n      for (s = 0; s < yStride; s++) {\n        var coeff = coefficients[s][i][0];\n        result[s + d * yStride] += coeff * tempTerm;\n      }\n    }\n  }\n\n  return result;\n};\n\nvar arrayScratch = [];\n\n/**\n * Interpolates values using Hermite Polynomial Approximation.\n *\n * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {Number} inputOrder The number of derivatives supplied for input.\n * @param {Number} outputOrder The number of derivatives desired for output.\n * @param {Number[]} [result] An existing array into which to store the result.\n *\n * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nHermitePolynomialApproximation.interpolate = function (\n  x,\n  xTable,\n  yTable,\n  yStride,\n  inputOrder,\n  outputOrder,\n  result\n) {\n  var resultLength = yStride * (outputOrder + 1);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(result)) {\n    result = new Array(resultLength);\n  }\n  for (var r = 0; r < resultLength; r++) {\n    result[r] = 0;\n  }\n\n  var length = xTable.length;\n  // The zIndices array holds copies of the addresses of the xTable values\n  // in the range we\'re looking at. Even though this just holds information already\n  // available in xTable this is a much more convenient format.\n  var zIndices = new Array(length * (inputOrder + 1));\n  var i;\n  for (i = 0; i < length; i++) {\n    for (var j = 0; j < inputOrder + 1; j++) {\n      zIndices[i * (inputOrder + 1) + j] = i;\n    }\n  }\n\n  var zIndiceslength = zIndices.length;\n  var coefficients = arrayScratch;\n  var highestNonZeroCoef = fillCoefficientList(\n    coefficients,\n    zIndices,\n    xTable,\n    yTable,\n    yStride,\n    inputOrder\n  );\n  var reservedIndices = [];\n\n  var tmp = (zIndiceslength * (zIndiceslength + 1)) / 2;\n  var loopStop = Math.min(highestNonZeroCoef, outputOrder);\n  for (var d = 0; d <= loopStop; d++) {\n    for (i = d; i <= highestNonZeroCoef; i++) {\n      reservedIndices.length = 0;\n      var tempTerm = calculateCoefficientTerm(\n        x,\n        zIndices,\n        xTable,\n        d,\n        i,\n        reservedIndices\n      );\n      var dimTwo = Math.floor((i * (1 - i)) / 2) + zIndiceslength * i;\n\n      for (var s = 0; s < yStride; s++) {\n        var dimOne = Math.floor(s * tmp);\n        var coef = coefficients[dimOne + dimTwo];\n        result[s + d * yStride] += coef * tempTerm;\n      }\n    }\n  }\n\n  return result;\n};\n\nfunction fillCoefficientList(\n  coefficients,\n  zIndices,\n  xTable,\n  yTable,\n  yStride,\n  inputOrder\n) {\n  var j;\n  var index;\n  var highestNonZero = -1;\n  var zIndiceslength = zIndices.length;\n  var tmp = (zIndiceslength * (zIndiceslength + 1)) / 2;\n\n  for (var s = 0; s < yStride; s++) {\n    var dimOne = Math.floor(s * tmp);\n\n    for (j = 0; j < zIndiceslength; j++) {\n      index = zIndices[j] * yStride * (inputOrder + 1) + s;\n      coefficients[dimOne + j] = yTable[index];\n    }\n\n    for (var i = 1; i < zIndiceslength; i++) {\n      var coefIndex = 0;\n      var dimTwo = Math.floor((i * (1 - i)) / 2) + zIndiceslength * i;\n      var nonZeroCoefficients = false;\n\n      for (j = 0; j < zIndiceslength - i; j++) {\n        var zj = xTable[zIndices[j]];\n        var zn = xTable[zIndices[j + i]];\n\n        var numerator;\n        var coefficient;\n        if (zn - zj <= 0) {\n          index = zIndices[j] * yStride * (inputOrder + 1) + yStride * i + s;\n          numerator = yTable[index];\n          coefficient = numerator / _Math_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].factorial */ .Z.factorial(i);\n          coefficients[dimOne + dimTwo + coefIndex] = coefficient;\n          coefIndex++;\n        } else {\n          var dimTwoMinusOne =\n            Math.floor(((i - 1) * (2 - i)) / 2) + zIndiceslength * (i - 1);\n          numerator =\n            coefficients[dimOne + dimTwoMinusOne + j + 1] -\n            coefficients[dimOne + dimTwoMinusOne + j];\n          coefficient = numerator / (zn - zj);\n          coefficients[dimOne + dimTwo + coefIndex] = coefficient;\n          coefIndex++;\n        }\n        nonZeroCoefficients = nonZeroCoefficients || numerator !== 0.0;\n      }\n\n      if (nonZeroCoefficients) {\n        highestNonZero = Math.max(highestNonZero, i);\n      }\n    }\n  }\n\n  return highestNonZero;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (HermitePolynomialApproximation);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///72241\n')},41399:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63367);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _LinearSpline_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(96304);\n/* harmony import */ var _Matrix4_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(72248);\n/* harmony import */ var _Spline_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84543);\n/* harmony import */ var _TridiagonalSystemSolver_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(72579);\n\n\n\n\n\n\n\n\n\n\nvar scratchLower = [];\nvar scratchDiagonal = [];\nvar scratchUpper = [];\nvar scratchRight = [];\n\nfunction generateClamped(points, firstTangent, lastTangent) {\n  var l = scratchLower;\n  var u = scratchUpper;\n  var d = scratchDiagonal;\n  var r = scratchRight;\n\n  l.length = u.length = points.length - 1;\n  d.length = r.length = points.length;\n\n  var i;\n  l[0] = d[0] = 1.0;\n  u[0] = 0.0;\n\n  var right = r[0];\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n    right = r[0] = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(firstTangent, right);\n\n  for (i = 1; i < l.length - 1; ++i) {\n    l[i] = u[i] = 1.0;\n    d[i] = 4.0;\n\n    right = r[i];\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n      right = r[i] = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n    }\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(points[i + 1], points[i - 1], right);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(right, 3.0, right);\n  }\n\n  l[i] = 0.0;\n  u[i] = 1.0;\n  d[i] = 4.0;\n\n  right = r[i];\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n    right = r[i] = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(points[i + 1], points[i - 1], right);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(right, 3.0, right);\n\n  d[i + 1] = 1.0;\n  right = r[i + 1];\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n    right = r[i + 1] = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(lastTangent, right);\n\n  return _TridiagonalSystemSolver_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].solve */ .Z.solve(l, d, u, r);\n}\n\nfunction generateNatural(points) {\n  var l = scratchLower;\n  var u = scratchUpper;\n  var d = scratchDiagonal;\n  var r = scratchRight;\n\n  l.length = u.length = points.length - 1;\n  d.length = r.length = points.length;\n\n  var i;\n  l[0] = u[0] = 1.0;\n  d[0] = 2.0;\n\n  var right = r[0];\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n    right = r[0] = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(points[1], points[0], right);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(right, 3.0, right);\n\n  for (i = 1; i < l.length; ++i) {\n    l[i] = u[i] = 1.0;\n    d[i] = 4.0;\n\n    right = r[i];\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n      right = r[i] = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n    }\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(points[i + 1], points[i - 1], right);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(right, 3.0, right);\n  }\n\n  d[i] = 2.0;\n\n  right = r[i];\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n    right = r[i] = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(points[i], points[i - 1], right);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(right, 3.0, right);\n\n  return _TridiagonalSystemSolver_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].solve */ .Z.solve(l, d, u, r);\n}\n\n/**\n * A Hermite spline is a cubic interpolating spline. Points, incoming tangents, outgoing tangents, and times\n * must be defined for each control point. The outgoing tangents are defined for points [0, n - 2] and the incoming\n * tangents are defined for points [1, n - 1]. For example, when interpolating a segment of the curve between <code>points[i]</code> and\n * <code>points[i + 1]</code>, the tangents at the points will be <code>outTangents[i]</code> and <code>inTangents[i]</code>,\n * respectively.\n *\n * @alias HermiteSpline\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Number[]} options.times An array of strictly increasing, unit-less, floating-point times at each point.\n *                The values are in no way connected to the clock time. They are the parameterization for the curve.\n * @param {Cartesian3[]} options.points The array of {@link Cartesian3} control points.\n * @param {Cartesian3[]} options.inTangents The array of {@link Cartesian3} incoming tangents at each control point.\n * @param {Cartesian3[]} options.outTangents The array of {@link Cartesian3} outgoing tangents at each control point.\n *\n * @exception {DeveloperError} points.length must be greater than or equal to 2.\n * @exception {DeveloperError} times.length must be equal to points.length.\n * @exception {DeveloperError} inTangents and outTangents must have a length equal to points.length - 1.\n *\n *\n * @example\n * // Create a G<sup>1</sup> continuous Hermite spline\n * var times = [ 0.0, 1.5, 3.0, 4.5, 6.0 ];\n * var spline = new Cesium.HermiteSpline({\n *     times : times,\n *     points : [\n *         new Cesium.Cartesian3(1235398.0, -4810983.0, 4146266.0),\n *         new Cesium.Cartesian3(1372574.0, -5345182.0, 4606657.0),\n *         new Cesium.Cartesian3(-757983.0, -5542796.0, 4514323.0),\n *         new Cesium.Cartesian3(-2821260.0, -5248423.0, 4021290.0),\n *         new Cesium.Cartesian3(-2539788.0, -4724797.0, 3620093.0)\n *     ],\n *     outTangents : [\n *         new Cesium.Cartesian3(1125196, -161816, 270551),\n *         new Cesium.Cartesian3(-996690.5, -365906.5, 184028.5),\n *         new Cesium.Cartesian3(-2096917, 48379.5, -292683.5),\n *         new Cesium.Cartesian3(-890902.5, 408999.5, -447115)\n *     ],\n *     inTangents : [\n *         new Cesium.Cartesian3(-1993381, -731813, 368057),\n *         new Cesium.Cartesian3(-4193834, 96759, -585367),\n *         new Cesium.Cartesian3(-1781805, 817999, -894230),\n *         new Cesium.Cartesian3(1165345, 112641, 47281)\n *     ]\n * });\n *\n * var p0 = spline.evaluate(times[0]);\n *\n * @see CatmullRomSpline\n * @see LinearSpline\n * @see QuaternionSpline\n * @see WeightSpline\n */\nfunction HermiteSpline(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var points = options.points;\n  var times = options.times;\n  var inTangents = options.inTangents;\n  var outTangents = options.outTangents;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(points) ||\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(times) ||\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(inTangents) ||\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(outTangents)\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "times, points, inTangents, and outTangents are required."\n    );\n  }\n  if (points.length < 2) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "points.length must be greater than or equal to 2."\n    );\n  }\n  if (times.length !== points.length) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("times.length must be equal to points.length.");\n  }\n  if (\n    inTangents.length !== outTangents.length ||\n    inTangents.length !== points.length - 1\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "inTangents and outTangents must have a length equal to points.length - 1."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this._times = times;\n  this._points = points;\n  this._inTangents = inTangents;\n  this._outTangents = outTangents;\n\n  this._lastTimeIndex = 0;\n}\n\nObject.defineProperties(HermiteSpline.prototype, {\n  /**\n   * An array of times for the control points.\n   *\n   * @memberof HermiteSpline.prototype\n   *\n   * @type {Number[]}\n   * @readonly\n   */\n  times: {\n    get: function () {\n      return this._times;\n    },\n  },\n\n  /**\n   * An array of {@link Cartesian3} control points.\n   *\n   * @memberof HermiteSpline.prototype\n   *\n   * @type {Cartesian3[]}\n   * @readonly\n   */\n  points: {\n    get: function () {\n      return this._points;\n    },\n  },\n\n  /**\n   * An array of {@link Cartesian3} incoming tangents at each control point.\n   *\n   * @memberof HermiteSpline.prototype\n   *\n   * @type {Cartesian3[]}\n   * @readonly\n   */\n  inTangents: {\n    get: function () {\n      return this._inTangents;\n    },\n  },\n\n  /**\n   * An array of {@link Cartesian3} outgoing tangents at each control point.\n   *\n   * @memberof HermiteSpline.prototype\n   *\n   * @type {Cartesian3[]}\n   * @readonly\n   */\n  outTangents: {\n    get: function () {\n      return this._outTangents;\n    },\n  },\n});\n\n/**\n * Creates a spline where the tangents at each control point are the same.\n * The curves are guaranteed to be at least in the class C<sup>1</sup>.\n *\n * @param {Object} options Object with the following properties:\n * @param {Number[]} options.times The array of control point times.\n * @param {Cartesian3[]} options.points The array of control points.\n * @param {Cartesian3[]} options.tangents The array of tangents at the control points.\n * @returns {HermiteSpline} A hermite spline.\n *\n * @exception {DeveloperError} points, times and tangents are required.\n * @exception {DeveloperError} points.length must be greater than or equal to 2.\n * @exception {DeveloperError} times, points and tangents must have the same length.\n *\n * @example\n * var points = [\n *     new Cesium.Cartesian3(1235398.0, -4810983.0, 4146266.0),\n *     new Cesium.Cartesian3(1372574.0, -5345182.0, 4606657.0),\n *     new Cesium.Cartesian3(-757983.0, -5542796.0, 4514323.0),\n *     new Cesium.Cartesian3(-2821260.0, -5248423.0, 4021290.0),\n *     new Cesium.Cartesian3(-2539788.0, -4724797.0, 3620093.0)\n * ];\n *\n * // Add tangents\n * var tangents = new Array(points.length);\n * tangents[0] = new Cesium.Cartesian3(1125196, -161816, 270551);\n * var temp = new Cesium.Cartesian3();\n * for (var i = 1; i < tangents.length - 1; ++i) {\n *     tangents[i] = Cesium.Cartesian3.multiplyByScalar(Cesium.Cartesian3.subtract(points[i + 1], points[i - 1], temp), 0.5, new Cesium.Cartesian3());\n * }\n * tangents[tangents.length - 1] = new Cesium.Cartesian3(1165345, 112641, 47281);\n *\n * var spline = Cesium.HermiteSpline.createC1({\n *     times : times,\n *     points : points,\n *     tangents : tangents\n * });\n */\nHermiteSpline.createC1 = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var times = options.times;\n  var points = options.points;\n  var tangents = options.tangents;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(points) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(times) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(tangents)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("points, times and tangents are required.");\n  }\n  if (points.length < 2) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "points.length must be greater than or equal to 2."\n    );\n  }\n  if (times.length !== points.length || times.length !== tangents.length) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "times, points and tangents must have the same length."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var outTangents = tangents.slice(0, tangents.length - 1);\n  var inTangents = tangents.slice(1, tangents.length);\n\n  return new HermiteSpline({\n    times: times,\n    points: points,\n    inTangents: inTangents,\n    outTangents: outTangents,\n  });\n};\n\n/**\n * Creates a natural cubic spline. The tangents at the control points are generated\n * to create a curve in the class C<sup>2</sup>.\n *\n * @param {Object} options Object with the following properties:\n * @param {Number[]} options.times The array of control point times.\n * @param {Cartesian3[]} options.points The array of control points.\n * @returns {HermiteSpline|LinearSpline} A hermite spline or a linear spline if less than 3 control points were given.\n *\n * @exception {DeveloperError} points and times are required.\n * @exception {DeveloperError} points.length must be greater than or equal to 2.\n * @exception {DeveloperError} times.length must be equal to points.length.\n *\n * @example\n * // Create a natural cubic spline above the earth from Philadelphia to Los Angeles.\n * var spline = Cesium.HermiteSpline.createNaturalCubic({\n *     times : [ 0.0, 1.5, 3.0, 4.5, 6.0 ],\n *     points : [\n *         new Cesium.Cartesian3(1235398.0, -4810983.0, 4146266.0),\n *         new Cesium.Cartesian3(1372574.0, -5345182.0, 4606657.0),\n *         new Cesium.Cartesian3(-757983.0, -5542796.0, 4514323.0),\n *         new Cesium.Cartesian3(-2821260.0, -5248423.0, 4021290.0),\n *         new Cesium.Cartesian3(-2539788.0, -4724797.0, 3620093.0)\n *     ]\n * });\n */\nHermiteSpline.createNaturalCubic = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var times = options.times;\n  var points = options.points;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(points) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(times)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("points and times are required.");\n  }\n  if (points.length < 2) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "points.length must be greater than or equal to 2."\n    );\n  }\n  if (times.length !== points.length) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("times.length must be equal to points.length.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (points.length < 3) {\n    return new _LinearSpline_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n      points: points,\n      times: times,\n    });\n  }\n\n  var tangents = generateNatural(points);\n  var outTangents = tangents.slice(0, tangents.length - 1);\n  var inTangents = tangents.slice(1, tangents.length);\n\n  return new HermiteSpline({\n    times: times,\n    points: points,\n    inTangents: inTangents,\n    outTangents: outTangents,\n  });\n};\n\n/**\n * Creates a clamped cubic spline. The tangents at the interior control points are generated\n * to create a curve in the class C<sup>2</sup>.\n *\n * @param {Object} options Object with the following properties:\n * @param {Number[]} options.times The array of control point times.\n * @param {Cartesian3[]} options.points The array of control points.\n * @param {Cartesian3} options.firstTangent The outgoing tangent of the first control point.\n * @param {Cartesian3} options.lastTangent The incoming tangent of the last control point.\n * @returns {HermiteSpline|LinearSpline} A hermite spline or a linear spline if less than 3 control points were given.\n *\n * @exception {DeveloperError} points, times, firstTangent and lastTangent are required.\n * @exception {DeveloperError} points.length must be greater than or equal to 2.\n * @exception {DeveloperError} times.length must be equal to points.length.\n *\n * @example\n * // Create a clamped cubic spline above the earth from Philadelphia to Los Angeles.\n * var spline = Cesium.HermiteSpline.createClampedCubic({\n *     times : [ 0.0, 1.5, 3.0, 4.5, 6.0 ],\n *     points : [\n *         new Cesium.Cartesian3(1235398.0, -4810983.0, 4146266.0),\n *         new Cesium.Cartesian3(1372574.0, -5345182.0, 4606657.0),\n *         new Cesium.Cartesian3(-757983.0, -5542796.0, 4514323.0),\n *         new Cesium.Cartesian3(-2821260.0, -5248423.0, 4021290.0),\n *         new Cesium.Cartesian3(-2539788.0, -4724797.0, 3620093.0)\n *     ],\n *     firstTangent : new Cesium.Cartesian3(1125196, -161816, 270551),\n *     lastTangent : new Cesium.Cartesian3(1165345, 112641, 47281)\n * });\n */\nHermiteSpline.createClampedCubic = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var times = options.times;\n  var points = options.points;\n  var firstTangent = options.firstTangent;\n  var lastTangent = options.lastTangent;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(points) ||\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(times) ||\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(firstTangent) ||\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(lastTangent)\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "points, times, firstTangent and lastTangent are required."\n    );\n  }\n  if (points.length < 2) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "points.length must be greater than or equal to 2."\n    );\n  }\n  if (times.length !== points.length) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("times.length must be equal to points.length.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (points.length < 3) {\n    return new _LinearSpline_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n      points: points,\n      times: times,\n    });\n  }\n\n  var tangents = generateClamped(points, firstTangent, lastTangent);\n  var outTangents = tangents.slice(0, tangents.length - 1);\n  var inTangents = tangents.slice(1, tangents.length);\n\n  return new HermiteSpline({\n    times: times,\n    points: points,\n    inTangents: inTangents,\n    outTangents: outTangents,\n  });\n};\n\nHermiteSpline.hermiteCoefficientMatrix = new _Matrix4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n  2.0,\n  -3.0,\n  0.0,\n  1.0,\n  -2.0,\n  3.0,\n  0.0,\n  0.0,\n  1.0,\n  -2.0,\n  1.0,\n  0.0,\n  1.0,\n  -1.0,\n  0.0,\n  0.0\n);\n\n/**\n * Finds an index <code>i</code> in <code>times</code> such that the parameter\n * <code>time</code> is in the interval <code>[times[i], times[i + 1]]</code>.\n * @function\n *\n * @param {Number} time The time.\n * @returns {Number} The index for the element at the start of the interval.\n *\n * @exception {DeveloperError} time must be in the range <code>[t<sub>0</sub>, t<sub>n</sub>]</code>, where <code>t<sub>0</sub></code>\n *                             is the first element in the array <code>times</code> and <code>t<sub>n</sub></code> is the last element\n *                             in the array <code>times</code>.\n */\nHermiteSpline.prototype.findTimeInterval = _Spline_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype.findTimeInterval */ .Z.prototype.findTimeInterval;\n\nvar scratchTimeVec = new _Cartesian4_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchTemp = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n/**\n * Wraps the given time to the period covered by the spline.\n * @function\n *\n * @param {Number} time The time.\n * @return {Number} The time, wrapped around to the updated animation.\n */\nHermiteSpline.prototype.wrapTime = _Spline_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype.wrapTime */ .Z.prototype.wrapTime;\n\n/**\n * Clamps the given time to the period covered by the spline.\n * @function\n *\n * @param {Number} time The time.\n * @return {Number} The time, clamped to the animation period.\n */\nHermiteSpline.prototype.clampTime = _Spline_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype.clampTime */ .Z.prototype.clampTime;\n\n/**\n * Evaluates the curve at a given time.\n *\n * @param {Number} time The time at which to evaluate the curve.\n * @param {Cartesian3} [result] The object onto which to store the result.\n * @returns {Cartesian3} The modified result parameter or a new instance of the point on the curve at the given time.\n *\n * @exception {DeveloperError} time must be in the range <code>[t<sub>0</sub>, t<sub>n</sub>]</code>, where <code>t<sub>0</sub></code>\n *                             is the first element in the array <code>times</code> and <code>t<sub>n</sub></code> is the last element\n *                             in the array <code>times</code>.\n */\nHermiteSpline.prototype.evaluate = function (time, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    result = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n  var points = this.points;\n  var times = this.times;\n  var inTangents = this.inTangents;\n  var outTangents = this.outTangents;\n\n  var i = (this._lastTimeIndex = this.findTimeInterval(\n    time,\n    this._lastTimeIndex\n  ));\n  var u = (time - times[i]) / (times[i + 1] - times[i]);\n\n  var timeVec = scratchTimeVec;\n  timeVec.z = u;\n  timeVec.y = u * u;\n  timeVec.x = timeVec.y * u;\n  timeVec.w = 1.0;\n\n  var coefs = _Matrix4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n    HermiteSpline.hermiteCoefficientMatrix,\n    timeVec,\n    timeVec\n  );\n\n  result = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(points[i], coefs.x, result);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(points[i + 1], coefs.y, scratchTemp);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(result, scratchTemp, result);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(outTangents[i], coefs.z, scratchTemp);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(result, scratchTemp, result);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(inTangents[i], coefs.w, scratchTemp);\n  return _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(result, scratchTemp, result);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (HermiteSpline);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41399\n')},67662:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n\n\n\n/**\n * Hilbert Order helper functions.\n *\n * @namespace HilbertOrder\n */\nvar HilbertOrder = {};\n\n/**\n * Computes the Hilbert index at the given level from 2D coordinates.\n *\n * @param {Number} level The level of the curve\n * @param {Number} x The X coordinate\n * @param {Number} y The Y coordinate\n * @returns {Number} The Hilbert index.\n * @private\n */\nHilbertOrder.encode2D = function (level, x, y) {\n  var n = Math.pow(2, level);\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("level", level);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("x", x);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("y", y);\n  if (level < 1) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("Hilbert level cannot be less than 1.");\n  }\n  if (x < 0 || x >= n || y < 0 || y >= n) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("Invalid coordinates for given level.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var p = {\n    x: x,\n    y: y,\n  };\n  var rx,\n    ry,\n    s,\n    // eslint-disable-next-line no-undef\n    index = BigInt(0);\n\n  for (s = n / 2; s > 0; s /= 2) {\n    rx = (p.x & s) > 0 ? 1 : 0;\n    ry = (p.y & s) > 0 ? 1 : 0;\n    // eslint-disable-next-line no-undef\n    index += BigInt(((3 * rx) ^ ry) * s * s);\n    rotate(n, p, rx, ry);\n  }\n\n  return index;\n};\n\n/**\n * Computes the 2D coordinates from the Hilbert index at the given level.\n *\n * @param {Number} level The level of the curve\n * @param {BigInt} index The Hilbert index\n * @returns {Number[]} An array containing the 2D coordinates ([x, y]) corresponding to the Morton index.\n * @private\n */\nHilbertOrder.decode2D = function (level, index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("level", level);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.bigint */ .Z.typeOf.bigint("index", index);\n  if (level < 1) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("Hilbert level cannot be less than 1.");\n  }\n  // eslint-disable-next-line no-undef\n  if (index < BigInt(0) || index >= BigInt(Math.pow(4, level))) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "Hilbert index exceeds valid maximum for given level."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var n = Math.pow(2, level);\n  var p = {\n    x: 0,\n    y: 0,\n  };\n  var rx, ry, s, t;\n\n  for (s = 1, t = index; s < n; s *= 2) {\n    // eslint-disable-next-line no-undef\n    rx = 1 & Number(t / BigInt(2));\n    // eslint-disable-next-line no-undef\n    ry = 1 & Number(t ^ BigInt(rx));\n    rotate(s, p, rx, ry);\n    p.x += s * rx;\n    p.y += s * ry;\n    // eslint-disable-next-line no-undef\n    t /= BigInt(4);\n  }\n\n  return [p.x, p.y];\n};\n\n/**\n * @private\n */\nfunction rotate(n, p, rx, ry) {\n  if (ry !== 0) {\n    return;\n  }\n\n  if (rx === 1) {\n    p.x = n - 1 - p.x;\n    p.y = n - 1 - p.y;\n  }\n\n  var t = p.x;\n  p.x = p.y;\n  p.y = t;\n}\n\n/* harmony default export */ __webpack_exports__["Z"] = (HilbertOrder);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjc2NjIuanMiLCJtYXBwaW5ncyI6Ijs7QUFBK0I7QUFDa0I7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc0ZBQW1CO0FBQ3JCLEVBQUUsc0ZBQW1CO0FBQ3JCLEVBQUUsc0ZBQW1CO0FBQ3JCO0FBQ0EsY0FBYyxtRUFBYztBQUM1QjtBQUNBO0FBQ0EsY0FBYyxtRUFBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc0ZBQW1CO0FBQ3JCLEVBQUUsc0ZBQW1CO0FBQ3JCO0FBQ0EsY0FBYyxtRUFBYztBQUM1QjtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIsT0FBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlEQUFlLFlBQVksRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL0hpbGJlcnRPcmRlci5qcz85YzU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGVjayBmcm9tIFwiLi9DaGVjay5qc1wiO1xuaW1wb3J0IERldmVsb3BlckVycm9yIGZyb20gXCIuL0RldmVsb3BlckVycm9yLmpzXCI7XG5cbi8qKlxuICogSGlsYmVydCBPcmRlciBoZWxwZXIgZnVuY3Rpb25zLlxuICpcbiAqIEBuYW1lc3BhY2UgSGlsYmVydE9yZGVyXG4gKi9cbnZhciBIaWxiZXJ0T3JkZXIgPSB7fTtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgSGlsYmVydCBpbmRleCBhdCB0aGUgZ2l2ZW4gbGV2ZWwgZnJvbSAyRCBjb29yZGluYXRlcy5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbGV2ZWwgVGhlIGxldmVsIG9mIHRoZSBjdXJ2ZVxuICogQHBhcmFtIHtOdW1iZXJ9IHggVGhlIFggY29vcmRpbmF0ZVxuICogQHBhcmFtIHtOdW1iZXJ9IHkgVGhlIFkgY29vcmRpbmF0ZVxuICogQHJldHVybnMge051bWJlcn0gVGhlIEhpbGJlcnQgaW5kZXguXG4gKiBAcHJpdmF0ZVxuICovXG5IaWxiZXJ0T3JkZXIuZW5jb2RlMkQgPSBmdW5jdGlvbiAobGV2ZWwsIHgsIHkpIHtcbiAgdmFyIG4gPSBNYXRoLnBvdygyLCBsZXZlbCk7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5udW1iZXIoXCJsZXZlbFwiLCBsZXZlbCk7XG4gIENoZWNrLnR5cGVPZi5udW1iZXIoXCJ4XCIsIHgpO1xuICBDaGVjay50eXBlT2YubnVtYmVyKFwieVwiLCB5KTtcbiAgaWYgKGxldmVsIDwgMSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIkhpbGJlcnQgbGV2ZWwgY2Fubm90IGJlIGxlc3MgdGhhbiAxLlwiKTtcbiAgfVxuICBpZiAoeCA8IDAgfHwgeCA+PSBuIHx8IHkgPCAwIHx8IHkgPj0gbikge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIkludmFsaWQgY29vcmRpbmF0ZXMgZm9yIGdpdmVuIGxldmVsLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB2YXIgcCA9IHtcbiAgICB4OiB4LFxuICAgIHk6IHksXG4gIH07XG4gIHZhciByeCxcbiAgICByeSxcbiAgICBzLFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIGluZGV4ID0gQmlnSW50KDApO1xuXG4gIGZvciAocyA9IG4gLyAyOyBzID4gMDsgcyAvPSAyKSB7XG4gICAgcnggPSAocC54ICYgcykgPiAwID8gMSA6IDA7XG4gICAgcnkgPSAocC55ICYgcykgPiAwID8gMSA6IDA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgaW5kZXggKz0gQmlnSW50KCgoMyAqIHJ4KSBeIHJ5KSAqIHMgKiBzKTtcbiAgICByb3RhdGUobiwgcCwgcngsIHJ5KTtcbiAgfVxuXG4gIHJldHVybiBpbmRleDtcbn07XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIDJEIGNvb3JkaW5hdGVzIGZyb20gdGhlIEhpbGJlcnQgaW5kZXggYXQgdGhlIGdpdmVuIGxldmVsLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBsZXZlbCBUaGUgbGV2ZWwgb2YgdGhlIGN1cnZlXG4gKiBAcGFyYW0ge0JpZ0ludH0gaW5kZXggVGhlIEhpbGJlcnQgaW5kZXhcbiAqIEByZXR1cm5zIHtOdW1iZXJbXX0gQW4gYXJyYXkgY29udGFpbmluZyB0aGUgMkQgY29vcmRpbmF0ZXMgKFt4LCB5XSkgY29ycmVzcG9uZGluZyB0byB0aGUgTW9ydG9uIGluZGV4LlxuICogQHByaXZhdGVcbiAqL1xuSGlsYmVydE9yZGVyLmRlY29kZTJEID0gZnVuY3Rpb24gKGxldmVsLCBpbmRleCkge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay50eXBlT2YubnVtYmVyKFwibGV2ZWxcIiwgbGV2ZWwpO1xuICBDaGVjay50eXBlT2YuYmlnaW50KFwiaW5kZXhcIiwgaW5kZXgpO1xuICBpZiAobGV2ZWwgPCAxKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwiSGlsYmVydCBsZXZlbCBjYW5ub3QgYmUgbGVzcyB0aGFuIDEuXCIpO1xuICB9XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICBpZiAoaW5kZXggPCBCaWdJbnQoMCkgfHwgaW5kZXggPj0gQmlnSW50KE1hdGgucG93KDQsIGxldmVsKSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIkhpbGJlcnQgaW5kZXggZXhjZWVkcyB2YWxpZCBtYXhpbXVtIGZvciBnaXZlbiBsZXZlbC5cIlxuICAgICk7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIG4gPSBNYXRoLnBvdygyLCBsZXZlbCk7XG4gIHZhciBwID0ge1xuICAgIHg6IDAsXG4gICAgeTogMCxcbiAgfTtcbiAgdmFyIHJ4LCByeSwgcywgdDtcblxuICBmb3IgKHMgPSAxLCB0ID0gaW5kZXg7IHMgPCBuOyBzICo9IDIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICByeCA9IDEgJiBOdW1iZXIodCAvIEJpZ0ludCgyKSk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgcnkgPSAxICYgTnVtYmVyKHQgXiBCaWdJbnQocngpKTtcbiAgICByb3RhdGUocywgcCwgcngsIHJ5KTtcbiAgICBwLnggKz0gcyAqIHJ4O1xuICAgIHAueSArPSBzICogcnk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgdCAvPSBCaWdJbnQoNCk7XG4gIH1cblxuICByZXR1cm4gW3AueCwgcC55XTtcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcm90YXRlKG4sIHAsIHJ4LCByeSkge1xuICBpZiAocnkgIT09IDApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAocnggPT09IDEpIHtcbiAgICBwLnggPSBuIC0gMSAtIHAueDtcbiAgICBwLnkgPSBuIC0gMSAtIHAueTtcbiAgfVxuXG4gIHZhciB0ID0gcC54O1xuICBwLnggPSBwLnk7XG4gIHAueSA9IHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhpbGJlcnRPcmRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///67662\n')},41999:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ Core_Iau2000Orientation; }\n});\n\n// EXTERNAL MODULE: ./node_modules/cesium/Source/Core/defined.js\nvar defined = __webpack_require__(82982);\n;// CONCATENATED MODULE: ./node_modules/cesium/Source/Core/IauOrientationParameters.js\n/**\n * A structure containing the orientation data computed at a particular time. The data\n * represents the direction of the pole of rotation and the rotation about that pole.\n * <p>\n * These parameters correspond to the parameters in the Report from the IAU/IAG Working Group\n * except that they are expressed in radians.\n * </p>\n *\n * @namespace IauOrientationParameters\n *\n * @private\n */\nfunction IauOrientationParameters(\n  rightAscension,\n  declination,\n  rotation,\n  rotationRate\n) {\n  /**\n   * The right ascension of the north pole of the body with respect to\n   * the International Celestial Reference Frame, in radians.\n   * @type {Number}\n   *\n   * @private\n   */\n  this.rightAscension = rightAscension;\n\n  /**\n   * The declination of the north pole of the body with respect to\n   * the International Celestial Reference Frame, in radians.\n   * @type {Number}\n   *\n   * @private\n   */\n  this.declination = declination;\n\n  /**\n   * The rotation about the north pole used to align a set of axes with\n   * the meridian defined by the IAU report, in radians.\n   * @type {Number}\n   *\n   * @private\n   */\n  this.rotation = rotation;\n\n  /**\n   * The instantaneous rotation rate about the north pole, in radians per second.\n   * @type {Number}\n   *\n   * @private\n   */\n  this.rotationRate = rotationRate;\n}\n/* harmony default export */ var Core_IauOrientationParameters = (IauOrientationParameters);\n\n// EXTERNAL MODULE: ./node_modules/cesium/Source/Core/JulianDate.js\nvar JulianDate = __webpack_require__(55293);\n// EXTERNAL MODULE: ./node_modules/cesium/Source/Core/Math.js\nvar Core_Math = __webpack_require__(99417);\n// EXTERNAL MODULE: ./node_modules/cesium/Source/Core/TimeConstants.js\nvar TimeConstants = __webpack_require__(4877);\n;// CONCATENATED MODULE: ./node_modules/cesium/Source/Core/Iau2000Orientation.js\n\n\n\n\n\n\n/**\n * This is a collection of the orientation information available for central bodies.\n * The data comes from the Report of the IAU/IAG Working Group on Cartographic\n * Coordinates and Rotational Elements: 2000.\n *\n * @namespace Iau2000Orientation\n *\n * @private\n */\nvar Iau2000Orientation = {};\n\nvar TdtMinusTai = 32.184;\nvar J2000d = 2451545.0;\n\nvar c1 = -0.0529921;\nvar c2 = -0.1059842;\nvar c3 = 13.0120009;\nvar c4 = 13.3407154;\nvar c5 = 0.9856003;\nvar c6 = 26.4057084;\nvar c7 = 13.064993;\nvar c8 = 0.3287146;\nvar c9 = 1.7484877;\nvar c10 = -0.1589763;\nvar c11 = 0.0036096;\nvar c12 = 0.1643573;\nvar c13 = 12.9590088;\nvar dateTT = new JulianDate/* default */.Z();\n\n/**\n * Compute the orientation parameters for the Moon.\n *\n * @param {JulianDate} [date=JulianDate.now()] The date to evaluate the parameters.\n * @param {IauOrientationParameters} [result] The object onto which to store the result.\n * @returns {IauOrientationParameters} The modified result parameter or a new instance representing the orientation of the Earth\'s Moon.\n * @private\n */\nIau2000Orientation.ComputeMoon = function (date, result) {\n  if (!(0,defined/* default */.Z)(date)) {\n    date = JulianDate/* default.now */.Z.now();\n  }\n\n  dateTT = JulianDate/* default.addSeconds */.Z.addSeconds(date, TdtMinusTai, dateTT);\n  var d = JulianDate/* default.totalDays */.Z.totalDays(dateTT) - J2000d;\n  var T = d / TimeConstants/* default.DAYS_PER_JULIAN_CENTURY */.Z.DAYS_PER_JULIAN_CENTURY;\n\n  var E1 = (125.045 + c1 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E2 = (250.089 + c2 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E3 = (260.008 + c3 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E4 = (176.625 + c4 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E5 = (357.529 + c5 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E6 = (311.589 + c6 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E7 = (134.963 + c7 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E8 = (276.617 + c8 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E9 = (34.226 + c9 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E10 = (15.134 + c10 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E11 = (119.743 + c11 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E12 = (239.961 + c12 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var E13 = (25.053 + c13 * d) * Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n\n  var sinE1 = Math.sin(E1);\n  var sinE2 = Math.sin(E2);\n  var sinE3 = Math.sin(E3);\n  var sinE4 = Math.sin(E4);\n  var sinE5 = Math.sin(E5);\n  var sinE6 = Math.sin(E6);\n  var sinE7 = Math.sin(E7);\n  var sinE8 = Math.sin(E8);\n  var sinE9 = Math.sin(E9);\n  var sinE10 = Math.sin(E10);\n  var sinE11 = Math.sin(E11);\n  var sinE12 = Math.sin(E12);\n  var sinE13 = Math.sin(E13);\n\n  var cosE1 = Math.cos(E1);\n  var cosE2 = Math.cos(E2);\n  var cosE3 = Math.cos(E3);\n  var cosE4 = Math.cos(E4);\n  var cosE5 = Math.cos(E5);\n  var cosE6 = Math.cos(E6);\n  var cosE7 = Math.cos(E7);\n  var cosE8 = Math.cos(E8);\n  var cosE9 = Math.cos(E9);\n  var cosE10 = Math.cos(E10);\n  var cosE11 = Math.cos(E11);\n  var cosE12 = Math.cos(E12);\n  var cosE13 = Math.cos(E13);\n\n  var rightAscension =\n    (269.9949 +\n      0.0031 * T -\n      3.8787 * sinE1 -\n      0.1204 * sinE2 +\n      0.07 * sinE3 -\n      0.0172 * sinE4 +\n      0.0072 * sinE6 -\n      0.0052 * sinE10 +\n      0.0043 * sinE13) *\n    Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var declination =\n    (66.5392 +\n      0.013 * T +\n      1.5419 * cosE1 +\n      0.0239 * cosE2 -\n      0.0278 * cosE3 +\n      0.0068 * cosE4 -\n      0.0029 * cosE6 +\n      0.0009 * cosE7 +\n      0.0008 * cosE10 -\n      0.0009 * cosE13) *\n    Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n  var rotation =\n    (38.3213 +\n      13.17635815 * d -\n      1.4e-12 * d * d +\n      3.561 * sinE1 +\n      0.1208 * sinE2 -\n      0.0642 * sinE3 +\n      0.0158 * sinE4 +\n      0.0252 * sinE5 -\n      0.0066 * sinE6 -\n      0.0047 * sinE7 -\n      0.0046 * sinE8 +\n      0.0028 * sinE9 +\n      0.0052 * sinE10 +\n      0.004 * sinE11 +\n      0.0019 * sinE12 -\n      0.0044 * sinE13) *\n    Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n\n  var rotationRate =\n    ((13.17635815 -\n      1.4e-12 * (2.0 * d) +\n      3.561 * cosE1 * c1 +\n      0.1208 * cosE2 * c2 -\n      0.0642 * cosE3 * c3 +\n      0.0158 * cosE4 * c4 +\n      0.0252 * cosE5 * c5 -\n      0.0066 * cosE6 * c6 -\n      0.0047 * cosE7 * c7 -\n      0.0046 * cosE8 * c8 +\n      0.0028 * cosE9 * c9 +\n      0.0052 * cosE10 * c10 +\n      0.004 * cosE11 * c11 +\n      0.0019 * cosE12 * c12 -\n      0.0044 * cosE13 * c13) /\n      86400.0) *\n    Core_Math/* default.RADIANS_PER_DEGREE */.Z.RADIANS_PER_DEGREE;\n\n  if (!(0,defined/* default */.Z)(result)) {\n    result = new Core_IauOrientationParameters();\n  }\n\n  result.rightAscension = rightAscension;\n  result.declination = declination;\n  result.rotation = rotation;\n  result.rotationRate = rotationRate;\n\n  return result;\n};\n/* harmony default export */ var Core_Iau2000Orientation = (Iau2000Orientation);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41999\n')},27846:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13222);\n/* harmony import */ var _buildModuleUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(72000);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _Iau2006XysSample_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50048);\n/* harmony import */ var _JulianDate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55293);\n/* harmony import */ var _Resource_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68985);\n/* harmony import */ var _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13098);\n\n\n\n\n\n\n\n\n\n/**\n * A set of IAU2006 XYS data that is used to evaluate the transformation between the International\n * Celestial Reference Frame (ICRF) and the International Terrestrial Reference Frame (ITRF).\n *\n * @alias Iau2006XysData\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Resource|String} [options.xysFileUrlTemplate=\'Assets/IAU2006_XYS/IAU2006_XYS_{0}.json\'] A template URL for obtaining the XYS data.  In the template,\n *                 `{0}` will be replaced with the file index.\n * @param {Number} [options.interpolationOrder=9] The order of interpolation to perform on the XYS data.\n * @param {Number} [options.sampleZeroJulianEphemerisDate=2442396.5] The Julian ephemeris date (JED) of the\n *                 first XYS sample.\n * @param {Number} [options.stepSizeDays=1.0] The step size, in days, between successive XYS samples.\n * @param {Number} [options.samplesPerXysFile=1000] The number of samples in each XYS file.\n * @param {Number} [options.totalSamples=27426] The total number of samples in all XYS files.\n *\n * @private\n */\nfunction Iau2006XysData(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  this._xysFileUrlTemplate = _Resource_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].createIfNeeded */ .Z.createIfNeeded(\n    options.xysFileUrlTemplate\n  );\n  this._interpolationOrder = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.interpolationOrder, 9);\n  this._sampleZeroJulianEphemerisDate = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.sampleZeroJulianEphemerisDate,\n    2442396.5\n  );\n  this._sampleZeroDateTT = new _JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n    this._sampleZeroJulianEphemerisDate,\n    0.0,\n    _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI\n  );\n  this._stepSizeDays = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.stepSizeDays, 1.0);\n  this._samplesPerXysFile = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.samplesPerXysFile, 1000);\n  this._totalSamples = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.totalSamples, 27426);\n  this._samples = new Array(this._totalSamples * 3);\n  this._chunkDownloadsInProgress = [];\n\n  var order = this._interpolationOrder;\n\n  // Compute denominators and X values for interpolation.\n  var denom = (this._denominators = new Array(order + 1));\n  var xTable = (this._xTable = new Array(order + 1));\n\n  var stepN = Math.pow(this._stepSizeDays, order);\n\n  for (var i = 0; i <= order; ++i) {\n    denom[i] = stepN;\n    xTable[i] = i * this._stepSizeDays;\n\n    for (var j = 0; j <= order; ++j) {\n      if (j !== i) {\n        denom[i] *= i - j;\n      }\n    }\n\n    denom[i] = 1.0 / denom[i];\n  }\n\n  // Allocate scratch arrays for interpolation.\n  this._work = new Array(order + 1);\n  this._coef = new Array(order + 1);\n}\n\nvar julianDateScratch = new _JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(0, 0.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI);\n\nfunction getDaysSinceEpoch(xys, dayTT, secondTT) {\n  var dateTT = julianDateScratch;\n  dateTT.dayNumber = dayTT;\n  dateTT.secondsOfDay = secondTT;\n  return _JulianDate_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].daysDifference */ .Z.daysDifference(dateTT, xys._sampleZeroDateTT);\n}\n\n/**\n * Preloads XYS data for a specified date range.\n *\n * @param {Number} startDayTT The Julian day number of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} startSecondTT The seconds past noon of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} stopDayTT The Julian day number of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} stopSecondTT The seconds past noon of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @returns {Promise<void>} A promise that, when resolved, indicates that the requested interval has been\n *                    preloaded.\n */\nIau2006XysData.prototype.preload = function (\n  startDayTT,\n  startSecondTT,\n  stopDayTT,\n  stopSecondTT\n) {\n  var startDaysSinceEpoch = getDaysSinceEpoch(this, startDayTT, startSecondTT);\n  var stopDaysSinceEpoch = getDaysSinceEpoch(this, stopDayTT, stopSecondTT);\n\n  var startIndex =\n    (startDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2) |\n    0;\n  if (startIndex < 0) {\n    startIndex = 0;\n  }\n\n  var stopIndex =\n    (stopDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2) |\n    (0 + this._interpolationOrder);\n  if (stopIndex >= this._totalSamples) {\n    stopIndex = this._totalSamples - 1;\n  }\n\n  var startChunk = (startIndex / this._samplesPerXysFile) | 0;\n  var stopChunk = (stopIndex / this._samplesPerXysFile) | 0;\n\n  var promises = [];\n  for (var i = startChunk; i <= stopChunk; ++i) {\n    promises.push(requestXysChunk(this, i));\n  }\n\n  return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].all */ .Z.all(promises);\n};\n\n/**\n * Computes the XYS values for a given date by interpolating.  If the required data is not yet downloaded,\n * this method will return undefined.\n *\n * @param {Number} dayTT The Julian day number for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} secondTT The seconds past noon of the date for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Iau2006XysSample} [result] The instance to which to copy the interpolated result.  If this parameter\n *                           is undefined, a new instance is allocated and returned.\n * @returns {Iau2006XysSample} The interpolated XYS values, or undefined if the required data for this\n *                             computation has not yet been downloaded.\n *\n * @see Iau2006XysData#preload\n */\nIau2006XysData.prototype.computeXysRadians = function (\n  dayTT,\n  secondTT,\n  result\n) {\n  var daysSinceEpoch = getDaysSinceEpoch(this, dayTT, secondTT);\n  if (daysSinceEpoch < 0.0) {\n    // Can\'t evaluate prior to the epoch of the data.\n    return undefined;\n  }\n\n  var centerIndex = (daysSinceEpoch / this._stepSizeDays) | 0;\n  if (centerIndex >= this._totalSamples) {\n    // Can\'t evaluate after the last sample in the data.\n    return undefined;\n  }\n\n  var degree = this._interpolationOrder;\n\n  var firstIndex = centerIndex - ((degree / 2) | 0);\n  if (firstIndex < 0) {\n    firstIndex = 0;\n  }\n  var lastIndex = firstIndex + degree;\n  if (lastIndex >= this._totalSamples) {\n    lastIndex = this._totalSamples - 1;\n    firstIndex = lastIndex - degree;\n    if (firstIndex < 0) {\n      firstIndex = 0;\n    }\n  }\n\n  // Are all the samples we need present?\n  // We can assume so if the first and last are present\n  var isDataMissing = false;\n  var samples = this._samples;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(samples[firstIndex * 3])) {\n    requestXysChunk(this, (firstIndex / this._samplesPerXysFile) | 0);\n    isDataMissing = true;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(samples[lastIndex * 3])) {\n    requestXysChunk(this, (lastIndex / this._samplesPerXysFile) | 0);\n    isDataMissing = true;\n  }\n\n  if (isDataMissing) {\n    return undefined;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(result)) {\n    result = new _Iau2006XysSample_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(0.0, 0.0, 0.0);\n  } else {\n    result.x = 0.0;\n    result.y = 0.0;\n    result.s = 0.0;\n  }\n\n  var x = daysSinceEpoch - firstIndex * this._stepSizeDays;\n\n  var work = this._work;\n  var denom = this._denominators;\n  var coef = this._coef;\n  var xTable = this._xTable;\n\n  var i, j;\n  for (i = 0; i <= degree; ++i) {\n    work[i] = x - xTable[i];\n  }\n\n  for (i = 0; i <= degree; ++i) {\n    coef[i] = 1.0;\n\n    for (j = 0; j <= degree; ++j) {\n      if (j !== i) {\n        coef[i] *= work[j];\n      }\n    }\n\n    coef[i] *= denom[i];\n\n    var sampleIndex = (firstIndex + i) * 3;\n    result.x += coef[i] * samples[sampleIndex++];\n    result.y += coef[i] * samples[sampleIndex++];\n    result.s += coef[i] * samples[sampleIndex];\n  }\n\n  return result;\n};\n\nfunction requestXysChunk(xysData, chunkIndex) {\n  if (xysData._chunkDownloadsInProgress[chunkIndex]) {\n    // Chunk has already been requested.\n    return xysData._chunkDownloadsInProgress[chunkIndex];\n  }\n\n  var deferred = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defer */ .Z.defer();\n\n  xysData._chunkDownloadsInProgress[chunkIndex] = deferred;\n\n  var chunkUrl;\n  var xysFileUrlTemplate = xysData._xysFileUrlTemplate;\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(xysFileUrlTemplate)) {\n    chunkUrl = xysFileUrlTemplate.getDerivedResource({\n      templateValues: {\n        0: chunkIndex,\n      },\n    });\n  } else {\n    chunkUrl = new _Resource_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n      url: (0,_buildModuleUrl_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n        "Assets/IAU2006_XYS/IAU2006_XYS_" + chunkIndex + ".json"\n      ),\n    });\n  }\n\n  (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(chunkUrl.fetchJson(), function (chunk) {\n    xysData._chunkDownloadsInProgress[chunkIndex] = false;\n\n    var samples = xysData._samples;\n    var newSamples = chunk.samples;\n    var startIndex = chunkIndex * xysData._samplesPerXysFile * 3;\n\n    for (var i = 0, len = newSamples.length; i < len; ++i) {\n      samples[startIndex + i] = newSamples[i];\n    }\n\n    deferred.resolve();\n  });\n\n  return deferred.promise;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (Iau2006XysData);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27846\n')},50048:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * An IAU 2006 XYS value sampled at a particular time.\n *\n * @alias Iau2006XysSample\n * @constructor\n *\n * @param {Number} x The X value.\n * @param {Number} y The Y value.\n * @param {Number} s The S value.\n *\n * @private\n */\nfunction Iau2006XysSample(x, y, s) {\n  /**\n   * The X value.\n   * @type {Number}\n   */\n  this.x = x;\n\n  /**\n   * The Y value.\n   * @type {Number}\n   */\n  this.y = y;\n\n  /**\n   * The S value.\n   * @type {Number}\n   */\n  this.s = s;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (Iau2006XysSample);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAwNDguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EseURBQWUsZ0JBQWdCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9JYXUyMDA2WHlzU2FtcGxlLmpzPzU1NGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBbiBJQVUgMjAwNiBYWVMgdmFsdWUgc2FtcGxlZCBhdCBhIHBhcnRpY3VsYXIgdGltZS5cbiAqXG4gKiBAYWxpYXMgSWF1MjAwNlh5c1NhbXBsZVxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IHggVGhlIFggdmFsdWUuXG4gKiBAcGFyYW0ge051bWJlcn0geSBUaGUgWSB2YWx1ZS5cbiAqIEBwYXJhbSB7TnVtYmVyfSBzIFRoZSBTIHZhbHVlLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIElhdTIwMDZYeXNTYW1wbGUoeCwgeSwgcykge1xuICAvKipcbiAgICogVGhlIFggdmFsdWUuXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICB0aGlzLnggPSB4O1xuXG4gIC8qKlxuICAgKiBUaGUgWSB2YWx1ZS5cbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIHRoaXMueSA9IHk7XG5cbiAgLyoqXG4gICAqIFRoZSBTIHZhbHVlLlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgdGhpcy5zID0gcztcbn1cbmV4cG9ydCBkZWZhdWx0IElhdTIwMDZYeXNTYW1wbGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///50048\n')},23628:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _Iau2000Orientation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(41999);\n/* harmony import */ var _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55293);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68201);\n/* harmony import */ var _Quaternion_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87811);\n\n\n\n\n\n\n\n\n/**\n * The Axes representing the orientation of a Globe as represented by the data\n * from the IAU/IAG Working Group reports on rotational elements.\n * @alias IauOrientationAxes\n * @constructor\n *\n * @param {IauOrientationAxes.ComputeFunction} [computeFunction] The function that computes the {@link IauOrientationParameters} given a {@link JulianDate}.\n *\n * @see Iau2000Orientation\n *\n * @private\n */\nfunction IauOrientationAxes(computeFunction) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(computeFunction) || typeof computeFunction !== "function") {\n    computeFunction = _Iau2000Orientation_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ComputeMoon */ .Z.ComputeMoon;\n  }\n\n  this._computeFunction = computeFunction;\n}\n\nvar xAxisScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar yAxisScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar zAxisScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nfunction computeRotationMatrix(alpha, delta, result) {\n  var xAxis = xAxisScratch;\n  xAxis.x = Math.cos(alpha + _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO);\n  xAxis.y = Math.sin(alpha + _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO);\n  xAxis.z = 0.0;\n\n  var cosDec = Math.cos(delta);\n\n  var zAxis = zAxisScratch;\n  zAxis.x = cosDec * Math.cos(alpha);\n  zAxis.y = cosDec * Math.sin(alpha);\n  zAxis.z = Math.sin(delta);\n\n  var yAxis = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(zAxis, xAxis, yAxisScratch);\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(result)) {\n    result = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n  }\n\n  result[0] = xAxis.x;\n  result[1] = yAxis.x;\n  result[2] = zAxis.x;\n  result[3] = xAxis.y;\n  result[4] = yAxis.y;\n  result[5] = zAxis.y;\n  result[6] = xAxis.z;\n  result[7] = yAxis.z;\n  result[8] = zAxis.z;\n\n  return result;\n}\n\nvar rotMtxScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar quatScratch = new _Quaternion_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n\n/**\n * Computes a rotation from ICRF to a Globe\'s Fixed axes.\n *\n * @param {JulianDate} date The date to evaluate the matrix.\n * @param {Matrix3} result The object onto which to store the result.\n * @returns {Matrix3} The modified result parameter or a new instance of the rotation from ICRF to Fixed.\n */\nIauOrientationAxes.prototype.evaluate = function (date, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(date)) {\n    date = _JulianDate_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].now */ .Z.now();\n  }\n\n  var alphaDeltaW = this._computeFunction(date);\n  var precMtx = computeRotationMatrix(\n    alphaDeltaW.rightAscension,\n    alphaDeltaW.declination,\n    result\n  );\n\n  var rot = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].zeroToTwoPi */ .Z.zeroToTwoPi(alphaDeltaW.rotation);\n  var quat = _Quaternion_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_Z */ .Z.UNIT_Z, rot, quatScratch);\n  var rotMtx = _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromQuaternion */ .Z.fromQuaternion(\n    _Quaternion_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].conjugate */ .Z.conjugate(quat, quat),\n    rotMtxScratch\n  );\n\n  var cbi2cbf = _Matrix3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].multiply */ .Z.multiply(rotMtx, precMtx, precMtx);\n  return cbi2cbf;\n};\n\n/**\n * A function that computes the {@link IauOrientationParameters} for a {@link JulianDate}.\n * @callback IauOrientationAxes.ComputeFunction\n * @param {JulianDate} date The date to evaluate the parameters.\n * @returns {IauOrientationParameters} The orientation parameters.\n * @private\n */\n/* harmony default export */ __webpack_exports__["Z"] = (IauOrientationAxes);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM2MjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUNOO0FBQ3NCO0FBQ2hCO0FBQ047QUFDQTtBQUNNOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9DQUFvQyxrREFBa0QsZ0NBQWdDLFNBQVMsaUJBQWlCO0FBQzNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCxzQkFBc0IsK0ZBQThCO0FBQ3BEOztBQUVBO0FBQ0E7O0FBRUEsdUJBQXVCLCtEQUFVO0FBQ2pDLHVCQUF1QiwrREFBVTtBQUNqQyx1QkFBdUIsK0RBQVU7O0FBRWpDO0FBQ0E7QUFDQSw2QkFBNkIsaUZBQXNCO0FBQ25ELDZCQUE2QixpRkFBc0I7QUFDbkQ7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYywyRUFBZ0I7O0FBRTlCLE9BQU8sZ0VBQU87QUFDZCxpQkFBaUIsNERBQU87QUFDeEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsd0JBQXdCLDREQUFPO0FBQy9CLHNCQUFzQiwrREFBVTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsU0FBUztBQUNwQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCxXQUFXLHVFQUFjO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLGlGQUFzQjtBQUNsQyxhQUFhLDJGQUF3QixDQUFDLDZFQUFpQjtBQUN2RCxlQUFlLDBGQUFzQjtBQUNyQyxJQUFJLG1GQUFvQjtBQUN4QjtBQUNBOztBQUVBLGdCQUFnQiw4RUFBZ0I7QUFDaEM7QUFDQTs7QUFFQTtBQUNBLGlDQUFpQyxnQ0FBZ0MsT0FBTyxpQkFBaUI7QUFDekY7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYSwwQkFBMEI7QUFDdkM7QUFDQTtBQUNBLHlEQUFlLGtCQUFrQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvSWF1T3JpZW50YXRpb25BeGVzLmpzPzRjY2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhcnRlc2lhbjMgZnJvbSBcIi4vQ2FydGVzaWFuMy5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4vZGVmaW5lZC5qc1wiO1xuaW1wb3J0IElhdTIwMDBPcmllbnRhdGlvbiBmcm9tIFwiLi9JYXUyMDAwT3JpZW50YXRpb24uanNcIjtcbmltcG9ydCBKdWxpYW5EYXRlIGZyb20gXCIuL0p1bGlhbkRhdGUuanNcIjtcbmltcG9ydCBDZXNpdW1NYXRoIGZyb20gXCIuL01hdGguanNcIjtcbmltcG9ydCBNYXRyaXgzIGZyb20gXCIuL01hdHJpeDMuanNcIjtcbmltcG9ydCBRdWF0ZXJuaW9uIGZyb20gXCIuL1F1YXRlcm5pb24uanNcIjtcblxuLyoqXG4gKiBUaGUgQXhlcyByZXByZXNlbnRpbmcgdGhlIG9yaWVudGF0aW9uIG9mIGEgR2xvYmUgYXMgcmVwcmVzZW50ZWQgYnkgdGhlIGRhdGFcbiAqIGZyb20gdGhlIElBVS9JQUcgV29ya2luZyBHcm91cCByZXBvcnRzIG9uIHJvdGF0aW9uYWwgZWxlbWVudHMuXG4gKiBAYWxpYXMgSWF1T3JpZW50YXRpb25BeGVzXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge0lhdU9yaWVudGF0aW9uQXhlcy5Db21wdXRlRnVuY3Rpb259IFtjb21wdXRlRnVuY3Rpb25dIFRoZSBmdW5jdGlvbiB0aGF0IGNvbXB1dGVzIHRoZSB7QGxpbmsgSWF1T3JpZW50YXRpb25QYXJhbWV0ZXJzfSBnaXZlbiBhIHtAbGluayBKdWxpYW5EYXRlfS5cbiAqXG4gKiBAc2VlIElhdTIwMDBPcmllbnRhdGlvblxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIElhdU9yaWVudGF0aW9uQXhlcyhjb21wdXRlRnVuY3Rpb24pIHtcbiAgaWYgKCFkZWZpbmVkKGNvbXB1dGVGdW5jdGlvbikgfHwgdHlwZW9mIGNvbXB1dGVGdW5jdGlvbiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgY29tcHV0ZUZ1bmN0aW9uID0gSWF1MjAwME9yaWVudGF0aW9uLkNvbXB1dGVNb29uO1xuICB9XG5cbiAgdGhpcy5fY29tcHV0ZUZ1bmN0aW9uID0gY29tcHV0ZUZ1bmN0aW9uO1xufVxuXG52YXIgeEF4aXNTY3JhdGNoID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciB5QXhpc1NjcmF0Y2ggPSBuZXcgQ2FydGVzaWFuMygpO1xudmFyIHpBeGlzU2NyYXRjaCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG5cbmZ1bmN0aW9uIGNvbXB1dGVSb3RhdGlvbk1hdHJpeChhbHBoYSwgZGVsdGEsIHJlc3VsdCkge1xuICB2YXIgeEF4aXMgPSB4QXhpc1NjcmF0Y2g7XG4gIHhBeGlzLnggPSBNYXRoLmNvcyhhbHBoYSArIENlc2l1bU1hdGguUElfT1ZFUl9UV08pO1xuICB4QXhpcy55ID0gTWF0aC5zaW4oYWxwaGEgKyBDZXNpdW1NYXRoLlBJX09WRVJfVFdPKTtcbiAgeEF4aXMueiA9IDAuMDtcblxuICB2YXIgY29zRGVjID0gTWF0aC5jb3MoZGVsdGEpO1xuXG4gIHZhciB6QXhpcyA9IHpBeGlzU2NyYXRjaDtcbiAgekF4aXMueCA9IGNvc0RlYyAqIE1hdGguY29zKGFscGhhKTtcbiAgekF4aXMueSA9IGNvc0RlYyAqIE1hdGguc2luKGFscGhhKTtcbiAgekF4aXMueiA9IE1hdGguc2luKGRlbHRhKTtcblxuICB2YXIgeUF4aXMgPSBDYXJ0ZXNpYW4zLmNyb3NzKHpBeGlzLCB4QXhpcywgeUF4aXNTY3JhdGNoKTtcblxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHJlc3VsdCA9IG5ldyBNYXRyaXgzKCk7XG4gIH1cblxuICByZXN1bHRbMF0gPSB4QXhpcy54O1xuICByZXN1bHRbMV0gPSB5QXhpcy54O1xuICByZXN1bHRbMl0gPSB6QXhpcy54O1xuICByZXN1bHRbM10gPSB4QXhpcy55O1xuICByZXN1bHRbNF0gPSB5QXhpcy55O1xuICByZXN1bHRbNV0gPSB6QXhpcy55O1xuICByZXN1bHRbNl0gPSB4QXhpcy56O1xuICByZXN1bHRbN10gPSB5QXhpcy56O1xuICByZXN1bHRbOF0gPSB6QXhpcy56O1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbnZhciByb3RNdHhTY3JhdGNoID0gbmV3IE1hdHJpeDMoKTtcbnZhciBxdWF0U2NyYXRjaCA9IG5ldyBRdWF0ZXJuaW9uKCk7XG5cbi8qKlxuICogQ29tcHV0ZXMgYSByb3RhdGlvbiBmcm9tIElDUkYgdG8gYSBHbG9iZSdzIEZpeGVkIGF4ZXMuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBkYXRlIFRoZSBkYXRlIHRvIGV2YWx1YXRlIHRoZSBtYXRyaXguXG4gKiBAcGFyYW0ge01hdHJpeDN9IHJlc3VsdCBUaGUgb2JqZWN0IG9udG8gd2hpY2ggdG8gc3RvcmUgdGhlIHJlc3VsdC5cbiAqIEByZXR1cm5zIHtNYXRyaXgzfSBUaGUgbW9kaWZpZWQgcmVzdWx0IHBhcmFtZXRlciBvciBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgcm90YXRpb24gZnJvbSBJQ1JGIHRvIEZpeGVkLlxuICovXG5JYXVPcmllbnRhdGlvbkF4ZXMucHJvdG90eXBlLmV2YWx1YXRlID0gZnVuY3Rpb24gKGRhdGUsIHJlc3VsdCkge1xuICBpZiAoIWRlZmluZWQoZGF0ZSkpIHtcbiAgICBkYXRlID0gSnVsaWFuRGF0ZS5ub3coKTtcbiAgfVxuXG4gIHZhciBhbHBoYURlbHRhVyA9IHRoaXMuX2NvbXB1dGVGdW5jdGlvbihkYXRlKTtcbiAgdmFyIHByZWNNdHggPSBjb21wdXRlUm90YXRpb25NYXRyaXgoXG4gICAgYWxwaGFEZWx0YVcucmlnaHRBc2NlbnNpb24sXG4gICAgYWxwaGFEZWx0YVcuZGVjbGluYXRpb24sXG4gICAgcmVzdWx0XG4gICk7XG5cbiAgdmFyIHJvdCA9IENlc2l1bU1hdGguemVyb1RvVHdvUGkoYWxwaGFEZWx0YVcucm90YXRpb24pO1xuICB2YXIgcXVhdCA9IFF1YXRlcm5pb24uZnJvbUF4aXNBbmdsZShDYXJ0ZXNpYW4zLlVOSVRfWiwgcm90LCBxdWF0U2NyYXRjaCk7XG4gIHZhciByb3RNdHggPSBNYXRyaXgzLmZyb21RdWF0ZXJuaW9uKFxuICAgIFF1YXRlcm5pb24uY29uanVnYXRlKHF1YXQsIHF1YXQpLFxuICAgIHJvdE10eFNjcmF0Y2hcbiAgKTtcblxuICB2YXIgY2JpMmNiZiA9IE1hdHJpeDMubXVsdGlwbHkocm90TXR4LCBwcmVjTXR4LCBwcmVjTXR4KTtcbiAgcmV0dXJuIGNiaTJjYmY7XG59O1xuXG4vKipcbiAqIEEgZnVuY3Rpb24gdGhhdCBjb21wdXRlcyB0aGUge0BsaW5rIElhdU9yaWVudGF0aW9uUGFyYW1ldGVyc30gZm9yIGEge0BsaW5rIEp1bGlhbkRhdGV9LlxuICogQGNhbGxiYWNrIElhdU9yaWVudGF0aW9uQXhlcy5Db21wdXRlRnVuY3Rpb25cbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gZGF0ZSBUaGUgZGF0ZSB0byBldmFsdWF0ZSB0aGUgcGFyYW1ldGVycy5cbiAqIEByZXR1cm5zIHtJYXVPcmllbnRhdGlvblBhcmFtZXRlcnN9IFRoZSBvcmllbnRhdGlvbiBwYXJhbWV0ZXJzLlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgSWF1T3JpZW50YXRpb25BeGVzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23628\n')},22832:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(99417);\n/* harmony import */ var _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52200);\n\n\n\n\n\n/**\n * Constants for WebGL index datatypes.  These corresponds to the\n * <code>type</code> parameter of {@link http://www.khronos.org/opengles/sdk/docs/man/xhtml/glDrawElements.xml|drawElements}.\n *\n * @enum {Number}\n */\nvar IndexDatatype = {\n  /**\n   * 8-bit unsigned byte corresponding to <code>UNSIGNED_BYTE</code> and the type\n   * of an element in <code>Uint8Array</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNSIGNED_BYTE: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n\n  /**\n   * 16-bit unsigned short corresponding to <code>UNSIGNED_SHORT</code> and the type\n   * of an element in <code>Uint16Array</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNSIGNED_SHORT: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n\n  /**\n   * 32-bit unsigned int corresponding to <code>UNSIGNED_INT</code> and the type\n   * of an element in <code>Uint32Array</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNSIGNED_INT: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n};\n\n/**\n * Returns the size, in bytes, of the corresponding datatype.\n *\n * @param {IndexDatatype} indexDatatype The index datatype to get the size of.\n * @returns {Number} The size in bytes.\n *\n * @example\n * // Returns 2\n * var size = Cesium.IndexDatatype.getSizeInBytes(Cesium.IndexDatatype.UNSIGNED_SHORT);\n */\nIndexDatatype.getSizeInBytes = function (indexDatatype) {\n  switch (indexDatatype) {\n    case IndexDatatype.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case IndexDatatype.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case IndexDatatype.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n    "indexDatatype is required and must be a valid IndexDatatype constant."\n  );\n  //>>includeEnd(\'debug\');\n};\n\n/**\n * Gets the datatype with a given size in bytes.\n *\n * @param {Number} sizeInBytes The size of a single index in bytes.\n * @returns {IndexDatatype} The index datatype with the given size.\n */\nIndexDatatype.fromSizeInBytes = function (sizeInBytes) {\n  switch (sizeInBytes) {\n    case 2:\n      return IndexDatatype.UNSIGNED_SHORT;\n    case 4:\n      return IndexDatatype.UNSIGNED_INT;\n    case 1:\n      return IndexDatatype.UNSIGNED_BYTE;\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n        "Size in bytes cannot be mapped to an IndexDatatype"\n      );\n    //>>includeEnd(\'debug\');\n  }\n};\n\n/**\n * Validates that the provided index datatype is a valid {@link IndexDatatype}.\n *\n * @param {IndexDatatype} indexDatatype The index datatype to validate.\n * @returns {Boolean} <code>true</code> if the provided index datatype is a valid value; otherwise, <code>false</code>.\n *\n * @example\n * if (!Cesium.IndexDatatype.validate(indexDatatype)) {\n *   throw new Cesium.DeveloperError(\'indexDatatype must be a valid value.\');\n * }\n */\nIndexDatatype.validate = function (indexDatatype) {\n  return (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(indexDatatype) &&\n    (indexDatatype === IndexDatatype.UNSIGNED_BYTE ||\n      indexDatatype === IndexDatatype.UNSIGNED_SHORT ||\n      indexDatatype === IndexDatatype.UNSIGNED_INT)\n  );\n};\n\n/**\n * Creates a typed array that will store indices, using either <code><Uint16Array</code>\n * or <code>Uint32Array</code> depending on the number of vertices.\n *\n * @param {Number} numberOfVertices Number of vertices that the indices will reference.\n * @param {Number|Array} indicesLengthOrArray Passed through to the typed array constructor.\n * @returns {Uint16Array|Uint32Array} A <code>Uint16Array</code> or <code>Uint32Array</code> constructed with <code>indicesLengthOrArray</code>.\n *\n * @example\n * this.indices = Cesium.IndexDatatype.createTypedArray(positions.length / 3, numberOfIndices);\n */\nIndexDatatype.createTypedArray = function (\n  numberOfVertices,\n  indicesLengthOrArray\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(numberOfVertices)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("numberOfVertices is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (numberOfVertices >= _Math_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SIXTY_FOUR_KILOBYTES */ .Z.SIXTY_FOUR_KILOBYTES) {\n    return new Uint32Array(indicesLengthOrArray);\n  }\n\n  return new Uint16Array(indicesLengthOrArray);\n};\n\n/**\n * Creates a typed array from a source array buffer.  The resulting typed array will store indices, using either <code><Uint16Array</code>\n * or <code>Uint32Array</code> depending on the number of vertices.\n *\n * @param {Number} numberOfVertices Number of vertices that the indices will reference.\n * @param {ArrayBuffer} sourceArray Passed through to the typed array constructor.\n * @param {Number} byteOffset Passed through to the typed array constructor.\n * @param {Number} length Passed through to the typed array constructor.\n * @returns {Uint16Array|Uint32Array} A <code>Uint16Array</code> or <code>Uint32Array</code> constructed with <code>sourceArray</code>, <code>byteOffset</code>, and <code>length</code>.\n *\n */\nIndexDatatype.createTypedArrayFromArrayBuffer = function (\n  numberOfVertices,\n  sourceArray,\n  byteOffset,\n  length\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(numberOfVertices)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("numberOfVertices is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(sourceArray)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("sourceArray is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(byteOffset)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z("byteOffset is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (numberOfVertices >= _Math_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SIXTY_FOUR_KILOBYTES */ .Z.SIXTY_FOUR_KILOBYTES) {\n    return new Uint32Array(sourceArray, byteOffset, length);\n  }\n\n  return new Uint16Array(sourceArray, byteOffset, length);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(IndexDatatype));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22832\n')},35739:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n\n\n/**\n * The interface for interpolation algorithms.\n *\n * @interface InterpolationAlgorithm\n *\n * @see LagrangePolynomialApproximation\n * @see LinearApproximation\n * @see HermitePolynomialApproximation\n */\nvar InterpolationAlgorithm = {};\n\n/**\n * Gets the name of this interpolation algorithm.\n * @type {String}\n */\nInterpolationAlgorithm.type = undefined;\n\n/**\n * Given the desired degree, returns the number of data points required for interpolation.\n * @function\n *\n * @param {Number} degree The desired degree of interpolation.\n * @returns {Number} The number of required data points needed for the desired degree of interpolation.\n */\nInterpolationAlgorithm.getRequiredDataPoints =\n  _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError;\n\n/**\n * Performs zero order interpolation.\n * @function\n *\n * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {Number[]} [result] An existing array into which to store the result.\n *\n * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nInterpolationAlgorithm.interpolateOrderZero =\n  _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError;\n\n/**\n * Performs higher order interpolation.  Not all interpolators need to support high-order interpolation,\n * if this function remains undefined on implementing objects, interpolateOrderZero will be used instead.\n * @function\n * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {Number} inputOrder The number of derivatives supplied for input.\n * @param {Number} outputOrder The number of derivatives desired for output.\n * @param {Number[]} [result] An existing array into which to store the result.\n * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nInterpolationAlgorithm.interpolate = _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError;\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (InterpolationAlgorithm)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU3MzkuanMiLCJtYXBwaW5ncyI6IjtBQUFpRDs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsRUFBRSxtSEFBc0M7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjtBQUNBLFdBQVcsVUFBVTtBQUNyQiw2RUFBNkUsdUJBQXVCO0FBQ3BHLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0EsRUFBRSxtSEFBc0M7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjtBQUNBLFdBQVcsVUFBVTtBQUNyQiw2RUFBNkUsdUJBQXVCO0FBQ3BHLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLGFBQWEsVUFBVTtBQUN2QjtBQUNBLHFDQUFxQyxtSEFBc0M7QUFDM0Usc0VBQWUsc0VBQXNCLElBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9JbnRlcnBvbGF0aW9uQWxnb3JpdGhtLmpzPzczYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERldmVsb3BlckVycm9yIGZyb20gXCIuL0RldmVsb3BlckVycm9yLmpzXCI7XG5cbi8qKlxuICogVGhlIGludGVyZmFjZSBmb3IgaW50ZXJwb2xhdGlvbiBhbGdvcml0aG1zLlxuICpcbiAqIEBpbnRlcmZhY2UgSW50ZXJwb2xhdGlvbkFsZ29yaXRobVxuICpcbiAqIEBzZWUgTGFncmFuZ2VQb2x5bm9taWFsQXBwcm94aW1hdGlvblxuICogQHNlZSBMaW5lYXJBcHByb3hpbWF0aW9uXG4gKiBAc2VlIEhlcm1pdGVQb2x5bm9taWFsQXBwcm94aW1hdGlvblxuICovXG52YXIgSW50ZXJwb2xhdGlvbkFsZ29yaXRobSA9IHt9O1xuXG4vKipcbiAqIEdldHMgdGhlIG5hbWUgb2YgdGhpcyBpbnRlcnBvbGF0aW9uIGFsZ29yaXRobS5cbiAqIEB0eXBlIHtTdHJpbmd9XG4gKi9cbkludGVycG9sYXRpb25BbGdvcml0aG0udHlwZSA9IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBHaXZlbiB0aGUgZGVzaXJlZCBkZWdyZWUsIHJldHVybnMgdGhlIG51bWJlciBvZiBkYXRhIHBvaW50cyByZXF1aXJlZCBmb3IgaW50ZXJwb2xhdGlvbi5cbiAqIEBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBkZWdyZWUgVGhlIGRlc2lyZWQgZGVncmVlIG9mIGludGVycG9sYXRpb24uXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgbnVtYmVyIG9mIHJlcXVpcmVkIGRhdGEgcG9pbnRzIG5lZWRlZCBmb3IgdGhlIGRlc2lyZWQgZGVncmVlIG9mIGludGVycG9sYXRpb24uXG4gKi9cbkludGVycG9sYXRpb25BbGdvcml0aG0uZ2V0UmVxdWlyZWREYXRhUG9pbnRzID1cbiAgRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3I7XG5cbi8qKlxuICogUGVyZm9ybXMgemVybyBvcmRlciBpbnRlcnBvbGF0aW9uLlxuICogQGZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IHggVGhlIGluZGVwZW5kZW50IHZhcmlhYmxlIGZvciB3aGljaCB0aGUgZGVwZW5kZW50IHZhcmlhYmxlcyB3aWxsIGJlIGludGVycG9sYXRlZC5cbiAqIEBwYXJhbSB7TnVtYmVyW119IHhUYWJsZSBUaGUgYXJyYXkgb2YgaW5kZXBlbmRlbnQgdmFyaWFibGVzIHRvIHVzZSB0byBpbnRlcnBvbGF0ZS4gIFRoZSB2YWx1ZXNcbiAqIGluIHRoaXMgYXJyYXkgbXVzdCBiZSBpbiBpbmNyZWFzaW5nIG9yZGVyIGFuZCB0aGUgc2FtZSB2YWx1ZSBtdXN0IG5vdCBvY2N1ciB0d2ljZSBpbiB0aGUgYXJyYXkuXG4gKiBAcGFyYW0ge051bWJlcltdfSB5VGFibGUgVGhlIGFycmF5IG9mIGRlcGVuZGVudCB2YXJpYWJsZXMgdG8gdXNlIHRvIGludGVycG9sYXRlLiAgRm9yIGEgc2V0IG9mIHRocmVlXG4gKiBkZXBlbmRlbnQgdmFsdWVzIChwLHEsdykgYXQgdGltZSAxIGFuZCB0aW1lIDIgdGhpcyBzaG91bGQgYmUgYXMgZm9sbG93czoge3AxLCBxMSwgdzEsIHAyLCBxMiwgdzJ9LlxuICogQHBhcmFtIHtOdW1iZXJ9IHlTdHJpZGUgVGhlIG51bWJlciBvZiBkZXBlbmRlbnQgdmFyaWFibGUgdmFsdWVzIGluIHlUYWJsZSBjb3JyZXNwb25kaW5nIHRvXG4gKiBlYWNoIGluZGVwZW5kZW50IHZhcmlhYmxlIHZhbHVlIGluIHhUYWJsZS5cbiAqIEBwYXJhbSB7TnVtYmVyW119IFtyZXN1bHRdIEFuIGV4aXN0aW5nIGFycmF5IGludG8gd2hpY2ggdG8gc3RvcmUgdGhlIHJlc3VsdC5cbiAqXG4gKiBAcmV0dXJucyB7TnVtYmVyW119IFRoZSBhcnJheSBvZiBpbnRlcnBvbGF0ZWQgdmFsdWVzLCBvciB0aGUgcmVzdWx0IHBhcmFtZXRlciBpZiBvbmUgd2FzIHByb3ZpZGVkLlxuICovXG5JbnRlcnBvbGF0aW9uQWxnb3JpdGhtLmludGVycG9sYXRlT3JkZXJaZXJvID1cbiAgRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3I7XG5cbi8qKlxuICogUGVyZm9ybXMgaGlnaGVyIG9yZGVyIGludGVycG9sYXRpb24uICBOb3QgYWxsIGludGVycG9sYXRvcnMgbmVlZCB0byBzdXBwb3J0IGhpZ2gtb3JkZXIgaW50ZXJwb2xhdGlvbixcbiAqIGlmIHRoaXMgZnVuY3Rpb24gcmVtYWlucyB1bmRlZmluZWQgb24gaW1wbGVtZW50aW5nIG9iamVjdHMsIGludGVycG9sYXRlT3JkZXJaZXJvIHdpbGwgYmUgdXNlZCBpbnN0ZWFkLlxuICogQGZ1bmN0aW9uXG4gKiBAcGFyYW0ge051bWJlcn0geCBUaGUgaW5kZXBlbmRlbnQgdmFyaWFibGUgZm9yIHdoaWNoIHRoZSBkZXBlbmRlbnQgdmFyaWFibGVzIHdpbGwgYmUgaW50ZXJwb2xhdGVkLlxuICogQHBhcmFtIHtOdW1iZXJbXX0geFRhYmxlIFRoZSBhcnJheSBvZiBpbmRlcGVuZGVudCB2YXJpYWJsZXMgdG8gdXNlIHRvIGludGVycG9sYXRlLiAgVGhlIHZhbHVlc1xuICogaW4gdGhpcyBhcnJheSBtdXN0IGJlIGluIGluY3JlYXNpbmcgb3JkZXIgYW5kIHRoZSBzYW1lIHZhbHVlIG11c3Qgbm90IG9jY3VyIHR3aWNlIGluIHRoZSBhcnJheS5cbiAqIEBwYXJhbSB7TnVtYmVyW119IHlUYWJsZSBUaGUgYXJyYXkgb2YgZGVwZW5kZW50IHZhcmlhYmxlcyB0byB1c2UgdG8gaW50ZXJwb2xhdGUuICBGb3IgYSBzZXQgb2YgdGhyZWVcbiAqIGRlcGVuZGVudCB2YWx1ZXMgKHAscSx3KSBhdCB0aW1lIDEgYW5kIHRpbWUgMiB0aGlzIHNob3VsZCBiZSBhcyBmb2xsb3dzOiB7cDEsIHExLCB3MSwgcDIsIHEyLCB3Mn0uXG4gKiBAcGFyYW0ge051bWJlcn0geVN0cmlkZSBUaGUgbnVtYmVyIG9mIGRlcGVuZGVudCB2YXJpYWJsZSB2YWx1ZXMgaW4geVRhYmxlIGNvcnJlc3BvbmRpbmcgdG9cbiAqIGVhY2ggaW5kZXBlbmRlbnQgdmFyaWFibGUgdmFsdWUgaW4geFRhYmxlLlxuICogQHBhcmFtIHtOdW1iZXJ9IGlucHV0T3JkZXIgVGhlIG51bWJlciBvZiBkZXJpdmF0aXZlcyBzdXBwbGllZCBmb3IgaW5wdXQuXG4gKiBAcGFyYW0ge051bWJlcn0gb3V0cHV0T3JkZXIgVGhlIG51bWJlciBvZiBkZXJpdmF0aXZlcyBkZXNpcmVkIGZvciBvdXRwdXQuXG4gKiBAcGFyYW0ge051bWJlcltdfSBbcmVzdWx0XSBBbiBleGlzdGluZyBhcnJheSBpbnRvIHdoaWNoIHRvIHN0b3JlIHRoZSByZXN1bHQuXG4gKiBAcmV0dXJucyB7TnVtYmVyW119IFRoZSBhcnJheSBvZiBpbnRlcnBvbGF0ZWQgdmFsdWVzLCBvciB0aGUgcmVzdWx0IHBhcmFtZXRlciBpZiBvbmUgd2FzIHByb3ZpZGVkLlxuICovXG5JbnRlcnBvbGF0aW9uQWxnb3JpdGhtLmludGVycG9sYXRlID0gRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3I7XG5leHBvcnQgZGVmYXVsdCBJbnRlcnBvbGF0aW9uQWxnb3JpdGhtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35739\n')},84935:function(__unused_webpack___webpack_module__,__webpack_exports__){eval("/**\n * This enumerated type is used in determining where, relative to the frustum, an\n * object is located. The object can either be fully contained within the frustum (INSIDE),\n * partially inside the frustum and partially outside (INTERSECTING), or somewhere entirely\n * outside of the frustum's 6 planes (OUTSIDE).\n *\n * @enum {Number}\n */\nvar Intersect = {\n  /**\n   * Represents that an object is not contained within the frustum.\n   *\n   * @type {Number}\n   * @constant\n   */\n  OUTSIDE: -1,\n\n  /**\n   * Represents that an object intersects one of the frustum's planes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  INTERSECTING: 0,\n\n  /**\n   * Represents that an object is fully within the frustum.\n   *\n   * @type {Number}\n   * @constant\n   */\n  INSIDE: 1,\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Object.freeze(Intersect));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQ5MzUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsd0JBQXdCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9JbnRlcnNlY3QuanM/ODA1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZW51bWVyYXRlZCB0eXBlIGlzIHVzZWQgaW4gZGV0ZXJtaW5pbmcgd2hlcmUsIHJlbGF0aXZlIHRvIHRoZSBmcnVzdHVtLCBhblxuICogb2JqZWN0IGlzIGxvY2F0ZWQuIFRoZSBvYmplY3QgY2FuIGVpdGhlciBiZSBmdWxseSBjb250YWluZWQgd2l0aGluIHRoZSBmcnVzdHVtIChJTlNJREUpLFxuICogcGFydGlhbGx5IGluc2lkZSB0aGUgZnJ1c3R1bSBhbmQgcGFydGlhbGx5IG91dHNpZGUgKElOVEVSU0VDVElORyksIG9yIHNvbWV3aGVyZSBlbnRpcmVseVxuICogb3V0c2lkZSBvZiB0aGUgZnJ1c3R1bSdzIDYgcGxhbmVzIChPVVRTSURFKS5cbiAqXG4gKiBAZW51bSB7TnVtYmVyfVxuICovXG52YXIgSW50ZXJzZWN0ID0ge1xuICAvKipcbiAgICogUmVwcmVzZW50cyB0aGF0IGFuIG9iamVjdCBpcyBub3QgY29udGFpbmVkIHdpdGhpbiB0aGUgZnJ1c3R1bS5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBPVVRTSURFOiAtMSxcblxuICAvKipcbiAgICogUmVwcmVzZW50cyB0aGF0IGFuIG9iamVjdCBpbnRlcnNlY3RzIG9uZSBvZiB0aGUgZnJ1c3R1bSdzIHBsYW5lcy5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBJTlRFUlNFQ1RJTkc6IDAsXG5cbiAgLyoqXG4gICAqIFJlcHJlc2VudHMgdGhhdCBhbiBvYmplY3QgaXMgZnVsbHkgd2l0aGluIHRoZSBmcnVzdHVtLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIElOU0lERTogMSxcbn07XG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKEludGVyc2VjdCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///84935\n")},67627:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51688);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Interval_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9058);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(68201);\n/* harmony import */ var _QuadraticRealPolynomial_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(46003);\n/* harmony import */ var _QuarticRealPolynomial_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(1479);\n/* harmony import */ var _Ray_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(68457);\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Functions for computing the intersection between geometries such as rays, planes, triangles, and ellipsoids.\n *\n * @namespace IntersectionTests\n */\nvar IntersectionTests = {};\n\n/**\n * Computes the intersection of a ray and a plane.\n *\n * @param {Ray} ray The ray.\n * @param {Plane} plane The plane.\n * @param {Cartesian3} [result] The object onto which to store the result.\n * @returns {Cartesian3} The intersection point or undefined if there is no intersections.\n */\nIntersectionTests.rayPlane = function (ray, plane, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ray)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("ray is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(plane)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("plane is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(result)) {\n    result = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  var origin = ray.origin;\n  var direction = ray.direction;\n  var normal = plane.normal;\n  var denominator = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(normal, direction);\n\n  if (Math.abs(denominator) < _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON15 */ .Z.EPSILON15) {\n    // Ray is parallel to plane.  The ray may be in the polygon\'s plane.\n    return undefined;\n  }\n\n  var t = (-plane.distance - _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(normal, origin)) / denominator;\n\n  if (t < 0) {\n    return undefined;\n  }\n\n  result = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(direction, t, result);\n  return _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(origin, result, result);\n};\n\nvar scratchEdge0 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchEdge1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchPVec = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchTVec = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchQVec = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n/**\n * Computes the intersection of a ray and a triangle as a parametric distance along the input ray. The result is negative when the triangle is behind the ray.\n *\n * Implements {@link https://cadxfem.org/inf/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf|\n * Fast Minimum Storage Ray/Triangle Intersection} by Tomas Moller and Ben Trumbore.\n *\n * @memberof IntersectionTests\n *\n * @param {Ray} ray The ray.\n * @param {Cartesian3} p0 The first vertex of the triangle.\n * @param {Cartesian3} p1 The second vertex of the triangle.\n * @param {Cartesian3} p2 The third vertex of the triangle.\n * @param {Boolean} [cullBackFaces=false] If <code>true</code>, will only compute an intersection with the front face of the triangle\n *                  and return undefined for intersections with the back face.\n * @returns {Number} The intersection as a parametric distance along the ray, or undefined if there is no intersection.\n */\nIntersectionTests.rayTriangleParametric = function (\n  ray,\n  p0,\n  p1,\n  p2,\n  cullBackFaces\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ray)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("ray is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p0)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p0 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p1)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p1 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p2)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p2 is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  cullBackFaces = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(cullBackFaces, false);\n\n  var origin = ray.origin;\n  var direction = ray.direction;\n\n  var edge0 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(p1, p0, scratchEdge0);\n  var edge1 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(p2, p0, scratchEdge1);\n\n  var p = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(direction, edge1, scratchPVec);\n  var det = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(edge0, p);\n\n  var tvec;\n  var q;\n\n  var u;\n  var v;\n  var t;\n\n  if (cullBackFaces) {\n    if (det < _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON6 */ .Z.EPSILON6) {\n      return undefined;\n    }\n\n    tvec = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(origin, p0, scratchTVec);\n    u = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(tvec, p);\n    if (u < 0.0 || u > det) {\n      return undefined;\n    }\n\n    q = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(tvec, edge0, scratchQVec);\n\n    v = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(direction, q);\n    if (v < 0.0 || u + v > det) {\n      return undefined;\n    }\n\n    t = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(edge1, q) / det;\n  } else {\n    if (Math.abs(det) < _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON6 */ .Z.EPSILON6) {\n      return undefined;\n    }\n    var invDet = 1.0 / det;\n\n    tvec = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(origin, p0, scratchTVec);\n    u = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(tvec, p) * invDet;\n    if (u < 0.0 || u > 1.0) {\n      return undefined;\n    }\n\n    q = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(tvec, edge0, scratchQVec);\n\n    v = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(direction, q) * invDet;\n    if (v < 0.0 || u + v > 1.0) {\n      return undefined;\n    }\n\n    t = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(edge1, q) * invDet;\n  }\n\n  return t;\n};\n\n/**\n * Computes the intersection of a ray and a triangle as a Cartesian3 coordinate.\n *\n * Implements {@link https://cadxfem.org/inf/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf|\n * Fast Minimum Storage Ray/Triangle Intersection} by Tomas Moller and Ben Trumbore.\n *\n * @memberof IntersectionTests\n *\n * @param {Ray} ray The ray.\n * @param {Cartesian3} p0 The first vertex of the triangle.\n * @param {Cartesian3} p1 The second vertex of the triangle.\n * @param {Cartesian3} p2 The third vertex of the triangle.\n * @param {Boolean} [cullBackFaces=false] If <code>true</code>, will only compute an intersection with the front face of the triangle\n *                  and return undefined for intersections with the back face.\n * @param {Cartesian3} [result] The <code>Cartesian3</code> onto which to store the result.\n * @returns {Cartesian3} The intersection point or undefined if there is no intersections.\n */\nIntersectionTests.rayTriangle = function (\n  ray,\n  p0,\n  p1,\n  p2,\n  cullBackFaces,\n  result\n) {\n  var t = IntersectionTests.rayTriangleParametric(\n    ray,\n    p0,\n    p1,\n    p2,\n    cullBackFaces\n  );\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(t) || t < 0.0) {\n    return undefined;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(result)) {\n    result = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(ray.direction, t, result);\n  return _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(ray.origin, result, result);\n};\n\nvar scratchLineSegmentTriangleRay = new _Ray_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\n\n/**\n * Computes the intersection of a line segment and a triangle.\n * @memberof IntersectionTests\n *\n * @param {Cartesian3} v0 The an end point of the line segment.\n * @param {Cartesian3} v1 The other end point of the line segment.\n * @param {Cartesian3} p0 The first vertex of the triangle.\n * @param {Cartesian3} p1 The second vertex of the triangle.\n * @param {Cartesian3} p2 The third vertex of the triangle.\n * @param {Boolean} [cullBackFaces=false] If <code>true</code>, will only compute an intersection with the front face of the triangle\n *                  and return undefined for intersections with the back face.\n * @param {Cartesian3} [result] The <code>Cartesian3</code> onto which to store the result.\n * @returns {Cartesian3} The intersection point or undefined if there is no intersections.\n */\nIntersectionTests.lineSegmentTriangle = function (\n  v0,\n  v1,\n  p0,\n  p1,\n  p2,\n  cullBackFaces,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(v0)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("v0 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(v1)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("v1 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p0)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p0 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p1)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p1 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p2)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p2 is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var ray = scratchLineSegmentTriangleRay;\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(v0, ray.origin);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(v1, v0, ray.direction);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(ray.direction, ray.direction);\n\n  var t = IntersectionTests.rayTriangleParametric(\n    ray,\n    p0,\n    p1,\n    p2,\n    cullBackFaces\n  );\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(t) || t < 0.0 || t > _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(v0, v1)) {\n    return undefined;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(result)) {\n    result = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(ray.direction, t, result);\n  return _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(ray.origin, result, result);\n};\n\nfunction solveQuadratic(a, b, c, result) {\n  var det = b * b - 4.0 * a * c;\n  if (det < 0.0) {\n    return undefined;\n  } else if (det > 0.0) {\n    var denom = 1.0 / (2.0 * a);\n    var disc = Math.sqrt(det);\n    var root0 = (-b + disc) * denom;\n    var root1 = (-b - disc) * denom;\n\n    if (root0 < root1) {\n      result.root0 = root0;\n      result.root1 = root1;\n    } else {\n      result.root0 = root1;\n      result.root1 = root0;\n    }\n\n    return result;\n  }\n\n  var root = -b / (2.0 * a);\n  if (root === 0.0) {\n    return undefined;\n  }\n\n  result.root0 = result.root1 = root;\n  return result;\n}\n\nvar raySphereRoots = {\n  root0: 0.0,\n  root1: 0.0,\n};\n\nfunction raySphere(ray, sphere, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(result)) {\n    result = new _Interval_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n  }\n\n  var origin = ray.origin;\n  var direction = ray.direction;\n\n  var center = sphere.center;\n  var radiusSquared = sphere.radius * sphere.radius;\n\n  var diff = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(origin, center, scratchPVec);\n\n  var a = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(direction, direction);\n  var b = 2.0 * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(direction, diff);\n  var c = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(diff) - radiusSquared;\n\n  var roots = solveQuadratic(a, b, c, raySphereRoots);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(roots)) {\n    return undefined;\n  }\n\n  result.start = roots.root0;\n  result.stop = roots.root1;\n  return result;\n}\n\n/**\n * Computes the intersection points of a ray with a sphere.\n * @memberof IntersectionTests\n *\n * @param {Ray} ray The ray.\n * @param {BoundingSphere} sphere The sphere.\n * @param {Interval} [result] The result onto which to store the result.\n * @returns {Interval} The interval containing scalar points along the ray or undefined if there are no intersections.\n */\nIntersectionTests.raySphere = function (ray, sphere, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ray)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("ray is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(sphere)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("sphere is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  result = raySphere(ray, sphere, result);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(result) || result.stop < 0.0) {\n    return undefined;\n  }\n\n  result.start = Math.max(result.start, 0.0);\n  return result;\n};\n\nvar scratchLineSegmentRay = new _Ray_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\n\n/**\n * Computes the intersection points of a line segment with a sphere.\n * @memberof IntersectionTests\n *\n * @param {Cartesian3} p0 An end point of the line segment.\n * @param {Cartesian3} p1 The other end point of the line segment.\n * @param {BoundingSphere} sphere The sphere.\n * @param {Interval} [result] The result onto which to store the result.\n * @returns {Interval} The interval containing scalar points along the ray or undefined if there are no intersections.\n */\nIntersectionTests.lineSegmentSphere = function (p0, p1, sphere, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p0)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p0 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p1)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p1 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(sphere)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("sphere is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var ray = scratchLineSegmentRay;\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(p0, ray.origin);\n  var direction = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(p1, p0, ray.direction);\n\n  var maxT = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(direction);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(direction, direction);\n\n  result = raySphere(ray, sphere, result);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(result) || result.stop < 0.0 || result.start > maxT) {\n    return undefined;\n  }\n\n  result.start = Math.max(result.start, 0.0);\n  result.stop = Math.min(result.stop, maxT);\n  return result;\n};\n\nvar scratchQ = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchW = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n/**\n * Computes the intersection points of a ray with an ellipsoid.\n *\n * @param {Ray} ray The ray.\n * @param {Ellipsoid} ellipsoid The ellipsoid.\n * @returns {Interval} The interval containing scalar points along the ray or undefined if there are no intersections.\n */\nIntersectionTests.rayEllipsoid = function (ray, ellipsoid) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ray)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("ray is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ellipsoid)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("ellipsoid is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var inverseRadii = ellipsoid.oneOverRadii;\n  var q = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyComponents */ .Z.multiplyComponents(inverseRadii, ray.origin, scratchQ);\n  var w = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyComponents */ .Z.multiplyComponents(inverseRadii, ray.direction, scratchW);\n\n  var q2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(q);\n  var qw = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(q, w);\n\n  var difference, w2, product, discriminant, temp;\n\n  if (q2 > 1.0) {\n    // Outside ellipsoid.\n    if (qw >= 0.0) {\n      // Looking outward or tangent (0 intersections).\n      return undefined;\n    }\n\n    // qw < 0.0.\n    var qw2 = qw * qw;\n    difference = q2 - 1.0; // Positively valued.\n    w2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(w);\n    product = w2 * difference;\n\n    if (qw2 < product) {\n      // Imaginary roots (0 intersections).\n      return undefined;\n    } else if (qw2 > product) {\n      // Distinct roots (2 intersections).\n      discriminant = qw * qw - product;\n      temp = -qw + Math.sqrt(discriminant); // Avoid cancellation.\n      var root0 = temp / w2;\n      var root1 = difference / temp;\n      if (root0 < root1) {\n        return new _Interval_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(root0, root1);\n      }\n\n      return {\n        start: root1,\n        stop: root0,\n      };\n    }\n    // qw2 == product.  Repeated roots (2 intersections).\n    var root = Math.sqrt(difference / w2);\n    return new _Interval_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(root, root);\n  } else if (q2 < 1.0) {\n    // Inside ellipsoid (2 intersections).\n    difference = q2 - 1.0; // Negatively valued.\n    w2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(w);\n    product = w2 * difference; // Negatively valued.\n\n    discriminant = qw * qw - product;\n    temp = -qw + Math.sqrt(discriminant); // Positively valued.\n    return new _Interval_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, temp / w2);\n  }\n  // q2 == 1.0. On ellipsoid.\n  if (qw < 0.0) {\n    // Looking inward.\n    w2 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(w);\n    return new _Interval_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, -qw / w2);\n  }\n\n  // qw >= 0.0.  Looking outward or tangent.\n  return undefined;\n};\n\nfunction addWithCancellationCheck(left, right, tolerance) {\n  var difference = left + right;\n  if (\n    _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].sign */ .Z.sign(left) !== _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].sign */ .Z.sign(right) &&\n    Math.abs(difference / Math.max(Math.abs(left), Math.abs(right))) < tolerance\n  ) {\n    return 0.0;\n  }\n\n  return difference;\n}\n\nfunction quadraticVectorExpression(A, b, c, x, w) {\n  var xSquared = x * x;\n  var wSquared = w * w;\n\n  var l2 = (A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN1ROW1 */ .Z.COLUMN1ROW1] - A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN2ROW2 */ .Z.COLUMN2ROW2]) * wSquared;\n  var l1 =\n    w *\n    (x *\n      addWithCancellationCheck(\n        A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN1ROW0 */ .Z.COLUMN1ROW0],\n        A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN0ROW1 */ .Z.COLUMN0ROW1],\n        _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON15 */ .Z.EPSILON15\n      ) +\n      b.y);\n  var l0 =\n    A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN0ROW0 */ .Z.COLUMN0ROW0] * xSquared +\n    A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN2ROW2 */ .Z.COLUMN2ROW2] * wSquared +\n    x * b.x +\n    c;\n\n  var r1 =\n    wSquared *\n    addWithCancellationCheck(\n      A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN2ROW1 */ .Z.COLUMN2ROW1],\n      A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN1ROW2 */ .Z.COLUMN1ROW2],\n      _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON15 */ .Z.EPSILON15\n    );\n  var r0 =\n    w *\n    (x *\n      addWithCancellationCheck(A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN2ROW0 */ .Z.COLUMN2ROW0], A[_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].COLUMN0ROW2 */ .Z.COLUMN0ROW2]) +\n      b.z);\n\n  var cosines;\n  var solutions = [];\n  if (r0 === 0.0 && r1 === 0.0) {\n    cosines = _QuadraticRealPolynomial_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].computeRealRoots */ .Z.computeRealRoots(l2, l1, l0);\n    if (cosines.length === 0) {\n      return solutions;\n    }\n\n    var cosine0 = cosines[0];\n    var sine0 = Math.sqrt(Math.max(1.0 - cosine0 * cosine0, 0.0));\n    solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine0, w * -sine0));\n    solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine0, w * sine0));\n\n    if (cosines.length === 2) {\n      var cosine1 = cosines[1];\n      var sine1 = Math.sqrt(Math.max(1.0 - cosine1 * cosine1, 0.0));\n      solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine1, w * -sine1));\n      solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine1, w * sine1));\n    }\n\n    return solutions;\n  }\n\n  var r0Squared = r0 * r0;\n  var r1Squared = r1 * r1;\n  var l2Squared = l2 * l2;\n  var r0r1 = r0 * r1;\n\n  var c4 = l2Squared + r1Squared;\n  var c3 = 2.0 * (l1 * l2 + r0r1);\n  var c2 = 2.0 * l0 * l2 + l1 * l1 - r1Squared + r0Squared;\n  var c1 = 2.0 * (l0 * l1 - r0r1);\n  var c0 = l0 * l0 - r0Squared;\n\n  if (c4 === 0.0 && c3 === 0.0 && c2 === 0.0 && c1 === 0.0) {\n    return solutions;\n  }\n\n  cosines = _QuarticRealPolynomial_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].computeRealRoots */ .Z.computeRealRoots(c4, c3, c2, c1, c0);\n  var length = cosines.length;\n  if (length === 0) {\n    return solutions;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var cosine = cosines[i];\n    var cosineSquared = cosine * cosine;\n    var sineSquared = Math.max(1.0 - cosineSquared, 0.0);\n    var sine = Math.sqrt(sineSquared);\n\n    //var left = l2 * cosineSquared + l1 * cosine + l0;\n    var left;\n    if (_Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].sign */ .Z.sign(l2) === _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].sign */ .Z.sign(l0)) {\n      left = addWithCancellationCheck(\n        l2 * cosineSquared + l0,\n        l1 * cosine,\n        _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON12 */ .Z.EPSILON12\n      );\n    } else if (_Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].sign */ .Z.sign(l0) === _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].sign */ .Z.sign(l1 * cosine)) {\n      left = addWithCancellationCheck(\n        l2 * cosineSquared,\n        l1 * cosine + l0,\n        _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON12 */ .Z.EPSILON12\n      );\n    } else {\n      left = addWithCancellationCheck(\n        l2 * cosineSquared + l1 * cosine,\n        l0,\n        _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON12 */ .Z.EPSILON12\n      );\n    }\n\n    var right = addWithCancellationCheck(r1 * cosine, r0, _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON15 */ .Z.EPSILON15);\n    var product = left * right;\n\n    if (product < 0.0) {\n      solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine, w * sine));\n    } else if (product > 0.0) {\n      solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine, w * -sine));\n    } else if (sine !== 0.0) {\n      solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine, w * -sine));\n      solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine, w * sine));\n      ++i;\n    } else {\n      solutions.push(new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(x, w * cosine, w * sine));\n    }\n  }\n\n  return solutions;\n}\n\nvar firstAxisScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar secondAxisScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar thirdAxisScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar referenceScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar bCart = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar bScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar btScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar diScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar dScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar cScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar tempMatrix = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar aScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar sScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar closestScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar surfPointScratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n/**\n * Provides the point along the ray which is nearest to the ellipsoid.\n *\n * @param {Ray} ray The ray.\n * @param {Ellipsoid} ellipsoid The ellipsoid.\n * @returns {Cartesian3} The nearest planetodetic point on the ray.\n */\nIntersectionTests.grazingAltitudeLocation = function (ray, ellipsoid) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ray)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("ray is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ellipsoid)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("ellipsoid is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var position = ray.origin;\n  var direction = ray.direction;\n\n  if (!_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(position, _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO)) {\n    var normal = ellipsoid.geodeticSurfaceNormal(position, firstAxisScratch);\n    if (_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(direction, normal) >= 0.0) {\n      // The location provided is the closest point in altitude\n      return position;\n    }\n  }\n\n  var intersects = (0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this.rayEllipsoid(ray, ellipsoid));\n\n  // Compute the scaled direction vector.\n  var f = ellipsoid.transformPositionToScaledSpace(direction, firstAxisScratch);\n\n  // Constructs a basis from the unit scaled direction vector. Construct its rotation and transpose.\n  var firstAxis = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(f, f);\n  var reference = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].mostOrthogonalAxis */ .Z.mostOrthogonalAxis(f, referenceScratch);\n  var secondAxis = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(reference, firstAxis, secondAxisScratch),\n    secondAxisScratch\n  );\n  var thirdAxis = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(firstAxis, secondAxis, thirdAxisScratch),\n    thirdAxisScratch\n  );\n  var B = bScratch;\n  B[0] = firstAxis.x;\n  B[1] = firstAxis.y;\n  B[2] = firstAxis.z;\n  B[3] = secondAxis.x;\n  B[4] = secondAxis.y;\n  B[5] = secondAxis.z;\n  B[6] = thirdAxis.x;\n  B[7] = thirdAxis.y;\n  B[8] = thirdAxis.z;\n\n  var B_T = _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].transpose */ .Z.transpose(B, btScratch);\n\n  // Get the scaling matrix and its inverse.\n  var D_I = _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].fromScale */ .Z.fromScale(ellipsoid.radii, diScratch);\n  var D = _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].fromScale */ .Z.fromScale(ellipsoid.oneOverRadii, dScratch);\n\n  var C = cScratch;\n  C[0] = 0.0;\n  C[1] = -direction.z;\n  C[2] = direction.y;\n  C[3] = direction.z;\n  C[4] = 0.0;\n  C[5] = -direction.x;\n  C[6] = -direction.y;\n  C[7] = direction.x;\n  C[8] = 0.0;\n\n  var temp = _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiply */ .Z.multiply(\n    _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiply */ .Z.multiply(B_T, D, tempMatrix),\n    C,\n    tempMatrix\n  );\n  var A = _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiply */ .Z.multiply(_Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiply */ .Z.multiply(temp, D_I, aScratch), B, aScratch);\n  var b = _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiplyByVector */ .Z.multiplyByVector(temp, position, bCart);\n\n  // Solve for the solutions to the expression in standard form:\n  var solutions = quadraticVectorExpression(\n    A,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(b, firstAxisScratch),\n    0.0,\n    0.0,\n    1.0\n  );\n\n  var s;\n  var altitude;\n  var length = solutions.length;\n  if (length > 0) {\n    var closest = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO, closestScratch);\n    var maximumValue = Number.NEGATIVE_INFINITY;\n\n    for (var i = 0; i < length; ++i) {\n      s = _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n        D_I,\n        _Matrix3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiplyByVector */ .Z.multiplyByVector(B, solutions[i], sScratch),\n        sScratch\n      );\n      var v = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(s, position, referenceScratch),\n        referenceScratch\n      );\n      var dotProduct = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(v, direction);\n\n      if (dotProduct > maximumValue) {\n        maximumValue = dotProduct;\n        closest = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(s, closest);\n      }\n    }\n\n    var surfacePoint = ellipsoid.cartesianToCartographic(\n      closest,\n      surfPointScratch\n    );\n    maximumValue = _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].clamp */ .Z.clamp(maximumValue, 0.0, 1.0);\n    altitude =\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(closest, position, referenceScratch)\n      ) * Math.sqrt(1.0 - maximumValue * maximumValue);\n    altitude = intersects ? -altitude : altitude;\n    surfacePoint.height = altitude;\n    return ellipsoid.cartographicToCartesian(surfacePoint, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z());\n  }\n\n  return undefined;\n};\n\nvar lineSegmentPlaneDifference = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n/**\n * Computes the intersection of a line segment and a plane.\n *\n * @param {Cartesian3} endPoint0 An end point of the line segment.\n * @param {Cartesian3} endPoint1 The other end point of the line segment.\n * @param {Plane} plane The plane.\n * @param {Cartesian3} [result] The object onto which to store the result.\n * @returns {Cartesian3} The intersection point or undefined if there is no intersection.\n *\n * @example\n * var origin = Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883);\n * var normal = ellipsoid.geodeticSurfaceNormal(origin);\n * var plane = Cesium.Plane.fromPointNormal(origin, normal);\n *\n * var p0 = new Cesium.Cartesian3(...);\n * var p1 = new Cesium.Cartesian3(...);\n *\n * // find the intersection of the line segment from p0 to p1 and the tangent plane at origin.\n * var intersection = Cesium.IntersectionTests.lineSegmentPlane(p0, p1, plane);\n */\nIntersectionTests.lineSegmentPlane = function (\n  endPoint0,\n  endPoint1,\n  plane,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(endPoint0)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("endPoint0 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(endPoint1)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("endPoint1 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(plane)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("plane is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(result)) {\n    result = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  var difference = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(\n    endPoint1,\n    endPoint0,\n    lineSegmentPlaneDifference\n  );\n  var normal = plane.normal;\n  var nDotDiff = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(normal, difference);\n\n  // check if the segment and plane are parallel\n  if (Math.abs(nDotDiff) < _Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EPSILON6 */ .Z.EPSILON6) {\n    return undefined;\n  }\n\n  var nDotP0 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(normal, endPoint0);\n  var t = -(plane.distance + nDotP0) / nDotDiff;\n\n  // intersection only if t is in [0, 1]\n  if (t < 0.0 || t > 1.0) {\n    return undefined;\n  }\n\n  // intersection is endPoint0 + t * (endPoint1 - endPoint0)\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(difference, t, result);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(endPoint0, result, result);\n  return result;\n};\n\n/**\n * Computes the intersection of a triangle and a plane\n *\n * @param {Cartesian3} p0 First point of the triangle\n * @param {Cartesian3} p1 Second point of the triangle\n * @param {Cartesian3} p2 Third point of the triangle\n * @param {Plane} plane Intersection plane\n * @returns {Object} An object with properties <code>positions</code> and <code>indices</code>, which are arrays that represent three triangles that do not cross the plane. (Undefined if no intersection exists)\n *\n * @example\n * var origin = Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883);\n * var normal = ellipsoid.geodeticSurfaceNormal(origin);\n * var plane = Cesium.Plane.fromPointNormal(origin, normal);\n *\n * var p0 = new Cesium.Cartesian3(...);\n * var p1 = new Cesium.Cartesian3(...);\n * var p2 = new Cesium.Cartesian3(...);\n *\n * // convert the triangle composed of points (p0, p1, p2) to three triangles that don\'t cross the plane\n * var triangles = Cesium.IntersectionTests.trianglePlaneIntersection(p0, p1, p2, plane);\n */\nIntersectionTests.trianglePlaneIntersection = function (p0, p1, p2, plane) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p0) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p1) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(p2) || !(0,_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(plane)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("p0, p1, p2, and plane are required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var planeNormal = plane.normal;\n  var planeD = plane.distance;\n  var p0Behind = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(planeNormal, p0) + planeD < 0.0;\n  var p1Behind = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(planeNormal, p1) + planeD < 0.0;\n  var p2Behind = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(planeNormal, p2) + planeD < 0.0;\n  // Given these dots products, the calls to lineSegmentPlaneIntersection\n  // always have defined results.\n\n  var numBehind = 0;\n  numBehind += p0Behind ? 1 : 0;\n  numBehind += p1Behind ? 1 : 0;\n  numBehind += p2Behind ? 1 : 0;\n\n  var u1, u2;\n  if (numBehind === 1 || numBehind === 2) {\n    u1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n    u2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  if (numBehind === 1) {\n    if (p0Behind) {\n      IntersectionTests.lineSegmentPlane(p0, p1, plane, u1);\n      IntersectionTests.lineSegmentPlane(p0, p2, plane, u2);\n\n      return {\n        positions: [p0, p1, p2, u1, u2],\n        indices: [\n          // Behind\n          0,\n          3,\n          4,\n\n          // In front\n          1,\n          2,\n          4,\n          1,\n          4,\n          3,\n        ],\n      };\n    } else if (p1Behind) {\n      IntersectionTests.lineSegmentPlane(p1, p2, plane, u1);\n      IntersectionTests.lineSegmentPlane(p1, p0, plane, u2);\n\n      return {\n        positions: [p0, p1, p2, u1, u2],\n        indices: [\n          // Behind\n          1,\n          3,\n          4,\n\n          // In front\n          2,\n          0,\n          4,\n          2,\n          4,\n          3,\n        ],\n      };\n    } else if (p2Behind) {\n      IntersectionTests.lineSegmentPlane(p2, p0, plane, u1);\n      IntersectionTests.lineSegmentPlane(p2, p1, plane, u2);\n\n      return {\n        positions: [p0, p1, p2, u1, u2],\n        indices: [\n          // Behind\n          2,\n          3,\n          4,\n\n          // In front\n          0,\n          1,\n          4,\n          0,\n          4,\n          3,\n        ],\n      };\n    }\n  } else if (numBehind === 2) {\n    if (!p0Behind) {\n      IntersectionTests.lineSegmentPlane(p1, p0, plane, u1);\n      IntersectionTests.lineSegmentPlane(p2, p0, plane, u2);\n\n      return {\n        positions: [p0, p1, p2, u1, u2],\n        indices: [\n          // Behind\n          1,\n          2,\n          4,\n          1,\n          4,\n          3,\n\n          // In front\n          0,\n          3,\n          4,\n        ],\n      };\n    } else if (!p1Behind) {\n      IntersectionTests.lineSegmentPlane(p2, p1, plane, u1);\n      IntersectionTests.lineSegmentPlane(p0, p1, plane, u2);\n\n      return {\n        positions: [p0, p1, p2, u1, u2],\n        indices: [\n          // Behind\n          2,\n          0,\n          4,\n          2,\n          4,\n          3,\n\n          // In front\n          1,\n          3,\n          4,\n        ],\n      };\n    } else if (!p2Behind) {\n      IntersectionTests.lineSegmentPlane(p0, p2, plane, u1);\n      IntersectionTests.lineSegmentPlane(p1, p2, plane, u2);\n\n      return {\n        positions: [p0, p1, p2, u1, u2],\n        indices: [\n          // Behind\n          0,\n          1,\n          4,\n          0,\n          4,\n          3,\n\n          // In front\n          2,\n          3,\n          4,\n        ],\n      };\n    }\n  }\n\n  // if numBehind is 3, the triangle is completely behind the plane;\n  // otherwise, it is completely in front (numBehind is 0).\n  return undefined;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (IntersectionTests);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///67627\n')},17980:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n\n\n\n\n\n\n/**\n * Contains functions for operating on 2D triangles.\n *\n * @namespace Intersections2D\n */\nvar Intersections2D = {};\n\n/**\n * Splits a 2D triangle at given axis-aligned threshold value and returns the resulting\n * polygon on a given side of the threshold.  The resulting polygon may have 0, 1, 2,\n * 3, or 4 vertices.\n *\n * @param {Number} threshold The threshold coordinate value at which to clip the triangle.\n * @param {Boolean} keepAbove true to keep the portion of the triangle above the threshold, or false\n *                            to keep the portion below.\n * @param {Number} u0 The coordinate of the first vertex in the triangle, in counter-clockwise order.\n * @param {Number} u1 The coordinate of the second vertex in the triangle, in counter-clockwise order.\n * @param {Number} u2 The coordinate of the third vertex in the triangle, in counter-clockwise order.\n * @param {Number[]} [result] The array into which to copy the result.  If this parameter is not supplied,\n *                            a new array is constructed and returned.\n * @returns {Number[]} The polygon that results after the clip, specified as a list of\n *                     vertices.  The vertices are specified in counter-clockwise order.\n *                     Each vertex is either an index from the existing list (identified as\n *                     a 0, 1, or 2) or -1 indicating a new vertex not in the original triangle.\n *                     For new vertices, the -1 is followed by three additional numbers: the\n *                     index of each of the two original vertices forming the line segment that\n *                     the new vertex lies on, and the fraction of the distance from the first\n *                     vertex to the second one.\n *\n * @example\n * var result = Cesium.Intersections2D.clipTriangleAtAxisAlignedThreshold(0.5, false, 0.2, 0.6, 0.4);\n * // result === [2, 0, -1, 1, 0, 0.25, -1, 1, 2, 0.5]\n */\nIntersections2D.clipTriangleAtAxisAlignedThreshold = function (\n  threshold,\n  keepAbove,\n  u0,\n  u1,\n  u2,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(threshold)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("threshold is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(keepAbove)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("keepAbove is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(u0)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("u0 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(u1)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("u1 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(u2)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("u2 is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    result = [];\n  } else {\n    result.length = 0;\n  }\n\n  var u0Behind;\n  var u1Behind;\n  var u2Behind;\n  if (keepAbove) {\n    u0Behind = u0 < threshold;\n    u1Behind = u1 < threshold;\n    u2Behind = u2 < threshold;\n  } else {\n    u0Behind = u0 > threshold;\n    u1Behind = u1 > threshold;\n    u2Behind = u2 > threshold;\n  }\n\n  var numBehind = u0Behind + u1Behind + u2Behind;\n\n  var u01Ratio;\n  var u02Ratio;\n  var u12Ratio;\n  var u10Ratio;\n  var u20Ratio;\n  var u21Ratio;\n\n  if (numBehind === 1) {\n    if (u0Behind) {\n      u01Ratio = (threshold - u0) / (u1 - u0);\n      u02Ratio = (threshold - u0) / (u2 - u0);\n\n      result.push(1);\n\n      result.push(2);\n\n      if (u02Ratio !== 1.0) {\n        result.push(-1);\n        result.push(0);\n        result.push(2);\n        result.push(u02Ratio);\n      }\n\n      if (u01Ratio !== 1.0) {\n        result.push(-1);\n        result.push(0);\n        result.push(1);\n        result.push(u01Ratio);\n      }\n    } else if (u1Behind) {\n      u12Ratio = (threshold - u1) / (u2 - u1);\n      u10Ratio = (threshold - u1) / (u0 - u1);\n\n      result.push(2);\n\n      result.push(0);\n\n      if (u10Ratio !== 1.0) {\n        result.push(-1);\n        result.push(1);\n        result.push(0);\n        result.push(u10Ratio);\n      }\n\n      if (u12Ratio !== 1.0) {\n        result.push(-1);\n        result.push(1);\n        result.push(2);\n        result.push(u12Ratio);\n      }\n    } else if (u2Behind) {\n      u20Ratio = (threshold - u2) / (u0 - u2);\n      u21Ratio = (threshold - u2) / (u1 - u2);\n\n      result.push(0);\n\n      result.push(1);\n\n      if (u21Ratio !== 1.0) {\n        result.push(-1);\n        result.push(2);\n        result.push(1);\n        result.push(u21Ratio);\n      }\n\n      if (u20Ratio !== 1.0) {\n        result.push(-1);\n        result.push(2);\n        result.push(0);\n        result.push(u20Ratio);\n      }\n    }\n  } else if (numBehind === 2) {\n    if (!u0Behind && u0 !== threshold) {\n      u10Ratio = (threshold - u1) / (u0 - u1);\n      u20Ratio = (threshold - u2) / (u0 - u2);\n\n      result.push(0);\n\n      result.push(-1);\n      result.push(1);\n      result.push(0);\n      result.push(u10Ratio);\n\n      result.push(-1);\n      result.push(2);\n      result.push(0);\n      result.push(u20Ratio);\n    } else if (!u1Behind && u1 !== threshold) {\n      u21Ratio = (threshold - u2) / (u1 - u2);\n      u01Ratio = (threshold - u0) / (u1 - u0);\n\n      result.push(1);\n\n      result.push(-1);\n      result.push(2);\n      result.push(1);\n      result.push(u21Ratio);\n\n      result.push(-1);\n      result.push(0);\n      result.push(1);\n      result.push(u01Ratio);\n    } else if (!u2Behind && u2 !== threshold) {\n      u02Ratio = (threshold - u0) / (u2 - u0);\n      u12Ratio = (threshold - u1) / (u2 - u1);\n\n      result.push(2);\n\n      result.push(-1);\n      result.push(0);\n      result.push(2);\n      result.push(u02Ratio);\n\n      result.push(-1);\n      result.push(1);\n      result.push(2);\n      result.push(u12Ratio);\n    }\n  } else if (numBehind !== 3) {\n    // Completely in front of threshold\n    result.push(0);\n    result.push(1);\n    result.push(2);\n  }\n  // else Completely behind threshold\n\n  return result;\n};\n\n/**\n * Compute the barycentric coordinates of a 2D position within a 2D triangle.\n *\n * @param {Number} x The x coordinate of the position for which to find the barycentric coordinates.\n * @param {Number} y The y coordinate of the position for which to find the barycentric coordinates.\n * @param {Number} x1 The x coordinate of the triangle\'s first vertex.\n * @param {Number} y1 The y coordinate of the triangle\'s first vertex.\n * @param {Number} x2 The x coordinate of the triangle\'s second vertex.\n * @param {Number} y2 The y coordinate of the triangle\'s second vertex.\n * @param {Number} x3 The x coordinate of the triangle\'s third vertex.\n * @param {Number} y3 The y coordinate of the triangle\'s third vertex.\n * @param {Cartesian3} [result] The instance into to which to copy the result.  If this parameter\n *                     is undefined, a new instance is created and returned.\n * @returns {Cartesian3} The barycentric coordinates of the position within the triangle.\n *\n * @example\n * var result = Cesium.Intersections2D.computeBarycentricCoordinates(0.0, 0.0, 0.0, 1.0, -1, -0.5, 1, -0.5);\n * // result === new Cesium.Cartesian3(1.0 / 3.0, 1.0 / 3.0, 1.0 / 3.0);\n */\nIntersections2D.computeBarycentricCoordinates = function (\n  x,\n  y,\n  x1,\n  y1,\n  x2,\n  y2,\n  x3,\n  y3,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(x)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("x is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(y)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("y is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(x1)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("x1 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(y1)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("y1 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(x2)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("x2 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(y2)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("y2 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(x3)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("x3 is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(y3)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("y3 is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var x1mx3 = x1 - x3;\n  var x3mx2 = x3 - x2;\n  var y2my3 = y2 - y3;\n  var y1my3 = y1 - y3;\n  var inverseDeterminant = 1.0 / (y2my3 * x1mx3 + x3mx2 * y1my3);\n  var ymy3 = y - y3;\n  var xmx3 = x - x3;\n  var l1 = (y2my3 * xmx3 + x3mx2 * ymy3) * inverseDeterminant;\n  var l2 = (-y1my3 * xmx3 + x1mx3 * ymy3) * inverseDeterminant;\n  var l3 = 1.0 - l1 - l2;\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    result.x = l1;\n    result.y = l2;\n    result.z = l3;\n    return result;\n  }\n  return new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(l1, l2, l3);\n};\n\n/**\n * Compute the intersection between 2 line segments\n *\n * @param {Number} x00 The x coordinate of the first line\'s first vertex.\n * @param {Number} y00 The y coordinate of the first line\'s first vertex.\n * @param {Number} x01 The x coordinate of the first line\'s second vertex.\n * @param {Number} y01 The y coordinate of the first line\'s second vertex.\n * @param {Number} x10 The x coordinate of the second line\'s first vertex.\n * @param {Number} y10 The y coordinate of the second line\'s first vertex.\n * @param {Number} x11 The x coordinate of the second line\'s second vertex.\n * @param {Number} y11 The y coordinate of the second line\'s second vertex.\n * @param {Cartesian2} [result] The instance into to which to copy the result. If this parameter\n *                     is undefined, a new instance is created and returned.\n * @returns {Cartesian2} The intersection point, undefined if there is no intersection point or lines are coincident.\n *\n * @example\n * var result = Cesium.Intersections2D.computeLineSegmentLineSegmentIntersection(0.0, 0.0, 0.0, 2.0, -1, 1, 1, 1);\n * // result === new Cesium.Cartesian2(0.0, 1.0);\n */\nIntersections2D.computeLineSegmentLineSegmentIntersection = function (\n  x00,\n  y00,\n  x01,\n  y01,\n  x10,\n  y10,\n  x11,\n  y11,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("x00", x00);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("y00", y00);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("x01", x01);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("y01", y01);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("x10", x10);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("y10", y10);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("x11", x11);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number */ .Z.typeOf.number("y11", y11);\n  //>>includeEnd(\'debug\');\n\n  var numerator1A = (x11 - x10) * (y00 - y10) - (y11 - y10) * (x00 - x10);\n  var numerator1B = (x01 - x00) * (y00 - y10) - (y01 - y00) * (x00 - x10);\n  var denominator1 = (y11 - y10) * (x01 - x00) - (x11 - x10) * (y01 - y00);\n\n  // If denominator = 0, then lines are parallel. If denominator = 0 and both numerators are 0, then coincident\n  if (denominator1 === 0) {\n    return;\n  }\n\n  var ua1 = numerator1A / denominator1;\n  var ub1 = numerator1B / denominator1;\n\n  if (ua1 >= 0 && ua1 <= 1 && ub1 >= 0 && ub1 <= 1) {\n    if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n      result = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n    }\n\n    result.x = x00 + ua1 * (x01 - x00);\n    result.y = y00 + ua1 * (y01 - y00);\n\n    return result;\n  }\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Intersections2D);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17980\n')},9058:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n\n\n/**\n * Represents the closed interval [start, stop].\n * @alias Interval\n * @constructor\n *\n * @param {Number} [start=0.0] The beginning of the interval.\n * @param {Number} [stop=0.0] The end of the interval.\n */\nfunction Interval(start, stop) {\n  /**\n   * The beginning of the interval.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.start = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(start, 0.0);\n  /**\n   * The end of the interval.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.stop = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(stop, 0.0);\n}\n/* harmony default export */ __webpack_exports__["Z"] = (Interval);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTA1OC5qcyIsIm1hcHBpbmdzIjoiO0FBQTZDOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsZUFBZSxxRUFBWTtBQUMzQjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxjQUFjLHFFQUFZO0FBQzFCO0FBQ0EseURBQWUsUUFBUSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvSW50ZXJ2YWwuanM/YzNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuL2RlZmF1bHRWYWx1ZS5qc1wiO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNsb3NlZCBpbnRlcnZhbCBbc3RhcnQsIHN0b3BdLlxuICogQGFsaWFzIEludGVydmFsXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gW3N0YXJ0PTAuMF0gVGhlIGJlZ2lubmluZyBvZiB0aGUgaW50ZXJ2YWwuXG4gKiBAcGFyYW0ge051bWJlcn0gW3N0b3A9MC4wXSBUaGUgZW5kIG9mIHRoZSBpbnRlcnZhbC5cbiAqL1xuZnVuY3Rpb24gSW50ZXJ2YWwoc3RhcnQsIHN0b3ApIHtcbiAgLyoqXG4gICAqIFRoZSBiZWdpbm5pbmcgb2YgdGhlIGludGVydmFsLlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVmYXVsdCAwLjBcbiAgICovXG4gIHRoaXMuc3RhcnQgPSBkZWZhdWx0VmFsdWUoc3RhcnQsIDAuMCk7XG4gIC8qKlxuICAgKiBUaGUgZW5kIG9mIHRoZSBpbnRlcnZhbC5cbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlZmF1bHQgMC4wXG4gICAqL1xuICB0aGlzLnN0b3AgPSBkZWZhdWx0VmFsdWUoc3RvcCwgMC4wKTtcbn1cbmV4cG9ydCBkZWZhdWx0IEludGVydmFsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9058\n')},10221:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Credit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52975);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82982);\n/* harmony import */ var _Resource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68985);\n\n\n\n\nvar defaultTokenCredit;\nvar defaultAccessToken =\n  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2NjU0MGI3NC1iZjM2LTQzNzctYjM3Yy0zMmU2NGQyNTBiM2MiLCJpZCI6MjU5LCJpYXQiOjE2MzA0OTk1NzV9.xNFmNo8X26_nTRRouMiQSbmrOYel9uLf-eXp_q6htb4";\n/**\n * Default settings for accessing the Cesium ion API.\n *\n * An ion access token is only required if you are using any ion related APIs.\n * A default access token is provided for evaluation purposes only.\n * Sign up for a free ion account and get your own access token at {@link https://cesium.com}\n *\n * @see IonResource\n * @see IonImageryProvider\n * @see IonGeocoderService\n * @see createWorldImagery\n * @see createWorldTerrain\n * @namespace Ion\n */\nvar Ion = {};\n\n/**\n * Gets or sets the default Cesium ion access token.\n *\n * @type {String}\n */\nIon.defaultAccessToken = defaultAccessToken;\n\n/**\n * Gets or sets the default Cesium ion server.\n *\n * @type {String|Resource}\n * @default https://api.cesium.com\n */\nIon.defaultServer = new _Resource_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({ url: "https://api.cesium.com/" });\n\nIon.getDefaultTokenCredit = function (providedKey) {\n  if (providedKey !== defaultAccessToken) {\n    return undefined;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(defaultTokenCredit)) {\n    var defaultTokenMessage =\n      \'<b> \\\n            This application is using Cesium\\\'s default ion access token. Please assign <i>Cesium.Ion.defaultAccessToken</i> \\\n            with an access token from your ion account before making any Cesium API calls. \\\n            You can sign up for a free ion account at <a href="https://cesium.com">https://cesium.com</a>.</b>\';\n\n    defaultTokenCredit = new _Credit_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(defaultTokenMessage, true);\n  }\n\n  return defaultTokenCredit;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Ion);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAyMjEuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQWlDO0FBQ0U7QUFDRTs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSx3QkFBd0IsNkRBQVEsR0FBRyxnQ0FBZ0M7O0FBRW5FO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sZ0VBQU87QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDZCQUE2QiwyREFBTTtBQUNuQzs7QUFFQTtBQUNBO0FBQ0EseURBQWUsR0FBRyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvSW9uLmpzP2FmMzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENyZWRpdCBmcm9tIFwiLi9DcmVkaXQuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcbmltcG9ydCBSZXNvdXJjZSBmcm9tIFwiLi9SZXNvdXJjZS5qc1wiO1xuXG52YXIgZGVmYXVsdFRva2VuQ3JlZGl0O1xudmFyIGRlZmF1bHRBY2Nlc3NUb2tlbiA9XG4gIFwiZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnFkR2tpT2lJMk5qVTBNR0kzTkMxaVpqTTJMVFF6TnpjdFlqTTNZeTB6TW1VMk5HUXlOVEJpTTJNaUxDSnBaQ0k2TWpVNUxDSnBZWFFpT2pFMk16QTBPVGsxTnpWOS54TkZtTm84WDI2X25UUlJvdU1pUVNibXJPWWVsOXVMZi1lWHBfcTZodGI0XCI7XG4vKipcbiAqIERlZmF1bHQgc2V0dGluZ3MgZm9yIGFjY2Vzc2luZyB0aGUgQ2VzaXVtIGlvbiBBUEkuXG4gKlxuICogQW4gaW9uIGFjY2VzcyB0b2tlbiBpcyBvbmx5IHJlcXVpcmVkIGlmIHlvdSBhcmUgdXNpbmcgYW55IGlvbiByZWxhdGVkIEFQSXMuXG4gKiBBIGRlZmF1bHQgYWNjZXNzIHRva2VuIGlzIHByb3ZpZGVkIGZvciBldmFsdWF0aW9uIHB1cnBvc2VzIG9ubHkuXG4gKiBTaWduIHVwIGZvciBhIGZyZWUgaW9uIGFjY291bnQgYW5kIGdldCB5b3VyIG93biBhY2Nlc3MgdG9rZW4gYXQge0BsaW5rIGh0dHBzOi8vY2VzaXVtLmNvbX1cbiAqXG4gKiBAc2VlIElvblJlc291cmNlXG4gKiBAc2VlIElvbkltYWdlcnlQcm92aWRlclxuICogQHNlZSBJb25HZW9jb2RlclNlcnZpY2VcbiAqIEBzZWUgY3JlYXRlV29ybGRJbWFnZXJ5XG4gKiBAc2VlIGNyZWF0ZVdvcmxkVGVycmFpblxuICogQG5hbWVzcGFjZSBJb25cbiAqL1xudmFyIElvbiA9IHt9O1xuXG4vKipcbiAqIEdldHMgb3Igc2V0cyB0aGUgZGVmYXVsdCBDZXNpdW0gaW9uIGFjY2VzcyB0b2tlbi5cbiAqXG4gKiBAdHlwZSB7U3RyaW5nfVxuICovXG5Jb24uZGVmYXVsdEFjY2Vzc1Rva2VuID0gZGVmYXVsdEFjY2Vzc1Rva2VuO1xuXG4vKipcbiAqIEdldHMgb3Igc2V0cyB0aGUgZGVmYXVsdCBDZXNpdW0gaW9uIHNlcnZlci5cbiAqXG4gKiBAdHlwZSB7U3RyaW5nfFJlc291cmNlfVxuICogQGRlZmF1bHQgaHR0cHM6Ly9hcGkuY2VzaXVtLmNvbVxuICovXG5Jb24uZGVmYXVsdFNlcnZlciA9IG5ldyBSZXNvdXJjZSh7IHVybDogXCJodHRwczovL2FwaS5jZXNpdW0uY29tL1wiIH0pO1xuXG5Jb24uZ2V0RGVmYXVsdFRva2VuQ3JlZGl0ID0gZnVuY3Rpb24gKHByb3ZpZGVkS2V5KSB7XG4gIGlmIChwcm92aWRlZEtleSAhPT0gZGVmYXVsdEFjY2Vzc1Rva2VuKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICghZGVmaW5lZChkZWZhdWx0VG9rZW5DcmVkaXQpKSB7XG4gICAgdmFyIGRlZmF1bHRUb2tlbk1lc3NhZ2UgPVxuICAgICAgJzxiPiBcXFxuICAgICAgICAgICAgVGhpcyBhcHBsaWNhdGlvbiBpcyB1c2luZyBDZXNpdW1cXCdzIGRlZmF1bHQgaW9uIGFjY2VzcyB0b2tlbi4gUGxlYXNlIGFzc2lnbiA8aT5DZXNpdW0uSW9uLmRlZmF1bHRBY2Nlc3NUb2tlbjwvaT4gXFxcbiAgICAgICAgICAgIHdpdGggYW4gYWNjZXNzIHRva2VuIGZyb20geW91ciBpb24gYWNjb3VudCBiZWZvcmUgbWFraW5nIGFueSBDZXNpdW0gQVBJIGNhbGxzLiBcXFxuICAgICAgICAgICAgWW91IGNhbiBzaWduIHVwIGZvciBhIGZyZWUgaW9uIGFjY291bnQgYXQgPGEgaHJlZj1cImh0dHBzOi8vY2VzaXVtLmNvbVwiPmh0dHBzOi8vY2VzaXVtLmNvbTwvYT4uPC9iPic7XG5cbiAgICBkZWZhdWx0VG9rZW5DcmVkaXQgPSBuZXcgQ3JlZGl0KGRlZmF1bHRUb2tlbk1lc3NhZ2UsIHRydWUpO1xuICB9XG5cbiAgcmV0dXJuIGRlZmF1bHRUb2tlbkNyZWRpdDtcbn07XG5leHBvcnQgZGVmYXVsdCBJb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10221\n')},98338:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Credit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52975);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _Ion_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10221);\n/* harmony import */ var _PeliasGeocoderService_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(42978);\n/* harmony import */ var _Resource_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(68985);\n\n\n\n\n\n\n\n\n/**\n * Provides geocoding through Cesium ion.\n * @alias IonGeocoderService\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Scene} options.scene The scene\n * @param {String} [options.accessToken=Ion.defaultAccessToken] The access token to use.\n * @param {String|Resource} [options.server=Ion.defaultServer] The resource to the Cesium ion API server.\n *\n * @see Ion\n */\nfunction IonGeocoderService(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.scene", options.scene);\n  //>>includeEnd(\'debug\');\n\n  var accessToken = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.accessToken, _Ion_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defaultAccessToken */ .Z.defaultAccessToken);\n  var server = _Resource_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].createIfNeeded */ .Z.createIfNeeded(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.server, _Ion_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defaultServer */ .Z.defaultServer)\n  );\n  server.appendForwardSlash();\n\n  var defaultTokenCredit = _Ion_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getDefaultTokenCredit */ .Z.getDefaultTokenCredit(accessToken);\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(defaultTokenCredit)) {\n    options.scene.frameState.creditDisplay.addDefaultCredit(\n      _Credit_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(defaultTokenCredit)\n    );\n  }\n\n  var searchEndpoint = server.getDerivedResource({\n    url: "v1/geocode",\n  });\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(accessToken)) {\n    searchEndpoint.appendQueryParameters({ access_token: accessToken });\n  }\n\n  this._accessToken = accessToken;\n  this._server = server;\n  this._pelias = new _PeliasGeocoderService_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(searchEndpoint);\n}\n\n/**\n * @function\n *\n * @param {String} query The query to be sent to the geocoder service\n * @param {GeocodeType} [type=GeocodeType.SEARCH] The type of geocode to perform.\n * @returns {Promise<GeocoderService.Result[]>}\n */\nIonGeocoderService.prototype.geocode = function (query, geocodeType) {\n  return this._pelias.geocode(query, geocodeType);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (IonGeocoderService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTgzMzguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUNFO0FBQ1k7QUFDVjtBQUNSO0FBQ29DO0FBQzFCOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxpQkFBaUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFFQUFZLFVBQVUsMkZBQXlCOztBQUUzRDtBQUNBLEVBQUUsc0ZBQW1CO0FBQ3JCOztBQUVBLG9CQUFvQixxRUFBWSxzQkFBc0IsOEZBQXNCO0FBQzVFLGVBQWUsMkZBQXVCO0FBQ3RDLElBQUkscUVBQVksaUJBQWlCLG9GQUFpQjtBQUNsRDtBQUNBOztBQUVBLDJCQUEyQixvR0FBeUI7QUFDcEQsTUFBTSxnRUFBTztBQUNiO0FBQ0EsTUFBTSx1RUFBWTtBQUNsQjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVILE1BQU0sZ0VBQU87QUFDYiwyQ0FBMkMsMkJBQTJCO0FBQ3RFOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUIsMEVBQXFCO0FBQzFDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLGFBQWE7QUFDeEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsa0JBQWtCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9Jb25HZW9jb2RlclNlcnZpY2UuanM/OGIxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hlY2sgZnJvbSBcIi4vQ2hlY2suanNcIjtcbmltcG9ydCBDcmVkaXQgZnJvbSBcIi4vQ3JlZGl0LmpzXCI7XG5pbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4vZGVmaW5lZC5qc1wiO1xuaW1wb3J0IElvbiBmcm9tIFwiLi9Jb24uanNcIjtcbmltcG9ydCBQZWxpYXNHZW9jb2RlclNlcnZpY2UgZnJvbSBcIi4vUGVsaWFzR2VvY29kZXJTZXJ2aWNlLmpzXCI7XG5pbXBvcnQgUmVzb3VyY2UgZnJvbSBcIi4vUmVzb3VyY2UuanNcIjtcblxuLyoqXG4gKiBQcm92aWRlcyBnZW9jb2RpbmcgdGhyb3VnaCBDZXNpdW0gaW9uLlxuICogQGFsaWFzIElvbkdlb2NvZGVyU2VydmljZVxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgT2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICogQHBhcmFtIHtTY2VuZX0gb3B0aW9ucy5zY2VuZSBUaGUgc2NlbmVcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hY2Nlc3NUb2tlbj1Jb24uZGVmYXVsdEFjY2Vzc1Rva2VuXSBUaGUgYWNjZXNzIHRva2VuIHRvIHVzZS5cbiAqIEBwYXJhbSB7U3RyaW5nfFJlc291cmNlfSBbb3B0aW9ucy5zZXJ2ZXI9SW9uLmRlZmF1bHRTZXJ2ZXJdIFRoZSByZXNvdXJjZSB0byB0aGUgQ2VzaXVtIGlvbiBBUEkgc2VydmVyLlxuICpcbiAqIEBzZWUgSW9uXG4gKi9cbmZ1bmN0aW9uIElvbkdlb2NvZGVyU2VydmljZShvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucywgZGVmYXVsdFZhbHVlLkVNUFRZX09CSkVDVCk7XG5cbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcIm9wdGlvbnMuc2NlbmVcIiwgb3B0aW9ucy5zY2VuZSk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBhY2Nlc3NUb2tlbiA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLmFjY2Vzc1Rva2VuLCBJb24uZGVmYXVsdEFjY2Vzc1Rva2VuKTtcbiAgdmFyIHNlcnZlciA9IFJlc291cmNlLmNyZWF0ZUlmTmVlZGVkKFxuICAgIGRlZmF1bHRWYWx1ZShvcHRpb25zLnNlcnZlciwgSW9uLmRlZmF1bHRTZXJ2ZXIpXG4gICk7XG4gIHNlcnZlci5hcHBlbmRGb3J3YXJkU2xhc2goKTtcblxuICB2YXIgZGVmYXVsdFRva2VuQ3JlZGl0ID0gSW9uLmdldERlZmF1bHRUb2tlbkNyZWRpdChhY2Nlc3NUb2tlbik7XG4gIGlmIChkZWZpbmVkKGRlZmF1bHRUb2tlbkNyZWRpdCkpIHtcbiAgICBvcHRpb25zLnNjZW5lLmZyYW1lU3RhdGUuY3JlZGl0RGlzcGxheS5hZGREZWZhdWx0Q3JlZGl0KFxuICAgICAgQ3JlZGl0LmNsb25lKGRlZmF1bHRUb2tlbkNyZWRpdClcbiAgICApO1xuICB9XG5cbiAgdmFyIHNlYXJjaEVuZHBvaW50ID0gc2VydmVyLmdldERlcml2ZWRSZXNvdXJjZSh7XG4gICAgdXJsOiBcInYxL2dlb2NvZGVcIixcbiAgfSk7XG5cbiAgaWYgKGRlZmluZWQoYWNjZXNzVG9rZW4pKSB7XG4gICAgc2VhcmNoRW5kcG9pbnQuYXBwZW5kUXVlcnlQYXJhbWV0ZXJzKHsgYWNjZXNzX3Rva2VuOiBhY2Nlc3NUb2tlbiB9KTtcbiAgfVxuXG4gIHRoaXMuX2FjY2Vzc1Rva2VuID0gYWNjZXNzVG9rZW47XG4gIHRoaXMuX3NlcnZlciA9IHNlcnZlcjtcbiAgdGhpcy5fcGVsaWFzID0gbmV3IFBlbGlhc0dlb2NvZGVyU2VydmljZShzZWFyY2hFbmRwb2ludCk7XG59XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHF1ZXJ5IFRoZSBxdWVyeSB0byBiZSBzZW50IHRvIHRoZSBnZW9jb2RlciBzZXJ2aWNlXG4gKiBAcGFyYW0ge0dlb2NvZGVUeXBlfSBbdHlwZT1HZW9jb2RlVHlwZS5TRUFSQ0hdIFRoZSB0eXBlIG9mIGdlb2NvZGUgdG8gcGVyZm9ybS5cbiAqIEByZXR1cm5zIHtQcm9taXNlPEdlb2NvZGVyU2VydmljZS5SZXN1bHRbXT59XG4gKi9cbklvbkdlb2NvZGVyU2VydmljZS5wcm90b3R5cGUuZ2VvY29kZSA9IGZ1bmN0aW9uIChxdWVyeSwgZ2VvY29kZVR5cGUpIHtcbiAgcmV0dXJuIHRoaXMuX3BlbGlhcy5nZW9jb2RlKHF1ZXJ5LCBnZW9jb2RlVHlwZSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgSW9uR2VvY29kZXJTZXJ2aWNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///98338\n')},48604:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ThirdParty_Uri_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(93922);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13222);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _Credit_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52975);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _Ion_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10221);\n/* harmony import */ var _Resource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(68985);\n/* harmony import */ var _RuntimeError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9407);\n\n\n\n\n\n\n\n\n\n\n/**\n * A {@link Resource} instance that encapsulates Cesium ion asset access.\n * This object is normally not instantiated directly, use {@link IonResource.fromAssetId}.\n *\n * @alias IonResource\n * @constructor\n * @augments Resource\n *\n * @param {Object} endpoint The result of the Cesium ion asset endpoint service.\n * @param {Resource} endpointResource The resource used to retreive the endpoint.\n *\n * @see Ion\n * @see IonImageryProvider\n * @see createWorldTerrain\n * @see https://cesium.com\n */\nfunction IonResource(endpoint, endpointResource) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("endpoint", endpoint);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("endpointResource", endpointResource);\n  //>>includeEnd(\'debug\');\n\n  var options;\n  var externalType = endpoint.externalType;\n  var isExternal = (0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(externalType);\n\n  if (!isExternal) {\n    options = {\n      url: endpoint.url,\n      retryAttempts: 1,\n      retryCallback: retryCallback,\n    };\n  } else if (\n    externalType === "3DTILES" ||\n    externalType === "STK_TERRAIN_SERVER"\n  ) {\n    // 3D Tiles and STK Terrain Server external assets can still be represented as an IonResource\n    options = { url: endpoint.options.url };\n  } else {\n    //External imagery assets have additional configuration that can\'t be represented as a Resource\n    throw new _RuntimeError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(\n      "Ion.createResource does not support external imagery assets; use IonImageryProvider instead."\n    );\n  }\n\n  _Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].call */ .Z.call(this, options);\n\n  // The asset endpoint data returned from ion.\n  this._ionEndpoint = endpoint;\n  this._ionEndpointDomain = isExternal\n    ? undefined\n    : new _ThirdParty_Uri_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(endpoint.url).authority();\n\n  // The endpoint resource to fetch when a new token is needed\n  this._ionEndpointResource = endpointResource;\n\n  // The primary IonResource from which an instance is derived\n  this._ionRoot = undefined;\n\n  // Shared promise for endpooint requests amd credits (only ever set on the root request)\n  this._pendingPromise = undefined;\n  this._credits = undefined;\n  this._isExternal = isExternal;\n}\n\nif ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(Object.create)) {\n  IonResource.prototype = Object.create(_Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype */ .Z.prototype);\n  IonResource.prototype.constructor = IonResource;\n}\n\n/**\n * Asynchronously creates an instance.\n *\n * @param {Number} assetId The Cesium ion asset id.\n * @param {Object} [options] An object with the following properties:\n * @param {String} [options.accessToken=Ion.defaultAccessToken] The access token to use.\n * @param {String|Resource} [options.server=Ion.defaultServer] The resource to the Cesium ion API server.\n * @returns {Promise.<IonResource>} A Promise to am instance representing the Cesium ion Asset.\n *\n * @example\n * //Load a Cesium3DTileset with asset ID of 124624234\n * viewer.scene.primitives.add(new Cesium.Cesium3DTileset({ url: Cesium.IonResource.fromAssetId(124624234) }));\n *\n * @example\n * //Load a CZML file with asset ID of 10890\n * Cesium.IonResource.fromAssetId(10890)\n *   .then(function (resource) {\n *     viewer.dataSources.add(Cesium.CzmlDataSource.load(resource));\n *   });\n */\nIonResource.fromAssetId = function (assetId, options) {\n  var endpointResource = IonResource._createEndpointResource(assetId, options);\n\n  return endpointResource.fetchJson().then(function (endpoint) {\n    return new IonResource(endpoint, endpointResource);\n  });\n};\n\nObject.defineProperties(IonResource.prototype, {\n  /**\n   * Gets the credits required for attribution of the asset.\n   *\n   * @memberof IonResource.prototype\n   * @type {Credit[]}\n   * @readonly\n   */\n  credits: {\n    get: function () {\n      // Only we\'re not the root, return its credits;\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(this._ionRoot)) {\n        return this._ionRoot.credits;\n      }\n\n      // We are the root\n      if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(this._credits)) {\n        return this._credits;\n      }\n\n      this._credits = IonResource.getCreditsFromEndpoint(\n        this._ionEndpoint,\n        this._ionEndpointResource\n      );\n\n      return this._credits;\n    },\n  },\n});\n\n/** @private */\nIonResource.getCreditsFromEndpoint = function (endpoint, endpointResource) {\n  var credits = endpoint.attributions.map(_Credit_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getIonCredit */ .Z.getIonCredit);\n  var defaultTokenCredit = _Ion_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getDefaultTokenCredit */ .Z.getDefaultTokenCredit(\n    endpointResource.queryParameters.access_token\n  );\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(defaultTokenCredit)) {\n    credits.push(_Credit_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(defaultTokenCredit));\n  }\n  return credits;\n};\n\n/** @inheritdoc */\nIonResource.prototype.clone = function (result) {\n  // We always want to use the root\'s information because it\'s the most up-to-date\n  var ionRoot = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this._ionRoot, this);\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    result = new IonResource(\n      ionRoot._ionEndpoint,\n      ionRoot._ionEndpointResource\n    );\n  }\n\n  result = _Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype.clone.call */ .Z.prototype.clone.call(this, result);\n  result._ionRoot = ionRoot;\n  result._isExternal = this._isExternal;\n\n  return result;\n};\n\nIonResource.prototype.fetchImage = function (options) {\n  if (!this._isExternal) {\n    var userOptions = options;\n    options = {\n      preferBlob: true,\n    };\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(userOptions)) {\n      options.flipY = userOptions.flipY;\n      options.preferImageBitmap = userOptions.preferImageBitmap;\n    }\n  }\n\n  return _Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype.fetchImage.call */ .Z.prototype.fetchImage.call(this, options);\n};\n\nIonResource.prototype._makeRequest = function (options) {\n  // Don\'t send ion access token to non-ion servers.\n  if (\n    this._isExternal ||\n    new _ThirdParty_Uri_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(this.url).authority() !== this._ionEndpointDomain\n  ) {\n    return _Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype._makeRequest.call */ .Z.prototype._makeRequest.call(this, options);\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.headers)) {\n    options.headers = {};\n  }\n  options.headers.Authorization = "Bearer " + this._ionEndpoint.accessToken;\n\n  return _Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype._makeRequest.call */ .Z.prototype._makeRequest.call(this, options);\n};\n\n/**\n * @private\n */\nIonResource._createEndpointResource = function (assetId, options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("assetId", assetId);\n  //>>includeEnd(\'debug\');\n\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var server = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.server, _Ion_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defaultServer */ .Z.defaultServer);\n  var accessToken = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.accessToken, _Ion_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defaultAccessToken */ .Z.defaultAccessToken);\n  server = _Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].createIfNeeded */ .Z.createIfNeeded(server);\n\n  var resourceOptions = {\n    url: "v1/assets/" + assetId + "/endpoint",\n  };\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(accessToken)) {\n    resourceOptions.queryParameters = { access_token: accessToken };\n  }\n\n  return server.getDerivedResource(resourceOptions);\n};\n\nfunction retryCallback(that, error) {\n  var ionRoot = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(that._ionRoot, that);\n  var endpointResource = ionRoot._ionEndpointResource;\n\n  // Image is not available in worker threads, so this avoids\n  // a ReferenceError\n  var imageDefined = typeof Image !== "undefined";\n\n  // We only want to retry in the case of invalid credentials (401) or image\n  // requests(since Image failures can not provide a status code)\n  if (\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(error) ||\n    (error.statusCode !== 401 &&\n      !(imageDefined && error.target instanceof Image))\n  ) {\n    return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].resolve */ .Z.resolve(false);\n  }\n\n  // We use a shared pending promise for all derived assets, since they share\n  // a common access_token.  If we\'re already requesting a new token for this\n  // asset, we wait on the same promise.\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(ionRoot._pendingPromise)) {\n    ionRoot._pendingPromise = endpointResource\n      .fetchJson()\n      .then(function (newEndpoint) {\n        //Set the token for root resource so new derived resources automatically pick it up\n        ionRoot._ionEndpoint = newEndpoint;\n        return newEndpoint;\n      })\n      .always(function (newEndpoint) {\n        // Pass or fail, we\'re done with this promise, the next failure should use a new one.\n        ionRoot._pendingPromise = undefined;\n        return newEndpoint;\n      });\n  }\n\n  return ionRoot._pendingPromise.then(function (newEndpoint) {\n    // Set the new token and endpoint for this resource\n    that._ionEndpoint = newEndpoint;\n    return true;\n  });\n}\n/* harmony default export */ __webpack_exports__["Z"] = (IonResource);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDg2MDQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVDO0FBQ0U7QUFDVjtBQUNFO0FBQ1k7QUFDVjtBQUNSO0FBQ1U7QUFDUTs7QUFFN0M7QUFDQSxNQUFNLGdCQUFnQjtBQUN0QiwyREFBMkQsOEJBQThCO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDBFQUFhO0FBQ2YsRUFBRSwwRUFBYTtBQUNmOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsZ0VBQU87O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixJQUFJO0FBQ0o7QUFDQSxjQUFjLGlFQUFZO0FBQzFCLG9FQUFvRTtBQUNwRTtBQUNBOztBQUVBLEVBQUUsdUVBQWE7O0FBRWY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLG1FQUFHOztBQUViO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksZ0VBQU87QUFDWCx3Q0FBd0MsaUZBQWtCO0FBQzFEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxpQkFBaUI7QUFDNUIsYUFBYSx1QkFBdUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsNERBQTRELGdEQUFnRDtBQUM1RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxnRUFBTztBQUNqQjtBQUNBOztBQUVBO0FBQ0EsVUFBVSxnRUFBTztBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQSwwQ0FBMEMscUZBQW1CO0FBQzdELDJCQUEyQixvR0FBeUI7QUFDcEQ7QUFDQTtBQUNBLE1BQU0sZ0VBQU87QUFDYixpQkFBaUIsdUVBQVk7QUFDN0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxRUFBWTs7QUFFNUIsT0FBTyxnRUFBTztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsV0FBVyx1R0FBNkI7QUFDeEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0VBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLGlIQUFrQztBQUMzQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsbUVBQUc7QUFDWDtBQUNBLFdBQVcscUhBQW9DO0FBQy9DOztBQUVBLE9BQU8sZ0VBQU87QUFDZDtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxxSEFBb0M7QUFDN0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMEVBQWE7QUFDZjs7QUFFQSxZQUFZLHFFQUFZLFVBQVUsMkZBQXlCO0FBQzNELGVBQWUscUVBQVksaUJBQWlCLG9GQUFpQjtBQUM3RCxvQkFBb0IscUVBQVksc0JBQXNCLDhGQUFzQjtBQUM1RSxXQUFXLDJGQUF1Qjs7QUFFbEM7QUFDQTtBQUNBOztBQUVBLE1BQU0sZ0VBQU87QUFDYix3Q0FBd0M7QUFDeEM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixxRUFBWTtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSyxnRUFBTztBQUNaO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0ZBQVk7QUFDdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHlEQUFlLFdBQVcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL0lvblJlc291cmNlLmpzP2Q1NWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVyaSBmcm9tIFwiLi4vVGhpcmRQYXJ0eS9VcmkuanNcIjtcbmltcG9ydCB3aGVuIGZyb20gXCIuLi9UaGlyZFBhcnR5L3doZW4uanNcIjtcbmltcG9ydCBDaGVjayBmcm9tIFwiLi9DaGVjay5qc1wiO1xuaW1wb3J0IENyZWRpdCBmcm9tIFwiLi9DcmVkaXQuanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4vZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgSW9uIGZyb20gXCIuL0lvbi5qc1wiO1xuaW1wb3J0IFJlc291cmNlIGZyb20gXCIuL1Jlc291cmNlLmpzXCI7XG5pbXBvcnQgUnVudGltZUVycm9yIGZyb20gXCIuL1J1bnRpbWVFcnJvci5qc1wiO1xuXG4vKipcbiAqIEEge0BsaW5rIFJlc291cmNlfSBpbnN0YW5jZSB0aGF0IGVuY2Fwc3VsYXRlcyBDZXNpdW0gaW9uIGFzc2V0IGFjY2Vzcy5cbiAqIFRoaXMgb2JqZWN0IGlzIG5vcm1hbGx5IG5vdCBpbnN0YW50aWF0ZWQgZGlyZWN0bHksIHVzZSB7QGxpbmsgSW9uUmVzb3VyY2UuZnJvbUFzc2V0SWR9LlxuICpcbiAqIEBhbGlhcyBJb25SZXNvdXJjZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAYXVnbWVudHMgUmVzb3VyY2VcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZW5kcG9pbnQgVGhlIHJlc3VsdCBvZiB0aGUgQ2VzaXVtIGlvbiBhc3NldCBlbmRwb2ludCBzZXJ2aWNlLlxuICogQHBhcmFtIHtSZXNvdXJjZX0gZW5kcG9pbnRSZXNvdXJjZSBUaGUgcmVzb3VyY2UgdXNlZCB0byByZXRyZWl2ZSB0aGUgZW5kcG9pbnQuXG4gKlxuICogQHNlZSBJb25cbiAqIEBzZWUgSW9uSW1hZ2VyeVByb3ZpZGVyXG4gKiBAc2VlIGNyZWF0ZVdvcmxkVGVycmFpblxuICogQHNlZSBodHRwczovL2Nlc2l1bS5jb21cbiAqL1xuZnVuY3Rpb24gSW9uUmVzb3VyY2UoZW5kcG9pbnQsIGVuZHBvaW50UmVzb3VyY2UpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2suZGVmaW5lZChcImVuZHBvaW50XCIsIGVuZHBvaW50KTtcbiAgQ2hlY2suZGVmaW5lZChcImVuZHBvaW50UmVzb3VyY2VcIiwgZW5kcG9pbnRSZXNvdXJjZSk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBvcHRpb25zO1xuICB2YXIgZXh0ZXJuYWxUeXBlID0gZW5kcG9pbnQuZXh0ZXJuYWxUeXBlO1xuICB2YXIgaXNFeHRlcm5hbCA9IGRlZmluZWQoZXh0ZXJuYWxUeXBlKTtcblxuICBpZiAoIWlzRXh0ZXJuYWwpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgdXJsOiBlbmRwb2ludC51cmwsXG4gICAgICByZXRyeUF0dGVtcHRzOiAxLFxuICAgICAgcmV0cnlDYWxsYmFjazogcmV0cnlDYWxsYmFjayxcbiAgICB9O1xuICB9IGVsc2UgaWYgKFxuICAgIGV4dGVybmFsVHlwZSA9PT0gXCIzRFRJTEVTXCIgfHxcbiAgICBleHRlcm5hbFR5cGUgPT09IFwiU1RLX1RFUlJBSU5fU0VSVkVSXCJcbiAgKSB7XG4gICAgLy8gM0QgVGlsZXMgYW5kIFNUSyBUZXJyYWluIFNlcnZlciBleHRlcm5hbCBhc3NldHMgY2FuIHN0aWxsIGJlIHJlcHJlc2VudGVkIGFzIGFuIElvblJlc291cmNlXG4gICAgb3B0aW9ucyA9IHsgdXJsOiBlbmRwb2ludC5vcHRpb25zLnVybCB9O1xuICB9IGVsc2Uge1xuICAgIC8vRXh0ZXJuYWwgaW1hZ2VyeSBhc3NldHMgaGF2ZSBhZGRpdGlvbmFsIGNvbmZpZ3VyYXRpb24gdGhhdCBjYW4ndCBiZSByZXByZXNlbnRlZCBhcyBhIFJlc291cmNlXG4gICAgdGhyb3cgbmV3IFJ1bnRpbWVFcnJvcihcbiAgICAgIFwiSW9uLmNyZWF0ZVJlc291cmNlIGRvZXMgbm90IHN1cHBvcnQgZXh0ZXJuYWwgaW1hZ2VyeSBhc3NldHM7IHVzZSBJb25JbWFnZXJ5UHJvdmlkZXIgaW5zdGVhZC5cIlxuICAgICk7XG4gIH1cblxuICBSZXNvdXJjZS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuXG4gIC8vIFRoZSBhc3NldCBlbmRwb2ludCBkYXRhIHJldHVybmVkIGZyb20gaW9uLlxuICB0aGlzLl9pb25FbmRwb2ludCA9IGVuZHBvaW50O1xuICB0aGlzLl9pb25FbmRwb2ludERvbWFpbiA9IGlzRXh0ZXJuYWxcbiAgICA/IHVuZGVmaW5lZFxuICAgIDogbmV3IFVyaShlbmRwb2ludC51cmwpLmF1dGhvcml0eSgpO1xuXG4gIC8vIFRoZSBlbmRwb2ludCByZXNvdXJjZSB0byBmZXRjaCB3aGVuIGEgbmV3IHRva2VuIGlzIG5lZWRlZFxuICB0aGlzLl9pb25FbmRwb2ludFJlc291cmNlID0gZW5kcG9pbnRSZXNvdXJjZTtcblxuICAvLyBUaGUgcHJpbWFyeSBJb25SZXNvdXJjZSBmcm9tIHdoaWNoIGFuIGluc3RhbmNlIGlzIGRlcml2ZWRcbiAgdGhpcy5faW9uUm9vdCA9IHVuZGVmaW5lZDtcblxuICAvLyBTaGFyZWQgcHJvbWlzZSBmb3IgZW5kcG9vaW50IHJlcXVlc3RzIGFtZCBjcmVkaXRzIChvbmx5IGV2ZXIgc2V0IG9uIHRoZSByb290IHJlcXVlc3QpXG4gIHRoaXMuX3BlbmRpbmdQcm9taXNlID0gdW5kZWZpbmVkO1xuICB0aGlzLl9jcmVkaXRzID0gdW5kZWZpbmVkO1xuICB0aGlzLl9pc0V4dGVybmFsID0gaXNFeHRlcm5hbDtcbn1cblxuaWYgKGRlZmluZWQoT2JqZWN0LmNyZWF0ZSkpIHtcbiAgSW9uUmVzb3VyY2UucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShSZXNvdXJjZS5wcm90b3R5cGUpO1xuICBJb25SZXNvdXJjZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBJb25SZXNvdXJjZTtcbn1cblxuLyoqXG4gKiBBc3luY2hyb25vdXNseSBjcmVhdGVzIGFuIGluc3RhbmNlLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBhc3NldElkIFRoZSBDZXNpdW0gaW9uIGFzc2V0IGlkLlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBBbiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYWNjZXNzVG9rZW49SW9uLmRlZmF1bHRBY2Nlc3NUb2tlbl0gVGhlIGFjY2VzcyB0b2tlbiB0byB1c2UuXG4gKiBAcGFyYW0ge1N0cmluZ3xSZXNvdXJjZX0gW29wdGlvbnMuc2VydmVyPUlvbi5kZWZhdWx0U2VydmVyXSBUaGUgcmVzb3VyY2UgdG8gdGhlIENlc2l1bSBpb24gQVBJIHNlcnZlci5cbiAqIEByZXR1cm5zIHtQcm9taXNlLjxJb25SZXNvdXJjZT59IEEgUHJvbWlzZSB0byBhbSBpbnN0YW5jZSByZXByZXNlbnRpbmcgdGhlIENlc2l1bSBpb24gQXNzZXQuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vTG9hZCBhIENlc2l1bTNEVGlsZXNldCB3aXRoIGFzc2V0IElEIG9mIDEyNDYyNDIzNFxuICogdmlld2VyLnNjZW5lLnByaW1pdGl2ZXMuYWRkKG5ldyBDZXNpdW0uQ2VzaXVtM0RUaWxlc2V0KHsgdXJsOiBDZXNpdW0uSW9uUmVzb3VyY2UuZnJvbUFzc2V0SWQoMTI0NjI0MjM0KSB9KSk7XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vTG9hZCBhIENaTUwgZmlsZSB3aXRoIGFzc2V0IElEIG9mIDEwODkwXG4gKiBDZXNpdW0uSW9uUmVzb3VyY2UuZnJvbUFzc2V0SWQoMTA4OTApXG4gKiAgIC50aGVuKGZ1bmN0aW9uIChyZXNvdXJjZSkge1xuICogICAgIHZpZXdlci5kYXRhU291cmNlcy5hZGQoQ2VzaXVtLkN6bWxEYXRhU291cmNlLmxvYWQocmVzb3VyY2UpKTtcbiAqICAgfSk7XG4gKi9cbklvblJlc291cmNlLmZyb21Bc3NldElkID0gZnVuY3Rpb24gKGFzc2V0SWQsIG9wdGlvbnMpIHtcbiAgdmFyIGVuZHBvaW50UmVzb3VyY2UgPSBJb25SZXNvdXJjZS5fY3JlYXRlRW5kcG9pbnRSZXNvdXJjZShhc3NldElkLCBvcHRpb25zKTtcblxuICByZXR1cm4gZW5kcG9pbnRSZXNvdXJjZS5mZXRjaEpzb24oKS50aGVuKGZ1bmN0aW9uIChlbmRwb2ludCkge1xuICAgIHJldHVybiBuZXcgSW9uUmVzb3VyY2UoZW5kcG9pbnQsIGVuZHBvaW50UmVzb3VyY2UpO1xuICB9KTtcbn07XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKElvblJlc291cmNlLnByb3RvdHlwZSwge1xuICAvKipcbiAgICogR2V0cyB0aGUgY3JlZGl0cyByZXF1aXJlZCBmb3IgYXR0cmlidXRpb24gb2YgdGhlIGFzc2V0LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgSW9uUmVzb3VyY2UucHJvdG90eXBlXG4gICAqIEB0eXBlIHtDcmVkaXRbXX1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICBjcmVkaXRzOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBPbmx5IHdlJ3JlIG5vdCB0aGUgcm9vdCwgcmV0dXJuIGl0cyBjcmVkaXRzO1xuICAgICAgaWYgKGRlZmluZWQodGhpcy5faW9uUm9vdCkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lvblJvb3QuY3JlZGl0cztcbiAgICAgIH1cblxuICAgICAgLy8gV2UgYXJlIHRoZSByb290XG4gICAgICBpZiAoZGVmaW5lZCh0aGlzLl9jcmVkaXRzKSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY3JlZGl0cztcbiAgICAgIH1cblxuICAgICAgdGhpcy5fY3JlZGl0cyA9IElvblJlc291cmNlLmdldENyZWRpdHNGcm9tRW5kcG9pbnQoXG4gICAgICAgIHRoaXMuX2lvbkVuZHBvaW50LFxuICAgICAgICB0aGlzLl9pb25FbmRwb2ludFJlc291cmNlXG4gICAgICApO1xuXG4gICAgICByZXR1cm4gdGhpcy5fY3JlZGl0cztcbiAgICB9LFxuICB9LFxufSk7XG5cbi8qKiBAcHJpdmF0ZSAqL1xuSW9uUmVzb3VyY2UuZ2V0Q3JlZGl0c0Zyb21FbmRwb2ludCA9IGZ1bmN0aW9uIChlbmRwb2ludCwgZW5kcG9pbnRSZXNvdXJjZSkge1xuICB2YXIgY3JlZGl0cyA9IGVuZHBvaW50LmF0dHJpYnV0aW9ucy5tYXAoQ3JlZGl0LmdldElvbkNyZWRpdCk7XG4gIHZhciBkZWZhdWx0VG9rZW5DcmVkaXQgPSBJb24uZ2V0RGVmYXVsdFRva2VuQ3JlZGl0KFxuICAgIGVuZHBvaW50UmVzb3VyY2UucXVlcnlQYXJhbWV0ZXJzLmFjY2Vzc190b2tlblxuICApO1xuICBpZiAoZGVmaW5lZChkZWZhdWx0VG9rZW5DcmVkaXQpKSB7XG4gICAgY3JlZGl0cy5wdXNoKENyZWRpdC5jbG9uZShkZWZhdWx0VG9rZW5DcmVkaXQpKTtcbiAgfVxuICByZXR1cm4gY3JlZGl0cztcbn07XG5cbi8qKiBAaW5oZXJpdGRvYyAqL1xuSW9uUmVzb3VyY2UucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKHJlc3VsdCkge1xuICAvLyBXZSBhbHdheXMgd2FudCB0byB1c2UgdGhlIHJvb3QncyBpbmZvcm1hdGlvbiBiZWNhdXNlIGl0J3MgdGhlIG1vc3QgdXAtdG8tZGF0ZVxuICB2YXIgaW9uUm9vdCA9IGRlZmF1bHRWYWx1ZSh0aGlzLl9pb25Sb290LCB0aGlzKTtcblxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHJlc3VsdCA9IG5ldyBJb25SZXNvdXJjZShcbiAgICAgIGlvblJvb3QuX2lvbkVuZHBvaW50LFxuICAgICAgaW9uUm9vdC5faW9uRW5kcG9pbnRSZXNvdXJjZVxuICAgICk7XG4gIH1cblxuICByZXN1bHQgPSBSZXNvdXJjZS5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLCByZXN1bHQpO1xuICByZXN1bHQuX2lvblJvb3QgPSBpb25Sb290O1xuICByZXN1bHQuX2lzRXh0ZXJuYWwgPSB0aGlzLl9pc0V4dGVybmFsO1xuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG5Jb25SZXNvdXJjZS5wcm90b3R5cGUuZmV0Y2hJbWFnZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIGlmICghdGhpcy5faXNFeHRlcm5hbCkge1xuICAgIHZhciB1c2VyT3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgb3B0aW9ucyA9IHtcbiAgICAgIHByZWZlckJsb2I6IHRydWUsXG4gICAgfTtcbiAgICBpZiAoZGVmaW5lZCh1c2VyT3B0aW9ucykpIHtcbiAgICAgIG9wdGlvbnMuZmxpcFkgPSB1c2VyT3B0aW9ucy5mbGlwWTtcbiAgICAgIG9wdGlvbnMucHJlZmVySW1hZ2VCaXRtYXAgPSB1c2VyT3B0aW9ucy5wcmVmZXJJbWFnZUJpdG1hcDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gUmVzb3VyY2UucHJvdG90eXBlLmZldGNoSW1hZ2UuY2FsbCh0aGlzLCBvcHRpb25zKTtcbn07XG5cbklvblJlc291cmNlLnByb3RvdHlwZS5fbWFrZVJlcXVlc3QgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAvLyBEb24ndCBzZW5kIGlvbiBhY2Nlc3MgdG9rZW4gdG8gbm9uLWlvbiBzZXJ2ZXJzLlxuICBpZiAoXG4gICAgdGhpcy5faXNFeHRlcm5hbCB8fFxuICAgIG5ldyBVcmkodGhpcy51cmwpLmF1dGhvcml0eSgpICE9PSB0aGlzLl9pb25FbmRwb2ludERvbWFpblxuICApIHtcbiAgICByZXR1cm4gUmVzb3VyY2UucHJvdG90eXBlLl9tYWtlUmVxdWVzdC5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuICB9XG5cbiAgaWYgKCFkZWZpbmVkKG9wdGlvbnMuaGVhZGVycykpIHtcbiAgICBvcHRpb25zLmhlYWRlcnMgPSB7fTtcbiAgfVxuICBvcHRpb25zLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IFwiQmVhcmVyIFwiICsgdGhpcy5faW9uRW5kcG9pbnQuYWNjZXNzVG9rZW47XG5cbiAgcmV0dXJuIFJlc291cmNlLnByb3RvdHlwZS5fbWFrZVJlcXVlc3QuY2FsbCh0aGlzLCBvcHRpb25zKTtcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuSW9uUmVzb3VyY2UuX2NyZWF0ZUVuZHBvaW50UmVzb3VyY2UgPSBmdW5jdGlvbiAoYXNzZXRJZCwgb3B0aW9ucykge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay5kZWZpbmVkKFwiYXNzZXRJZFwiLCBhc3NldElkKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcbiAgdmFyIHNlcnZlciA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLnNlcnZlciwgSW9uLmRlZmF1bHRTZXJ2ZXIpO1xuICB2YXIgYWNjZXNzVG9rZW4gPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5hY2Nlc3NUb2tlbiwgSW9uLmRlZmF1bHRBY2Nlc3NUb2tlbik7XG4gIHNlcnZlciA9IFJlc291cmNlLmNyZWF0ZUlmTmVlZGVkKHNlcnZlcik7XG5cbiAgdmFyIHJlc291cmNlT3B0aW9ucyA9IHtcbiAgICB1cmw6IFwidjEvYXNzZXRzL1wiICsgYXNzZXRJZCArIFwiL2VuZHBvaW50XCIsXG4gIH07XG5cbiAgaWYgKGRlZmluZWQoYWNjZXNzVG9rZW4pKSB7XG4gICAgcmVzb3VyY2VPcHRpb25zLnF1ZXJ5UGFyYW1ldGVycyA9IHsgYWNjZXNzX3Rva2VuOiBhY2Nlc3NUb2tlbiB9O1xuICB9XG5cbiAgcmV0dXJuIHNlcnZlci5nZXREZXJpdmVkUmVzb3VyY2UocmVzb3VyY2VPcHRpb25zKTtcbn07XG5cbmZ1bmN0aW9uIHJldHJ5Q2FsbGJhY2sodGhhdCwgZXJyb3IpIHtcbiAgdmFyIGlvblJvb3QgPSBkZWZhdWx0VmFsdWUodGhhdC5faW9uUm9vdCwgdGhhdCk7XG4gIHZhciBlbmRwb2ludFJlc291cmNlID0gaW9uUm9vdC5faW9uRW5kcG9pbnRSZXNvdXJjZTtcblxuICAvLyBJbWFnZSBpcyBub3QgYXZhaWxhYmxlIGluIHdvcmtlciB0aHJlYWRzLCBzbyB0aGlzIGF2b2lkc1xuICAvLyBhIFJlZmVyZW5jZUVycm9yXG4gIHZhciBpbWFnZURlZmluZWQgPSB0eXBlb2YgSW1hZ2UgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgLy8gV2Ugb25seSB3YW50IHRvIHJldHJ5IGluIHRoZSBjYXNlIG9mIGludmFsaWQgY3JlZGVudGlhbHMgKDQwMSkgb3IgaW1hZ2VcbiAgLy8gcmVxdWVzdHMoc2luY2UgSW1hZ2UgZmFpbHVyZXMgY2FuIG5vdCBwcm92aWRlIGEgc3RhdHVzIGNvZGUpXG4gIGlmIChcbiAgICAhZGVmaW5lZChlcnJvcikgfHxcbiAgICAoZXJyb3Iuc3RhdHVzQ29kZSAhPT0gNDAxICYmXG4gICAgICAhKGltYWdlRGVmaW5lZCAmJiBlcnJvci50YXJnZXQgaW5zdGFuY2VvZiBJbWFnZSkpXG4gICkge1xuICAgIHJldHVybiB3aGVuLnJlc29sdmUoZmFsc2UpO1xuICB9XG5cbiAgLy8gV2UgdXNlIGEgc2hhcmVkIHBlbmRpbmcgcHJvbWlzZSBmb3IgYWxsIGRlcml2ZWQgYXNzZXRzLCBzaW5jZSB0aGV5IHNoYXJlXG4gIC8vIGEgY29tbW9uIGFjY2Vzc190b2tlbi4gIElmIHdlJ3JlIGFscmVhZHkgcmVxdWVzdGluZyBhIG5ldyB0b2tlbiBmb3IgdGhpc1xuICAvLyBhc3NldCwgd2Ugd2FpdCBvbiB0aGUgc2FtZSBwcm9taXNlLlxuICBpZiAoIWRlZmluZWQoaW9uUm9vdC5fcGVuZGluZ1Byb21pc2UpKSB7XG4gICAgaW9uUm9vdC5fcGVuZGluZ1Byb21pc2UgPSBlbmRwb2ludFJlc291cmNlXG4gICAgICAuZmV0Y2hKc29uKClcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChuZXdFbmRwb2ludCkge1xuICAgICAgICAvL1NldCB0aGUgdG9rZW4gZm9yIHJvb3QgcmVzb3VyY2Ugc28gbmV3IGRlcml2ZWQgcmVzb3VyY2VzIGF1dG9tYXRpY2FsbHkgcGljayBpdCB1cFxuICAgICAgICBpb25Sb290Ll9pb25FbmRwb2ludCA9IG5ld0VuZHBvaW50O1xuICAgICAgICByZXR1cm4gbmV3RW5kcG9pbnQ7XG4gICAgICB9KVxuICAgICAgLmFsd2F5cyhmdW5jdGlvbiAobmV3RW5kcG9pbnQpIHtcbiAgICAgICAgLy8gUGFzcyBvciBmYWlsLCB3ZSdyZSBkb25lIHdpdGggdGhpcyBwcm9taXNlLCB0aGUgbmV4dCBmYWlsdXJlIHNob3VsZCB1c2UgYSBuZXcgb25lLlxuICAgICAgICBpb25Sb290Ll9wZW5kaW5nUHJvbWlzZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuIG5ld0VuZHBvaW50O1xuICAgICAgfSk7XG4gIH1cblxuICByZXR1cm4gaW9uUm9vdC5fcGVuZGluZ1Byb21pc2UudGhlbihmdW5jdGlvbiAobmV3RW5kcG9pbnQpIHtcbiAgICAvLyBTZXQgdGhlIG5ldyB0b2tlbiBhbmQgZW5kcG9pbnQgZm9yIHRoaXMgcmVzb3VyY2VcbiAgICB0aGF0Ll9pb25FbmRwb2ludCA9IG5ld0VuZHBvaW50O1xuICAgIHJldHVybiB0cnVlO1xuICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IElvblJlc291cmNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///48604\n')},22841:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _JulianDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(55293);\n/* harmony import */ var _TimeInterval_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77808);\n\n\n\nvar MINIMUM_VALUE = Object.freeze(\n  _JulianDate_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromIso8601 */ .Z.fromIso8601("0000-01-01T00:00:00Z")\n);\nvar MAXIMUM_VALUE = Object.freeze(\n  _JulianDate_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromIso8601 */ .Z.fromIso8601("9999-12-31T24:00:00Z")\n);\nvar MAXIMUM_INTERVAL = Object.freeze(\n  new _TimeInterval_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({\n    start: MINIMUM_VALUE,\n    stop: MAXIMUM_VALUE,\n  })\n);\n\n/**\n * Constants related to ISO8601 support.\n *\n * @namespace\n *\n * @see {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601 on Wikipedia}\n * @see JulianDate\n * @see TimeInterval\n */\nvar Iso8601 = {\n  /**\n   * A {@link JulianDate} representing the earliest time representable by an ISO8601 date.\n   * This is equivalent to the date string \'0000-01-01T00:00:00Z\'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MINIMUM_VALUE: MINIMUM_VALUE,\n\n  /**\n   * A {@link JulianDate} representing the latest time representable by an ISO8601 date.\n   * This is equivalent to the date string \'9999-12-31T24:00:00Z\'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_VALUE: MAXIMUM_VALUE,\n\n  /**\n   * A {@link TimeInterval} representing the largest interval representable by an ISO8601 interval.\n   * This is equivalent to the interval string \'0000-01-01T00:00:00Z/9999-12-31T24:00:00Z\'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_INTERVAL: MAXIMUM_INTERVAL,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Iso8601);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI4NDEuanMiLCJtYXBwaW5ncyI6Ijs7QUFBeUM7QUFDSTs7QUFFN0M7QUFDQSxFQUFFLHVGQUFzQjtBQUN4QjtBQUNBO0FBQ0EsRUFBRSx1RkFBc0I7QUFDeEI7QUFDQTtBQUNBLE1BQU0saUVBQVk7QUFDbEI7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtCQUFrQjtBQUMxQjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQVEsa0JBQWtCO0FBQzFCO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSxvQkFBb0I7QUFDNUI7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUFlLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL0lzbzg2MDEuanM/MDRhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSnVsaWFuRGF0ZSBmcm9tIFwiLi9KdWxpYW5EYXRlLmpzXCI7XG5pbXBvcnQgVGltZUludGVydmFsIGZyb20gXCIuL1RpbWVJbnRlcnZhbC5qc1wiO1xuXG52YXIgTUlOSU1VTV9WQUxVRSA9IE9iamVjdC5mcmVlemUoXG4gIEp1bGlhbkRhdGUuZnJvbUlzbzg2MDEoXCIwMDAwLTAxLTAxVDAwOjAwOjAwWlwiKVxuKTtcbnZhciBNQVhJTVVNX1ZBTFVFID0gT2JqZWN0LmZyZWV6ZShcbiAgSnVsaWFuRGF0ZS5mcm9tSXNvODYwMShcIjk5OTktMTItMzFUMjQ6MDA6MDBaXCIpXG4pO1xudmFyIE1BWElNVU1fSU5URVJWQUwgPSBPYmplY3QuZnJlZXplKFxuICBuZXcgVGltZUludGVydmFsKHtcbiAgICBzdGFydDogTUlOSU1VTV9WQUxVRSxcbiAgICBzdG9wOiBNQVhJTVVNX1ZBTFVFLFxuICB9KVxuKTtcblxuLyoqXG4gKiBDb25zdGFudHMgcmVsYXRlZCB0byBJU084NjAxIHN1cHBvcnQuXG4gKlxuICogQG5hbWVzcGFjZVxuICpcbiAqIEBzZWUge0BsaW5rIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSVNPXzg2MDF8SVNPIDg2MDEgb24gV2lraXBlZGlhfVxuICogQHNlZSBKdWxpYW5EYXRlXG4gKiBAc2VlIFRpbWVJbnRlcnZhbFxuICovXG52YXIgSXNvODYwMSA9IHtcbiAgLyoqXG4gICAqIEEge0BsaW5rIEp1bGlhbkRhdGV9IHJlcHJlc2VudGluZyB0aGUgZWFybGllc3QgdGltZSByZXByZXNlbnRhYmxlIGJ5IGFuIElTTzg2MDEgZGF0ZS5cbiAgICogVGhpcyBpcyBlcXVpdmFsZW50IHRvIHRoZSBkYXRlIHN0cmluZyAnMDAwMC0wMS0wMVQwMDowMDowMFonXG4gICAqXG4gICAqIEB0eXBlIHtKdWxpYW5EYXRlfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIE1JTklNVU1fVkFMVUU6IE1JTklNVU1fVkFMVUUsXG5cbiAgLyoqXG4gICAqIEEge0BsaW5rIEp1bGlhbkRhdGV9IHJlcHJlc2VudGluZyB0aGUgbGF0ZXN0IHRpbWUgcmVwcmVzZW50YWJsZSBieSBhbiBJU084NjAxIGRhdGUuXG4gICAqIFRoaXMgaXMgZXF1aXZhbGVudCB0byB0aGUgZGF0ZSBzdHJpbmcgJzk5OTktMTItMzFUMjQ6MDA6MDBaJ1xuICAgKlxuICAgKiBAdHlwZSB7SnVsaWFuRGF0ZX1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBNQVhJTVVNX1ZBTFVFOiBNQVhJTVVNX1ZBTFVFLFxuXG4gIC8qKlxuICAgKiBBIHtAbGluayBUaW1lSW50ZXJ2YWx9IHJlcHJlc2VudGluZyB0aGUgbGFyZ2VzdCBpbnRlcnZhbCByZXByZXNlbnRhYmxlIGJ5IGFuIElTTzg2MDEgaW50ZXJ2YWwuXG4gICAqIFRoaXMgaXMgZXF1aXZhbGVudCB0byB0aGUgaW50ZXJ2YWwgc3RyaW5nICcwMDAwLTAxLTAxVDAwOjAwOjAwWi85OTk5LTEyLTMxVDI0OjAwOjAwWidcbiAgICpcbiAgICogQHR5cGUge0p1bGlhbkRhdGV9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTUFYSU1VTV9JTlRFUlZBTDogTUFYSU1VTV9JTlRFUlZBTCxcbn07XG5leHBvcnQgZGVmYXVsdCBJc284NjAxO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///22841\n')},55293:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _binarySearch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(377);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n/* harmony import */ var _GregorianDate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(98648);\n/* harmony import */ var _isLeapYear_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55706);\n/* harmony import */ var _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(52409);\n/* harmony import */ var _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4877);\n/* harmony import */ var _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13098);\n\n\n\n\n\n\n\n\n\n\nvar gregorianDateScratch = new _GregorianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar daysInLeapFeburary = 29;\n\nfunction compareLeapSecondDates(leapSecond, dateToFind) {\n  return JulianDate.compare(leapSecond.julianDate, dateToFind.julianDate);\n}\n\n// we don\'t really need a leap second instance, anything with a julianDate property will do\nvar binarySearchScratchLeapSecond = new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\n\nfunction convertUtcToTai(julianDate) {\n  //Even though julianDate is in UTC, we\'ll treat it as TAI and\n  //search the leap second table for it.\n  binarySearchScratchLeapSecond.julianDate = julianDate;\n  var leapSeconds = JulianDate.leapSeconds;\n  var index = (0,_binarySearch_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    leapSeconds,\n    binarySearchScratchLeapSecond,\n    compareLeapSecondDates\n  );\n\n  if (index < 0) {\n    index = ~index;\n  }\n\n  if (index >= leapSeconds.length) {\n    index = leapSeconds.length - 1;\n  }\n\n  var offset = leapSeconds[index].offset;\n  if (index > 0) {\n    //Now we have the index of the closest leap second that comes on or after our UTC time.\n    //However, if the difference between the UTC date being converted and the TAI\n    //defined leap second is greater than the offset, we are off by one and need to use\n    //the previous leap second.\n    var difference = JulianDate.secondsDifference(\n      leapSeconds[index].julianDate,\n      julianDate\n    );\n    if (difference > offset) {\n      index--;\n      offset = leapSeconds[index].offset;\n    }\n  }\n\n  JulianDate.addSeconds(julianDate, offset, julianDate);\n}\n\nfunction convertTaiToUtc(julianDate, result) {\n  binarySearchScratchLeapSecond.julianDate = julianDate;\n  var leapSeconds = JulianDate.leapSeconds;\n  var index = (0,_binarySearch_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    leapSeconds,\n    binarySearchScratchLeapSecond,\n    compareLeapSecondDates\n  );\n  if (index < 0) {\n    index = ~index;\n  }\n\n  //All times before our first leap second get the first offset.\n  if (index === 0) {\n    return JulianDate.addSeconds(julianDate, -leapSeconds[0].offset, result);\n  }\n\n  //All times after our leap second get the last offset.\n  if (index >= leapSeconds.length) {\n    return JulianDate.addSeconds(\n      julianDate,\n      -leapSeconds[index - 1].offset,\n      result\n    );\n  }\n\n  //Compute the difference between the found leap second and the time we are converting.\n  var difference = JulianDate.secondsDifference(\n    leapSeconds[index].julianDate,\n    julianDate\n  );\n\n  if (difference === 0) {\n    //The date is in our leap second table.\n    return JulianDate.addSeconds(\n      julianDate,\n      -leapSeconds[index].offset,\n      result\n    );\n  }\n\n  if (difference <= 1.0) {\n    //The requested date is during the moment of a leap second, then we cannot convert to UTC\n    return undefined;\n  }\n\n  //The time is in between two leap seconds, index is the leap second after the date\n  //we\'re converting, so we subtract one to get the correct LeapSecond instance.\n  return JulianDate.addSeconds(\n    julianDate,\n    -leapSeconds[--index].offset,\n    result\n  );\n}\n\nfunction setComponents(wholeDays, secondsOfDay, julianDate) {\n  var extraDays = (secondsOfDay / _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY) | 0;\n  wholeDays += extraDays;\n  secondsOfDay -= _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY * extraDays;\n\n  if (secondsOfDay < 0) {\n    wholeDays--;\n    secondsOfDay += _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY;\n  }\n\n  julianDate.dayNumber = wholeDays;\n  julianDate.secondsOfDay = secondsOfDay;\n  return julianDate;\n}\n\nfunction computeJulianDateComponents(\n  year,\n  month,\n  day,\n  hour,\n  minute,\n  second,\n  millisecond\n) {\n  // Algorithm from page 604 of the Explanatory Supplement to the\n  // Astronomical Almanac (Seidelmann 1992).\n\n  var a = ((month - 14) / 12) | 0;\n  var b = year + 4800 + a;\n  var dayNumber =\n    (((1461 * b) / 4) | 0) +\n    (((367 * (month - 2 - 12 * a)) / 12) | 0) -\n    (((3 * (((b + 100) / 100) | 0)) / 4) | 0) +\n    day -\n    32075;\n\n  // JulianDates are noon-based\n  hour = hour - 12;\n  if (hour < 0) {\n    hour += 24;\n  }\n\n  var secondsOfDay =\n    second +\n    (hour * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_HOUR */ .Z.SECONDS_PER_HOUR +\n      minute * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_MINUTE */ .Z.SECONDS_PER_MINUTE +\n      millisecond * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_MILLISECOND */ .Z.SECONDS_PER_MILLISECOND);\n\n  if (secondsOfDay >= 43200.0) {\n    dayNumber -= 1;\n  }\n\n  return [dayNumber, secondsOfDay];\n}\n\n//Regular expressions used for ISO8601 date parsing.\n//YYYY\nvar matchCalendarYear = /^(\\d{4})$/;\n//YYYY-MM (YYYYMM is invalid)\nvar matchCalendarMonth = /^(\\d{4})-(\\d{2})$/;\n//YYYY-DDD or YYYYDDD\nvar matchOrdinalDate = /^(\\d{4})-?(\\d{3})$/;\n//YYYY-Www or YYYYWww or YYYY-Www-D or YYYYWwwD\nvar matchWeekDate = /^(\\d{4})-?W(\\d{2})-?(\\d{1})?$/;\n//YYYY-MM-DD or YYYYMMDD\nvar matchCalendarDate = /^(\\d{4})-?(\\d{2})-?(\\d{2})$/;\n// Match utc offset\nvar utcOffset = /([Z+\\-])?(\\d{2})?:?(\\d{2})?$/;\n// Match hours HH or HH.xxxxx\nvar matchHours = /^(\\d{2})(\\.\\d+)?/.source + utcOffset.source;\n// Match hours/minutes HH:MM HHMM.xxxxx\nvar matchHoursMinutes = /^(\\d{2}):?(\\d{2})(\\.\\d+)?/.source + utcOffset.source;\n// Match hours/minutes HH:MM:SS HHMMSS.xxxxx\nvar matchHoursMinutesSeconds =\n  /^(\\d{2}):?(\\d{2}):?(\\d{2})(\\.\\d+)?/.source + utcOffset.source;\n\nvar iso8601ErrorMessage = "Invalid ISO 8601 date.";\n\n/**\n * Represents an astronomical Julian date, which is the number of days since noon on January 1, -4712 (4713 BC).\n * For increased precision, this class stores the whole number part of the date and the seconds\n * part of the date in separate components.  In order to be safe for arithmetic and represent\n * leap seconds, the date is always stored in the International Atomic Time standard\n * {@link TimeStandard.TAI}.\n * @alias JulianDate\n * @constructor\n *\n * @param {Number} [julianDayNumber=0.0] The Julian Day Number representing the number of whole days.  Fractional days will also be handled correctly.\n * @param {Number} [secondsOfDay=0.0] The number of seconds into the current Julian Day Number.  Fractional seconds, negative seconds and seconds greater than a day will be handled correctly.\n * @param {TimeStandard} [timeStandard=TimeStandard.UTC] The time standard in which the first two parameters are defined.\n */\nfunction JulianDate(julianDayNumber, secondsOfDay, timeStandard) {\n  /**\n   * Gets or sets the number of whole days.\n   * @type {Number}\n   */\n  this.dayNumber = undefined;\n\n  /**\n   * Gets or sets the number of seconds into the current day.\n   * @type {Number}\n   */\n  this.secondsOfDay = undefined;\n\n  julianDayNumber = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(julianDayNumber, 0.0);\n  secondsOfDay = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(secondsOfDay, 0.0);\n  timeStandard = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(timeStandard, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UTC */ .Z.UTC);\n\n  //If julianDayNumber is fractional, make it an integer and add the number of seconds the fraction represented.\n  var wholeDays = julianDayNumber | 0;\n  secondsOfDay =\n    secondsOfDay +\n    (julianDayNumber - wholeDays) * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY;\n\n  setComponents(wholeDays, secondsOfDay, this);\n\n  if (timeStandard === _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UTC */ .Z.UTC) {\n    convertUtcToTai(this);\n  }\n}\n\n/**\n * Creates a new instance from a GregorianDate.\n *\n * @param {GregorianDate} date A GregorianDate.\n * @param {JulianDate} [result] An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter or a new instance if none was provided.\n *\n * @exception {DeveloperError} date must be a valid GregorianDate.\n */\nJulianDate.fromGregorianDate = function (date, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(date instanceof _GregorianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("date must be a valid GregorianDate.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var components = computeJulianDateComponents(\n    date.year,\n    date.month,\n    date.day,\n    date.hour,\n    date.minute,\n    date.second,\n    date.millisecond\n  );\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    return new JulianDate(components[0], components[1], _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UTC */ .Z.UTC);\n  }\n  setComponents(components[0], components[1], result);\n  convertUtcToTai(result);\n  return result;\n};\n\n/**\n * Creates a new instance from a JavaScript Date.\n *\n * @param {Date} date A JavaScript Date.\n * @param {JulianDate} [result] An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter or a new instance if none was provided.\n *\n * @exception {DeveloperError} date must be a valid JavaScript Date.\n */\nJulianDate.fromDate = function (date, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("date must be a valid JavaScript Date.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var components = computeJulianDateComponents(\n    date.getUTCFullYear(),\n    date.getUTCMonth() + 1,\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds(),\n    date.getUTCMilliseconds()\n  );\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    return new JulianDate(components[0], components[1], _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UTC */ .Z.UTC);\n  }\n  setComponents(components[0], components[1], result);\n  convertUtcToTai(result);\n  return result;\n};\n\n/**\n * Creates a new instance from a from an {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601} date.\n * This method is superior to <code>Date.parse</code> because it will handle all valid formats defined by the ISO 8601\n * specification, including leap seconds and sub-millisecond times, which discarded by most JavaScript implementations.\n *\n * @param {String} iso8601String An ISO 8601 date.\n * @param {JulianDate} [result] An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter or a new instance if none was provided.\n *\n * @exception {DeveloperError} Invalid ISO 8601 date.\n */\nJulianDate.fromIso8601 = function (iso8601String, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (typeof iso8601String !== "string") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n  }\n  //>>includeEnd(\'debug\');\n\n  //Comma and decimal point both indicate a fractional number according to ISO 8601,\n  //start out by blanket replacing , with . which is the only valid such symbol in JS.\n  iso8601String = iso8601String.replace(",", ".");\n\n  //Split the string into its date and time components, denoted by a mandatory T\n  var tokens = iso8601String.split("T");\n  var year;\n  var month = 1;\n  var day = 1;\n  var hour = 0;\n  var minute = 0;\n  var second = 0;\n  var millisecond = 0;\n\n  //Lacking a time is okay, but a missing date is illegal.\n  var date = tokens[0];\n  var time = tokens[1];\n  var tmp;\n  var inLeapYear;\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(date)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n  }\n\n  var dashCount;\n  //>>includeEnd(\'debug\');\n\n  //First match the date against possible regular expressions.\n  tokens = date.match(matchCalendarDate);\n  if (tokens !== null) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    dashCount = date.split("-").length - 1;\n    if (dashCount > 0 && dashCount !== 2) {\n      throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n    }\n    //>>includeEnd(\'debug\');\n    year = +tokens[1];\n    month = +tokens[2];\n    day = +tokens[3];\n  } else {\n    tokens = date.match(matchCalendarMonth);\n    if (tokens !== null) {\n      year = +tokens[1];\n      month = +tokens[2];\n    } else {\n      tokens = date.match(matchCalendarYear);\n      if (tokens !== null) {\n        year = +tokens[1];\n      } else {\n        //Not a year/month/day so it must be an ordinal date.\n        var dayOfYear;\n        tokens = date.match(matchOrdinalDate);\n        if (tokens !== null) {\n          year = +tokens[1];\n          dayOfYear = +tokens[2];\n          inLeapYear = (0,_isLeapYear_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(year);\n\n          //This validation is only applicable for this format.\n          //>>includeStart(\'debug\', pragmas.debug);\n          if (\n            dayOfYear < 1 ||\n            (inLeapYear && dayOfYear > 366) ||\n            (!inLeapYear && dayOfYear > 365)\n          ) {\n            throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n          }\n          //>>includeEnd(\'debug\')\n        } else {\n          tokens = date.match(matchWeekDate);\n          if (tokens !== null) {\n            //ISO week date to ordinal date from\n            //http://en.wikipedia.org/w/index.php?title=ISO_week_date&oldid=474176775\n            year = +tokens[1];\n            var weekNumber = +tokens[2];\n            var dayOfWeek = +tokens[3] || 0;\n\n            //>>includeStart(\'debug\', pragmas.debug);\n            dashCount = date.split("-").length - 1;\n            if (\n              dashCount > 0 &&\n              ((!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(tokens[3]) && dashCount !== 1) ||\n                ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(tokens[3]) && dashCount !== 2))\n            ) {\n              throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n            }\n            //>>includeEnd(\'debug\')\n\n            var january4 = new Date(Date.UTC(year, 0, 4));\n            dayOfYear = weekNumber * 7 + dayOfWeek - january4.getUTCDay() - 3;\n          } else {\n            //None of our regular expressions succeeded in parsing the date properly.\n            //>>includeStart(\'debug\', pragmas.debug);\n            throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n            //>>includeEnd(\'debug\')\n          }\n        }\n        //Split an ordinal date into month/day.\n        tmp = new Date(Date.UTC(year, 0, 1));\n        tmp.setUTCDate(dayOfYear);\n        month = tmp.getUTCMonth() + 1;\n        day = tmp.getUTCDate();\n      }\n    }\n  }\n\n  //Now that we have all of the date components, validate them to make sure nothing is out of range.\n  inLeapYear = (0,_isLeapYear_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(year);\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    month < 1 ||\n    month > 12 ||\n    day < 1 ||\n    ((month !== 2 || !inLeapYear) && day > daysInMonth[month - 1]) ||\n    (inLeapYear && month === 2 && day > daysInLeapFeburary)\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n  }\n  //>>includeEnd(\'debug\')\n\n  //Now move onto the time string, which is much simpler.\n  //If no time is specified, it is considered the beginning of the day, UTC to match Javascript\'s implementation.\n  var offsetIndex;\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(time)) {\n    tokens = time.match(matchHoursMinutesSeconds);\n    if (tokens !== null) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      dashCount = time.split(":").length - 1;\n      if (dashCount > 0 && dashCount !== 2 && dashCount !== 3) {\n        throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n      }\n      //>>includeEnd(\'debug\')\n\n      hour = +tokens[1];\n      minute = +tokens[2];\n      second = +tokens[3];\n      millisecond = +(tokens[4] || 0) * 1000.0;\n      offsetIndex = 5;\n    } else {\n      tokens = time.match(matchHoursMinutes);\n      if (tokens !== null) {\n        //>>includeStart(\'debug\', pragmas.debug);\n        dashCount = time.split(":").length - 1;\n        if (dashCount > 2) {\n          throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n        }\n        //>>includeEnd(\'debug\')\n\n        hour = +tokens[1];\n        minute = +tokens[2];\n        second = +(tokens[3] || 0) * 60.0;\n        offsetIndex = 4;\n      } else {\n        tokens = time.match(matchHours);\n        if (tokens !== null) {\n          hour = +tokens[1];\n          minute = +(tokens[2] || 0) * 60.0;\n          offsetIndex = 3;\n        } else {\n          //>>includeStart(\'debug\', pragmas.debug);\n          throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n          //>>includeEnd(\'debug\')\n        }\n      }\n    }\n\n    //Validate that all values are in proper range.  Minutes and hours have special cases at 60 and 24.\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (\n      minute >= 60 ||\n      second >= 61 ||\n      hour > 24 ||\n      (hour === 24 && (minute > 0 || second > 0 || millisecond > 0))\n    ) {\n      throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(iso8601ErrorMessage);\n    }\n    //>>includeEnd(\'debug\');\n\n    //Check the UTC offset value, if no value exists, use local time\n    //a Z indicates UTC, + or - are offsets.\n    var offset = tokens[offsetIndex];\n    var offsetHours = +tokens[offsetIndex + 1];\n    var offsetMinutes = +(tokens[offsetIndex + 2] || 0);\n    switch (offset) {\n      case "+":\n        hour = hour - offsetHours;\n        minute = minute - offsetMinutes;\n        break;\n      case "-":\n        hour = hour + offsetHours;\n        minute = minute + offsetMinutes;\n        break;\n      case "Z":\n        break;\n      default:\n        minute =\n          minute +\n          new Date(\n            Date.UTC(year, month - 1, day, hour, minute)\n          ).getTimezoneOffset();\n        break;\n    }\n  }\n\n  //ISO8601 denotes a leap second by any time having a seconds component of 60 seconds.\n  //If that\'s the case, we need to temporarily subtract a second in order to build a UTC date.\n  //Then we add it back in after converting to TAI.\n  var isLeapSecond = second === 60;\n  if (isLeapSecond) {\n    second--;\n  }\n\n  //Even if we successfully parsed the string into its components, after applying UTC offset or\n  //special cases like 24:00:00 denoting midnight, we need to normalize the data appropriately.\n\n  //milliseconds can never be greater than 1000, and seconds can\'t be above 60, so we start with minutes\n  while (minute >= 60) {\n    minute -= 60;\n    hour++;\n  }\n\n  while (hour >= 24) {\n    hour -= 24;\n    day++;\n  }\n\n  tmp = inLeapYear && month === 2 ? daysInLeapFeburary : daysInMonth[month - 1];\n  while (day > tmp) {\n    day -= tmp;\n    month++;\n\n    if (month > 12) {\n      month -= 12;\n      year++;\n    }\n\n    tmp =\n      inLeapYear && month === 2 ? daysInLeapFeburary : daysInMonth[month - 1];\n  }\n\n  //If UTC offset is at the beginning/end of the day, minutes can be negative.\n  while (minute < 0) {\n    minute += 60;\n    hour--;\n  }\n\n  while (hour < 0) {\n    hour += 24;\n    day--;\n  }\n\n  while (day < 1) {\n    month--;\n    if (month < 1) {\n      month += 12;\n      year--;\n    }\n\n    tmp =\n      inLeapYear && month === 2 ? daysInLeapFeburary : daysInMonth[month - 1];\n    day += tmp;\n  }\n\n  //Now create the JulianDate components from the Gregorian date and actually create our instance.\n  var components = computeJulianDateComponents(\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    millisecond\n  );\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    result = new JulianDate(components[0], components[1], _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UTC */ .Z.UTC);\n  } else {\n    setComponents(components[0], components[1], result);\n    convertUtcToTai(result);\n  }\n\n  //If we were on a leap second, add it back.\n  if (isLeapSecond) {\n    JulianDate.addSeconds(result, 1, result);\n  }\n\n  return result;\n};\n\n/**\n * Creates a new instance that represents the current system time.\n * This is equivalent to calling <code>JulianDate.fromDate(new Date());</code>.\n *\n * @param {JulianDate} [result] An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter or a new instance if none was provided.\n */\nJulianDate.now = function (result) {\n  return JulianDate.fromDate(new Date(), result);\n};\n\nvar toGregorianDateScratch = new JulianDate(0, 0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI);\n\n/**\n * Creates a {@link GregorianDate} from the provided instance.\n *\n * @param {JulianDate} julianDate The date to be converted.\n * @param {GregorianDate} [result] An existing instance to use for the result.\n * @returns {GregorianDate} The modified result parameter or a new instance if none was provided.\n */\nJulianDate.toGregorianDate = function (julianDate, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("julianDate is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var isLeapSecond = false;\n  var thisUtc = convertTaiToUtc(julianDate, toGregorianDateScratch);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(thisUtc)) {\n    //Conversion to UTC will fail if we are during a leap second.\n    //If that\'s the case, subtract a second and convert again.\n    //JavaScript doesn\'t support leap seconds, so this results in second 59 being repeated twice.\n    JulianDate.addSeconds(julianDate, -1, toGregorianDateScratch);\n    thisUtc = convertTaiToUtc(toGregorianDateScratch, toGregorianDateScratch);\n    isLeapSecond = true;\n  }\n\n  var julianDayNumber = thisUtc.dayNumber;\n  var secondsOfDay = thisUtc.secondsOfDay;\n\n  if (secondsOfDay >= 43200.0) {\n    julianDayNumber += 1;\n  }\n\n  // Algorithm from page 604 of the Explanatory Supplement to the\n  // Astronomical Almanac (Seidelmann 1992).\n  var L = (julianDayNumber + 68569) | 0;\n  var N = ((4 * L) / 146097) | 0;\n  L = (L - (((146097 * N + 3) / 4) | 0)) | 0;\n  var I = ((4000 * (L + 1)) / 1461001) | 0;\n  L = (L - (((1461 * I) / 4) | 0) + 31) | 0;\n  var J = ((80 * L) / 2447) | 0;\n  var day = (L - (((2447 * J) / 80) | 0)) | 0;\n  L = (J / 11) | 0;\n  var month = (J + 2 - 12 * L) | 0;\n  var year = (100 * (N - 49) + I + L) | 0;\n\n  var hour = (secondsOfDay / _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_HOUR */ .Z.SECONDS_PER_HOUR) | 0;\n  var remainingSeconds = secondsOfDay - hour * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_HOUR */ .Z.SECONDS_PER_HOUR;\n  var minute = (remainingSeconds / _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_MINUTE */ .Z.SECONDS_PER_MINUTE) | 0;\n  remainingSeconds =\n    remainingSeconds - minute * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_MINUTE */ .Z.SECONDS_PER_MINUTE;\n  var second = remainingSeconds | 0;\n  var millisecond =\n    (remainingSeconds - second) / _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_MILLISECOND */ .Z.SECONDS_PER_MILLISECOND;\n\n  // JulianDates are noon-based\n  hour += 12;\n  if (hour > 23) {\n    hour -= 24;\n  }\n\n  //If we were on a leap second, add it back.\n  if (isLeapSecond) {\n    second += 1;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    return new _GregorianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      year,\n      month,\n      day,\n      hour,\n      minute,\n      second,\n      millisecond,\n      isLeapSecond\n    );\n  }\n\n  result.year = year;\n  result.month = month;\n  result.day = day;\n  result.hour = hour;\n  result.minute = minute;\n  result.second = second;\n  result.millisecond = millisecond;\n  result.isLeapSecond = isLeapSecond;\n  return result;\n};\n\n/**\n * Creates a JavaScript Date from the provided instance.\n * Since JavaScript dates are only accurate to the nearest millisecond and\n * cannot represent a leap second, consider using {@link JulianDate.toGregorianDate} instead.\n * If the provided JulianDate is during a leap second, the previous second is used.\n *\n * @param {JulianDate} julianDate The date to be converted.\n * @returns {Date} A new instance representing the provided date.\n */\nJulianDate.toDate = function (julianDate) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("julianDate is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var gDate = JulianDate.toGregorianDate(julianDate, gregorianDateScratch);\n  var second = gDate.second;\n  if (gDate.isLeapSecond) {\n    second -= 1;\n  }\n  return new Date(\n    Date.UTC(\n      gDate.year,\n      gDate.month - 1,\n      gDate.day,\n      gDate.hour,\n      gDate.minute,\n      second,\n      gDate.millisecond\n    )\n  );\n};\n\n/**\n * Creates an ISO8601 representation of the provided date.\n *\n * @param {JulianDate} julianDate The date to be converted.\n * @param {Number} [precision] The number of fractional digits used to represent the seconds component.  By default, the most precise representation is used.\n * @returns {String} The ISO8601 representation of the provided date.\n */\nJulianDate.toIso8601 = function (julianDate, precision) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("julianDate is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var gDate = JulianDate.toGregorianDate(julianDate, gregorianDateScratch);\n  var year = gDate.year;\n  var month = gDate.month;\n  var day = gDate.day;\n  var hour = gDate.hour;\n  var minute = gDate.minute;\n  var second = gDate.second;\n  var millisecond = gDate.millisecond;\n\n  // special case - Iso8601.MAXIMUM_VALUE produces a string which we can\'t parse unless we adjust.\n  // 10000-01-01T00:00:00 is the same instant as 9999-12-31T24:00:00\n  if (\n    year === 10000 &&\n    month === 1 &&\n    day === 1 &&\n    hour === 0 &&\n    minute === 0 &&\n    second === 0 &&\n    millisecond === 0\n  ) {\n    year = 9999;\n    month = 12;\n    day = 31;\n    hour = 24;\n  }\n\n  var millisecondStr;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(precision) && millisecond !== 0) {\n    //Forces milliseconds into a number with at least 3 digits to whatever the default toString() precision is.\n    millisecondStr = (millisecond * 0.01).toString().replace(".", "");\n    return (\n      year.toString().padStart(4, "0") +\n      "-" +\n      month.toString().padStart(2, "0") +\n      "-" +\n      day.toString().padStart(2, "0") +\n      "T" +\n      hour.toString().padStart(2, "0") +\n      ":" +\n      minute.toString().padStart(2, "0") +\n      ":" +\n      second.toString().padStart(2, "0") +\n      "." +\n      millisecondStr +\n      "Z"\n    );\n  }\n\n  //Precision is either 0 or milliseconds is 0 with undefined precision, in either case, leave off milliseconds entirely\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(precision) || precision === 0) {\n    return (\n      year.toString().padStart(4, "0") +\n      "-" +\n      month.toString().padStart(2, "0") +\n      "-" +\n      day.toString().padStart(2, "0") +\n      "T" +\n      hour.toString().padStart(2, "0") +\n      ":" +\n      minute.toString().padStart(2, "0") +\n      ":" +\n      second.toString().padStart(2, "0") +\n      "Z"\n    );\n  }\n\n  //Forces milliseconds into a number with at least 3 digits to whatever the specified precision is.\n  millisecondStr = (millisecond * 0.01)\n    .toFixed(precision)\n    .replace(".", "")\n    .slice(0, precision);\n  return (\n    year.toString().padStart(4, "0") +\n    "-" +\n    month.toString().padStart(2, "0") +\n    "-" +\n    day.toString().padStart(2, "0") +\n    "T" +\n    hour.toString().padStart(2, "0") +\n    ":" +\n    minute.toString().padStart(2, "0") +\n    ":" +\n    second.toString().padStart(2, "0") +\n    "." +\n    millisecondStr +\n    "Z"\n  );\n};\n\n/**\n * Duplicates a JulianDate instance.\n *\n * @param {JulianDate} julianDate The date to duplicate.\n * @param {JulianDate} [result] An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter or a new instance if none was provided. Returns undefined if julianDate is undefined.\n */\nJulianDate.clone = function (julianDate, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    return undefined;\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    return new JulianDate(\n      julianDate.dayNumber,\n      julianDate.secondsOfDay,\n      _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI\n    );\n  }\n  result.dayNumber = julianDate.dayNumber;\n  result.secondsOfDay = julianDate.secondsOfDay;\n  return result;\n};\n\n/**\n * Compares two instances.\n *\n * @param {JulianDate} left The first instance.\n * @param {JulianDate} right The second instance.\n * @returns {Number} A negative value if left is less than right, a positive value if left is greater than right, or zero if left and right are equal.\n */\nJulianDate.compare = function (left, right) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(left)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("left is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("right is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var julianDayNumberDifference = left.dayNumber - right.dayNumber;\n  if (julianDayNumberDifference !== 0) {\n    return julianDayNumberDifference;\n  }\n  return left.secondsOfDay - right.secondsOfDay;\n};\n\n/**\n * Compares two instances and returns <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {JulianDate} [left] The first instance.\n * @param {JulianDate} [right] The second instance.\n * @returns {Boolean} <code>true</code> if the dates are equal; otherwise, <code>false</code>.\n */\nJulianDate.equals = function (left, right) {\n  return (\n    left === right ||\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(left) &&\n      (0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right) &&\n      left.dayNumber === right.dayNumber &&\n      left.secondsOfDay === right.secondsOfDay)\n  );\n};\n\n/**\n * Compares two instances and returns <code>true</code> if they are within <code>epsilon</code> seconds of\n * each other.  That is, in order for the dates to be considered equal (and for\n * this function to return <code>true</code>), the absolute value of the difference between them, in\n * seconds, must be less than <code>epsilon</code>.\n *\n * @param {JulianDate} [left] The first instance.\n * @param {JulianDate} [right] The second instance.\n * @param {Number} [epsilon=0] The maximum number of seconds that should separate the two instances.\n * @returns {Boolean} <code>true</code> if the two dates are within <code>epsilon</code> seconds of each other; otherwise <code>false</code>.\n */\nJulianDate.equalsEpsilon = function (left, right, epsilon) {\n  epsilon = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(epsilon, 0);\n\n  return (\n    left === right ||\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(left) &&\n      (0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right) &&\n      Math.abs(JulianDate.secondsDifference(left, right)) <= epsilon)\n  );\n};\n\n/**\n * Computes the total number of whole and fractional days represented by the provided instance.\n *\n * @param {JulianDate} julianDate The date.\n * @returns {Number} The Julian date as single floating point number.\n */\nJulianDate.totalDays = function (julianDate) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("julianDate is required.");\n  }\n  //>>includeEnd(\'debug\');\n  return (\n    julianDate.dayNumber +\n    julianDate.secondsOfDay / _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY\n  );\n};\n\n/**\n * Computes the difference in seconds between the provided instance.\n *\n * @param {JulianDate} left The first instance.\n * @param {JulianDate} right The second instance.\n * @returns {Number} The difference, in seconds, when subtracting <code>right</code> from <code>left</code>.\n */\nJulianDate.secondsDifference = function (left, right) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(left)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("left is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("right is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var dayDifference =\n    (left.dayNumber - right.dayNumber) * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY;\n  return dayDifference + (left.secondsOfDay - right.secondsOfDay);\n};\n\n/**\n * Computes the difference in days between the provided instance.\n *\n * @param {JulianDate} left The first instance.\n * @param {JulianDate} right The second instance.\n * @returns {Number} The difference, in days, when subtracting <code>right</code> from <code>left</code>.\n */\nJulianDate.daysDifference = function (left, right) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(left)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("left is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(right)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("right is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var dayDifference = left.dayNumber - right.dayNumber;\n  var secondDifference =\n    (left.secondsOfDay - right.secondsOfDay) / _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_DAY */ .Z.SECONDS_PER_DAY;\n  return dayDifference + secondDifference;\n};\n\n/**\n * Computes the number of seconds the provided instance is ahead of UTC.\n *\n * @param {JulianDate} julianDate The date.\n * @returns {Number} The number of seconds the provided instance is ahead of UTC\n */\nJulianDate.computeTaiMinusUtc = function (julianDate) {\n  binarySearchScratchLeapSecond.julianDate = julianDate;\n  var leapSeconds = JulianDate.leapSeconds;\n  var index = (0,_binarySearch_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    leapSeconds,\n    binarySearchScratchLeapSecond,\n    compareLeapSecondDates\n  );\n  if (index < 0) {\n    index = ~index;\n    --index;\n    if (index < 0) {\n      index = 0;\n    }\n  }\n  return leapSeconds[index].offset;\n};\n\n/**\n * Adds the provided number of seconds to the provided date instance.\n *\n * @param {JulianDate} julianDate The date.\n * @param {Number} seconds The number of seconds to add or subtract.\n * @param {JulianDate} result An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter.\n */\nJulianDate.addSeconds = function (julianDate, seconds, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("julianDate is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(seconds)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("seconds is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("result is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return setComponents(\n    julianDate.dayNumber,\n    julianDate.secondsOfDay + seconds,\n    result\n  );\n};\n\n/**\n * Adds the provided number of minutes to the provided date instance.\n *\n * @param {JulianDate} julianDate The date.\n * @param {Number} minutes The number of minutes to add or subtract.\n * @param {JulianDate} result An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter.\n */\nJulianDate.addMinutes = function (julianDate, minutes, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("julianDate is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(minutes)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("minutes is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("result is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var newSecondsOfDay =\n    julianDate.secondsOfDay + minutes * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_MINUTE */ .Z.SECONDS_PER_MINUTE;\n  return setComponents(julianDate.dayNumber, newSecondsOfDay, result);\n};\n\n/**\n * Adds the provided number of hours to the provided date instance.\n *\n * @param {JulianDate} julianDate The date.\n * @param {Number} hours The number of hours to add or subtract.\n * @param {JulianDate} result An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter.\n */\nJulianDate.addHours = function (julianDate, hours, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("julianDate is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(hours)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("hours is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("result is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var newSecondsOfDay =\n    julianDate.secondsOfDay + hours * _TimeConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SECONDS_PER_HOUR */ .Z.SECONDS_PER_HOUR;\n  return setComponents(julianDate.dayNumber, newSecondsOfDay, result);\n};\n\n/**\n * Adds the provided number of days to the provided date instance.\n *\n * @param {JulianDate} julianDate The date.\n * @param {Number} days The number of days to add or subtract.\n * @param {JulianDate} result An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter.\n */\nJulianDate.addDays = function (julianDate, days, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(julianDate)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("julianDate is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(days)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("days is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(result)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("result is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var newJulianDayNumber = julianDate.dayNumber + days;\n  return setComponents(newJulianDayNumber, julianDate.secondsOfDay, result);\n};\n\n/**\n * Compares the provided instances and returns <code>true</code> if <code>left</code> is earlier than <code>right</code>, <code>false</code> otherwise.\n *\n * @param {JulianDate} left The first instance.\n * @param {JulianDate} right The second instance.\n * @returns {Boolean} <code>true</code> if <code>left</code> is earlier than <code>right</code>, <code>false</code> otherwise.\n */\nJulianDate.lessThan = function (left, right) {\n  return JulianDate.compare(left, right) < 0;\n};\n\n/**\n * Compares the provided instances and returns <code>true</code> if <code>left</code> is earlier than or equal to <code>right</code>, <code>false</code> otherwise.\n *\n * @param {JulianDate} left The first instance.\n * @param {JulianDate} right The second instance.\n * @returns {Boolean} <code>true</code> if <code>left</code> is earlier than or equal to <code>right</code>, <code>false</code> otherwise.\n */\nJulianDate.lessThanOrEquals = function (left, right) {\n  return JulianDate.compare(left, right) <= 0;\n};\n\n/**\n * Compares the provided instances and returns <code>true</code> if <code>left</code> is later than <code>right</code>, <code>false</code> otherwise.\n *\n * @param {JulianDate} left The first instance.\n * @param {JulianDate} right The second instance.\n * @returns {Boolean} <code>true</code> if <code>left</code> is later than <code>right</code>, <code>false</code> otherwise.\n */\nJulianDate.greaterThan = function (left, right) {\n  return JulianDate.compare(left, right) > 0;\n};\n\n/**\n * Compares the provided instances and returns <code>true</code> if <code>left</code> is later than or equal to <code>right</code>, <code>false</code> otherwise.\n *\n * @param {JulianDate} left The first instance.\n * @param {JulianDate} right The second instance.\n * @returns {Boolean} <code>true</code> if <code>left</code> is later than or equal to <code>right</code>, <code>false</code> otherwise.\n */\nJulianDate.greaterThanOrEquals = function (left, right) {\n  return JulianDate.compare(left, right) >= 0;\n};\n\n/**\n * Duplicates this instance.\n *\n * @param {JulianDate} [result] An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter or a new instance if none was provided.\n */\nJulianDate.prototype.clone = function (result) {\n  return JulianDate.clone(this, result);\n};\n\n/**\n * Compares this and the provided instance and returns <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {JulianDate} [right] The second instance.\n * @returns {Boolean} <code>true</code> if the dates are equal; otherwise, <code>false</code>.\n */\nJulianDate.prototype.equals = function (right) {\n  return JulianDate.equals(this, right);\n};\n\n/**\n * Compares this and the provided instance and returns <code>true</code> if they are within <code>epsilon</code> seconds of\n * each other.  That is, in order for the dates to be considered equal (and for\n * this function to return <code>true</code>), the absolute value of the difference between them, in\n * seconds, must be less than <code>epsilon</code>.\n *\n * @param {JulianDate} [right] The second instance.\n * @param {Number} [epsilon=0] The maximum number of seconds that should separate the two instances.\n * @returns {Boolean} <code>true</code> if the two dates are within <code>epsilon</code> seconds of each other; otherwise <code>false</code>.\n */\nJulianDate.prototype.equalsEpsilon = function (right, epsilon) {\n  return JulianDate.equalsEpsilon(this, right, epsilon);\n};\n\n/**\n * Creates a string representing this date in ISO8601 format.\n *\n * @returns {String} A string representing this date in ISO8601 format.\n */\nJulianDate.prototype.toString = function () {\n  return JulianDate.toIso8601(this);\n};\n\n/**\n * Gets or sets the list of leap seconds used throughout Cesium.\n * @memberof JulianDate\n * @type {LeapSecond[]}\n */\nJulianDate.leapSeconds = [\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2441317, 43210.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 10), // January 1, 1972 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2441499, 43211.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 11), // July 1, 1972 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2441683, 43212.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 12), // January 1, 1973 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2442048, 43213.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 13), // January 1, 1974 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2442413, 43214.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 14), // January 1, 1975 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2442778, 43215.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 15), // January 1, 1976 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2443144, 43216.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 16), // January 1, 1977 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2443509, 43217.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 17), // January 1, 1978 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2443874, 43218.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 18), // January 1, 1979 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2444239, 43219.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 19), // January 1, 1980 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2444786, 43220.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 20), // July 1, 1981 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2445151, 43221.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 21), // July 1, 1982 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2445516, 43222.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 22), // July 1, 1983 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2446247, 43223.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 23), // July 1, 1985 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2447161, 43224.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 24), // January 1, 1988 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2447892, 43225.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 25), // January 1, 1990 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2448257, 43226.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 26), // January 1, 1991 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2448804, 43227.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 27), // July 1, 1992 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2449169, 43228.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 28), // July 1, 1993 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2449534, 43229.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 29), // July 1, 1994 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2450083, 43230.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 30), // January 1, 1996 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2450630, 43231.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 31), // July 1, 1997 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2451179, 43232.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 32), // January 1, 1999 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2453736, 43233.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 33), // January 1, 2006 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2454832, 43234.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 34), // January 1, 2009 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2456109, 43235.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 35), // July 1, 2012 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2457204, 43236.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 36), // July 1, 2015 00:00:00 UTC\n  new _LeapSecond_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(new JulianDate(2457754, 43237.0, _TimeStandard_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].TAI */ .Z.TAI), 37), // January 1, 2017 00:00:00 UTC\n];\n/* harmony default export */ __webpack_exports__["Z"] = (JulianDate);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUyOTMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBQ0E7QUFDVjtBQUNjO0FBQ0Y7QUFDTjtBQUNBO0FBQ007QUFDRjs7QUFFN0MsK0JBQStCLGtFQUFhO0FBQzVDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0NBQXdDLCtEQUFVOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxRUFBWTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUVBQVk7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQyxrR0FBNkI7QUFDL0Q7QUFDQSxrQkFBa0Isa0dBQTZCOztBQUUvQztBQUNBO0FBQ0Esb0JBQW9CLGtHQUE2QjtBQUNqRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxvR0FBOEI7QUFDMUMsZUFBZSx3R0FBZ0M7QUFDL0Msb0JBQW9CLGtIQUFxQzs7QUFFekQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhCQUE4QixFQUFFO0FBQ2hDO0FBQ0EsK0JBQStCLEVBQUUsTUFBTSxFQUFFO0FBQ3pDO0FBQ0EsNkJBQTZCLEVBQUUsT0FBTyxFQUFFO0FBQ3hDO0FBQ0EsMEJBQTBCLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRTtBQUMvQztBQUNBLDhCQUE4QixFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUU7QUFDbEQ7QUFDQSw4QkFBOEIsRUFBRSxRQUFRLEVBQUU7QUFDMUM7QUFDQSx1QkFBdUIsRUFBRTtBQUN6QjtBQUNBLDhCQUE4QixFQUFFLE9BQU8sRUFBRTtBQUN6QztBQUNBO0FBQ0EsUUFBUSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUU7O0FBRTVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVCQUF1QjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQSxvQkFBb0IscUVBQVk7QUFDaEMsaUJBQWlCLHFFQUFZO0FBQzdCLGlCQUFpQixxRUFBWSxlQUFlLHlFQUFnQjs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msa0dBQTZCOztBQUVqRTs7QUFFQSx1QkFBdUIseUVBQWdCO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsWUFBWTtBQUN6QjtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixrRUFBYTtBQUNyQyxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkLHdEQUF3RCx5RUFBZ0I7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsWUFBWTtBQUN6QjtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtRUFBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCx3REFBd0QseUVBQWdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQ0FBMEMsc0RBQXNEO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFlBQVk7QUFDdkIsYUFBYSxZQUFZO0FBQ3pCO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtRUFBYztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUVBQVU7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1FQUFjO0FBQ3BDO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0VBQU87QUFDeEIsaUJBQWlCLGdFQUFPO0FBQ3hCO0FBQ0Esd0JBQXdCLG1FQUFjO0FBQ3RDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0Esc0JBQXNCLG1FQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLG1FQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTSxnRUFBTztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUVBQWM7QUFDaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUVBQWM7QUFDbEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0Esb0JBQW9CLG1FQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUVBQWM7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sZ0VBQU87QUFDZCwwREFBMEQseUVBQWdCO0FBQzFFLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUVBQXVFO0FBQ3ZFO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrREFBa0QseUVBQWdCOztBQUVsRTtBQUNBLGNBQWMscUJBQXFCO0FBQ25DO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsZUFBZTtBQUMxQixhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkIsb0dBQThCO0FBQzNELCtDQUErQyxvR0FBOEI7QUFDN0UsbUNBQW1DLHdHQUFnQztBQUNuRTtBQUNBLGdDQUFnQyx3R0FBZ0M7QUFDaEU7QUFDQTtBQUNBLGtDQUFrQyxrSEFBcUM7O0FBRXZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTyxnRUFBTztBQUNkLGVBQWUsa0VBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGtDQUFrQztBQUNyRjtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU8sZ0VBQU87QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE9BQU8sZ0VBQU87QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhLFlBQVk7QUFDekI7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZDtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkO0FBQ0E7QUFDQTtBQUNBLE1BQU0seUVBQWdCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYSxTQUFTLDBDQUEwQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZ0VBQU87QUFDWixNQUFNLGdFQUFPO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTLDBGQUEwRjtBQUNoSDtBQUNBO0FBQ0EsWUFBWSxxRUFBWTs7QUFFeEI7QUFDQTtBQUNBLEtBQUssZ0VBQU87QUFDWixNQUFNLGdFQUFPO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsa0dBQTZCO0FBQzNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0EseUNBQXlDLGtHQUE2QjtBQUN0RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0NBQStDLGtHQUE2QjtBQUM1RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHFFQUFZO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFlBQVk7QUFDdkIsYUFBYSxZQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBOztBQUVBO0FBQ0Esd0NBQXdDLHdHQUFnQztBQUN4RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTs7QUFFQTtBQUNBLHNDQUFzQyxvR0FBOEI7QUFDcEU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsWUFBWTtBQUN2QixhQUFhLFlBQVk7QUFDekI7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnRUFBTztBQUNkLGNBQWMsbUVBQWM7QUFDNUI7QUFDQSxPQUFPLGdFQUFPO0FBQ2QsY0FBYyxtRUFBYztBQUM1QjtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhLFlBQVk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsU0FBUywwQ0FBMEM7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVMsMEZBQTBGO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRSxNQUFNLCtEQUFVLGtDQUFrQyx5RUFBZ0I7QUFDbEUsTUFBTSwrREFBVSxrQ0FBa0MseUVBQWdCO0FBQ2xFLE1BQU0sK0RBQVUsa0NBQWtDLHlFQUFnQjtBQUNsRTtBQUNBLHlEQUFlLFVBQVUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL0p1bGlhbkRhdGUuanM/NDViYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmluYXJ5U2VhcmNoIGZyb20gXCIuL2JpbmFyeVNlYXJjaC5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi9EZXZlbG9wZXJFcnJvci5qc1wiO1xuaW1wb3J0IEdyZWdvcmlhbkRhdGUgZnJvbSBcIi4vR3JlZ29yaWFuRGF0ZS5qc1wiO1xuaW1wb3J0IGlzTGVhcFllYXIgZnJvbSBcIi4vaXNMZWFwWWVhci5qc1wiO1xuaW1wb3J0IExlYXBTZWNvbmQgZnJvbSBcIi4vTGVhcFNlY29uZC5qc1wiO1xuaW1wb3J0IFRpbWVDb25zdGFudHMgZnJvbSBcIi4vVGltZUNvbnN0YW50cy5qc1wiO1xuaW1wb3J0IFRpbWVTdGFuZGFyZCBmcm9tIFwiLi9UaW1lU3RhbmRhcmQuanNcIjtcblxudmFyIGdyZWdvcmlhbkRhdGVTY3JhdGNoID0gbmV3IEdyZWdvcmlhbkRhdGUoKTtcbnZhciBkYXlzSW5Nb250aCA9IFszMSwgMjgsIDMxLCAzMCwgMzEsIDMwLCAzMSwgMzEsIDMwLCAzMSwgMzAsIDMxXTtcbnZhciBkYXlzSW5MZWFwRmVidXJhcnkgPSAyOTtcblxuZnVuY3Rpb24gY29tcGFyZUxlYXBTZWNvbmREYXRlcyhsZWFwU2Vjb25kLCBkYXRlVG9GaW5kKSB7XG4gIHJldHVybiBKdWxpYW5EYXRlLmNvbXBhcmUobGVhcFNlY29uZC5qdWxpYW5EYXRlLCBkYXRlVG9GaW5kLmp1bGlhbkRhdGUpO1xufVxuXG4vLyB3ZSBkb24ndCByZWFsbHkgbmVlZCBhIGxlYXAgc2Vjb25kIGluc3RhbmNlLCBhbnl0aGluZyB3aXRoIGEganVsaWFuRGF0ZSBwcm9wZXJ0eSB3aWxsIGRvXG52YXIgYmluYXJ5U2VhcmNoU2NyYXRjaExlYXBTZWNvbmQgPSBuZXcgTGVhcFNlY29uZCgpO1xuXG5mdW5jdGlvbiBjb252ZXJ0VXRjVG9UYWkoanVsaWFuRGF0ZSkge1xuICAvL0V2ZW4gdGhvdWdoIGp1bGlhbkRhdGUgaXMgaW4gVVRDLCB3ZSdsbCB0cmVhdCBpdCBhcyBUQUkgYW5kXG4gIC8vc2VhcmNoIHRoZSBsZWFwIHNlY29uZCB0YWJsZSBmb3IgaXQuXG4gIGJpbmFyeVNlYXJjaFNjcmF0Y2hMZWFwU2Vjb25kLmp1bGlhbkRhdGUgPSBqdWxpYW5EYXRlO1xuICB2YXIgbGVhcFNlY29uZHMgPSBKdWxpYW5EYXRlLmxlYXBTZWNvbmRzO1xuICB2YXIgaW5kZXggPSBiaW5hcnlTZWFyY2goXG4gICAgbGVhcFNlY29uZHMsXG4gICAgYmluYXJ5U2VhcmNoU2NyYXRjaExlYXBTZWNvbmQsXG4gICAgY29tcGFyZUxlYXBTZWNvbmREYXRlc1xuICApO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICBpbmRleCA9IH5pbmRleDtcbiAgfVxuXG4gIGlmIChpbmRleCA+PSBsZWFwU2Vjb25kcy5sZW5ndGgpIHtcbiAgICBpbmRleCA9IGxlYXBTZWNvbmRzLmxlbmd0aCAtIDE7XG4gIH1cblxuICB2YXIgb2Zmc2V0ID0gbGVhcFNlY29uZHNbaW5kZXhdLm9mZnNldDtcbiAgaWYgKGluZGV4ID4gMCkge1xuICAgIC8vTm93IHdlIGhhdmUgdGhlIGluZGV4IG9mIHRoZSBjbG9zZXN0IGxlYXAgc2Vjb25kIHRoYXQgY29tZXMgb24gb3IgYWZ0ZXIgb3VyIFVUQyB0aW1lLlxuICAgIC8vSG93ZXZlciwgaWYgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgVVRDIGRhdGUgYmVpbmcgY29udmVydGVkIGFuZCB0aGUgVEFJXG4gICAgLy9kZWZpbmVkIGxlYXAgc2Vjb25kIGlzIGdyZWF0ZXIgdGhhbiB0aGUgb2Zmc2V0LCB3ZSBhcmUgb2ZmIGJ5IG9uZSBhbmQgbmVlZCB0byB1c2VcbiAgICAvL3RoZSBwcmV2aW91cyBsZWFwIHNlY29uZC5cbiAgICB2YXIgZGlmZmVyZW5jZSA9IEp1bGlhbkRhdGUuc2Vjb25kc0RpZmZlcmVuY2UoXG4gICAgICBsZWFwU2Vjb25kc1tpbmRleF0uanVsaWFuRGF0ZSxcbiAgICAgIGp1bGlhbkRhdGVcbiAgICApO1xuICAgIGlmIChkaWZmZXJlbmNlID4gb2Zmc2V0KSB7XG4gICAgICBpbmRleC0tO1xuICAgICAgb2Zmc2V0ID0gbGVhcFNlY29uZHNbaW5kZXhdLm9mZnNldDtcbiAgICB9XG4gIH1cblxuICBKdWxpYW5EYXRlLmFkZFNlY29uZHMoanVsaWFuRGF0ZSwgb2Zmc2V0LCBqdWxpYW5EYXRlKTtcbn1cblxuZnVuY3Rpb24gY29udmVydFRhaVRvVXRjKGp1bGlhbkRhdGUsIHJlc3VsdCkge1xuICBiaW5hcnlTZWFyY2hTY3JhdGNoTGVhcFNlY29uZC5qdWxpYW5EYXRlID0ganVsaWFuRGF0ZTtcbiAgdmFyIGxlYXBTZWNvbmRzID0gSnVsaWFuRGF0ZS5sZWFwU2Vjb25kcztcbiAgdmFyIGluZGV4ID0gYmluYXJ5U2VhcmNoKFxuICAgIGxlYXBTZWNvbmRzLFxuICAgIGJpbmFyeVNlYXJjaFNjcmF0Y2hMZWFwU2Vjb25kLFxuICAgIGNvbXBhcmVMZWFwU2Vjb25kRGF0ZXNcbiAgKTtcbiAgaWYgKGluZGV4IDwgMCkge1xuICAgIGluZGV4ID0gfmluZGV4O1xuICB9XG5cbiAgLy9BbGwgdGltZXMgYmVmb3JlIG91ciBmaXJzdCBsZWFwIHNlY29uZCBnZXQgdGhlIGZpcnN0IG9mZnNldC5cbiAgaWYgKGluZGV4ID09PSAwKSB7XG4gICAgcmV0dXJuIEp1bGlhbkRhdGUuYWRkU2Vjb25kcyhqdWxpYW5EYXRlLCAtbGVhcFNlY29uZHNbMF0ub2Zmc2V0LCByZXN1bHQpO1xuICB9XG5cbiAgLy9BbGwgdGltZXMgYWZ0ZXIgb3VyIGxlYXAgc2Vjb25kIGdldCB0aGUgbGFzdCBvZmZzZXQuXG4gIGlmIChpbmRleCA+PSBsZWFwU2Vjb25kcy5sZW5ndGgpIHtcbiAgICByZXR1cm4gSnVsaWFuRGF0ZS5hZGRTZWNvbmRzKFxuICAgICAganVsaWFuRGF0ZSxcbiAgICAgIC1sZWFwU2Vjb25kc1tpbmRleCAtIDFdLm9mZnNldCxcbiAgICAgIHJlc3VsdFxuICAgICk7XG4gIH1cblxuICAvL0NvbXB1dGUgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZm91bmQgbGVhcCBzZWNvbmQgYW5kIHRoZSB0aW1lIHdlIGFyZSBjb252ZXJ0aW5nLlxuICB2YXIgZGlmZmVyZW5jZSA9IEp1bGlhbkRhdGUuc2Vjb25kc0RpZmZlcmVuY2UoXG4gICAgbGVhcFNlY29uZHNbaW5kZXhdLmp1bGlhbkRhdGUsXG4gICAganVsaWFuRGF0ZVxuICApO1xuXG4gIGlmIChkaWZmZXJlbmNlID09PSAwKSB7XG4gICAgLy9UaGUgZGF0ZSBpcyBpbiBvdXIgbGVhcCBzZWNvbmQgdGFibGUuXG4gICAgcmV0dXJuIEp1bGlhbkRhdGUuYWRkU2Vjb25kcyhcbiAgICAgIGp1bGlhbkRhdGUsXG4gICAgICAtbGVhcFNlY29uZHNbaW5kZXhdLm9mZnNldCxcbiAgICAgIHJlc3VsdFxuICAgICk7XG4gIH1cblxuICBpZiAoZGlmZmVyZW5jZSA8PSAxLjApIHtcbiAgICAvL1RoZSByZXF1ZXN0ZWQgZGF0ZSBpcyBkdXJpbmcgdGhlIG1vbWVudCBvZiBhIGxlYXAgc2Vjb25kLCB0aGVuIHdlIGNhbm5vdCBjb252ZXJ0IHRvIFVUQ1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvL1RoZSB0aW1lIGlzIGluIGJldHdlZW4gdHdvIGxlYXAgc2Vjb25kcywgaW5kZXggaXMgdGhlIGxlYXAgc2Vjb25kIGFmdGVyIHRoZSBkYXRlXG4gIC8vd2UncmUgY29udmVydGluZywgc28gd2Ugc3VidHJhY3Qgb25lIHRvIGdldCB0aGUgY29ycmVjdCBMZWFwU2Vjb25kIGluc3RhbmNlLlxuICByZXR1cm4gSnVsaWFuRGF0ZS5hZGRTZWNvbmRzKFxuICAgIGp1bGlhbkRhdGUsXG4gICAgLWxlYXBTZWNvbmRzWy0taW5kZXhdLm9mZnNldCxcbiAgICByZXN1bHRcbiAgKTtcbn1cblxuZnVuY3Rpb24gc2V0Q29tcG9uZW50cyh3aG9sZURheXMsIHNlY29uZHNPZkRheSwganVsaWFuRGF0ZSkge1xuICB2YXIgZXh0cmFEYXlzID0gKHNlY29uZHNPZkRheSAvIFRpbWVDb25zdGFudHMuU0VDT05EU19QRVJfREFZKSB8IDA7XG4gIHdob2xlRGF5cyArPSBleHRyYURheXM7XG4gIHNlY29uZHNPZkRheSAtPSBUaW1lQ29uc3RhbnRzLlNFQ09ORFNfUEVSX0RBWSAqIGV4dHJhRGF5cztcblxuICBpZiAoc2Vjb25kc09mRGF5IDwgMCkge1xuICAgIHdob2xlRGF5cy0tO1xuICAgIHNlY29uZHNPZkRheSArPSBUaW1lQ29uc3RhbnRzLlNFQ09ORFNfUEVSX0RBWTtcbiAgfVxuXG4gIGp1bGlhbkRhdGUuZGF5TnVtYmVyID0gd2hvbGVEYXlzO1xuICBqdWxpYW5EYXRlLnNlY29uZHNPZkRheSA9IHNlY29uZHNPZkRheTtcbiAgcmV0dXJuIGp1bGlhbkRhdGU7XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVKdWxpYW5EYXRlQ29tcG9uZW50cyhcbiAgeWVhcixcbiAgbW9udGgsXG4gIGRheSxcbiAgaG91cixcbiAgbWludXRlLFxuICBzZWNvbmQsXG4gIG1pbGxpc2Vjb25kXG4pIHtcbiAgLy8gQWxnb3JpdGhtIGZyb20gcGFnZSA2MDQgb2YgdGhlIEV4cGxhbmF0b3J5IFN1cHBsZW1lbnQgdG8gdGhlXG4gIC8vIEFzdHJvbm9taWNhbCBBbG1hbmFjIChTZWlkZWxtYW5uIDE5OTIpLlxuXG4gIHZhciBhID0gKChtb250aCAtIDE0KSAvIDEyKSB8IDA7XG4gIHZhciBiID0geWVhciArIDQ4MDAgKyBhO1xuICB2YXIgZGF5TnVtYmVyID1cbiAgICAoKCgxNDYxICogYikgLyA0KSB8IDApICtcbiAgICAoKCgzNjcgKiAobW9udGggLSAyIC0gMTIgKiBhKSkgLyAxMikgfCAwKSAtXG4gICAgKCgoMyAqICgoKGIgKyAxMDApIC8gMTAwKSB8IDApKSAvIDQpIHwgMCkgK1xuICAgIGRheSAtXG4gICAgMzIwNzU7XG5cbiAgLy8gSnVsaWFuRGF0ZXMgYXJlIG5vb24tYmFzZWRcbiAgaG91ciA9IGhvdXIgLSAxMjtcbiAgaWYgKGhvdXIgPCAwKSB7XG4gICAgaG91ciArPSAyNDtcbiAgfVxuXG4gIHZhciBzZWNvbmRzT2ZEYXkgPVxuICAgIHNlY29uZCArXG4gICAgKGhvdXIgKiBUaW1lQ29uc3RhbnRzLlNFQ09ORFNfUEVSX0hPVVIgK1xuICAgICAgbWludXRlICogVGltZUNvbnN0YW50cy5TRUNPTkRTX1BFUl9NSU5VVEUgK1xuICAgICAgbWlsbGlzZWNvbmQgKiBUaW1lQ29uc3RhbnRzLlNFQ09ORFNfUEVSX01JTExJU0VDT05EKTtcblxuICBpZiAoc2Vjb25kc09mRGF5ID49IDQzMjAwLjApIHtcbiAgICBkYXlOdW1iZXIgLT0gMTtcbiAgfVxuXG4gIHJldHVybiBbZGF5TnVtYmVyLCBzZWNvbmRzT2ZEYXldO1xufVxuXG4vL1JlZ3VsYXIgZXhwcmVzc2lvbnMgdXNlZCBmb3IgSVNPODYwMSBkYXRlIHBhcnNpbmcuXG4vL1lZWVlcbnZhciBtYXRjaENhbGVuZGFyWWVhciA9IC9eKFxcZHs0fSkkLztcbi8vWVlZWS1NTSAoWVlZWU1NIGlzIGludmFsaWQpXG52YXIgbWF0Y2hDYWxlbmRhck1vbnRoID0gL14oXFxkezR9KS0oXFxkezJ9KSQvO1xuLy9ZWVlZLURERCBvciBZWVlZREREXG52YXIgbWF0Y2hPcmRpbmFsRGF0ZSA9IC9eKFxcZHs0fSktPyhcXGR7M30pJC87XG4vL1lZWVktV3d3IG9yIFlZWVlXd3cgb3IgWVlZWS1Xd3ctRCBvciBZWVlZV3d3RFxudmFyIG1hdGNoV2Vla0RhdGUgPSAvXihcXGR7NH0pLT9XKFxcZHsyfSktPyhcXGR7MX0pPyQvO1xuLy9ZWVlZLU1NLUREIG9yIFlZWVlNTUREXG52YXIgbWF0Y2hDYWxlbmRhckRhdGUgPSAvXihcXGR7NH0pLT8oXFxkezJ9KS0/KFxcZHsyfSkkLztcbi8vIE1hdGNoIHV0YyBvZmZzZXRcbnZhciB1dGNPZmZzZXQgPSAvKFtaK1xcLV0pPyhcXGR7Mn0pPzo/KFxcZHsyfSk/JC87XG4vLyBNYXRjaCBob3VycyBISCBvciBISC54eHh4eFxudmFyIG1hdGNoSG91cnMgPSAvXihcXGR7Mn0pKFxcLlxcZCspPy8uc291cmNlICsgdXRjT2Zmc2V0LnNvdXJjZTtcbi8vIE1hdGNoIGhvdXJzL21pbnV0ZXMgSEg6TU0gSEhNTS54eHh4eFxudmFyIG1hdGNoSG91cnNNaW51dGVzID0gL14oXFxkezJ9KTo/KFxcZHsyfSkoXFwuXFxkKyk/Ly5zb3VyY2UgKyB1dGNPZmZzZXQuc291cmNlO1xuLy8gTWF0Y2ggaG91cnMvbWludXRlcyBISDpNTTpTUyBISE1NU1MueHh4eHhcbnZhciBtYXRjaEhvdXJzTWludXRlc1NlY29uZHMgPVxuICAvXihcXGR7Mn0pOj8oXFxkezJ9KTo/KFxcZHsyfSkoXFwuXFxkKyk/Ly5zb3VyY2UgKyB1dGNPZmZzZXQuc291cmNlO1xuXG52YXIgaXNvODYwMUVycm9yTWVzc2FnZSA9IFwiSW52YWxpZCBJU08gODYwMSBkYXRlLlwiO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYW4gYXN0cm9ub21pY2FsIEp1bGlhbiBkYXRlLCB3aGljaCBpcyB0aGUgbnVtYmVyIG9mIGRheXMgc2luY2Ugbm9vbiBvbiBKYW51YXJ5IDEsIC00NzEyICg0NzEzIEJDKS5cbiAqIEZvciBpbmNyZWFzZWQgcHJlY2lzaW9uLCB0aGlzIGNsYXNzIHN0b3JlcyB0aGUgd2hvbGUgbnVtYmVyIHBhcnQgb2YgdGhlIGRhdGUgYW5kIHRoZSBzZWNvbmRzXG4gKiBwYXJ0IG9mIHRoZSBkYXRlIGluIHNlcGFyYXRlIGNvbXBvbmVudHMuICBJbiBvcmRlciB0byBiZSBzYWZlIGZvciBhcml0aG1ldGljIGFuZCByZXByZXNlbnRcbiAqIGxlYXAgc2Vjb25kcywgdGhlIGRhdGUgaXMgYWx3YXlzIHN0b3JlZCBpbiB0aGUgSW50ZXJuYXRpb25hbCBBdG9taWMgVGltZSBzdGFuZGFyZFxuICoge0BsaW5rIFRpbWVTdGFuZGFyZC5UQUl9LlxuICogQGFsaWFzIEp1bGlhbkRhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBbanVsaWFuRGF5TnVtYmVyPTAuMF0gVGhlIEp1bGlhbiBEYXkgTnVtYmVyIHJlcHJlc2VudGluZyB0aGUgbnVtYmVyIG9mIHdob2xlIGRheXMuICBGcmFjdGlvbmFsIGRheXMgd2lsbCBhbHNvIGJlIGhhbmRsZWQgY29ycmVjdGx5LlxuICogQHBhcmFtIHtOdW1iZXJ9IFtzZWNvbmRzT2ZEYXk9MC4wXSBUaGUgbnVtYmVyIG9mIHNlY29uZHMgaW50byB0aGUgY3VycmVudCBKdWxpYW4gRGF5IE51bWJlci4gIEZyYWN0aW9uYWwgc2Vjb25kcywgbmVnYXRpdmUgc2Vjb25kcyBhbmQgc2Vjb25kcyBncmVhdGVyIHRoYW4gYSBkYXkgd2lsbCBiZSBoYW5kbGVkIGNvcnJlY3RseS5cbiAqIEBwYXJhbSB7VGltZVN0YW5kYXJkfSBbdGltZVN0YW5kYXJkPVRpbWVTdGFuZGFyZC5VVENdIFRoZSB0aW1lIHN0YW5kYXJkIGluIHdoaWNoIHRoZSBmaXJzdCB0d28gcGFyYW1ldGVycyBhcmUgZGVmaW5lZC5cbiAqL1xuZnVuY3Rpb24gSnVsaWFuRGF0ZShqdWxpYW5EYXlOdW1iZXIsIHNlY29uZHNPZkRheSwgdGltZVN0YW5kYXJkKSB7XG4gIC8qKlxuICAgKiBHZXRzIG9yIHNldHMgdGhlIG51bWJlciBvZiB3aG9sZSBkYXlzLlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgdGhpcy5kYXlOdW1iZXIgPSB1bmRlZmluZWQ7XG5cbiAgLyoqXG4gICAqIEdldHMgb3Igc2V0cyB0aGUgbnVtYmVyIG9mIHNlY29uZHMgaW50byB0aGUgY3VycmVudCBkYXkuXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICB0aGlzLnNlY29uZHNPZkRheSA9IHVuZGVmaW5lZDtcblxuICBqdWxpYW5EYXlOdW1iZXIgPSBkZWZhdWx0VmFsdWUoanVsaWFuRGF5TnVtYmVyLCAwLjApO1xuICBzZWNvbmRzT2ZEYXkgPSBkZWZhdWx0VmFsdWUoc2Vjb25kc09mRGF5LCAwLjApO1xuICB0aW1lU3RhbmRhcmQgPSBkZWZhdWx0VmFsdWUodGltZVN0YW5kYXJkLCBUaW1lU3RhbmRhcmQuVVRDKTtcblxuICAvL0lmIGp1bGlhbkRheU51bWJlciBpcyBmcmFjdGlvbmFsLCBtYWtlIGl0IGFuIGludGVnZXIgYW5kIGFkZCB0aGUgbnVtYmVyIG9mIHNlY29uZHMgdGhlIGZyYWN0aW9uIHJlcHJlc2VudGVkLlxuICB2YXIgd2hvbGVEYXlzID0ganVsaWFuRGF5TnVtYmVyIHwgMDtcbiAgc2Vjb25kc09mRGF5ID1cbiAgICBzZWNvbmRzT2ZEYXkgK1xuICAgIChqdWxpYW5EYXlOdW1iZXIgLSB3aG9sZURheXMpICogVGltZUNvbnN0YW50cy5TRUNPTkRTX1BFUl9EQVk7XG5cbiAgc2V0Q29tcG9uZW50cyh3aG9sZURheXMsIHNlY29uZHNPZkRheSwgdGhpcyk7XG5cbiAgaWYgKHRpbWVTdGFuZGFyZCA9PT0gVGltZVN0YW5kYXJkLlVUQykge1xuICAgIGNvbnZlcnRVdGNUb1RhaSh0aGlzKTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgaW5zdGFuY2UgZnJvbSBhIEdyZWdvcmlhbkRhdGUuXG4gKlxuICogQHBhcmFtIHtHcmVnb3JpYW5EYXRlfSBkYXRlIEEgR3JlZ29yaWFuRGF0ZS5cbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gW3Jlc3VsdF0gQW4gZXhpc3RpbmcgaW5zdGFuY2UgdG8gdXNlIGZvciB0aGUgcmVzdWx0LlxuICogQHJldHVybnMge0p1bGlhbkRhdGV9IFRoZSBtb2RpZmllZCByZXN1bHQgcGFyYW1ldGVyIG9yIGEgbmV3IGluc3RhbmNlIGlmIG5vbmUgd2FzIHByb3ZpZGVkLlxuICpcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBkYXRlIG11c3QgYmUgYSB2YWxpZCBHcmVnb3JpYW5EYXRlLlxuICovXG5KdWxpYW5EYXRlLmZyb21HcmVnb3JpYW5EYXRlID0gZnVuY3Rpb24gKGRhdGUsIHJlc3VsdCkge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIShkYXRlIGluc3RhbmNlb2YgR3JlZ29yaWFuRGF0ZSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJkYXRlIG11c3QgYmUgYSB2YWxpZCBHcmVnb3JpYW5EYXRlLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB2YXIgY29tcG9uZW50cyA9IGNvbXB1dGVKdWxpYW5EYXRlQ29tcG9uZW50cyhcbiAgICBkYXRlLnllYXIsXG4gICAgZGF0ZS5tb250aCxcbiAgICBkYXRlLmRheSxcbiAgICBkYXRlLmhvdXIsXG4gICAgZGF0ZS5taW51dGUsXG4gICAgZGF0ZS5zZWNvbmQsXG4gICAgZGF0ZS5taWxsaXNlY29uZFxuICApO1xuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHJldHVybiBuZXcgSnVsaWFuRGF0ZShjb21wb25lbnRzWzBdLCBjb21wb25lbnRzWzFdLCBUaW1lU3RhbmRhcmQuVVRDKTtcbiAgfVxuICBzZXRDb21wb25lbnRzKGNvbXBvbmVudHNbMF0sIGNvbXBvbmVudHNbMV0sIHJlc3VsdCk7XG4gIGNvbnZlcnRVdGNUb1RhaShyZXN1bHQpO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IGluc3RhbmNlIGZyb20gYSBKYXZhU2NyaXB0IERhdGUuXG4gKlxuICogQHBhcmFtIHtEYXRlfSBkYXRlIEEgSmF2YVNjcmlwdCBEYXRlLlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBbcmVzdWx0XSBBbiBleGlzdGluZyBpbnN0YW5jZSB0byB1c2UgZm9yIHRoZSByZXN1bHQuXG4gKiBAcmV0dXJucyB7SnVsaWFuRGF0ZX0gVGhlIG1vZGlmaWVkIHJlc3VsdCBwYXJhbWV0ZXIgb3IgYSBuZXcgaW5zdGFuY2UgaWYgbm9uZSB3YXMgcHJvdmlkZWQuXG4gKlxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IGRhdGUgbXVzdCBiZSBhIHZhbGlkIEphdmFTY3JpcHQgRGF0ZS5cbiAqL1xuSnVsaWFuRGF0ZS5mcm9tRGF0ZSA9IGZ1bmN0aW9uIChkYXRlLCByZXN1bHQpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCEoZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHx8IGlzTmFOKGRhdGUuZ2V0VGltZSgpKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImRhdGUgbXVzdCBiZSBhIHZhbGlkIEphdmFTY3JpcHQgRGF0ZS5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIGNvbXBvbmVudHMgPSBjb21wdXRlSnVsaWFuRGF0ZUNvbXBvbmVudHMoXG4gICAgZGF0ZS5nZXRVVENGdWxsWWVhcigpLFxuICAgIGRhdGUuZ2V0VVRDTW9udGgoKSArIDEsXG4gICAgZGF0ZS5nZXRVVENEYXRlKCksXG4gICAgZGF0ZS5nZXRVVENIb3VycygpLFxuICAgIGRhdGUuZ2V0VVRDTWludXRlcygpLFxuICAgIGRhdGUuZ2V0VVRDU2Vjb25kcygpLFxuICAgIGRhdGUuZ2V0VVRDTWlsbGlzZWNvbmRzKClcbiAgKTtcbiAgaWYgKCFkZWZpbmVkKHJlc3VsdCkpIHtcbiAgICByZXR1cm4gbmV3IEp1bGlhbkRhdGUoY29tcG9uZW50c1swXSwgY29tcG9uZW50c1sxXSwgVGltZVN0YW5kYXJkLlVUQyk7XG4gIH1cbiAgc2V0Q29tcG9uZW50cyhjb21wb25lbnRzWzBdLCBjb21wb25lbnRzWzFdLCByZXN1bHQpO1xuICBjb252ZXJ0VXRjVG9UYWkocmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBpbnN0YW5jZSBmcm9tIGEgZnJvbSBhbiB7QGxpbmsgaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9JU09fODYwMXxJU08gODYwMX0gZGF0ZS5cbiAqIFRoaXMgbWV0aG9kIGlzIHN1cGVyaW9yIHRvIDxjb2RlPkRhdGUucGFyc2U8L2NvZGU+IGJlY2F1c2UgaXQgd2lsbCBoYW5kbGUgYWxsIHZhbGlkIGZvcm1hdHMgZGVmaW5lZCBieSB0aGUgSVNPIDg2MDFcbiAqIHNwZWNpZmljYXRpb24sIGluY2x1ZGluZyBsZWFwIHNlY29uZHMgYW5kIHN1Yi1taWxsaXNlY29uZCB0aW1lcywgd2hpY2ggZGlzY2FyZGVkIGJ5IG1vc3QgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbnMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGlzbzg2MDFTdHJpbmcgQW4gSVNPIDg2MDEgZGF0ZS5cbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gW3Jlc3VsdF0gQW4gZXhpc3RpbmcgaW5zdGFuY2UgdG8gdXNlIGZvciB0aGUgcmVzdWx0LlxuICogQHJldHVybnMge0p1bGlhbkRhdGV9IFRoZSBtb2RpZmllZCByZXN1bHQgcGFyYW1ldGVyIG9yIGEgbmV3IGluc3RhbmNlIGlmIG5vbmUgd2FzIHByb3ZpZGVkLlxuICpcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBJbnZhbGlkIElTTyA4NjAxIGRhdGUuXG4gKi9cbkp1bGlhbkRhdGUuZnJvbUlzbzg2MDEgPSBmdW5jdGlvbiAoaXNvODYwMVN0cmluZywgcmVzdWx0KSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICh0eXBlb2YgaXNvODYwMVN0cmluZyAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihpc284NjAxRXJyb3JNZXNzYWdlKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICAvL0NvbW1hIGFuZCBkZWNpbWFsIHBvaW50IGJvdGggaW5kaWNhdGUgYSBmcmFjdGlvbmFsIG51bWJlciBhY2NvcmRpbmcgdG8gSVNPIDg2MDEsXG4gIC8vc3RhcnQgb3V0IGJ5IGJsYW5rZXQgcmVwbGFjaW5nICwgd2l0aCAuIHdoaWNoIGlzIHRoZSBvbmx5IHZhbGlkIHN1Y2ggc3ltYm9sIGluIEpTLlxuICBpc284NjAxU3RyaW5nID0gaXNvODYwMVN0cmluZy5yZXBsYWNlKFwiLFwiLCBcIi5cIik7XG5cbiAgLy9TcGxpdCB0aGUgc3RyaW5nIGludG8gaXRzIGRhdGUgYW5kIHRpbWUgY29tcG9uZW50cywgZGVub3RlZCBieSBhIG1hbmRhdG9yeSBUXG4gIHZhciB0b2tlbnMgPSBpc284NjAxU3RyaW5nLnNwbGl0KFwiVFwiKTtcbiAgdmFyIHllYXI7XG4gIHZhciBtb250aCA9IDE7XG4gIHZhciBkYXkgPSAxO1xuICB2YXIgaG91ciA9IDA7XG4gIHZhciBtaW51dGUgPSAwO1xuICB2YXIgc2Vjb25kID0gMDtcbiAgdmFyIG1pbGxpc2Vjb25kID0gMDtcblxuICAvL0xhY2tpbmcgYSB0aW1lIGlzIG9rYXksIGJ1dCBhIG1pc3NpbmcgZGF0ZSBpcyBpbGxlZ2FsLlxuICB2YXIgZGF0ZSA9IHRva2Vuc1swXTtcbiAgdmFyIHRpbWUgPSB0b2tlbnNbMV07XG4gIHZhciB0bXA7XG4gIHZhciBpbkxlYXBZZWFyO1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIWRlZmluZWQoZGF0ZSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoaXNvODYwMUVycm9yTWVzc2FnZSk7XG4gIH1cblxuICB2YXIgZGFzaENvdW50O1xuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICAvL0ZpcnN0IG1hdGNoIHRoZSBkYXRlIGFnYWluc3QgcG9zc2libGUgcmVndWxhciBleHByZXNzaW9ucy5cbiAgdG9rZW5zID0gZGF0ZS5tYXRjaChtYXRjaENhbGVuZGFyRGF0ZSk7XG4gIGlmICh0b2tlbnMgIT09IG51bGwpIHtcbiAgICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICAgIGRhc2hDb3VudCA9IGRhdGUuc3BsaXQoXCItXCIpLmxlbmd0aCAtIDE7XG4gICAgaWYgKGRhc2hDb3VudCA+IDAgJiYgZGFzaENvdW50ICE9PSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoaXNvODYwMUVycm9yTWVzc2FnZSk7XG4gICAgfVxuICAgIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuICAgIHllYXIgPSArdG9rZW5zWzFdO1xuICAgIG1vbnRoID0gK3Rva2Vuc1syXTtcbiAgICBkYXkgPSArdG9rZW5zWzNdO1xuICB9IGVsc2Uge1xuICAgIHRva2VucyA9IGRhdGUubWF0Y2gobWF0Y2hDYWxlbmRhck1vbnRoKTtcbiAgICBpZiAodG9rZW5zICE9PSBudWxsKSB7XG4gICAgICB5ZWFyID0gK3Rva2Vuc1sxXTtcbiAgICAgIG1vbnRoID0gK3Rva2Vuc1syXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdG9rZW5zID0gZGF0ZS5tYXRjaChtYXRjaENhbGVuZGFyWWVhcik7XG4gICAgICBpZiAodG9rZW5zICE9PSBudWxsKSB7XG4gICAgICAgIHllYXIgPSArdG9rZW5zWzFdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy9Ob3QgYSB5ZWFyL21vbnRoL2RheSBzbyBpdCBtdXN0IGJlIGFuIG9yZGluYWwgZGF0ZS5cbiAgICAgICAgdmFyIGRheU9mWWVhcjtcbiAgICAgICAgdG9rZW5zID0gZGF0ZS5tYXRjaChtYXRjaE9yZGluYWxEYXRlKTtcbiAgICAgICAgaWYgKHRva2VucyAhPT0gbnVsbCkge1xuICAgICAgICAgIHllYXIgPSArdG9rZW5zWzFdO1xuICAgICAgICAgIGRheU9mWWVhciA9ICt0b2tlbnNbMl07XG4gICAgICAgICAgaW5MZWFwWWVhciA9IGlzTGVhcFllYXIoeWVhcik7XG5cbiAgICAgICAgICAvL1RoaXMgdmFsaWRhdGlvbiBpcyBvbmx5IGFwcGxpY2FibGUgZm9yIHRoaXMgZm9ybWF0LlxuICAgICAgICAgIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgZGF5T2ZZZWFyIDwgMSB8fFxuICAgICAgICAgICAgKGluTGVhcFllYXIgJiYgZGF5T2ZZZWFyID4gMzY2KSB8fFxuICAgICAgICAgICAgKCFpbkxlYXBZZWFyICYmIGRheU9mWWVhciA+IDM2NSlcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihpc284NjAxRXJyb3JNZXNzYWdlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0b2tlbnMgPSBkYXRlLm1hdGNoKG1hdGNoV2Vla0RhdGUpO1xuICAgICAgICAgIGlmICh0b2tlbnMgIT09IG51bGwpIHtcbiAgICAgICAgICAgIC8vSVNPIHdlZWsgZGF0ZSB0byBvcmRpbmFsIGRhdGUgZnJvbVxuICAgICAgICAgICAgLy9odHRwOi8vZW4ud2lraXBlZGlhLm9yZy93L2luZGV4LnBocD90aXRsZT1JU09fd2Vla19kYXRlJm9sZGlkPTQ3NDE3Njc3NVxuICAgICAgICAgICAgeWVhciA9ICt0b2tlbnNbMV07XG4gICAgICAgICAgICB2YXIgd2Vla051bWJlciA9ICt0b2tlbnNbMl07XG4gICAgICAgICAgICB2YXIgZGF5T2ZXZWVrID0gK3Rva2Vuc1szXSB8fCAwO1xuXG4gICAgICAgICAgICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICAgICAgICAgICAgZGFzaENvdW50ID0gZGF0ZS5zcGxpdChcIi1cIikubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgZGFzaENvdW50ID4gMCAmJlxuICAgICAgICAgICAgICAoKCFkZWZpbmVkKHRva2Vuc1szXSkgJiYgZGFzaENvdW50ICE9PSAxKSB8fFxuICAgICAgICAgICAgICAgIChkZWZpbmVkKHRva2Vuc1szXSkgJiYgZGFzaENvdW50ICE9PSAyKSlcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoaXNvODYwMUVycm9yTWVzc2FnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKVxuXG4gICAgICAgICAgICB2YXIgamFudWFyeTQgPSBuZXcgRGF0ZShEYXRlLlVUQyh5ZWFyLCAwLCA0KSk7XG4gICAgICAgICAgICBkYXlPZlllYXIgPSB3ZWVrTnVtYmVyICogNyArIGRheU9mV2VlayAtIGphbnVhcnk0LmdldFVUQ0RheSgpIC0gMztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy9Ob25lIG9mIG91ciByZWd1bGFyIGV4cHJlc3Npb25zIHN1Y2NlZWRlZCBpbiBwYXJzaW5nIHRoZSBkYXRlIHByb3Blcmx5LlxuICAgICAgICAgICAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihpc284NjAxRXJyb3JNZXNzYWdlKTtcbiAgICAgICAgICAgIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vU3BsaXQgYW4gb3JkaW5hbCBkYXRlIGludG8gbW9udGgvZGF5LlxuICAgICAgICB0bXAgPSBuZXcgRGF0ZShEYXRlLlVUQyh5ZWFyLCAwLCAxKSk7XG4gICAgICAgIHRtcC5zZXRVVENEYXRlKGRheU9mWWVhcik7XG4gICAgICAgIG1vbnRoID0gdG1wLmdldFVUQ01vbnRoKCkgKyAxO1xuICAgICAgICBkYXkgPSB0bXAuZ2V0VVRDRGF0ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vTm93IHRoYXQgd2UgaGF2ZSBhbGwgb2YgdGhlIGRhdGUgY29tcG9uZW50cywgdmFsaWRhdGUgdGhlbSB0byBtYWtlIHN1cmUgbm90aGluZyBpcyBvdXQgb2YgcmFuZ2UuXG4gIGluTGVhcFllYXIgPSBpc0xlYXBZZWFyKHllYXIpO1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoXG4gICAgbW9udGggPCAxIHx8XG4gICAgbW9udGggPiAxMiB8fFxuICAgIGRheSA8IDEgfHxcbiAgICAoKG1vbnRoICE9PSAyIHx8ICFpbkxlYXBZZWFyKSAmJiBkYXkgPiBkYXlzSW5Nb250aFttb250aCAtIDFdKSB8fFxuICAgIChpbkxlYXBZZWFyICYmIG1vbnRoID09PSAyICYmIGRheSA+IGRheXNJbkxlYXBGZWJ1cmFyeSlcbiAgKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKGlzbzg2MDFFcnJvck1lc3NhZ2UpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpXG5cbiAgLy9Ob3cgbW92ZSBvbnRvIHRoZSB0aW1lIHN0cmluZywgd2hpY2ggaXMgbXVjaCBzaW1wbGVyLlxuICAvL0lmIG5vIHRpbWUgaXMgc3BlY2lmaWVkLCBpdCBpcyBjb25zaWRlcmVkIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGRheSwgVVRDIHRvIG1hdGNoIEphdmFzY3JpcHQncyBpbXBsZW1lbnRhdGlvbi5cbiAgdmFyIG9mZnNldEluZGV4O1xuICBpZiAoZGVmaW5lZCh0aW1lKSkge1xuICAgIHRva2VucyA9IHRpbWUubWF0Y2gobWF0Y2hIb3Vyc01pbnV0ZXNTZWNvbmRzKTtcbiAgICBpZiAodG9rZW5zICE9PSBudWxsKSB7XG4gICAgICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICAgICAgZGFzaENvdW50ID0gdGltZS5zcGxpdChcIjpcIikubGVuZ3RoIC0gMTtcbiAgICAgIGlmIChkYXNoQ291bnQgPiAwICYmIGRhc2hDb3VudCAhPT0gMiAmJiBkYXNoQ291bnQgIT09IDMpIHtcbiAgICAgICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKGlzbzg2MDFFcnJvck1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJylcblxuICAgICAgaG91ciA9ICt0b2tlbnNbMV07XG4gICAgICBtaW51dGUgPSArdG9rZW5zWzJdO1xuICAgICAgc2Vjb25kID0gK3Rva2Vuc1szXTtcbiAgICAgIG1pbGxpc2Vjb25kID0gKyh0b2tlbnNbNF0gfHwgMCkgKiAxMDAwLjA7XG4gICAgICBvZmZzZXRJbmRleCA9IDU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRva2VucyA9IHRpbWUubWF0Y2gobWF0Y2hIb3Vyc01pbnV0ZXMpO1xuICAgICAgaWYgKHRva2VucyAhPT0gbnVsbCkge1xuICAgICAgICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICAgICAgICBkYXNoQ291bnQgPSB0aW1lLnNwbGl0KFwiOlwiKS5sZW5ndGggLSAxO1xuICAgICAgICBpZiAoZGFzaENvdW50ID4gMikge1xuICAgICAgICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihpc284NjAxRXJyb3JNZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKVxuXG4gICAgICAgIGhvdXIgPSArdG9rZW5zWzFdO1xuICAgICAgICBtaW51dGUgPSArdG9rZW5zWzJdO1xuICAgICAgICBzZWNvbmQgPSArKHRva2Vuc1szXSB8fCAwKSAqIDYwLjA7XG4gICAgICAgIG9mZnNldEluZGV4ID0gNDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRva2VucyA9IHRpbWUubWF0Y2gobWF0Y2hIb3Vycyk7XG4gICAgICAgIGlmICh0b2tlbnMgIT09IG51bGwpIHtcbiAgICAgICAgICBob3VyID0gK3Rva2Vuc1sxXTtcbiAgICAgICAgICBtaW51dGUgPSArKHRva2Vuc1syXSB8fCAwKSAqIDYwLjA7XG4gICAgICAgICAgb2Zmc2V0SW5kZXggPSAzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gICAgICAgICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKGlzbzg2MDFFcnJvck1lc3NhZ2UpO1xuICAgICAgICAgIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvL1ZhbGlkYXRlIHRoYXQgYWxsIHZhbHVlcyBhcmUgaW4gcHJvcGVyIHJhbmdlLiAgTWludXRlcyBhbmQgaG91cnMgaGF2ZSBzcGVjaWFsIGNhc2VzIGF0IDYwIGFuZCAyNC5cbiAgICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICAgIGlmIChcbiAgICAgIG1pbnV0ZSA+PSA2MCB8fFxuICAgICAgc2Vjb25kID49IDYxIHx8XG4gICAgICBob3VyID4gMjQgfHxcbiAgICAgIChob3VyID09PSAyNCAmJiAobWludXRlID4gMCB8fCBzZWNvbmQgPiAwIHx8IG1pbGxpc2Vjb25kID4gMCkpXG4gICAgKSB7XG4gICAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoaXNvODYwMUVycm9yTWVzc2FnZSk7XG4gICAgfVxuICAgIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gICAgLy9DaGVjayB0aGUgVVRDIG9mZnNldCB2YWx1ZSwgaWYgbm8gdmFsdWUgZXhpc3RzLCB1c2UgbG9jYWwgdGltZVxuICAgIC8vYSBaIGluZGljYXRlcyBVVEMsICsgb3IgLSBhcmUgb2Zmc2V0cy5cbiAgICB2YXIgb2Zmc2V0ID0gdG9rZW5zW29mZnNldEluZGV4XTtcbiAgICB2YXIgb2Zmc2V0SG91cnMgPSArdG9rZW5zW29mZnNldEluZGV4ICsgMV07XG4gICAgdmFyIG9mZnNldE1pbnV0ZXMgPSArKHRva2Vuc1tvZmZzZXRJbmRleCArIDJdIHx8IDApO1xuICAgIHN3aXRjaCAob2Zmc2V0KSB7XG4gICAgICBjYXNlIFwiK1wiOlxuICAgICAgICBob3VyID0gaG91ciAtIG9mZnNldEhvdXJzO1xuICAgICAgICBtaW51dGUgPSBtaW51dGUgLSBvZmZzZXRNaW51dGVzO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCItXCI6XG4gICAgICAgIGhvdXIgPSBob3VyICsgb2Zmc2V0SG91cnM7XG4gICAgICAgIG1pbnV0ZSA9IG1pbnV0ZSArIG9mZnNldE1pbnV0ZXM7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIlpcIjpcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBtaW51dGUgPVxuICAgICAgICAgIG1pbnV0ZSArXG4gICAgICAgICAgbmV3IERhdGUoXG4gICAgICAgICAgICBEYXRlLlVUQyh5ZWFyLCBtb250aCAtIDEsIGRheSwgaG91ciwgbWludXRlKVxuICAgICAgICAgICkuZ2V0VGltZXpvbmVPZmZzZXQoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgLy9JU084NjAxIGRlbm90ZXMgYSBsZWFwIHNlY29uZCBieSBhbnkgdGltZSBoYXZpbmcgYSBzZWNvbmRzIGNvbXBvbmVudCBvZiA2MCBzZWNvbmRzLlxuICAvL0lmIHRoYXQncyB0aGUgY2FzZSwgd2UgbmVlZCB0byB0ZW1wb3JhcmlseSBzdWJ0cmFjdCBhIHNlY29uZCBpbiBvcmRlciB0byBidWlsZCBhIFVUQyBkYXRlLlxuICAvL1RoZW4gd2UgYWRkIGl0IGJhY2sgaW4gYWZ0ZXIgY29udmVydGluZyB0byBUQUkuXG4gIHZhciBpc0xlYXBTZWNvbmQgPSBzZWNvbmQgPT09IDYwO1xuICBpZiAoaXNMZWFwU2Vjb25kKSB7XG4gICAgc2Vjb25kLS07XG4gIH1cblxuICAvL0V2ZW4gaWYgd2Ugc3VjY2Vzc2Z1bGx5IHBhcnNlZCB0aGUgc3RyaW5nIGludG8gaXRzIGNvbXBvbmVudHMsIGFmdGVyIGFwcGx5aW5nIFVUQyBvZmZzZXQgb3JcbiAgLy9zcGVjaWFsIGNhc2VzIGxpa2UgMjQ6MDA6MDAgZGVub3RpbmcgbWlkbmlnaHQsIHdlIG5lZWQgdG8gbm9ybWFsaXplIHRoZSBkYXRhIGFwcHJvcHJpYXRlbHkuXG5cbiAgLy9taWxsaXNlY29uZHMgY2FuIG5ldmVyIGJlIGdyZWF0ZXIgdGhhbiAxMDAwLCBhbmQgc2Vjb25kcyBjYW4ndCBiZSBhYm92ZSA2MCwgc28gd2Ugc3RhcnQgd2l0aCBtaW51dGVzXG4gIHdoaWxlIChtaW51dGUgPj0gNjApIHtcbiAgICBtaW51dGUgLT0gNjA7XG4gICAgaG91cisrO1xuICB9XG5cbiAgd2hpbGUgKGhvdXIgPj0gMjQpIHtcbiAgICBob3VyIC09IDI0O1xuICAgIGRheSsrO1xuICB9XG5cbiAgdG1wID0gaW5MZWFwWWVhciAmJiBtb250aCA9PT0gMiA/IGRheXNJbkxlYXBGZWJ1cmFyeSA6IGRheXNJbk1vbnRoW21vbnRoIC0gMV07XG4gIHdoaWxlIChkYXkgPiB0bXApIHtcbiAgICBkYXkgLT0gdG1wO1xuICAgIG1vbnRoKys7XG5cbiAgICBpZiAobW9udGggPiAxMikge1xuICAgICAgbW9udGggLT0gMTI7XG4gICAgICB5ZWFyKys7XG4gICAgfVxuXG4gICAgdG1wID1cbiAgICAgIGluTGVhcFllYXIgJiYgbW9udGggPT09IDIgPyBkYXlzSW5MZWFwRmVidXJhcnkgOiBkYXlzSW5Nb250aFttb250aCAtIDFdO1xuICB9XG5cbiAgLy9JZiBVVEMgb2Zmc2V0IGlzIGF0IHRoZSBiZWdpbm5pbmcvZW5kIG9mIHRoZSBkYXksIG1pbnV0ZXMgY2FuIGJlIG5lZ2F0aXZlLlxuICB3aGlsZSAobWludXRlIDwgMCkge1xuICAgIG1pbnV0ZSArPSA2MDtcbiAgICBob3VyLS07XG4gIH1cblxuICB3aGlsZSAoaG91ciA8IDApIHtcbiAgICBob3VyICs9IDI0O1xuICAgIGRheS0tO1xuICB9XG5cbiAgd2hpbGUgKGRheSA8IDEpIHtcbiAgICBtb250aC0tO1xuICAgIGlmIChtb250aCA8IDEpIHtcbiAgICAgIG1vbnRoICs9IDEyO1xuICAgICAgeWVhci0tO1xuICAgIH1cblxuICAgIHRtcCA9XG4gICAgICBpbkxlYXBZZWFyICYmIG1vbnRoID09PSAyID8gZGF5c0luTGVhcEZlYnVyYXJ5IDogZGF5c0luTW9udGhbbW9udGggLSAxXTtcbiAgICBkYXkgKz0gdG1wO1xuICB9XG5cbiAgLy9Ob3cgY3JlYXRlIHRoZSBKdWxpYW5EYXRlIGNvbXBvbmVudHMgZnJvbSB0aGUgR3JlZ29yaWFuIGRhdGUgYW5kIGFjdHVhbGx5IGNyZWF0ZSBvdXIgaW5zdGFuY2UuXG4gIHZhciBjb21wb25lbnRzID0gY29tcHV0ZUp1bGlhbkRhdGVDb21wb25lbnRzKFxuICAgIHllYXIsXG4gICAgbW9udGgsXG4gICAgZGF5LFxuICAgIGhvdXIsXG4gICAgbWludXRlLFxuICAgIHNlY29uZCxcbiAgICBtaWxsaXNlY29uZFxuICApO1xuXG4gIGlmICghZGVmaW5lZChyZXN1bHQpKSB7XG4gICAgcmVzdWx0ID0gbmV3IEp1bGlhbkRhdGUoY29tcG9uZW50c1swXSwgY29tcG9uZW50c1sxXSwgVGltZVN0YW5kYXJkLlVUQyk7XG4gIH0gZWxzZSB7XG4gICAgc2V0Q29tcG9uZW50cyhjb21wb25lbnRzWzBdLCBjb21wb25lbnRzWzFdLCByZXN1bHQpO1xuICAgIGNvbnZlcnRVdGNUb1RhaShyZXN1bHQpO1xuICB9XG5cbiAgLy9JZiB3ZSB3ZXJlIG9uIGEgbGVhcCBzZWNvbmQsIGFkZCBpdCBiYWNrLlxuICBpZiAoaXNMZWFwU2Vjb25kKSB7XG4gICAgSnVsaWFuRGF0ZS5hZGRTZWNvbmRzKHJlc3VsdCwgMSwgcmVzdWx0KTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgaW5zdGFuY2UgdGhhdCByZXByZXNlbnRzIHRoZSBjdXJyZW50IHN5c3RlbSB0aW1lLlxuICogVGhpcyBpcyBlcXVpdmFsZW50IHRvIGNhbGxpbmcgPGNvZGU+SnVsaWFuRGF0ZS5mcm9tRGF0ZShuZXcgRGF0ZSgpKTs8L2NvZGU+LlxuICpcbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gW3Jlc3VsdF0gQW4gZXhpc3RpbmcgaW5zdGFuY2UgdG8gdXNlIGZvciB0aGUgcmVzdWx0LlxuICogQHJldHVybnMge0p1bGlhbkRhdGV9IFRoZSBtb2RpZmllZCByZXN1bHQgcGFyYW1ldGVyIG9yIGEgbmV3IGluc3RhbmNlIGlmIG5vbmUgd2FzIHByb3ZpZGVkLlxuICovXG5KdWxpYW5EYXRlLm5vdyA9IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgcmV0dXJuIEp1bGlhbkRhdGUuZnJvbURhdGUobmV3IERhdGUoKSwgcmVzdWx0KTtcbn07XG5cbnZhciB0b0dyZWdvcmlhbkRhdGVTY3JhdGNoID0gbmV3IEp1bGlhbkRhdGUoMCwgMCwgVGltZVN0YW5kYXJkLlRBSSk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIHtAbGluayBHcmVnb3JpYW5EYXRlfSBmcm9tIHRoZSBwcm92aWRlZCBpbnN0YW5jZS5cbiAqXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IGp1bGlhbkRhdGUgVGhlIGRhdGUgdG8gYmUgY29udmVydGVkLlxuICogQHBhcmFtIHtHcmVnb3JpYW5EYXRlfSBbcmVzdWx0XSBBbiBleGlzdGluZyBpbnN0YW5jZSB0byB1c2UgZm9yIHRoZSByZXN1bHQuXG4gKiBAcmV0dXJucyB7R3JlZ29yaWFuRGF0ZX0gVGhlIG1vZGlmaWVkIHJlc3VsdCBwYXJhbWV0ZXIgb3IgYSBuZXcgaW5zdGFuY2UgaWYgbm9uZSB3YXMgcHJvdmlkZWQuXG4gKi9cbkp1bGlhbkRhdGUudG9HcmVnb3JpYW5EYXRlID0gZnVuY3Rpb24gKGp1bGlhbkRhdGUsIHJlc3VsdCkge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIWRlZmluZWQoanVsaWFuRGF0ZSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJqdWxpYW5EYXRlIGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB2YXIgaXNMZWFwU2Vjb25kID0gZmFsc2U7XG4gIHZhciB0aGlzVXRjID0gY29udmVydFRhaVRvVXRjKGp1bGlhbkRhdGUsIHRvR3JlZ29yaWFuRGF0ZVNjcmF0Y2gpO1xuICBpZiAoIWRlZmluZWQodGhpc1V0YykpIHtcbiAgICAvL0NvbnZlcnNpb24gdG8gVVRDIHdpbGwgZmFpbCBpZiB3ZSBhcmUgZHVyaW5nIGEgbGVhcCBzZWNvbmQuXG4gICAgLy9JZiB0aGF0J3MgdGhlIGNhc2UsIHN1YnRyYWN0IGEgc2Vjb25kIGFuZCBjb252ZXJ0IGFnYWluLlxuICAgIC8vSmF2YVNjcmlwdCBkb2Vzbid0IHN1cHBvcnQgbGVhcCBzZWNvbmRzLCBzbyB0aGlzIHJlc3VsdHMgaW4gc2Vjb25kIDU5IGJlaW5nIHJlcGVhdGVkIHR3aWNlLlxuICAgIEp1bGlhbkRhdGUuYWRkU2Vjb25kcyhqdWxpYW5EYXRlLCAtMSwgdG9HcmVnb3JpYW5EYXRlU2NyYXRjaCk7XG4gICAgdGhpc1V0YyA9IGNvbnZlcnRUYWlUb1V0Yyh0b0dyZWdvcmlhbkRhdGVTY3JhdGNoLCB0b0dyZWdvcmlhbkRhdGVTY3JhdGNoKTtcbiAgICBpc0xlYXBTZWNvbmQgPSB0cnVlO1xuICB9XG5cbiAgdmFyIGp1bGlhbkRheU51bWJlciA9IHRoaXNVdGMuZGF5TnVtYmVyO1xuICB2YXIgc2Vjb25kc09mRGF5ID0gdGhpc1V0Yy5zZWNvbmRzT2ZEYXk7XG5cbiAgaWYgKHNlY29uZHNPZkRheSA+PSA0MzIwMC4wKSB7XG4gICAganVsaWFuRGF5TnVtYmVyICs9IDE7XG4gIH1cblxuICAvLyBBbGdvcml0aG0gZnJvbSBwYWdlIDYwNCBvZiB0aGUgRXhwbGFuYXRvcnkgU3VwcGxlbWVudCB0byB0aGVcbiAgLy8gQXN0cm9ub21pY2FsIEFsbWFuYWMgKFNlaWRlbG1hbm4gMTk5MikuXG4gIHZhciBMID0gKGp1bGlhbkRheU51bWJlciArIDY4NTY5KSB8IDA7XG4gIHZhciBOID0gKCg0ICogTCkgLyAxNDYwOTcpIHwgMDtcbiAgTCA9IChMIC0gKCgoMTQ2MDk3ICogTiArIDMpIC8gNCkgfCAwKSkgfCAwO1xuICB2YXIgSSA9ICgoNDAwMCAqIChMICsgMSkpIC8gMTQ2MTAwMSkgfCAwO1xuICBMID0gKEwgLSAoKCgxNDYxICogSSkgLyA0KSB8IDApICsgMzEpIHwgMDtcbiAgdmFyIEogPSAoKDgwICogTCkgLyAyNDQ3KSB8IDA7XG4gIHZhciBkYXkgPSAoTCAtICgoKDI0NDcgKiBKKSAvIDgwKSB8IDApKSB8IDA7XG4gIEwgPSAoSiAvIDExKSB8IDA7XG4gIHZhciBtb250aCA9IChKICsgMiAtIDEyICogTCkgfCAwO1xuICB2YXIgeWVhciA9ICgxMDAgKiAoTiAtIDQ5KSArIEkgKyBMKSB8IDA7XG5cbiAgdmFyIGhvdXIgPSAoc2Vjb25kc09mRGF5IC8gVGltZUNvbnN0YW50cy5TRUNPTkRTX1BFUl9IT1VSKSB8IDA7XG4gIHZhciByZW1haW5pbmdTZWNvbmRzID0gc2Vjb25kc09mRGF5IC0gaG91ciAqIFRpbWVDb25zdGFudHMuU0VDT05EU19QRVJfSE9VUjtcbiAgdmFyIG1pbnV0ZSA9IChyZW1haW5pbmdTZWNvbmRzIC8gVGltZUNvbnN0YW50cy5TRUNPTkRTX1BFUl9NSU5VVEUpIHwgMDtcbiAgcmVtYWluaW5nU2Vjb25kcyA9XG4gICAgcmVtYWluaW5nU2Vjb25kcyAtIG1pbnV0ZSAqIFRpbWVDb25zdGFudHMuU0VDT05EU19QRVJfTUlOVVRFO1xuICB2YXIgc2Vjb25kID0gcmVtYWluaW5nU2Vjb25kcyB8IDA7XG4gIHZhciBtaWxsaXNlY29uZCA9XG4gICAgKHJlbWFpbmluZ1NlY29uZHMgLSBzZWNvbmQpIC8gVGltZUNvbnN0YW50cy5TRUNPTkRTX1BFUl9NSUxMSVNFQ09ORDtcblxuICAvLyBKdWxpYW5EYXRlcyBhcmUgbm9vbi1iYXNlZFxuICBob3VyICs9IDEyO1xuICBpZiAoaG91ciA+IDIzKSB7XG4gICAgaG91ciAtPSAyNDtcbiAgfVxuXG4gIC8vSWYgd2Ugd2VyZSBvbiBhIGxlYXAgc2Vjb25kLCBhZGQgaXQgYmFjay5cbiAgaWYgKGlzTGVhcFNlY29uZCkge1xuICAgIHNlY29uZCArPSAxO1xuICB9XG5cbiAgaWYgKCFkZWZpbmVkKHJlc3VsdCkpIHtcbiAgICByZXR1cm4gbmV3IEdyZWdvcmlhbkRhdGUoXG4gICAgICB5ZWFyLFxuICAgICAgbW9udGgsXG4gICAgICBkYXksXG4gICAgICBob3VyLFxuICAgICAgbWludXRlLFxuICAgICAgc2Vjb25kLFxuICAgICAgbWlsbGlzZWNvbmQsXG4gICAgICBpc0xlYXBTZWNvbmRcbiAgICApO1xuICB9XG5cbiAgcmVzdWx0LnllYXIgPSB5ZWFyO1xuICByZXN1bHQubW9udGggPSBtb250aDtcbiAgcmVzdWx0LmRheSA9IGRheTtcbiAgcmVzdWx0LmhvdXIgPSBob3VyO1xuICByZXN1bHQubWludXRlID0gbWludXRlO1xuICByZXN1bHQuc2Vjb25kID0gc2Vjb25kO1xuICByZXN1bHQubWlsbGlzZWNvbmQgPSBtaWxsaXNlY29uZDtcbiAgcmVzdWx0LmlzTGVhcFNlY29uZCA9IGlzTGVhcFNlY29uZDtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIEphdmFTY3JpcHQgRGF0ZSBmcm9tIHRoZSBwcm92aWRlZCBpbnN0YW5jZS5cbiAqIFNpbmNlIEphdmFTY3JpcHQgZGF0ZXMgYXJlIG9ubHkgYWNjdXJhdGUgdG8gdGhlIG5lYXJlc3QgbWlsbGlzZWNvbmQgYW5kXG4gKiBjYW5ub3QgcmVwcmVzZW50IGEgbGVhcCBzZWNvbmQsIGNvbnNpZGVyIHVzaW5nIHtAbGluayBKdWxpYW5EYXRlLnRvR3JlZ29yaWFuRGF0ZX0gaW5zdGVhZC5cbiAqIElmIHRoZSBwcm92aWRlZCBKdWxpYW5EYXRlIGlzIGR1cmluZyBhIGxlYXAgc2Vjb25kLCB0aGUgcHJldmlvdXMgc2Vjb25kIGlzIHVzZWQuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBqdWxpYW5EYXRlIFRoZSBkYXRlIHRvIGJlIGNvbnZlcnRlZC5cbiAqIEByZXR1cm5zIHtEYXRlfSBBIG5ldyBpbnN0YW5jZSByZXByZXNlbnRpbmcgdGhlIHByb3ZpZGVkIGRhdGUuXG4gKi9cbkp1bGlhbkRhdGUudG9EYXRlID0gZnVuY3Rpb24gKGp1bGlhbkRhdGUpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGp1bGlhbkRhdGUpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwianVsaWFuRGF0ZSBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIGdEYXRlID0gSnVsaWFuRGF0ZS50b0dyZWdvcmlhbkRhdGUoanVsaWFuRGF0ZSwgZ3JlZ29yaWFuRGF0ZVNjcmF0Y2gpO1xuICB2YXIgc2Vjb25kID0gZ0RhdGUuc2Vjb25kO1xuICBpZiAoZ0RhdGUuaXNMZWFwU2Vjb25kKSB7XG4gICAgc2Vjb25kIC09IDE7XG4gIH1cbiAgcmV0dXJuIG5ldyBEYXRlKFxuICAgIERhdGUuVVRDKFxuICAgICAgZ0RhdGUueWVhcixcbiAgICAgIGdEYXRlLm1vbnRoIC0gMSxcbiAgICAgIGdEYXRlLmRheSxcbiAgICAgIGdEYXRlLmhvdXIsXG4gICAgICBnRGF0ZS5taW51dGUsXG4gICAgICBzZWNvbmQsXG4gICAgICBnRGF0ZS5taWxsaXNlY29uZFxuICAgIClcbiAgKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBJU084NjAxIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwcm92aWRlZCBkYXRlLlxuICpcbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0ganVsaWFuRGF0ZSBUaGUgZGF0ZSB0byBiZSBjb252ZXJ0ZWQuXG4gKiBAcGFyYW0ge051bWJlcn0gW3ByZWNpc2lvbl0gVGhlIG51bWJlciBvZiBmcmFjdGlvbmFsIGRpZ2l0cyB1c2VkIHRvIHJlcHJlc2VudCB0aGUgc2Vjb25kcyBjb21wb25lbnQuICBCeSBkZWZhdWx0LCB0aGUgbW9zdCBwcmVjaXNlIHJlcHJlc2VudGF0aW9uIGlzIHVzZWQuXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgSVNPODYwMSByZXByZXNlbnRhdGlvbiBvZiB0aGUgcHJvdmlkZWQgZGF0ZS5cbiAqL1xuSnVsaWFuRGF0ZS50b0lzbzg2MDEgPSBmdW5jdGlvbiAoanVsaWFuRGF0ZSwgcHJlY2lzaW9uKSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICghZGVmaW5lZChqdWxpYW5EYXRlKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImp1bGlhbkRhdGUgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBnRGF0ZSA9IEp1bGlhbkRhdGUudG9HcmVnb3JpYW5EYXRlKGp1bGlhbkRhdGUsIGdyZWdvcmlhbkRhdGVTY3JhdGNoKTtcbiAgdmFyIHllYXIgPSBnRGF0ZS55ZWFyO1xuICB2YXIgbW9udGggPSBnRGF0ZS5tb250aDtcbiAgdmFyIGRheSA9IGdEYXRlLmRheTtcbiAgdmFyIGhvdXIgPSBnRGF0ZS5ob3VyO1xuICB2YXIgbWludXRlID0gZ0RhdGUubWludXRlO1xuICB2YXIgc2Vjb25kID0gZ0RhdGUuc2Vjb25kO1xuICB2YXIgbWlsbGlzZWNvbmQgPSBnRGF0ZS5taWxsaXNlY29uZDtcblxuICAvLyBzcGVjaWFsIGNhc2UgLSBJc284NjAxLk1BWElNVU1fVkFMVUUgcHJvZHVjZXMgYSBzdHJpbmcgd2hpY2ggd2UgY2FuJ3QgcGFyc2UgdW5sZXNzIHdlIGFkanVzdC5cbiAgLy8gMTAwMDAtMDEtMDFUMDA6MDA6MDAgaXMgdGhlIHNhbWUgaW5zdGFudCBhcyA5OTk5LTEyLTMxVDI0OjAwOjAwXG4gIGlmIChcbiAgICB5ZWFyID09PSAxMDAwMCAmJlxuICAgIG1vbnRoID09PSAxICYmXG4gICAgZGF5ID09PSAxICYmXG4gICAgaG91ciA9PT0gMCAmJlxuICAgIG1pbnV0ZSA9PT0gMCAmJlxuICAgIHNlY29uZCA9PT0gMCAmJlxuICAgIG1pbGxpc2Vjb25kID09PSAwXG4gICkge1xuICAgIHllYXIgPSA5OTk5O1xuICAgIG1vbnRoID0gMTI7XG4gICAgZGF5ID0gMzE7XG4gICAgaG91ciA9IDI0O1xuICB9XG5cbiAgdmFyIG1pbGxpc2Vjb25kU3RyO1xuXG4gIGlmICghZGVmaW5lZChwcmVjaXNpb24pICYmIG1pbGxpc2Vjb25kICE9PSAwKSB7XG4gICAgLy9Gb3JjZXMgbWlsbGlzZWNvbmRzIGludG8gYSBudW1iZXIgd2l0aCBhdCBsZWFzdCAzIGRpZ2l0cyB0byB3aGF0ZXZlciB0aGUgZGVmYXVsdCB0b1N0cmluZygpIHByZWNpc2lvbiBpcy5cbiAgICBtaWxsaXNlY29uZFN0ciA9IChtaWxsaXNlY29uZCAqIDAuMDEpLnRvU3RyaW5nKCkucmVwbGFjZShcIi5cIiwgXCJcIik7XG4gICAgcmV0dXJuIChcbiAgICAgIHllYXIudG9TdHJpbmcoKS5wYWRTdGFydCg0LCBcIjBcIikgK1xuICAgICAgXCItXCIgK1xuICAgICAgbW9udGgudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIikgK1xuICAgICAgXCItXCIgK1xuICAgICAgZGF5LnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpICtcbiAgICAgIFwiVFwiICtcbiAgICAgIGhvdXIudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIikgK1xuICAgICAgXCI6XCIgK1xuICAgICAgbWludXRlLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpICtcbiAgICAgIFwiOlwiICtcbiAgICAgIHNlY29uZC50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKSArXG4gICAgICBcIi5cIiArXG4gICAgICBtaWxsaXNlY29uZFN0ciArXG4gICAgICBcIlpcIlxuICAgICk7XG4gIH1cblxuICAvL1ByZWNpc2lvbiBpcyBlaXRoZXIgMCBvciBtaWxsaXNlY29uZHMgaXMgMCB3aXRoIHVuZGVmaW5lZCBwcmVjaXNpb24sIGluIGVpdGhlciBjYXNlLCBsZWF2ZSBvZmYgbWlsbGlzZWNvbmRzIGVudGlyZWx5XG4gIGlmICghZGVmaW5lZChwcmVjaXNpb24pIHx8IHByZWNpc2lvbiA9PT0gMCkge1xuICAgIHJldHVybiAoXG4gICAgICB5ZWFyLnRvU3RyaW5nKCkucGFkU3RhcnQoNCwgXCIwXCIpICtcbiAgICAgIFwiLVwiICtcbiAgICAgIG1vbnRoLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpICtcbiAgICAgIFwiLVwiICtcbiAgICAgIGRheS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKSArXG4gICAgICBcIlRcIiArXG4gICAgICBob3VyLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpICtcbiAgICAgIFwiOlwiICtcbiAgICAgIG1pbnV0ZS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKSArXG4gICAgICBcIjpcIiArXG4gICAgICBzZWNvbmQudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIikgK1xuICAgICAgXCJaXCJcbiAgICApO1xuICB9XG5cbiAgLy9Gb3JjZXMgbWlsbGlzZWNvbmRzIGludG8gYSBudW1iZXIgd2l0aCBhdCBsZWFzdCAzIGRpZ2l0cyB0byB3aGF0ZXZlciB0aGUgc3BlY2lmaWVkIHByZWNpc2lvbiBpcy5cbiAgbWlsbGlzZWNvbmRTdHIgPSAobWlsbGlzZWNvbmQgKiAwLjAxKVxuICAgIC50b0ZpeGVkKHByZWNpc2lvbilcbiAgICAucmVwbGFjZShcIi5cIiwgXCJcIilcbiAgICAuc2xpY2UoMCwgcHJlY2lzaW9uKTtcbiAgcmV0dXJuIChcbiAgICB5ZWFyLnRvU3RyaW5nKCkucGFkU3RhcnQoNCwgXCIwXCIpICtcbiAgICBcIi1cIiArXG4gICAgbW9udGgudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIikgK1xuICAgIFwiLVwiICtcbiAgICBkYXkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIikgK1xuICAgIFwiVFwiICtcbiAgICBob3VyLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpICtcbiAgICBcIjpcIiArXG4gICAgbWludXRlLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpICtcbiAgICBcIjpcIiArXG4gICAgc2Vjb25kLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpICtcbiAgICBcIi5cIiArXG4gICAgbWlsbGlzZWNvbmRTdHIgK1xuICAgIFwiWlwiXG4gICk7XG59O1xuXG4vKipcbiAqIER1cGxpY2F0ZXMgYSBKdWxpYW5EYXRlIGluc3RhbmNlLlxuICpcbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0ganVsaWFuRGF0ZSBUaGUgZGF0ZSB0byBkdXBsaWNhdGUuXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IFtyZXN1bHRdIEFuIGV4aXN0aW5nIGluc3RhbmNlIHRvIHVzZSBmb3IgdGhlIHJlc3VsdC5cbiAqIEByZXR1cm5zIHtKdWxpYW5EYXRlfSBUaGUgbW9kaWZpZWQgcmVzdWx0IHBhcmFtZXRlciBvciBhIG5ldyBpbnN0YW5jZSBpZiBub25lIHdhcyBwcm92aWRlZC4gUmV0dXJucyB1bmRlZmluZWQgaWYganVsaWFuRGF0ZSBpcyB1bmRlZmluZWQuXG4gKi9cbkp1bGlhbkRhdGUuY2xvbmUgPSBmdW5jdGlvbiAoanVsaWFuRGF0ZSwgcmVzdWx0KSB7XG4gIGlmICghZGVmaW5lZChqdWxpYW5EYXRlKSkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbiAgaWYgKCFkZWZpbmVkKHJlc3VsdCkpIHtcbiAgICByZXR1cm4gbmV3IEp1bGlhbkRhdGUoXG4gICAgICBqdWxpYW5EYXRlLmRheU51bWJlcixcbiAgICAgIGp1bGlhbkRhdGUuc2Vjb25kc09mRGF5LFxuICAgICAgVGltZVN0YW5kYXJkLlRBSVxuICAgICk7XG4gIH1cbiAgcmVzdWx0LmRheU51bWJlciA9IGp1bGlhbkRhdGUuZGF5TnVtYmVyO1xuICByZXN1bHQuc2Vjb25kc09mRGF5ID0ganVsaWFuRGF0ZS5zZWNvbmRzT2ZEYXk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIENvbXBhcmVzIHR3byBpbnN0YW5jZXMuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBsZWZ0IFRoZSBmaXJzdCBpbnN0YW5jZS5cbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gcmlnaHQgVGhlIHNlY29uZCBpbnN0YW5jZS5cbiAqIEByZXR1cm5zIHtOdW1iZXJ9IEEgbmVnYXRpdmUgdmFsdWUgaWYgbGVmdCBpcyBsZXNzIHRoYW4gcmlnaHQsIGEgcG9zaXRpdmUgdmFsdWUgaWYgbGVmdCBpcyBncmVhdGVyIHRoYW4gcmlnaHQsIG9yIHplcm8gaWYgbGVmdCBhbmQgcmlnaHQgYXJlIGVxdWFsLlxuICovXG5KdWxpYW5EYXRlLmNvbXBhcmUgPSBmdW5jdGlvbiAobGVmdCwgcmlnaHQpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGxlZnQpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwibGVmdCBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgaWYgKCFkZWZpbmVkKHJpZ2h0KSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcInJpZ2h0IGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB2YXIganVsaWFuRGF5TnVtYmVyRGlmZmVyZW5jZSA9IGxlZnQuZGF5TnVtYmVyIC0gcmlnaHQuZGF5TnVtYmVyO1xuICBpZiAoanVsaWFuRGF5TnVtYmVyRGlmZmVyZW5jZSAhPT0gMCkge1xuICAgIHJldHVybiBqdWxpYW5EYXlOdW1iZXJEaWZmZXJlbmNlO1xuICB9XG4gIHJldHVybiBsZWZ0LnNlY29uZHNPZkRheSAtIHJpZ2h0LnNlY29uZHNPZkRheTtcbn07XG5cbi8qKlxuICogQ29tcGFyZXMgdHdvIGluc3RhbmNlcyBhbmQgcmV0dXJucyA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGV5IGFyZSBlcXVhbCwgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IFtsZWZ0XSBUaGUgZmlyc3QgaW5zdGFuY2UuXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IFtyaWdodF0gVGhlIHNlY29uZCBpbnN0YW5jZS5cbiAqIEByZXR1cm5zIHtCb29sZWFufSA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgZGF0ZXMgYXJlIGVxdWFsOyBvdGhlcndpc2UsIDxjb2RlPmZhbHNlPC9jb2RlPi5cbiAqL1xuSnVsaWFuRGF0ZS5lcXVhbHMgPSBmdW5jdGlvbiAobGVmdCwgcmlnaHQpIHtcbiAgcmV0dXJuIChcbiAgICBsZWZ0ID09PSByaWdodCB8fFxuICAgIChkZWZpbmVkKGxlZnQpICYmXG4gICAgICBkZWZpbmVkKHJpZ2h0KSAmJlxuICAgICAgbGVmdC5kYXlOdW1iZXIgPT09IHJpZ2h0LmRheU51bWJlciAmJlxuICAgICAgbGVmdC5zZWNvbmRzT2ZEYXkgPT09IHJpZ2h0LnNlY29uZHNPZkRheSlcbiAgKTtcbn07XG5cbi8qKlxuICogQ29tcGFyZXMgdHdvIGluc3RhbmNlcyBhbmQgcmV0dXJucyA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGV5IGFyZSB3aXRoaW4gPGNvZGU+ZXBzaWxvbjwvY29kZT4gc2Vjb25kcyBvZlxuICogZWFjaCBvdGhlci4gIFRoYXQgaXMsIGluIG9yZGVyIGZvciB0aGUgZGF0ZXMgdG8gYmUgY29uc2lkZXJlZCBlcXVhbCAoYW5kIGZvclxuICogdGhpcyBmdW5jdGlvbiB0byByZXR1cm4gPGNvZGU+dHJ1ZTwvY29kZT4pLCB0aGUgYWJzb2x1dGUgdmFsdWUgb2YgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGVtLCBpblxuICogc2Vjb25kcywgbXVzdCBiZSBsZXNzIHRoYW4gPGNvZGU+ZXBzaWxvbjwvY29kZT4uXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBbbGVmdF0gVGhlIGZpcnN0IGluc3RhbmNlLlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBbcmlnaHRdIFRoZSBzZWNvbmQgaW5zdGFuY2UuXG4gKiBAcGFyYW0ge051bWJlcn0gW2Vwc2lsb249MF0gVGhlIG1heGltdW0gbnVtYmVyIG9mIHNlY29uZHMgdGhhdCBzaG91bGQgc2VwYXJhdGUgdGhlIHR3byBpbnN0YW5jZXMuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIHR3byBkYXRlcyBhcmUgd2l0aGluIDxjb2RlPmVwc2lsb248L2NvZGU+IHNlY29uZHMgb2YgZWFjaCBvdGhlcjsgb3RoZXJ3aXNlIDxjb2RlPmZhbHNlPC9jb2RlPi5cbiAqL1xuSnVsaWFuRGF0ZS5lcXVhbHNFcHNpbG9uID0gZnVuY3Rpb24gKGxlZnQsIHJpZ2h0LCBlcHNpbG9uKSB7XG4gIGVwc2lsb24gPSBkZWZhdWx0VmFsdWUoZXBzaWxvbiwgMCk7XG5cbiAgcmV0dXJuIChcbiAgICBsZWZ0ID09PSByaWdodCB8fFxuICAgIChkZWZpbmVkKGxlZnQpICYmXG4gICAgICBkZWZpbmVkKHJpZ2h0KSAmJlxuICAgICAgTWF0aC5hYnMoSnVsaWFuRGF0ZS5zZWNvbmRzRGlmZmVyZW5jZShsZWZ0LCByaWdodCkpIDw9IGVwc2lsb24pXG4gICk7XG59O1xuXG4vKipcbiAqIENvbXB1dGVzIHRoZSB0b3RhbCBudW1iZXIgb2Ygd2hvbGUgYW5kIGZyYWN0aW9uYWwgZGF5cyByZXByZXNlbnRlZCBieSB0aGUgcHJvdmlkZWQgaW5zdGFuY2UuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBqdWxpYW5EYXRlIFRoZSBkYXRlLlxuICogQHJldHVybnMge051bWJlcn0gVGhlIEp1bGlhbiBkYXRlIGFzIHNpbmdsZSBmbG9hdGluZyBwb2ludCBudW1iZXIuXG4gKi9cbkp1bGlhbkRhdGUudG90YWxEYXlzID0gZnVuY3Rpb24gKGp1bGlhbkRhdGUpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGp1bGlhbkRhdGUpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwianVsaWFuRGF0ZSBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG4gIHJldHVybiAoXG4gICAganVsaWFuRGF0ZS5kYXlOdW1iZXIgK1xuICAgIGp1bGlhbkRhdGUuc2Vjb25kc09mRGF5IC8gVGltZUNvbnN0YW50cy5TRUNPTkRTX1BFUl9EQVlcbiAgKTtcbn07XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIGRpZmZlcmVuY2UgaW4gc2Vjb25kcyBiZXR3ZWVuIHRoZSBwcm92aWRlZCBpbnN0YW5jZS5cbiAqXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IGxlZnQgVGhlIGZpcnN0IGluc3RhbmNlLlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSByaWdodCBUaGUgc2Vjb25kIGluc3RhbmNlLlxuICogQHJldHVybnMge051bWJlcn0gVGhlIGRpZmZlcmVuY2UsIGluIHNlY29uZHMsIHdoZW4gc3VidHJhY3RpbmcgPGNvZGU+cmlnaHQ8L2NvZGU+IGZyb20gPGNvZGU+bGVmdDwvY29kZT4uXG4gKi9cbkp1bGlhbkRhdGUuc2Vjb25kc0RpZmZlcmVuY2UgPSBmdW5jdGlvbiAobGVmdCwgcmlnaHQpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGxlZnQpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwibGVmdCBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgaWYgKCFkZWZpbmVkKHJpZ2h0KSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcInJpZ2h0IGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB2YXIgZGF5RGlmZmVyZW5jZSA9XG4gICAgKGxlZnQuZGF5TnVtYmVyIC0gcmlnaHQuZGF5TnVtYmVyKSAqIFRpbWVDb25zdGFudHMuU0VDT05EU19QRVJfREFZO1xuICByZXR1cm4gZGF5RGlmZmVyZW5jZSArIChsZWZ0LnNlY29uZHNPZkRheSAtIHJpZ2h0LnNlY29uZHNPZkRheSk7XG59O1xuXG4vKipcbiAqIENvbXB1dGVzIHRoZSBkaWZmZXJlbmNlIGluIGRheXMgYmV0d2VlbiB0aGUgcHJvdmlkZWQgaW5zdGFuY2UuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBsZWZ0IFRoZSBmaXJzdCBpbnN0YW5jZS5cbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gcmlnaHQgVGhlIHNlY29uZCBpbnN0YW5jZS5cbiAqIEByZXR1cm5zIHtOdW1iZXJ9IFRoZSBkaWZmZXJlbmNlLCBpbiBkYXlzLCB3aGVuIHN1YnRyYWN0aW5nIDxjb2RlPnJpZ2h0PC9jb2RlPiBmcm9tIDxjb2RlPmxlZnQ8L2NvZGU+LlxuICovXG5KdWxpYW5EYXRlLmRheXNEaWZmZXJlbmNlID0gZnVuY3Rpb24gKGxlZnQsIHJpZ2h0KSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICghZGVmaW5lZChsZWZ0KSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImxlZnQgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIGlmICghZGVmaW5lZChyaWdodCkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJyaWdodCBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIGRheURpZmZlcmVuY2UgPSBsZWZ0LmRheU51bWJlciAtIHJpZ2h0LmRheU51bWJlcjtcbiAgdmFyIHNlY29uZERpZmZlcmVuY2UgPVxuICAgIChsZWZ0LnNlY29uZHNPZkRheSAtIHJpZ2h0LnNlY29uZHNPZkRheSkgLyBUaW1lQ29uc3RhbnRzLlNFQ09ORFNfUEVSX0RBWTtcbiAgcmV0dXJuIGRheURpZmZlcmVuY2UgKyBzZWNvbmREaWZmZXJlbmNlO1xufTtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgbnVtYmVyIG9mIHNlY29uZHMgdGhlIHByb3ZpZGVkIGluc3RhbmNlIGlzIGFoZWFkIG9mIFVUQy5cbiAqXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IGp1bGlhbkRhdGUgVGhlIGRhdGUuXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgbnVtYmVyIG9mIHNlY29uZHMgdGhlIHByb3ZpZGVkIGluc3RhbmNlIGlzIGFoZWFkIG9mIFVUQ1xuICovXG5KdWxpYW5EYXRlLmNvbXB1dGVUYWlNaW51c1V0YyA9IGZ1bmN0aW9uIChqdWxpYW5EYXRlKSB7XG4gIGJpbmFyeVNlYXJjaFNjcmF0Y2hMZWFwU2Vjb25kLmp1bGlhbkRhdGUgPSBqdWxpYW5EYXRlO1xuICB2YXIgbGVhcFNlY29uZHMgPSBKdWxpYW5EYXRlLmxlYXBTZWNvbmRzO1xuICB2YXIgaW5kZXggPSBiaW5hcnlTZWFyY2goXG4gICAgbGVhcFNlY29uZHMsXG4gICAgYmluYXJ5U2VhcmNoU2NyYXRjaExlYXBTZWNvbmQsXG4gICAgY29tcGFyZUxlYXBTZWNvbmREYXRlc1xuICApO1xuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgaW5kZXggPSB+aW5kZXg7XG4gICAgLS1pbmRleDtcbiAgICBpZiAoaW5kZXggPCAwKSB7XG4gICAgICBpbmRleCA9IDA7XG4gICAgfVxuICB9XG4gIHJldHVybiBsZWFwU2Vjb25kc1tpbmRleF0ub2Zmc2V0O1xufTtcblxuLyoqXG4gKiBBZGRzIHRoZSBwcm92aWRlZCBudW1iZXIgb2Ygc2Vjb25kcyB0byB0aGUgcHJvdmlkZWQgZGF0ZSBpbnN0YW5jZS5cbiAqXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IGp1bGlhbkRhdGUgVGhlIGRhdGUuXG4gKiBAcGFyYW0ge051bWJlcn0gc2Vjb25kcyBUaGUgbnVtYmVyIG9mIHNlY29uZHMgdG8gYWRkIG9yIHN1YnRyYWN0LlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSByZXN1bHQgQW4gZXhpc3RpbmcgaW5zdGFuY2UgdG8gdXNlIGZvciB0aGUgcmVzdWx0LlxuICogQHJldHVybnMge0p1bGlhbkRhdGV9IFRoZSBtb2RpZmllZCByZXN1bHQgcGFyYW1ldGVyLlxuICovXG5KdWxpYW5EYXRlLmFkZFNlY29uZHMgPSBmdW5jdGlvbiAoanVsaWFuRGF0ZSwgc2Vjb25kcywgcmVzdWx0KSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmICghZGVmaW5lZChqdWxpYW5EYXRlKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImp1bGlhbkRhdGUgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIGlmICghZGVmaW5lZChzZWNvbmRzKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcInNlY29uZHMgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIGlmICghZGVmaW5lZChyZXN1bHQpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwicmVzdWx0IGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICByZXR1cm4gc2V0Q29tcG9uZW50cyhcbiAgICBqdWxpYW5EYXRlLmRheU51bWJlcixcbiAgICBqdWxpYW5EYXRlLnNlY29uZHNPZkRheSArIHNlY29uZHMsXG4gICAgcmVzdWx0XG4gICk7XG59O1xuXG4vKipcbiAqIEFkZHMgdGhlIHByb3ZpZGVkIG51bWJlciBvZiBtaW51dGVzIHRvIHRoZSBwcm92aWRlZCBkYXRlIGluc3RhbmNlLlxuICpcbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0ganVsaWFuRGF0ZSBUaGUgZGF0ZS5cbiAqIEBwYXJhbSB7TnVtYmVyfSBtaW51dGVzIFRoZSBudW1iZXIgb2YgbWludXRlcyB0byBhZGQgb3Igc3VidHJhY3QuXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IHJlc3VsdCBBbiBleGlzdGluZyBpbnN0YW5jZSB0byB1c2UgZm9yIHRoZSByZXN1bHQuXG4gKiBAcmV0dXJucyB7SnVsaWFuRGF0ZX0gVGhlIG1vZGlmaWVkIHJlc3VsdCBwYXJhbWV0ZXIuXG4gKi9cbkp1bGlhbkRhdGUuYWRkTWludXRlcyA9IGZ1bmN0aW9uIChqdWxpYW5EYXRlLCBtaW51dGVzLCByZXN1bHQpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGp1bGlhbkRhdGUpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwianVsaWFuRGF0ZSBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgaWYgKCFkZWZpbmVkKG1pbnV0ZXMpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwibWludXRlcyBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgaWYgKCFkZWZpbmVkKHJlc3VsdCkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJyZXN1bHQgaXMgcmVxdWlyZWQuXCIpO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBuZXdTZWNvbmRzT2ZEYXkgPVxuICAgIGp1bGlhbkRhdGUuc2Vjb25kc09mRGF5ICsgbWludXRlcyAqIFRpbWVDb25zdGFudHMuU0VDT05EU19QRVJfTUlOVVRFO1xuICByZXR1cm4gc2V0Q29tcG9uZW50cyhqdWxpYW5EYXRlLmRheU51bWJlciwgbmV3U2Vjb25kc09mRGF5LCByZXN1bHQpO1xufTtcblxuLyoqXG4gKiBBZGRzIHRoZSBwcm92aWRlZCBudW1iZXIgb2YgaG91cnMgdG8gdGhlIHByb3ZpZGVkIGRhdGUgaW5zdGFuY2UuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBqdWxpYW5EYXRlIFRoZSBkYXRlLlxuICogQHBhcmFtIHtOdW1iZXJ9IGhvdXJzIFRoZSBudW1iZXIgb2YgaG91cnMgdG8gYWRkIG9yIHN1YnRyYWN0LlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSByZXN1bHQgQW4gZXhpc3RpbmcgaW5zdGFuY2UgdG8gdXNlIGZvciB0aGUgcmVzdWx0LlxuICogQHJldHVybnMge0p1bGlhbkRhdGV9IFRoZSBtb2RpZmllZCByZXN1bHQgcGFyYW1ldGVyLlxuICovXG5KdWxpYW5EYXRlLmFkZEhvdXJzID0gZnVuY3Rpb24gKGp1bGlhbkRhdGUsIGhvdXJzLCByZXN1bHQpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGp1bGlhbkRhdGUpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwianVsaWFuRGF0ZSBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgaWYgKCFkZWZpbmVkKGhvdXJzKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImhvdXJzIGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcInJlc3VsdCBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIG5ld1NlY29uZHNPZkRheSA9XG4gICAganVsaWFuRGF0ZS5zZWNvbmRzT2ZEYXkgKyBob3VycyAqIFRpbWVDb25zdGFudHMuU0VDT05EU19QRVJfSE9VUjtcbiAgcmV0dXJuIHNldENvbXBvbmVudHMoanVsaWFuRGF0ZS5kYXlOdW1iZXIsIG5ld1NlY29uZHNPZkRheSwgcmVzdWx0KTtcbn07XG5cbi8qKlxuICogQWRkcyB0aGUgcHJvdmlkZWQgbnVtYmVyIG9mIGRheXMgdG8gdGhlIHByb3ZpZGVkIGRhdGUgaW5zdGFuY2UuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBqdWxpYW5EYXRlIFRoZSBkYXRlLlxuICogQHBhcmFtIHtOdW1iZXJ9IGRheXMgVGhlIG51bWJlciBvZiBkYXlzIHRvIGFkZCBvciBzdWJ0cmFjdC5cbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gcmVzdWx0IEFuIGV4aXN0aW5nIGluc3RhbmNlIHRvIHVzZSBmb3IgdGhlIHJlc3VsdC5cbiAqIEByZXR1cm5zIHtKdWxpYW5EYXRlfSBUaGUgbW9kaWZpZWQgcmVzdWx0IHBhcmFtZXRlci5cbiAqL1xuSnVsaWFuRGF0ZS5hZGREYXlzID0gZnVuY3Rpb24gKGp1bGlhbkRhdGUsIGRheXMsIHJlc3VsdCkge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIWRlZmluZWQoanVsaWFuRGF0ZSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJqdWxpYW5EYXRlIGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICBpZiAoIWRlZmluZWQoZGF5cykpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJkYXlzIGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcInJlc3VsdCBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIG5ld0p1bGlhbkRheU51bWJlciA9IGp1bGlhbkRhdGUuZGF5TnVtYmVyICsgZGF5cztcbiAgcmV0dXJuIHNldENvbXBvbmVudHMobmV3SnVsaWFuRGF5TnVtYmVyLCBqdWxpYW5EYXRlLnNlY29uZHNPZkRheSwgcmVzdWx0KTtcbn07XG5cbi8qKlxuICogQ29tcGFyZXMgdGhlIHByb3ZpZGVkIGluc3RhbmNlcyBhbmQgcmV0dXJucyA8Y29kZT50cnVlPC9jb2RlPiBpZiA8Y29kZT5sZWZ0PC9jb2RlPiBpcyBlYXJsaWVyIHRoYW4gPGNvZGU+cmlnaHQ8L2NvZGU+LCA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLlxuICpcbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gbGVmdCBUaGUgZmlyc3QgaW5zdGFuY2UuXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IHJpZ2h0IFRoZSBzZWNvbmQgaW5zdGFuY2UuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgPGNvZGU+bGVmdDwvY29kZT4gaXMgZWFybGllciB0aGFuIDxjb2RlPnJpZ2h0PC9jb2RlPiwgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS5cbiAqL1xuSnVsaWFuRGF0ZS5sZXNzVGhhbiA9IGZ1bmN0aW9uIChsZWZ0LCByaWdodCkge1xuICByZXR1cm4gSnVsaWFuRGF0ZS5jb21wYXJlKGxlZnQsIHJpZ2h0KSA8IDA7XG59O1xuXG4vKipcbiAqIENvbXBhcmVzIHRoZSBwcm92aWRlZCBpbnN0YW5jZXMgYW5kIHJldHVybnMgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgPGNvZGU+bGVmdDwvY29kZT4gaXMgZWFybGllciB0aGFuIG9yIGVxdWFsIHRvIDxjb2RlPnJpZ2h0PC9jb2RlPiwgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IGxlZnQgVGhlIGZpcnN0IGluc3RhbmNlLlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSByaWdodCBUaGUgc2Vjb25kIGluc3RhbmNlLlxuICogQHJldHVybnMge0Jvb2xlYW59IDxjb2RlPnRydWU8L2NvZGU+IGlmIDxjb2RlPmxlZnQ8L2NvZGU+IGlzIGVhcmxpZXIgdGhhbiBvciBlcXVhbCB0byA8Y29kZT5yaWdodDwvY29kZT4sIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuXG4gKi9cbkp1bGlhbkRhdGUubGVzc1RoYW5PckVxdWFscyA9IGZ1bmN0aW9uIChsZWZ0LCByaWdodCkge1xuICByZXR1cm4gSnVsaWFuRGF0ZS5jb21wYXJlKGxlZnQsIHJpZ2h0KSA8PSAwO1xufTtcblxuLyoqXG4gKiBDb21wYXJlcyB0aGUgcHJvdmlkZWQgaW5zdGFuY2VzIGFuZCByZXR1cm5zIDxjb2RlPnRydWU8L2NvZGU+IGlmIDxjb2RlPmxlZnQ8L2NvZGU+IGlzIGxhdGVyIHRoYW4gPGNvZGU+cmlnaHQ8L2NvZGU+LCA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLlxuICpcbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gbGVmdCBUaGUgZmlyc3QgaW5zdGFuY2UuXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IHJpZ2h0IFRoZSBzZWNvbmQgaW5zdGFuY2UuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgPGNvZGU+bGVmdDwvY29kZT4gaXMgbGF0ZXIgdGhhbiA8Y29kZT5yaWdodDwvY29kZT4sIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuXG4gKi9cbkp1bGlhbkRhdGUuZ3JlYXRlclRoYW4gPSBmdW5jdGlvbiAobGVmdCwgcmlnaHQpIHtcbiAgcmV0dXJuIEp1bGlhbkRhdGUuY29tcGFyZShsZWZ0LCByaWdodCkgPiAwO1xufTtcblxuLyoqXG4gKiBDb21wYXJlcyB0aGUgcHJvdmlkZWQgaW5zdGFuY2VzIGFuZCByZXR1cm5zIDxjb2RlPnRydWU8L2NvZGU+IGlmIDxjb2RlPmxlZnQ8L2NvZGU+IGlzIGxhdGVyIHRoYW4gb3IgZXF1YWwgdG8gPGNvZGU+cmlnaHQ8L2NvZGU+LCA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLlxuICpcbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gbGVmdCBUaGUgZmlyc3QgaW5zdGFuY2UuXG4gKiBAcGFyYW0ge0p1bGlhbkRhdGV9IHJpZ2h0IFRoZSBzZWNvbmQgaW5zdGFuY2UuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgPGNvZGU+bGVmdDwvY29kZT4gaXMgbGF0ZXIgdGhhbiBvciBlcXVhbCB0byA8Y29kZT5yaWdodDwvY29kZT4sIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuXG4gKi9cbkp1bGlhbkRhdGUuZ3JlYXRlclRoYW5PckVxdWFscyA9IGZ1bmN0aW9uIChsZWZ0LCByaWdodCkge1xuICByZXR1cm4gSnVsaWFuRGF0ZS5jb21wYXJlKGxlZnQsIHJpZ2h0KSA+PSAwO1xufTtcblxuLyoqXG4gKiBEdXBsaWNhdGVzIHRoaXMgaW5zdGFuY2UuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBbcmVzdWx0XSBBbiBleGlzdGluZyBpbnN0YW5jZSB0byB1c2UgZm9yIHRoZSByZXN1bHQuXG4gKiBAcmV0dXJucyB7SnVsaWFuRGF0ZX0gVGhlIG1vZGlmaWVkIHJlc3VsdCBwYXJhbWV0ZXIgb3IgYSBuZXcgaW5zdGFuY2UgaWYgbm9uZSB3YXMgcHJvdmlkZWQuXG4gKi9cbkp1bGlhbkRhdGUucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKHJlc3VsdCkge1xuICByZXR1cm4gSnVsaWFuRGF0ZS5jbG9uZSh0aGlzLCByZXN1bHQpO1xufTtcblxuLyoqXG4gKiBDb21wYXJlcyB0aGlzIGFuZCB0aGUgcHJvdmlkZWQgaW5zdGFuY2UgYW5kIHJldHVybnMgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhleSBhcmUgZXF1YWwsIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuXG4gKlxuICogQHBhcmFtIHtKdWxpYW5EYXRlfSBbcmlnaHRdIFRoZSBzZWNvbmQgaW5zdGFuY2UuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGRhdGVzIGFyZSBlcXVhbDsgb3RoZXJ3aXNlLCA8Y29kZT5mYWxzZTwvY29kZT4uXG4gKi9cbkp1bGlhbkRhdGUucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIChyaWdodCkge1xuICByZXR1cm4gSnVsaWFuRGF0ZS5lcXVhbHModGhpcywgcmlnaHQpO1xufTtcblxuLyoqXG4gKiBDb21wYXJlcyB0aGlzIGFuZCB0aGUgcHJvdmlkZWQgaW5zdGFuY2UgYW5kIHJldHVybnMgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhleSBhcmUgd2l0aGluIDxjb2RlPmVwc2lsb248L2NvZGU+IHNlY29uZHMgb2ZcbiAqIGVhY2ggb3RoZXIuICBUaGF0IGlzLCBpbiBvcmRlciBmb3IgdGhlIGRhdGVzIHRvIGJlIGNvbnNpZGVyZWQgZXF1YWwgKGFuZCBmb3JcbiAqIHRoaXMgZnVuY3Rpb24gdG8gcmV0dXJuIDxjb2RlPnRydWU8L2NvZGU+KSwgdGhlIGFic29sdXRlIHZhbHVlIG9mIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlbSwgaW5cbiAqIHNlY29uZHMsIG11c3QgYmUgbGVzcyB0aGFuIDxjb2RlPmVwc2lsb248L2NvZGU+LlxuICpcbiAqIEBwYXJhbSB7SnVsaWFuRGF0ZX0gW3JpZ2h0XSBUaGUgc2Vjb25kIGluc3RhbmNlLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtlcHNpbG9uPTBdIFRoZSBtYXhpbXVtIG51bWJlciBvZiBzZWNvbmRzIHRoYXQgc2hvdWxkIHNlcGFyYXRlIHRoZSB0d28gaW5zdGFuY2VzLlxuICogQHJldHVybnMge0Jvb2xlYW59IDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSB0d28gZGF0ZXMgYXJlIHdpdGhpbiA8Y29kZT5lcHNpbG9uPC9jb2RlPiBzZWNvbmRzIG9mIGVhY2ggb3RoZXI7IG90aGVyd2lzZSA8Y29kZT5mYWxzZTwvY29kZT4uXG4gKi9cbkp1bGlhbkRhdGUucHJvdG90eXBlLmVxdWFsc0Vwc2lsb24gPSBmdW5jdGlvbiAocmlnaHQsIGVwc2lsb24pIHtcbiAgcmV0dXJuIEp1bGlhbkRhdGUuZXF1YWxzRXBzaWxvbih0aGlzLCByaWdodCwgZXBzaWxvbik7XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoaXMgZGF0ZSBpbiBJU084NjAxIGZvcm1hdC5cbiAqXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBBIHN0cmluZyByZXByZXNlbnRpbmcgdGhpcyBkYXRlIGluIElTTzg2MDEgZm9ybWF0LlxuICovXG5KdWxpYW5EYXRlLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIEp1bGlhbkRhdGUudG9Jc284NjAxKHRoaXMpO1xufTtcblxuLyoqXG4gKiBHZXRzIG9yIHNldHMgdGhlIGxpc3Qgb2YgbGVhcCBzZWNvbmRzIHVzZWQgdGhyb3VnaG91dCBDZXNpdW0uXG4gKiBAbWVtYmVyb2YgSnVsaWFuRGF0ZVxuICogQHR5cGUge0xlYXBTZWNvbmRbXX1cbiAqL1xuSnVsaWFuRGF0ZS5sZWFwU2Vjb25kcyA9IFtcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ0MTMxNywgNDMyMTAuMCwgVGltZVN0YW5kYXJkLlRBSSksIDEwKSwgLy8gSmFudWFyeSAxLCAxOTcyIDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDQxNDk5LCA0MzIxMS4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMTEpLCAvLyBKdWx5IDEsIDE5NzIgMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NDE2ODMsIDQzMjEyLjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAxMiksIC8vIEphbnVhcnkgMSwgMTk3MyAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ0MjA0OCwgNDMyMTMuMCwgVGltZVN0YW5kYXJkLlRBSSksIDEzKSwgLy8gSmFudWFyeSAxLCAxOTc0IDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDQyNDEzLCA0MzIxNC4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMTQpLCAvLyBKYW51YXJ5IDEsIDE5NzUgMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NDI3NzgsIDQzMjE1LjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAxNSksIC8vIEphbnVhcnkgMSwgMTk3NiAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ0MzE0NCwgNDMyMTYuMCwgVGltZVN0YW5kYXJkLlRBSSksIDE2KSwgLy8gSmFudWFyeSAxLCAxOTc3IDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDQzNTA5LCA0MzIxNy4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMTcpLCAvLyBKYW51YXJ5IDEsIDE5NzggMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NDM4NzQsIDQzMjE4LjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAxOCksIC8vIEphbnVhcnkgMSwgMTk3OSAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ0NDIzOSwgNDMyMTkuMCwgVGltZVN0YW5kYXJkLlRBSSksIDE5KSwgLy8gSmFudWFyeSAxLCAxOTgwIDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDQ0Nzg2LCA0MzIyMC4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMjApLCAvLyBKdWx5IDEsIDE5ODEgMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NDUxNTEsIDQzMjIxLjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAyMSksIC8vIEp1bHkgMSwgMTk4MiAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ0NTUxNiwgNDMyMjIuMCwgVGltZVN0YW5kYXJkLlRBSSksIDIyKSwgLy8gSnVseSAxLCAxOTgzIDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDQ2MjQ3LCA0MzIyMy4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMjMpLCAvLyBKdWx5IDEsIDE5ODUgMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NDcxNjEsIDQzMjI0LjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAyNCksIC8vIEphbnVhcnkgMSwgMTk4OCAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ0Nzg5MiwgNDMyMjUuMCwgVGltZVN0YW5kYXJkLlRBSSksIDI1KSwgLy8gSmFudWFyeSAxLCAxOTkwIDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDQ4MjU3LCA0MzIyNi4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMjYpLCAvLyBKYW51YXJ5IDEsIDE5OTEgMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NDg4MDQsIDQzMjI3LjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAyNyksIC8vIEp1bHkgMSwgMTk5MiAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ0OTE2OSwgNDMyMjguMCwgVGltZVN0YW5kYXJkLlRBSSksIDI4KSwgLy8gSnVseSAxLCAxOTkzIDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDQ5NTM0LCA0MzIyOS4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMjkpLCAvLyBKdWx5IDEsIDE5OTQgMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NTAwODMsIDQzMjMwLjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAzMCksIC8vIEphbnVhcnkgMSwgMTk5NiAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ1MDYzMCwgNDMyMzEuMCwgVGltZVN0YW5kYXJkLlRBSSksIDMxKSwgLy8gSnVseSAxLCAxOTk3IDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDUxMTc5LCA0MzIzMi4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMzIpLCAvLyBKYW51YXJ5IDEsIDE5OTkgMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NTM3MzYsIDQzMjMzLjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAzMyksIC8vIEphbnVhcnkgMSwgMjAwNiAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ1NDgzMiwgNDMyMzQuMCwgVGltZVN0YW5kYXJkLlRBSSksIDM0KSwgLy8gSmFudWFyeSAxLCAyMDA5IDAwOjAwOjAwIFVUQ1xuICBuZXcgTGVhcFNlY29uZChuZXcgSnVsaWFuRGF0ZSgyNDU2MTA5LCA0MzIzNS4wLCBUaW1lU3RhbmRhcmQuVEFJKSwgMzUpLCAvLyBKdWx5IDEsIDIwMTIgMDA6MDA6MDAgVVRDXG4gIG5ldyBMZWFwU2Vjb25kKG5ldyBKdWxpYW5EYXRlKDI0NTcyMDQsIDQzMjM2LjAsIFRpbWVTdGFuZGFyZC5UQUkpLCAzNiksIC8vIEp1bHkgMSwgMjAxNSAwMDowMDowMCBVVENcbiAgbmV3IExlYXBTZWNvbmQobmV3IEp1bGlhbkRhdGUoMjQ1Nzc1NCwgNDMyMzcuMCwgVGltZVN0YW5kYXJkLlRBSSksIDM3KSwgLy8gSmFudWFyeSAxLCAyMDE3IDAwOjAwOjAwIFVUQ1xuXTtcbmV4cG9ydCBkZWZhdWx0IEp1bGlhbkRhdGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///55293\n')},29690:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _CompressedTextureBuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67167);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _TaskProcessor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2819);\n\n\n\n\n\n/**\n * Transcodes KTX2 textures using web workers.\n *\n * @private\n */\nfunction KTX2Transcoder() {}\n\nKTX2Transcoder._transcodeTaskProcessor = new _TaskProcessor_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n  "transcodeKTX2",\n  Number.POSITIVE_INFINITY // KTX2 transcoding is used in place of Resource.fetchImage, so it can\'t reject as "just soooo busy right now"\n);\n\nKTX2Transcoder._readyPromise = undefined;\n\nfunction makeReadyPromise() {\n  var readyPromise = KTX2Transcoder._transcodeTaskProcessor\n    .initWebAssemblyModule({\n      modulePath: "ThirdParty/Workers/basis_transcoder.js",\n      wasmBinaryFile: "ThirdParty/basis_transcoder.wasm",\n    })\n    .then(function () {\n      return KTX2Transcoder._transcodeTaskProcessor;\n    });\n  KTX2Transcoder._readyPromise = readyPromise;\n}\n\nKTX2Transcoder.transcode = function (ktx2Buffer, supportedTargetFormats) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("supportedTargetFormats", supportedTargetFormats);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(KTX2Transcoder._readyPromise)) {\n    makeReadyPromise();\n  }\n\n  return KTX2Transcoder._readyPromise\n    .then(function (taskProcessor) {\n      var parameters;\n      if (ktx2Buffer instanceof ArrayBuffer) {\n        var view = new Uint8Array(ktx2Buffer);\n        parameters = {\n          supportedTargetFormats: supportedTargetFormats,\n          ktx2Buffer: view,\n        };\n        return taskProcessor.scheduleTask(parameters, [ktx2Buffer]);\n      }\n      parameters = {\n        supportedTargetFormats: supportedTargetFormats,\n        ktx2Buffer: ktx2Buffer,\n      };\n      return taskProcessor.scheduleTask(parameters, [ktx2Buffer.buffer]);\n    })\n    .then(function (result) {\n      var levelsLength = result.length;\n      var faceKeys = Object.keys(result[0]);\n      var faceKeysLength = faceKeys.length;\n\n      var i;\n      for (i = 0; i < levelsLength; i++) {\n        var faces = result[i];\n        for (var j = 0; j < faceKeysLength; j++) {\n          var face = faces[faceKeys[j]];\n          faces[faceKeys[j]] = new _CompressedTextureBuffer_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n            face.internalFormat,\n            face.datatype,\n            face.width,\n            face.height,\n            face.levelBuffer\n          );\n        }\n      }\n\n      // Cleaning up parsed result if it\'s a single image\n      if (faceKeysLength === 1) {\n        for (i = 0; i < levelsLength; ++i) {\n          result[i] = result[i][faceKeys[0]];\n        }\n\n        if (levelsLength === 1) {\n          result = result[0];\n        }\n      }\n      return result;\n    })\n    .otherwise(function (error) {\n      throw error;\n    });\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (KTX2Transcoder);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk2OTAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUErQjtBQUNvQztBQUNoQztBQUNZOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkNBQTZDLGtFQUFhO0FBQzFEO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRSwwRUFBYTtBQUNmOztBQUVBLE9BQU8sZ0VBQU87QUFDZDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBLHdCQUF3QixvQkFBb0I7QUFDNUM7QUFDQSxtQ0FBbUMsNEVBQXVCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEseURBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvS1RYMlRyYW5zY29kZXIuanM/ODVjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hlY2sgZnJvbSBcIi4vQ2hlY2suanNcIjtcbmltcG9ydCBDb21wcmVzc2VkVGV4dHVyZUJ1ZmZlciBmcm9tIFwiLi9Db21wcmVzc2VkVGV4dHVyZUJ1ZmZlci5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4vZGVmaW5lZC5qc1wiO1xuaW1wb3J0IFRhc2tQcm9jZXNzb3IgZnJvbSBcIi4vVGFza1Byb2Nlc3Nvci5qc1wiO1xuXG4vKipcbiAqIFRyYW5zY29kZXMgS1RYMiB0ZXh0dXJlcyB1c2luZyB3ZWIgd29ya2Vycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBLVFgyVHJhbnNjb2RlcigpIHt9XG5cbktUWDJUcmFuc2NvZGVyLl90cmFuc2NvZGVUYXNrUHJvY2Vzc29yID0gbmV3IFRhc2tQcm9jZXNzb3IoXG4gIFwidHJhbnNjb2RlS1RYMlwiLFxuICBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkgLy8gS1RYMiB0cmFuc2NvZGluZyBpcyB1c2VkIGluIHBsYWNlIG9mIFJlc291cmNlLmZldGNoSW1hZ2UsIHNvIGl0IGNhbid0IHJlamVjdCBhcyBcImp1c3Qgc29vb28gYnVzeSByaWdodCBub3dcIlxuKTtcblxuS1RYMlRyYW5zY29kZXIuX3JlYWR5UHJvbWlzZSA9IHVuZGVmaW5lZDtcblxuZnVuY3Rpb24gbWFrZVJlYWR5UHJvbWlzZSgpIHtcbiAgdmFyIHJlYWR5UHJvbWlzZSA9IEtUWDJUcmFuc2NvZGVyLl90cmFuc2NvZGVUYXNrUHJvY2Vzc29yXG4gICAgLmluaXRXZWJBc3NlbWJseU1vZHVsZSh7XG4gICAgICBtb2R1bGVQYXRoOiBcIlRoaXJkUGFydHkvV29ya2Vycy9iYXNpc190cmFuc2NvZGVyLmpzXCIsXG4gICAgICB3YXNtQmluYXJ5RmlsZTogXCJUaGlyZFBhcnR5L2Jhc2lzX3RyYW5zY29kZXIud2FzbVwiLFxuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIEtUWDJUcmFuc2NvZGVyLl90cmFuc2NvZGVUYXNrUHJvY2Vzc29yO1xuICAgIH0pO1xuICBLVFgyVHJhbnNjb2Rlci5fcmVhZHlQcm9taXNlID0gcmVhZHlQcm9taXNlO1xufVxuXG5LVFgyVHJhbnNjb2Rlci50cmFuc2NvZGUgPSBmdW5jdGlvbiAoa3R4MkJ1ZmZlciwgc3VwcG9ydGVkVGFyZ2V0Rm9ybWF0cykge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay5kZWZpbmVkKFwic3VwcG9ydGVkVGFyZ2V0Rm9ybWF0c1wiLCBzdXBwb3J0ZWRUYXJnZXRGb3JtYXRzKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgaWYgKCFkZWZpbmVkKEtUWDJUcmFuc2NvZGVyLl9yZWFkeVByb21pc2UpKSB7XG4gICAgbWFrZVJlYWR5UHJvbWlzZSgpO1xuICB9XG5cbiAgcmV0dXJuIEtUWDJUcmFuc2NvZGVyLl9yZWFkeVByb21pc2VcbiAgICAudGhlbihmdW5jdGlvbiAodGFza1Byb2Nlc3Nvcikge1xuICAgICAgdmFyIHBhcmFtZXRlcnM7XG4gICAgICBpZiAoa3R4MkJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICAgIHZhciB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkoa3R4MkJ1ZmZlcik7XG4gICAgICAgIHBhcmFtZXRlcnMgPSB7XG4gICAgICAgICAgc3VwcG9ydGVkVGFyZ2V0Rm9ybWF0czogc3VwcG9ydGVkVGFyZ2V0Rm9ybWF0cyxcbiAgICAgICAgICBrdHgyQnVmZmVyOiB2aWV3LFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdGFza1Byb2Nlc3Nvci5zY2hlZHVsZVRhc2socGFyYW1ldGVycywgW2t0eDJCdWZmZXJdKTtcbiAgICAgIH1cbiAgICAgIHBhcmFtZXRlcnMgPSB7XG4gICAgICAgIHN1cHBvcnRlZFRhcmdldEZvcm1hdHM6IHN1cHBvcnRlZFRhcmdldEZvcm1hdHMsXG4gICAgICAgIGt0eDJCdWZmZXI6IGt0eDJCdWZmZXIsXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHRhc2tQcm9jZXNzb3Iuc2NoZWR1bGVUYXNrKHBhcmFtZXRlcnMsIFtrdHgyQnVmZmVyLmJ1ZmZlcl0pO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgdmFyIGxldmVsc0xlbmd0aCA9IHJlc3VsdC5sZW5ndGg7XG4gICAgICB2YXIgZmFjZUtleXMgPSBPYmplY3Qua2V5cyhyZXN1bHRbMF0pO1xuICAgICAgdmFyIGZhY2VLZXlzTGVuZ3RoID0gZmFjZUtleXMubGVuZ3RoO1xuXG4gICAgICB2YXIgaTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBsZXZlbHNMZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgZmFjZXMgPSByZXN1bHRbaV07XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZmFjZUtleXNMZW5ndGg7IGorKykge1xuICAgICAgICAgIHZhciBmYWNlID0gZmFjZXNbZmFjZUtleXNbal1dO1xuICAgICAgICAgIGZhY2VzW2ZhY2VLZXlzW2pdXSA9IG5ldyBDb21wcmVzc2VkVGV4dHVyZUJ1ZmZlcihcbiAgICAgICAgICAgIGZhY2UuaW50ZXJuYWxGb3JtYXQsXG4gICAgICAgICAgICBmYWNlLmRhdGF0eXBlLFxuICAgICAgICAgICAgZmFjZS53aWR0aCxcbiAgICAgICAgICAgIGZhY2UuaGVpZ2h0LFxuICAgICAgICAgICAgZmFjZS5sZXZlbEJ1ZmZlclxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gQ2xlYW5pbmcgdXAgcGFyc2VkIHJlc3VsdCBpZiBpdCdzIGEgc2luZ2xlIGltYWdlXG4gICAgICBpZiAoZmFjZUtleXNMZW5ndGggPT09IDEpIHtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGxldmVsc0xlbmd0aDsgKytpKSB7XG4gICAgICAgICAgcmVzdWx0W2ldID0gcmVzdWx0W2ldW2ZhY2VLZXlzWzBdXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChsZXZlbHNMZW5ndGggPT09IDEpIHtcbiAgICAgICAgICByZXN1bHQgPSByZXN1bHRbMF07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSlcbiAgICAub3RoZXJ3aXNlKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBLVFgyVHJhbnNjb2RlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29690\n')}}]);