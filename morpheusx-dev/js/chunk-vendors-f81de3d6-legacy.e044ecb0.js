"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[5443],{33277:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Rectangle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96190);\n/* harmony import */ var _Resource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(68985);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12572);\n\n\n\n\n\n\n\nvar url = "https://dev.virtualearth.net/REST/v1/Locations";\n\n/**\n * Provides geocoding through Bing Maps.\n * @alias BingMapsGeocoderService\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {String} options.key A key to use with the Bing Maps geocoding service\n * @param {String} [options.culture] A Bing Maps {@link https://docs.microsoft.com/en-us/bingmaps/rest-services/common-parameters-and-types/supported-culture-codes|Culture Code} to return results in a specific culture and language.\n */\nfunction BingMapsGeocoderService(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var key = options.key;\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(key)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("options.key is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._key = key;\n\n  var queryParameters = {\n    key: key,\n  };\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.culture)) {\n    queryParameters.culture = options.culture;\n  }\n\n  this._resource = new _Resource_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z({\n    url: url,\n    queryParameters: queryParameters,\n  });\n}\n\nObject.defineProperties(BingMapsGeocoderService.prototype, {\n  /**\n   * The URL endpoint for the Bing geocoder service\n   * @type {String}\n   * @memberof BingMapsGeocoderService.prototype\n   * @readonly\n   */\n  url: {\n    get: function () {\n      return url;\n    },\n  },\n\n  /**\n   * The key for the Bing geocoder service\n   * @type {String}\n   * @memberof BingMapsGeocoderService.prototype\n   * @readonly\n   */\n  key: {\n    get: function () {\n      return this._key;\n    },\n  },\n});\n\n/**\n * @function\n *\n * @param {String} query The query to be sent to the geocoder service\n * @returns {Promise<GeocoderService.Result[]>}\n */\nBingMapsGeocoderService.prototype.geocode = function (query) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("query", query);\n  //>>includeEnd(\'debug\');\n\n  var resource = this._resource.getDerivedResource({\n    queryParameters: {\n      query: query,\n    },\n  });\n\n  return resource.fetchJsonp("jsonp").then(function (result) {\n    if (result.resourceSets.length === 0) {\n      return [];\n    }\n\n    var results = result.resourceSets[0].resources;\n\n    return results.map(function (resource) {\n      var bbox = resource.bbox;\n      var south = bbox[0];\n      var west = bbox[1];\n      var north = bbox[2];\n      var east = bbox[3];\n      return {\n        displayName: resource.name,\n        destination: _Rectangle_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromDegrees */ .Z.fromDegrees(west, south, east, north),\n      };\n    });\n  });\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (BingMapsGeocoderService)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMyNzcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStCO0FBQ2M7QUFDTjtBQUNGO0FBQ0Y7QUFDYzs7QUFFakQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRLCtCQUErQixnSUFBZ0k7QUFDbEw7QUFDQTtBQUNBLFlBQVkscUVBQVksVUFBVSwyRkFBeUI7QUFDM0Q7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLE1BQU0sZ0VBQU87QUFDYjtBQUNBOztBQUVBLHVCQUF1Qiw2REFBUTtBQUMvQjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc0ZBQW1CO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsc0ZBQXFCO0FBQzFDO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLHNFQUFlLHVFQUF1QixJQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvQmluZ01hcHNHZW9jb2RlclNlcnZpY2UuanM/ODkwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hlY2sgZnJvbSBcIi4vQ2hlY2suanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4vZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgUmVjdGFuZ2xlIGZyb20gXCIuL1JlY3RhbmdsZS5qc1wiO1xuaW1wb3J0IFJlc291cmNlIGZyb20gXCIuL1Jlc291cmNlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4vRGV2ZWxvcGVyRXJyb3IuanNcIjtcblxudmFyIHVybCA9IFwiaHR0cHM6Ly9kZXYudmlydHVhbGVhcnRoLm5ldC9SRVNUL3YxL0xvY2F0aW9uc1wiO1xuXG4vKipcbiAqIFByb3ZpZGVzIGdlb2NvZGluZyB0aHJvdWdoIEJpbmcgTWFwcy5cbiAqIEBhbGlhcyBCaW5nTWFwc0dlb2NvZGVyU2VydmljZVxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgT2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICogQHBhcmFtIHtTdHJpbmd9IG9wdGlvbnMua2V5IEEga2V5IHRvIHVzZSB3aXRoIHRoZSBCaW5nIE1hcHMgZ2VvY29kaW5nIHNlcnZpY2VcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5jdWx0dXJlXSBBIEJpbmcgTWFwcyB7QGxpbmsgaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvYmluZ21hcHMvcmVzdC1zZXJ2aWNlcy9jb21tb24tcGFyYW1ldGVycy1hbmQtdHlwZXMvc3VwcG9ydGVkLWN1bHR1cmUtY29kZXN8Q3VsdHVyZSBDb2RlfSB0byByZXR1cm4gcmVzdWx0cyBpbiBhIHNwZWNpZmljIGN1bHR1cmUgYW5kIGxhbmd1YWdlLlxuICovXG5mdW5jdGlvbiBCaW5nTWFwc0dlb2NvZGVyU2VydmljZShvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucywgZGVmYXVsdFZhbHVlLkVNUFRZX09CSkVDVCk7XG4gIHZhciBrZXkgPSBvcHRpb25zLmtleTtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGtleSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJvcHRpb25zLmtleSBpcyByZXF1aXJlZC5cIik7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdGhpcy5fa2V5ID0ga2V5O1xuXG4gIHZhciBxdWVyeVBhcmFtZXRlcnMgPSB7XG4gICAga2V5OiBrZXksXG4gIH07XG5cbiAgaWYgKGRlZmluZWQob3B0aW9ucy5jdWx0dXJlKSkge1xuICAgIHF1ZXJ5UGFyYW1ldGVycy5jdWx0dXJlID0gb3B0aW9ucy5jdWx0dXJlO1xuICB9XG5cbiAgdGhpcy5fcmVzb3VyY2UgPSBuZXcgUmVzb3VyY2Uoe1xuICAgIHVybDogdXJsLFxuICAgIHF1ZXJ5UGFyYW1ldGVyczogcXVlcnlQYXJhbWV0ZXJzLFxuICB9KTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoQmluZ01hcHNHZW9jb2RlclNlcnZpY2UucHJvdG90eXBlLCB7XG4gIC8qKlxuICAgKiBUaGUgVVJMIGVuZHBvaW50IGZvciB0aGUgQmluZyBnZW9jb2RlciBzZXJ2aWNlXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBCaW5nTWFwc0dlb2NvZGVyU2VydmljZS5wcm90b3R5cGVcbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICB1cmw6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB1cmw7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGtleSBmb3IgdGhlIEJpbmcgZ2VvY29kZXIgc2VydmljZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgQmluZ01hcHNHZW9jb2RlclNlcnZpY2UucHJvdG90eXBlXG4gICAqIEByZWFkb25seVxuICAgKi9cbiAga2V5OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fa2V5O1xuICAgIH0sXG4gIH0sXG59KTtcblxuLyoqXG4gKiBAZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcXVlcnkgVGhlIHF1ZXJ5IHRvIGJlIHNlbnQgdG8gdGhlIGdlb2NvZGVyIHNlcnZpY2VcbiAqIEByZXR1cm5zIHtQcm9taXNlPEdlb2NvZGVyU2VydmljZS5SZXN1bHRbXT59XG4gKi9cbkJpbmdNYXBzR2VvY29kZXJTZXJ2aWNlLnByb3RvdHlwZS5nZW9jb2RlID0gZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5zdHJpbmcoXCJxdWVyeVwiLCBxdWVyeSk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciByZXNvdXJjZSA9IHRoaXMuX3Jlc291cmNlLmdldERlcml2ZWRSZXNvdXJjZSh7XG4gICAgcXVlcnlQYXJhbWV0ZXJzOiB7XG4gICAgICBxdWVyeTogcXVlcnksXG4gICAgfSxcbiAgfSk7XG5cbiAgcmV0dXJuIHJlc291cmNlLmZldGNoSnNvbnAoXCJqc29ucFwiKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICBpZiAocmVzdWx0LnJlc291cmNlU2V0cy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICB2YXIgcmVzdWx0cyA9IHJlc3VsdC5yZXNvdXJjZVNldHNbMF0ucmVzb3VyY2VzO1xuXG4gICAgcmV0dXJuIHJlc3VsdHMubWFwKGZ1bmN0aW9uIChyZXNvdXJjZSkge1xuICAgICAgdmFyIGJib3ggPSByZXNvdXJjZS5iYm94O1xuICAgICAgdmFyIHNvdXRoID0gYmJveFswXTtcbiAgICAgIHZhciB3ZXN0ID0gYmJveFsxXTtcbiAgICAgIHZhciBub3J0aCA9IGJib3hbMl07XG4gICAgICB2YXIgZWFzdCA9IGJib3hbM107XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaXNwbGF5TmFtZTogcmVzb3VyY2UubmFtZSxcbiAgICAgICAgZGVzdGluYXRpb246IFJlY3RhbmdsZS5mcm9tRGVncmVlcyh3ZXN0LCBzb3V0aCwgZWFzdCwgbm9ydGgpLFxuICAgICAgfTtcbiAgICB9KTtcbiAgfSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQmluZ01hcHNHZW9jb2RlclNlcnZpY2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///33277\n')},88108:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51688);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _GeographicProjection_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39756);\n/* harmony import */ var _Intersect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84935);\n/* harmony import */ var _Rectangle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(96190);\n\n\n\n\n\n\n\n\n\n/**\n * A bounding rectangle given by a corner, width and height.\n * @alias BoundingRectangle\n * @constructor\n *\n * @param {Number} [x=0.0] The x coordinate of the rectangle.\n * @param {Number} [y=0.0] The y coordinate of the rectangle.\n * @param {Number} [width=0.0] The width of the rectangle.\n * @param {Number} [height=0.0] The height of the rectangle.\n *\n * @see BoundingSphere\n * @see Packable\n */\nfunction BoundingRectangle(x, y, width, height) {\n  /**\n   * The x coordinate of the rectangle.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.x = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(x, 0.0);\n\n  /**\n   * The y coordinate of the rectangle.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.y = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(y, 0.0);\n\n  /**\n   * The width of the rectangle.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.width = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(width, 0.0);\n\n  /**\n   * The height of the rectangle.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.height = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(height, 0.0);\n}\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nBoundingRectangle.packedLength = 4;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {BoundingRectangle} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nBoundingRectangle.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(startingIndex, 0);\n\n  array[startingIndex++] = value.x;\n  array[startingIndex++] = value.y;\n  array[startingIndex++] = value.width;\n  array[startingIndex] = value.height;\n\n  return array;\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {BoundingRectangle} [result] The object into which to store the result.\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n */\nBoundingRectangle.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(startingIndex, 0);\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(result)) {\n    result = new BoundingRectangle();\n  }\n  result.x = array[startingIndex++];\n  result.y = array[startingIndex++];\n  result.width = array[startingIndex++];\n  result.height = array[startingIndex];\n  return result;\n};\n\n/**\n * Computes a bounding rectangle enclosing the list of 2D points.\n * The rectangle is oriented with the corner at the bottom left.\n *\n * @param {Cartesian2[]} positions List of points that the bounding rectangle will enclose.  Each point must have <code>x</code> and <code>y</code> properties.\n * @param {BoundingRectangle} [result] The object onto which to store the result.\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n */\nBoundingRectangle.fromPoints = function (positions, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(result)) {\n    result = new BoundingRectangle();\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(positions) || positions.length === 0) {\n    result.x = 0;\n    result.y = 0;\n    result.width = 0;\n    result.height = 0;\n    return result;\n  }\n\n  var length = positions.length;\n\n  var minimumX = positions[0].x;\n  var minimumY = positions[0].y;\n\n  var maximumX = positions[0].x;\n  var maximumY = positions[0].y;\n\n  for (var i = 1; i < length; i++) {\n    var p = positions[i];\n    var x = p.x;\n    var y = p.y;\n\n    minimumX = Math.min(x, minimumX);\n    maximumX = Math.max(x, maximumX);\n    minimumY = Math.min(y, minimumY);\n    maximumY = Math.max(y, maximumY);\n  }\n\n  result.x = minimumX;\n  result.y = minimumY;\n  result.width = maximumX - minimumX;\n  result.height = maximumY - minimumY;\n  return result;\n};\n\nvar defaultProjection = new _GeographicProjection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar fromRectangleLowerLeft = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar fromRectangleUpperRight = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n/**\n * Computes a bounding rectangle from a rectangle.\n *\n * @param {Rectangle} rectangle The valid rectangle used to create a bounding rectangle.\n * @param {Object} [projection=GeographicProjection] The projection used to project the rectangle into 2D.\n * @param {BoundingRectangle} [result] The object onto which to store the result.\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n */\nBoundingRectangle.fromRectangle = function (rectangle, projection, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(result)) {\n    result = new BoundingRectangle();\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(rectangle)) {\n    result.x = 0;\n    result.y = 0;\n    result.width = 0;\n    result.height = 0;\n    return result;\n  }\n\n  projection = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(projection, defaultProjection);\n\n  var lowerLeft = projection.project(\n    _Rectangle_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].southwest */ .Z.southwest(rectangle, fromRectangleLowerLeft)\n  );\n  var upperRight = projection.project(\n    _Rectangle_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].northeast */ .Z.northeast(rectangle, fromRectangleUpperRight)\n  );\n\n  _Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(upperRight, lowerLeft, upperRight);\n\n  result.x = lowerLeft.x;\n  result.y = lowerLeft.y;\n  result.width = upperRight.x;\n  result.height = upperRight.y;\n  return result;\n};\n\n/**\n * Duplicates a BoundingRectangle instance.\n *\n * @param {BoundingRectangle} rectangle The bounding rectangle to duplicate.\n * @param {BoundingRectangle} [result] The object onto which to store the result.\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided. (Returns undefined if rectangle is undefined)\n */\nBoundingRectangle.clone = function (rectangle, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(rectangle)) {\n    return undefined;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(result)) {\n    return new BoundingRectangle(\n      rectangle.x,\n      rectangle.y,\n      rectangle.width,\n      rectangle.height\n    );\n  }\n\n  result.x = rectangle.x;\n  result.y = rectangle.y;\n  result.width = rectangle.width;\n  result.height = rectangle.height;\n  return result;\n};\n\n/**\n * Computes a bounding rectangle that is the union of the left and right bounding rectangles.\n *\n * @param {BoundingRectangle} left A rectangle to enclose in bounding rectangle.\n * @param {BoundingRectangle} right A rectangle to enclose in a bounding rectangle.\n * @param {BoundingRectangle} [result] The object onto which to store the result.\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n */\nBoundingRectangle.union = function (left, right, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("left", left);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("right", right);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(result)) {\n    result = new BoundingRectangle();\n  }\n\n  var lowerLeftX = Math.min(left.x, right.x);\n  var lowerLeftY = Math.min(left.y, right.y);\n  var upperRightX = Math.max(left.x + left.width, right.x + right.width);\n  var upperRightY = Math.max(left.y + left.height, right.y + right.height);\n\n  result.x = lowerLeftX;\n  result.y = lowerLeftY;\n  result.width = upperRightX - lowerLeftX;\n  result.height = upperRightY - lowerLeftY;\n  return result;\n};\n\n/**\n * Computes a bounding rectangle by enlarging the provided rectangle until it contains the provided point.\n *\n * @param {BoundingRectangle} rectangle A rectangle to expand.\n * @param {Cartesian2} point A point to enclose in a bounding rectangle.\n * @param {BoundingRectangle} [result] The object onto which to store the result.\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n */\nBoundingRectangle.expand = function (rectangle, point, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("rectangle", rectangle);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("point", point);\n  //>>includeEnd(\'debug\');\n\n  result = BoundingRectangle.clone(rectangle, result);\n\n  var width = point.x - result.x;\n  var height = point.y - result.y;\n\n  if (width > result.width) {\n    result.width = width;\n  } else if (width < 0) {\n    result.width -= width;\n    result.x = point.x;\n  }\n\n  if (height > result.height) {\n    result.height = height;\n  } else if (height < 0) {\n    result.height -= height;\n    result.y = point.y;\n  }\n\n  return result;\n};\n\n/**\n * Determines if two rectangles intersect.\n *\n * @param {BoundingRectangle} left A rectangle to check for intersection.\n * @param {BoundingRectangle} right The other rectangle to check for intersection.\n * @returns {Intersect} <code>Intersect.INTERSECTING</code> if the rectangles intersect, <code>Intersect.OUTSIDE</code> otherwise.\n */\nBoundingRectangle.intersect = function (left, right) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("left", left);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("right", right);\n  //>>includeEnd(\'debug\');\n\n  var leftX = left.x;\n  var leftY = left.y;\n  var rightX = right.x;\n  var rightY = right.y;\n  if (\n    !(\n      leftX > rightX + right.width ||\n      leftX + left.width < rightX ||\n      leftY + left.height < rightY ||\n      leftY > rightY + right.height\n    )\n  ) {\n    return _Intersect_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].INTERSECTING */ .Z.INTERSECTING;\n  }\n\n  return _Intersect_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].OUTSIDE */ .Z.OUTSIDE;\n};\n\n/**\n * Compares the provided BoundingRectangles componentwise and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {BoundingRectangle} [left] The first BoundingRectangle.\n * @param {BoundingRectangle} [right] The second BoundingRectangle.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nBoundingRectangle.equals = function (left, right) {\n  return (\n    left === right ||\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(left) &&\n      (0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(right) &&\n      left.x === right.x &&\n      left.y === right.y &&\n      left.width === right.width &&\n      left.height === right.height)\n  );\n};\n\n/**\n * Duplicates this BoundingRectangle instance.\n *\n * @param {BoundingRectangle} [result] The object onto which to store the result.\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\n */\nBoundingRectangle.prototype.clone = function (result) {\n  return BoundingRectangle.clone(this, result);\n};\n\n/**\n * Determines if this rectangle intersects with another.\n *\n * @param {BoundingRectangle} right A rectangle to check for intersection.\n * @returns {Intersect} <code>Intersect.INTERSECTING</code> if the rectangles intersect, <code>Intersect.OUTSIDE</code> otherwise.\n */\nBoundingRectangle.prototype.intersect = function (right) {\n  return BoundingRectangle.intersect(this, right);\n};\n\n/**\n * Compares this BoundingRectangle against the provided BoundingRectangle componentwise and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {BoundingRectangle} [right] The right hand side BoundingRectangle.\n * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n */\nBoundingRectangle.prototype.equals = function (right) {\n  return BoundingRectangle.equals(this, right);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (BoundingRectangle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///88108\n')},48243:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51688);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(82982);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50491);\n/* harmony import */ var _GeographicProjection_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39756);\n/* harmony import */ var _Intersect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84935);\n/* harmony import */ var _Interval_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9058);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(68201);\n/* harmony import */ var _Matrix4_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(72248);\n/* harmony import */ var _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(96190);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A bounding sphere with a center and a radius.\n * @alias BoundingSphere\n * @constructor\n *\n * @param {Cartesian3} [center=Cartesian3.ZERO] The center of the bounding sphere.\n * @param {Number} [radius=0.0] The radius of the bounding sphere.\n *\n * @see AxisAlignedBoundingBox\n * @see BoundingRectangle\n * @see Packable\n */\nfunction BoundingSphere(center, radius) {\n  /**\n   * The center point of the sphere.\n   * @type {Cartesian3}\n   * @default {@link Cartesian3.ZERO}\n   */\n  this.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(center, _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO));\n\n  /**\n   * The radius of the sphere.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.radius = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(radius, 0.0);\n}\n\nvar fromPointsXMin = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsYMin = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsZMin = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsXMax = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsYMax = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsZMax = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsCurrentPos = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsRitterCenter = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsMinBoxPt = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsMaxBoxPt = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromPointsNaiveCenterScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar volumeConstant = (4.0 / 3.0) * _Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PI */ .Z.PI;\n\n/**\n * Computes a tight-fitting bounding sphere enclosing a list of 3D Cartesian points.\n * The bounding sphere is computed by running two algorithms, a naive algorithm and\n * Ritter\'s algorithm. The smaller of the two spheres is used to ensure a tight fit.\n *\n * @param {Cartesian3[]} [positions] An array of points that the bounding sphere will enclose.  Each point must have <code>x</code>, <code>y</code>, and <code>z</code> properties.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if one was not provided.\n *\n * @see {@link http://help.agi.com/AGIComponents/html/BlogBoundingSphere.htm|Bounding Sphere computation article}\n */\nBoundingSphere.fromPoints = function (positions, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(positions) || positions.length === 0) {\n    result.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO, result.center);\n    result.radius = 0.0;\n    return result;\n  }\n\n  var currentPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(positions[0], fromPointsCurrentPos);\n\n  var xMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsXMin);\n  var yMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsYMin);\n  var zMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsZMin);\n\n  var xMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsXMax);\n  var yMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsYMax);\n  var zMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsZMax);\n\n  var numPositions = positions.length;\n  var i;\n  for (i = 1; i < numPositions; i++) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(positions[i], currentPos);\n\n    var x = currentPos.x;\n    var y = currentPos.y;\n    var z = currentPos.z;\n\n    // Store points containing the the smallest and largest components\n    if (x < xMin.x) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, xMin);\n    }\n\n    if (x > xMax.x) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, xMax);\n    }\n\n    if (y < yMin.y) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, yMin);\n    }\n\n    if (y > yMax.y) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, yMax);\n    }\n\n    if (z < zMin.z) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, zMin);\n    }\n\n    if (z > zMax.z) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, zMax);\n    }\n  }\n\n  // Compute x-, y-, and z-spans (Squared distances b/n each component\'s min. and max.).\n  var xSpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(xMax, xMin, fromPointsScratch)\n  );\n  var ySpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(yMax, yMin, fromPointsScratch)\n  );\n  var zSpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(zMax, zMin, fromPointsScratch)\n  );\n\n  // Set the diameter endpoints to the largest span.\n  var diameter1 = xMin;\n  var diameter2 = xMax;\n  var maxSpan = xSpan;\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  // Calculate the center of the initial sphere found by Ritter\'s algorithm\n  var ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n\n  // Calculate the radius of the initial sphere found by Ritter\'s algorithm\n  var radiusSquared = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(diameter2, ritterCenter, fromPointsScratch)\n  );\n  var ritterRadius = Math.sqrt(radiusSquared);\n\n  // Find the center of the sphere found using the Naive method.\n  var minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n\n  var maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n\n  var naiveCenter = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].midpoint */ .Z.midpoint(\n    minBoxPt,\n    maxBoxPt,\n    fromPointsNaiveCenterScratch\n  );\n\n  // Begin 2nd pass to find naive radius and modify the ritter sphere.\n  var naiveRadius = 0;\n  for (i = 0; i < numPositions; i++) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(positions[i], currentPos);\n\n    // Find the furthest point from the naive center to calculate the naive radius.\n    var r = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(currentPos, naiveCenter, fromPointsScratch)\n    );\n    if (r > naiveRadius) {\n      naiveRadius = r;\n    }\n\n    // Make adjustments to the Ritter Sphere to include all points.\n    var oldCenterToPointSquared = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(currentPos, ritterCenter, fromPointsScratch)\n    );\n    if (oldCenterToPointSquared > radiusSquared) {\n      var oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n      // Calculate new radius to include the point that lies outside\n      ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n      radiusSquared = ritterRadius * ritterRadius;\n      // Calculate center of new Ritter sphere\n      var oldToNew = oldCenterToPoint - ritterRadius;\n      ritterCenter.x =\n        (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) /\n        oldCenterToPoint;\n      ritterCenter.y =\n        (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) /\n        oldCenterToPoint;\n      ritterCenter.z =\n        (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) /\n        oldCenterToPoint;\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(ritterCenter, result.center);\n    result.radius = ritterRadius;\n  } else {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(naiveCenter, result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n};\n\nvar defaultProjection = new _GeographicProjection_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\nvar fromRectangle2DLowerLeft = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromRectangle2DUpperRight = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromRectangle2DSouthwest = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar fromRectangle2DNortheast = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n/**\n * Computes a bounding sphere from a rectangle projected in 2D.\n *\n * @param {Rectangle} [rectangle] The rectangle around which to create a bounding sphere.\n * @param {Object} [projection=GeographicProjection] The projection used to project the rectangle into 2D.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.fromRectangle2D = function (rectangle, projection, result) {\n  return BoundingSphere.fromRectangleWithHeights2D(\n    rectangle,\n    projection,\n    0.0,\n    0.0,\n    result\n  );\n};\n\n/**\n * Computes a bounding sphere from a rectangle projected in 2D.  The bounding sphere accounts for the\n * object\'s minimum and maximum heights over the rectangle.\n *\n * @param {Rectangle} [rectangle] The rectangle around which to create a bounding sphere.\n * @param {Object} [projection=GeographicProjection] The projection used to project the rectangle into 2D.\n * @param {Number} [minimumHeight=0.0] The minimum height over the rectangle.\n * @param {Number} [maximumHeight=0.0] The maximum height over the rectangle.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.fromRectangleWithHeights2D = function (\n  rectangle,\n  projection,\n  minimumHeight,\n  maximumHeight,\n  result\n) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(rectangle)) {\n    result.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO, result.center);\n    result.radius = 0.0;\n    return result;\n  }\n\n  projection = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(projection, defaultProjection);\n\n  _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].southwest */ .Z.southwest(rectangle, fromRectangle2DSouthwest);\n  fromRectangle2DSouthwest.height = minimumHeight;\n  _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].northeast */ .Z.northeast(rectangle, fromRectangle2DNortheast);\n  fromRectangle2DNortheast.height = maximumHeight;\n\n  var lowerLeft = projection.project(\n    fromRectangle2DSouthwest,\n    fromRectangle2DLowerLeft\n  );\n  var upperRight = projection.project(\n    fromRectangle2DNortheast,\n    fromRectangle2DUpperRight\n  );\n\n  var width = upperRight.x - lowerLeft.x;\n  var height = upperRight.y - lowerLeft.y;\n  var elevation = upperRight.z - lowerLeft.z;\n\n  result.radius =\n    Math.sqrt(width * width + height * height + elevation * elevation) * 0.5;\n  var center = result.center;\n  center.x = lowerLeft.x + width * 0.5;\n  center.y = lowerLeft.y + height * 0.5;\n  center.z = lowerLeft.z + elevation * 0.5;\n  return result;\n};\n\nvar fromRectangle3DScratch = [];\n\n/**\n * Computes a bounding sphere from a rectangle in 3D. The bounding sphere is created using a subsample of points\n * on the ellipsoid and contained in the rectangle. It may not be accurate for all rectangles on all types of ellipsoids.\n *\n * @param {Rectangle} [rectangle] The valid rectangle used to create a bounding sphere.\n * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid used to determine positions of the rectangle.\n * @param {Number} [surfaceHeight=0.0] The height above the surface of the ellipsoid.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.fromRectangle3D = function (\n  rectangle,\n  ellipsoid,\n  surfaceHeight,\n  result\n) {\n  ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WGS84 */ .Z.WGS84);\n  surfaceHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(surfaceHeight, 0.0);\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(rectangle)) {\n    result.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO, result.center);\n    result.radius = 0.0;\n    return result;\n  }\n\n  var positions = _Rectangle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].subsample */ .Z.subsample(\n    rectangle,\n    ellipsoid,\n    surfaceHeight,\n    fromRectangle3DScratch\n  );\n  return BoundingSphere.fromPoints(positions, result);\n};\n\n/**\n * Computes a tight-fitting bounding sphere enclosing a list of 3D points, where the points are\n * stored in a flat array in X, Y, Z, order.  The bounding sphere is computed by running two\n * algorithms, a naive algorithm and Ritter\'s algorithm. The smaller of the two spheres is used to\n * ensure a tight fit.\n *\n * @param {Number[]} [positions] An array of points that the bounding sphere will enclose.  Each point\n *        is formed from three elements in the array in the order X, Y, Z.\n * @param {Cartesian3} [center=Cartesian3.ZERO] The position to which the positions are relative, which need not be the\n *        origin of the coordinate system.  This is useful when the positions are to be used for\n *        relative-to-center (RTC) rendering.\n * @param {Number} [stride=3] The number of array elements per vertex.  It must be at least 3, but it may\n *        be higher.  Regardless of the value of this parameter, the X coordinate of the first position\n *        is at array index 0, the Y coordinate is at array index 1, and the Z coordinate is at array index\n *        2.  When stride is 3, the X coordinate of the next position then begins at array index 3.  If\n *        the stride is 5, however, two array elements are skipped and the next position begins at array\n *        index 5.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if one was not provided.\n *\n * @example\n * // Compute the bounding sphere from 3 positions, each specified relative to a center.\n * // In addition to the X, Y, and Z coordinates, the points array contains two additional\n * // elements per point which are ignored for the purpose of computing the bounding sphere.\n * var center = new Cesium.Cartesian3(1.0, 2.0, 3.0);\n * var points = [1.0, 2.0, 3.0, 0.1, 0.2,\n *               4.0, 5.0, 6.0, 0.1, 0.2,\n *               7.0, 8.0, 9.0, 0.1, 0.2];\n * var sphere = Cesium.BoundingSphere.fromVertices(points, center, 5);\n *\n * @see {@link http://blogs.agi.com/insight3d/index.php/2008/02/04/a-bounding/|Bounding Sphere computation article}\n */\nBoundingSphere.fromVertices = function (positions, center, stride, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(positions) || positions.length === 0) {\n    result.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO, result.center);\n    result.radius = 0.0;\n    return result;\n  }\n\n  center = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(center, _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO);\n\n  stride = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(stride, 3);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("stride", stride, 3);\n  //>>includeEnd(\'debug\');\n\n  var currentPos = fromPointsCurrentPos;\n  currentPos.x = positions[0] + center.x;\n  currentPos.y = positions[1] + center.y;\n  currentPos.z = positions[2] + center.z;\n\n  var xMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsXMin);\n  var yMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsYMin);\n  var zMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsZMin);\n\n  var xMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsXMax);\n  var yMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsYMax);\n  var zMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsZMax);\n\n  var numElements = positions.length;\n  var i;\n  for (i = 0; i < numElements; i += stride) {\n    var x = positions[i] + center.x;\n    var y = positions[i + 1] + center.y;\n    var z = positions[i + 2] + center.z;\n\n    currentPos.x = x;\n    currentPos.y = y;\n    currentPos.z = z;\n\n    // Store points containing the the smallest and largest components\n    if (x < xMin.x) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, xMin);\n    }\n\n    if (x > xMax.x) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, xMax);\n    }\n\n    if (y < yMin.y) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, yMin);\n    }\n\n    if (y > yMax.y) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, yMax);\n    }\n\n    if (z < zMin.z) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, zMin);\n    }\n\n    if (z > zMax.z) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, zMax);\n    }\n  }\n\n  // Compute x-, y-, and z-spans (Squared distances b/n each component\'s min. and max.).\n  var xSpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(xMax, xMin, fromPointsScratch)\n  );\n  var ySpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(yMax, yMin, fromPointsScratch)\n  );\n  var zSpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(zMax, zMin, fromPointsScratch)\n  );\n\n  // Set the diameter endpoints to the largest span.\n  var diameter1 = xMin;\n  var diameter2 = xMax;\n  var maxSpan = xSpan;\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  // Calculate the center of the initial sphere found by Ritter\'s algorithm\n  var ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n\n  // Calculate the radius of the initial sphere found by Ritter\'s algorithm\n  var radiusSquared = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(diameter2, ritterCenter, fromPointsScratch)\n  );\n  var ritterRadius = Math.sqrt(radiusSquared);\n\n  // Find the center of the sphere found using the Naive method.\n  var minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n\n  var maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n\n  var naiveCenter = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].midpoint */ .Z.midpoint(\n    minBoxPt,\n    maxBoxPt,\n    fromPointsNaiveCenterScratch\n  );\n\n  // Begin 2nd pass to find naive radius and modify the ritter sphere.\n  var naiveRadius = 0;\n  for (i = 0; i < numElements; i += stride) {\n    currentPos.x = positions[i] + center.x;\n    currentPos.y = positions[i + 1] + center.y;\n    currentPos.z = positions[i + 2] + center.z;\n\n    // Find the furthest point from the naive center to calculate the naive radius.\n    var r = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(currentPos, naiveCenter, fromPointsScratch)\n    );\n    if (r > naiveRadius) {\n      naiveRadius = r;\n    }\n\n    // Make adjustments to the Ritter Sphere to include all points.\n    var oldCenterToPointSquared = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(currentPos, ritterCenter, fromPointsScratch)\n    );\n    if (oldCenterToPointSquared > radiusSquared) {\n      var oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n      // Calculate new radius to include the point that lies outside\n      ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n      radiusSquared = ritterRadius * ritterRadius;\n      // Calculate center of new Ritter sphere\n      var oldToNew = oldCenterToPoint - ritterRadius;\n      ritterCenter.x =\n        (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) /\n        oldCenterToPoint;\n      ritterCenter.y =\n        (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) /\n        oldCenterToPoint;\n      ritterCenter.z =\n        (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) /\n        oldCenterToPoint;\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(ritterCenter, result.center);\n    result.radius = ritterRadius;\n  } else {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(naiveCenter, result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n};\n\n/**\n * Computes a tight-fitting bounding sphere enclosing a list of EncodedCartesian3s, where the points are\n * stored in parallel flat arrays in X, Y, Z, order.  The bounding sphere is computed by running two\n * algorithms, a naive algorithm and Ritter\'s algorithm. The smaller of the two spheres is used to\n * ensure a tight fit.\n *\n * @param {Number[]} [positionsHigh] An array of high bits of the encoded cartesians that the bounding sphere will enclose.  Each point\n *        is formed from three elements in the array in the order X, Y, Z.\n * @param {Number[]} [positionsLow] An array of low bits of the encoded cartesians that the bounding sphere will enclose.  Each point\n *        is formed from three elements in the array in the order X, Y, Z.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if one was not provided.\n *\n * @see {@link http://blogs.agi.com/insight3d/index.php/2008/02/04/a-bounding/|Bounding Sphere computation article}\n */\nBoundingSphere.fromEncodedCartesianVertices = function (\n  positionsHigh,\n  positionsLow,\n  result\n) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  if (\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(positionsHigh) ||\n    !(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(positionsLow) ||\n    positionsHigh.length !== positionsLow.length ||\n    positionsHigh.length === 0\n  ) {\n    result.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO, result.center);\n    result.radius = 0.0;\n    return result;\n  }\n\n  var currentPos = fromPointsCurrentPos;\n  currentPos.x = positionsHigh[0] + positionsLow[0];\n  currentPos.y = positionsHigh[1] + positionsLow[1];\n  currentPos.z = positionsHigh[2] + positionsLow[2];\n\n  var xMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsXMin);\n  var yMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsYMin);\n  var zMin = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsZMin);\n\n  var xMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsXMax);\n  var yMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsYMax);\n  var zMax = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, fromPointsZMax);\n\n  var numElements = positionsHigh.length;\n  var i;\n  for (i = 0; i < numElements; i += 3) {\n    var x = positionsHigh[i] + positionsLow[i];\n    var y = positionsHigh[i + 1] + positionsLow[i + 1];\n    var z = positionsHigh[i + 2] + positionsLow[i + 2];\n\n    currentPos.x = x;\n    currentPos.y = y;\n    currentPos.z = z;\n\n    // Store points containing the the smallest and largest components\n    if (x < xMin.x) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, xMin);\n    }\n\n    if (x > xMax.x) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, xMax);\n    }\n\n    if (y < yMin.y) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, yMin);\n    }\n\n    if (y > yMax.y) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, yMax);\n    }\n\n    if (z < zMin.z) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, zMin);\n    }\n\n    if (z > zMax.z) {\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(currentPos, zMax);\n    }\n  }\n\n  // Compute x-, y-, and z-spans (Squared distances b/n each component\'s min. and max.).\n  var xSpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(xMax, xMin, fromPointsScratch)\n  );\n  var ySpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(yMax, yMin, fromPointsScratch)\n  );\n  var zSpan = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(zMax, zMin, fromPointsScratch)\n  );\n\n  // Set the diameter endpoints to the largest span.\n  var diameter1 = xMin;\n  var diameter2 = xMax;\n  var maxSpan = xSpan;\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  // Calculate the center of the initial sphere found by Ritter\'s algorithm\n  var ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n\n  // Calculate the radius of the initial sphere found by Ritter\'s algorithm\n  var radiusSquared = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(diameter2, ritterCenter, fromPointsScratch)\n  );\n  var ritterRadius = Math.sqrt(radiusSquared);\n\n  // Find the center of the sphere found using the Naive method.\n  var minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n\n  var maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n\n  var naiveCenter = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].midpoint */ .Z.midpoint(\n    minBoxPt,\n    maxBoxPt,\n    fromPointsNaiveCenterScratch\n  );\n\n  // Begin 2nd pass to find naive radius and modify the ritter sphere.\n  var naiveRadius = 0;\n  for (i = 0; i < numElements; i += 3) {\n    currentPos.x = positionsHigh[i] + positionsLow[i];\n    currentPos.y = positionsHigh[i + 1] + positionsLow[i + 1];\n    currentPos.z = positionsHigh[i + 2] + positionsLow[i + 2];\n\n    // Find the furthest point from the naive center to calculate the naive radius.\n    var r = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(currentPos, naiveCenter, fromPointsScratch)\n    );\n    if (r > naiveRadius) {\n      naiveRadius = r;\n    }\n\n    // Make adjustments to the Ritter Sphere to include all points.\n    var oldCenterToPointSquared = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitudeSquared */ .Z.magnitudeSquared(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(currentPos, ritterCenter, fromPointsScratch)\n    );\n    if (oldCenterToPointSquared > radiusSquared) {\n      var oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n      // Calculate new radius to include the point that lies outside\n      ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n      radiusSquared = ritterRadius * ritterRadius;\n      // Calculate center of new Ritter sphere\n      var oldToNew = oldCenterToPoint - ritterRadius;\n      ritterCenter.x =\n        (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) /\n        oldCenterToPoint;\n      ritterCenter.y =\n        (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) /\n        oldCenterToPoint;\n      ritterCenter.z =\n        (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) /\n        oldCenterToPoint;\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(ritterCenter, result.center);\n    result.radius = ritterRadius;\n  } else {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(naiveCenter, result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n};\n\n/**\n * Computes a bounding sphere from the corner points of an axis-aligned bounding box.  The sphere\n * tighly and fully encompases the box.\n *\n * @param {Cartesian3} [corner] The minimum height over the rectangle.\n * @param {Cartesian3} [oppositeCorner] The maximum height over the rectangle.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n *\n * @example\n * // Create a bounding sphere around the unit cube\n * var sphere = Cesium.BoundingSphere.fromCornerPoints(new Cesium.Cartesian3(-0.5, -0.5, -0.5), new Cesium.Cartesian3(0.5, 0.5, 0.5));\n */\nBoundingSphere.fromCornerPoints = function (corner, oppositeCorner, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("corner", corner);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("oppositeCorner", oppositeCorner);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  var center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].midpoint */ .Z.midpoint(corner, oppositeCorner, result.center);\n  result.radius = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(center, oppositeCorner);\n  return result;\n};\n\n/**\n * Creates a bounding sphere encompassing an ellipsoid.\n *\n * @param {Ellipsoid} ellipsoid The ellipsoid around which to create a bounding sphere.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n *\n * @example\n * var boundingSphere = Cesium.BoundingSphere.fromEllipsoid(ellipsoid);\n */\nBoundingSphere.fromEllipsoid = function (ellipsoid, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("ellipsoid", ellipsoid);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO, result.center);\n  result.radius = ellipsoid.maximumRadius;\n  return result;\n};\n\nvar fromBoundingSpheresScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n/**\n * Computes a tight-fitting bounding sphere enclosing the provided array of bounding spheres.\n *\n * @param {BoundingSphere[]} [boundingSpheres] The array of bounding spheres.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.fromBoundingSpheres = function (boundingSpheres, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(boundingSpheres) || boundingSpheres.length === 0) {\n    result.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO, result.center);\n    result.radius = 0.0;\n    return result;\n  }\n\n  var length = boundingSpheres.length;\n  if (length === 1) {\n    return BoundingSphere.clone(boundingSpheres[0], result);\n  }\n\n  if (length === 2) {\n    return BoundingSphere.union(boundingSpheres[0], boundingSpheres[1], result);\n  }\n\n  var positions = [];\n  var i;\n  for (i = 0; i < length; i++) {\n    positions.push(boundingSpheres[i].center);\n  }\n\n  result = BoundingSphere.fromPoints(positions, result);\n\n  var center = result.center;\n  var radius = result.radius;\n  for (i = 0; i < length; i++) {\n    var tmp = boundingSpheres[i];\n    radius = Math.max(\n      radius,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(center, tmp.center, fromBoundingSpheresScratch) +\n        tmp.radius\n    );\n  }\n  result.radius = radius;\n\n  return result;\n};\n\nvar fromOrientedBoundingBoxScratchU = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromOrientedBoundingBoxScratchV = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar fromOrientedBoundingBoxScratchW = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n/**\n * Computes a tight-fitting bounding sphere enclosing the provided oriented bounding box.\n *\n * @param {OrientedBoundingBox} orientedBoundingBox The oriented bounding box.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.fromOrientedBoundingBox = function (\n  orientedBoundingBox,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("orientedBoundingBox", orientedBoundingBox);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  var halfAxes = orientedBoundingBox.halfAxes;\n  var u = _Matrix3_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 0, fromOrientedBoundingBoxScratchU);\n  var v = _Matrix3_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 1, fromOrientedBoundingBoxScratchV);\n  var w = _Matrix3_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 2, fromOrientedBoundingBoxScratchW);\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(u, v, u);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(u, w, u);\n\n  result.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(orientedBoundingBox.center, result.center);\n  result.radius = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(u);\n\n  return result;\n};\n\n/**\n * Duplicates a BoundingSphere instance.\n *\n * @param {BoundingSphere} sphere The bounding sphere to duplicate.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided. (Returns undefined if sphere is undefined)\n */\nBoundingSphere.clone = function (sphere, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(sphere)) {\n    return undefined;\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    return new BoundingSphere(sphere.center, sphere.radius);\n  }\n\n  result.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(sphere.center, result.center);\n  result.radius = sphere.radius;\n  return result;\n};\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nBoundingSphere.packedLength = 4;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {BoundingSphere} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nBoundingSphere.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var center = value.center;\n  array[startingIndex++] = center.x;\n  array[startingIndex++] = center.y;\n  array[startingIndex++] = center.z;\n  array[startingIndex] = value.radius;\n\n  return array;\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {BoundingSphere} [result] The object into which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if one was not provided.\n */\nBoundingSphere.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(startingIndex, 0);\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  var center = result.center;\n  center.x = array[startingIndex++];\n  center.y = array[startingIndex++];\n  center.z = array[startingIndex++];\n  result.radius = array[startingIndex];\n  return result;\n};\n\nvar unionScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar unionScratchCenter = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * Computes a bounding sphere that contains both the left and right bounding spheres.\n *\n * @param {BoundingSphere} left A sphere to enclose in a bounding sphere.\n * @param {BoundingSphere} right A sphere to enclose in a bounding sphere.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.union = function (left, right, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("left", left);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("right", right);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  var leftCenter = left.center;\n  var leftRadius = left.radius;\n  var rightCenter = right.center;\n  var rightRadius = right.radius;\n\n  var toRightCenter = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(\n    rightCenter,\n    leftCenter,\n    unionScratch\n  );\n  var centerSeparation = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(toRightCenter);\n\n  if (leftRadius >= centerSeparation + rightRadius) {\n    // Left sphere wins.\n    left.clone(result);\n    return result;\n  }\n\n  if (rightRadius >= centerSeparation + leftRadius) {\n    // Right sphere wins.\n    right.clone(result);\n    return result;\n  }\n\n  // There are two tangent points, one on far side of each sphere.\n  var halfDistanceBetweenTangentPoints =\n    (leftRadius + centerSeparation + rightRadius) * 0.5;\n\n  // Compute the center point halfway between the two tangent points.\n  var center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    toRightCenter,\n    (-leftRadius + halfDistanceBetweenTangentPoints) / centerSeparation,\n    unionScratchCenter\n  );\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(center, leftCenter, center);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(center, result.center);\n  result.radius = halfDistanceBetweenTangentPoints;\n\n  return result;\n};\n\nvar expandScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * Computes a bounding sphere by enlarging the provided sphere to contain the provided point.\n *\n * @param {BoundingSphere} sphere A sphere to expand.\n * @param {Cartesian3} point A point to enclose in a bounding sphere.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.expand = function (sphere, point, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("sphere", sphere);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("point", point);\n  //>>includeEnd(\'debug\');\n\n  result = BoundingSphere.clone(sphere, result);\n\n  var radius = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(point, result.center, expandScratch)\n  );\n  if (radius > result.radius) {\n    result.radius = radius;\n  }\n\n  return result;\n};\n\n/**\n * Determines which side of a plane a sphere is located.\n *\n * @param {BoundingSphere} sphere The bounding sphere to test.\n * @param {Plane} plane The plane to test against.\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire sphere is on the side of the plane\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire sphere is\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the sphere\n *                      intersects the plane.\n */\nBoundingSphere.intersectPlane = function (sphere, plane) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("sphere", sphere);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("plane", plane);\n  //>>includeEnd(\'debug\');\n\n  var center = sphere.center;\n  var radius = sphere.radius;\n  var normal = plane.normal;\n  var distanceToPlane = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(normal, center) + plane.distance;\n\n  if (distanceToPlane < -radius) {\n    // The center point is negative side of the plane normal\n    return _Intersect_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].OUTSIDE */ .Z.OUTSIDE;\n  } else if (distanceToPlane < radius) {\n    // The center point is positive side of the plane, but radius extends beyond it; partial overlap\n    return _Intersect_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].INTERSECTING */ .Z.INTERSECTING;\n  }\n  return _Intersect_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].INSIDE */ .Z.INSIDE;\n};\n\n/**\n * Applies a 4x4 affine transformation matrix to a bounding sphere.\n *\n * @param {BoundingSphere} sphere The bounding sphere to apply the transformation to.\n * @param {Matrix4} transform The transformation matrix to apply to the bounding sphere.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.transform = function (sphere, transform, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("sphere", sphere);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("transform", transform);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  result.center = _Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n    transform,\n    sphere.center,\n    result.center\n  );\n  result.radius = _Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getMaximumScale */ .Z.getMaximumScale(transform) * sphere.radius;\n\n  return result;\n};\n\nvar distanceSquaredToScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n/**\n * Computes the estimated distance squared from the closest point on a bounding sphere to a point.\n *\n * @param {BoundingSphere} sphere The sphere.\n * @param {Cartesian3} cartesian The point\n * @returns {Number} The distance squared from the bounding sphere to the point. Returns 0 if the point is inside the sphere.\n *\n * @example\n * // Sort bounding spheres from back to front\n * spheres.sort(function(a, b) {\n *     return Cesium.BoundingSphere.distanceSquaredTo(b, camera.positionWC) - Cesium.BoundingSphere.distanceSquaredTo(a, camera.positionWC);\n * });\n */\nBoundingSphere.distanceSquaredTo = function (sphere, cartesian) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("sphere", sphere);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("cartesian", cartesian);\n  //>>includeEnd(\'debug\');\n\n  var diff = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(\n    sphere.center,\n    cartesian,\n    distanceSquaredToScratch\n  );\n\n  var distance = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(diff) - sphere.radius;\n  if (distance <= 0.0) {\n    return 0.0;\n  }\n\n  return distance * distance;\n};\n\n/**\n * Applies a 4x4 affine transformation matrix to a bounding sphere where there is no scale\n * The transformation matrix is not verified to have a uniform scale of 1.\n * This method is faster than computing the general bounding sphere transform using {@link BoundingSphere.transform}.\n *\n * @param {BoundingSphere} sphere The bounding sphere to apply the transformation to.\n * @param {Matrix4} transform The transformation matrix to apply to the bounding sphere.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n *\n * @example\n * var modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(positionOnEllipsoid);\n * var boundingSphere = new Cesium.BoundingSphere();\n * var newBoundingSphere = Cesium.BoundingSphere.transformWithoutScale(boundingSphere, modelMatrix);\n */\nBoundingSphere.transformWithoutScale = function (sphere, transform, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("sphere", sphere);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("transform", transform);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new BoundingSphere();\n  }\n\n  result.center = _Matrix4_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n    transform,\n    sphere.center,\n    result.center\n  );\n  result.radius = sphere.radius;\n\n  return result;\n};\n\nvar scratchCartesian3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * The distances calculated by the vector from the center of the bounding sphere to position projected onto direction\n * plus/minus the radius of the bounding sphere.\n * <br>\n * If you imagine the infinite number of planes with normal direction, this computes the smallest distance to the\n * closest and farthest planes from position that intersect the bounding sphere.\n *\n * @param {BoundingSphere} sphere The bounding sphere to calculate the distance to.\n * @param {Cartesian3} position The position to calculate the distance from.\n * @param {Cartesian3} direction The direction from position.\n * @param {Interval} [result] A Interval to store the nearest and farthest distances.\n * @returns {Interval} The nearest and farthest distances on the bounding sphere from position in direction.\n */\nBoundingSphere.computePlaneDistances = function (\n  sphere,\n  position,\n  direction,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("sphere", sphere);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("position", position);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("direction", direction);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new _Interval_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\n  }\n\n  var toCenter = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(\n    sphere.center,\n    position,\n    scratchCartesian3\n  );\n  var mag = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(direction, toCenter);\n\n  result.start = mag - sphere.radius;\n  result.stop = mag + sphere.radius;\n  return result;\n};\n\nvar projectTo2DNormalScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar projectTo2DEastScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar projectTo2DNorthScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar projectTo2DWestScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar projectTo2DSouthScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar projectTo2DCartographicScratch = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar projectTo2DPositionsScratch = new Array(8);\nfor (var n = 0; n < 8; ++n) {\n  projectTo2DPositionsScratch[n] = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n}\n\nvar projectTo2DProjection = new _GeographicProjection_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n/**\n * Creates a bounding sphere in 2D from a bounding sphere in 3D world coordinates.\n *\n * @param {BoundingSphere} sphere The bounding sphere to transform to 2D.\n * @param {Object} [projection=GeographicProjection] The projection to 2D.\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.projectTo2D = function (sphere, projection, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("sphere", sphere);\n  //>>includeEnd(\'debug\');\n\n  projection = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(projection, projectTo2DProjection);\n\n  var ellipsoid = projection.ellipsoid;\n  var center = sphere.center;\n  var radius = sphere.radius;\n\n  var normal;\n  if (_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(center, _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO)) {\n    // Bounding sphere is at the center. The geodetic surface normal is not\n    // defined here so pick the x-axis as a fallback.\n    normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_X */ .Z.UNIT_X, projectTo2DNormalScratch);\n  } else {\n    normal = ellipsoid.geodeticSurfaceNormal(center, projectTo2DNormalScratch);\n  }\n  var east = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNIT_Z */ .Z.UNIT_Z,\n    normal,\n    projectTo2DEastScratch\n  );\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(east, east);\n  var north = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(normal, east, projectTo2DNorthScratch);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(north, north);\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(normal, radius, normal);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(north, radius, north);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(east, radius, east);\n\n  var south = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(north, projectTo2DSouthScratch);\n  var west = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(east, projectTo2DWestScratch);\n\n  var positions = projectTo2DPositionsScratch;\n\n  // top NE corner\n  var corner = positions[0];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(normal, north, corner);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(corner, east, corner);\n\n  // top NW corner\n  corner = positions[1];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(normal, north, corner);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(corner, west, corner);\n\n  // top SW corner\n  corner = positions[2];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(normal, south, corner);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(corner, west, corner);\n\n  // top SE corner\n  corner = positions[3];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(normal, south, corner);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(corner, east, corner);\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(normal, normal);\n\n  // bottom NE corner\n  corner = positions[4];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(normal, north, corner);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(corner, east, corner);\n\n  // bottom NW corner\n  corner = positions[5];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(normal, north, corner);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(corner, west, corner);\n\n  // bottom SW corner\n  corner = positions[6];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(normal, south, corner);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(corner, west, corner);\n\n  // bottom SE corner\n  corner = positions[7];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(normal, south, corner);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(corner, east, corner);\n\n  var length = positions.length;\n  for (var i = 0; i < length; ++i) {\n    var position = positions[i];\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(center, position, position);\n    var cartographic = ellipsoid.cartesianToCartographic(\n      position,\n      projectTo2DCartographicScratch\n    );\n    projection.project(cartographic, position);\n  }\n\n  result = BoundingSphere.fromPoints(positions, result);\n\n  // swizzle center components\n  center = result.center;\n  var x = center.x;\n  var y = center.y;\n  var z = center.z;\n  center.x = z;\n  center.y = x;\n  center.z = y;\n\n  return result;\n};\n\n/**\n * Determines whether or not a sphere is hidden from view by the occluder.\n *\n * @param {BoundingSphere} sphere The bounding sphere surrounding the occludee object.\n * @param {Occluder} occluder The occluder.\n * @returns {Boolean} <code>true</code> if the sphere is not visible; otherwise <code>false</code>.\n */\nBoundingSphere.isOccluded = function (sphere, occluder) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("sphere", sphere);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].typeOf.object */ .Z.typeOf.object("occluder", occluder);\n  //>>includeEnd(\'debug\');\n  return !occluder.isBoundingSphereVisible(sphere);\n};\n\n/**\n * Compares the provided BoundingSphere componentwise and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {BoundingSphere} [left] The first BoundingSphere.\n * @param {BoundingSphere} [right] The second BoundingSphere.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nBoundingSphere.equals = function (left, right) {\n  return (\n    left === right ||\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(left) &&\n      (0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(right) &&\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(left.center, right.center) &&\n      left.radius === right.radius)\n  );\n};\n\n/**\n * Determines which side of a plane the sphere is located.\n *\n * @param {Plane} plane The plane to test against.\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire sphere is on the side of the plane\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire sphere is\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the sphere\n *                      intersects the plane.\n */\nBoundingSphere.prototype.intersectPlane = function (plane) {\n  return BoundingSphere.intersectPlane(this, plane);\n};\n\n/**\n * Computes the estimated distance squared from the closest point on a bounding sphere to a point.\n *\n * @param {Cartesian3} cartesian The point\n * @returns {Number} The estimated distance squared from the bounding sphere to the point.\n *\n * @example\n * // Sort bounding spheres from back to front\n * spheres.sort(function(a, b) {\n *     return b.distanceSquaredTo(camera.positionWC) - a.distanceSquaredTo(camera.positionWC);\n * });\n */\nBoundingSphere.prototype.distanceSquaredTo = function (cartesian) {\n  return BoundingSphere.distanceSquaredTo(this, cartesian);\n};\n\n/**\n * The distances calculated by the vector from the center of the bounding sphere to position projected onto direction\n * plus/minus the radius of the bounding sphere.\n * <br>\n * If you imagine the infinite number of planes with normal direction, this computes the smallest distance to the\n * closest and farthest planes from position that intersect the bounding sphere.\n *\n * @param {Cartesian3} position The position to calculate the distance from.\n * @param {Cartesian3} direction The direction from position.\n * @param {Interval} [result] A Interval to store the nearest and farthest distances.\n * @returns {Interval} The nearest and farthest distances on the bounding sphere from position in direction.\n */\nBoundingSphere.prototype.computePlaneDistances = function (\n  position,\n  direction,\n  result\n) {\n  return BoundingSphere.computePlaneDistances(\n    this,\n    position,\n    direction,\n    result\n  );\n};\n\n/**\n * Determines whether or not a sphere is hidden from view by the occluder.\n *\n * @param {Occluder} occluder The occluder.\n * @returns {Boolean} <code>true</code> if the sphere is not visible; otherwise <code>false</code>.\n */\nBoundingSphere.prototype.isOccluded = function (occluder) {\n  return BoundingSphere.isOccluded(this, occluder);\n};\n\n/**\n * Compares this BoundingSphere against the provided BoundingSphere componentwise and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {BoundingSphere} [right] The right hand side BoundingSphere.\n * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n */\nBoundingSphere.prototype.equals = function (right) {\n  return BoundingSphere.equals(this, right);\n};\n\n/**\n * Duplicates this BoundingSphere instance.\n *\n * @param {BoundingSphere} [result] The object onto which to store the result.\n * @returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if none was provided.\n */\nBoundingSphere.prototype.clone = function (result) {\n  return BoundingSphere.clone(this, result);\n};\n\n/**\n * Computes the radius of the BoundingSphere.\n * @returns {Number} The radius of the BoundingSphere.\n */\nBoundingSphere.prototype.volume = function () {\n  var radius = this.radius;\n  return volumeConstant * radius * radius * radius;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (BoundingSphere);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///48243\n')},20305:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23401);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12572);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(87379);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(97264);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(67252);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar diffScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n/**\n * Describes a cube centered at the origin.\n *\n * @alias BoxGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3} options.minimum The minimum x, y, and z coordinates of the box.\n * @param {Cartesian3} options.maximum The maximum x, y, and z coordinates of the box.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n *\n * @see BoxGeometry.fromDimensions\n * @see BoxGeometry.createGeometry\n * @see Packable\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Box.html|Cesium Sandcastle Box Demo}\n *\n * @example\n * var box = new Cesium.BoxGeometry({\n *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY,\n *   maximum : new Cesium.Cartesian3(250000.0, 250000.0, 250000.0),\n *   minimum : new Cesium.Cartesian3(-250000.0, -250000.0, -250000.0)\n * });\n * var geometry = Cesium.BoxGeometry.createGeometry(box);\n */\nfunction BoxGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var min = options.minimum;\n  var max = options.maximum;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("min", min);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("max", max);\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(options.offsetAttribute) &&\n    options.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].TOP */ .Z.TOP\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var vertexFormat = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.vertexFormat, _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].DEFAULT */ .Z.DEFAULT);\n\n  this._minimum = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(min);\n  this._maximum = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(max);\n  this._vertexFormat = vertexFormat;\n  this._offsetAttribute = options.offsetAttribute;\n  this._workerName = "createBoxGeometry";\n}\n\n/**\n * Creates a cube centered at the origin given its dimensions.\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3} options.dimensions The width, depth, and height of the box stored in the x, y, and z coordinates of the <code>Cartesian3</code>, respectively.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @returns {BoxGeometry}\n *\n * @exception {DeveloperError} All dimensions components must be greater than or equal to zero.\n *\n *\n * @example\n * var box = Cesium.BoxGeometry.fromDimensions({\n *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY,\n *   dimensions : new Cesium.Cartesian3(500000.0, 500000.0, 500000.0)\n * });\n * var geometry = Cesium.BoxGeometry.createGeometry(box);\n *\n * @see BoxGeometry.createGeometry\n */\nBoxGeometry.fromDimensions = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var dimensions = options.dimensions;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("dimensions", dimensions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("dimensions.x", dimensions.x, 0);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("dimensions.y", dimensions.y, 0);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("dimensions.z", dimensions.z, 0);\n  //>>includeEnd(\'debug\');\n\n  var corner = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(dimensions, 0.5, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z());\n\n  return new BoxGeometry({\n    minimum: _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].negate */ .Z.negate(corner, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z()),\n    maximum: corner,\n    vertexFormat: options.vertexFormat,\n    offsetAttribute: options.offsetAttribute,\n  });\n};\n\n/**\n * Creates a cube from the dimensions of an AxisAlignedBoundingBox.\n *\n * @param {AxisAlignedBoundingBox} boundingBox A description of the AxisAlignedBoundingBox.\n * @returns {BoxGeometry}\n *\n *\n *\n * @example\n * var aabb = Cesium.AxisAlignedBoundingBox.fromPoints(Cesium.Cartesian3.fromDegreesArray([\n *      -72.0, 40.0,\n *      -70.0, 35.0,\n *      -75.0, 30.0,\n *      -70.0, 30.0,\n *      -68.0, 40.0\n * ]));\n * var box = Cesium.BoxGeometry.fromAxisAlignedBoundingBox(aabb);\n *\n * @see BoxGeometry.createGeometry\n */\nBoxGeometry.fromAxisAlignedBoundingBox = function (boundingBox) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("boundingBox", boundingBox);\n  //>>includeEnd(\'debug\');\n\n  return new BoxGeometry({\n    minimum: boundingBox.minimum,\n    maximum: boundingBox.maximum,\n  });\n};\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nBoxGeometry.packedLength =\n  2 * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength + _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].packedLength */ .Z.packedLength + 1;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {BoxGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nBoxGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startingIndex, 0);\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(value._minimum, array, startingIndex);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(\n    value._maximum,\n    array,\n    startingIndex + _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength\n  );\n  _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].pack */ .Z.pack(\n    value._vertexFormat,\n    array,\n    startingIndex + 2 * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength\n  );\n  array[\n    startingIndex + 2 * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength + _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].packedLength */ .Z.packedLength\n  ] = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(value._offsetAttribute, -1);\n\n  return array;\n};\n\nvar scratchMin = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchMax = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchVertexFormat = new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\nvar scratchOptions = {\n  minimum: scratchMin,\n  maximum: scratchMax,\n  vertexFormat: scratchVertexFormat,\n  offsetAttribute: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {BoxGeometry} [result] The object into which to store the result.\n * @returns {BoxGeometry} The modified result parameter or a new BoxGeometry instance if one was not provided.\n */\nBoxGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var min = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchMin);\n  var max = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex + _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength,\n    scratchMax\n  );\n  var vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex + 2 * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength,\n    scratchVertexFormat\n  );\n  var offsetAttribute =\n    array[\n      startingIndex + 2 * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength + _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].packedLength */ .Z.packedLength\n    ];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(result)) {\n    scratchOptions.offsetAttribute =\n      offsetAttribute === -1 ? undefined : offsetAttribute;\n    return new BoxGeometry(scratchOptions);\n  }\n\n  result._minimum = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(min, result._minimum);\n  result._maximum = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(max, result._maximum);\n  result._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].clone */ .Z.clone(vertexFormat, result._vertexFormat);\n  result._offsetAttribute =\n    offsetAttribute === -1 ? undefined : offsetAttribute;\n\n  return result;\n};\n\n/**\n * Computes the geometric representation of a box, including its vertices, indices, and a bounding sphere.\n *\n * @param {BoxGeometry} boxGeometry A description of the box.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nBoxGeometry.createGeometry = function (boxGeometry) {\n  var min = boxGeometry._minimum;\n  var max = boxGeometry._maximum;\n  var vertexFormat = boxGeometry._vertexFormat;\n\n  if (_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(min, max)) {\n    return;\n  }\n\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\n  var indices;\n  var positions;\n\n  if (\n    vertexFormat.position &&\n    (vertexFormat.st ||\n      vertexFormat.normal ||\n      vertexFormat.tangent ||\n      vertexFormat.bitangent)\n  ) {\n    if (vertexFormat.position) {\n      // 8 corner points.  Duplicated 3 times each for each incident edge/face.\n      positions = new Float64Array(6 * 4 * 3);\n\n      // +z face\n      positions[0] = min.x;\n      positions[1] = min.y;\n      positions[2] = max.z;\n      positions[3] = max.x;\n      positions[4] = min.y;\n      positions[5] = max.z;\n      positions[6] = max.x;\n      positions[7] = max.y;\n      positions[8] = max.z;\n      positions[9] = min.x;\n      positions[10] = max.y;\n      positions[11] = max.z;\n\n      // -z face\n      positions[12] = min.x;\n      positions[13] = min.y;\n      positions[14] = min.z;\n      positions[15] = max.x;\n      positions[16] = min.y;\n      positions[17] = min.z;\n      positions[18] = max.x;\n      positions[19] = max.y;\n      positions[20] = min.z;\n      positions[21] = min.x;\n      positions[22] = max.y;\n      positions[23] = min.z;\n\n      // +x face\n      positions[24] = max.x;\n      positions[25] = min.y;\n      positions[26] = min.z;\n      positions[27] = max.x;\n      positions[28] = max.y;\n      positions[29] = min.z;\n      positions[30] = max.x;\n      positions[31] = max.y;\n      positions[32] = max.z;\n      positions[33] = max.x;\n      positions[34] = min.y;\n      positions[35] = max.z;\n\n      // -x face\n      positions[36] = min.x;\n      positions[37] = min.y;\n      positions[38] = min.z;\n      positions[39] = min.x;\n      positions[40] = max.y;\n      positions[41] = min.z;\n      positions[42] = min.x;\n      positions[43] = max.y;\n      positions[44] = max.z;\n      positions[45] = min.x;\n      positions[46] = min.y;\n      positions[47] = max.z;\n\n      // +y face\n      positions[48] = min.x;\n      positions[49] = max.y;\n      positions[50] = min.z;\n      positions[51] = max.x;\n      positions[52] = max.y;\n      positions[53] = min.z;\n      positions[54] = max.x;\n      positions[55] = max.y;\n      positions[56] = max.z;\n      positions[57] = min.x;\n      positions[58] = max.y;\n      positions[59] = max.z;\n\n      // -y face\n      positions[60] = min.x;\n      positions[61] = min.y;\n      positions[62] = min.z;\n      positions[63] = max.x;\n      positions[64] = min.y;\n      positions[65] = min.z;\n      positions[66] = max.x;\n      positions[67] = min.y;\n      positions[68] = max.z;\n      positions[69] = min.x;\n      positions[70] = min.y;\n      positions[71] = max.z;\n\n      attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DOUBLE */ .Z.DOUBLE,\n        componentsPerAttribute: 3,\n        values: positions,\n      });\n    }\n\n    if (vertexFormat.normal) {\n      var normals = new Float32Array(6 * 4 * 3);\n\n      // +z face\n      normals[0] = 0.0;\n      normals[1] = 0.0;\n      normals[2] = 1.0;\n      normals[3] = 0.0;\n      normals[4] = 0.0;\n      normals[5] = 1.0;\n      normals[6] = 0.0;\n      normals[7] = 0.0;\n      normals[8] = 1.0;\n      normals[9] = 0.0;\n      normals[10] = 0.0;\n      normals[11] = 1.0;\n\n      // -z face\n      normals[12] = 0.0;\n      normals[13] = 0.0;\n      normals[14] = -1.0;\n      normals[15] = 0.0;\n      normals[16] = 0.0;\n      normals[17] = -1.0;\n      normals[18] = 0.0;\n      normals[19] = 0.0;\n      normals[20] = -1.0;\n      normals[21] = 0.0;\n      normals[22] = 0.0;\n      normals[23] = -1.0;\n\n      // +x face\n      normals[24] = 1.0;\n      normals[25] = 0.0;\n      normals[26] = 0.0;\n      normals[27] = 1.0;\n      normals[28] = 0.0;\n      normals[29] = 0.0;\n      normals[30] = 1.0;\n      normals[31] = 0.0;\n      normals[32] = 0.0;\n      normals[33] = 1.0;\n      normals[34] = 0.0;\n      normals[35] = 0.0;\n\n      // -x face\n      normals[36] = -1.0;\n      normals[37] = 0.0;\n      normals[38] = 0.0;\n      normals[39] = -1.0;\n      normals[40] = 0.0;\n      normals[41] = 0.0;\n      normals[42] = -1.0;\n      normals[43] = 0.0;\n      normals[44] = 0.0;\n      normals[45] = -1.0;\n      normals[46] = 0.0;\n      normals[47] = 0.0;\n\n      // +y face\n      normals[48] = 0.0;\n      normals[49] = 1.0;\n      normals[50] = 0.0;\n      normals[51] = 0.0;\n      normals[52] = 1.0;\n      normals[53] = 0.0;\n      normals[54] = 0.0;\n      normals[55] = 1.0;\n      normals[56] = 0.0;\n      normals[57] = 0.0;\n      normals[58] = 1.0;\n      normals[59] = 0.0;\n\n      // -y face\n      normals[60] = 0.0;\n      normals[61] = -1.0;\n      normals[62] = 0.0;\n      normals[63] = 0.0;\n      normals[64] = -1.0;\n      normals[65] = 0.0;\n      normals[66] = 0.0;\n      normals[67] = -1.0;\n      normals[68] = 0.0;\n      normals[69] = 0.0;\n      normals[70] = -1.0;\n      normals[71] = 0.0;\n\n      attributes.normal = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n        values: normals,\n      });\n    }\n\n    if (vertexFormat.st) {\n      var texCoords = new Float32Array(6 * 4 * 2);\n\n      // +z face\n      texCoords[0] = 0.0;\n      texCoords[1] = 0.0;\n      texCoords[2] = 1.0;\n      texCoords[3] = 0.0;\n      texCoords[4] = 1.0;\n      texCoords[5] = 1.0;\n      texCoords[6] = 0.0;\n      texCoords[7] = 1.0;\n\n      // -z face\n      texCoords[8] = 1.0;\n      texCoords[9] = 0.0;\n      texCoords[10] = 0.0;\n      texCoords[11] = 0.0;\n      texCoords[12] = 0.0;\n      texCoords[13] = 1.0;\n      texCoords[14] = 1.0;\n      texCoords[15] = 1.0;\n\n      //+x face\n      texCoords[16] = 0.0;\n      texCoords[17] = 0.0;\n      texCoords[18] = 1.0;\n      texCoords[19] = 0.0;\n      texCoords[20] = 1.0;\n      texCoords[21] = 1.0;\n      texCoords[22] = 0.0;\n      texCoords[23] = 1.0;\n\n      // -x face\n      texCoords[24] = 1.0;\n      texCoords[25] = 0.0;\n      texCoords[26] = 0.0;\n      texCoords[27] = 0.0;\n      texCoords[28] = 0.0;\n      texCoords[29] = 1.0;\n      texCoords[30] = 1.0;\n      texCoords[31] = 1.0;\n\n      // +y face\n      texCoords[32] = 1.0;\n      texCoords[33] = 0.0;\n      texCoords[34] = 0.0;\n      texCoords[35] = 0.0;\n      texCoords[36] = 0.0;\n      texCoords[37] = 1.0;\n      texCoords[38] = 1.0;\n      texCoords[39] = 1.0;\n\n      // -y face\n      texCoords[40] = 0.0;\n      texCoords[41] = 0.0;\n      texCoords[42] = 1.0;\n      texCoords[43] = 0.0;\n      texCoords[44] = 1.0;\n      texCoords[45] = 1.0;\n      texCoords[46] = 0.0;\n      texCoords[47] = 1.0;\n\n      attributes.st = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 2,\n        values: texCoords,\n      });\n    }\n\n    if (vertexFormat.tangent) {\n      var tangents = new Float32Array(6 * 4 * 3);\n\n      // +z face\n      tangents[0] = 1.0;\n      tangents[1] = 0.0;\n      tangents[2] = 0.0;\n      tangents[3] = 1.0;\n      tangents[4] = 0.0;\n      tangents[5] = 0.0;\n      tangents[6] = 1.0;\n      tangents[7] = 0.0;\n      tangents[8] = 0.0;\n      tangents[9] = 1.0;\n      tangents[10] = 0.0;\n      tangents[11] = 0.0;\n\n      // -z face\n      tangents[12] = -1.0;\n      tangents[13] = 0.0;\n      tangents[14] = 0.0;\n      tangents[15] = -1.0;\n      tangents[16] = 0.0;\n      tangents[17] = 0.0;\n      tangents[18] = -1.0;\n      tangents[19] = 0.0;\n      tangents[20] = 0.0;\n      tangents[21] = -1.0;\n      tangents[22] = 0.0;\n      tangents[23] = 0.0;\n\n      // +x face\n      tangents[24] = 0.0;\n      tangents[25] = 1.0;\n      tangents[26] = 0.0;\n      tangents[27] = 0.0;\n      tangents[28] = 1.0;\n      tangents[29] = 0.0;\n      tangents[30] = 0.0;\n      tangents[31] = 1.0;\n      tangents[32] = 0.0;\n      tangents[33] = 0.0;\n      tangents[34] = 1.0;\n      tangents[35] = 0.0;\n\n      // -x face\n      tangents[36] = 0.0;\n      tangents[37] = -1.0;\n      tangents[38] = 0.0;\n      tangents[39] = 0.0;\n      tangents[40] = -1.0;\n      tangents[41] = 0.0;\n      tangents[42] = 0.0;\n      tangents[43] = -1.0;\n      tangents[44] = 0.0;\n      tangents[45] = 0.0;\n      tangents[46] = -1.0;\n      tangents[47] = 0.0;\n\n      // +y face\n      tangents[48] = -1.0;\n      tangents[49] = 0.0;\n      tangents[50] = 0.0;\n      tangents[51] = -1.0;\n      tangents[52] = 0.0;\n      tangents[53] = 0.0;\n      tangents[54] = -1.0;\n      tangents[55] = 0.0;\n      tangents[56] = 0.0;\n      tangents[57] = -1.0;\n      tangents[58] = 0.0;\n      tangents[59] = 0.0;\n\n      // -y face\n      tangents[60] = 1.0;\n      tangents[61] = 0.0;\n      tangents[62] = 0.0;\n      tangents[63] = 1.0;\n      tangents[64] = 0.0;\n      tangents[65] = 0.0;\n      tangents[66] = 1.0;\n      tangents[67] = 0.0;\n      tangents[68] = 0.0;\n      tangents[69] = 1.0;\n      tangents[70] = 0.0;\n      tangents[71] = 0.0;\n\n      attributes.tangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n        values: tangents,\n      });\n    }\n\n    if (vertexFormat.bitangent) {\n      var bitangents = new Float32Array(6 * 4 * 3);\n\n      // +z face\n      bitangents[0] = 0.0;\n      bitangents[1] = 1.0;\n      bitangents[2] = 0.0;\n      bitangents[3] = 0.0;\n      bitangents[4] = 1.0;\n      bitangents[5] = 0.0;\n      bitangents[6] = 0.0;\n      bitangents[7] = 1.0;\n      bitangents[8] = 0.0;\n      bitangents[9] = 0.0;\n      bitangents[10] = 1.0;\n      bitangents[11] = 0.0;\n\n      // -z face\n      bitangents[12] = 0.0;\n      bitangents[13] = 1.0;\n      bitangents[14] = 0.0;\n      bitangents[15] = 0.0;\n      bitangents[16] = 1.0;\n      bitangents[17] = 0.0;\n      bitangents[18] = 0.0;\n      bitangents[19] = 1.0;\n      bitangents[20] = 0.0;\n      bitangents[21] = 0.0;\n      bitangents[22] = 1.0;\n      bitangents[23] = 0.0;\n\n      // +x face\n      bitangents[24] = 0.0;\n      bitangents[25] = 0.0;\n      bitangents[26] = 1.0;\n      bitangents[27] = 0.0;\n      bitangents[28] = 0.0;\n      bitangents[29] = 1.0;\n      bitangents[30] = 0.0;\n      bitangents[31] = 0.0;\n      bitangents[32] = 1.0;\n      bitangents[33] = 0.0;\n      bitangents[34] = 0.0;\n      bitangents[35] = 1.0;\n\n      // -x face\n      bitangents[36] = 0.0;\n      bitangents[37] = 0.0;\n      bitangents[38] = 1.0;\n      bitangents[39] = 0.0;\n      bitangents[40] = 0.0;\n      bitangents[41] = 1.0;\n      bitangents[42] = 0.0;\n      bitangents[43] = 0.0;\n      bitangents[44] = 1.0;\n      bitangents[45] = 0.0;\n      bitangents[46] = 0.0;\n      bitangents[47] = 1.0;\n\n      // +y face\n      bitangents[48] = 0.0;\n      bitangents[49] = 0.0;\n      bitangents[50] = 1.0;\n      bitangents[51] = 0.0;\n      bitangents[52] = 0.0;\n      bitangents[53] = 1.0;\n      bitangents[54] = 0.0;\n      bitangents[55] = 0.0;\n      bitangents[56] = 1.0;\n      bitangents[57] = 0.0;\n      bitangents[58] = 0.0;\n      bitangents[59] = 1.0;\n\n      // -y face\n      bitangents[60] = 0.0;\n      bitangents[61] = 0.0;\n      bitangents[62] = 1.0;\n      bitangents[63] = 0.0;\n      bitangents[64] = 0.0;\n      bitangents[65] = 1.0;\n      bitangents[66] = 0.0;\n      bitangents[67] = 0.0;\n      bitangents[68] = 1.0;\n      bitangents[69] = 0.0;\n      bitangents[70] = 0.0;\n      bitangents[71] = 1.0;\n\n      attributes.bitangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n        values: bitangents,\n      });\n    }\n\n    // 12 triangles:  6 faces, 2 triangles each.\n    indices = new Uint16Array(6 * 2 * 3);\n\n    // +z face\n    indices[0] = 0;\n    indices[1] = 1;\n    indices[2] = 2;\n    indices[3] = 0;\n    indices[4] = 2;\n    indices[5] = 3;\n\n    // -z face\n    indices[6] = 4 + 2;\n    indices[7] = 4 + 1;\n    indices[8] = 4 + 0;\n    indices[9] = 4 + 3;\n    indices[10] = 4 + 2;\n    indices[11] = 4 + 0;\n\n    // +x face\n    indices[12] = 8 + 0;\n    indices[13] = 8 + 1;\n    indices[14] = 8 + 2;\n    indices[15] = 8 + 0;\n    indices[16] = 8 + 2;\n    indices[17] = 8 + 3;\n\n    // -x face\n    indices[18] = 12 + 2;\n    indices[19] = 12 + 1;\n    indices[20] = 12 + 0;\n    indices[21] = 12 + 3;\n    indices[22] = 12 + 2;\n    indices[23] = 12 + 0;\n\n    // +y face\n    indices[24] = 16 + 2;\n    indices[25] = 16 + 1;\n    indices[26] = 16 + 0;\n    indices[27] = 16 + 3;\n    indices[28] = 16 + 2;\n    indices[29] = 16 + 0;\n\n    // -y face\n    indices[30] = 20 + 0;\n    indices[31] = 20 + 1;\n    indices[32] = 20 + 2;\n    indices[33] = 20 + 0;\n    indices[34] = 20 + 2;\n    indices[35] = 20 + 3;\n  } else {\n    // Positions only - no need to duplicate corner points\n    positions = new Float64Array(8 * 3);\n\n    positions[0] = min.x;\n    positions[1] = min.y;\n    positions[2] = min.z;\n    positions[3] = max.x;\n    positions[4] = min.y;\n    positions[5] = min.z;\n    positions[6] = max.x;\n    positions[7] = max.y;\n    positions[8] = min.z;\n    positions[9] = min.x;\n    positions[10] = max.y;\n    positions[11] = min.z;\n    positions[12] = min.x;\n    positions[13] = min.y;\n    positions[14] = max.z;\n    positions[15] = max.x;\n    positions[16] = min.y;\n    positions[17] = max.z;\n    positions[18] = max.x;\n    positions[19] = max.y;\n    positions[20] = max.z;\n    positions[21] = min.x;\n    positions[22] = max.y;\n    positions[23] = max.z;\n\n    attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DOUBLE */ .Z.DOUBLE,\n      componentsPerAttribute: 3,\n      values: positions,\n    });\n\n    // 12 triangles:  6 faces, 2 triangles each.\n    indices = new Uint16Array(6 * 2 * 3);\n\n    // plane z = corner.Z\n    indices[0] = 4;\n    indices[1] = 5;\n    indices[2] = 6;\n    indices[3] = 4;\n    indices[4] = 6;\n    indices[5] = 7;\n\n    // plane z = -corner.Z\n    indices[6] = 1;\n    indices[7] = 0;\n    indices[8] = 3;\n    indices[9] = 1;\n    indices[10] = 3;\n    indices[11] = 2;\n\n    // plane x = corner.X\n    indices[12] = 1;\n    indices[13] = 6;\n    indices[14] = 5;\n    indices[15] = 1;\n    indices[16] = 2;\n    indices[17] = 6;\n\n    // plane y = corner.Y\n    indices[18] = 2;\n    indices[19] = 3;\n    indices[20] = 7;\n    indices[21] = 2;\n    indices[22] = 7;\n    indices[23] = 6;\n\n    // plane x = -corner.X\n    indices[24] = 3;\n    indices[25] = 0;\n    indices[26] = 4;\n    indices[27] = 3;\n    indices[28] = 4;\n    indices[29] = 7;\n\n    // plane y = -corner.Y\n    indices[30] = 0;\n    indices[31] = 1;\n    indices[32] = 5;\n    indices[33] = 0;\n    indices[34] = 5;\n    indices[35] = 4;\n  }\n\n  var diff = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(max, min, diffScratch);\n  var radius = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitude */ .Z.magnitude(diff) * 0.5;\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(boxGeometry._offsetAttribute)) {\n    var length = positions.length;\n    var applyOffset = new Uint8Array(length / 3);\n    var offsetValue =\n      boxGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].NONE */ .Z.NONE ? 0 : 1;\n    (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, offsetValue);\n    attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 1,\n      values: applyOffset,\n    });\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n    boundingSphere: new _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO, radius),\n    offsetAttribute: boxGeometry._offsetAttribute,\n  });\n};\n\nvar unitBoxGeometry;\n\n/**\n * Returns the geometric representation of a unit box, including its vertices, indices, and a bounding sphere.\n * @returns {Geometry} The computed vertices and indices.\n *\n * @private\n */\nBoxGeometry.getUnitBox = function () {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(unitBoxGeometry)) {\n    unitBoxGeometry = BoxGeometry.createGeometry(\n      BoxGeometry.fromDimensions({\n        dimensions: new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(1.0, 1.0, 1.0),\n        vertexFormat: _VertexFormat_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].POSITION_ONLY */ .Z.POSITION_ONLY,\n      })\n    );\n  }\n  return unitBoxGeometry;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (BoxGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMseUVBQWU7QUFDdEQ7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8saUVBQU87QUFDZDtBQUNBO0FBQ0Esd0JBQXdCLCtEQUFVO0FBQ2xDLHNCQUFzQiw4RkFBMEI7QUFDaEQsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL0NvcmUvQm94R2VvbWV0cnkuanM/YjU5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXJyYXlGaWxsIGZyb20gXCIuL2FycmF5RmlsbC5qc1wiO1xuaW1wb3J0IEJvdW5kaW5nU3BoZXJlIGZyb20gXCIuL0JvdW5kaW5nU3BoZXJlLmpzXCI7XG5pbXBvcnQgQ2FydGVzaWFuMyBmcm9tIFwiLi9DYXJ0ZXNpYW4zLmpzXCI7XG5pbXBvcnQgQ2hlY2sgZnJvbSBcIi4vQ2hlY2suanNcIjtcbmltcG9ydCBDb21wb25lbnREYXRhdHlwZSBmcm9tIFwiLi9Db21wb25lbnREYXRhdHlwZS5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi9EZXZlbG9wZXJFcnJvci5qc1wiO1xuaW1wb3J0IEdlb21ldHJ5IGZyb20gXCIuL0dlb21ldHJ5LmpzXCI7XG5pbXBvcnQgR2VvbWV0cnlBdHRyaWJ1dGUgZnJvbSBcIi4vR2VvbWV0cnlBdHRyaWJ1dGUuanNcIjtcbmltcG9ydCBHZW9tZXRyeUF0dHJpYnV0ZXMgZnJvbSBcIi4vR2VvbWV0cnlBdHRyaWJ1dGVzLmpzXCI7XG5pbXBvcnQgR2VvbWV0cnlPZmZzZXRBdHRyaWJ1dGUgZnJvbSBcIi4vR2VvbWV0cnlPZmZzZXRBdHRyaWJ1dGUuanNcIjtcbmltcG9ydCBQcmltaXRpdmVUeXBlIGZyb20gXCIuL1ByaW1pdGl2ZVR5cGUuanNcIjtcbmltcG9ydCBWZXJ0ZXhGb3JtYXQgZnJvbSBcIi4vVmVydGV4Rm9ybWF0LmpzXCI7XG5cbnZhciBkaWZmU2NyYXRjaCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG5cbi8qKlxuICogRGVzY3JpYmVzIGEgY3ViZSBjZW50ZXJlZCBhdCB0aGUgb3JpZ2luLlxuICpcbiAqIEBhbGlhcyBCb3hHZW9tZXRyeVxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgT2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICogQHBhcmFtIHtDYXJ0ZXNpYW4zfSBvcHRpb25zLm1pbmltdW0gVGhlIG1pbmltdW0geCwgeSwgYW5kIHogY29vcmRpbmF0ZXMgb2YgdGhlIGJveC5cbiAqIEBwYXJhbSB7Q2FydGVzaWFuM30gb3B0aW9ucy5tYXhpbXVtIFRoZSBtYXhpbXVtIHgsIHksIGFuZCB6IGNvb3JkaW5hdGVzIG9mIHRoZSBib3guXG4gKiBAcGFyYW0ge1ZlcnRleEZvcm1hdH0gW29wdGlvbnMudmVydGV4Rm9ybWF0PVZlcnRleEZvcm1hdC5ERUZBVUxUXSBUaGUgdmVydGV4IGF0dHJpYnV0ZXMgdG8gYmUgY29tcHV0ZWQuXG4gKlxuICogQHNlZSBCb3hHZW9tZXRyeS5mcm9tRGltZW5zaW9uc1xuICogQHNlZSBCb3hHZW9tZXRyeS5jcmVhdGVHZW9tZXRyeVxuICogQHNlZSBQYWNrYWJsZVxuICpcbiAqIEBkZW1vIHtAbGluayBodHRwczovL3NhbmRjYXN0bGUuY2VzaXVtLmNvbS9pbmRleC5odG1sP3NyYz1Cb3guaHRtbHxDZXNpdW0gU2FuZGNhc3RsZSBCb3ggRGVtb31cbiAqXG4gKiBAZXhhbXBsZVxuICogdmFyIGJveCA9IG5ldyBDZXNpdW0uQm94R2VvbWV0cnkoe1xuICogICB2ZXJ0ZXhGb3JtYXQgOiBDZXNpdW0uVmVydGV4Rm9ybWF0LlBPU0lUSU9OX09OTFksXG4gKiAgIG1heGltdW0gOiBuZXcgQ2VzaXVtLkNhcnRlc2lhbjMoMjUwMDAwLjAsIDI1MDAwMC4wLCAyNTAwMDAuMCksXG4gKiAgIG1pbmltdW0gOiBuZXcgQ2VzaXVtLkNhcnRlc2lhbjMoLTI1MDAwMC4wLCAtMjUwMDAwLjAsIC0yNTAwMDAuMClcbiAqIH0pO1xuICogdmFyIGdlb21ldHJ5ID0gQ2VzaXVtLkJveEdlb21ldHJ5LmNyZWF0ZUdlb21ldHJ5KGJveCk7XG4gKi9cbmZ1bmN0aW9uIEJveEdlb21ldHJ5KG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcblxuICB2YXIgbWluID0gb3B0aW9ucy5taW5pbXVtO1xuICB2YXIgbWF4ID0gb3B0aW9ucy5tYXhpbXVtO1xuXG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5vYmplY3QoXCJtaW5cIiwgbWluKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcIm1heFwiLCBtYXgpO1xuICBpZiAoXG4gICAgZGVmaW5lZChvcHRpb25zLm9mZnNldEF0dHJpYnV0ZSkgJiZcbiAgICBvcHRpb25zLm9mZnNldEF0dHJpYnV0ZSA9PT0gR2VvbWV0cnlPZmZzZXRBdHRyaWJ1dGUuVE9QXG4gICkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIFwiR2VvbWV0cnlPZmZzZXRBdHRyaWJ1dGUuVE9QIGlzIG5vdCBhIHN1cHBvcnRlZCBvcHRpb25zLm9mZnNldEF0dHJpYnV0ZSBmb3IgdGhpcyBnZW9tZXRyeS5cIlxuICAgICk7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIHZlcnRleEZvcm1hdCA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLnZlcnRleEZvcm1hdCwgVmVydGV4Rm9ybWF0LkRFRkFVTFQpO1xuXG4gIHRoaXMuX21pbmltdW0gPSBDYXJ0ZXNpYW4zLmNsb25lKG1pbik7XG4gIHRoaXMuX21heGltdW0gPSBDYXJ0ZXNpYW4zLmNsb25lKG1heCk7XG4gIHRoaXMuX3ZlcnRleEZvcm1hdCA9IHZlcnRleEZvcm1hdDtcbiAgdGhpcy5fb2Zmc2V0QXR0cmlidXRlID0gb3B0aW9ucy5vZmZzZXRBdHRyaWJ1dGU7XG4gIHRoaXMuX3dvcmtlck5hbWUgPSBcImNyZWF0ZUJveEdlb21ldHJ5XCI7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGN1YmUgY2VudGVyZWQgYXQgdGhlIG9yaWdpbiBnaXZlbiBpdHMgZGltZW5zaW9ucy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBPYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge0NhcnRlc2lhbjN9IG9wdGlvbnMuZGltZW5zaW9ucyBUaGUgd2lkdGgsIGRlcHRoLCBhbmQgaGVpZ2h0IG9mIHRoZSBib3ggc3RvcmVkIGluIHRoZSB4LCB5LCBhbmQgeiBjb29yZGluYXRlcyBvZiB0aGUgPGNvZGU+Q2FydGVzaWFuMzwvY29kZT4sIHJlc3BlY3RpdmVseS5cbiAqIEBwYXJhbSB7VmVydGV4Rm9ybWF0fSBbb3B0aW9ucy52ZXJ0ZXhGb3JtYXQ9VmVydGV4Rm9ybWF0LkRFRkFVTFRdIFRoZSB2ZXJ0ZXggYXR0cmlidXRlcyB0byBiZSBjb21wdXRlZC5cbiAqIEByZXR1cm5zIHtCb3hHZW9tZXRyeX1cbiAqXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gQWxsIGRpbWVuc2lvbnMgY29tcG9uZW50cyBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byB6ZXJvLlxuICpcbiAqXG4gKiBAZXhhbXBsZVxuICogdmFyIGJveCA9IENlc2l1bS5Cb3hHZW9tZXRyeS5mcm9tRGltZW5zaW9ucyh7XG4gKiAgIHZlcnRleEZvcm1hdCA6IENlc2l1bS5WZXJ0ZXhGb3JtYXQuUE9TSVRJT05fT05MWSxcbiAqICAgZGltZW5zaW9ucyA6IG5ldyBDZXNpdW0uQ2FydGVzaWFuMyg1MDAwMDAuMCwgNTAwMDAwLjAsIDUwMDAwMC4wKVxuICogfSk7XG4gKiB2YXIgZ2VvbWV0cnkgPSBDZXNpdW0uQm94R2VvbWV0cnkuY3JlYXRlR2VvbWV0cnkoYm94KTtcbiAqXG4gKiBAc2VlIEJveEdlb21ldHJ5LmNyZWF0ZUdlb21ldHJ5XG4gKi9cbkJveEdlb21ldHJ5LmZyb21EaW1lbnNpb25zID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcbiAgdmFyIGRpbWVuc2lvbnMgPSBvcHRpb25zLmRpbWVuc2lvbnM7XG5cbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcImRpbWVuc2lvbnNcIiwgZGltZW5zaW9ucyk7XG4gIENoZWNrLnR5cGVPZi5udW1iZXIuZ3JlYXRlclRoYW5PckVxdWFscyhcImRpbWVuc2lvbnMueFwiLCBkaW1lbnNpb25zLngsIDApO1xuICBDaGVjay50eXBlT2YubnVtYmVyLmdyZWF0ZXJUaGFuT3JFcXVhbHMoXCJkaW1lbnNpb25zLnlcIiwgZGltZW5zaW9ucy55LCAwKTtcbiAgQ2hlY2sudHlwZU9mLm51bWJlci5ncmVhdGVyVGhhbk9yRXF1YWxzKFwiZGltZW5zaW9ucy56XCIsIGRpbWVuc2lvbnMueiwgMCk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBjb3JuZXIgPSBDYXJ0ZXNpYW4zLm11bHRpcGx5QnlTY2FsYXIoZGltZW5zaW9ucywgMC41LCBuZXcgQ2FydGVzaWFuMygpKTtcblxuICByZXR1cm4gbmV3IEJveEdlb21ldHJ5KHtcbiAgICBtaW5pbXVtOiBDYXJ0ZXNpYW4zLm5lZ2F0ZShjb3JuZXIsIG5ldyBDYXJ0ZXNpYW4zKCkpLFxuICAgIG1heGltdW06IGNvcm5lcixcbiAgICB2ZXJ0ZXhGb3JtYXQ6IG9wdGlvbnMudmVydGV4Rm9ybWF0LFxuICAgIG9mZnNldEF0dHJpYnV0ZTogb3B0aW9ucy5vZmZzZXRBdHRyaWJ1dGUsXG4gIH0pO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY3ViZSBmcm9tIHRoZSBkaW1lbnNpb25zIG9mIGFuIEF4aXNBbGlnbmVkQm91bmRpbmdCb3guXG4gKlxuICogQHBhcmFtIHtBeGlzQWxpZ25lZEJvdW5kaW5nQm94fSBib3VuZGluZ0JveCBBIGRlc2NyaXB0aW9uIG9mIHRoZSBBeGlzQWxpZ25lZEJvdW5kaW5nQm94LlxuICogQHJldHVybnMge0JveEdlb21ldHJ5fVxuICpcbiAqXG4gKlxuICogQGV4YW1wbGVcbiAqIHZhciBhYWJiID0gQ2VzaXVtLkF4aXNBbGlnbmVkQm91bmRpbmdCb3guZnJvbVBvaW50cyhDZXNpdW0uQ2FydGVzaWFuMy5mcm9tRGVncmVlc0FycmF5KFtcbiAqICAgICAgLTcyLjAsIDQwLjAsXG4gKiAgICAgIC03MC4wLCAzNS4wLFxuICogICAgICAtNzUuMCwgMzAuMCxcbiAqICAgICAgLTcwLjAsIDMwLjAsXG4gKiAgICAgIC02OC4wLCA0MC4wXG4gKiBdKSk7XG4gKiB2YXIgYm94ID0gQ2VzaXVtLkJveEdlb21ldHJ5LmZyb21BeGlzQWxpZ25lZEJvdW5kaW5nQm94KGFhYmIpO1xuICpcbiAqIEBzZWUgQm94R2VvbWV0cnkuY3JlYXRlR2VvbWV0cnlcbiAqL1xuQm94R2VvbWV0cnkuZnJvbUF4aXNBbGlnbmVkQm91bmRpbmdCb3ggPSBmdW5jdGlvbiAoYm91bmRpbmdCb3gpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcImJvdW5kaW5nQm94XCIsIGJvdW5kaW5nQm94KTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgcmV0dXJuIG5ldyBCb3hHZW9tZXRyeSh7XG4gICAgbWluaW11bTogYm91bmRpbmdCb3gubWluaW11bSxcbiAgICBtYXhpbXVtOiBib3VuZGluZ0JveC5tYXhpbXVtLFxuICB9KTtcbn07XG5cbi8qKlxuICogVGhlIG51bWJlciBvZiBlbGVtZW50cyB1c2VkIHRvIHBhY2sgdGhlIG9iamVjdCBpbnRvIGFuIGFycmF5LlxuICogQHR5cGUge051bWJlcn1cbiAqL1xuQm94R2VvbWV0cnkucGFja2VkTGVuZ3RoID1cbiAgMiAqIENhcnRlc2lhbjMucGFja2VkTGVuZ3RoICsgVmVydGV4Rm9ybWF0LnBhY2tlZExlbmd0aCArIDE7XG5cbi8qKlxuICogU3RvcmVzIHRoZSBwcm92aWRlZCBpbnN0YW5jZSBpbnRvIHRoZSBwcm92aWRlZCBhcnJheS5cbiAqXG4gKiBAcGFyYW0ge0JveEdlb21ldHJ5fSB2YWx1ZSBUaGUgdmFsdWUgdG8gcGFjay5cbiAqIEBwYXJhbSB7TnVtYmVyW119IGFycmF5IFRoZSBhcnJheSB0byBwYWNrIGludG8uXG4gKiBAcGFyYW0ge051bWJlcn0gW3N0YXJ0aW5nSW5kZXg9MF0gVGhlIGluZGV4IGludG8gdGhlIGFycmF5IGF0IHdoaWNoIHRvIHN0YXJ0IHBhY2tpbmcgdGhlIGVsZW1lbnRzLlxuICpcbiAqIEByZXR1cm5zIHtOdW1iZXJbXX0gVGhlIGFycmF5IHRoYXQgd2FzIHBhY2tlZCBpbnRvXG4gKi9cbkJveEdlb21ldHJ5LnBhY2sgPSBmdW5jdGlvbiAodmFsdWUsIGFycmF5LCBzdGFydGluZ0luZGV4KSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5vYmplY3QoXCJ2YWx1ZVwiLCB2YWx1ZSk7XG4gIENoZWNrLmRlZmluZWQoXCJhcnJheVwiLCBhcnJheSk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHN0YXJ0aW5nSW5kZXggPSBkZWZhdWx0VmFsdWUoc3RhcnRpbmdJbmRleCwgMCk7XG5cbiAgQ2FydGVzaWFuMy5wYWNrKHZhbHVlLl9taW5pbXVtLCBhcnJheSwgc3RhcnRpbmdJbmRleCk7XG4gIENhcnRlc2lhbjMucGFjayhcbiAgICB2YWx1ZS5fbWF4aW11bSxcbiAgICBhcnJheSxcbiAgICBzdGFydGluZ0luZGV4ICsgQ2FydGVzaWFuMy5wYWNrZWRMZW5ndGhcbiAgKTtcbiAgVmVydGV4Rm9ybWF0LnBhY2soXG4gICAgdmFsdWUuX3ZlcnRleEZvcm1hdCxcbiAgICBhcnJheSxcbiAgICBzdGFydGluZ0luZGV4ICsgMiAqIENhcnRlc2lhbjMucGFja2VkTGVuZ3RoXG4gICk7XG4gIGFycmF5W1xuICAgIHN0YXJ0aW5nSW5kZXggKyAyICogQ2FydGVzaWFuMy5wYWNrZWRMZW5ndGggKyBWZXJ0ZXhGb3JtYXQucGFja2VkTGVuZ3RoXG4gIF0gPSBkZWZhdWx0VmFsdWUodmFsdWUuX29mZnNldEF0dHJpYnV0ZSwgLTEpO1xuXG4gIHJldHVybiBhcnJheTtcbn07XG5cbnZhciBzY3JhdGNoTWluID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciBzY3JhdGNoTWF4ID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciBzY3JhdGNoVmVydGV4Rm9ybWF0ID0gbmV3IFZlcnRleEZvcm1hdCgpO1xudmFyIHNjcmF0Y2hPcHRpb25zID0ge1xuICBtaW5pbXVtOiBzY3JhdGNoTWluLFxuICBtYXhpbXVtOiBzY3JhdGNoTWF4LFxuICB2ZXJ0ZXhGb3JtYXQ6IHNjcmF0Y2hWZXJ0ZXhGb3JtYXQsXG4gIG9mZnNldEF0dHJpYnV0ZTogdW5kZWZpbmVkLFxufTtcblxuLyoqXG4gKiBSZXRyaWV2ZXMgYW4gaW5zdGFuY2UgZnJvbSBhIHBhY2tlZCBhcnJheS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcltdfSBhcnJheSBUaGUgcGFja2VkIGFycmF5LlxuICogQHBhcmFtIHtOdW1iZXJ9IFtzdGFydGluZ0luZGV4PTBdIFRoZSBzdGFydGluZyBpbmRleCBvZiB0aGUgZWxlbWVudCB0byBiZSB1bnBhY2tlZC5cbiAqIEBwYXJhbSB7Qm94R2VvbWV0cnl9IFtyZXN1bHRdIFRoZSBvYmplY3QgaW50byB3aGljaCB0byBzdG9yZSB0aGUgcmVzdWx0LlxuICogQHJldHVybnMge0JveEdlb21ldHJ5fSBUaGUgbW9kaWZpZWQgcmVzdWx0IHBhcmFtZXRlciBvciBhIG5ldyBCb3hHZW9tZXRyeSBpbnN0YW5jZSBpZiBvbmUgd2FzIG5vdCBwcm92aWRlZC5cbiAqL1xuQm94R2VvbWV0cnkudW5wYWNrID0gZnVuY3Rpb24gKGFycmF5LCBzdGFydGluZ0luZGV4LCByZXN1bHQpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2suZGVmaW5lZChcImFycmF5XCIsIGFycmF5KTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgc3RhcnRpbmdJbmRleCA9IGRlZmF1bHRWYWx1ZShzdGFydGluZ0luZGV4LCAwKTtcblxuICB2YXIgbWluID0gQ2FydGVzaWFuMy51bnBhY2soYXJyYXksIHN0YXJ0aW5nSW5kZXgsIHNjcmF0Y2hNaW4pO1xuICB2YXIgbWF4ID0gQ2FydGVzaWFuMy51bnBhY2soXG4gICAgYXJyYXksXG4gICAgc3RhcnRpbmdJbmRleCArIENhcnRlc2lhbjMucGFja2VkTGVuZ3RoLFxuICAgIHNjcmF0Y2hNYXhcbiAgKTtcbiAgdmFyIHZlcnRleEZvcm1hdCA9IFZlcnRleEZvcm1hdC51bnBhY2soXG4gICAgYXJyYXksXG4gICAgc3RhcnRpbmdJbmRleCArIDIgKiBDYXJ0ZXNpYW4zLnBhY2tlZExlbmd0aCxcbiAgICBzY3JhdGNoVmVydGV4Rm9ybWF0XG4gICk7XG4gIHZhciBvZmZzZXRBdHRyaWJ1dGUgPVxuICAgIGFycmF5W1xuICAgICAgc3RhcnRpbmdJbmRleCArIDIgKiBDYXJ0ZXNpYW4zLnBhY2tlZExlbmd0aCArIFZlcnRleEZvcm1hdC5wYWNrZWRMZW5ndGhcbiAgICBdO1xuXG4gIGlmICghZGVmaW5lZChyZXN1bHQpKSB7XG4gICAgc2NyYXRjaE9wdGlvbnMub2Zmc2V0QXR0cmlidXRlID1cbiAgICAgIG9mZnNldEF0dHJpYnV0ZSA9PT0gLTEgPyB1bmRlZmluZWQgOiBvZmZzZXRBdHRyaWJ1dGU7XG4gICAgcmV0dXJuIG5ldyBCb3hHZW9tZXRyeShzY3JhdGNoT3B0aW9ucyk7XG4gIH1cblxuICByZXN1bHQuX21pbmltdW0gPSBDYXJ0ZXNpYW4zLmNsb25lKG1pbiwgcmVzdWx0Ll9taW5pbXVtKTtcbiAgcmVzdWx0Ll9tYXhpbXVtID0gQ2FydGVzaWFuMy5jbG9uZShtYXgsIHJlc3VsdC5fbWF4aW11bSk7XG4gIHJlc3VsdC5fdmVydGV4Rm9ybWF0ID0gVmVydGV4Rm9ybWF0LmNsb25lKHZlcnRleEZvcm1hdCwgcmVzdWx0Ll92ZXJ0ZXhGb3JtYXQpO1xuICByZXN1bHQuX29mZnNldEF0dHJpYnV0ZSA9XG4gICAgb2Zmc2V0QXR0cmlidXRlID09PSAtMSA/IHVuZGVmaW5lZCA6IG9mZnNldEF0dHJpYnV0ZTtcblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgZ2VvbWV0cmljIHJlcHJlc2VudGF0aW9uIG9mIGEgYm94LCBpbmNsdWRpbmcgaXRzIHZlcnRpY2VzLCBpbmRpY2VzLCBhbmQgYSBib3VuZGluZyBzcGhlcmUuXG4gKlxuICogQHBhcmFtIHtCb3hHZW9tZXRyeX0gYm94R2VvbWV0cnkgQSBkZXNjcmlwdGlvbiBvZiB0aGUgYm94LlxuICogQHJldHVybnMge0dlb21ldHJ5fHVuZGVmaW5lZH0gVGhlIGNvbXB1dGVkIHZlcnRpY2VzIGFuZCBpbmRpY2VzLlxuICovXG5Cb3hHZW9tZXRyeS5jcmVhdGVHZW9tZXRyeSA9IGZ1bmN0aW9uIChib3hHZW9tZXRyeSkge1xuICB2YXIgbWluID0gYm94R2VvbWV0cnkuX21pbmltdW07XG4gIHZhciBtYXggPSBib3hHZW9tZXRyeS5fbWF4aW11bTtcbiAgdmFyIHZlcnRleEZvcm1hdCA9IGJveEdlb21ldHJ5Ll92ZXJ0ZXhGb3JtYXQ7XG5cbiAgaWYgKENhcnRlc2lhbjMuZXF1YWxzKG1pbiwgbWF4KSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBhdHRyaWJ1dGVzID0gbmV3IEdlb21ldHJ5QXR0cmlidXRlcygpO1xuICB2YXIgaW5kaWNlcztcbiAgdmFyIHBvc2l0aW9ucztcblxuICBpZiAoXG4gICAgdmVydGV4Rm9ybWF0LnBvc2l0aW9uICYmXG4gICAgKHZlcnRleEZvcm1hdC5zdCB8fFxuICAgICAgdmVydGV4Rm9ybWF0Lm5vcm1hbCB8fFxuICAgICAgdmVydGV4Rm9ybWF0LnRhbmdlbnQgfHxcbiAgICAgIHZlcnRleEZvcm1hdC5iaXRhbmdlbnQpXG4gICkge1xuICAgIGlmICh2ZXJ0ZXhGb3JtYXQucG9zaXRpb24pIHtcbiAgICAgIC8vIDggY29ybmVyIHBvaW50cy4gIER1cGxpY2F0ZWQgMyB0aW1lcyBlYWNoIGZvciBlYWNoIGluY2lkZW50IGVkZ2UvZmFjZS5cbiAgICAgIHBvc2l0aW9ucyA9IG5ldyBGbG9hdDY0QXJyYXkoNiAqIDQgKiAzKTtcblxuICAgICAgLy8gK3ogZmFjZVxuICAgICAgcG9zaXRpb25zWzBdID0gbWluLng7XG4gICAgICBwb3NpdGlvbnNbMV0gPSBtaW4ueTtcbiAgICAgIHBvc2l0aW9uc1syXSA9IG1heC56O1xuICAgICAgcG9zaXRpb25zWzNdID0gbWF4Lng7XG4gICAgICBwb3NpdGlvbnNbNF0gPSBtaW4ueTtcbiAgICAgIHBvc2l0aW9uc1s1XSA9IG1heC56O1xuICAgICAgcG9zaXRpb25zWzZdID0gbWF4Lng7XG4gICAgICBwb3NpdGlvbnNbN10gPSBtYXgueTtcbiAgICAgIHBvc2l0aW9uc1s4XSA9IG1heC56O1xuICAgICAgcG9zaXRpb25zWzldID0gbWluLng7XG4gICAgICBwb3NpdGlvbnNbMTBdID0gbWF4Lnk7XG4gICAgICBwb3NpdGlvbnNbMTFdID0gbWF4Lno7XG5cbiAgICAgIC8vIC16IGZhY2VcbiAgICAgIHBvc2l0aW9uc1sxMl0gPSBtaW4ueDtcbiAgICAgIHBvc2l0aW9uc1sxM10gPSBtaW4ueTtcbiAgICAgIHBvc2l0aW9uc1sxNF0gPSBtaW4uejtcbiAgICAgIHBvc2l0aW9uc1sxNV0gPSBtYXgueDtcbiAgICAgIHBvc2l0aW9uc1sxNl0gPSBtaW4ueTtcbiAgICAgIHBvc2l0aW9uc1sxN10gPSBtaW4uejtcbiAgICAgIHBvc2l0aW9uc1sxOF0gPSBtYXgueDtcbiAgICAgIHBvc2l0aW9uc1sxOV0gPSBtYXgueTtcbiAgICAgIHBvc2l0aW9uc1syMF0gPSBtaW4uejtcbiAgICAgIHBvc2l0aW9uc1syMV0gPSBtaW4ueDtcbiAgICAgIHBvc2l0aW9uc1syMl0gPSBtYXgueTtcbiAgICAgIHBvc2l0aW9uc1syM10gPSBtaW4uejtcblxuICAgICAgLy8gK3ggZmFjZVxuICAgICAgcG9zaXRpb25zWzI0XSA9IG1heC54O1xuICAgICAgcG9zaXRpb25zWzI1XSA9IG1pbi55O1xuICAgICAgcG9zaXRpb25zWzI2XSA9IG1pbi56O1xuICAgICAgcG9zaXRpb25zWzI3XSA9IG1heC54O1xuICAgICAgcG9zaXRpb25zWzI4XSA9IG1heC55O1xuICAgICAgcG9zaXRpb25zWzI5XSA9IG1pbi56O1xuICAgICAgcG9zaXRpb25zWzMwXSA9IG1heC54O1xuICAgICAgcG9zaXRpb25zWzMxXSA9IG1heC55O1xuICAgICAgcG9zaXRpb25zWzMyXSA9IG1heC56O1xuICAgICAgcG9zaXRpb25zWzMzXSA9IG1heC54O1xuICAgICAgcG9zaXRpb25zWzM0XSA9IG1pbi55O1xuICAgICAgcG9zaXRpb25zWzM1XSA9IG1heC56O1xuXG4gICAgICAvLyAteCBmYWNlXG4gICAgICBwb3NpdGlvbnNbMzZdID0gbWluLng7XG4gICAgICBwb3NpdGlvbnNbMzddID0gbWluLnk7XG4gICAgICBwb3NpdGlvbnNbMzhdID0gbWluLno7XG4gICAgICBwb3NpdGlvbnNbMzldID0gbWluLng7XG4gICAgICBwb3NpdGlvbnNbNDBdID0gbWF4Lnk7XG4gICAgICBwb3NpdGlvbnNbNDFdID0gbWluLno7XG4gICAgICBwb3NpdGlvbnNbNDJdID0gbWluLng7XG4gICAgICBwb3NpdGlvbnNbNDNdID0gbWF4Lnk7XG4gICAgICBwb3NpdGlvbnNbNDRdID0gbWF4Lno7XG4gICAgICBwb3NpdGlvbnNbNDVdID0gbWluLng7XG4gICAgICBwb3NpdGlvbnNbNDZdID0gbWluLnk7XG4gICAgICBwb3NpdGlvbnNbNDddID0gbWF4Lno7XG5cbiAgICAgIC8vICt5IGZhY2VcbiAgICAgIHBvc2l0aW9uc1s0OF0gPSBtaW4ueDtcbiAgICAgIHBvc2l0aW9uc1s0OV0gPSBtYXgueTtcbiAgICAgIHBvc2l0aW9uc1s1MF0gPSBtaW4uejtcbiAgICAgIHBvc2l0aW9uc1s1MV0gPSBtYXgueDtcbiAgICAgIHBvc2l0aW9uc1s1Ml0gPSBtYXgueTtcbiAgICAgIHBvc2l0aW9uc1s1M10gPSBtaW4uejtcbiAgICAgIHBvc2l0aW9uc1s1NF0gPSBtYXgueDtcbiAgICAgIHBvc2l0aW9uc1s1NV0gPSBtYXgueTtcbiAgICAgIHBvc2l0aW9uc1s1Nl0gPSBtYXguejtcbiAgICAgIHBvc2l0aW9uc1s1N10gPSBtaW4ueDtcbiAgICAgIHBvc2l0aW9uc1s1OF0gPSBtYXgueTtcbiAgICAgIHBvc2l0aW9uc1s1OV0gPSBtYXguejtcblxuICAgICAgLy8gLXkgZmFjZVxuICAgICAgcG9zaXRpb25zWzYwXSA9IG1pbi54O1xuICAgICAgcG9zaXRpb25zWzYxXSA9IG1pbi55O1xuICAgICAgcG9zaXRpb25zWzYyXSA9IG1pbi56O1xuICAgICAgcG9zaXRpb25zWzYzXSA9IG1heC54O1xuICAgICAgcG9zaXRpb25zWzY0XSA9IG1pbi55O1xuICAgICAgcG9zaXRpb25zWzY1XSA9IG1pbi56O1xuICAgICAgcG9zaXRpb25zWzY2XSA9IG1heC54O1xuICAgICAgcG9zaXRpb25zWzY3XSA9IG1pbi55O1xuICAgICAgcG9zaXRpb25zWzY4XSA9IG1heC56O1xuICAgICAgcG9zaXRpb25zWzY5XSA9IG1pbi54O1xuICAgICAgcG9zaXRpb25zWzcwXSA9IG1pbi55O1xuICAgICAgcG9zaXRpb25zWzcxXSA9IG1heC56O1xuXG4gICAgICBhdHRyaWJ1dGVzLnBvc2l0aW9uID0gbmV3IEdlb21ldHJ5QXR0cmlidXRlKHtcbiAgICAgICAgY29tcG9uZW50RGF0YXR5cGU6IENvbXBvbmVudERhdGF0eXBlLkRPVUJMRSxcbiAgICAgICAgY29tcG9uZW50c1BlckF0dHJpYnV0ZTogMyxcbiAgICAgICAgdmFsdWVzOiBwb3NpdGlvbnMsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAodmVydGV4Rm9ybWF0Lm5vcm1hbCkge1xuICAgICAgdmFyIG5vcm1hbHMgPSBuZXcgRmxvYXQzMkFycmF5KDYgKiA0ICogMyk7XG5cbiAgICAgIC8vICt6IGZhY2VcbiAgICAgIG5vcm1hbHNbMF0gPSAwLjA7XG4gICAgICBub3JtYWxzWzFdID0gMC4wO1xuICAgICAgbm9ybWFsc1syXSA9IDEuMDtcbiAgICAgIG5vcm1hbHNbM10gPSAwLjA7XG4gICAgICBub3JtYWxzWzRdID0gMC4wO1xuICAgICAgbm9ybWFsc1s1XSA9IDEuMDtcbiAgICAgIG5vcm1hbHNbNl0gPSAwLjA7XG4gICAgICBub3JtYWxzWzddID0gMC4wO1xuICAgICAgbm9ybWFsc1s4XSA9IDEuMDtcbiAgICAgIG5vcm1hbHNbOV0gPSAwLjA7XG4gICAgICBub3JtYWxzWzEwXSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbMTFdID0gMS4wO1xuXG4gICAgICAvLyAteiBmYWNlXG4gICAgICBub3JtYWxzWzEyXSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbMTNdID0gMC4wO1xuICAgICAgbm9ybWFsc1sxNF0gPSAtMS4wO1xuICAgICAgbm9ybWFsc1sxNV0gPSAwLjA7XG4gICAgICBub3JtYWxzWzE2XSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbMTddID0gLTEuMDtcbiAgICAgIG5vcm1hbHNbMThdID0gMC4wO1xuICAgICAgbm9ybWFsc1sxOV0gPSAwLjA7XG4gICAgICBub3JtYWxzWzIwXSA9IC0xLjA7XG4gICAgICBub3JtYWxzWzIxXSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbMjJdID0gMC4wO1xuICAgICAgbm9ybWFsc1syM10gPSAtMS4wO1xuXG4gICAgICAvLyAreCBmYWNlXG4gICAgICBub3JtYWxzWzI0XSA9IDEuMDtcbiAgICAgIG5vcm1hbHNbMjVdID0gMC4wO1xuICAgICAgbm9ybWFsc1syNl0gPSAwLjA7XG4gICAgICBub3JtYWxzWzI3XSA9IDEuMDtcbiAgICAgIG5vcm1hbHNbMjhdID0gMC4wO1xuICAgICAgbm9ybWFsc1syOV0gPSAwLjA7XG4gICAgICBub3JtYWxzWzMwXSA9IDEuMDtcbiAgICAgIG5vcm1hbHNbMzFdID0gMC4wO1xuICAgICAgbm9ybWFsc1szMl0gPSAwLjA7XG4gICAgICBub3JtYWxzWzMzXSA9IDEuMDtcbiAgICAgIG5vcm1hbHNbMzRdID0gMC4wO1xuICAgICAgbm9ybWFsc1szNV0gPSAwLjA7XG5cbiAgICAgIC8vIC14IGZhY2VcbiAgICAgIG5vcm1hbHNbMzZdID0gLTEuMDtcbiAgICAgIG5vcm1hbHNbMzddID0gMC4wO1xuICAgICAgbm9ybWFsc1szOF0gPSAwLjA7XG4gICAgICBub3JtYWxzWzM5XSA9IC0xLjA7XG4gICAgICBub3JtYWxzWzQwXSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbNDFdID0gMC4wO1xuICAgICAgbm9ybWFsc1s0Ml0gPSAtMS4wO1xuICAgICAgbm9ybWFsc1s0M10gPSAwLjA7XG4gICAgICBub3JtYWxzWzQ0XSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbNDVdID0gLTEuMDtcbiAgICAgIG5vcm1hbHNbNDZdID0gMC4wO1xuICAgICAgbm9ybWFsc1s0N10gPSAwLjA7XG5cbiAgICAgIC8vICt5IGZhY2VcbiAgICAgIG5vcm1hbHNbNDhdID0gMC4wO1xuICAgICAgbm9ybWFsc1s0OV0gPSAxLjA7XG4gICAgICBub3JtYWxzWzUwXSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbNTFdID0gMC4wO1xuICAgICAgbm9ybWFsc1s1Ml0gPSAxLjA7XG4gICAgICBub3JtYWxzWzUzXSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbNTRdID0gMC4wO1xuICAgICAgbm9ybWFsc1s1NV0gPSAxLjA7XG4gICAgICBub3JtYWxzWzU2XSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbNTddID0gMC4wO1xuICAgICAgbm9ybWFsc1s1OF0gPSAxLjA7XG4gICAgICBub3JtYWxzWzU5XSA9IDAuMDtcblxuICAgICAgLy8gLXkgZmFjZVxuICAgICAgbm9ybWFsc1s2MF0gPSAwLjA7XG4gICAgICBub3JtYWxzWzYxXSA9IC0xLjA7XG4gICAgICBub3JtYWxzWzYyXSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbNjNdID0gMC4wO1xuICAgICAgbm9ybWFsc1s2NF0gPSAtMS4wO1xuICAgICAgbm9ybWFsc1s2NV0gPSAwLjA7XG4gICAgICBub3JtYWxzWzY2XSA9IDAuMDtcbiAgICAgIG5vcm1hbHNbNjddID0gLTEuMDtcbiAgICAgIG5vcm1hbHNbNjhdID0gMC4wO1xuICAgICAgbm9ybWFsc1s2OV0gPSAwLjA7XG4gICAgICBub3JtYWxzWzcwXSA9IC0xLjA7XG4gICAgICBub3JtYWxzWzcxXSA9IDAuMDtcblxuICAgICAgYXR0cmlidXRlcy5ub3JtYWwgPSBuZXcgR2VvbWV0cnlBdHRyaWJ1dGUoe1xuICAgICAgICBjb21wb25lbnREYXRhdHlwZTogQ29tcG9uZW50RGF0YXR5cGUuRkxPQVQsXG4gICAgICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDMsXG4gICAgICAgIHZhbHVlczogbm9ybWFscyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICh2ZXJ0ZXhGb3JtYXQuc3QpIHtcbiAgICAgIHZhciB0ZXhDb29yZHMgPSBuZXcgRmxvYXQzMkFycmF5KDYgKiA0ICogMik7XG5cbiAgICAgIC8vICt6IGZhY2VcbiAgICAgIHRleENvb3Jkc1swXSA9IDAuMDtcbiAgICAgIHRleENvb3Jkc1sxXSA9IDAuMDtcbiAgICAgIHRleENvb3Jkc1syXSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1szXSA9IDAuMDtcbiAgICAgIHRleENvb3Jkc1s0XSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1s1XSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1s2XSA9IDAuMDtcbiAgICAgIHRleENvb3Jkc1s3XSA9IDEuMDtcblxuICAgICAgLy8gLXogZmFjZVxuICAgICAgdGV4Q29vcmRzWzhdID0gMS4wO1xuICAgICAgdGV4Q29vcmRzWzldID0gMC4wO1xuICAgICAgdGV4Q29vcmRzWzEwXSA9IDAuMDtcbiAgICAgIHRleENvb3Jkc1sxMV0gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbMTJdID0gMC4wO1xuICAgICAgdGV4Q29vcmRzWzEzXSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1sxNF0gPSAxLjA7XG4gICAgICB0ZXhDb29yZHNbMTVdID0gMS4wO1xuXG4gICAgICAvLyt4IGZhY2VcbiAgICAgIHRleENvb3Jkc1sxNl0gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbMTddID0gMC4wO1xuICAgICAgdGV4Q29vcmRzWzE4XSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1sxOV0gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbMjBdID0gMS4wO1xuICAgICAgdGV4Q29vcmRzWzIxXSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1syMl0gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbMjNdID0gMS4wO1xuXG4gICAgICAvLyAteCBmYWNlXG4gICAgICB0ZXhDb29yZHNbMjRdID0gMS4wO1xuICAgICAgdGV4Q29vcmRzWzI1XSA9IDAuMDtcbiAgICAgIHRleENvb3Jkc1syNl0gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbMjddID0gMC4wO1xuICAgICAgdGV4Q29vcmRzWzI4XSA9IDAuMDtcbiAgICAgIHRleENvb3Jkc1syOV0gPSAxLjA7XG4gICAgICB0ZXhDb29yZHNbMzBdID0gMS4wO1xuICAgICAgdGV4Q29vcmRzWzMxXSA9IDEuMDtcblxuICAgICAgLy8gK3kgZmFjZVxuICAgICAgdGV4Q29vcmRzWzMyXSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1szM10gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbMzRdID0gMC4wO1xuICAgICAgdGV4Q29vcmRzWzM1XSA9IDAuMDtcbiAgICAgIHRleENvb3Jkc1szNl0gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbMzddID0gMS4wO1xuICAgICAgdGV4Q29vcmRzWzM4XSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1szOV0gPSAxLjA7XG5cbiAgICAgIC8vIC15IGZhY2VcbiAgICAgIHRleENvb3Jkc1s0MF0gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbNDFdID0gMC4wO1xuICAgICAgdGV4Q29vcmRzWzQyXSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1s0M10gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbNDRdID0gMS4wO1xuICAgICAgdGV4Q29vcmRzWzQ1XSA9IDEuMDtcbiAgICAgIHRleENvb3Jkc1s0Nl0gPSAwLjA7XG4gICAgICB0ZXhDb29yZHNbNDddID0gMS4wO1xuXG4gICAgICBhdHRyaWJ1dGVzLnN0ID0gbmV3IEdlb21ldHJ5QXR0cmlidXRlKHtcbiAgICAgICAgY29tcG9uZW50RGF0YXR5cGU6IENvbXBvbmVudERhdGF0eXBlLkZMT0FULFxuICAgICAgICBjb21wb25lbnRzUGVyQXR0cmlidXRlOiAyLFxuICAgICAgICB2YWx1ZXM6IHRleENvb3JkcyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICh2ZXJ0ZXhGb3JtYXQudGFuZ2VudCkge1xuICAgICAgdmFyIHRhbmdlbnRzID0gbmV3IEZsb2F0MzJBcnJheSg2ICogNCAqIDMpO1xuXG4gICAgICAvLyAreiBmYWNlXG4gICAgICB0YW5nZW50c1swXSA9IDEuMDtcbiAgICAgIHRhbmdlbnRzWzFdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMl0gPSAwLjA7XG4gICAgICB0YW5nZW50c1szXSA9IDEuMDtcbiAgICAgIHRhbmdlbnRzWzRdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbNV0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s2XSA9IDEuMDtcbiAgICAgIHRhbmdlbnRzWzddID0gMC4wO1xuICAgICAgdGFuZ2VudHNbOF0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s5XSA9IDEuMDtcbiAgICAgIHRhbmdlbnRzWzEwXSA9IDAuMDtcbiAgICAgIHRhbmdlbnRzWzExXSA9IDAuMDtcblxuICAgICAgLy8gLXogZmFjZVxuICAgICAgdGFuZ2VudHNbMTJdID0gLTEuMDtcbiAgICAgIHRhbmdlbnRzWzEzXSA9IDAuMDtcbiAgICAgIHRhbmdlbnRzWzE0XSA9IDAuMDtcbiAgICAgIHRhbmdlbnRzWzE1XSA9IC0xLjA7XG4gICAgICB0YW5nZW50c1sxNl0gPSAwLjA7XG4gICAgICB0YW5nZW50c1sxN10gPSAwLjA7XG4gICAgICB0YW5nZW50c1sxOF0gPSAtMS4wO1xuICAgICAgdGFuZ2VudHNbMTldID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMjBdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMjFdID0gLTEuMDtcbiAgICAgIHRhbmdlbnRzWzIyXSA9IDAuMDtcbiAgICAgIHRhbmdlbnRzWzIzXSA9IDAuMDtcblxuICAgICAgLy8gK3ggZmFjZVxuICAgICAgdGFuZ2VudHNbMjRdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMjVdID0gMS4wO1xuICAgICAgdGFuZ2VudHNbMjZdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMjddID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMjhdID0gMS4wO1xuICAgICAgdGFuZ2VudHNbMjldID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMzBdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMzFdID0gMS4wO1xuICAgICAgdGFuZ2VudHNbMzJdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMzNdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMzRdID0gMS4wO1xuICAgICAgdGFuZ2VudHNbMzVdID0gMC4wO1xuXG4gICAgICAvLyAteCBmYWNlXG4gICAgICB0YW5nZW50c1szNl0gPSAwLjA7XG4gICAgICB0YW5nZW50c1szN10gPSAtMS4wO1xuICAgICAgdGFuZ2VudHNbMzhdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbMzldID0gMC4wO1xuICAgICAgdGFuZ2VudHNbNDBdID0gLTEuMDtcbiAgICAgIHRhbmdlbnRzWzQxXSA9IDAuMDtcbiAgICAgIHRhbmdlbnRzWzQyXSA9IDAuMDtcbiAgICAgIHRhbmdlbnRzWzQzXSA9IC0xLjA7XG4gICAgICB0YW5nZW50c1s0NF0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s0NV0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s0Nl0gPSAtMS4wO1xuICAgICAgdGFuZ2VudHNbNDddID0gMC4wO1xuXG4gICAgICAvLyAreSBmYWNlXG4gICAgICB0YW5nZW50c1s0OF0gPSAtMS4wO1xuICAgICAgdGFuZ2VudHNbNDldID0gMC4wO1xuICAgICAgdGFuZ2VudHNbNTBdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbNTFdID0gLTEuMDtcbiAgICAgIHRhbmdlbnRzWzUyXSA9IDAuMDtcbiAgICAgIHRhbmdlbnRzWzUzXSA9IDAuMDtcbiAgICAgIHRhbmdlbnRzWzU0XSA9IC0xLjA7XG4gICAgICB0YW5nZW50c1s1NV0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s1Nl0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s1N10gPSAtMS4wO1xuICAgICAgdGFuZ2VudHNbNThdID0gMC4wO1xuICAgICAgdGFuZ2VudHNbNTldID0gMC4wO1xuXG4gICAgICAvLyAteSBmYWNlXG4gICAgICB0YW5nZW50c1s2MF0gPSAxLjA7XG4gICAgICB0YW5nZW50c1s2MV0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s2Ml0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s2M10gPSAxLjA7XG4gICAgICB0YW5nZW50c1s2NF0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s2NV0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s2Nl0gPSAxLjA7XG4gICAgICB0YW5nZW50c1s2N10gPSAwLjA7XG4gICAgICB0YW5nZW50c1s2OF0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s2OV0gPSAxLjA7XG4gICAgICB0YW5nZW50c1s3MF0gPSAwLjA7XG4gICAgICB0YW5nZW50c1s3MV0gPSAwLjA7XG5cbiAgICAgIGF0dHJpYnV0ZXMudGFuZ2VudCA9IG5ldyBHZW9tZXRyeUF0dHJpYnV0ZSh7XG4gICAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5GTE9BVCxcbiAgICAgICAgY29tcG9uZW50c1BlckF0dHJpYnV0ZTogMyxcbiAgICAgICAgdmFsdWVzOiB0YW5nZW50cyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICh2ZXJ0ZXhGb3JtYXQuYml0YW5nZW50KSB7XG4gICAgICB2YXIgYml0YW5nZW50cyA9IG5ldyBGbG9hdDMyQXJyYXkoNiAqIDQgKiAzKTtcblxuICAgICAgLy8gK3ogZmFjZVxuICAgICAgYml0YW5nZW50c1swXSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMV0gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzJdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1szXSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbNF0gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzVdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s2XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbN10gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzhdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s5XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMTBdID0gMS4wO1xuICAgICAgYml0YW5nZW50c1sxMV0gPSAwLjA7XG5cbiAgICAgIC8vIC16IGZhY2VcbiAgICAgIGJpdGFuZ2VudHNbMTJdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1sxM10gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzE0XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMTVdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1sxNl0gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzE3XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMThdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1sxOV0gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzIwXSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMjFdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1syMl0gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzIzXSA9IDAuMDtcblxuICAgICAgLy8gK3ggZmFjZVxuICAgICAgYml0YW5nZW50c1syNF0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzI1XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMjZdID0gMS4wO1xuICAgICAgYml0YW5nZW50c1syN10gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzI4XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMjldID0gMS4wO1xuICAgICAgYml0YW5nZW50c1szMF0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzMxXSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMzJdID0gMS4wO1xuICAgICAgYml0YW5nZW50c1szM10gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzM0XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMzVdID0gMS4wO1xuXG4gICAgICAvLyAteCBmYWNlXG4gICAgICBiaXRhbmdlbnRzWzM2XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbMzddID0gMC4wO1xuICAgICAgYml0YW5nZW50c1szOF0gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzM5XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbNDBdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s0MV0gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzQyXSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbNDNdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s0NF0gPSAxLjA7XG4gICAgICBiaXRhbmdlbnRzWzQ1XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbNDZdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s0N10gPSAxLjA7XG5cbiAgICAgIC8vICt5IGZhY2VcbiAgICAgIGJpdGFuZ2VudHNbNDhdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s0OV0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzUwXSA9IDEuMDtcbiAgICAgIGJpdGFuZ2VudHNbNTFdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s1Ml0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzUzXSA9IDEuMDtcbiAgICAgIGJpdGFuZ2VudHNbNTRdID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s1NV0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzU2XSA9IDEuMDtcbiAgICAgIGJpdGFuZ2VudHNbNTddID0gMC4wO1xuICAgICAgYml0YW5nZW50c1s1OF0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzU5XSA9IDEuMDtcblxuICAgICAgLy8gLXkgZmFjZVxuICAgICAgYml0YW5nZW50c1s2MF0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzYxXSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbNjJdID0gMS4wO1xuICAgICAgYml0YW5nZW50c1s2M10gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzY0XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbNjVdID0gMS4wO1xuICAgICAgYml0YW5nZW50c1s2Nl0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzY3XSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbNjhdID0gMS4wO1xuICAgICAgYml0YW5nZW50c1s2OV0gPSAwLjA7XG4gICAgICBiaXRhbmdlbnRzWzcwXSA9IDAuMDtcbiAgICAgIGJpdGFuZ2VudHNbNzFdID0gMS4wO1xuXG4gICAgICBhdHRyaWJ1dGVzLmJpdGFuZ2VudCA9IG5ldyBHZW9tZXRyeUF0dHJpYnV0ZSh7XG4gICAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5GTE9BVCxcbiAgICAgICAgY29tcG9uZW50c1BlckF0dHJpYnV0ZTogMyxcbiAgICAgICAgdmFsdWVzOiBiaXRhbmdlbnRzLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gMTIgdHJpYW5nbGVzOiAgNiBmYWNlcywgMiB0cmlhbmdsZXMgZWFjaC5cbiAgICBpbmRpY2VzID0gbmV3IFVpbnQxNkFycmF5KDYgKiAyICogMyk7XG5cbiAgICAvLyAreiBmYWNlXG4gICAgaW5kaWNlc1swXSA9IDA7XG4gICAgaW5kaWNlc1sxXSA9IDE7XG4gICAgaW5kaWNlc1syXSA9IDI7XG4gICAgaW5kaWNlc1szXSA9IDA7XG4gICAgaW5kaWNlc1s0XSA9IDI7XG4gICAgaW5kaWNlc1s1XSA9IDM7XG5cbiAgICAvLyAteiBmYWNlXG4gICAgaW5kaWNlc1s2XSA9IDQgKyAyO1xuICAgIGluZGljZXNbN10gPSA0ICsgMTtcbiAgICBpbmRpY2VzWzhdID0gNCArIDA7XG4gICAgaW5kaWNlc1s5XSA9IDQgKyAzO1xuICAgIGluZGljZXNbMTBdID0gNCArIDI7XG4gICAgaW5kaWNlc1sxMV0gPSA0ICsgMDtcblxuICAgIC8vICt4IGZhY2VcbiAgICBpbmRpY2VzWzEyXSA9IDggKyAwO1xuICAgIGluZGljZXNbMTNdID0gOCArIDE7XG4gICAgaW5kaWNlc1sxNF0gPSA4ICsgMjtcbiAgICBpbmRpY2VzWzE1XSA9IDggKyAwO1xuICAgIGluZGljZXNbMTZdID0gOCArIDI7XG4gICAgaW5kaWNlc1sxN10gPSA4ICsgMztcblxuICAgIC8vIC14IGZhY2VcbiAgICBpbmRpY2VzWzE4XSA9IDEyICsgMjtcbiAgICBpbmRpY2VzWzE5XSA9IDEyICsgMTtcbiAgICBpbmRpY2VzWzIwXSA9IDEyICsgMDtcbiAgICBpbmRpY2VzWzIxXSA9IDEyICsgMztcbiAgICBpbmRpY2VzWzIyXSA9IDEyICsgMjtcbiAgICBpbmRpY2VzWzIzXSA9IDEyICsgMDtcblxuICAgIC8vICt5IGZhY2VcbiAgICBpbmRpY2VzWzI0XSA9IDE2ICsgMjtcbiAgICBpbmRpY2VzWzI1XSA9IDE2ICsgMTtcbiAgICBpbmRpY2VzWzI2XSA9IDE2ICsgMDtcbiAgICBpbmRpY2VzWzI3XSA9IDE2ICsgMztcbiAgICBpbmRpY2VzWzI4XSA9IDE2ICsgMjtcbiAgICBpbmRpY2VzWzI5XSA9IDE2ICsgMDtcblxuICAgIC8vIC15IGZhY2VcbiAgICBpbmRpY2VzWzMwXSA9IDIwICsgMDtcbiAgICBpbmRpY2VzWzMxXSA9IDIwICsgMTtcbiAgICBpbmRpY2VzWzMyXSA9IDIwICsgMjtcbiAgICBpbmRpY2VzWzMzXSA9IDIwICsgMDtcbiAgICBpbmRpY2VzWzM0XSA9IDIwICsgMjtcbiAgICBpbmRpY2VzWzM1XSA9IDIwICsgMztcbiAgfSBlbHNlIHtcbiAgICAvLyBQb3NpdGlvbnMgb25seSAtIG5vIG5lZWQgdG8gZHVwbGljYXRlIGNvcm5lciBwb2ludHNcbiAgICBwb3NpdGlvbnMgPSBuZXcgRmxvYXQ2NEFycmF5KDggKiAzKTtcblxuICAgIHBvc2l0aW9uc1swXSA9IG1pbi54O1xuICAgIHBvc2l0aW9uc1sxXSA9IG1pbi55O1xuICAgIHBvc2l0aW9uc1syXSA9IG1pbi56O1xuICAgIHBvc2l0aW9uc1szXSA9IG1heC54O1xuICAgIHBvc2l0aW9uc1s0XSA9IG1pbi55O1xuICAgIHBvc2l0aW9uc1s1XSA9IG1pbi56O1xuICAgIHBvc2l0aW9uc1s2XSA9IG1heC54O1xuICAgIHBvc2l0aW9uc1s3XSA9IG1heC55O1xuICAgIHBvc2l0aW9uc1s4XSA9IG1pbi56O1xuICAgIHBvc2l0aW9uc1s5XSA9IG1pbi54O1xuICAgIHBvc2l0aW9uc1sxMF0gPSBtYXgueTtcbiAgICBwb3NpdGlvbnNbMTFdID0gbWluLno7XG4gICAgcG9zaXRpb25zWzEyXSA9IG1pbi54O1xuICAgIHBvc2l0aW9uc1sxM10gPSBtaW4ueTtcbiAgICBwb3NpdGlvbnNbMTRdID0gbWF4Lno7XG4gICAgcG9zaXRpb25zWzE1XSA9IG1heC54O1xuICAgIHBvc2l0aW9uc1sxNl0gPSBtaW4ueTtcbiAgICBwb3NpdGlvbnNbMTddID0gbWF4Lno7XG4gICAgcG9zaXRpb25zWzE4XSA9IG1heC54O1xuICAgIHBvc2l0aW9uc1sxOV0gPSBtYXgueTtcbiAgICBwb3NpdGlvbnNbMjBdID0gbWF4Lno7XG4gICAgcG9zaXRpb25zWzIxXSA9IG1pbi54O1xuICAgIHBvc2l0aW9uc1syMl0gPSBtYXgueTtcbiAgICBwb3NpdGlvbnNbMjNdID0gbWF4Lno7XG5cbiAgICBhdHRyaWJ1dGVzLnBvc2l0aW9uID0gbmV3IEdlb21ldHJ5QXR0cmlidXRlKHtcbiAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5ET1VCTEUsXG4gICAgICBjb21wb25lbnRzUGVyQXR0cmlidXRlOiAzLFxuICAgICAgdmFsdWVzOiBwb3NpdGlvbnMsXG4gICAgfSk7XG5cbiAgICAvLyAxMiB0cmlhbmdsZXM6ICA2IGZhY2VzLCAyIHRyaWFuZ2xlcyBlYWNoLlxuICAgIGluZGljZXMgPSBuZXcgVWludDE2QXJyYXkoNiAqIDIgKiAzKTtcblxuICAgIC8vIHBsYW5lIHogPSBjb3JuZXIuWlxuICAgIGluZGljZXNbMF0gPSA0O1xuICAgIGluZGljZXNbMV0gPSA1O1xuICAgIGluZGljZXNbMl0gPSA2O1xuICAgIGluZGljZXNbM10gPSA0O1xuICAgIGluZGljZXNbNF0gPSA2O1xuICAgIGluZGljZXNbNV0gPSA3O1xuXG4gICAgLy8gcGxhbmUgeiA9IC1jb3JuZXIuWlxuICAgIGluZGljZXNbNl0gPSAxO1xuICAgIGluZGljZXNbN10gPSAwO1xuICAgIGluZGljZXNbOF0gPSAzO1xuICAgIGluZGljZXNbOV0gPSAxO1xuICAgIGluZGljZXNbMTBdID0gMztcbiAgICBpbmRpY2VzWzExXSA9IDI7XG5cbiAgICAvLyBwbGFuZSB4ID0gY29ybmVyLlhcbiAgICBpbmRpY2VzWzEyXSA9IDE7XG4gICAgaW5kaWNlc1sxM10gPSA2O1xuICAgIGluZGljZXNbMTRdID0gNTtcbiAgICBpbmRpY2VzWzE1XSA9IDE7XG4gICAgaW5kaWNlc1sxNl0gPSAyO1xuICAgIGluZGljZXNbMTddID0gNjtcblxuICAgIC8vIHBsYW5lIHkgPSBjb3JuZXIuWVxuICAgIGluZGljZXNbMThdID0gMjtcbiAgICBpbmRpY2VzWzE5XSA9IDM7XG4gICAgaW5kaWNlc1syMF0gPSA3O1xuICAgIGluZGljZXNbMjFdID0gMjtcbiAgICBpbmRpY2VzWzIyXSA9IDc7XG4gICAgaW5kaWNlc1syM10gPSA2O1xuXG4gICAgLy8gcGxhbmUgeCA9IC1jb3JuZXIuWFxuICAgIGluZGljZXNbMjRdID0gMztcbiAgICBpbmRpY2VzWzI1XSA9IDA7XG4gICAgaW5kaWNlc1syNl0gPSA0O1xuICAgIGluZGljZXNbMjddID0gMztcbiAgICBpbmRpY2VzWzI4XSA9IDQ7XG4gICAgaW5kaWNlc1syOV0gPSA3O1xuXG4gICAgLy8gcGxhbmUgeSA9IC1jb3JuZXIuWVxuICAgIGluZGljZXNbMzBdID0gMDtcbiAgICBpbmRpY2VzWzMxXSA9IDE7XG4gICAgaW5kaWNlc1szMl0gPSA1O1xuICAgIGluZGljZXNbMzNdID0gMDtcbiAgICBpbmRpY2VzWzM0XSA9IDU7XG4gICAgaW5kaWNlc1szNV0gPSA0O1xuICB9XG5cbiAgdmFyIGRpZmYgPSBDYXJ0ZXNpYW4zLnN1YnRyYWN0KG1heCwgbWluLCBkaWZmU2NyYXRjaCk7XG4gIHZhciByYWRpdXMgPSBDYXJ0ZXNpYW4zLm1hZ25pdHVkZShkaWZmKSAqIDAuNTtcblxuICBpZiAoZGVmaW5lZChib3hHZW9tZXRyeS5fb2Zmc2V0QXR0cmlidXRlKSkge1xuICAgIHZhciBsZW5ndGggPSBwb3NpdGlvbnMubGVuZ3RoO1xuICAgIHZhciBhcHBseU9mZnNldCA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCAvIDMpO1xuICAgIHZhciBvZmZzZXRWYWx1ZSA9XG4gICAgICBib3hHZW9tZXRyeS5fb2Zmc2V0QXR0cmlidXRlID09PSBHZW9tZXRyeU9mZnNldEF0dHJpYnV0ZS5OT05FID8gMCA6IDE7XG4gICAgYXJyYXlGaWxsKGFwcGx5T2Zmc2V0LCBvZmZzZXRWYWx1ZSk7XG4gICAgYXR0cmlidXRlcy5hcHBseU9mZnNldCA9IG5ldyBHZW9tZXRyeUF0dHJpYnV0ZSh7XG4gICAgICBjb21wb25lbnREYXRhdHlwZTogQ29tcG9uZW50RGF0YXR5cGUuVU5TSUdORURfQllURSxcbiAgICAgIGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6IDEsXG4gICAgICB2YWx1ZXM6IGFwcGx5T2Zmc2V0LFxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBHZW9tZXRyeSh7XG4gICAgYXR0cmlidXRlczogYXR0cmlidXRlcyxcbiAgICBpbmRpY2VzOiBpbmRpY2VzLFxuICAgIHByaW1pdGl2ZVR5cGU6IFByaW1pdGl2ZVR5cGUuVFJJQU5HTEVTLFxuICAgIGJvdW5kaW5nU3BoZXJlOiBuZXcgQm91bmRpbmdTcGhlcmUoQ2FydGVzaWFuMy5aRVJPLCByYWRpdXMpLFxuICAgIG9mZnNldEF0dHJpYnV0ZTogYm94R2VvbWV0cnkuX29mZnNldEF0dHJpYnV0ZSxcbiAgfSk7XG59O1xuXG52YXIgdW5pdEJveEdlb21ldHJ5O1xuXG4vKipcbiAqIFJldHVybnMgdGhlIGdlb21ldHJpYyByZXByZXNlbnRhdGlvbiBvZiBhIHVuaXQgYm94LCBpbmNsdWRpbmcgaXRzIHZlcnRpY2VzLCBpbmRpY2VzLCBhbmQgYSBib3VuZGluZyBzcGhlcmUuXG4gKiBAcmV0dXJucyB7R2VvbWV0cnl9IFRoZSBjb21wdXRlZCB2ZXJ0aWNlcyBhbmQgaW5kaWNlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5Cb3hHZW9tZXRyeS5nZXRVbml0Qm94ID0gZnVuY3Rpb24gKCkge1xuICBpZiAoIWRlZmluZWQodW5pdEJveEdlb21ldHJ5KSkge1xuICAgIHVuaXRCb3hHZW9tZXRyeSA9IEJveEdlb21ldHJ5LmNyZWF0ZUdlb21ldHJ5KFxuICAgICAgQm94R2VvbWV0cnkuZnJvbURpbWVuc2lvbnMoe1xuICAgICAgICBkaW1lbnNpb25zOiBuZXcgQ2FydGVzaWFuMygxLjAsIDEuMCwgMS4wKSxcbiAgICAgICAgdmVydGV4Rm9ybWF0OiBWZXJ0ZXhGb3JtYXQuUE9TSVRJT05fT05MWSxcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuICByZXR1cm4gdW5pdEJveEdlb21ldHJ5O1xufTtcbmV4cG9ydCBkZWZhdWx0IEJveEdlb21ldHJ5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20305\n')},27495:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23401);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12572);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(87379);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(97264);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar diffScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n/**\n * A description of the outline of a cube centered at the origin.\n *\n * @alias BoxOutlineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3} options.minimum The minimum x, y, and z coordinates of the box.\n * @param {Cartesian3} options.maximum The maximum x, y, and z coordinates of the box.\n *\n * @see BoxOutlineGeometry.fromDimensions\n * @see BoxOutlineGeometry.createGeometry\n * @see Packable\n *\n * @example\n * var box = new Cesium.BoxOutlineGeometry({\n *   maximum : new Cesium.Cartesian3(250000.0, 250000.0, 250000.0),\n *   minimum : new Cesium.Cartesian3(-250000.0, -250000.0, -250000.0)\n * });\n * var geometry = Cesium.BoxOutlineGeometry.createGeometry(box);\n */\nfunction BoxOutlineGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var min = options.minimum;\n  var max = options.maximum;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("min", min);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("max", max);\n  if (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.offsetAttribute) &&\n    options.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].TOP */ .Z.TOP\n  ) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this._min = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(min);\n  this._max = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(max);\n  this._offsetAttribute = options.offsetAttribute;\n  this._workerName = "createBoxOutlineGeometry";\n}\n\n/**\n * Creates an outline of a cube centered at the origin given its dimensions.\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3} options.dimensions The width, depth, and height of the box stored in the x, y, and z coordinates of the <code>Cartesian3</code>, respectively.\n * @returns {BoxOutlineGeometry}\n *\n * @exception {DeveloperError} All dimensions components must be greater than or equal to zero.\n *\n *\n * @example\n * var box = Cesium.BoxOutlineGeometry.fromDimensions({\n *   dimensions : new Cesium.Cartesian3(500000.0, 500000.0, 500000.0)\n * });\n * var geometry = Cesium.BoxOutlineGeometry.createGeometry(box);\n *\n * @see BoxOutlineGeometry.createGeometry\n */\nBoxOutlineGeometry.fromDimensions = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var dimensions = options.dimensions;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("dimensions", dimensions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("dimensions.x", dimensions.x, 0);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("dimensions.y", dimensions.y, 0);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("dimensions.z", dimensions.z, 0);\n  //>>includeEnd(\'debug\');\n\n  var corner = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(dimensions, 0.5, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z());\n\n  return new BoxOutlineGeometry({\n    minimum: _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].negate */ .Z.negate(corner, new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z()),\n    maximum: corner,\n    offsetAttribute: options.offsetAttribute,\n  });\n};\n\n/**\n * Creates an outline of a cube from the dimensions of an AxisAlignedBoundingBox.\n *\n * @param {AxisAlignedBoundingBox} boundingBox A description of the AxisAlignedBoundingBox.\n * @returns {BoxOutlineGeometry}\n *\n *\n *\n * @example\n * var aabb = Cesium.AxisAlignedBoundingBox.fromPoints(Cesium.Cartesian3.fromDegreesArray([\n *      -72.0, 40.0,\n *      -70.0, 35.0,\n *      -75.0, 30.0,\n *      -70.0, 30.0,\n *      -68.0, 40.0\n * ]));\n * var box = Cesium.BoxOutlineGeometry.fromAxisAlignedBoundingBox(aabb);\n *\n *  @see BoxOutlineGeometry.createGeometry\n */\nBoxOutlineGeometry.fromAxisAlignedBoundingBox = function (boundingBox) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("boundindBox", boundingBox);\n  //>>includeEnd(\'debug\');\n\n  return new BoxOutlineGeometry({\n    minimum: boundingBox.minimum,\n    maximum: boundingBox.maximum,\n  });\n};\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nBoxOutlineGeometry.packedLength = 2 * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength + 1;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {BoxOutlineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nBoxOutlineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startingIndex, 0);\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(value._min, array, startingIndex);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(value._max, array, startingIndex + _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength);\n  array[startingIndex + _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength * 2] = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    value._offsetAttribute,\n    -1\n  );\n\n  return array;\n};\n\nvar scratchMin = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchMax = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchOptions = {\n  minimum: scratchMin,\n  maximum: scratchMax,\n  offsetAttribute: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {BoxOutlineGeometry} [result] The object into which to store the result.\n * @returns {BoxOutlineGeometry} The modified result parameter or a new BoxOutlineGeometry instance if one was not provided.\n */\nBoxOutlineGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var min = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchMin);\n  var max = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex + _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength,\n    scratchMax\n  );\n  var offsetAttribute = array[startingIndex + _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength * 2];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    scratchOptions.offsetAttribute =\n      offsetAttribute === -1 ? undefined : offsetAttribute;\n    return new BoxOutlineGeometry(scratchOptions);\n  }\n\n  result._min = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(min, result._min);\n  result._max = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(max, result._max);\n  result._offsetAttribute =\n    offsetAttribute === -1 ? undefined : offsetAttribute;\n\n  return result;\n};\n\n/**\n * Computes the geometric representation of an outline of a box, including its vertices, indices, and a bounding sphere.\n *\n * @param {BoxOutlineGeometry} boxGeometry A description of the box outline.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nBoxOutlineGeometry.createGeometry = function (boxGeometry) {\n  var min = boxGeometry._min;\n  var max = boxGeometry._max;\n\n  if (_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(min, max)) {\n    return;\n  }\n\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\n  var indices = new Uint16Array(12 * 2);\n  var positions = new Float64Array(8 * 3);\n\n  positions[0] = min.x;\n  positions[1] = min.y;\n  positions[2] = min.z;\n  positions[3] = max.x;\n  positions[4] = min.y;\n  positions[5] = min.z;\n  positions[6] = max.x;\n  positions[7] = max.y;\n  positions[8] = min.z;\n  positions[9] = min.x;\n  positions[10] = max.y;\n  positions[11] = min.z;\n\n  positions[12] = min.x;\n  positions[13] = min.y;\n  positions[14] = max.z;\n  positions[15] = max.x;\n  positions[16] = min.y;\n  positions[17] = max.z;\n  positions[18] = max.x;\n  positions[19] = max.y;\n  positions[20] = max.z;\n  positions[21] = min.x;\n  positions[22] = max.y;\n  positions[23] = max.z;\n\n  attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: positions,\n  });\n\n  // top\n  indices[0] = 4;\n  indices[1] = 5;\n  indices[2] = 5;\n  indices[3] = 6;\n  indices[4] = 6;\n  indices[5] = 7;\n  indices[6] = 7;\n  indices[7] = 4;\n\n  // bottom\n  indices[8] = 0;\n  indices[9] = 1;\n  indices[10] = 1;\n  indices[11] = 2;\n  indices[12] = 2;\n  indices[13] = 3;\n  indices[14] = 3;\n  indices[15] = 0;\n\n  // left\n  indices[16] = 0;\n  indices[17] = 4;\n  indices[18] = 1;\n  indices[19] = 5;\n\n  //right\n  indices[20] = 2;\n  indices[21] = 6;\n  indices[22] = 3;\n  indices[23] = 7;\n\n  var diff = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(max, min, diffScratch);\n  var radius = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].magnitude */ .Z.magnitude(diff) * 0.5;\n\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(boxGeometry._offsetAttribute)) {\n    var length = positions.length;\n    var applyOffset = new Uint8Array(length / 3);\n    var offsetValue =\n      boxGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].NONE */ .Z.NONE ? 0 : 1;\n    (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, offsetValue);\n    attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 1,\n      values: applyOffset,\n    });\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].LINES */ .Z.LINES,\n    boundingSphere: new _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO, radius),\n    offsetAttribute: boxGeometry._offsetAttribute,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (BoxOutlineGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27495\n')}}]);