"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[8038],{77840:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _MetadataClassProperty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92278);\n\n\n\n\n\n/**\n * A metadata class.\n *\n * <p>\n * See the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_metadata|3DTILES_metadata Extension} for 3D Tiles\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {String} options.id The ID of the class.\n * @param {Object} options.class The class JSON object.\n * @param {Object.<String, MetadataEnum>} [options.enums] A dictionary of enums.\n *\n * @alias MetadataClass\n * @constructor\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataClass(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var id = options.id;\n  var classDefinition = options.class;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("options.id", id);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.class", classDefinition);\n  //>>includeEnd(\'debug\');\n\n  var properties = {};\n  var propertiesBySemantic = {};\n  for (var propertyId in classDefinition.properties) {\n    if (classDefinition.properties.hasOwnProperty(propertyId)) {\n      var property = new _MetadataClassProperty_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({\n        id: propertyId,\n        property: classDefinition.properties[propertyId],\n        enums: options.enums,\n      });\n      properties[propertyId] = property;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(property.semantic)) {\n        propertiesBySemantic[property.semantic] = property;\n      }\n    }\n  }\n\n  this._properties = properties;\n  this._propertiesBySemantic = propertiesBySemantic;\n  this._id = id;\n  this._name = classDefinition.name;\n  this._description = classDefinition.description;\n  this._extras = classDefinition.extras;\n  this._extensions = classDefinition.extensions;\n}\n\nObject.defineProperties(MetadataClass.prototype, {\n  /**\n   * The class properties.\n   *\n   * @memberof MetadataClass.prototype\n   * @type {Object.<String, MetadataClassProperty>}\n   * @readonly\n   * @private\n   */\n  properties: {\n    get: function () {\n      return this._properties;\n    },\n  },\n\n  /**\n   * A dictionary mapping semantics to class properties.\n   *\n   * @memberof MetadataClass.prototype\n   * @type {Object.<String, MetadataClassProperty>}\n   * @readonly\n   *\n   * @private\n   */\n  propertiesBySemantic: {\n    get: function () {\n      return this._propertiesBySemantic;\n    },\n  },\n\n  /**\n   * The ID of the class.\n   *\n   * @memberof MetadataClass.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n\n  /**\n   * The name of the class.\n   *\n   * @memberof MetadataClass.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The description of the class.\n   *\n   * @memberof MetadataClass.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  description: {\n    get: function () {\n      return this._description;\n    },\n  },\n\n  /**\n   * Extras in the JSON object.\n   *\n   * @memberof MetadataClass.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * Extensions in the JSON object.\n   *\n   * @memberof MetadataClass.prototype\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\n/* harmony default export */ __webpack_exports__["Z"] = (MetadataClass);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzc4NDAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFxQztBQUNjO0FBQ1Y7QUFDc0I7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzSEFBc0g7QUFDbEk7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsK0JBQStCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwRUFBWSxVQUFVLGdHQUF5QjtBQUMzRDtBQUNBOztBQUVBO0FBQ0EsRUFBRSwyRkFBbUI7QUFDckIsRUFBRSwyRkFBbUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMEVBQXFCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLFVBQVUscUVBQU87QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVELHlEQUFlLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9NZXRhZGF0YUNsYXNzLmpzP2U1OTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENoZWNrIGZyb20gXCIuLi9Db3JlL0NoZWNrLmpzXCI7XG5pbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuLi9Db3JlL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuaW1wb3J0IE1ldGFkYXRhQ2xhc3NQcm9wZXJ0eSBmcm9tIFwiLi9NZXRhZGF0YUNsYXNzUHJvcGVydHkuanNcIjtcblxuLyoqXG4gKiBBIG1ldGFkYXRhIGNsYXNzLlxuICpcbiAqIDxwPlxuICogU2VlIHRoZSB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL0Nlc2l1bUdTLzNkLXRpbGVzL3RyZWUvM2QtdGlsZXMtbmV4dC9leHRlbnNpb25zLzNEVElMRVNfbWV0YWRhdGF8M0RUSUxFU19tZXRhZGF0YSBFeHRlbnNpb259IGZvciAzRCBUaWxlc1xuICogPC9wPlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLmlkIFRoZSBJRCBvZiB0aGUgY2xhc3MuXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucy5jbGFzcyBUaGUgY2xhc3MgSlNPTiBvYmplY3QuXG4gKiBAcGFyYW0ge09iamVjdC48U3RyaW5nLCBNZXRhZGF0YUVudW0+fSBbb3B0aW9ucy5lbnVtc10gQSBkaWN0aW9uYXJ5IG9mIGVudW1zLlxuICpcbiAqIEBhbGlhcyBNZXRhZGF0YUNsYXNzXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwcml2YXRlXG4gKiBAZXhwZXJpbWVudGFsIFRoaXMgZmVhdHVyZSBpcyB1c2luZyBwYXJ0IG9mIHRoZSAzRCBUaWxlcyBzcGVjIHRoYXQgaXMgbm90IGZpbmFsIGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZSB3aXRob3V0IENlc2l1bSdzIHN0YW5kYXJkIGRlcHJlY2F0aW9uIHBvbGljeS5cbiAqL1xuZnVuY3Rpb24gTWV0YWRhdGFDbGFzcyhvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucywgZGVmYXVsdFZhbHVlLkVNUFRZX09CSkVDVCk7XG4gIHZhciBpZCA9IG9wdGlvbnMuaWQ7XG4gIHZhciBjbGFzc0RlZmluaXRpb24gPSBvcHRpb25zLmNsYXNzO1xuXG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5zdHJpbmcoXCJvcHRpb25zLmlkXCIsIGlkKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcIm9wdGlvbnMuY2xhc3NcIiwgY2xhc3NEZWZpbml0aW9uKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIHByb3BlcnRpZXMgPSB7fTtcbiAgdmFyIHByb3BlcnRpZXNCeVNlbWFudGljID0ge307XG4gIGZvciAodmFyIHByb3BlcnR5SWQgaW4gY2xhc3NEZWZpbml0aW9uLnByb3BlcnRpZXMpIHtcbiAgICBpZiAoY2xhc3NEZWZpbml0aW9uLnByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHlJZCkpIHtcbiAgICAgIHZhciBwcm9wZXJ0eSA9IG5ldyBNZXRhZGF0YUNsYXNzUHJvcGVydHkoe1xuICAgICAgICBpZDogcHJvcGVydHlJZCxcbiAgICAgICAgcHJvcGVydHk6IGNsYXNzRGVmaW5pdGlvbi5wcm9wZXJ0aWVzW3Byb3BlcnR5SWRdLFxuICAgICAgICBlbnVtczogb3B0aW9ucy5lbnVtcyxcbiAgICAgIH0pO1xuICAgICAgcHJvcGVydGllc1twcm9wZXJ0eUlkXSA9IHByb3BlcnR5O1xuICAgICAgaWYgKGRlZmluZWQocHJvcGVydHkuc2VtYW50aWMpKSB7XG4gICAgICAgIHByb3BlcnRpZXNCeVNlbWFudGljW3Byb3BlcnR5LnNlbWFudGljXSA9IHByb3BlcnR5O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHRoaXMuX3Byb3BlcnRpZXMgPSBwcm9wZXJ0aWVzO1xuICB0aGlzLl9wcm9wZXJ0aWVzQnlTZW1hbnRpYyA9IHByb3BlcnRpZXNCeVNlbWFudGljO1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9uYW1lID0gY2xhc3NEZWZpbml0aW9uLm5hbWU7XG4gIHRoaXMuX2Rlc2NyaXB0aW9uID0gY2xhc3NEZWZpbml0aW9uLmRlc2NyaXB0aW9uO1xuICB0aGlzLl9leHRyYXMgPSBjbGFzc0RlZmluaXRpb24uZXh0cmFzO1xuICB0aGlzLl9leHRlbnNpb25zID0gY2xhc3NEZWZpbml0aW9uLmV4dGVuc2lvbnM7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE1ldGFkYXRhQ2xhc3MucHJvdG90eXBlLCB7XG4gIC8qKlxuICAgKiBUaGUgY2xhc3MgcHJvcGVydGllcy5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhQ2xhc3MucHJvdG90eXBlXG4gICAqIEB0eXBlIHtPYmplY3QuPFN0cmluZywgTWV0YWRhdGFDbGFzc1Byb3BlcnR5Pn1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcHJvcGVydGllcztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBBIGRpY3Rpb25hcnkgbWFwcGluZyBzZW1hbnRpY3MgdG8gY2xhc3MgcHJvcGVydGllcy5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhQ2xhc3MucHJvdG90eXBlXG4gICAqIEB0eXBlIHtPYmplY3QuPFN0cmluZywgTWV0YWRhdGFDbGFzc1Byb3BlcnR5Pn1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBwcm9wZXJ0aWVzQnlTZW1hbnRpYzoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3Byb3BlcnRpZXNCeVNlbWFudGljO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBJRCBvZiB0aGUgY2xhc3MuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YUNsYXNzLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGlkOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5faWQ7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGNsYXNzLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFDbGFzcy5wcm90b3R5cGVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBuYW1lOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIGNsYXNzLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFDbGFzcy5wcm90b3R5cGVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBkZXNjcmlwdGlvbjoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2Rlc2NyaXB0aW9uO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEV4dHJhcyBpbiB0aGUgSlNPTiBvYmplY3QuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YUNsYXNzLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Kn1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBleHRyYXM6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9leHRyYXM7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogRXh0ZW5zaW9ucyBpbiB0aGUgSlNPTiBvYmplY3QuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YUNsYXNzLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGV4dGVuc2lvbnM6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9leHRlbnNpb25zO1xuICAgIH0sXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTWV0YWRhdGFDbGFzcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///77840\n')},92278:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10114);\n\n\n\n\n\n\n\n\n/**\n * A metadata property, as part of a {@link MetadataClass}\n *\n * @param {Object} options Object with the following properties:\n * @param {String} options.id The ID of the property.\n * @param {Object} options.property The property JSON object.\n * @param {Object.<String, MetadataEnum>} [options.enums] A dictionary of enums.\n *\n * @alias MetadataClassProperty\n * @constructor\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataClassProperty(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var id = options.id;\n  var property = options.property;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.string */ .Z.typeOf.string("options.id", id);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("options.property", property);\n  //>>includeEnd(\'debug\');\n\n  var enumType;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(property.enumType)) {\n    enumType = options.enums[property.enumType];\n  }\n\n  var type = _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z[property.type];\n  var componentType = _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z[property.componentType];\n  var valueType = getValueType(type, componentType, enumType);\n\n  var normalized =\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(enumType) &&\n    _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].isIntegerType */ .Z.isIntegerType(valueType) &&\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(property.normalized, false);\n\n  this._id = id;\n  this._name = property.name;\n  this._description = property.description;\n  this._type = type;\n  this._enumType = enumType;\n  this._componentType = componentType;\n  this._valueType = valueType;\n  this._componentCount = property.componentCount;\n  this._normalized = normalized;\n  this._min = property.min;\n  this._max = property.max;\n  this._default = property.default;\n  this._optional = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(property.optional, false);\n  this._semantic = property.semantic;\n  this._extras = property.extras;\n  this._extensions = property.extensions;\n}\n\nObject.defineProperties(MetadataClassProperty.prototype, {\n  /**\n   * The ID of the property.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n\n  /**\n   * The name of the property.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The description of the property.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  description: {\n    get: function () {\n      return this._description;\n    },\n  },\n\n  /**\n   * The type of the property.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {MetadataType}\n   * @readonly\n   * @private\n   */\n  type: {\n    get: function () {\n      return this._type;\n    },\n  },\n\n  /**\n   * The enum type of the property. Only defined when type or componentType is ENUM.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {MetadataEnum}\n   * @readonly\n   * @private\n   */\n  enumType: {\n    get: function () {\n      return this._enumType;\n    },\n  },\n\n  /**\n   * The component type of the property. Only defined when type is ARRAY.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {MetadataType}\n   * @readonly\n   * @private\n   */\n  componentType: {\n    get: function () {\n      return this._componentType;\n    },\n  },\n\n  /**\n   * The data type of property values.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {MetadataType}\n   * @readonly\n   *\n   * @private\n   */\n  valueType: {\n    get: function () {\n      return this._valueType;\n    },\n  },\n\n  /**\n   * The number of components per element. Only defined when type is a fixed size ARRAY.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {Number}\n   * @readonly\n   * @private\n   */\n  componentCount: {\n    get: function () {\n      return this._componentCount;\n    },\n  },\n\n  /**\n   * Whether the property is normalized.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {Boolean}\n   * @readonly\n   * @private\n   */\n  normalized: {\n    get: function () {\n      return this._normalized;\n    },\n  },\n\n  /**\n   * A number or an array of numbers storing the maximum allowable value of this property. Only defined when type or componentType is a numeric type.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {Number|Number[]}\n   * @readonly\n   * @private\n   */\n  max: {\n    get: function () {\n      return this._max;\n    },\n  },\n\n  /**\n   * A number or an array of numbers storing the minimum allowable value of this property. Only defined when type or componentType is a numeric type.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {Number|Number[]}\n   * @readonly\n   * @private\n   */\n  min: {\n    get: function () {\n      return this._min;\n    },\n  },\n\n  /**\n   * A default value to use when an entity\'s property value is not defined.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {Boolean|Number|String|Array}\n   * @readonly\n   * @private\n   */\n  default: {\n    get: function () {\n      return this._default;\n    },\n  },\n\n  /**\n   * Whether the property is optional.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {Boolean}\n   * @readonly\n   * @private\n   */\n  optional: {\n    get: function () {\n      return this._optional;\n    },\n  },\n\n  /**\n   * An identifier that describes how this property should be interpreted.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  semantic: {\n    get: function () {\n      return this._semantic;\n    },\n  },\n\n  /**\n   * Extras in the JSON object.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * Extensions in the JSON object.\n   *\n   * @memberof MetadataClassProperty.prototype\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\n/**\n * Normalizes integer property values. If the property is not normalized\n * the value is returned unmodified.\n *\n * @param {*} value The integer value or array of integer values.\n * @returns {*} The normalized value or array of normalized values.\n *\n * @private\n */\nMetadataClassProperty.prototype.normalize = function (value) {\n  return normalize(this, value, _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].normalize */ .Z.normalize);\n};\n\n/**\n * Unnormalizes integer property values. If the property is not normalized\n * the value is returned unmodified.\n *\n * @param {*} value The normalized value or array of normalized values.\n * @returns {*} The integer value or array of integer values.\n *\n * @private\n */\nMetadataClassProperty.prototype.unnormalize = function (value) {\n  return normalize(this, value, _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].unnormalize */ .Z.unnormalize);\n};\n\n/**\n * Unpack array values into {@link Cartesian2}, {@link Cartesian3}, or\n * {@link Cartesian4} if this property is an <code>ARRAY</code> of length 2, 3,\n * or 4, respectively. All other values (including arrays of other sizes) are\n * passed through unaltered.\n *\n * @param {*} value the original, normalized values.\n * @returns {*} The appropriate vector type if the value is a vector type. Otherwise, the value is returned unaltered.\n * @private\n */\nMetadataClassProperty.prototype.unpackVectorTypes = function (value) {\n  var type = this._type;\n  var componentCount = this._componentCount;\n\n  if (\n    type !== _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].ARRAY */ .Z.ARRAY ||\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(componentCount) ||\n    !_MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].isVectorCompatible */ .Z.isVectorCompatible(this._componentType)\n  ) {\n    return value;\n  }\n\n  if (componentCount === 2) {\n    return _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(value);\n  }\n\n  if (componentCount === 3) {\n    return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].unpack */ .Z.unpack(value);\n  }\n\n  if (componentCount === 4) {\n    return _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(value);\n  }\n\n  return value;\n};\n\n/**\n * Pack a {@link Cartesian2}, {@link Cartesian3}, or {@link Cartesian4} into an\n * array if this property is an <code>ARRAY</code> of length 2, 3, or 4, respectively.\n * All other values (including arrays of other sizes) are passed through unaltered.\n *\n * @param {*} value The value of this property\n * @returns {*} An array of the appropriate length if the property is a vector type. Otherwise, the value is returned unaltered.\n * @private\n */\nMetadataClassProperty.prototype.packVectorTypes = function (value) {\n  var type = this._type;\n  var componentCount = this._componentCount;\n\n  if (\n    type !== _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].ARRAY */ .Z.ARRAY ||\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(componentCount) ||\n    !_MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].isVectorCompatible */ .Z.isVectorCompatible(this._componentType)\n  ) {\n    return value;\n  }\n\n  if (componentCount === 2) {\n    return _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].pack */ .Z.pack(value, []);\n  }\n\n  if (componentCount === 3) {\n    return _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].pack */ .Z.pack(value, []);\n  }\n\n  if (componentCount === 4) {\n    return _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(value, []);\n  }\n\n  return value;\n};\n\n/**\n * Validates whether the given value conforms to the property.\n *\n * @param {*} value The value.\n * @returns {String|undefined} An error message if the value does not conform to the property, otherwise undefined.\n * @private\n */\nMetadataClassProperty.prototype.validate = function (value) {\n  var message;\n  var type = this._type;\n  if (type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].ARRAY */ .Z.ARRAY) {\n    var componentCount = this._componentCount;\n\n    // arrays of length 2, 3, and 4 are implicitly converted to CartesianN\n    if (\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(componentCount) &&\n      componentCount >= 2 &&\n      componentCount <= 4 &&\n      _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].isVectorCompatible */ .Z.isVectorCompatible(this._componentType)\n    ) {\n      return validateVector(value, componentCount);\n    }\n\n    if (!Array.isArray(value)) {\n      return getTypeErrorMessage(value, type);\n    }\n    var length = value.length;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(componentCount) && componentCount !== length) {\n      return "Array length does not match componentCount";\n    }\n    for (var i = 0; i < length; ++i) {\n      message = checkValue(this, value[i]);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(message)) {\n        return message;\n      }\n    }\n  } else {\n    message = checkValue(this, value);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(message)) {\n      return message;\n    }\n  }\n};\n\nfunction validateVector(value, componentCount) {\n  if (componentCount === 2 && !(value instanceof _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)) {\n    return "vector value " + value + " must be a Cartesian2";\n  }\n\n  if (componentCount === 3 && !(value instanceof _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)) {\n    return "vector value " + value + " must be a Cartesian3";\n  }\n\n  if (componentCount === 4 && !(value instanceof _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)) {\n    return "vector value " + value + " must be a Cartesian4";\n  }\n}\n\nfunction getTypeErrorMessage(value, type) {\n  return "value " + value + " does not match type " + type;\n}\n\nfunction getOutOfRangeErrorMessage(value, type, normalized) {\n  var errorMessage = "value " + value + " is out of range for type " + type;\n  if (normalized) {\n    errorMessage += " (normalized)";\n  }\n  return errorMessage;\n}\n\nfunction checkInRange(value, type, normalized) {\n  if (normalized) {\n    var min = _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].isUnsignedIntegerType */ .Z.isUnsignedIntegerType(type) ? 0.0 : -1.0;\n    var max = 1.0;\n    if (value < min || value > max) {\n      return getOutOfRangeErrorMessage(value, type, normalized);\n    }\n    return;\n  }\n\n  if (\n    value < _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getMinimum */ .Z.getMinimum(type) ||\n    value > _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].getMaximum */ .Z.getMaximum(type)\n  ) {\n    return getOutOfRangeErrorMessage(value, type, normalized);\n  }\n}\n\nfunction checkValue(classProperty, value) {\n  var javascriptType = typeof value;\n\n  var enumType = classProperty._enumType;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(enumType)) {\n    if (javascriptType !== "string" || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(enumType.valuesByName[value])) {\n      return "value " + value + " is not a valid enum name for " + enumType.id;\n    }\n    return;\n  }\n\n  var valueType = classProperty._valueType;\n  var normalized = classProperty._normalized;\n\n  switch (valueType) {\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].INT8 */ .Z.INT8:\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UINT8 */ .Z.UINT8:\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].INT16 */ .Z.INT16:\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UINT16 */ .Z.UINT16:\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].INT32 */ .Z.INT32:\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UINT32 */ .Z.UINT32:\n      if (javascriptType !== "number") {\n        return getTypeErrorMessage(value, valueType);\n      }\n      return checkInRange(value, valueType, normalized);\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].INT64 */ .Z.INT64:\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UINT64 */ .Z.UINT64:\n      if (javascriptType !== "number" && javascriptType !== "bigint") {\n        return getTypeErrorMessage(value, valueType);\n      }\n      return checkInRange(value, valueType, normalized);\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT32 */ .Z.FLOAT32:\n      if (javascriptType !== "number") {\n        return getTypeErrorMessage(value, valueType);\n      }\n      if (isFinite(value)) {\n        return checkInRange(value, valueType, normalized);\n      }\n      break;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT64 */ .Z.FLOAT64:\n      if (javascriptType !== "number") {\n        return getTypeErrorMessage(value, valueType);\n      }\n      break;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].BOOLEAN */ .Z.BOOLEAN:\n      if (javascriptType !== "boolean") {\n        return getTypeErrorMessage(value, valueType);\n      }\n      break;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].STRING */ .Z.STRING:\n      if (javascriptType !== "string") {\n        return getTypeErrorMessage(value, valueType);\n      }\n      break;\n  }\n}\n\nfunction normalize(classProperty, value, normalizeFunction) {\n  var type = classProperty._type;\n  var valueType = classProperty._valueType;\n  var normalized = classProperty._normalized;\n\n  if (normalized) {\n    if (type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].ARRAY */ .Z.ARRAY) {\n      var length = value.length;\n      for (var i = 0; i < length; ++i) {\n        value[i] = normalizeFunction(value[i], valueType);\n      }\n    } else {\n      value = normalizeFunction(value, valueType);\n    }\n  }\n  return value;\n}\n\nfunction getValueType(type, componentType, enumType) {\n  if (type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].ARRAY */ .Z.ARRAY) {\n    type = componentType;\n  }\n  if (type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].ENUM */ .Z.ENUM) {\n    type = enumType.valueType;\n  }\n\n  return type;\n}\n\n/* harmony default export */ __webpack_exports__["Z"] = (MetadataClassProperty);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///92278\n')},18349:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n\n\n\n\n/**\n * An entity containing metadata.\n * <p>\n * This type describes an interface and is not intended to be instantiated directly.\n * </p>\n * <p>\n * See the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_metadata|3DTILES_metadata Extension} for 3D Tiles\n * </p>\n *\n * @alias MetadataEntity\n * @constructor\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataEntity() {}\n\nObject.defineProperties(MetadataEntity.prototype, {\n  /**\n   * The class that properties conform to.\n   *\n   * @memberof MetadataEntity.prototype\n   * @type {MetadataClass}\n   * @readonly\n   * @private\n   */\n  class: {\n    // eslint-disable-next-line getter-return\n    get: function () {\n      _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n    },\n  },\n});\n\n/**\n * Returns whether the entity has this property.\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {Boolean} Whether the entity has this property.\n * @private\n */\nMetadataEntity.prototype.hasProperty = function (propertyId) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Returns whether the entity has a property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {Boolean} Whether the entity has a property with the given semantic.\n * @private\n */\nMetadataEntity.prototype.hasPropertyBySemantic = function (semantic) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Returns an array of property IDs.\n *\n * @param {String[]} [results] An array into which to store the results.\n * @returns {String[]} The property IDs.\n * @private\n */\nMetadataEntity.prototype.getPropertyIds = function (results) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Returns a copy of the value of the property with the given ID.\n * <p>\n * If the property is normalized the normalized value is returned.\n * </p>\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the entity does not have this property.\n * @private\n */\nMetadataEntity.prototype.getProperty = function (propertyId) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Sets the value of the property with the given ID.\n * <p>\n * If the property is normalized a normalized value must be provided to this function.\n * </p>\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @param {*} value The value of the property that will be copied.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n * @private\n */\nMetadataEntity.prototype.setProperty = function (propertyId, value) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Returns a copy of the value of the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the entity does not have this property.\n * @private\n */\nMetadataEntity.prototype.getPropertyBySemantic = function (semantic) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Sets the value of the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @param {*} value The value of the property that will be copied.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n * @private\n */\nMetadataEntity.prototype.setPropertyBySemantic = function (semantic, value) {\n  _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError();\n};\n\n/**\n * Returns whether the entity has this property.\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @param {Object} properties The dictionary containing properties.\n * @param {MetadataClass} [classDefinition] The class.\n * @returns {Boolean} Whether the entity has this property.\n *\n * @private\n */\nMetadataEntity.hasProperty = function (\n  propertyId,\n  properties,\n  classDefinition\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("propertyId", propertyId);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("properties", properties);\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(properties[propertyId])) {\n    return true;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classDefinition)) {\n    var classProperty = classDefinition.properties[propertyId];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classProperty) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classProperty.default)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Returns whether the entity has a property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @param {Object} properties The dictionary containing properties.\n * @param {MetadataClass} [classDefinition] The class.\n * @returns {Boolean} Whether the entity has a property with the given semantic.\n *\n * @private\n */\nMetadataEntity.hasPropertyBySemantic = function (\n  semantic,\n  properties,\n  classDefinition\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("properties", properties);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classDefinition)) {\n    return false;\n  }\n\n  var property = classDefinition.propertiesBySemantic[semantic];\n  return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(property);\n};\n\n/**\n * Returns an array of property IDs.\n *\n * @param {Object} properties The dictionary containing properties.\n * @param {MetadataClass} [classDefinition] The class.\n * @param {String[]} [results] An array into which to store the results.\n * @returns {String[]} The property IDs.\n *\n * @private\n */\nMetadataEntity.getPropertyIds = function (\n  properties,\n  classDefinition,\n  results\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("properties", properties);\n  //>>includeEnd(\'debug\');\n\n  results = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(results) ? results : [];\n  results.length = 0;\n\n  // Add entity properties\n  for (var propertyId in properties) {\n    if (\n      properties.hasOwnProperty(propertyId) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(properties[propertyId])\n    ) {\n      results.push(propertyId);\n    }\n  }\n\n  // Add default properties\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classDefinition)) {\n    var classProperties = classDefinition.properties;\n    for (var classPropertyId in classProperties) {\n      if (\n        classProperties.hasOwnProperty(classPropertyId) &&\n        !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(properties[classPropertyId]) &&\n        (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classProperties[classPropertyId].default)\n      ) {\n        results.push(classPropertyId);\n      }\n    }\n  }\n\n  return results;\n};\n\n/**\n * Returns a copy of the value of the property with the given ID.\n * <p>\n * If the property is normalized the normalized value is returned.\n * </p>\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @param {Object} properties The dictionary containing properties.\n * @param {MetadataClass} [classDefinition] The class.\n * @returns {*} The value of the property or <code>undefined</code> if the entity does not have this property.\n *\n * @private\n */\nMetadataEntity.getProperty = function (\n  propertyId,\n  properties,\n  classDefinition\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("propertyId", propertyId);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("properties", properties);\n  //>>includeEnd(\'debug\');\n\n  var value = properties[propertyId];\n\n  var classProperty;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classDefinition)) {\n    classProperty = classDefinition.properties[propertyId];\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(value) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classProperty)) {\n    value = classProperty.default;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(value)) {\n    return undefined;\n  }\n\n  if (Array.isArray(value)) {\n    value = value.slice(); // clone\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classProperty)) {\n    value = classProperty.normalize(value);\n    value = classProperty.unpackVectorTypes(value);\n  }\n\n  return value;\n};\n\n/**\n * Sets the value of the property with the given ID.\n * <p>\n * If the property is normalized a normalized value must be provided to this function.\n * </p>\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @param {*} value The value of the property that will be copied.\n * @param {Object} properties The dictionary containing properties.\n * @param {MetadataClass} [classDefinition] The class.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n *\n * @private\n */\nMetadataEntity.setProperty = function (\n  propertyId,\n  value,\n  properties,\n  classDefinition\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("propertyId", propertyId);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("value", value);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("properties", properties);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(properties[propertyId])) {\n    return false;\n  }\n\n  if (Array.isArray(value)) {\n    value = value.slice(); // clone\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classDefinition)) {\n    var classProperty = classDefinition.properties[propertyId];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classProperty)) {\n      value = classProperty.packVectorTypes(value);\n      value = classProperty.unnormalize(value);\n    }\n  }\n\n  properties[propertyId] = value;\n  return true;\n};\n\n/**\n * Returns a copy of the value of the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @param {Object} properties The dictionary containing properties.\n * @param {MetadataClass} classDefinition The class.\n * @returns {*} The value of the property or <code>undefined</code> if the entity does not have this property.\n *\n * @private\n */\nMetadataEntity.getPropertyBySemantic = function (\n  semantic,\n  properties,\n  classDefinition\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("properties", properties);\n  //>>includeEnd(\'debug\');\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(classDefinition)) {\n    return undefined;\n  }\n\n  var property = classDefinition.propertiesBySemantic[semantic];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(property)) {\n    return MetadataEntity.getProperty(property.id, properties, classDefinition);\n  }\n  return undefined;\n};\n\n/**\n * Sets the value of the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @param {*} value The value of the property that will be copied.\n * @param {Object} properties The dictionary containing properties.\n * @param {MetadataClass} classDefinition The class.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n * @private\n */\nMetadataEntity.setPropertyBySemantic = function (\n  semantic,\n  value,\n  properties,\n  classDefinition\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("value", value);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("properties", properties);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("classDefinition", classDefinition);\n  //>>includeEnd(\'debug\');\n\n  var property = classDefinition.propertiesBySemantic[semantic];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(property)) {\n    return MetadataEntity.setProperty(\n      property.id,\n      value,\n      properties,\n      classDefinition\n    );\n  }\n\n  return false;\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (MetadataEntity);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///18349\n')},27053:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _MetadataEnumValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72762);\n/* harmony import */ var _MetadataType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10114);\n\n\n\n\n\n/**\n * A metadata enum.\n * <p>\n * See the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_metadata|3DTILES_metadata Extension} for 3D Tiles\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {String} options.id The ID of the enum.\n * @param {Object} options.enum The enum JSON object.\n *\n * @alias MetadataEnum\n * @constructor\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataEnum(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var id = options.id;\n  var enumDefinition = options.enum;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("options.id", id);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.enum", enumDefinition);\n  //>>includeEnd(\'debug\');\n\n  var namesByValue = {};\n  var valuesByName = {};\n  var values = enumDefinition.values.map(function (value) {\n    namesByValue[value.value] = value.name;\n    valuesByName[value.name] = value.value;\n    return new _MetadataEnumValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(value);\n  });\n\n  var valueType = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    _MetadataType_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z[enumDefinition.valueType],\n    _MetadataType_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].UINT16 */ .Z.UINT16\n  );\n\n  this._values = values;\n  this._namesByValue = namesByValue;\n  this._valuesByName = valuesByName;\n  this._valueType = valueType;\n  this._id = id;\n  this._name = enumDefinition.name;\n  this._description = enumDefinition.description;\n  this._extras = enumDefinition.extras;\n  this._extensions = enumDefinition.extensions;\n}\n\nObject.defineProperties(MetadataEnum.prototype, {\n  /**\n   * The enum values.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {MetadataEnumValue[]}\n   * @readonly\n   * @private\n   */\n  values: {\n    get: function () {\n      return this._values;\n    },\n  },\n\n  /**\n   * A dictionary mapping enum integer values to names.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {Object.<Number, String>}\n   * @readonly\n   *\n   * @private\n   */\n  namesByValue: {\n    get: function () {\n      return this._namesByValue;\n    },\n  },\n\n  /**\n   * A dictionary mapping enum names to integer values.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {Object.<String, Number>}\n   * @readonly\n   *\n   * @private\n   */\n  valuesByName: {\n    get: function () {\n      return this._valuesByName;\n    },\n  },\n\n  /**\n   * The enum value type.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {MetadataType}\n   * @readonly\n   *\n   * @private\n   */\n  valueType: {\n    get: function () {\n      return this._valueType;\n    },\n  },\n\n  /**\n   * The ID of the enum.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n\n  /**\n   * The name of the enum.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The description of the enum.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  description: {\n    get: function () {\n      return this._description;\n    },\n  },\n\n  /**\n   * Extras in the JSON object.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * Extensions in the JSON object.\n   *\n   * @memberof MetadataEnum.prototype\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\n/* harmony default export */ __webpack_exports__["Z"] = (MetadataEnum);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcwNTMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFxQztBQUNjO0FBQ0k7QUFDVjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzSEFBc0g7QUFDbEk7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwRUFBWSxVQUFVLGdHQUF5QjtBQUMzRDtBQUNBOztBQUVBO0FBQ0EsRUFBRSwyRkFBbUI7QUFDckIsRUFBRSwyRkFBbUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0VBQWlCO0FBQ2hDLEdBQUc7O0FBRUgsa0JBQWtCLDBFQUFZO0FBQzlCLElBQUksaUVBQVk7QUFDaEIsSUFBSSwrRUFBbUI7QUFDdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQseURBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL01ldGFkYXRhRW51bS5qcz83NjU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGVjayBmcm9tIFwiLi4vQ29yZS9DaGVjay5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBNZXRhZGF0YUVudW1WYWx1ZSBmcm9tIFwiLi9NZXRhZGF0YUVudW1WYWx1ZS5qc1wiO1xuaW1wb3J0IE1ldGFkYXRhVHlwZSBmcm9tIFwiLi9NZXRhZGF0YVR5cGUuanNcIjtcblxuLyoqXG4gKiBBIG1ldGFkYXRhIGVudW0uXG4gKiA8cD5cbiAqIFNlZSB0aGUge0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9DZXNpdW1HUy8zZC10aWxlcy90cmVlLzNkLXRpbGVzLW5leHQvZXh0ZW5zaW9ucy8zRFRJTEVTX21ldGFkYXRhfDNEVElMRVNfbWV0YWRhdGEgRXh0ZW5zaW9ufSBmb3IgM0QgVGlsZXNcbiAqIDwvcD5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBPYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5pZCBUaGUgSUQgb2YgdGhlIGVudW0uXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucy5lbnVtIFRoZSBlbnVtIEpTT04gb2JqZWN0LlxuICpcbiAqIEBhbGlhcyBNZXRhZGF0YUVudW1cbiAqIEBjb25zdHJ1Y3RvclxuICogQHByaXZhdGVcbiAqIEBleHBlcmltZW50YWwgVGhpcyBmZWF0dXJlIGlzIHVzaW5nIHBhcnQgb2YgdGhlIDNEIFRpbGVzIHNwZWMgdGhhdCBpcyBub3QgZmluYWwgYW5kIGlzIHN1YmplY3QgdG8gY2hhbmdlIHdpdGhvdXQgQ2VzaXVtJ3Mgc3RhbmRhcmQgZGVwcmVjYXRpb24gcG9saWN5LlxuICovXG5mdW5jdGlvbiBNZXRhZGF0YUVudW0ob3B0aW9ucykge1xuICBvcHRpb25zID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMsIGRlZmF1bHRWYWx1ZS5FTVBUWV9PQkpFQ1QpO1xuICB2YXIgaWQgPSBvcHRpb25zLmlkO1xuICB2YXIgZW51bURlZmluaXRpb24gPSBvcHRpb25zLmVudW07XG5cbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLnN0cmluZyhcIm9wdGlvbnMuaWRcIiwgaWQpO1xuICBDaGVjay50eXBlT2Yub2JqZWN0KFwib3B0aW9ucy5lbnVtXCIsIGVudW1EZWZpbml0aW9uKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIG5hbWVzQnlWYWx1ZSA9IHt9O1xuICB2YXIgdmFsdWVzQnlOYW1lID0ge307XG4gIHZhciB2YWx1ZXMgPSBlbnVtRGVmaW5pdGlvbi52YWx1ZXMubWFwKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIG5hbWVzQnlWYWx1ZVt2YWx1ZS52YWx1ZV0gPSB2YWx1ZS5uYW1lO1xuICAgIHZhbHVlc0J5TmFtZVt2YWx1ZS5uYW1lXSA9IHZhbHVlLnZhbHVlO1xuICAgIHJldHVybiBuZXcgTWV0YWRhdGFFbnVtVmFsdWUodmFsdWUpO1xuICB9KTtcblxuICB2YXIgdmFsdWVUeXBlID0gZGVmYXVsdFZhbHVlKFxuICAgIE1ldGFkYXRhVHlwZVtlbnVtRGVmaW5pdGlvbi52YWx1ZVR5cGVdLFxuICAgIE1ldGFkYXRhVHlwZS5VSU5UMTZcbiAgKTtcblxuICB0aGlzLl92YWx1ZXMgPSB2YWx1ZXM7XG4gIHRoaXMuX25hbWVzQnlWYWx1ZSA9IG5hbWVzQnlWYWx1ZTtcbiAgdGhpcy5fdmFsdWVzQnlOYW1lID0gdmFsdWVzQnlOYW1lO1xuICB0aGlzLl92YWx1ZVR5cGUgPSB2YWx1ZVR5cGU7XG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX25hbWUgPSBlbnVtRGVmaW5pdGlvbi5uYW1lO1xuICB0aGlzLl9kZXNjcmlwdGlvbiA9IGVudW1EZWZpbml0aW9uLmRlc2NyaXB0aW9uO1xuICB0aGlzLl9leHRyYXMgPSBlbnVtRGVmaW5pdGlvbi5leHRyYXM7XG4gIHRoaXMuX2V4dGVuc2lvbnMgPSBlbnVtRGVmaW5pdGlvbi5leHRlbnNpb25zO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhNZXRhZGF0YUVudW0ucHJvdG90eXBlLCB7XG4gIC8qKlxuICAgKiBUaGUgZW51bSB2YWx1ZXMuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YUVudW0ucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNZXRhZGF0YUVudW1WYWx1ZVtdfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHZhbHVlczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlcztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBBIGRpY3Rpb25hcnkgbWFwcGluZyBlbnVtIGludGVnZXIgdmFsdWVzIHRvIG5hbWVzLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFFbnVtLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7T2JqZWN0LjxOdW1iZXIsIFN0cmluZz59XG4gICAqIEByZWFkb25seVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgbmFtZXNCeVZhbHVlOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbmFtZXNCeVZhbHVlO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEEgZGljdGlvbmFyeSBtYXBwaW5nIGVudW0gbmFtZXMgdG8gaW50ZWdlciB2YWx1ZXMuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YUVudW0ucHJvdG90eXBlXG4gICAqIEB0eXBlIHtPYmplY3QuPFN0cmluZywgTnVtYmVyPn1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB2YWx1ZXNCeU5hbWU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl92YWx1ZXNCeU5hbWU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGVudW0gdmFsdWUgdHlwZS5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhRW51bS5wcm90b3R5cGVcbiAgICogQHR5cGUge01ldGFkYXRhVHlwZX1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB2YWx1ZVR5cGU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl92YWx1ZVR5cGU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIElEIG9mIHRoZSBlbnVtLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFFbnVtLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGlkOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5faWQ7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGVudW0uXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YUVudW0ucHJvdG90eXBlXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgbmFtZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX25hbWU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBlbnVtLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFFbnVtLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGRlc2NyaXB0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZGVzY3JpcHRpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogRXh0cmFzIGluIHRoZSBKU09OIG9iamVjdC5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhRW51bS5wcm90b3R5cGVcbiAgICogQHR5cGUgeyp9XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZXh0cmFzOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZXh0cmFzO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEV4dGVuc2lvbnMgaW4gdGhlIEpTT04gb2JqZWN0LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFFbnVtLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGV4dGVuc2lvbnM6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9leHRlbnNpb25zO1xuICAgIH0sXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTWV0YWRhdGFFbnVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///27053\n')},72762:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n\n\n/**\n * A metadata enum value.\n *\n * @param {Object} value The enum value JSON object.\n *\n * @alias MetadataEnumValue\n * @constructor\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataEnumValue(value) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  //>>includeEnd(\'debug\');\n\n  this._value = value.value;\n  this._name = value.name;\n  this._description = value.description;\n  this._extras = value.extras;\n  this._extensions = value.extensions;\n}\n\nObject.defineProperties(MetadataEnumValue.prototype, {\n  /**\n   * The integer value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {Number}\n   * @readonly\n   * @private\n   */\n  value: {\n    get: function () {\n      return this._value;\n    },\n  },\n\n  /**\n   * The name of the enum value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The description of the enum value.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  description: {\n    get: function () {\n      return this._description;\n    },\n  },\n\n  /**\n   * Extras in the JSON object.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * Extensions in the JSON object.\n   *\n   * @memberof MetadataEnumValue.prototype\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\n/* harmony default export */ __webpack_exports__["Z"] = (MetadataEnumValue);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzI3NjIuanMiLCJtYXBwaW5ncyI6IjtBQUFxQzs7QUFFckM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDJGQUFtQjtBQUNyQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQseURBQWUsaUJBQWlCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTWV0YWRhdGFFbnVtVmFsdWUuanM/ZDU2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hlY2sgZnJvbSBcIi4uL0NvcmUvQ2hlY2suanNcIjtcblxuLyoqXG4gKiBBIG1ldGFkYXRhIGVudW0gdmFsdWUuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbHVlIFRoZSBlbnVtIHZhbHVlIEpTT04gb2JqZWN0LlxuICpcbiAqIEBhbGlhcyBNZXRhZGF0YUVudW1WYWx1ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcHJpdmF0ZVxuICogQGV4cGVyaW1lbnRhbCBUaGlzIGZlYXR1cmUgaXMgdXNpbmcgcGFydCBvZiB0aGUgM0QgVGlsZXMgc3BlYyB0aGF0IGlzIG5vdCBmaW5hbCBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2Ugd2l0aG91dCBDZXNpdW0ncyBzdGFuZGFyZCBkZXByZWNhdGlvbiBwb2xpY3kuXG4gKi9cbmZ1bmN0aW9uIE1ldGFkYXRhRW51bVZhbHVlKHZhbHVlKSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5vYmplY3QoXCJ2YWx1ZVwiLCB2YWx1ZSk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHRoaXMuX3ZhbHVlID0gdmFsdWUudmFsdWU7XG4gIHRoaXMuX25hbWUgPSB2YWx1ZS5uYW1lO1xuICB0aGlzLl9kZXNjcmlwdGlvbiA9IHZhbHVlLmRlc2NyaXB0aW9uO1xuICB0aGlzLl9leHRyYXMgPSB2YWx1ZS5leHRyYXM7XG4gIHRoaXMuX2V4dGVuc2lvbnMgPSB2YWx1ZS5leHRlbnNpb25zO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhNZXRhZGF0YUVudW1WYWx1ZS5wcm90b3R5cGUsIHtcbiAgLyoqXG4gICAqIFRoZSBpbnRlZ2VyIHZhbHVlLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFFbnVtVmFsdWUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdmFsdWU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl92YWx1ZTtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgZW51bSB2YWx1ZS5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhRW51bVZhbHVlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIG5hbWU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgZW51bSB2YWx1ZS5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhRW51bVZhbHVlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGRlc2NyaXB0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZGVzY3JpcHRpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogRXh0cmFzIGluIHRoZSBKU09OIG9iamVjdC5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhRW51bVZhbHVlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Kn1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBleHRyYXM6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9leHRyYXM7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogRXh0ZW5zaW9ucyBpbiB0aGUgSlNPTiBvYmplY3QuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YUVudW1WYWx1ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBleHRlbnNpb25zOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZXh0ZW5zaW9ucztcbiAgICB9LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IE1ldGFkYXRhRW51bVZhbHVlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///72762\n')},40914:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _MetadataClass_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77840);\n/* harmony import */ var _MetadataEnum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27053);\n\n\n\n\n\n/**\n * A schema containing classes and enums.\n * <p>\n * See the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_metadata|3DTILES_metadata Extension} for 3D Tiles\n * </p>\n *\n * @param {Object} schema The schema JSON object.\n *\n * @alias MetadataSchema\n * @constructor\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataSchema(schema) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("schema", schema);\n  //>>includeEnd(\'debug\');\n\n  var enums = {};\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(schema.enums)) {\n    for (var enumId in schema.enums) {\n      if (schema.enums.hasOwnProperty(enumId)) {\n        enums[enumId] = new _MetadataEnum_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({\n          id: enumId,\n          enum: schema.enums[enumId],\n        });\n      }\n    }\n  }\n\n  var classes = {};\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(schema.classes)) {\n    for (var classId in schema.classes) {\n      if (schema.classes.hasOwnProperty(classId)) {\n        classes[classId] = new _MetadataClass_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({\n          id: classId,\n          class: schema.classes[classId],\n          enums: enums,\n        });\n      }\n    }\n  }\n\n  this._classes = classes;\n  this._enums = enums;\n  this._name = schema.name;\n  this._description = schema.description;\n  this._version = schema.version;\n  this._extras = schema.extras;\n  this._extensions = schema.extensions;\n}\n\nObject.defineProperties(MetadataSchema.prototype, {\n  /**\n   * Classes defined in the schema.\n   *\n   * @memberof MetadataSchema.prototype\n   * @type {Object.<String, MetadataClass>}\n   * @readonly\n   * @private\n   */\n  classes: {\n    get: function () {\n      return this._classes;\n    },\n  },\n\n  /**\n   * Enums defined in the schema.\n   *\n   * @memberof MetadataSchema.prototype\n   * @type {Object.<String, MetadataEnum>}\n   * @readonly\n   * @private\n   */\n  enums: {\n    get: function () {\n      return this._enums;\n    },\n  },\n\n  /**\n   * The name of the schema.\n   *\n   * @memberof MetadataSchema.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The description of the schema.\n   *\n   * @memberof MetadataSchema.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  description: {\n    get: function () {\n      return this._description;\n    },\n  },\n\n  /**\n   * The application-specific version of the schema.\n   *\n   * @memberof MetadataSchema.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  version: {\n    get: function () {\n      return this._version;\n    },\n  },\n\n  /**\n   * Extras in the JSON object.\n   *\n   * @memberof MetadataSchema.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * Extensions in the JSON object.\n   *\n   * @memberof MetadataSchema.prototype\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\n/* harmony default export */ __webpack_exports__["Z"] = (MetadataSchema);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDA5MTQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFxQztBQUNJO0FBQ007QUFDRjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzSEFBc0g7QUFDbEk7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwyRkFBbUI7QUFDckI7O0FBRUE7QUFDQSxNQUFNLHFFQUFPO0FBQ2I7QUFDQTtBQUNBLDRCQUE0QixpRUFBWTtBQUN4QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0scUVBQU87QUFDYjtBQUNBO0FBQ0EsK0JBQStCLGtFQUFhO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsQ0FBQzs7QUFFRCx5REFBZSxjQUFjLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvTWV0YWRhdGFTY2hlbWEuanM/NDk3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hlY2sgZnJvbSBcIi4uL0NvcmUvQ2hlY2suanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBNZXRhZGF0YUNsYXNzIGZyb20gXCIuL01ldGFkYXRhQ2xhc3MuanNcIjtcbmltcG9ydCBNZXRhZGF0YUVudW0gZnJvbSBcIi4vTWV0YWRhdGFFbnVtLmpzXCI7XG5cbi8qKlxuICogQSBzY2hlbWEgY29udGFpbmluZyBjbGFzc2VzIGFuZCBlbnVtcy5cbiAqIDxwPlxuICogU2VlIHRoZSB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL0Nlc2l1bUdTLzNkLXRpbGVzL3RyZWUvM2QtdGlsZXMtbmV4dC9leHRlbnNpb25zLzNEVElMRVNfbWV0YWRhdGF8M0RUSUxFU19tZXRhZGF0YSBFeHRlbnNpb259IGZvciAzRCBUaWxlc1xuICogPC9wPlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBzY2hlbWEgVGhlIHNjaGVtYSBKU09OIG9iamVjdC5cbiAqXG4gKiBAYWxpYXMgTWV0YWRhdGFTY2hlbWFcbiAqIEBjb25zdHJ1Y3RvclxuICogQHByaXZhdGVcbiAqIEBleHBlcmltZW50YWwgVGhpcyBmZWF0dXJlIGlzIHVzaW5nIHBhcnQgb2YgdGhlIDNEIFRpbGVzIHNwZWMgdGhhdCBpcyBub3QgZmluYWwgYW5kIGlzIHN1YmplY3QgdG8gY2hhbmdlIHdpdGhvdXQgQ2VzaXVtJ3Mgc3RhbmRhcmQgZGVwcmVjYXRpb24gcG9saWN5LlxuICovXG5mdW5jdGlvbiBNZXRhZGF0YVNjaGVtYShzY2hlbWEpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLm9iamVjdChcInNjaGVtYVwiLCBzY2hlbWEpO1xuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICB2YXIgZW51bXMgPSB7fTtcbiAgaWYgKGRlZmluZWQoc2NoZW1hLmVudW1zKSkge1xuICAgIGZvciAodmFyIGVudW1JZCBpbiBzY2hlbWEuZW51bXMpIHtcbiAgICAgIGlmIChzY2hlbWEuZW51bXMuaGFzT3duUHJvcGVydHkoZW51bUlkKSkge1xuICAgICAgICBlbnVtc1tlbnVtSWRdID0gbmV3IE1ldGFkYXRhRW51bSh7XG4gICAgICAgICAgaWQ6IGVudW1JZCxcbiAgICAgICAgICBlbnVtOiBzY2hlbWEuZW51bXNbZW51bUlkXSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmFyIGNsYXNzZXMgPSB7fTtcbiAgaWYgKGRlZmluZWQoc2NoZW1hLmNsYXNzZXMpKSB7XG4gICAgZm9yICh2YXIgY2xhc3NJZCBpbiBzY2hlbWEuY2xhc3Nlcykge1xuICAgICAgaWYgKHNjaGVtYS5jbGFzc2VzLmhhc093blByb3BlcnR5KGNsYXNzSWQpKSB7XG4gICAgICAgIGNsYXNzZXNbY2xhc3NJZF0gPSBuZXcgTWV0YWRhdGFDbGFzcyh7XG4gICAgICAgICAgaWQ6IGNsYXNzSWQsXG4gICAgICAgICAgY2xhc3M6IHNjaGVtYS5jbGFzc2VzW2NsYXNzSWRdLFxuICAgICAgICAgIGVudW1zOiBlbnVtcyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdGhpcy5fY2xhc3NlcyA9IGNsYXNzZXM7XG4gIHRoaXMuX2VudW1zID0gZW51bXM7XG4gIHRoaXMuX25hbWUgPSBzY2hlbWEubmFtZTtcbiAgdGhpcy5fZGVzY3JpcHRpb24gPSBzY2hlbWEuZGVzY3JpcHRpb247XG4gIHRoaXMuX3ZlcnNpb24gPSBzY2hlbWEudmVyc2lvbjtcbiAgdGhpcy5fZXh0cmFzID0gc2NoZW1hLmV4dHJhcztcbiAgdGhpcy5fZXh0ZW5zaW9ucyA9IHNjaGVtYS5leHRlbnNpb25zO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhNZXRhZGF0YVNjaGVtYS5wcm90b3R5cGUsIHtcbiAgLyoqXG4gICAqIENsYXNzZXMgZGVmaW5lZCBpbiB0aGUgc2NoZW1hLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFTY2hlbWEucHJvdG90eXBlXG4gICAqIEB0eXBlIHtPYmplY3QuPFN0cmluZywgTWV0YWRhdGFDbGFzcz59XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgY2xhc3Nlczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2NsYXNzZXM7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogRW51bXMgZGVmaW5lZCBpbiB0aGUgc2NoZW1hLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFTY2hlbWEucHJvdG90eXBlXG4gICAqIEB0eXBlIHtPYmplY3QuPFN0cmluZywgTWV0YWRhdGFFbnVtPn1cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBlbnVtczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2VudW1zO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBzY2hlbWEuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YVNjaGVtYS5wcm90b3R5cGVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBuYW1lOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHNjaGVtYS5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhU2NoZW1hLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGRlc2NyaXB0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZGVzY3JpcHRpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGFwcGxpY2F0aW9uLXNwZWNpZmljIHZlcnNpb24gb2YgdGhlIHNjaGVtYS5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhU2NoZW1hLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHZlcnNpb246IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl92ZXJzaW9uO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEV4dHJhcyBpbiB0aGUgSlNPTiBvYmplY3QuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YVNjaGVtYS5wcm90b3R5cGVcbiAgICogQHR5cGUgeyp9XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZXh0cmFzOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZXh0cmFzO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEV4dGVuc2lvbnMgaW4gdGhlIEpTT04gb2JqZWN0LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFTY2hlbWEucHJvdG90eXBlXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZXh0ZW5zaW9uczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2V4dGVuc2lvbnM7XG4gICAgfSxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBNZXRhZGF0YVNjaGVtYTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///40914\n')},87508:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ MetadataSchemaLoader; }\n/* harmony export */ });\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13222);\n/* harmony import */ var _MetadataSchema_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(40914);\n/* harmony import */ var _ResourceLoader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(29789);\n/* harmony import */ var _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89356);\n\n\n\n\n\n\n\n\n/**\n * A {@link MetadataSchema} loader.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias MetadataSchemaLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} [options.schema] An object that explicitly defines a schema JSON. Mutually exclusive with options.resource.\n * @param {Resource} [options.resource] The {@link Resource} pointing to the schema JSON. Mutually exclusive with options.schema.\n * @param {String} [options.cacheKey] The cache key of the resource.\n *\n * @exception {DeveloperError} One of options.schema and options.resource must be defined.\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataSchemaLoader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var schema = options.schema;\n  var resource = options.resource;\n  var cacheKey = options.cacheKey;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(schema) === (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(resource)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "One of options.schema and options.resource must be defined."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this._schema = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(schema) ? new _MetadataSchema_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(schema) : undefined;\n  this._resource = resource;\n  this._cacheKey = cacheKey;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNLOADED */ .Z.UNLOADED;\n  this._promise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defer */ .Z.defer();\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(Object.create)) {\n  MetadataSchemaLoader.prototype = Object.create(_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].prototype */ .Z.prototype);\n  MetadataSchemaLoader.prototype.constructor = MetadataSchemaLoader;\n}\n\nObject.defineProperties(MetadataSchemaLoader.prototype, {\n  /**\n   * A promise that resolves to the resource when the resource is ready.\n   *\n   * @memberof MetadataSchemaLoader.prototype\n   *\n   * @type {Promise.<MetadataSchemaLoader>}\n   * @readonly\n   * @private\n   */\n  promise: {\n    get: function () {\n      return this._promise.promise;\n    },\n  },\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof MetadataSchemaLoader.prototype\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    },\n  },\n  /**\n   * The metadata schema object.\n   *\n   * @memberof MetadataSchemaLoader.prototype\n   *\n   * @type {MetadataSchema}\n   * @readonly\n   * @private\n   */\n  schema: {\n    get: function () {\n      return this._schema;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @private\n */\nMetadataSchemaLoader.prototype.load = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(this._schema)) {\n    this._promise.resolve(this);\n    return;\n  }\n\n  loadExternalSchema(this);\n};\n\nfunction loadExternalSchema(schemaLoader) {\n  var resource = schemaLoader._resource;\n  schemaLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].LOADING */ .Z.LOADING;\n  resource\n    .fetchJson()\n    .then(function (json) {\n      if (schemaLoader.isDestroyed()) {\n        return;\n      }\n      schemaLoader._schema = new _MetadataSchema_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(json);\n      schemaLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].READY */ .Z.READY;\n      schemaLoader._promise.resolve(schemaLoader);\n    })\n    .otherwise(function (error) {\n      if (schemaLoader.isDestroyed()) {\n        return;\n      }\n      schemaLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FAILED */ .Z.FAILED;\n      var errorMessage = "Failed to load schema: " + resource.url;\n      schemaLoader._promise.reject(schemaLoader.getError(errorMessage, error));\n    });\n}\n\n/**\n * Unloads the resource.\n * @private\n */\nMetadataSchemaLoader.prototype.unload = function () {\n  this._schema = undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODc1MDguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFtRDtBQUNWO0FBQ2M7QUFDZDtBQUNRO0FBQ0E7QUFDVTs7QUFFM0Q7QUFDQSxNQUFNLHNCQUFzQjtBQUM1QjtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVUsd0JBQXdCLGdCQUFnQjtBQUM3RCxXQUFXLFFBQVE7QUFDbkI7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2YsWUFBWSwwRUFBWSxVQUFVLGdHQUF5QjtBQUMzRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLHFFQUFPLGFBQWEscUVBQU87QUFDakMsY0FBYyx3RUFBYztBQUM1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIscUVBQU8sZUFBZSxtRUFBYztBQUNyRDtBQUNBO0FBQ0EsZ0JBQWdCLDBGQUE0QjtBQUM1QyxrQkFBa0IsZ0ZBQVU7QUFDNUI7O0FBRUEsSUFBSSxxRUFBTztBQUNYLGlEQUFpRCx1RkFBd0I7QUFDekU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0scUVBQU87QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esd0JBQXdCLHdGQUEyQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsbUVBQWM7QUFDL0MsNEJBQTRCLG9GQUF5QjtBQUNyRDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixzRkFBMEI7QUFDdEQ7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9NZXRhZGF0YVNjaGVtYUxvYWRlci5qcz81Njg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4uL0NvcmUvZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IuanNcIjtcbmltcG9ydCB3aGVuIGZyb20gXCIuLi9UaGlyZFBhcnR5L3doZW4uanNcIjtcbmltcG9ydCBNZXRhZGF0YVNjaGVtYSBmcm9tIFwiLi9NZXRhZGF0YVNjaGVtYS5qc1wiO1xuaW1wb3J0IFJlc291cmNlTG9hZGVyIGZyb20gXCIuL1Jlc291cmNlTG9hZGVyLmpzXCI7XG5pbXBvcnQgUmVzb3VyY2VMb2FkZXJTdGF0ZSBmcm9tIFwiLi9SZXNvdXJjZUxvYWRlclN0YXRlLmpzXCI7XG5cbi8qKlxuICogQSB7QGxpbmsgTWV0YWRhdGFTY2hlbWF9IGxvYWRlci5cbiAqIDxwPlxuICogSW1wbGVtZW50cyB0aGUge0BsaW5rIFJlc291cmNlTG9hZGVyfSBpbnRlcmZhY2UuXG4gKiA8L3A+XG4gKlxuICogQGFsaWFzIE1ldGFkYXRhU2NoZW1hTG9hZGVyXG4gKiBAY29uc3RydWN0b3JcbiAqIEBhdWdtZW50cyBSZXNvdXJjZUxvYWRlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5zY2hlbWFdIEFuIG9iamVjdCB0aGF0IGV4cGxpY2l0bHkgZGVmaW5lcyBhIHNjaGVtYSBKU09OLiBNdXR1YWxseSBleGNsdXNpdmUgd2l0aCBvcHRpb25zLnJlc291cmNlLlxuICogQHBhcmFtIHtSZXNvdXJjZX0gW29wdGlvbnMucmVzb3VyY2VdIFRoZSB7QGxpbmsgUmVzb3VyY2V9IHBvaW50aW5nIHRvIHRoZSBzY2hlbWEgSlNPTi4gTXV0dWFsbHkgZXhjbHVzaXZlIHdpdGggb3B0aW9ucy5zY2hlbWEuXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuY2FjaGVLZXldIFRoZSBjYWNoZSBrZXkgb2YgdGhlIHJlc291cmNlLlxuICpcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBPbmUgb2Ygb3B0aW9ucy5zY2hlbWEgYW5kIG9wdGlvbnMucmVzb3VyY2UgbXVzdCBiZSBkZWZpbmVkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAZXhwZXJpbWVudGFsIFRoaXMgZmVhdHVyZSBpcyB1c2luZyBwYXJ0IG9mIHRoZSAzRCBUaWxlcyBzcGVjIHRoYXQgaXMgbm90IGZpbmFsIGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZSB3aXRob3V0IENlc2l1bSdzIHN0YW5kYXJkIGRlcHJlY2F0aW9uIHBvbGljeS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWV0YWRhdGFTY2hlbWFMb2FkZXIob3B0aW9ucykge1xuICBvcHRpb25zID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMsIGRlZmF1bHRWYWx1ZS5FTVBUWV9PQkpFQ1QpO1xuICB2YXIgc2NoZW1hID0gb3B0aW9ucy5zY2hlbWE7XG4gIHZhciByZXNvdXJjZSA9IG9wdGlvbnMucmVzb3VyY2U7XG4gIHZhciBjYWNoZUtleSA9IG9wdGlvbnMuY2FjaGVLZXk7XG5cbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKGRlZmluZWQoc2NoZW1hKSA9PT0gZGVmaW5lZChyZXNvdXJjZSkpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIk9uZSBvZiBvcHRpb25zLnNjaGVtYSBhbmQgb3B0aW9ucy5yZXNvdXJjZSBtdXN0IGJlIGRlZmluZWQuXCJcbiAgICApO1xuICB9XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHRoaXMuX3NjaGVtYSA9IGRlZmluZWQoc2NoZW1hKSA/IG5ldyBNZXRhZGF0YVNjaGVtYShzY2hlbWEpIDogdW5kZWZpbmVkO1xuICB0aGlzLl9yZXNvdXJjZSA9IHJlc291cmNlO1xuICB0aGlzLl9jYWNoZUtleSA9IGNhY2hlS2V5O1xuICB0aGlzLl9zdGF0ZSA9IFJlc291cmNlTG9hZGVyU3RhdGUuVU5MT0FERUQ7XG4gIHRoaXMuX3Byb21pc2UgPSB3aGVuLmRlZmVyKCk7XG59XG5cbmlmIChkZWZpbmVkKE9iamVjdC5jcmVhdGUpKSB7XG4gIE1ldGFkYXRhU2NoZW1hTG9hZGVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoUmVzb3VyY2VMb2FkZXIucHJvdG90eXBlKTtcbiAgTWV0YWRhdGFTY2hlbWFMb2FkZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gTWV0YWRhdGFTY2hlbWFMb2FkZXI7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE1ldGFkYXRhU2NoZW1hTG9hZGVyLnByb3RvdHlwZSwge1xuICAvKipcbiAgICogQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHJlc291cmNlIHdoZW4gdGhlIHJlc291cmNlIGlzIHJlYWR5LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWV0YWRhdGFTY2hlbWFMb2FkZXIucHJvdG90eXBlXG4gICAqXG4gICAqIEB0eXBlIHtQcm9taXNlLjxNZXRhZGF0YVNjaGVtYUxvYWRlcj59XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgcHJvbWlzZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3Byb21pc2UucHJvbWlzZTtcbiAgICB9LFxuICB9LFxuICAvKipcbiAgICogVGhlIGNhY2hlIGtleSBvZiB0aGUgcmVzb3VyY2UuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBNZXRhZGF0YVNjaGVtYUxvYWRlci5wcm90b3R5cGVcbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQHJlYWRvbmx5XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBjYWNoZUtleToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2NhY2hlS2V5O1xuICAgIH0sXG4gIH0sXG4gIC8qKlxuICAgKiBUaGUgbWV0YWRhdGEgc2NoZW1hIG9iamVjdC5cbiAgICpcbiAgICogQG1lbWJlcm9mIE1ldGFkYXRhU2NoZW1hTG9hZGVyLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSB7TWV0YWRhdGFTY2hlbWF9XG4gICAqIEByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgc2NoZW1hOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc2NoZW1hO1xuICAgIH0sXG4gIH0sXG59KTtcblxuLyoqXG4gKiBMb2FkcyB0aGUgcmVzb3VyY2UuXG4gKiBAcHJpdmF0ZVxuICovXG5NZXRhZGF0YVNjaGVtYUxvYWRlci5wcm90b3R5cGUubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKGRlZmluZWQodGhpcy5fc2NoZW1hKSkge1xuICAgIHRoaXMuX3Byb21pc2UucmVzb2x2ZSh0aGlzKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBsb2FkRXh0ZXJuYWxTY2hlbWEodGhpcyk7XG59O1xuXG5mdW5jdGlvbiBsb2FkRXh0ZXJuYWxTY2hlbWEoc2NoZW1hTG9hZGVyKSB7XG4gIHZhciByZXNvdXJjZSA9IHNjaGVtYUxvYWRlci5fcmVzb3VyY2U7XG4gIHNjaGVtYUxvYWRlci5fc3RhdGUgPSBSZXNvdXJjZUxvYWRlclN0YXRlLkxPQURJTkc7XG4gIHJlc291cmNlXG4gICAgLmZldGNoSnNvbigpXG4gICAgLnRoZW4oZnVuY3Rpb24gKGpzb24pIHtcbiAgICAgIGlmIChzY2hlbWFMb2FkZXIuaXNEZXN0cm95ZWQoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzY2hlbWFMb2FkZXIuX3NjaGVtYSA9IG5ldyBNZXRhZGF0YVNjaGVtYShqc29uKTtcbiAgICAgIHNjaGVtYUxvYWRlci5fc3RhdGUgPSBSZXNvdXJjZUxvYWRlclN0YXRlLlJFQURZO1xuICAgICAgc2NoZW1hTG9hZGVyLl9wcm9taXNlLnJlc29sdmUoc2NoZW1hTG9hZGVyKTtcbiAgICB9KVxuICAgIC5vdGhlcndpc2UoZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBpZiAoc2NoZW1hTG9hZGVyLmlzRGVzdHJveWVkKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2NoZW1hTG9hZGVyLl9zdGF0ZSA9IFJlc291cmNlTG9hZGVyU3RhdGUuRkFJTEVEO1xuICAgICAgdmFyIGVycm9yTWVzc2FnZSA9IFwiRmFpbGVkIHRvIGxvYWQgc2NoZW1hOiBcIiArIHJlc291cmNlLnVybDtcbiAgICAgIHNjaGVtYUxvYWRlci5fcHJvbWlzZS5yZWplY3Qoc2NoZW1hTG9hZGVyLmdldEVycm9yKGVycm9yTWVzc2FnZSwgZXJyb3IpKTtcbiAgICB9KTtcbn1cblxuLyoqXG4gKiBVbmxvYWRzIHRoZSByZXNvdXJjZS5cbiAqIEBwcml2YXRlXG4gKi9cbk1ldGFkYXRhU2NoZW1hTG9hZGVyLnByb3RvdHlwZS51bmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuX3NjaGVtYSA9IHVuZGVmaW5lZDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///87508\n')},78868:function(){eval('/**\n * An enum of built-in semantics.\n *\n * @enum MetadataSemantic\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nvar MetadataSemantic = {\n  /**\n   * The horizon occlusion point for horizon culling, stored as an <code>ARRAY</code> of 3 <code>FLOAT32</code> or <code>FLOAT64</code> components.\n   *\n   * @see {https://cesium.com/blog/2013/04/25/horizon-culling/|Horizon Culling}\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  HORIZON_OCCLUSION_POINT: "HORIZON_OCCLUSION_POINT",\n  /**\n   * A bounding sphere, stored as an <code>ARRAY</code> of 4 <code>FLOAT32</code> or a <code>FLOAT64</code> components. The components represent <code>[x, y, z, radius]</code>, i.e. the center and radius of the bounding sphere.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  BOUNDING_SPHERE: "BOUNDING_SPHERE",\n  /**\n   * A name, stored as a <code>STRING</code>. This does not have to be unique\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  NAME: "NAME",\n  /**\n   * A unique identifier, stored as a <code>STRING</code>.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  ID: "ID",\n  /**\n   * A bounding box for a tile, stored as an array of 12 <code>FLOAT32</code> or <code>FLOAT64</code> components. The components are the same format as for <code>boundingVolume.box</code> in 3D Tiles 1.0. This semantic is used to provide a tighter bounding volume than the one implicitly calculated in <code>3DTILES_implicit_tiling</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  TILE_BOUNDING_BOX: "TILE_BOUNDING_BOX",\n  /**\n   * A bounding region for a tile, stored as an array of 6 <code>FLOAT64</code> components. The components are <code>[west, south, east, north, minimumHeight, maximumHeight]</code>. This semantic is used to provide a tighter bounding volume than the one implicitly calculated in <code>3DTILES_implicit_tiling</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  TILE_BOUNDING_REGION: "TILE_BOUNDING_REGION",\n  /**\n   * A bounding sphere for a tile, stored as an array of 4 <code>FLOAT32</code> or <code>FLOAT64</code> components. The components are <code>[centerX, centerY, centerZ, radius]</code>. This semantic is used to provide a tighter bounding volume than the one implicitly calculated in <code>3DTILES_implicit_tiling</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  TILE_BOUNDING_SPHERE: "TILE_BOUNDING_SPHERE",\n  /**\n   * The minimum height of a tile above (or below) the WGS84 ellipsoid, stored as a <code>FLOAT32</code> or a <code>FLOAT64</code>. This semantic is used to tighten bounding regions implicitly calculated in <code>3DTILES_implicit_tiling</code>.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  TILE_MINIMUM_HEIGHT: "TILE_MINIMUM_HEIGHT",\n  /**\n   * The maximum height of a tile above (or below) the WGS84 ellipsoid, stored as a <code>FLOAT32</code> or a <code>FLOAT64</code>. This semantic is used to tighten bounding regions implicitly calculated in <code>3DTILES_implicit_tiling</code>.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  TILE_MAXIMUM_HEIGHT: "TILE_MINIMUM_HEIGHT",\n  /**\n   * A bounding box for the content of a tile, stored as an array of 12 <code>FLOAT32</code> or <code>FLOAT64</code> components. The components are the same format as for <code>boundingVolume.box</code> in 3D Tiles 1.0. This semantic is used to provide a tighter bounding volume than the one implicitly calculated in <code>3DTILES_implicit_tiling</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  CONTENT_BOUNDING_BOX: "CONTENT_BOUNDING_BOX",\n  /**\n   * A bounding region for the content of a tile, stored as an array of 6 <code>FLOAT64</code> components. The components are <code>[west, south, east, north, minimumHeight, maximumHeight]</code>. This semantic is used to provide a tighter bounding volume than the one implicitly calculated in <code>3DTILES_implicit_tiling</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  CONTENT_BOUNDING_REGION: "CONTENT_BOUNDING_REGION",\n  /**\n   * A bounding sphere for the content of a tile, stored as an array of 4 <code>FLOAT32</code> or <code>FLOAT64</code> components. The components are <code>[centerX, centerY, centerZ, radius]</code>. This semantic is used to provide a tighter bounding volume than the one implicitly calculated in <code>3DTILES_implicit_tiling</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  CONTENT_BOUNDING_SPHERE: "CONTENT_BOUNDING_SPHERE",\n  /**\n   * The minimum height of the content of a tile above (or below) the WGS84 ellipsoid, stored as a <code>FLOAT32</code> or a <code>FLOAT64</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  CONTENT_MINIMUM_HEIGHT: "CONTENT_MINIMUM_HEIGHT",\n  /**\n   * The maximum height of the content of a tile above (or below) the WGS84 ellipsoid, stored as a <code>FLOAT32</code> or a <code>FLOAT64</code>\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  CONTENT_MAXIMUM_HEIGHT: "CONTENT_MINIMUM_HEIGHT",\n};\n\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = (Object.freeze(MetadataSemantic));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///78868\n')},14358:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18349);\n/* harmony import */ var _MetadataTableProperty_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(91306);\n/* harmony import */ var _MetadataType_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(10114);\n\n\n\n\n\n\n\n/**\n * A table containing binary metadata for a collection of entities. This is\n * used for representing binary properties of a batch table, as well as binary\n * metadata in 3D Tiles next extensions.\n * <p>\n * For 3D Tiles Next details, see the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_metadata|3DTILES_metadata Extension} for 3D Tiles, as well as the {@link https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_feature_metadata|EXT_feature_metadata Extension} for glTF.\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {Number} options.count The number of entities in the table.\n * @param {Object} [options.properties] A dictionary containing properties.\n * @param {MetadataClass} [options.class] The class that properties conform to.\n * @param {Object.<String, Uint8Array>} [options.bufferViews] An object mapping bufferView IDs to Uint8Array objects.\n *\n * @alias MetadataTable\n * @constructor\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataTable(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var count = options.count;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("options.count", count, 0);\n  //>>includeEnd(\'debug\');\n\n  var properties = {};\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.properties)) {\n    for (var propertyId in options.properties) {\n      if (options.properties.hasOwnProperty(propertyId)) {\n        properties[propertyId] = new _MetadataTableProperty_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z({\n          count: count,\n          property: options.properties[propertyId],\n          classProperty: options.class.properties[propertyId],\n          bufferViews: options.bufferViews,\n        });\n      }\n    }\n  }\n\n  this._count = count;\n  this._class = options.class;\n  this._properties = properties;\n}\n\nObject.defineProperties(MetadataTable.prototype, {\n  /**\n   * The number of entities in the table.\n   *\n   * @memberof MetadataTable.prototype\n   * @type {Number}\n   * @readonly\n   * @private\n   */\n  count: {\n    get: function () {\n      return this._count;\n    },\n  },\n\n  /**\n   * The class that properties conform to.\n   *\n   * @memberof MetadataTable.prototype\n   * @type {MetadataClass}\n   * @readonly\n   * @private\n   */\n  class: {\n    get: function () {\n      return this._class;\n    },\n  },\n});\n\n/**\n * Returns whether the table has this property.\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {Boolean} Whether the table has this property.\n * @private\n */\nMetadataTable.prototype.hasProperty = function (propertyId) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].hasProperty */ .Z.hasProperty(propertyId, this._properties, this._class);\n};\n\n/**\n * Returns whether the table has a property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {Boolean} Whether the table has a property with the given semantic.\n * @private\n */\nMetadataTable.prototype.hasPropertyBySemantic = function (semantic) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].hasPropertyBySemantic */ .Z.hasPropertyBySemantic(\n    semantic,\n    this._properties,\n    this._class\n  );\n};\n\n/**\n * Returns an array of property IDs.\n *\n * @param {String[]} [results] An array into which to store the results.\n * @returns {String[]} The property IDs.\n * @private\n */\nMetadataTable.prototype.getPropertyIds = function (results) {\n  return _MetadataEntity_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].getPropertyIds */ .Z.getPropertyIds(this._properties, this._class, results);\n};\n\n/**\n * Returns a copy of the value of the property with the given ID.\n * <p>\n * If the property is an enum the name of the enum is returned.\n * </p>\n * <p>\n * If the property is normalized the normalized value is returned. The value is\n * in the range [-1.0, 1.0] for signed integer types and [0.0, 1.0] for unsigned\n * integer types.\n * </p>\n * <p>\n * If the property is not normalized and type or componentType is INT64 or\n * UINT64 a BigInt will be returned. On platforms that don\'t support BigInt a\n * number will be returned instead. Note that numbers only support up to 52 bits\n * of integer precision. Values greater than 2^53 - 1 or less than -(2^53 - 1)\n * may lose precision when read.\n * </p>\n *\n * @param {Number} index The index of the entity.\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the entity does not have this property.\n *\n * @exception {DeveloperError} index is required and between zero and count - 1\n * @private\n */\nMetadataTable.prototype.getProperty = function (index, propertyId) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("propertyId", propertyId);\n  //>>includeEnd(\'debug\');\n\n  var property = this._properties[propertyId];\n\n  var value;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(property)) {\n    value = property.get(index);\n  } else {\n    value = getDefault(this._class, propertyId);\n  }\n\n  return value;\n};\n\n/**\n * Sets the value of the property with the given ID.\n * <p>\n * If the property is an enum the name of the enum must be provided, not the\n * integer value.\n * </p>\n * <p>\n * If the property is normalized a normalized value must be provided to this\n * function. The value must be in the range [-1.0, 1.0] for signed integer\n * types and [0.0, 1.0] for unsigned integer types.\n * </p>\n * <p>\n * If the property is not normalized and type or componentType is INT64 or\n * UINT64 a BigInt may be provided. On platforms that don\'t support BigInt a\n * number may be provided instead. Note that numbers only support up to 52 bits\n * of integer precision. Values greater than 2^53 - 1 or less than -(2^53 - 1)\n * may lose precision when set."\n * </p>\n *\n * @param {Number} index The index of the entity.\n * @param {String} propertyId The case-sensitive ID of the property.\n * @param {*} value The value of the property that will be copied.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n *\n * @exception {DeveloperError} index is required and between zero and count - 1\n * @exception {DeveloperError} value does not match type\n * @exception {DeveloperError} value is out of range for type\n * @exception {DeveloperError} Array length does not match componentCount\n * @private\n */\nMetadataTable.prototype.setProperty = function (index, propertyId, value) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("propertyId", propertyId);\n  //>>includeEnd(\'debug\');\n\n  var property = this._properties[propertyId];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(property)) {\n    property.set(index, value);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Returns a copy of the value of the property with the given semantic.\n *\n * @param {Number} index The index of the entity.\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {*} The value of the property or <code>undefined</code> if the entity does not have this semantic.\n *\n * @exception {DeveloperError} index is required and between zero and count - 1\n * @private\n */\nMetadataTable.prototype.getPropertyBySemantic = function (index, semantic) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(this._class)) {\n    var property = this._class.propertiesBySemantic[semantic];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(property)) {\n      return this.getProperty(index, property.id);\n    }\n  }\n  return undefined;\n};\n\n/**\n * Sets the value of the property with the given semantic.\n *\n * @param {Number} index The index of the entity.\n * @param {String} semantic The case-sensitive semantic of the property.\n * @param {*} value The value of the property that will be copied.\n * @returns {Boolean} <code>true</code> if the property was set, <code>false</code> otherwise.\n *\n * @exception {DeveloperError} index is required and between zero and count - 1\n * @exception {DeveloperError} value does not match type\n * @exception {DeveloperError} value is out of range for type\n * @exception {DeveloperError} Array length does not match componentCount\n * @private\n */\nMetadataTable.prototype.setPropertyBySemantic = function (\n  index,\n  semantic,\n  value\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(this._class)) {\n    var property = this._class.propertiesBySemantic[semantic];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(property)) {\n      return this.setProperty(index, property.id, value);\n    }\n  }\n\n  return false;\n};\n\n/**\n * Returns a typed array containing the property values for a given propertyId.\n *\n * @param {String} propertyId The case-sensitive ID of the property.\n * @returns {*} The typed array containing the property values or <code>undefined</code> if the property values are not stored in a typed array.\n *\n * @private\n */\nMetadataTable.prototype.getPropertyTypedArray = function (propertyId) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("propertyId", propertyId);\n  //>>includeEnd(\'debug\');\n\n  var property = this._properties[propertyId];\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(property)) {\n    return property.getTypedArray();\n  }\n\n  return undefined;\n};\n\n/**\n * Returns a typed array containing the property values for the property with the given semantic.\n *\n * @param {String} semantic The case-sensitive semantic of the property.\n * @returns {*} The typed array containing the property values or <code>undefined</code> if the property values are not stored in a typed array.\n *\n * @private\n */\nMetadataTable.prototype.getPropertyTypedArrayBySemantic = function (semantic) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(this._class)) {\n    var property = this._class.propertiesBySemantic[semantic];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(property)) {\n      return this.getPropertyTypedArray(property.id);\n    }\n  }\n\n  return undefined;\n};\n\nfunction getDefault(classDefinition, propertyId) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(classDefinition)) {\n    var classProperty = classDefinition.properties[propertyId];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(classProperty) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(classProperty.default)) {\n      var value = classProperty.default;\n      if (classProperty.type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ARRAY */ .Z.ARRAY) {\n        value = value.slice(); // clone\n      }\n      value = classProperty.normalize(value);\n      return classProperty.unpackVectorTypes(value);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__["Z"] = (MetadataTable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14358\n')},91306:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(96037);\n/* harmony import */ var _Core_getStringFromTypedArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66659);\n/* harmony import */ var _Core_oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(27671);\n/* harmony import */ var _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(10114);\n\n\n\n\n\n\n\n\n\n\n/**\n * A binary property in a {@MetadataTable}\n * <p>\n * For 3D Tiles Next details, see the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_metadata|3DTILES_metadata Extension} for 3D Tiles, as well as the {@link https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_feature_metadata|EXT_feature_metadata Extension} for glTF.\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {Number} options.count The number of elements in each property array.\n * @param {Object} options.property The property JSON object.\n * @param {MetadataClassProperty} options.classProperty The class property.\n * @param {Object.<String, Uint8Array>} options.bufferViews An object mapping bufferView IDs to Uint8Array objects.\n *\n * @alias MetadataTableProperty\n * @constructor\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction MetadataTableProperty(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var count = options.count;\n  var property = options.property;\n  var classProperty = options.classProperty;\n  var bufferViews = options.bufferViews;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("options.count", count, 0);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.property", property);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.classProperty", classProperty);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.bufferViews", bufferViews);\n  //>>includeEnd(\'debug\');\n\n  var isArray = classProperty.type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ARRAY */ .Z.ARRAY;\n  var isVariableSizeArray = isArray && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(classProperty.componentCount);\n\n  var valueType = classProperty.valueType;\n  var enumType = classProperty.enumType;\n\n  var hasStrings = valueType === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].STRING */ .Z.STRING;\n  var hasBooleans = valueType === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].BOOLEAN */ .Z.BOOLEAN;\n\n  var offsetType = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z[property.offsetType],\n    _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UINT32 */ .Z.UINT32\n  );\n\n  var arrayOffsets;\n  if (isVariableSizeArray) {\n    arrayOffsets = new BufferView(\n      bufferViews[property.arrayOffsetBufferView],\n      offsetType,\n      count + 1\n    );\n  }\n\n  var componentCount;\n  if (isVariableSizeArray) {\n    componentCount = arrayOffsets.get(count) - arrayOffsets.get(0);\n  } else if (isArray) {\n    componentCount = count * classProperty.componentCount;\n  } else {\n    componentCount = count;\n  }\n\n  var stringOffsets;\n  if (hasStrings) {\n    stringOffsets = new BufferView(\n      bufferViews[property.stringOffsetBufferView],\n      offsetType,\n      componentCount + 1\n    );\n  }\n\n  if (hasStrings || hasBooleans) {\n    // STRING and BOOLEAN types need to be parsed differently than other types\n    valueType = _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UINT8 */ .Z.UINT8;\n  }\n\n  var valueCount;\n  if (hasStrings) {\n    valueCount = stringOffsets.get(componentCount) - stringOffsets.get(0);\n  } else if (hasBooleans) {\n    valueCount = Math.ceil(componentCount / 8);\n  } else {\n    valueCount = componentCount;\n  }\n\n  var values = new BufferView(\n    bufferViews[property.bufferView],\n    valueType,\n    valueCount\n  );\n\n  var that = this;\n\n  var getValueFunction;\n  var setValueFunction;\n\n  if (hasStrings) {\n    getValueFunction = function (index) {\n      return getString(index, that._values, that._stringOffsets);\n    };\n  } else if (hasBooleans) {\n    getValueFunction = function (index) {\n      return getBoolean(index, that._values);\n    };\n    setValueFunction = function (index, value) {\n      setBoolean(index, that._values, value);\n    };\n  } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(enumType)) {\n    getValueFunction = function (index) {\n      var integer = that._values.get(index);\n      return enumType.namesByValue[integer];\n    };\n    setValueFunction = function (index, value) {\n      var integer = enumType.valuesByName[value];\n      that._values.set(index, integer);\n    };\n  } else {\n    getValueFunction = function (index) {\n      return that._values.get(index);\n    };\n    setValueFunction = function (index, value) {\n      that._values.set(index, value);\n    };\n  }\n\n  this._arrayOffsets = arrayOffsets;\n  this._stringOffsets = stringOffsets;\n  this._values = values;\n  this._classProperty = classProperty;\n  this._count = count;\n  this._getValue = getValueFunction;\n  this._setValue = setValueFunction;\n  this._unpackedValues = undefined;\n  this._extras = property.extras;\n  this._extensions = property.extensions;\n}\n\nObject.defineProperties(MetadataTableProperty.prototype, {\n  /**\n   * Extras in the JSON object.\n   *\n   * @memberof MetadataTableProperty.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extras: {\n    get: function () {\n      return this._extras;\n    },\n  },\n\n  /**\n   * Extensions in the JSON object.\n   *\n   * @memberof MetadataTableProperty.prototype\n   * @type {*}\n   * @readonly\n   * @private\n   */\n  extensions: {\n    get: function () {\n      return this._extensions;\n    },\n  },\n});\n\n/**\n * Returns a copy of the value at the given index.\n *\n * @param {Number} index The index.\n * @returns {*} The value of the property.\n *\n * @private\n */\nMetadataTableProperty.prototype.get = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  checkIndex(this, index);\n  //>>includeEnd(\'debug\');\n\n  var value = get(this, index);\n  value = this._classProperty.normalize(value);\n  return this._classProperty.unpackVectorTypes(value);\n};\n\n/**\n * Sets the value at the given index.\n *\n * @param {Number} index The index.\n * @param {*} value The value of the property.\n *\n * @private\n */\nMetadataTableProperty.prototype.set = function (index, value) {\n  var classProperty = this._classProperty;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  checkIndex(this, index);\n  var errorMessage = classProperty.validate(value);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(errorMessage)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(errorMessage);\n  }\n  //>>includeEnd(\'debug\');\n\n  value = classProperty.packVectorTypes(value);\n  value = classProperty.unnormalize(value);\n\n  set(this, index, value);\n};\n\n/**\n * Returns a typed array containing the property values.\n *\n * @returns {*} The typed array containing the property values or <code>undefined</code> if the property values are not stored in a typed array.\n *\n * @private\n */\nMetadataTableProperty.prototype.getTypedArray = function () {\n  // Note: depending on the class definition some properties are unpacked to\n  // JS arrays when first accessed and values will be undefined. Generally not\n  // a concern for fixed-length arrays of numbers.\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(this._values)) {\n    return this._values.typedArray;\n  }\n\n  return undefined;\n};\n\nfunction checkIndex(table, index) {\n  var count = table._count;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(index) || index < 0 || index >= count) {\n    var maximumIndex = count - 1;\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "index is required and between zero and count - 1. Actual value: " +\n        maximumIndex\n    );\n  }\n}\n\nfunction get(property, index) {\n  if (requiresUnpackForGet(property)) {\n    unpackProperty(property);\n  }\n\n  var classProperty = property._classProperty;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(property._unpackedValues)) {\n    var value = property._unpackedValues[index];\n    if (classProperty.type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ARRAY */ .Z.ARRAY) {\n      return value.slice(); // clone\n    }\n    return value;\n  }\n\n  if (classProperty.type !== _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ARRAY */ .Z.ARRAY) {\n    return property._getValue(index);\n  }\n\n  var offset;\n  var length;\n\n  var componentCount = classProperty.componentCount;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(componentCount)) {\n    offset = index * componentCount;\n    length = componentCount;\n  } else {\n    offset = property._arrayOffsets.get(index);\n    length = property._arrayOffsets.get(index + 1) - offset;\n  }\n\n  var values = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    values[i] = property._getValue(offset + i);\n  }\n\n  return values;\n}\n\nfunction set(property, index, value) {\n  if (requiresUnpackForSet(property, index, value)) {\n    unpackProperty(property);\n  }\n\n  var classProperty = property._classProperty;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(property._unpackedValues)) {\n    if (classProperty.type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ARRAY */ .Z.ARRAY) {\n      value = value.slice(); // clone\n    }\n    property._unpackedValues[index] = value;\n    return;\n  }\n\n  // Values are unpacked if the length of a variable-size array changes or the\n  // property has strings. No need to handle these cases below.\n\n  if (classProperty.type !== _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ARRAY */ .Z.ARRAY) {\n    property._setValue(index, value);\n    return;\n  }\n\n  var offset;\n  var length;\n\n  var componentCount = classProperty.componentCount;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(componentCount)) {\n    offset = index * componentCount;\n    length = componentCount;\n  } else {\n    offset = property._arrayOffsets.get(index);\n    length = property._arrayOffsets.get(index + 1) - offset;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    property._setValue(offset + i, value[i]);\n  }\n}\n\nfunction getString(index, values, stringOffsets) {\n  var stringByteOffset = stringOffsets.get(index);\n  var stringByteLength = stringOffsets.get(index + 1) - stringByteOffset;\n  return (0,_Core_getStringFromTypedArray_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    values.typedArray,\n    stringByteOffset,\n    stringByteLength\n  );\n}\n\nfunction getBoolean(index, values) {\n  // byteIndex is floor(index / 8)\n  var byteIndex = index >> 3;\n  var bitIndex = index % 8;\n  return ((values.typedArray[byteIndex] >> bitIndex) & 1) === 1;\n}\n\nfunction setBoolean(index, values, value) {\n  // byteIndex is floor(index / 8)\n  var byteIndex = index >> 3;\n  var bitIndex = index % 8;\n\n  if (value) {\n    values.typedArray[byteIndex] |= 1 << bitIndex;\n  } else {\n    values.typedArray[byteIndex] &= ~(1 << bitIndex);\n  }\n}\n\nfunction getInt64NumberFallback(index, values) {\n  var dataView = values.dataView;\n  var byteOffset = index * 8;\n  var value = 0;\n  var isNegative = (dataView.getUint8(byteOffset + 7) & 0x80) > 0;\n  var carrying = true;\n  for (var i = 0; i < 8; ++i) {\n    var byte = dataView.getUint8(byteOffset + i);\n    if (isNegative) {\n      if (carrying) {\n        if (byte !== 0x00) {\n          byte = ~(byte - 1) & 0xff;\n          carrying = false;\n        }\n      } else {\n        byte = ~byte & 0xff;\n      }\n    }\n    value += byte * Math.pow(256, i);\n  }\n  if (isNegative) {\n    value = -value;\n  }\n  return value;\n}\n\nfunction getInt64BigIntFallback(index, values) {\n  var dataView = values.dataView;\n  var byteOffset = index * 8;\n  var value = BigInt(0); // eslint-disable-line\n  var isNegative = (dataView.getUint8(byteOffset + 7) & 0x80) > 0;\n  var carrying = true;\n  for (var i = 0; i < 8; ++i) {\n    var byte = dataView.getUint8(byteOffset + i);\n    if (isNegative) {\n      if (carrying) {\n        if (byte !== 0x00) {\n          byte = ~(byte - 1) & 0xff;\n          carrying = false;\n        }\n      } else {\n        byte = ~byte & 0xff;\n      }\n    }\n    value += BigInt(byte) * (BigInt(1) << BigInt(i * 8)); // eslint-disable-line\n  }\n  if (isNegative) {\n    value = -value;\n  }\n  return value;\n}\n\nfunction getUint64NumberFallback(index, values) {\n  var dataView = values.dataView;\n  var byteOffset = index * 8;\n\n  // Split 64-bit number into two 32-bit (4-byte) parts\n  var left = dataView.getUint32(byteOffset, true);\n  var right = dataView.getUint32(byteOffset + 4, true);\n\n  // Combine the two 32-bit values\n  var value = left + 4294967296 * right;\n\n  return value;\n}\n\nfunction getUint64BigIntFallback(index, values) {\n  var dataView = values.dataView;\n  var byteOffset = index * 8;\n\n  // Split 64-bit number into two 32-bit (4-byte) parts\n  var left = BigInt(dataView.getUint32(byteOffset, true)); // eslint-disable-line\n  var right = BigInt(dataView.getUint32(byteOffset + 4, true)); // eslint-disable-line\n\n  // Combine the two 32-bit values\n  var value = left + BigInt(4294967296) * right; // eslint-disable-line\n\n  return value;\n}\n\nfunction getComponentDatatype(type) {\n  switch (type) {\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].INT8 */ .Z.INT8:\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].BYTE */ .Z.BYTE;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UINT8 */ .Z.UINT8:\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].INT16 */ .Z.INT16:\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SHORT */ .Z.SHORT;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UINT16 */ .Z.UINT16:\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].INT32 */ .Z.INT32:\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].INT */ .Z.INT;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UINT32 */ .Z.UINT32:\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT32 */ .Z.FLOAT32:\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT;\n    case _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT64 */ .Z.FLOAT64:\n      return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].DOUBLE */ .Z.DOUBLE;\n  }\n}\n\nfunction requiresUnpackForGet(property) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(property._unpackedValues)) {\n    return false;\n  }\n\n  var valueType = property._classProperty.valueType;\n\n  if (valueType === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].STRING */ .Z.STRING) {\n    // Unpack since UTF-8 decoding is expensive\n    return true;\n  }\n\n  if (\n    valueType === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].INT64 */ .Z.INT64 &&\n    !_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].supportsBigInt64Array */ .Z.supportsBigInt64Array()\n  ) {\n    // Unpack since the fallback INT64 getters are expensive\n    return true;\n  }\n\n  if (\n    valueType === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UINT64 */ .Z.UINT64 &&\n    !_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].supportsBigUint64Array */ .Z.supportsBigUint64Array()\n  ) {\n    // Unpack since the fallback UINT64 getters are expensive\n    return true;\n  }\n\n  return false;\n}\n\nfunction requiresUnpackForSet(property, index, value) {\n  if (requiresUnpackForGet(property)) {\n    return true;\n  }\n\n  var arrayOffsets = property._arrayOffsets;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(arrayOffsets)) {\n    // Unpacking is required if a variable-size array changes length since it\n    // would be expensive to repack the binary data\n    var oldLength = arrayOffsets.get(index + 1) - arrayOffsets.get(index);\n    var newLength = value.length;\n    if (oldLength !== newLength) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction unpackProperty(property) {\n  property._unpackedValues = unpackValues(property);\n\n  // Free memory\n  property._arrayOffsets = undefined;\n  property._stringOffsets = undefined;\n  property._values = undefined;\n}\n\nfunction unpackValues(property) {\n  var i;\n  var count = property._count;\n  var unpackedValues = new Array(count);\n\n  var classProperty = property._classProperty;\n  if (classProperty.type !== _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ARRAY */ .Z.ARRAY) {\n    for (i = 0; i < count; ++i) {\n      unpackedValues[i] = property._getValue(i);\n    }\n    return unpackedValues;\n  }\n\n  var j;\n  var offset;\n  var arrayValues;\n\n  var componentCount = classProperty.componentCount;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(componentCount)) {\n    for (i = 0; i < count; ++i) {\n      arrayValues = new Array(componentCount);\n      unpackedValues[i] = arrayValues;\n      offset = i * componentCount;\n      for (j = 0; j < componentCount; ++j) {\n        arrayValues[j] = property._getValue(offset + j);\n      }\n    }\n    return unpackedValues;\n  }\n\n  for (i = 0; i < count; ++i) {\n    offset = property._arrayOffsets.get(i);\n    var length = property._arrayOffsets.get(i + 1) - offset;\n    arrayValues = new Array(length);\n    unpackedValues[i] = arrayValues;\n    for (j = 0; j < length; ++j) {\n      arrayValues[j] = property._getValue(offset + j);\n    }\n  }\n\n  return unpackedValues;\n}\n\nfunction BufferView(bufferView, type, length) {\n  var that = this;\n\n  var typedArray;\n  var getFunction;\n  var setFunction;\n\n  if (type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].INT64 */ .Z.INT64) {\n    if (!_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].supportsBigInt */ .Z.supportsBigInt()) {\n      (0,_Core_oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(\n        "INT64 type is not fully supported on this platform. Values greater than 2^53 - 1 or less than -(2^53 - 1) may lose precision when read."\n      );\n      typedArray = new Uint8Array(\n        bufferView.buffer,\n        bufferView.byteOffset,\n        length * 8\n      );\n      getFunction = function (index) {\n        return getInt64NumberFallback(index, that);\n      };\n    } else if (!_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].supportsBigInt64Array */ .Z.supportsBigInt64Array()) {\n      typedArray = new Uint8Array(\n        bufferView.buffer,\n        bufferView.byteOffset,\n        length * 8\n      );\n      getFunction = function (index) {\n        return getInt64BigIntFallback(index, that);\n      };\n    } else {\n      // eslint-disable-next-line\n      typedArray = new BigInt64Array(\n        bufferView.buffer,\n        bufferView.byteOffset,\n        length\n      );\n      setFunction = function (index, value) {\n        // Convert the number to a BigInt before setting the value in the typed array\n        that.typedArray[index] = BigInt(value); // eslint-disable-line\n      };\n    }\n  } else if (type === _MetadataType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UINT64 */ .Z.UINT64) {\n    if (!_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].supportsBigInt */ .Z.supportsBigInt()) {\n      (0,_Core_oneTimeWarning_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(\n        "UINT64 type is not fully supported on this platform. Values greater than 2^53 - 1 may lose precision when read."\n      );\n      typedArray = new Uint8Array(\n        bufferView.buffer,\n        bufferView.byteOffset,\n        length * 8\n      );\n      getFunction = function (index) {\n        return getUint64NumberFallback(index, that);\n      };\n    } else if (!_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].supportsBigUint64Array */ .Z.supportsBigUint64Array()) {\n      typedArray = new Uint8Array(\n        bufferView.buffer,\n        bufferView.byteOffset,\n        length * 8\n      );\n      getFunction = function (index) {\n        return getUint64BigIntFallback(index, that);\n      };\n    } else {\n      // eslint-disable-next-line\n      typedArray = new BigUint64Array(\n        bufferView.buffer,\n        bufferView.byteOffset,\n        length\n      );\n      setFunction = function (index, value) {\n        // Convert the number to a BigInt before setting the value in the typed array\n        that.typedArray[index] = BigInt(value); // eslint-disable-line\n      };\n    }\n  } else {\n    var componentDatatype = getComponentDatatype(type);\n    typedArray = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].createArrayBufferView */ .Z.createArrayBufferView(\n      componentDatatype,\n      bufferView.buffer,\n      bufferView.byteOffset,\n      length\n    );\n    setFunction = function (index, value) {\n      that.typedArray[index] = value;\n    };\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(getFunction)) {\n    getFunction = function (index) {\n      return that.typedArray[index];\n    };\n  }\n\n  this.typedArray = typedArray;\n  this.dataView = new DataView(typedArray.buffer, typedArray.byteOffset);\n  this.get = getFunction;\n  this.set = setFunction;\n}\n\n/* harmony default export */ __webpack_exports__["Z"] = (MetadataTableProperty);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///91306\n')},10114:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96037);\n\n\n\n\n/**\n * An enum of metadata types.\n *\n * @enum MetadataType\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nvar MetadataType = {\n  /**\n   * An 8-bit signed integer\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  INT8: "INT8",\n  /**\n   * An 8-bit unsigned integer\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  UINT8: "UINT8",\n  /**\n   * A 16-bit signed integer\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  INT16: "INT16",\n  /**\n   * A 16-bit unsigned integer\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  UINT16: "UINT16",\n  /**\n   * A 32-bit signed integer\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  INT32: "INT32",\n  /**\n   * A 32-bit unsigned integer\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  UINT32: "UINT32",\n  /**\n   * A 64-bit signed integer. This type requires BigInt support.\n   *\n   * @see FeatureDetection.supportsBigInt\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  INT64: "INT64",\n  /**\n   * A 64-bit signed integer. This type requires BigInt support\n   *\n   * @see FeatureDetection.supportsBigInt\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  UINT64: "UINT64",\n  /**\n   * A 32-bit (single precision) floating point number\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  FLOAT32: "FLOAT32",\n  /**\n   * A 64-bit (double precision) floating point number\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  FLOAT64: "FLOAT64",\n  /**\n   * A boolean (true/false) value\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  BOOLEAN: "BOOLEAN",\n  /**\n   * A UTF-8 encoded string value\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  STRING: "STRING",\n  /**\n   * An enumerated value. This type is used in conjunction with a {@link MetadataEnum} to describe the valid values.\n   *\n   * @see MetadataEnum\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  ENUM: "ENUM",\n  /**\n   * An array of values. A <code>componentType</code> property is needed to\n   * define what type of values are stored in the array.\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n  ARRAY: "ARRAY",\n};\n\n/**\n * Gets the minimum value for the numeric type.\n * <p>\n * Returns a BigInt for the INT64 and UINT64 types if BigInt is supported on this platform.\n * Otherwise an approximate number is returned.\n * </p>\n *\n * @param {MetadataType} type The type.\n * @returns {Number|BigInt} The minimum value.\n *\n * @exception {DeveloperError} type must be a numeric type\n *\n * @private\n */\nMetadataType.getMinimum = function (type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!MetadataType.isNumericType(type)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("type must be a numeric type");\n  }\n  //>>includeEnd(\'debug\');\n\n  switch (type) {\n    case MetadataType.INT8:\n      return -128;\n    case MetadataType.UINT8:\n      return 0;\n    case MetadataType.INT16:\n      return -32768;\n    case MetadataType.UINT16:\n      return 0;\n    case MetadataType.INT32:\n      return -2147483648;\n    case MetadataType.UINT32:\n      return 0;\n    case MetadataType.INT64:\n      if (_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].supportsBigInt */ .Z.supportsBigInt()) {\n        return BigInt("-9223372036854775808"); // eslint-disable-line\n      }\n      return -Math.pow(2, 63);\n    case MetadataType.UINT64:\n      if (_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].supportsBigInt */ .Z.supportsBigInt()) {\n        return BigInt(0); // eslint-disable-line\n      }\n      return 0;\n    case MetadataType.FLOAT32:\n      // Maximum 32-bit floating point number. This value will be converted to the nearest 64-bit Number\n      return -340282346638528859811704183484516925440.0;\n    case MetadataType.FLOAT64:\n      return -Number.MAX_VALUE;\n  }\n};\n\n/**\n * Gets the maximum value for the numeric type.\n * <p>\n * Returns a BigInt for the INT64 and UINT64 types if BigInt is supported on this platform.\n * Otherwise an approximate number is returned.\n * </p>\n *\n * @param {MetadataType} type The type.\n * @returns {Number|BigInt} The maximum value.\n *\n * @exception {DeveloperError} type must be a numeric type\n *\n * @private\n */\nMetadataType.getMaximum = function (type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!MetadataType.isNumericType(type)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("type must be a numeric type");\n  }\n  //>>includeEnd(\'debug\');\n\n  switch (type) {\n    case MetadataType.INT8:\n      return 127;\n    case MetadataType.UINT8:\n      return 255;\n    case MetadataType.INT16:\n      return 32767;\n    case MetadataType.UINT16:\n      return 65535;\n    case MetadataType.INT32:\n      return 2147483647;\n    case MetadataType.UINT32:\n      return 4294967295;\n    case MetadataType.INT64:\n      if (_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].supportsBigInt */ .Z.supportsBigInt()) {\n        // Need to initialize with a string otherwise the value will be 9223372036854775808\n        return BigInt("9223372036854775807"); // eslint-disable-line\n      }\n      return Math.pow(2, 63) - 1;\n    case MetadataType.UINT64:\n      if (_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].supportsBigInt */ .Z.supportsBigInt()) {\n        // Need to initialize with a string otherwise the value will be 18446744073709551616\n        return BigInt("18446744073709551615"); // eslint-disable-line\n      }\n      return Math.pow(2, 64) - 1;\n    case MetadataType.FLOAT32:\n      // Maximum 32-bit floating point number\n      return 340282346638528859811704183484516925440.0;\n    case MetadataType.FLOAT64:\n      return Number.MAX_VALUE;\n  }\n};\n\n/**\n * Returns whether the type is a numeric type.\n *\n * @param {MetadataType} type The type.\n * @returns {Boolean} Whether the type is a numeric type.\n *\n * @private\n */\nMetadataType.isNumericType = function (type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("type", type);\n  //>>includeEnd(\'debug\');\n\n  switch (type) {\n    case MetadataType.INT8:\n    case MetadataType.UINT8:\n    case MetadataType.INT16:\n    case MetadataType.UINT16:\n    case MetadataType.INT32:\n    case MetadataType.UINT32:\n    case MetadataType.INT64:\n    case MetadataType.UINT64:\n    case MetadataType.FLOAT32:\n    case MetadataType.FLOAT64:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Returns whether the type is an integer type.\n *\n * @param {MetadataType} type The type.\n * @returns {Boolean} Whether the type is an integer type.\n *\n * @private\n */\nMetadataType.isIntegerType = function (type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("type", type);\n  //>>includeEnd(\'debug\');\n\n  switch (type) {\n    case MetadataType.INT8:\n    case MetadataType.UINT8:\n    case MetadataType.INT16:\n    case MetadataType.UINT16:\n    case MetadataType.INT32:\n    case MetadataType.UINT32:\n    case MetadataType.INT64:\n    case MetadataType.UINT64:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Returns whether the type is an unsigned integer type.\n *\n * @param {MetadataType} type The type.\n * @returns {Boolean} Whether the type is an unsigned integer type.\n *\n * @private\n */\nMetadataType.isUnsignedIntegerType = function (type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("type", type);\n  //>>includeEnd(\'debug\');\n\n  switch (type) {\n    case MetadataType.UINT8:\n    case MetadataType.UINT16:\n    case MetadataType.UINT32:\n    case MetadataType.UINT64:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Returns whether a type can be used in a vector, i.e. the {@link Cartesian2},\n * {@link Cartesian3}, or {@link Cartesian4} classes. This includes all numeric\n * types except for types requiring 64-bits\n * @param {MetadataType} type The type to check\n * @return {Boolean} <code>true</code> if the type can be encoded as a vector type, or <code>false</code> otherwise\n * @private\n */\nMetadataType.isVectorCompatible = function (type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("type", type);\n  //>>includeEnd(\'debug\');\n\n  switch (type) {\n    case MetadataType.INT8:\n    case MetadataType.UINT8:\n    case MetadataType.INT16:\n    case MetadataType.UINT16:\n    case MetadataType.INT32:\n    case MetadataType.UINT32:\n    case MetadataType.FLOAT32:\n    case MetadataType.FLOAT64:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Normalizes signed integers to the range [-1.0, 1.0] and unsigned integers to\n * the range [0.0, 1.0].\n * <p>\n * value may be a BigInt for the INT64 and UINT64 types. The value is converted\n * to a 64-bit floating point number during normalization which may result in\n * small precision differences.\n * </p>\n *\n * @param {Number|BigInt} value The integer value.\n * @param {MetadataType} type The type.\n * @returns {Number} The normalized value.\n *\n * @exception {DeveloperError} value must be a number or a BigInt\n * @exception {DeveloperError} type must be an integer type\n *\n * @private\n */\nMetadataType.normalize = function (value, type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (typeof value !== "number" && typeof value !== "bigint") {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("value must be a number or a BigInt");\n  }\n  if (!MetadataType.isIntegerType(type)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("type must be an integer type");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (value >= 0) {\n    return Math.min(Number(value) / Number(MetadataType.getMaximum(type)), 1.0);\n  }\n\n  return -Math.min(Number(value) / Number(MetadataType.getMinimum(type)), 1.0);\n};\n\n/**\n * Unnormalizes signed numbers in the range [-1.0, 1.0] to signed integers and\n * unsigned numbers in the range [0.0, 1.0] to unsigned integers. Values outside\n * the range are clamped to the range.\n * <p>\n * Returns a BigInt for the INT64 and UINT64 types if BigInt is supported on this platform.\n * </p>\n *\n * @param {Number} value The normalized value.\n * @param {MetadataType} type The type.\n * @returns {Number|BigInt} The integer value.\n *\n * @exception {DeveloperError} type must be an integer type\n *\n * @private\n */\nMetadataType.unnormalize = function (value, type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("value", value);\n  if (!MetadataType.isIntegerType(type)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("type must be an integer type");\n  }\n  //>>includeEnd(\'debug\');\n\n  var min = MetadataType.getMinimum(type);\n  var max = MetadataType.getMaximum(type);\n\n  if (value >= 0.0) {\n    value = value * Number(max);\n  } else {\n    value = -value * Number(min);\n  }\n\n  if (\n    (type === MetadataType.INT64 || type === MetadataType.UINT64) &&\n    _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].supportsBigInt */ .Z.supportsBigInt()\n  ) {\n    value = BigInt(value); // eslint-disable-line\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  if (value < min) {\n    return min;\n  }\n\n  return value;\n};\n\n/**\n * Gets the size in bytes for the numeric type.\n *\n * @param {MetadataType} type The type.\n * @returns {Number} The size in bytes.\n *\n * @exception {DeveloperError} type must be a numeric type\n *\n * @private\n */\nMetadataType.getSizeInBytes = function (type) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!MetadataType.isNumericType(type)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("type must be a numeric type");\n  }\n  //>>includeEnd(\'debug\');\n  switch (type) {\n    case MetadataType.INT8:\n    case MetadataType.UINT8:\n      return 1;\n    case MetadataType.INT16:\n    case MetadataType.UINT16:\n      return 2;\n    case MetadataType.INT32:\n    case MetadataType.UINT32:\n      return 4;\n    case MetadataType.INT64:\n    case MetadataType.UINT64:\n      return 8;\n    case MetadataType.FLOAT32:\n      return 4;\n    case MetadataType.FLOAT64:\n      return 8;\n  }\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(MetadataType));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10114\n')}}]);