"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[8778],{36514:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12572);\n/* harmony import */ var _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(47861);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(72248);\n/* harmony import */ var _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(15720);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(89917);\n/* harmony import */ var _SceneTransforms_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(48244);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A graphical point positioned in the 3D scene, that is created\n * and rendered using a {@link PointPrimitiveCollection}.  A point is created and its initial\n * properties are set by calling {@link PointPrimitiveCollection#add}.\n *\n * @alias PointPrimitive\n *\n * @performance Reading a property, e.g., {@link PointPrimitive#show}, is constant time.\n * Assigning to a property is constant time but results in\n * CPU to GPU traffic when {@link PointPrimitiveCollection#update} is called.  The per-pointPrimitive traffic is\n * the same regardless of how many properties were updated.  If most pointPrimitives in a collection need to be\n * updated, it may be more efficient to clear the collection with {@link PointPrimitiveCollection#removeAll}\n * and add new pointPrimitives instead of modifying each one.\n *\n * @exception {DeveloperError} scaleByDistance.far must be greater than scaleByDistance.near\n * @exception {DeveloperError} translucencyByDistance.far must be greater than translucencyByDistance.near\n * @exception {DeveloperError} distanceDisplayCondition.far must be greater than distanceDisplayCondition.near\n *\n * @see PointPrimitiveCollection\n * @see PointPrimitiveCollection#add\n *\n * @internalConstructor\n * @class\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Points.html|Cesium Sandcastle Points Demo}\n */\nfunction PointPrimitive(options, pointPrimitiveCollection) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.disableDepthTestDistance) &&\n    options.disableDepthTestDistance < 0.0\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "disableDepthTestDistance must be greater than or equal to 0.0."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var translucencyByDistance = options.translucencyByDistance;\n  var scaleByDistance = options.scaleByDistance;\n  var distanceDisplayCondition = options.distanceDisplayCondition;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(translucencyByDistance)) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (translucencyByDistance.far <= translucencyByDistance.near) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n        "translucencyByDistance.far must be greater than translucencyByDistance.near."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    translucencyByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(translucencyByDistance);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(scaleByDistance)) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (scaleByDistance.far <= scaleByDistance.near) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n        "scaleByDistance.far must be greater than scaleByDistance.near."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    scaleByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(scaleByDistance);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(distanceDisplayCondition)) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (distanceDisplayCondition.far <= distanceDisplayCondition.near) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n        "distanceDisplayCondition.far must be greater than distanceDisplayCondition.near."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    distanceDisplayCondition = _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(\n      distanceDisplayCondition\n    );\n  }\n\n  this._show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.show, true);\n  this._position = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.position, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO)\n  );\n  this._actualPosition = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(this._position); // For columbus view and 2D\n  this._color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone((0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.color, _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WHITE */ .Z.WHITE));\n  this._outlineColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.outlineColor, _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].TRANSPARENT */ .Z.TRANSPARENT)\n  );\n  this._outlineWidth = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.outlineWidth, 0.0);\n  this._pixelSize = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.pixelSize, 10.0);\n  this._scaleByDistance = scaleByDistance;\n  this._translucencyByDistance = translucencyByDistance;\n  this._distanceDisplayCondition = distanceDisplayCondition;\n  this._disableDepthTestDistance = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    options.disableDepthTestDistance,\n    0.0\n  );\n  this._id = options.id;\n  this._collection = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.collection, pointPrimitiveCollection);\n\n  this._clusterShow = true;\n\n  this._pickId = undefined;\n  this._pointPrimitiveCollection = pointPrimitiveCollection;\n  this._dirty = false;\n  this._index = -1; //Used only by PointPrimitiveCollection\n}\n\nvar SHOW_INDEX = (PointPrimitive.SHOW_INDEX = 0);\nvar POSITION_INDEX = (PointPrimitive.POSITION_INDEX = 1);\nvar COLOR_INDEX = (PointPrimitive.COLOR_INDEX = 2);\nvar OUTLINE_COLOR_INDEX = (PointPrimitive.OUTLINE_COLOR_INDEX = 3);\nvar OUTLINE_WIDTH_INDEX = (PointPrimitive.OUTLINE_WIDTH_INDEX = 4);\nvar PIXEL_SIZE_INDEX = (PointPrimitive.PIXEL_SIZE_INDEX = 5);\nvar SCALE_BY_DISTANCE_INDEX = (PointPrimitive.SCALE_BY_DISTANCE_INDEX = 6);\nvar TRANSLUCENCY_BY_DISTANCE_INDEX = (PointPrimitive.TRANSLUCENCY_BY_DISTANCE_INDEX = 7);\nvar DISTANCE_DISPLAY_CONDITION_INDEX = (PointPrimitive.DISTANCE_DISPLAY_CONDITION_INDEX = 8);\nvar DISABLE_DEPTH_DISTANCE_INDEX = (PointPrimitive.DISABLE_DEPTH_DISTANCE_INDEX = 9);\nPointPrimitive.NUMBER_OF_PROPERTIES = 10;\n\nfunction makeDirty(pointPrimitive, propertyChanged) {\n  var pointPrimitiveCollection = pointPrimitive._pointPrimitiveCollection;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(pointPrimitiveCollection)) {\n    pointPrimitiveCollection._updatePointPrimitive(\n      pointPrimitive,\n      propertyChanged\n    );\n    pointPrimitive._dirty = true;\n  }\n}\n\nObject.defineProperties(PointPrimitive.prototype, {\n  /**\n   * Determines if this point will be shown.  Use this to hide or show a point, instead\n   * of removing it and re-adding it to the collection.\n   * @memberof PointPrimitive.prototype\n   * @type {Boolean}\n   */\n  show: {\n    get: function () {\n      return this._show;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._show !== value) {\n        this._show = value;\n        makeDirty(this, SHOW_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the Cartesian position of this point.\n   * @memberof PointPrimitive.prototype\n   * @type {Cartesian3}\n   */\n  position: {\n    get: function () {\n      return this._position;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug)\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var position = this._position;\n      if (!_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(position, value)) {\n        _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(value, position);\n        _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(value, this._actualPosition);\n\n        makeDirty(this, POSITION_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets near and far scaling properties of a point based on the point\'s distance from the camera.\n   * A point\'s scale will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the point\'s scale remains clamped to the nearest bound.  This scale\n   * multiplies the pixelSize and outlineWidth to affect the total size of the point.  If undefined,\n   * scaleByDistance will be disabled.\n   * @memberof PointPrimitive.prototype\n   * @type {NearFarScalar}\n   *\n   * @example\n   * // Example 1.\n   * // Set a pointPrimitive\'s scaleByDistance to scale to 15 when the\n   * // camera is 1500 meters from the pointPrimitive and disappear as\n   * // the camera distance approaches 8.0e6 meters.\n   * p.scaleByDistance = new Cesium.NearFarScalar(1.5e2, 15, 8.0e6, 0.0);\n   *\n   * @example\n   * // Example 2.\n   * // disable scaling by distance\n   * p.scaleByDistance = undefined;\n   */\n  scaleByDistance: {\n    get: function () {\n      return this._scaleByDistance;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value) && value.far <= value.near) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "far distance must be greater than near distance."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      var scaleByDistance = this._scaleByDistance;\n      if (!_Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].equals */ .Z.equals(scaleByDistance, value)) {\n        this._scaleByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(value, scaleByDistance);\n        makeDirty(this, SCALE_BY_DISTANCE_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets near and far translucency properties of a point based on the point\'s distance from the camera.\n   * A point\'s translucency will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the point\'s translucency remains clamped to the nearest bound.  If undefined,\n   * translucencyByDistance will be disabled.\n   * @memberof PointPrimitive.prototype\n   * @type {NearFarScalar}\n   *\n   * @example\n   * // Example 1.\n   * // Set a point\'s translucency to 1.0 when the\n   * // camera is 1500 meters from the point and disappear as\n   * // the camera distance approaches 8.0e6 meters.\n   * p.translucencyByDistance = new Cesium.NearFarScalar(1.5e2, 1.0, 8.0e6, 0.0);\n   *\n   * @example\n   * // Example 2.\n   * // disable translucency by distance\n   * p.translucencyByDistance = undefined;\n   */\n  translucencyByDistance: {\n    get: function () {\n      return this._translucencyByDistance;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value) && value.far <= value.near) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n          "far distance must be greater than near distance."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      var translucencyByDistance = this._translucencyByDistance;\n      if (!_Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].equals */ .Z.equals(translucencyByDistance, value)) {\n        this._translucencyByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(\n          value,\n          translucencyByDistance\n        );\n        makeDirty(this, TRANSLUCENCY_BY_DISTANCE_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the inner size of the point in pixels.\n   * @memberof PointPrimitive.prototype\n   * @type {Number}\n   */\n  pixelSize: {\n    get: function () {\n      return this._pixelSize;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._pixelSize !== value) {\n        this._pixelSize = value;\n        makeDirty(this, PIXEL_SIZE_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the inner color of the point.\n   * The red, green, blue, and alpha values are indicated by <code>value</code>\'s <code>red</code>, <code>green</code>,\n   * <code>blue</code>, and <code>alpha</code> properties as shown in Example 1.  These components range from <code>0.0</code>\n   * (no intensity) to <code>1.0</code> (full intensity).\n   * @memberof PointPrimitive.prototype\n   * @type {Color}\n   *\n   * @example\n   * // Example 1. Assign yellow.\n   * p.color = Cesium.Color.YELLOW;\n   *\n   * @example\n   * // Example 2. Make a pointPrimitive 50% translucent.\n   * p.color = new Cesium.Color(1.0, 1.0, 1.0, 0.5);\n   */\n  color: {\n    get: function () {\n      return this._color;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var color = this._color;\n      if (!_Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equals */ .Z.equals(color, value)) {\n        _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(value, color);\n        makeDirty(this, COLOR_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the outline color of the point.\n   * @memberof PointPrimitive.prototype\n   * @type {Color}\n   */\n  outlineColor: {\n    get: function () {\n      return this._outlineColor;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var outlineColor = this._outlineColor;\n      if (!_Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equals */ .Z.equals(outlineColor, value)) {\n        _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(value, outlineColor);\n        makeDirty(this, OUTLINE_COLOR_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the outline width in pixels.  This width adds to pixelSize,\n   * increasing the total size of the point.\n   * @memberof PointPrimitive.prototype\n   * @type {Number}\n   */\n  outlineWidth: {\n    get: function () {\n      return this._outlineWidth;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._outlineWidth !== value) {\n        this._outlineWidth = value;\n        makeDirty(this, OUTLINE_WIDTH_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the condition specifying at what distance from the camera that this point will be displayed.\n   * @memberof PointPrimitive.prototype\n   * @type {DistanceDisplayCondition}\n   * @default undefined\n   */\n  distanceDisplayCondition: {\n    get: function () {\n      return this._distanceDisplayCondition;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value) && value.far <= value.near) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("far must be greater than near");\n      }\n      //>>includeEnd(\'debug\');\n      if (\n        !_Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(this._distanceDisplayCondition, value)\n      ) {\n        this._distanceDisplayCondition = _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(\n          value,\n          this._distanceDisplayCondition\n        );\n        makeDirty(this, DISTANCE_DISPLAY_CONDITION_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the distance from the camera at which to disable the depth test to, for example, prevent clipping against terrain.\n   * When set to zero, the depth test is always applied. When set to Number.POSITIVE_INFINITY, the depth test is never applied.\n   * @memberof PointPrimitive.prototype\n   * @type {Number}\n   * @default 0.0\n   */\n  disableDepthTestDistance: {\n    get: function () {\n      return this._disableDepthTestDistance;\n    },\n    set: function (value) {\n      if (this._disableDepthTestDistance !== value) {\n        //>>includeStart(\'debug\', pragmas.debug);\n        if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(value) || value < 0.0) {\n          throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n            "disableDepthTestDistance must be greater than or equal to 0.0."\n          );\n        }\n        //>>includeEnd(\'debug\');\n        this._disableDepthTestDistance = value;\n        makeDirty(this, DISABLE_DEPTH_DISTANCE_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the user-defined value returned when the point is picked.\n   * @memberof PointPrimitive.prototype\n   * @type {*}\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n    set: function (value) {\n      this._id = value;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(this._pickId)) {\n        this._pickId.object.id = value;\n      }\n    },\n  },\n\n  /**\n   * @private\n   */\n  pickId: {\n    get: function () {\n      return this._pickId;\n    },\n  },\n\n  /**\n   * Determines whether or not this point will be shown or hidden because it was clustered.\n   * @memberof PointPrimitive.prototype\n   * @type {Boolean}\n   * @private\n   */\n  clusterShow: {\n    get: function () {\n      return this._clusterShow;\n    },\n    set: function (value) {\n      if (this._clusterShow !== value) {\n        this._clusterShow = value;\n        makeDirty(this, SHOW_INDEX);\n      }\n    },\n  },\n});\n\nPointPrimitive.prototype.getPickId = function (context) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(this._pickId)) {\n    this._pickId = context.createPickId({\n      primitive: this,\n      collection: this._collection,\n      id: this._id,\n    });\n  }\n\n  return this._pickId;\n};\n\nPointPrimitive.prototype._getActualPosition = function () {\n  return this._actualPosition;\n};\n\nPointPrimitive.prototype._setActualPosition = function (value) {\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(value, this._actualPosition);\n  makeDirty(this, POSITION_INDEX);\n};\n\nvar tempCartesian3 = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nPointPrimitive._computeActualPosition = function (\n  position,\n  frameState,\n  modelMatrix\n) {\n  if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    return position;\n  }\n\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(modelMatrix, position, tempCartesian3);\n  return _SceneTransforms_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].computeActualWgs84Position */ .Z.computeActualWgs84Position(frameState, tempCartesian3);\n};\n\nvar scratchCartesian4 = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\n// This function is basically a stripped-down JavaScript version of PointPrimitiveCollectionVS.glsl\nPointPrimitive._computeScreenSpacePosition = function (\n  modelMatrix,\n  position,\n  scene,\n  result\n) {\n  // Model to world coordinates\n  var positionWorld = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n    modelMatrix,\n    _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromElements */ .Z.fromElements(\n      position.x,\n      position.y,\n      position.z,\n      1,\n      scratchCartesian4\n    ),\n    scratchCartesian4\n  );\n  var positionWC = _SceneTransforms_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].wgs84ToWindowCoordinates */ .Z.wgs84ToWindowCoordinates(\n    scene,\n    positionWorld,\n    result\n  );\n  return positionWC;\n};\n\n/**\n * Computes the screen-space position of the point\'s origin.\n * The screen space origin is the top, left corner of the canvas; <code>x</code> increases from\n * left to right, and <code>y</code> increases from top to bottom.\n *\n * @param {Scene} scene The scene.\n * @param {Cartesian2} [result] The object onto which to store the result.\n * @returns {Cartesian2} The screen-space position of the point.\n *\n * @exception {DeveloperError} PointPrimitive must be in a collection.\n *\n * @example\n * console.log(p.computeScreenSpacePosition(scene).toString());\n */\nPointPrimitive.prototype.computeScreenSpacePosition = function (scene, result) {\n  var pointPrimitiveCollection = this._pointPrimitiveCollection;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(pointPrimitiveCollection)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("PointPrimitive must be in a collection.");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(scene)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z("scene is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var modelMatrix = pointPrimitiveCollection.modelMatrix;\n  var windowCoordinates = PointPrimitive._computeScreenSpacePosition(\n    modelMatrix,\n    this._actualPosition,\n    scene,\n    result\n  );\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(windowCoordinates)) {\n    return undefined;\n  }\n\n  windowCoordinates.y = scene.canvas.clientHeight - windowCoordinates.y;\n  return windowCoordinates;\n};\n\n/**\n * Gets a point\'s screen space bounding box centered around screenSpacePosition.\n * @param {PointPrimitive} point The point to get the screen space bounding box for.\n * @param {Cartesian2} screenSpacePosition The screen space center of the label.\n * @param {BoundingRectangle} [result] The object onto which to store the result.\n * @returns {BoundingRectangle} The screen space bounding box.\n *\n * @private\n */\nPointPrimitive.getScreenSpaceBoundingBox = function (\n  point,\n  screenSpacePosition,\n  result\n) {\n  var size = point.pixelSize;\n  var halfSize = size * 0.5;\n\n  var x = screenSpacePosition.x - halfSize;\n  var y = screenSpacePosition.y - halfSize;\n  var width = size;\n  var height = size;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(result)) {\n    result = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  result.x = x;\n  result.y = y;\n  result.width = width;\n  result.height = height;\n\n  return result;\n};\n\n/**\n * Determines if this point equals another point.  Points are equal if all their properties\n * are equal.  Points in different collections can be equal.\n *\n * @param {PointPrimitive} other The point to compare for equality.\n * @returns {Boolean} <code>true</code> if the points are equal; otherwise, <code>false</code>.\n */\nPointPrimitive.prototype.equals = function (other) {\n  return (\n    this === other ||\n    ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(other) &&\n      this._id === other._id &&\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(this._position, other._position) &&\n      _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equals */ .Z.equals(this._color, other._color) &&\n      this._pixelSize === other._pixelSize &&\n      this._outlineWidth === other._outlineWidth &&\n      this._show === other._show &&\n      _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equals */ .Z.equals(this._outlineColor, other._outlineColor) &&\n      _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].equals */ .Z.equals(this._scaleByDistance, other._scaleByDistance) &&\n      _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].equals */ .Z.equals(\n        this._translucencyByDistance,\n        other._translucencyByDistance\n      ) &&\n      _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(\n        this._distanceDisplayCondition,\n        other._distanceDisplayCondition\n      ) &&\n      this._disableDepthTestDistance === other._disableDepthTestDistance)\n  );\n};\n\nPointPrimitive.prototype._destroy = function () {\n  this._pickId = this._pickId && this._pickId.destroy();\n  this._pointPrimitiveCollection = undefined;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PointPrimitive);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///36514\n')},9462:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59947);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12572);\n/* harmony import */ var _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(74938);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(72248);\n/* harmony import */ var _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(97264);\n/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(52200);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(20521);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(46588);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_VertexArrayFacade_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(52851);\n/* harmony import */ var _Shaders_PointPrimitiveCollectionFS_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(12049);\n/* harmony import */ var _Shaders_PointPrimitiveCollectionVS_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(16586);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(13633);\n/* harmony import */ var _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(27384);\n/* harmony import */ var _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(36514);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(89917);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar SHOW_INDEX = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].SHOW_INDEX */ .Z.SHOW_INDEX;\nvar POSITION_INDEX = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].POSITION_INDEX */ .Z.POSITION_INDEX;\nvar COLOR_INDEX = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].COLOR_INDEX */ .Z.COLOR_INDEX;\nvar OUTLINE_COLOR_INDEX = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].OUTLINE_COLOR_INDEX */ .Z.OUTLINE_COLOR_INDEX;\nvar OUTLINE_WIDTH_INDEX = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].OUTLINE_WIDTH_INDEX */ .Z.OUTLINE_WIDTH_INDEX;\nvar PIXEL_SIZE_INDEX = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].PIXEL_SIZE_INDEX */ .Z.PIXEL_SIZE_INDEX;\nvar SCALE_BY_DISTANCE_INDEX = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].SCALE_BY_DISTANCE_INDEX */ .Z.SCALE_BY_DISTANCE_INDEX;\nvar TRANSLUCENCY_BY_DISTANCE_INDEX =\n  _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].TRANSLUCENCY_BY_DISTANCE_INDEX */ .Z.TRANSLUCENCY_BY_DISTANCE_INDEX;\nvar DISTANCE_DISPLAY_CONDITION_INDEX =\n  _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].DISTANCE_DISPLAY_CONDITION_INDEX */ .Z.DISTANCE_DISPLAY_CONDITION_INDEX;\nvar DISABLE_DEPTH_DISTANCE_INDEX = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].DISABLE_DEPTH_DISTANCE_INDEX */ .Z.DISABLE_DEPTH_DISTANCE_INDEX;\nvar NUMBER_OF_PROPERTIES = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].NUMBER_OF_PROPERTIES */ .Z.NUMBER_OF_PROPERTIES;\n\nvar attributeLocations = {\n  positionHighAndSize: 0,\n  positionLowAndOutline: 1,\n  compressedAttribute0: 2, // color, outlineColor, pick color\n  compressedAttribute1: 3, // show, translucency by distance, some free space\n  scaleByDistance: 4,\n  distanceDisplayConditionAndDisableDepth: 5,\n};\n\n/**\n * A renderable collection of points.\n * <br /><br />\n * Points are added and removed from the collection using {@link PointPrimitiveCollection#add}\n * and {@link PointPrimitiveCollection#remove}.\n *\n * @alias PointPrimitiveCollection\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 transformation matrix that transforms each point from model to world coordinates.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Determines if this primitive\'s commands\' bounding spheres are shown.\n * @param {BlendOption} [options.blendOption=BlendOption.OPAQUE_AND_TRANSLUCENT] The point blending option. The default\n * is used for rendering both opaque and translucent points. However, if either all of the points are completely opaque or all are completely translucent,\n * setting the technique to BlendOption.OPAQUE or BlendOption.TRANSLUCENT can improve performance by up to 2x.\n * @param {Boolean} [options.show=true] Determines if the primitives in the collection will be shown.\n *\n * @performance For best performance, prefer a few collections, each with many points, to\n * many collections with only a few points each.  Organize collections so that points\n * with the same update frequency are in the same collection, i.e., points that do not\n * change should be in one collection; points that change every frame should be in another\n * collection; and so on.\n *\n *\n * @example\n * // Create a pointPrimitive collection with two points\n * var points = scene.primitives.add(new Cesium.PointPrimitiveCollection());\n * points.add({\n *   position : new Cesium.Cartesian3(1.0, 2.0, 3.0),\n *   color : Cesium.Color.YELLOW\n * });\n * points.add({\n *   position : new Cesium.Cartesian3(4.0, 5.0, 6.0),\n *   color : Cesium.Color.CYAN\n * });\n *\n * @see PointPrimitiveCollection#add\n * @see PointPrimitiveCollection#remove\n * @see PointPrimitive\n */\nfunction PointPrimitiveCollection(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  this._sp = undefined;\n  this._spTranslucent = undefined;\n  this._rsOpaque = undefined;\n  this._rsTranslucent = undefined;\n  this._vaf = undefined;\n\n  this._pointPrimitives = [];\n  this._pointPrimitivesToUpdate = [];\n  this._pointPrimitivesToUpdateIndex = 0;\n  this._pointPrimitivesRemoved = false;\n  this._createVertexArray = false;\n\n  this._shaderScaleByDistance = false;\n  this._compiledShaderScaleByDistance = false;\n\n  this._shaderTranslucencyByDistance = false;\n  this._compiledShaderTranslucencyByDistance = false;\n\n  this._shaderDistanceDisplayCondition = false;\n  this._compiledShaderDistanceDisplayCondition = false;\n\n  this._shaderDisableDepthDistance = false;\n  this._compiledShaderDisableDepthDistance = false;\n\n  this._propertiesChanged = new Uint32Array(NUMBER_OF_PROPERTIES);\n\n  this._maxPixelSize = 1.0;\n\n  this._baseVolume = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this._baseVolumeWC = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this._baseVolume2D = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this._boundingVolume = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this._boundingVolumeDirty = false;\n\n  this._colorCommands = [];\n\n  /**\n   * Determines if primitives in this collection will be shown.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.show, true);\n\n  /**\n   * The 4x4 transformation matrix that transforms each point in this collection from model to world coordinates.\n   * When this is the identity matrix, the pointPrimitives are drawn in world coordinates, i.e., Earth\'s WGS84 coordinates.\n   * Local reference frames can be used by providing a different transformation matrix, like that returned\n   * by {@link Transforms.eastNorthUpToFixedFrame}.\n   *\n   * @type {Matrix4}\n   * @default {@link Matrix4.IDENTITY}\n   *\n   *\n   * @example\n   * var center = Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883);\n   * pointPrimitives.modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(center);\n   * pointPrimitives.add({\n   *   color : Cesium.Color.ORANGE,\n   *   position : new Cesium.Cartesian3(0.0, 0.0, 0.0) // center\n   * });\n   * pointPrimitives.add({\n   *   color : Cesium.Color.YELLOW,\n   *   position : new Cesium.Cartesian3(1000000.0, 0.0, 0.0) // east\n   * });\n   * pointPrimitives.add({\n   *   color : Cesium.Color.GREEN,\n   *   position : new Cesium.Cartesian3(0.0, 1000000.0, 0.0) // north\n   * });\n   * pointPrimitives.add({\n   *   color : Cesium.Color.CYAN,\n   *   position : new Cesium.Cartesian3(0.0, 0.0, 1000000.0) // up\n   * });\n   *\n   * @see Transforms.eastNorthUpToFixedFrame\n   */\n  this.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].IDENTITY */ .Z.IDENTITY)\n  );\n  this._modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].IDENTITY */ .Z.IDENTITY);\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the primitive.\n   * </p>\n   *\n   * @type {Boolean}\n   *\n   * @default false\n   */\n  this.debugShowBoundingVolume = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(\n    options.debugShowBoundingVolume,\n    false\n  );\n\n  /**\n   * The point blending option. The default is used for rendering both opaque and translucent points.\n   * However, if either all of the points are completely opaque or all are completely translucent,\n   * setting the technique to BlendOption.OPAQUE or BlendOption.TRANSLUCENT can improve\n   * performance by up to 2x.\n   * @type {BlendOption}\n   * @default BlendOption.OPAQUE_AND_TRANSLUCENT\n   */\n  this.blendOption = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(\n    options.blendOption,\n    _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].OPAQUE_AND_TRANSLUCENT */ .Z.OPAQUE_AND_TRANSLUCENT\n  );\n  this._blendOption = undefined;\n\n  this._mode = _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SCENE3D */ .Z.SCENE3D;\n  this._maxTotalPointSize = 1;\n\n  // The buffer usage for each attribute is determined based on the usage of the attribute over time.\n  this._buffersUsage = [\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // SHOW_INDEX\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // POSITION_INDEX\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // COLOR_INDEX\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // OUTLINE_COLOR_INDEX\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // OUTLINE_WIDTH_INDEX\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // PIXEL_SIZE_INDEX\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // SCALE_BY_DISTANCE_INDEX\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // TRANSLUCENCY_BY_DISTANCE_INDEX\n    _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW, // DISTANCE_DISPLAY_CONDITION_INDEX\n  ];\n\n  var that = this;\n  this._uniforms = {\n    u_maxTotalPointSize: function () {\n      return that._maxTotalPointSize;\n    },\n  };\n}\n\nObject.defineProperties(PointPrimitiveCollection.prototype, {\n  /**\n   * Returns the number of points in this collection.  This is commonly used with\n   * {@link PointPrimitiveCollection#get} to iterate over all the points\n   * in the collection.\n   * @memberof PointPrimitiveCollection.prototype\n   * @type {Number}\n   */\n  length: {\n    get: function () {\n      removePointPrimitives(this);\n      return this._pointPrimitives.length;\n    },\n  },\n});\n\nfunction destroyPointPrimitives(pointPrimitives) {\n  var length = pointPrimitives.length;\n  for (var i = 0; i < length; ++i) {\n    if (pointPrimitives[i]) {\n      pointPrimitives[i]._destroy();\n    }\n  }\n}\n\n/**\n * Creates and adds a point with the specified initial properties to the collection.\n * The added point is returned so it can be modified or removed from the collection later.\n *\n * @param {Object}[options] A template describing the point\'s properties as shown in Example 1.\n * @returns {PointPrimitive} The point that was added to the collection.\n *\n * @performance Calling <code>add</code> is expected constant time.  However, the collection\'s vertex buffer\n * is rewritten - an <code>O(n)</code> operation that also incurs CPU to GPU overhead.  For\n * best performance, add as many pointPrimitives as possible before calling <code>update</code>.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * // Example 1:  Add a point, specifying all the default values.\n * var p = pointPrimitives.add({\n *   show : true,\n *   position : Cesium.Cartesian3.ZERO,\n *   pixelSize : 10.0,\n *   color : Cesium.Color.WHITE,\n *   outlineColor : Cesium.Color.TRANSPARENT,\n *   outlineWidth : 0.0,\n *   id : undefined\n * });\n *\n * @example\n * // Example 2:  Specify only the point\'s cartographic position.\n * var p = pointPrimitives.add({\n *   position : Cesium.Cartesian3.fromDegrees(longitude, latitude, height)\n * });\n *\n * @see PointPrimitiveCollection#remove\n * @see PointPrimitiveCollection#removeAll\n */\nPointPrimitiveCollection.prototype.add = function (options) {\n  var p = new _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z(options, this);\n  p._index = this._pointPrimitives.length;\n\n  this._pointPrimitives.push(p);\n  this._createVertexArray = true;\n\n  return p;\n};\n\n/**\n * Removes a point from the collection.\n *\n * @param {PointPrimitive} pointPrimitive The point to remove.\n * @returns {Boolean} <code>true</code> if the point was removed; <code>false</code> if the point was not found in the collection.\n *\n * @performance Calling <code>remove</code> is expected constant time.  However, the collection\'s vertex buffer\n * is rewritten - an <code>O(n)</code> operation that also incurs CPU to GPU overhead.  For\n * best performance, remove as many points as possible before calling <code>update</code>.\n * If you intend to temporarily hide a point, it is usually more efficient to call\n * {@link PointPrimitive#show} instead of removing and re-adding the point.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * var p = pointPrimitives.add(...);\n * pointPrimitives.remove(p);  // Returns true\n *\n * @see PointPrimitiveCollection#add\n * @see PointPrimitiveCollection#removeAll\n * @see PointPrimitive#show\n */\nPointPrimitiveCollection.prototype.remove = function (pointPrimitive) {\n  if (this.contains(pointPrimitive)) {\n    this._pointPrimitives[pointPrimitive._index] = null; // Removed later\n    this._pointPrimitivesRemoved = true;\n    this._createVertexArray = true;\n    pointPrimitive._destroy();\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Removes all points from the collection.\n *\n * @performance <code>O(n)</code>.  It is more efficient to remove all the points\n * from a collection and then add new ones than to create a new collection entirely.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * pointPrimitives.add(...);\n * pointPrimitives.add(...);\n * pointPrimitives.removeAll();\n *\n * @see PointPrimitiveCollection#add\n * @see PointPrimitiveCollection#remove\n */\nPointPrimitiveCollection.prototype.removeAll = function () {\n  destroyPointPrimitives(this._pointPrimitives);\n  this._pointPrimitives = [];\n  this._pointPrimitivesToUpdate = [];\n  this._pointPrimitivesToUpdateIndex = 0;\n  this._pointPrimitivesRemoved = false;\n\n  this._createVertexArray = true;\n};\n\nfunction removePointPrimitives(pointPrimitiveCollection) {\n  if (pointPrimitiveCollection._pointPrimitivesRemoved) {\n    pointPrimitiveCollection._pointPrimitivesRemoved = false;\n\n    var newPointPrimitives = [];\n    var pointPrimitives = pointPrimitiveCollection._pointPrimitives;\n    var length = pointPrimitives.length;\n    for (var i = 0, j = 0; i < length; ++i) {\n      var pointPrimitive = pointPrimitives[i];\n      if (pointPrimitive) {\n        pointPrimitive._index = j++;\n        newPointPrimitives.push(pointPrimitive);\n      }\n    }\n\n    pointPrimitiveCollection._pointPrimitives = newPointPrimitives;\n  }\n}\n\nPointPrimitiveCollection.prototype._updatePointPrimitive = function (\n  pointPrimitive,\n  propertyChanged\n) {\n  if (!pointPrimitive._dirty) {\n    this._pointPrimitivesToUpdate[\n      this._pointPrimitivesToUpdateIndex++\n    ] = pointPrimitive;\n  }\n\n  ++this._propertiesChanged[propertyChanged];\n};\n\n/**\n * Check whether this collection contains a given point.\n *\n * @param {PointPrimitive} [pointPrimitive] The point to check for.\n * @returns {Boolean} true if this collection contains the point, false otherwise.\n *\n * @see PointPrimitiveCollection#get\n */\nPointPrimitiveCollection.prototype.contains = function (pointPrimitive) {\n  return (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(pointPrimitive) && pointPrimitive._pointPrimitiveCollection === this\n  );\n};\n\n/**\n * Returns the point in the collection at the specified index.  Indices are zero-based\n * and increase as points are added.  Removing a point shifts all points after\n * it to the left, changing their indices.  This function is commonly used with\n * {@link PointPrimitiveCollection#length} to iterate over all the points\n * in the collection.\n *\n * @param {Number} index The zero-based index of the point.\n * @returns {PointPrimitive} The point at the specified index.\n *\n * @performance Expected constant time.  If points were removed from the collection and\n * {@link PointPrimitiveCollection#update} was not called, an implicit <code>O(n)</code>\n * operation is performed.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * // Toggle the show property of every point in the collection\n * var len = pointPrimitives.length;\n * for (var i = 0; i < len; ++i) {\n *   var p = pointPrimitives.get(i);\n *   p.show = !p.show;\n * }\n *\n * @see PointPrimitiveCollection#length\n */\nPointPrimitiveCollection.prototype.get = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(index)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("index is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  removePointPrimitives(this);\n  return this._pointPrimitives[index];\n};\n\nPointPrimitiveCollection.prototype.computeNewBuffersUsage = function () {\n  var buffersUsage = this._buffersUsage;\n  var usageChanged = false;\n\n  var properties = this._propertiesChanged;\n  for (var k = 0; k < NUMBER_OF_PROPERTIES; ++k) {\n    var newUsage =\n      properties[k] === 0 ? _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW : _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].STREAM_DRAW */ .Z.STREAM_DRAW;\n    usageChanged = usageChanged || buffersUsage[k] !== newUsage;\n    buffersUsage[k] = newUsage;\n  }\n\n  return usageChanged;\n};\n\nfunction createVAF(context, numberOfPointPrimitives, buffersUsage) {\n  return new _Renderer_VertexArrayFacade_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z(\n    context,\n    [\n      {\n        index: attributeLocations.positionHighAndSize,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FLOAT */ .Z.FLOAT,\n        usage: buffersUsage[POSITION_INDEX],\n      },\n      {\n        index: attributeLocations.positionLowAndShow,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FLOAT */ .Z.FLOAT,\n        usage: buffersUsage[POSITION_INDEX],\n      },\n      {\n        index: attributeLocations.compressedAttribute0,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FLOAT */ .Z.FLOAT,\n        usage: buffersUsage[COLOR_INDEX],\n      },\n      {\n        index: attributeLocations.compressedAttribute1,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FLOAT */ .Z.FLOAT,\n        usage: buffersUsage[TRANSLUCENCY_BY_DISTANCE_INDEX],\n      },\n      {\n        index: attributeLocations.scaleByDistance,\n        componentsPerAttribute: 4,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FLOAT */ .Z.FLOAT,\n        usage: buffersUsage[SCALE_BY_DISTANCE_INDEX],\n      },\n      {\n        index: attributeLocations.distanceDisplayConditionAndDisableDepth,\n        componentsPerAttribute: 3,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FLOAT */ .Z.FLOAT,\n        usage: buffersUsage[DISTANCE_DISPLAY_CONDITION_INDEX],\n      },\n    ],\n    numberOfPointPrimitives\n  ); // 1 vertex per pointPrimitive\n}\n\n///////////////////////////////////////////////////////////////////////////\n\n// PERFORMANCE_IDEA:  Save memory if a property is the same for all pointPrimitives, use a latched attribute state,\n// instead of storing it in a vertex buffer.\n\nvar writePositionScratch = new _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\n\nfunction writePositionSizeAndOutline(\n  pointPrimitiveCollection,\n  context,\n  vafWriters,\n  pointPrimitive\n) {\n  var i = pointPrimitive._index;\n  var position = pointPrimitive._getActualPosition();\n\n  if (pointPrimitiveCollection._mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].expand */ .Z.expand(\n      pointPrimitiveCollection._baseVolume,\n      position,\n      pointPrimitiveCollection._baseVolume\n    );\n    pointPrimitiveCollection._boundingVolumeDirty = true;\n  }\n\n  _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].fromCartesian */ .Z.fromCartesian(position, writePositionScratch);\n  var pixelSize = pointPrimitive.pixelSize;\n  var outlineWidth = pointPrimitive.outlineWidth;\n\n  pointPrimitiveCollection._maxPixelSize = Math.max(\n    pointPrimitiveCollection._maxPixelSize,\n    pixelSize + outlineWidth\n  );\n\n  var positionHighWriter = vafWriters[attributeLocations.positionHighAndSize];\n  var high = writePositionScratch.high;\n  positionHighWriter(i, high.x, high.y, high.z, pixelSize);\n\n  var positionLowWriter = vafWriters[attributeLocations.positionLowAndOutline];\n  var low = writePositionScratch.low;\n  positionLowWriter(i, low.x, low.y, low.z, outlineWidth);\n}\n\nvar LEFT_SHIFT16 = 65536.0; // 2^16\nvar LEFT_SHIFT8 = 256.0; // 2^8\n\nfunction writeCompressedAttrib0(\n  pointPrimitiveCollection,\n  context,\n  vafWriters,\n  pointPrimitive\n) {\n  var i = pointPrimitive._index;\n\n  var color = pointPrimitive.color;\n  var pickColor = pointPrimitive.getPickId(context).color;\n  var outlineColor = pointPrimitive.outlineColor;\n\n  var red = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(color.red);\n  var green = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(color.green);\n  var blue = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(color.blue);\n  var compressed0 = red * LEFT_SHIFT16 + green * LEFT_SHIFT8 + blue;\n\n  red = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(outlineColor.red);\n  green = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(outlineColor.green);\n  blue = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(outlineColor.blue);\n  var compressed1 = red * LEFT_SHIFT16 + green * LEFT_SHIFT8 + blue;\n\n  red = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.red);\n  green = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.green);\n  blue = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.blue);\n  var compressed2 = red * LEFT_SHIFT16 + green * LEFT_SHIFT8 + blue;\n\n  var compressed3 =\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(color.alpha) * LEFT_SHIFT16 +\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(outlineColor.alpha) * LEFT_SHIFT8 +\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.alpha);\n\n  var writer = vafWriters[attributeLocations.compressedAttribute0];\n  writer(i, compressed0, compressed1, compressed2, compressed3);\n}\n\nfunction writeCompressedAttrib1(\n  pointPrimitiveCollection,\n  context,\n  vafWriters,\n  pointPrimitive\n) {\n  var i = pointPrimitive._index;\n\n  var near = 0.0;\n  var nearValue = 1.0;\n  var far = 1.0;\n  var farValue = 1.0;\n\n  var translucency = pointPrimitive.translucencyByDistance;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(translucency)) {\n    near = translucency.near;\n    nearValue = translucency.nearValue;\n    far = translucency.far;\n    farValue = translucency.farValue;\n\n    if (nearValue !== 1.0 || farValue !== 1.0) {\n      // translucency by distance calculation in shader need not be enabled\n      // until a pointPrimitive with near and far !== 1.0 is found\n      pointPrimitiveCollection._shaderTranslucencyByDistance = true;\n    }\n  }\n\n  var show = pointPrimitive.show && pointPrimitive.clusterShow;\n\n  // If the color alphas are zero, do not show this pointPrimitive.  This lets us avoid providing\n  // color during the pick pass and also eliminates a discard in the fragment shader.\n  if (\n    pointPrimitive.color.alpha === 0.0 &&\n    pointPrimitive.outlineColor.alpha === 0.0\n  ) {\n    show = false;\n  }\n\n  nearValue = _Core_Math_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clamp */ .Z.clamp(nearValue, 0.0, 1.0);\n  nearValue = nearValue === 1.0 ? 255.0 : (nearValue * 255.0) | 0;\n  var compressed0 = (show ? 1.0 : 0.0) * LEFT_SHIFT8 + nearValue;\n\n  farValue = _Core_Math_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clamp */ .Z.clamp(farValue, 0.0, 1.0);\n  farValue = farValue === 1.0 ? 255.0 : (farValue * 255.0) | 0;\n  var compressed1 = farValue;\n\n  var writer = vafWriters[attributeLocations.compressedAttribute1];\n  writer(i, compressed0, compressed1, near, far);\n}\n\nfunction writeScaleByDistance(\n  pointPrimitiveCollection,\n  context,\n  vafWriters,\n  pointPrimitive\n) {\n  var i = pointPrimitive._index;\n  var writer = vafWriters[attributeLocations.scaleByDistance];\n  var near = 0.0;\n  var nearValue = 1.0;\n  var far = 1.0;\n  var farValue = 1.0;\n\n  var scale = pointPrimitive.scaleByDistance;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(scale)) {\n    near = scale.near;\n    nearValue = scale.nearValue;\n    far = scale.far;\n    farValue = scale.farValue;\n\n    if (nearValue !== 1.0 || farValue !== 1.0) {\n      // scale by distance calculation in shader need not be enabled\n      // until a pointPrimitive with near and far !== 1.0 is found\n      pointPrimitiveCollection._shaderScaleByDistance = true;\n    }\n  }\n\n  writer(i, near, nearValue, far, farValue);\n}\n\nfunction writeDistanceDisplayConditionAndDepthDisable(\n  pointPrimitiveCollection,\n  context,\n  vafWriters,\n  pointPrimitive\n) {\n  var i = pointPrimitive._index;\n  var writer =\n    vafWriters[attributeLocations.distanceDisplayConditionAndDisableDepth];\n  var near = 0.0;\n  var far = Number.MAX_VALUE;\n\n  var distanceDisplayCondition = pointPrimitive.distanceDisplayCondition;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(distanceDisplayCondition)) {\n    near = distanceDisplayCondition.near;\n    far = distanceDisplayCondition.far;\n\n    near *= near;\n    far *= far;\n\n    pointPrimitiveCollection._shaderDistanceDisplayCondition = true;\n  }\n\n  var disableDepthTestDistance = pointPrimitive.disableDepthTestDistance;\n  disableDepthTestDistance *= disableDepthTestDistance;\n  if (disableDepthTestDistance > 0.0) {\n    pointPrimitiveCollection._shaderDisableDepthDistance = true;\n    if (disableDepthTestDistance === Number.POSITIVE_INFINITY) {\n      disableDepthTestDistance = -1.0;\n    }\n  }\n\n  writer(i, near, far, disableDepthTestDistance);\n}\n\nfunction writePointPrimitive(\n  pointPrimitiveCollection,\n  context,\n  vafWriters,\n  pointPrimitive\n) {\n  writePositionSizeAndOutline(\n    pointPrimitiveCollection,\n    context,\n    vafWriters,\n    pointPrimitive\n  );\n  writeCompressedAttrib0(\n    pointPrimitiveCollection,\n    context,\n    vafWriters,\n    pointPrimitive\n  );\n  writeCompressedAttrib1(\n    pointPrimitiveCollection,\n    context,\n    vafWriters,\n    pointPrimitive\n  );\n  writeScaleByDistance(\n    pointPrimitiveCollection,\n    context,\n    vafWriters,\n    pointPrimitive\n  );\n  writeDistanceDisplayConditionAndDepthDisable(\n    pointPrimitiveCollection,\n    context,\n    vafWriters,\n    pointPrimitive\n  );\n}\n\nfunction recomputeActualPositions(\n  pointPrimitiveCollection,\n  pointPrimitives,\n  length,\n  frameState,\n  modelMatrix,\n  recomputeBoundingVolume\n) {\n  var boundingVolume;\n  if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    boundingVolume = pointPrimitiveCollection._baseVolume;\n    pointPrimitiveCollection._boundingVolumeDirty = true;\n  } else {\n    boundingVolume = pointPrimitiveCollection._baseVolume2D;\n  }\n\n  var positions = [];\n  for (var i = 0; i < length; ++i) {\n    var pointPrimitive = pointPrimitives[i];\n    var position = pointPrimitive.position;\n    var actualPosition = _PointPrimitive_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"]._computeActualPosition */ .Z._computeActualPosition(\n      position,\n      frameState,\n      modelMatrix\n    );\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(actualPosition)) {\n      pointPrimitive._setActualPosition(actualPosition);\n\n      if (recomputeBoundingVolume) {\n        positions.push(actualPosition);\n      } else {\n        _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].expand */ .Z.expand(boundingVolume, actualPosition, boundingVolume);\n      }\n    }\n  }\n\n  if (recomputeBoundingVolume) {\n    _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromPoints */ .Z.fromPoints(positions, boundingVolume);\n  }\n}\n\nfunction updateMode(pointPrimitiveCollection, frameState) {\n  var mode = frameState.mode;\n\n  var pointPrimitives = pointPrimitiveCollection._pointPrimitives;\n  var pointPrimitivesToUpdate =\n    pointPrimitiveCollection._pointPrimitivesToUpdate;\n  var modelMatrix = pointPrimitiveCollection._modelMatrix;\n\n  if (\n    pointPrimitiveCollection._createVertexArray ||\n    pointPrimitiveCollection._mode !== mode ||\n    (mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SCENE3D */ .Z.SCENE3D &&\n      !_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].equals */ .Z.equals(modelMatrix, pointPrimitiveCollection.modelMatrix))\n  ) {\n    pointPrimitiveCollection._mode = mode;\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].clone */ .Z.clone(pointPrimitiveCollection.modelMatrix, modelMatrix);\n    pointPrimitiveCollection._createVertexArray = true;\n\n    if (\n      mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SCENE3D */ .Z.SCENE3D ||\n      mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SCENE2D */ .Z.SCENE2D ||\n      mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].COLUMBUS_VIEW */ .Z.COLUMBUS_VIEW\n    ) {\n      recomputeActualPositions(\n        pointPrimitiveCollection,\n        pointPrimitives,\n        pointPrimitives.length,\n        frameState,\n        modelMatrix,\n        true\n      );\n    }\n  } else if (mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].MORPHING */ .Z.MORPHING) {\n    recomputeActualPositions(\n      pointPrimitiveCollection,\n      pointPrimitives,\n      pointPrimitives.length,\n      frameState,\n      modelMatrix,\n      true\n    );\n  } else if (mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SCENE2D */ .Z.SCENE2D || mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].COLUMBUS_VIEW */ .Z.COLUMBUS_VIEW) {\n    recomputeActualPositions(\n      pointPrimitiveCollection,\n      pointPrimitivesToUpdate,\n      pointPrimitiveCollection._pointPrimitivesToUpdateIndex,\n      frameState,\n      modelMatrix,\n      false\n    );\n  }\n}\n\nfunction updateBoundingVolume(collection, frameState, boundingVolume) {\n  var pixelSize = frameState.camera.getPixelSize(\n    boundingVolume,\n    frameState.context.drawingBufferWidth,\n    frameState.context.drawingBufferHeight\n  );\n  var size = pixelSize * collection._maxPixelSize;\n  boundingVolume.radius += size;\n}\n\nvar scratchWriterArray = [];\n\n/**\n * @private\n */\nPointPrimitiveCollection.prototype.update = function (frameState) {\n  removePointPrimitives(this);\n\n  if (!this.show) {\n    return;\n  }\n\n  this._maxTotalPointSize = _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].maximumAliasedPointSize */ .Z.maximumAliasedPointSize;\n\n  updateMode(this, frameState);\n\n  var pointPrimitives = this._pointPrimitives;\n  var pointPrimitivesLength = pointPrimitives.length;\n  var pointPrimitivesToUpdate = this._pointPrimitivesToUpdate;\n  var pointPrimitivesToUpdateLength = this._pointPrimitivesToUpdateIndex;\n\n  var properties = this._propertiesChanged;\n\n  var createVertexArray = this._createVertexArray;\n\n  var vafWriters;\n  var context = frameState.context;\n  var pass = frameState.passes;\n  var picking = pass.pick;\n\n  // PERFORMANCE_IDEA: Round robin multiple buffers.\n  if (createVertexArray || (!picking && this.computeNewBuffersUsage())) {\n    this._createVertexArray = false;\n\n    for (var k = 0; k < NUMBER_OF_PROPERTIES; ++k) {\n      properties[k] = 0;\n    }\n\n    this._vaf = this._vaf && this._vaf.destroy();\n\n    if (pointPrimitivesLength > 0) {\n      // PERFORMANCE_IDEA:  Instead of creating a new one, resize like std::vector.\n      this._vaf = createVAF(context, pointPrimitivesLength, this._buffersUsage);\n      vafWriters = this._vaf.writers;\n\n      // Rewrite entire buffer if pointPrimitives were added or removed.\n      for (var i = 0; i < pointPrimitivesLength; ++i) {\n        var pointPrimitive = this._pointPrimitives[i];\n        pointPrimitive._dirty = false; // In case it needed an update.\n        writePointPrimitive(this, context, vafWriters, pointPrimitive);\n      }\n\n      this._vaf.commit();\n    }\n\n    this._pointPrimitivesToUpdateIndex = 0;\n  } else if (pointPrimitivesToUpdateLength > 0) {\n    // PointPrimitives were modified, but none were added or removed.\n    var writers = scratchWriterArray;\n    writers.length = 0;\n\n    if (\n      properties[POSITION_INDEX] ||\n      properties[OUTLINE_WIDTH_INDEX] ||\n      properties[PIXEL_SIZE_INDEX]\n    ) {\n      writers.push(writePositionSizeAndOutline);\n    }\n\n    if (properties[COLOR_INDEX] || properties[OUTLINE_COLOR_INDEX]) {\n      writers.push(writeCompressedAttrib0);\n    }\n\n    if (properties[SHOW_INDEX] || properties[TRANSLUCENCY_BY_DISTANCE_INDEX]) {\n      writers.push(writeCompressedAttrib1);\n    }\n\n    if (properties[SCALE_BY_DISTANCE_INDEX]) {\n      writers.push(writeScaleByDistance);\n    }\n\n    if (\n      properties[DISTANCE_DISPLAY_CONDITION_INDEX] ||\n      properties[DISABLE_DEPTH_DISTANCE_INDEX]\n    ) {\n      writers.push(writeDistanceDisplayConditionAndDepthDisable);\n    }\n\n    var numWriters = writers.length;\n\n    vafWriters = this._vaf.writers;\n\n    if (pointPrimitivesToUpdateLength / pointPrimitivesLength > 0.1) {\n      // If more than 10% of pointPrimitive change, rewrite the entire buffer.\n\n      // PERFORMANCE_IDEA:  I totally made up 10% :).\n\n      for (var m = 0; m < pointPrimitivesToUpdateLength; ++m) {\n        var b = pointPrimitivesToUpdate[m];\n        b._dirty = false;\n\n        for (var n = 0; n < numWriters; ++n) {\n          writers[n](this, context, vafWriters, b);\n        }\n      }\n      this._vaf.commit();\n    } else {\n      for (var h = 0; h < pointPrimitivesToUpdateLength; ++h) {\n        var bb = pointPrimitivesToUpdate[h];\n        bb._dirty = false;\n\n        for (var o = 0; o < numWriters; ++o) {\n          writers[o](this, context, vafWriters, bb);\n        }\n        this._vaf.subCommit(bb._index, 1);\n      }\n      this._vaf.endSubCommits();\n    }\n\n    this._pointPrimitivesToUpdateIndex = 0;\n  }\n\n  // If the number of total pointPrimitives ever shrinks considerably\n  // Truncate pointPrimitivesToUpdate so that we free memory that we\'re\n  // not going to be using.\n  if (pointPrimitivesToUpdateLength > pointPrimitivesLength * 1.5) {\n    pointPrimitivesToUpdate.length = pointPrimitivesLength;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(this._vaf) || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(this._vaf.va)) {\n    return;\n  }\n\n  if (this._boundingVolumeDirty) {\n    this._boundingVolumeDirty = false;\n    _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].transform */ .Z.transform(\n      this._baseVolume,\n      this.modelMatrix,\n      this._baseVolumeWC\n    );\n  }\n\n  var boundingVolume;\n  var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].IDENTITY */ .Z.IDENTITY;\n  if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    modelMatrix = this.modelMatrix;\n    boundingVolume = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n      this._baseVolumeWC,\n      this._boundingVolume\n    );\n  } else {\n    boundingVolume = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n      this._baseVolume2D,\n      this._boundingVolume\n    );\n  }\n  updateBoundingVolume(this, frameState, boundingVolume);\n\n  var blendOptionChanged = this._blendOption !== this.blendOption;\n  this._blendOption = this.blendOption;\n\n  if (blendOptionChanged) {\n    if (\n      this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].OPAQUE */ .Z.OPAQUE ||\n      this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].OPAQUE_AND_TRANSLUCENT */ .Z.OPAQUE_AND_TRANSLUCENT\n    ) {\n      this._rsOpaque = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].fromCache */ .Z.fromCache({\n        depthTest: {\n          enabled: true,\n          func: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].LEQUAL */ .Z.LEQUAL,\n        },\n        depthMask: true,\n      });\n    } else {\n      this._rsOpaque = undefined;\n    }\n\n    if (\n      this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT ||\n      this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].OPAQUE_AND_TRANSLUCENT */ .Z.OPAQUE_AND_TRANSLUCENT\n    ) {\n      this._rsTranslucent = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].fromCache */ .Z.fromCache({\n        depthTest: {\n          enabled: true,\n          func: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].LEQUAL */ .Z.LEQUAL,\n        },\n        depthMask: false,\n        blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND,\n      });\n    } else {\n      this._rsTranslucent = undefined;\n    }\n  }\n\n  this._shaderDisableDepthDistance =\n    this._shaderDisableDepthDistance ||\n    frameState.minimumDisableDepthTestDistance !== 0.0;\n  var vs;\n  var fs;\n\n  if (\n    blendOptionChanged ||\n    (this._shaderScaleByDistance && !this._compiledShaderScaleByDistance) ||\n    (this._shaderTranslucencyByDistance &&\n      !this._compiledShaderTranslucencyByDistance) ||\n    (this._shaderDistanceDisplayCondition &&\n      !this._compiledShaderDistanceDisplayCondition) ||\n    this._shaderDisableDepthDistance !==\n      this._compiledShaderDisableDepthDistance\n  ) {\n    vs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z({\n      sources: [_Shaders_PointPrimitiveCollectionVS_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z],\n    });\n    if (this._shaderScaleByDistance) {\n      vs.defines.push("EYE_DISTANCE_SCALING");\n    }\n    if (this._shaderTranslucencyByDistance) {\n      vs.defines.push("EYE_DISTANCE_TRANSLUCENCY");\n    }\n    if (this._shaderDistanceDisplayCondition) {\n      vs.defines.push("DISTANCE_DISPLAY_CONDITION");\n    }\n    if (this._shaderDisableDepthDistance) {\n      vs.defines.push("DISABLE_DEPTH_DISTANCE");\n    }\n\n    if (this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].OPAQUE_AND_TRANSLUCENT */ .Z.OPAQUE_AND_TRANSLUCENT) {\n      fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z({\n        defines: ["OPAQUE"],\n        sources: [_Shaders_PointPrimitiveCollectionFS_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z],\n      });\n      this._sp = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].replaceCache */ .Z.replaceCache({\n        context: context,\n        shaderProgram: this._sp,\n        vertexShaderSource: vs,\n        fragmentShaderSource: fs,\n        attributeLocations: attributeLocations,\n      });\n\n      fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z({\n        defines: ["TRANSLUCENT"],\n        sources: [_Shaders_PointPrimitiveCollectionFS_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z],\n      });\n      this._spTranslucent = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].replaceCache */ .Z.replaceCache({\n        context: context,\n        shaderProgram: this._spTranslucent,\n        vertexShaderSource: vs,\n        fragmentShaderSource: fs,\n        attributeLocations: attributeLocations,\n      });\n    }\n\n    if (this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].OPAQUE */ .Z.OPAQUE) {\n      fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z({\n        sources: [_Shaders_PointPrimitiveCollectionFS_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z],\n      });\n      this._sp = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].replaceCache */ .Z.replaceCache({\n        context: context,\n        shaderProgram: this._sp,\n        vertexShaderSource: vs,\n        fragmentShaderSource: fs,\n        attributeLocations: attributeLocations,\n      });\n    }\n\n    if (this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT) {\n      fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z({\n        sources: [_Shaders_PointPrimitiveCollectionFS_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z],\n      });\n      this._spTranslucent = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].replaceCache */ .Z.replaceCache({\n        context: context,\n        shaderProgram: this._spTranslucent,\n        vertexShaderSource: vs,\n        fragmentShaderSource: fs,\n        attributeLocations: attributeLocations,\n      });\n    }\n\n    this._compiledShaderScaleByDistance = this._shaderScaleByDistance;\n    this._compiledShaderTranslucencyByDistance = this._shaderTranslucencyByDistance;\n    this._compiledShaderDistanceDisplayCondition = this._shaderDistanceDisplayCondition;\n    this._compiledShaderDisableDepthDistance = this._shaderDisableDepthDistance;\n  }\n\n  var va;\n  var vaLength;\n  var command;\n  var j;\n\n  var commandList = frameState.commandList;\n\n  if (pass.render || picking) {\n    var colorList = this._colorCommands;\n\n    var opaque = this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].OPAQUE */ .Z.OPAQUE;\n    var opaqueAndTranslucent =\n      this._blendOption === _BlendOption_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].OPAQUE_AND_TRANSLUCENT */ .Z.OPAQUE_AND_TRANSLUCENT;\n\n    va = this._vaf.va;\n    vaLength = va.length;\n\n    colorList.length = vaLength;\n    var totalLength = opaqueAndTranslucent ? vaLength * 2 : vaLength;\n    for (j = 0; j < totalLength; ++j) {\n      var opaqueCommand = opaque || (opaqueAndTranslucent && j % 2 === 0);\n\n      command = colorList[j];\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(command)) {\n        command = colorList[j] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z();\n      }\n\n      command.primitiveType = _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].POINTS */ .Z.POINTS;\n      command.pass =\n        opaqueCommand || !opaqueAndTranslucent ? _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].OPAQUE */ .Z.OPAQUE : _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT;\n      command.owner = this;\n\n      var index = opaqueAndTranslucent ? Math.floor(j / 2.0) : j;\n      command.boundingVolume = boundingVolume;\n      command.modelMatrix = modelMatrix;\n      command.shaderProgram = opaqueCommand ? this._sp : this._spTranslucent;\n      command.uniformMap = this._uniforms;\n      command.vertexArray = va[index].va;\n      command.renderState = opaqueCommand\n        ? this._rsOpaque\n        : this._rsTranslucent;\n      command.debugShowBoundingVolume = this.debugShowBoundingVolume;\n      command.pickId = "v_pickColor";\n\n      commandList.push(command);\n    }\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see PointPrimitiveCollection#destroy\n */\nPointPrimitiveCollection.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * pointPrimitives = pointPrimitives && pointPrimitives.destroy();\n *\n * @see PointPrimitiveCollection#isDestroyed\n */\nPointPrimitiveCollection.prototype.destroy = function () {\n  this._sp = this._sp && this._sp.destroy();\n  this._spTranslucent = this._spTranslucent && this._spTranslucent.destroy();\n  this._spPick = this._spPick && this._spPick.destroy();\n  this._vaf = this._vaf && this._vaf.destroy();\n  destroyPointPrimitives(this._pointPrimitives);\n\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PointPrimitiveCollection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9462\n')},28509:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32378);\n/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12572);\n/* harmony import */ var _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(47861);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(72248);\n/* harmony import */ var _Core_PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(61733);\n/* harmony import */ var _Material_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(69592);\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A renderable polyline. Create this by calling {@link PolylineCollection#add}\n *\n * @alias Polyline\n * @internalConstructor\n * @class\n *\n * @param {Object} options Object with the following properties:\n * @param {Boolean} [options.show=true] <code>true</code> if this polyline will be shown; otherwise, <code>false</code>.\n * @param {Number} [options.width=1.0] The width of the polyline in pixels.\n * @param {Boolean} [options.loop=false] Whether a line segment will be added between the last and first line positions to make this line a loop.\n * @param {Material} [options.material=Material.ColorType] The material.\n * @param {Cartesian3[]} [options.positions] The positions.\n * @param {Object} [options.id] The user-defined object to be returned when this polyline is picked.\n * @param {DistanceDisplayCondition} [options.distanceDisplayCondition] The condition specifying at what distance from the camera that this polyline will be displayed.\n * @param {PolylineCollection} polylineCollection The renderable polyline collection.\n *\n * @see PolylineCollection\n *\n */\nfunction Polyline(options, polylineCollection) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  this._show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.show, true);\n  this._width = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.width, 1.0);\n  this._loop = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.loop, false);\n  this._distanceDisplayCondition = options.distanceDisplayCondition;\n\n  this._material = options.material;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._material)) {\n    this._material = _Material_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromType */ .Z.fromType(_Material_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].ColorType */ .Z.ColorType, {\n      color: new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(1.0, 1.0, 1.0, 1.0),\n    });\n  }\n\n  var positions = options.positions;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(positions)) {\n    positions = [];\n  }\n\n  this._positions = positions;\n  this._actualPositions = (0,_Core_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    positions,\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon\n  );\n\n  if (this._loop && this._actualPositions.length > 2) {\n    if (this._actualPositions === this._positions) {\n      this._actualPositions = positions.slice();\n    }\n    this._actualPositions.push(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(this._actualPositions[0]));\n  }\n\n  this._length = this._actualPositions.length;\n  this._id = options.id;\n\n  var modelMatrix;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(polylineCollection)) {\n    modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(polylineCollection.modelMatrix);\n  }\n\n  this._modelMatrix = modelMatrix;\n  this._segments = _Core_PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].wrapLongitude */ .Z.wrapLongitude(\n    this._actualPositions,\n    modelMatrix\n  );\n\n  this._actualLength = undefined;\n\n  // eslint-disable-next-line no-use-before-define\n  this._propertiesChanged = new Uint32Array(NUMBER_OF_PROPERTIES);\n  this._polylineCollection = polylineCollection;\n  this._dirty = false;\n  this._pickId = undefined;\n  this._boundingVolume = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromPoints */ .Z.fromPoints(this._actualPositions);\n  this._boundingVolumeWC = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].transform */ .Z.transform(\n    this._boundingVolume,\n    this._modelMatrix\n  );\n  this._boundingVolume2D = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(); // modified in PolylineCollection\n}\n\nvar POSITION_INDEX = (Polyline.POSITION_INDEX = 0);\nvar SHOW_INDEX = (Polyline.SHOW_INDEX = 1);\nvar WIDTH_INDEX = (Polyline.WIDTH_INDEX = 2);\nvar MATERIAL_INDEX = (Polyline.MATERIAL_INDEX = 3);\nvar POSITION_SIZE_INDEX = (Polyline.POSITION_SIZE_INDEX = 4);\nvar DISTANCE_DISPLAY_CONDITION = (Polyline.DISTANCE_DISPLAY_CONDITION = 5);\nvar NUMBER_OF_PROPERTIES = (Polyline.NUMBER_OF_PROPERTIES = 6);\n\nfunction makeDirty(polyline, propertyChanged) {\n  ++polyline._propertiesChanged[propertyChanged];\n  var polylineCollection = polyline._polylineCollection;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(polylineCollection)) {\n    polylineCollection._updatePolyline(polyline, propertyChanged);\n    polyline._dirty = true;\n  }\n}\n\nObject.defineProperties(Polyline.prototype, {\n  /**\n   * Determines if this polyline will be shown.  Use this to hide or show a polyline, instead\n   * of removing it and re-adding it to the collection.\n   * @memberof Polyline.prototype\n   * @type {Boolean}\n   */\n  show: {\n    get: function () {\n      return this._show;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (value !== this._show) {\n        this._show = value;\n        makeDirty(this, SHOW_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the positions of the polyline.\n   * @memberof Polyline.prototype\n   * @type {Cartesian3[]}\n   * @example\n   * polyline.positions = Cesium.Cartesian3.fromDegreesArray([\n   *     0.0, 0.0,\n   *     10.0, 0.0,\n   *     0.0, 20.0\n   * ]);\n   */\n  positions: {\n    get: function () {\n      return this._positions;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var positions = (0,_Core_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(value, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon);\n\n      if (this._loop && positions.length > 2) {\n        if (positions === value) {\n          positions = value.slice();\n        }\n        positions.push(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(positions[0]));\n      }\n\n      if (\n        this._actualPositions.length !== positions.length ||\n        this._actualPositions.length !== this._length\n      ) {\n        makeDirty(this, POSITION_SIZE_INDEX);\n      }\n\n      this._positions = value;\n      this._actualPositions = positions;\n      this._length = positions.length;\n      this._boundingVolume = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromPoints */ .Z.fromPoints(\n        this._actualPositions,\n        this._boundingVolume\n      );\n      this._boundingVolumeWC = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].transform */ .Z.transform(\n        this._boundingVolume,\n        this._modelMatrix,\n        this._boundingVolumeWC\n      );\n      makeDirty(this, POSITION_INDEX);\n\n      this.update();\n    },\n  },\n\n  /**\n   * Gets or sets the surface appearance of the polyline.  This can be one of several built-in {@link Material} objects or a custom material, scripted with\n   * {@link https://github.com/CesiumGS/cesium/wiki/Fabric|Fabric}.\n   * @memberof Polyline.prototype\n   * @type {Material}\n   */\n  material: {\n    get: function () {\n      return this._material;\n    },\n    set: function (material) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(material)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("material is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._material !== material) {\n        this._material = material;\n        makeDirty(this, MATERIAL_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the width of the polyline.\n   * @memberof Polyline.prototype\n   * @type {Number}\n   */\n  width: {\n    get: function () {\n      return this._width;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug)\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var width = this._width;\n      if (value !== width) {\n        this._width = value;\n        makeDirty(this, WIDTH_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets whether a line segment will be added between the first and last polyline positions.\n   * @memberof Polyline.prototype\n   * @type {Boolean}\n   */\n  loop: {\n    get: function () {\n      return this._loop;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug)\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (value !== this._loop) {\n        var positions = this._actualPositions;\n        if (value) {\n          if (\n            positions.length > 2 &&\n            !_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(positions[0], positions[positions.length - 1])\n          ) {\n            if (positions.length === this._positions.length) {\n              this._actualPositions = positions = this._positions.slice();\n            }\n            positions.push(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(positions[0]));\n          }\n        } else if (\n          positions.length > 2 &&\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(positions[0], positions[positions.length - 1])\n        ) {\n          if (positions.length - 1 === this._positions.length) {\n            this._actualPositions = this._positions;\n          } else {\n            positions.pop();\n          }\n        }\n\n        this._loop = value;\n        makeDirty(this, POSITION_SIZE_INDEX);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the user-defined value returned when the polyline is picked.\n   * @memberof Polyline.prototype\n   * @type {*}\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n    set: function (value) {\n      this._id = value;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._pickId)) {\n        this._pickId.object.id = value;\n      }\n    },\n  },\n\n  /**\n   * @private\n   */\n  pickId: {\n    get: function () {\n      return this._pickId;\n    },\n  },\n\n  /**\n   * Gets the destruction status of this polyline\n   * @memberof Polyline.prototype\n   * @type {Boolean}\n   * @default false\n   * @private\n   */\n  isDestroyed: {\n    get: function () {\n      return !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._polylineCollection);\n    },\n  },\n\n  /**\n   * Gets or sets the condition specifying at what distance from the camera that this polyline will be displayed.\n   * @memberof Polyline.prototype\n   * @type {DistanceDisplayCondition}\n   * @default undefined\n   */\n  distanceDisplayCondition: {\n    get: function () {\n      return this._distanceDisplayCondition;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(value) && value.far <= value.near) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n          "far distance must be greater than near distance."\n        );\n      }\n      //>>includeEnd(\'debug\');\n      if (\n        !_Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equals */ .Z.equals(value, this._distanceDisplayCondition)\n      ) {\n        this._distanceDisplayCondition = _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(\n          value,\n          this._distanceDisplayCondition\n        );\n        makeDirty(this, DISTANCE_DISPLAY_CONDITION);\n      }\n    },\n  },\n});\n\n/**\n * @private\n */\nPolyline.prototype.update = function () {\n  var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].IDENTITY */ .Z.IDENTITY;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._polylineCollection)) {\n    modelMatrix = this._polylineCollection.modelMatrix;\n  }\n\n  var segmentPositionsLength = this._segments.positions.length;\n  var segmentLengths = this._segments.lengths;\n\n  var positionsChanged =\n    this._propertiesChanged[POSITION_INDEX] > 0 ||\n    this._propertiesChanged[POSITION_SIZE_INDEX] > 0;\n  if (!_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(modelMatrix, this._modelMatrix) || positionsChanged) {\n    this._segments = _Core_PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].wrapLongitude */ .Z.wrapLongitude(\n      this._actualPositions,\n      modelMatrix\n    );\n    this._boundingVolumeWC = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].transform */ .Z.transform(\n      this._boundingVolume,\n      modelMatrix,\n      this._boundingVolumeWC\n    );\n  }\n\n  this._modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(modelMatrix, this._modelMatrix);\n\n  if (this._segments.positions.length !== segmentPositionsLength) {\n    // number of positions changed\n    makeDirty(this, POSITION_SIZE_INDEX);\n  } else {\n    var length = segmentLengths.length;\n    for (var i = 0; i < length; ++i) {\n      if (segmentLengths[i] !== this._segments.lengths[i]) {\n        // indices changed\n        makeDirty(this, POSITION_SIZE_INDEX);\n        break;\n      }\n    }\n  }\n};\n\n/**\n * @private\n */\nPolyline.prototype.getPickId = function (context) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._pickId)) {\n    this._pickId = context.createPickId({\n      primitive: this,\n      collection: this._polylineCollection,\n      id: this._id,\n    });\n  }\n  return this._pickId;\n};\n\nPolyline.prototype._clean = function () {\n  this._dirty = false;\n  var properties = this._propertiesChanged;\n  for (var k = 0; k < NUMBER_OF_PROPERTIES - 1; ++k) {\n    properties[k] = 0;\n  }\n};\n\nPolyline.prototype._destroy = function () {\n  this._pickId = this._pickId && this._pickId.destroy();\n  this._material = this._material && this._material.destroy();\n  this._polylineCollection = undefined;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Polyline);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28509\n')},56764:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51688);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59947);\n/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(8182);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(12572);\n/* harmony import */ var _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(74938);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(96037);\n/* harmony import */ var _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(22832);\n/* harmony import */ var _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(84935);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Plane_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(7749);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(9407);\n/* harmony import */ var _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(99095);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(20521);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(46588);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(8743);\n/* harmony import */ var _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(18192);\n/* harmony import */ var _Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(94373);\n/* harmony import */ var _Shaders_PolylineFS_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(36449);\n/* harmony import */ var _Shaders_PolylineVS_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(9067);\n/* harmony import */ var _BatchTable_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(7164);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(13633);\n/* harmony import */ var _Material_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(69592);\n/* harmony import */ var _Polyline_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(28509);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(89917);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar SHOW_INDEX = _Polyline_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].SHOW_INDEX */ .Z.SHOW_INDEX;\nvar WIDTH_INDEX = _Polyline_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].WIDTH_INDEX */ .Z.WIDTH_INDEX;\nvar POSITION_INDEX = _Polyline_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].POSITION_INDEX */ .Z.POSITION_INDEX;\nvar MATERIAL_INDEX = _Polyline_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].MATERIAL_INDEX */ .Z.MATERIAL_INDEX;\n//POSITION_SIZE_INDEX is needed for when the polyline\'s position array changes size.\n//When it does, we need to recreate the indicesBuffer.\nvar POSITION_SIZE_INDEX = _Polyline_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].POSITION_SIZE_INDEX */ .Z.POSITION_SIZE_INDEX;\nvar DISTANCE_DISPLAY_CONDITION = _Polyline_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].DISTANCE_DISPLAY_CONDITION */ .Z.DISTANCE_DISPLAY_CONDITION;\nvar NUMBER_OF_PROPERTIES = _Polyline_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].NUMBER_OF_PROPERTIES */ .Z.NUMBER_OF_PROPERTIES;\n\nvar attributeLocations = {\n  texCoordExpandAndBatchIndex: 0,\n  position3DHigh: 1,\n  position3DLow: 2,\n  position2DHigh: 3,\n  position2DLow: 4,\n  prevPosition3DHigh: 5,\n  prevPosition3DLow: 6,\n  prevPosition2DHigh: 7,\n  prevPosition2DLow: 8,\n  nextPosition3DHigh: 9,\n  nextPosition3DLow: 10,\n  nextPosition2DHigh: 11,\n  nextPosition2DLow: 12,\n};\n\n/**\n * A renderable collection of polylines.\n * <br /><br />\n * <div align="center">\n * <img src="Images/Polyline.png" width="400" height="300" /><br />\n * Example polylines\n * </div>\n * <br /><br />\n * Polylines are added and removed from the collection using {@link PolylineCollection#add}\n * and {@link PolylineCollection#remove}.\n *\n * @alias PolylineCollection\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 transformation matrix that transforms each polyline from model to world coordinates.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Determines if this primitive\'s commands\' bounding spheres are shown.\n * @param {Boolean} [options.show=true] Determines if the polylines in the collection will be shown.\n *\n * @performance For best performance, prefer a few collections, each with many polylines, to\n * many collections with only a few polylines each.  Organize collections so that polylines\n * with the same update frequency are in the same collection, i.e., polylines that do not\n * change should be in one collection; polylines that change every frame should be in another\n * collection; and so on.\n *\n * @see PolylineCollection#add\n * @see PolylineCollection#remove\n * @see Polyline\n * @see LabelCollection\n *\n * @example\n * // Create a polyline collection with two polylines\n * var polylines = new Cesium.PolylineCollection();\n * polylines.add({\n *   positions : Cesium.Cartesian3.fromDegreesArray([\n *     -75.10, 39.57,\n *     -77.02, 38.53,\n *     -80.50, 35.14,\n *     -80.12, 25.46]),\n *   width : 2\n * });\n *\n * polylines.add({\n *   positions : Cesium.Cartesian3.fromDegreesArray([\n *     -73.10, 37.57,\n *     -75.02, 36.53,\n *     -78.50, 33.14,\n *     -78.12, 23.46]),\n *   width : 4\n * });\n */\nfunction PolylineCollection(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  /**\n   * Determines if polylines in this collection will be shown.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.show, true);\n\n  /**\n   * The 4x4 transformation matrix that transforms each polyline in this collection from model to world coordinates.\n   * When this is the identity matrix, the polylines are drawn in world coordinates, i.e., Earth\'s WGS84 coordinates.\n   * Local reference frames can be used by providing a different transformation matrix, like that returned\n   * by {@link Transforms.eastNorthUpToFixedFrame}.\n   *\n   * @type {Matrix4}\n   * @default {@link Matrix4.IDENTITY}\n   */\n  this.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].IDENTITY */ .Z.IDENTITY)\n  );\n  this._modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].IDENTITY */ .Z.IDENTITY);\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the primitive.\n   * </p>\n   *\n   * @type {Boolean}\n   *\n   * @default false\n   */\n  this.debugShowBoundingVolume = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(\n    options.debugShowBoundingVolume,\n    false\n  );\n\n  this._opaqueRS = undefined;\n  this._translucentRS = undefined;\n\n  this._colorCommands = [];\n\n  this._polylinesUpdated = false;\n  this._polylinesRemoved = false;\n  this._createVertexArray = false;\n  this._propertiesChanged = new Uint32Array(NUMBER_OF_PROPERTIES);\n  this._polylines = [];\n  this._polylineBuckets = {};\n\n  // The buffer usage is determined based on the usage of the attribute over time.\n  this._positionBufferUsage = {\n    bufferUsage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    frameCount: 0,\n  };\n\n  this._mode = undefined;\n\n  this._polylinesToUpdate = [];\n  this._vertexArrays = [];\n  this._positionBuffer = undefined;\n  this._texCoordExpandAndBatchIndexBuffer = undefined;\n\n  this._batchTable = undefined;\n  this._createBatchTable = false;\n\n  // Only used by Vector3DTilePoints\n  this._useHighlightColor = false;\n  this._highlightColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].WHITE */ .Z.WHITE);\n\n  var that = this;\n  this._uniformMap = {\n    u_highlightColor: function () {\n      return that._highlightColor;\n    },\n  };\n}\n\nObject.defineProperties(PolylineCollection.prototype, {\n  /**\n   * Returns the number of polylines in this collection.  This is commonly used with\n   * {@link PolylineCollection#get} to iterate over all the polylines\n   * in the collection.\n   * @memberof PolylineCollection.prototype\n   * @type {Number}\n   */\n  length: {\n    get: function () {\n      removePolylines(this);\n      return this._polylines.length;\n    },\n  },\n});\n\n/**\n     * Creates and adds a polyline with the specified initial properties to the collection.\n     * The added polyline is returned so it can be modified or removed from the collection later.\n     *\n     * @param {Object}[options] A template describing the polyline\'s properties as shown in Example 1.\n     * @returns {Polyline} The polyline that was added to the collection.\n     *\n     * @performance After calling <code>add</code>, {@link PolylineCollection#update} is called and\n     * the collection\'s vertex buffer is rewritten - an <code>O(n)</code> operation that also incurs CPU to GPU overhead.\n     * For best performance, add as many polylines as possible before calling <code>update</code>.\n     *\n     * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n     *\n     *\n     * @example\n     * // Example 1:  Add a polyline, specifying all the default values.\n     * var p = polylines.add({\n     *   show : true,\n     *   positions : ellipsoid.cartographicArrayToCartesianArray([\n           Cesium.Cartographic.fromDegrees(-75.10, 39.57),\n           Cesium.Cartographic.fromDegrees(-77.02, 38.53)]),\n     *   width : 1\n     * });\n     *\n     * @see PolylineCollection#remove\n     * @see PolylineCollection#removeAll\n     * @see PolylineCollection#update\n     */\nPolylineCollection.prototype.add = function (options) {\n  var p = new _Polyline_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z(options, this);\n  p._index = this._polylines.length;\n  this._polylines.push(p);\n  this._createVertexArray = true;\n  this._createBatchTable = true;\n  return p;\n};\n\n/**\n * Removes a polyline from the collection.\n *\n * @param {Polyline} polyline The polyline to remove.\n * @returns {Boolean} <code>true</code> if the polyline was removed; <code>false</code> if the polyline was not found in the collection.\n *\n * @performance After calling <code>remove</code>, {@link PolylineCollection#update} is called and\n * the collection\'s vertex buffer is rewritten - an <code>O(n)</code> operation that also incurs CPU to GPU overhead.\n * For best performance, remove as many polylines as possible before calling <code>update</code>.\n * If you intend to temporarily hide a polyline, it is usually more efficient to call\n * {@link Polyline#show} instead of removing and re-adding the polyline.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * var p = polylines.add(...);\n * polylines.remove(p);  // Returns true\n *\n * @see PolylineCollection#add\n * @see PolylineCollection#removeAll\n * @see PolylineCollection#update\n * @see Polyline#show\n */\nPolylineCollection.prototype.remove = function (polyline) {\n  if (this.contains(polyline)) {\n    this._polylinesRemoved = true;\n    this._createVertexArray = true;\n    this._createBatchTable = true;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(polyline._bucket)) {\n      var bucket = polyline._bucket;\n      bucket.shaderProgram =\n        bucket.shaderProgram && bucket.shaderProgram.destroy();\n    }\n    polyline._destroy();\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Removes all polylines from the collection.\n *\n * @performance <code>O(n)</code>.  It is more efficient to remove all the polylines\n * from a collection and then add new ones than to create a new collection entirely.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * polylines.add(...);\n * polylines.add(...);\n * polylines.removeAll();\n *\n * @see PolylineCollection#add\n * @see PolylineCollection#remove\n * @see PolylineCollection#update\n */\nPolylineCollection.prototype.removeAll = function () {\n  releaseShaders(this);\n  destroyPolylines(this);\n  this._polylineBuckets = {};\n  this._polylinesRemoved = false;\n  this._polylines.length = 0;\n  this._polylinesToUpdate.length = 0;\n  this._createVertexArray = true;\n};\n\n/**\n * Determines if this collection contains the specified polyline.\n *\n * @param {Polyline} polyline The polyline to check for.\n * @returns {Boolean} true if this collection contains the polyline, false otherwise.\n *\n * @see PolylineCollection#get\n */\nPolylineCollection.prototype.contains = function (polyline) {\n  return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(polyline) && polyline._polylineCollection === this;\n};\n\n/**\n * Returns the polyline in the collection at the specified index.  Indices are zero-based\n * and increase as polylines are added.  Removing a polyline shifts all polylines after\n * it to the left, changing their indices.  This function is commonly used with\n * {@link PolylineCollection#length} to iterate over all the polylines\n * in the collection.\n *\n * @param {Number} index The zero-based index of the polyline.\n * @returns {Polyline} The polyline at the specified index.\n *\n * @performance If polylines were removed from the collection and\n * {@link PolylineCollection#update} was not called, an implicit <code>O(n)</code>\n * operation is performed.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * // Toggle the show property of every polyline in the collection\n * var len = polylines.length;\n * for (var i = 0; i < len; ++i) {\n *   var p = polylines.get(i);\n *   p.show = !p.show;\n * }\n *\n * @see PolylineCollection#length\n */\nPolylineCollection.prototype.get = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(index)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z("index is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  removePolylines(this);\n  return this._polylines[index];\n};\n\nfunction createBatchTable(collection, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(collection._batchTable)) {\n    collection._batchTable.destroy();\n  }\n\n  var attributes = [\n    {\n      functionName: "batchTable_getWidthAndShow",\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 2,\n    },\n    {\n      functionName: "batchTable_getPickColor",\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 4,\n      normalize: true,\n    },\n    {\n      functionName: "batchTable_getCenterHigh",\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n    },\n    {\n      functionName: "batchTable_getCenterLowAndRadius",\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 4,\n    },\n    {\n      functionName: "batchTable_getDistanceDisplayCondition",\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 2,\n    },\n  ];\n\n  collection._batchTable = new _BatchTable_js__WEBPACK_IMPORTED_MODULE_29__/* ["default"] */ .Z(\n    context,\n    attributes,\n    collection._polylines.length\n  );\n}\n\nvar scratchUpdatePolylineEncodedCartesian = new _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\nvar scratchUpdatePolylineCartesian4 = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchNearFarCartesian2 = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {RuntimeError} Vertex texture fetch support is required to render primitives with per-instance attributes. The maximum number of vertex texture image units must be greater than zero.\n */\nPolylineCollection.prototype.update = function (frameState) {\n  removePolylines(this);\n\n  if (this._polylines.length === 0 || !this.show) {\n    return;\n  }\n\n  updateMode(this, frameState);\n\n  var context = frameState.context;\n  var projection = frameState.mapProjection;\n  var polyline;\n  var properties = this._propertiesChanged;\n\n  if (this._createBatchTable) {\n    if (_Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].maximumVertexTextureImageUnits */ .Z.maximumVertexTextureImageUnits === 0) {\n      throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z(\n        "Vertex texture fetch support is required to render polylines. The maximum number of vertex texture image units must be greater than zero."\n      );\n    }\n    createBatchTable(this, context);\n    this._createBatchTable = false;\n  }\n\n  if (this._createVertexArray || computeNewBuffersUsage(this)) {\n    createVertexArrays(this, context, projection);\n  } else if (this._polylinesUpdated) {\n    // Polylines were modified, but no polylines were added or removed.\n    var polylinesToUpdate = this._polylinesToUpdate;\n    if (this._mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n      var updateLength = polylinesToUpdate.length;\n      for (var i = 0; i < updateLength; ++i) {\n        polyline = polylinesToUpdate[i];\n        polyline.update();\n      }\n    }\n\n    // if a polyline\'s positions size changes, we need to recreate the vertex arrays and vertex buffers because the indices will be different.\n    // if a polyline\'s material changes, we need to recreate the VAOs and VBOs because they will be batched differently.\n    if (properties[POSITION_SIZE_INDEX] || properties[MATERIAL_INDEX]) {\n      createVertexArrays(this, context, projection);\n    } else {\n      var length = polylinesToUpdate.length;\n      var polylineBuckets = this._polylineBuckets;\n      for (var ii = 0; ii < length; ++ii) {\n        polyline = polylinesToUpdate[ii];\n        properties = polyline._propertiesChanged;\n        var bucket = polyline._bucket;\n        var index = 0;\n        for (var x in polylineBuckets) {\n          if (polylineBuckets.hasOwnProperty(x)) {\n            if (polylineBuckets[x] === bucket) {\n              if (properties[POSITION_INDEX]) {\n                bucket.writeUpdate(\n                  index,\n                  polyline,\n                  this._positionBuffer,\n                  projection\n                );\n              }\n              break;\n            }\n            index += polylineBuckets[x].lengthOfPositions;\n          }\n        }\n\n        if (properties[SHOW_INDEX] || properties[WIDTH_INDEX]) {\n          this._batchTable.setBatchedAttribute(\n            polyline._index,\n            0,\n            new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(polyline._width, polyline._show)\n          );\n        }\n\n        if (this._batchTable.attributes.length > 2) {\n          if (properties[POSITION_INDEX] || properties[POSITION_SIZE_INDEX]) {\n            var boundingSphere =\n              frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE2D */ .Z.SCENE2D\n                ? polyline._boundingVolume2D\n                : polyline._boundingVolumeWC;\n            var encodedCenter = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].fromCartesian */ .Z.fromCartesian(\n              boundingSphere.center,\n              scratchUpdatePolylineEncodedCartesian\n            );\n            var low = _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromElements */ .Z.fromElements(\n              encodedCenter.low.x,\n              encodedCenter.low.y,\n              encodedCenter.low.z,\n              boundingSphere.radius,\n              scratchUpdatePolylineCartesian4\n            );\n            this._batchTable.setBatchedAttribute(\n              polyline._index,\n              2,\n              encodedCenter.high\n            );\n            this._batchTable.setBatchedAttribute(polyline._index, 3, low);\n          }\n\n          if (properties[DISTANCE_DISPLAY_CONDITION]) {\n            var nearFarCartesian = scratchNearFarCartesian2;\n            nearFarCartesian.x = 0.0;\n            nearFarCartesian.y = Number.MAX_VALUE;\n\n            var distanceDisplayCondition = polyline.distanceDisplayCondition;\n            if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(distanceDisplayCondition)) {\n              nearFarCartesian.x = distanceDisplayCondition.near;\n              nearFarCartesian.y = distanceDisplayCondition.far;\n            }\n\n            this._batchTable.setBatchedAttribute(\n              polyline._index,\n              4,\n              nearFarCartesian\n            );\n          }\n        }\n\n        polyline._clean();\n      }\n    }\n    polylinesToUpdate.length = 0;\n    this._polylinesUpdated = false;\n  }\n\n  properties = this._propertiesChanged;\n  for (var k = 0; k < NUMBER_OF_PROPERTIES; ++k) {\n    properties[k] = 0;\n  }\n\n  var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].IDENTITY */ .Z.IDENTITY;\n  if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    modelMatrix = this.modelMatrix;\n  }\n\n  var pass = frameState.passes;\n  var useDepthTest = frameState.morphTime !== 0.0;\n\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(this._opaqueRS) ||\n    this._opaqueRS.depthTest.enabled !== useDepthTest\n  ) {\n    this._opaqueRS = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"].fromCache */ .Z.fromCache({\n      depthMask: useDepthTest,\n      depthTest: {\n        enabled: useDepthTest,\n      },\n    });\n  }\n\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(this._translucentRS) ||\n    this._translucentRS.depthTest.enabled !== useDepthTest\n  ) {\n    this._translucentRS = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"].fromCache */ .Z.fromCache({\n      blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND,\n      depthMask: !useDepthTest,\n      depthTest: {\n        enabled: useDepthTest,\n      },\n    });\n  }\n\n  this._batchTable.update(frameState);\n\n  if (pass.render || pass.pick) {\n    var colorList = this._colorCommands;\n    createCommandLists(this, frameState, colorList, modelMatrix);\n  }\n};\n\nvar boundingSphereScratch = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar boundingSphereScratch2 = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nfunction createCommandLists(\n  polylineCollection,\n  frameState,\n  commands,\n  modelMatrix\n) {\n  var context = frameState.context;\n  var commandList = frameState.commandList;\n\n  var commandsLength = commands.length;\n  var commandIndex = 0;\n  var cloneBoundingSphere = true;\n\n  var vertexArrays = polylineCollection._vertexArrays;\n  var debugShowBoundingVolume = polylineCollection.debugShowBoundingVolume;\n\n  var batchTable = polylineCollection._batchTable;\n  var uniformCallback = batchTable.getUniformMapCallback();\n\n  var length = vertexArrays.length;\n  for (var m = 0; m < length; ++m) {\n    var va = vertexArrays[m];\n    var buckets = va.buckets;\n    var bucketLength = buckets.length;\n\n    for (var n = 0; n < bucketLength; ++n) {\n      var bucketLocator = buckets[n];\n\n      var offset = bucketLocator.offset;\n      var sp = bucketLocator.bucket.shaderProgram;\n\n      var polylines = bucketLocator.bucket.polylines;\n      var polylineLength = polylines.length;\n      var currentId;\n      var currentMaterial;\n      var count = 0;\n      var command;\n      var uniformMap;\n\n      for (var s = 0; s < polylineLength; ++s) {\n        var polyline = polylines[s];\n        var mId = createMaterialId(polyline._material);\n        if (mId !== currentId) {\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(currentId) && count > 0) {\n            var translucent = currentMaterial.isTranslucent();\n\n            if (commandIndex >= commandsLength) {\n              command = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z({\n                owner: polylineCollection,\n              });\n              commands.push(command);\n            } else {\n              command = commands[commandIndex];\n            }\n\n            ++commandIndex;\n\n            uniformMap = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(\n              uniformCallback(currentMaterial._uniforms),\n              polylineCollection._uniformMap\n            );\n\n            command.boundingVolume = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n              boundingSphereScratch,\n              command.boundingVolume\n            );\n            command.modelMatrix = modelMatrix;\n            command.shaderProgram = sp;\n            command.vertexArray = va.va;\n            command.renderState = translucent\n              ? polylineCollection._translucentRS\n              : polylineCollection._opaqueRS;\n            command.pass = translucent ? _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT : _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].OPAQUE */ .Z.OPAQUE;\n            command.debugShowBoundingVolume = debugShowBoundingVolume;\n            command.pickId = "v_pickColor";\n\n            command.uniformMap = uniformMap;\n            command.count = count;\n            command.offset = offset;\n\n            offset += count;\n            count = 0;\n            cloneBoundingSphere = true;\n\n            commandList.push(command);\n          }\n\n          currentMaterial = polyline._material;\n          currentMaterial.update(context);\n          currentId = mId;\n        }\n\n        var locators = polyline._locatorBuckets;\n        var locatorLength = locators.length;\n        for (var t = 0; t < locatorLength; ++t) {\n          var locator = locators[t];\n          if (locator.locator === bucketLocator) {\n            count += locator.count;\n          }\n        }\n\n        var boundingVolume;\n        if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n          boundingVolume = polyline._boundingVolumeWC;\n        } else if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].COLUMBUS_VIEW */ .Z.COLUMBUS_VIEW) {\n          boundingVolume = polyline._boundingVolume2D;\n        } else if (frameState.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE2D */ .Z.SCENE2D) {\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(polyline._boundingVolume2D)) {\n            boundingVolume = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n              polyline._boundingVolume2D,\n              boundingSphereScratch2\n            );\n            boundingVolume.center.x = 0.0;\n          }\n        } else if (\n          (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(polyline._boundingVolumeWC) &&\n          (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(polyline._boundingVolume2D)\n        ) {\n          boundingVolume = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(\n            polyline._boundingVolumeWC,\n            polyline._boundingVolume2D,\n            boundingSphereScratch2\n          );\n        }\n\n        if (cloneBoundingSphere) {\n          cloneBoundingSphere = false;\n          _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(boundingVolume, boundingSphereScratch);\n        } else {\n          _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].union */ .Z.union(\n            boundingVolume,\n            boundingSphereScratch,\n            boundingSphereScratch\n          );\n        }\n      }\n\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(currentId) && count > 0) {\n        if (commandIndex >= commandsLength) {\n          command = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z({\n            owner: polylineCollection,\n          });\n          commands.push(command);\n        } else {\n          command = commands[commandIndex];\n        }\n\n        ++commandIndex;\n\n        uniformMap = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(\n          uniformCallback(currentMaterial._uniforms),\n          polylineCollection._uniformMap\n        );\n\n        command.boundingVolume = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n          boundingSphereScratch,\n          command.boundingVolume\n        );\n        command.modelMatrix = modelMatrix;\n        command.shaderProgram = sp;\n        command.vertexArray = va.va;\n        command.renderState = currentMaterial.isTranslucent()\n          ? polylineCollection._translucentRS\n          : polylineCollection._opaqueRS;\n        command.pass = currentMaterial.isTranslucent()\n          ? _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT\n          : _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].OPAQUE */ .Z.OPAQUE;\n        command.debugShowBoundingVolume = debugShowBoundingVolume;\n        command.pickId = "v_pickColor";\n\n        command.uniformMap = uniformMap;\n        command.count = count;\n        command.offset = offset;\n\n        cloneBoundingSphere = true;\n\n        commandList.push(command);\n      }\n\n      currentId = undefined;\n    }\n  }\n\n  commands.length = commandIndex;\n}\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see PolylineCollection#destroy\n */\nPolylineCollection.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * polylines = polylines && polylines.destroy();\n *\n * @see PolylineCollection#isDestroyed\n */\nPolylineCollection.prototype.destroy = function () {\n  destroyVertexArrays(this);\n  releaseShaders(this);\n  destroyPolylines(this);\n  this._batchTable = this._batchTable && this._batchTable.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this);\n};\n\nfunction computeNewBuffersUsage(collection) {\n  var usageChanged = false;\n  var properties = collection._propertiesChanged;\n  var bufferUsage = collection._positionBufferUsage;\n  if (properties[POSITION_INDEX]) {\n    if (bufferUsage.bufferUsage !== _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].STREAM_DRAW */ .Z.STREAM_DRAW) {\n      usageChanged = true;\n      bufferUsage.bufferUsage = _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].STREAM_DRAW */ .Z.STREAM_DRAW;\n      bufferUsage.frameCount = 100;\n    } else {\n      bufferUsage.frameCount = 100;\n    }\n  } else if (bufferUsage.bufferUsage !== _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW) {\n    if (bufferUsage.frameCount === 0) {\n      usageChanged = true;\n      bufferUsage.bufferUsage = _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW;\n    } else {\n      bufferUsage.frameCount--;\n    }\n  }\n\n  return usageChanged;\n}\n\nvar emptyVertexBuffer = [0.0, 0.0, 0.0];\n\nfunction createVertexArrays(collection, context, projection) {\n  collection._createVertexArray = false;\n  releaseShaders(collection);\n  destroyVertexArrays(collection);\n  sortPolylinesIntoBuckets(collection);\n\n  //stores all of the individual indices arrays.\n  var totalIndices = [[]];\n  var indices = totalIndices[0];\n\n  var batchTable = collection._batchTable;\n  var useHighlightColor = collection._useHighlightColor;\n\n  //used to determine the vertexBuffer offset if the indicesArray goes over 64k.\n  //if it\'s the same polyline while it goes over 64k, the offset needs to backtrack componentsPerAttribute * componentDatatype bytes\n  //so that the polyline looks contiguous.\n  //if the polyline ends at the 64k mark, then the offset is just 64k * componentsPerAttribute * componentDatatype\n  var vertexBufferOffset = [0];\n  var offset = 0;\n  var vertexArrayBuckets = [[]];\n  var totalLength = 0;\n  var polylineBuckets = collection._polylineBuckets;\n  var x;\n  var bucket;\n  for (x in polylineBuckets) {\n    if (polylineBuckets.hasOwnProperty(x)) {\n      bucket = polylineBuckets[x];\n      bucket.updateShader(context, batchTable, useHighlightColor);\n      totalLength += bucket.lengthOfPositions;\n    }\n  }\n\n  if (totalLength > 0) {\n    var mode = collection._mode;\n\n    var positionArray = new Float32Array(6 * totalLength * 3);\n    var texCoordExpandAndBatchIndexArray = new Float32Array(totalLength * 4);\n    var position3DArray;\n\n    var positionIndex = 0;\n    var colorIndex = 0;\n    var texCoordExpandAndBatchIndexIndex = 0;\n    for (x in polylineBuckets) {\n      if (polylineBuckets.hasOwnProperty(x)) {\n        bucket = polylineBuckets[x];\n        bucket.write(\n          positionArray,\n          texCoordExpandAndBatchIndexArray,\n          positionIndex,\n          colorIndex,\n          texCoordExpandAndBatchIndexIndex,\n          batchTable,\n          context,\n          projection\n        );\n\n        if (mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].MORPHING */ .Z.MORPHING) {\n          if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(position3DArray)) {\n            position3DArray = new Float32Array(6 * totalLength * 3);\n          }\n          bucket.writeForMorph(position3DArray, positionIndex);\n        }\n\n        var bucketLength = bucket.lengthOfPositions;\n        positionIndex += 6 * bucketLength * 3;\n        colorIndex += bucketLength * 4;\n        texCoordExpandAndBatchIndexIndex += bucketLength * 4;\n        offset = bucket.updateIndices(\n          totalIndices,\n          vertexBufferOffset,\n          vertexArrayBuckets,\n          offset\n        );\n      }\n    }\n\n    var positionBufferUsage = collection._positionBufferUsage.bufferUsage;\n    var texCoordExpandAndBatchIndexBufferUsage = _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW;\n\n    collection._positionBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: positionArray,\n      usage: positionBufferUsage,\n    });\n    var position3DBuffer;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(position3DArray)) {\n      position3DBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n        context: context,\n        typedArray: position3DArray,\n        usage: positionBufferUsage,\n      });\n    }\n    collection._texCoordExpandAndBatchIndexBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: texCoordExpandAndBatchIndexArray,\n      usage: texCoordExpandAndBatchIndexBufferUsage,\n    });\n\n    var positionSizeInBytes = 3 * Float32Array.BYTES_PER_ELEMENT;\n    var texCoordExpandAndBatchIndexSizeInBytes =\n      4 * Float32Array.BYTES_PER_ELEMENT;\n\n    var vbo = 0;\n    var numberOfIndicesArrays = totalIndices.length;\n    for (var k = 0; k < numberOfIndicesArrays; ++k) {\n      indices = totalIndices[k];\n\n      if (indices.length > 0) {\n        var indicesArray = new Uint16Array(indices);\n        var indexBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].createIndexBuffer */ .Z.createIndexBuffer({\n          context: context,\n          typedArray: indicesArray,\n          usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n          indexDatatype: _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n        });\n\n        vbo += vertexBufferOffset[k];\n\n        var positionHighOffset =\n          6 *\n          (k * (positionSizeInBytes * _Core_Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SIXTY_FOUR_KILOBYTES */ .Z.SIXTY_FOUR_KILOBYTES) -\n            vbo * positionSizeInBytes); //componentsPerAttribute(3) * componentDatatype(4)\n        var positionLowOffset = positionSizeInBytes + positionHighOffset;\n        var prevPositionHighOffset = positionSizeInBytes + positionLowOffset;\n        var prevPositionLowOffset =\n          positionSizeInBytes + prevPositionHighOffset;\n        var nextPositionHighOffset =\n          positionSizeInBytes + prevPositionLowOffset;\n        var nextPositionLowOffset =\n          positionSizeInBytes + nextPositionHighOffset;\n        var vertexTexCoordExpandAndBatchIndexBufferOffset =\n          k *\n            (texCoordExpandAndBatchIndexSizeInBytes *\n              _Core_Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SIXTY_FOUR_KILOBYTES */ .Z.SIXTY_FOUR_KILOBYTES) -\n          vbo * texCoordExpandAndBatchIndexSizeInBytes;\n\n        var attributes = [\n          {\n            index: attributeLocations.position3DHigh,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: positionHighOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.position3DLow,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: positionLowOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.position2DHigh,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: positionHighOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.position2DLow,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: positionLowOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.prevPosition3DHigh,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: prevPositionHighOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.prevPosition3DLow,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: prevPositionLowOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.prevPosition2DHigh,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: prevPositionHighOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.prevPosition2DLow,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: prevPositionLowOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.nextPosition3DHigh,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: nextPositionHighOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.nextPosition3DLow,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: nextPositionLowOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.nextPosition2DHigh,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: nextPositionHighOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.nextPosition2DLow,\n            componentsPerAttribute: 3,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            offsetInBytes: nextPositionLowOffset,\n            strideInBytes: 6 * positionSizeInBytes,\n          },\n          {\n            index: attributeLocations.texCoordExpandAndBatchIndex,\n            componentsPerAttribute: 4,\n            componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FLOAT */ .Z.FLOAT,\n            vertexBuffer: collection._texCoordExpandAndBatchIndexBuffer,\n            offsetInBytes: vertexTexCoordExpandAndBatchIndexBufferOffset,\n          },\n        ];\n\n        var buffer3D;\n        var bufferProperty3D;\n        var buffer2D;\n        var bufferProperty2D;\n\n        if (mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n          buffer3D = collection._positionBuffer;\n          bufferProperty3D = "vertexBuffer";\n          buffer2D = emptyVertexBuffer;\n          bufferProperty2D = "value";\n        } else if (\n          mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE2D */ .Z.SCENE2D ||\n          mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].COLUMBUS_VIEW */ .Z.COLUMBUS_VIEW\n        ) {\n          buffer3D = emptyVertexBuffer;\n          bufferProperty3D = "value";\n          buffer2D = collection._positionBuffer;\n          bufferProperty2D = "vertexBuffer";\n        } else {\n          buffer3D = position3DBuffer;\n          bufferProperty3D = "vertexBuffer";\n          buffer2D = collection._positionBuffer;\n          bufferProperty2D = "vertexBuffer";\n        }\n\n        attributes[0][bufferProperty3D] = buffer3D;\n        attributes[1][bufferProperty3D] = buffer3D;\n        attributes[2][bufferProperty2D] = buffer2D;\n        attributes[3][bufferProperty2D] = buffer2D;\n        attributes[4][bufferProperty3D] = buffer3D;\n        attributes[5][bufferProperty3D] = buffer3D;\n        attributes[6][bufferProperty2D] = buffer2D;\n        attributes[7][bufferProperty2D] = buffer2D;\n        attributes[8][bufferProperty3D] = buffer3D;\n        attributes[9][bufferProperty3D] = buffer3D;\n        attributes[10][bufferProperty2D] = buffer2D;\n        attributes[11][bufferProperty2D] = buffer2D;\n\n        var va = new _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z({\n          context: context,\n          attributes: attributes,\n          indexBuffer: indexBuffer,\n        });\n        collection._vertexArrays.push({\n          va: va,\n          buckets: vertexArrayBuckets[k],\n        });\n      }\n    }\n  }\n}\n\nfunction replacer(key, value) {\n  if (value instanceof _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"] */ .Z) {\n    return value.id;\n  }\n\n  return value;\n}\n\nvar scratchUniformArray = [];\nfunction createMaterialId(material) {\n  var uniforms = _Material_js__WEBPACK_IMPORTED_MODULE_31__/* ["default"]._uniformList */ .Z._uniformList[material.type];\n  var length = uniforms.length;\n  scratchUniformArray.length = 2.0 * length;\n\n  var index = 0;\n  for (var i = 0; i < length; ++i) {\n    var uniform = uniforms[i];\n    scratchUniformArray[index] = uniform;\n    scratchUniformArray[index + 1] = material._uniforms[uniform]();\n    index += 2;\n  }\n\n  return material.type + ":" + JSON.stringify(scratchUniformArray, replacer);\n}\n\nfunction sortPolylinesIntoBuckets(collection) {\n  var mode = collection._mode;\n  var modelMatrix = collection._modelMatrix;\n\n  var polylineBuckets = (collection._polylineBuckets = {});\n  var polylines = collection._polylines;\n  var length = polylines.length;\n  for (var i = 0; i < length; ++i) {\n    var p = polylines[i];\n    if (p._actualPositions.length > 1) {\n      p.update();\n      var material = p.material;\n      var value = polylineBuckets[material.type];\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(value)) {\n        value = polylineBuckets[material.type] = new PolylineBucket(\n          material,\n          mode,\n          modelMatrix\n        );\n      }\n      value.addPolyline(p);\n    }\n  }\n}\n\nfunction updateMode(collection, frameState) {\n  var mode = frameState.mode;\n\n  if (\n    collection._mode !== mode ||\n    !_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].equals */ .Z.equals(collection._modelMatrix, collection.modelMatrix)\n  ) {\n    collection._mode = mode;\n    collection._modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].clone */ .Z.clone(collection.modelMatrix);\n    collection._createVertexArray = true;\n  }\n}\n\nfunction removePolylines(collection) {\n  if (collection._polylinesRemoved) {\n    collection._polylinesRemoved = false;\n    var definedPolylines = [];\n    var definedPolylinesToUpdate = [];\n    var polyIndex = 0;\n    var polyline;\n\n    var length = collection._polylines.length;\n    for (var i = 0; i < length; ++i) {\n      polyline = collection._polylines[i];\n      if (!polyline.isDestroyed) {\n        polyline._index = polyIndex++;\n        definedPolylinesToUpdate.push(polyline);\n        definedPolylines.push(polyline);\n      }\n    }\n\n    collection._polylines = definedPolylines;\n    collection._polylinesToUpdate = definedPolylinesToUpdate;\n  }\n}\n\nfunction releaseShaders(collection) {\n  var polylines = collection._polylines;\n  var length = polylines.length;\n  for (var i = 0; i < length; ++i) {\n    if (!polylines[i].isDestroyed) {\n      var bucket = polylines[i]._bucket;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(bucket)) {\n        bucket.shaderProgram =\n          bucket.shaderProgram && bucket.shaderProgram.destroy();\n      }\n    }\n  }\n}\n\nfunction destroyVertexArrays(collection) {\n  var length = collection._vertexArrays.length;\n  for (var t = 0; t < length; ++t) {\n    collection._vertexArrays[t].va.destroy();\n  }\n  collection._vertexArrays.length = 0;\n}\n\nPolylineCollection.prototype._updatePolyline = function (\n  polyline,\n  propertyChanged\n) {\n  this._polylinesUpdated = true;\n  if (!polyline._dirty) {\n    this._polylinesToUpdate.push(polyline);\n  }\n  ++this._propertiesChanged[propertyChanged];\n};\n\nfunction destroyPolylines(collection) {\n  var polylines = collection._polylines;\n  var length = polylines.length;\n  for (var i = 0; i < length; ++i) {\n    if (!polylines[i].isDestroyed) {\n      polylines[i]._destroy();\n    }\n  }\n}\n\nfunction VertexArrayBucketLocator(count, offset, bucket) {\n  this.count = count;\n  this.offset = offset;\n  this.bucket = bucket;\n}\n\nfunction PolylineBucket(material, mode, modelMatrix) {\n  this.polylines = [];\n  this.lengthOfPositions = 0;\n  this.material = material;\n  this.shaderProgram = undefined;\n  this.mode = mode;\n  this.modelMatrix = modelMatrix;\n}\n\nPolylineBucket.prototype.addPolyline = function (p) {\n  var polylines = this.polylines;\n  polylines.push(p);\n  p._actualLength = this.getPolylinePositionsLength(p);\n  this.lengthOfPositions += p._actualLength;\n  p._bucket = this;\n};\n\nPolylineBucket.prototype.updateShader = function (\n  context,\n  batchTable,\n  useHighlightColor\n) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(this.shaderProgram)) {\n    return;\n  }\n\n  var defines = ["DISTANCE_DISPLAY_CONDITION"];\n  if (useHighlightColor) {\n    defines.push("VECTOR_TILE");\n  }\n\n  // Check for use of v_polylineAngle in material shader\n  if (\n    this.material.shaderSource.search(/varying\\s+float\\s+v_polylineAngle;/g) !==\n    -1\n  ) {\n    defines.push("POLYLINE_DASH");\n  }\n\n  if (!_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].isInternetExplorer */ .Z.isInternetExplorer()) {\n    defines.push("CLIP_POLYLINE");\n  }\n\n  var fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z({\n    defines: defines,\n    sources: [\n      "varying vec4 v_pickColor;\\n",\n      this.material.shaderSource,\n      _Shaders_PolylineFS_js__WEBPACK_IMPORTED_MODULE_35__/* ["default"] */ .Z,\n    ],\n  });\n\n  var vsSource = batchTable.getVertexShaderCallback()(_Shaders_PolylineVS_js__WEBPACK_IMPORTED_MODULE_36__/* ["default"] */ .Z);\n  var vs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z({\n    defines: defines,\n    sources: [_Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"] */ .Z, vsSource],\n  });\n\n  this.shaderProgram = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"].fromCache */ .Z.fromCache({\n    context: context,\n    vertexShaderSource: vs,\n    fragmentShaderSource: fs,\n    attributeLocations: attributeLocations,\n  });\n};\n\nfunction intersectsIDL(polyline) {\n  return (\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].dot */ .Z.dot(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNIT_X */ .Z.UNIT_X, polyline._boundingVolume.center) < 0 ||\n    polyline._boundingVolume.intersectPlane(_Core_Plane_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].ORIGIN_ZX_PLANE */ .Z.ORIGIN_ZX_PLANE) ===\n      _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].INTERSECTING */ .Z.INTERSECTING\n  );\n}\n\nPolylineBucket.prototype.getPolylinePositionsLength = function (polyline) {\n  var length;\n  if (this.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE3D */ .Z.SCENE3D || !intersectsIDL(polyline)) {\n    length = polyline._actualPositions.length;\n    return length * 4.0 - 4.0;\n  }\n\n  var count = 0;\n  var segmentLengths = polyline._segments.lengths;\n  length = segmentLengths.length;\n  for (var i = 0; i < length; ++i) {\n    count += segmentLengths[i] * 4.0 - 4.0;\n  }\n\n  return count;\n};\n\nvar scratchWritePosition = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchWritePrevPosition = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchWriteNextPosition = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchWriteVector = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchPickColorCartesian = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchWidthShowCartesian = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nPolylineBucket.prototype.write = function (\n  positionArray,\n  texCoordExpandAndBatchIndexArray,\n  positionIndex,\n  colorIndex,\n  texCoordExpandAndBatchIndexIndex,\n  batchTable,\n  context,\n  projection\n) {\n  var mode = this.mode;\n  var maxLon = projection.ellipsoid.maximumRadius * _Core_Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].PI */ .Z.PI;\n\n  var polylines = this.polylines;\n  var length = polylines.length;\n  for (var i = 0; i < length; ++i) {\n    var polyline = polylines[i];\n    var width = polyline.width;\n    var show = polyline.show && width > 0.0;\n    var polylineBatchIndex = polyline._index;\n    var segments = this.getSegments(polyline, projection);\n    var positions = segments.positions;\n    var lengths = segments.lengths;\n    var positionsLength = positions.length;\n\n    var pickColor = polyline.getPickId(context).color;\n\n    var segmentIndex = 0;\n    var count = 0;\n    var position;\n\n    for (var j = 0; j < positionsLength; ++j) {\n      if (j === 0) {\n        if (polyline._loop) {\n          position = positions[positionsLength - 2];\n        } else {\n          position = scratchWriteVector;\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(positions[0], positions[1], position);\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(positions[0], position, position);\n        }\n      } else {\n        position = positions[j - 1];\n      }\n\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(position, scratchWritePrevPosition);\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(positions[j], scratchWritePosition);\n\n      if (j === positionsLength - 1) {\n        if (polyline._loop) {\n          position = positions[1];\n        } else {\n          position = scratchWriteVector;\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(\n            positions[positionsLength - 1],\n            positions[positionsLength - 2],\n            position\n          );\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(positions[positionsLength - 1], position, position);\n        }\n      } else {\n        position = positions[j + 1];\n      }\n\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(position, scratchWriteNextPosition);\n\n      var segmentLength = lengths[segmentIndex];\n      if (j === count + segmentLength) {\n        count += segmentLength;\n        ++segmentIndex;\n      }\n\n      var segmentStart = j - count === 0;\n      var segmentEnd = j === count + lengths[segmentIndex] - 1;\n\n      if (mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE2D */ .Z.SCENE2D) {\n        scratchWritePrevPosition.z = 0.0;\n        scratchWritePosition.z = 0.0;\n        scratchWriteNextPosition.z = 0.0;\n      }\n\n      if (mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE2D */ .Z.SCENE2D || mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].MORPHING */ .Z.MORPHING) {\n        if (\n          (segmentStart || segmentEnd) &&\n          maxLon - Math.abs(scratchWritePosition.x) < 1.0\n        ) {\n          if (\n            (scratchWritePosition.x < 0.0 &&\n              scratchWritePrevPosition.x > 0.0) ||\n            (scratchWritePosition.x > 0.0 && scratchWritePrevPosition.x < 0.0)\n          ) {\n            _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(scratchWritePosition, scratchWritePrevPosition);\n          }\n\n          if (\n            (scratchWritePosition.x < 0.0 &&\n              scratchWriteNextPosition.x > 0.0) ||\n            (scratchWritePosition.x > 0.0 && scratchWriteNextPosition.x < 0.0)\n          ) {\n            _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(scratchWritePosition, scratchWriteNextPosition);\n          }\n        }\n      }\n\n      var startK = segmentStart ? 2 : 0;\n      var endK = segmentEnd ? 2 : 4;\n\n      for (var k = startK; k < endK; ++k) {\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(\n          scratchWritePosition,\n          positionArray,\n          positionIndex\n        );\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(\n          scratchWritePrevPosition,\n          positionArray,\n          positionIndex + 6\n        );\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(\n          scratchWriteNextPosition,\n          positionArray,\n          positionIndex + 12\n        );\n\n        var direction = k - 2 < 0 ? -1.0 : 1.0;\n        texCoordExpandAndBatchIndexArray[texCoordExpandAndBatchIndexIndex] =\n          j / (positionsLength - 1); // s tex coord\n        texCoordExpandAndBatchIndexArray[texCoordExpandAndBatchIndexIndex + 1] =\n          2 * (k % 2) - 1; // expand direction\n        texCoordExpandAndBatchIndexArray[\n          texCoordExpandAndBatchIndexIndex + 2\n        ] = direction;\n        texCoordExpandAndBatchIndexArray[\n          texCoordExpandAndBatchIndexIndex + 3\n        ] = polylineBatchIndex;\n\n        positionIndex += 6 * 3;\n        texCoordExpandAndBatchIndexIndex += 4;\n      }\n    }\n\n    var colorCartesian = scratchPickColorCartesian;\n    colorCartesian.x = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.red);\n    colorCartesian.y = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.green);\n    colorCartesian.z = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.blue);\n    colorCartesian.w = _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].floatToByte */ .Z.floatToByte(pickColor.alpha);\n\n    var widthShowCartesian = scratchWidthShowCartesian;\n    widthShowCartesian.x = width;\n    widthShowCartesian.y = show ? 1.0 : 0.0;\n\n    var boundingSphere =\n      mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE2D */ .Z.SCENE2D\n        ? polyline._boundingVolume2D\n        : polyline._boundingVolumeWC;\n    var encodedCenter = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].fromCartesian */ .Z.fromCartesian(\n      boundingSphere.center,\n      scratchUpdatePolylineEncodedCartesian\n    );\n    var high = encodedCenter.high;\n    var low = _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromElements */ .Z.fromElements(\n      encodedCenter.low.x,\n      encodedCenter.low.y,\n      encodedCenter.low.z,\n      boundingSphere.radius,\n      scratchUpdatePolylineCartesian4\n    );\n\n    var nearFarCartesian = scratchNearFarCartesian2;\n    nearFarCartesian.x = 0.0;\n    nearFarCartesian.y = Number.MAX_VALUE;\n\n    var distanceDisplayCondition = polyline.distanceDisplayCondition;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(distanceDisplayCondition)) {\n      nearFarCartesian.x = distanceDisplayCondition.near;\n      nearFarCartesian.y = distanceDisplayCondition.far;\n    }\n\n    batchTable.setBatchedAttribute(polylineBatchIndex, 0, widthShowCartesian);\n    batchTable.setBatchedAttribute(polylineBatchIndex, 1, colorCartesian);\n\n    if (batchTable.attributes.length > 2) {\n      batchTable.setBatchedAttribute(polylineBatchIndex, 2, high);\n      batchTable.setBatchedAttribute(polylineBatchIndex, 3, low);\n      batchTable.setBatchedAttribute(polylineBatchIndex, 4, nearFarCartesian);\n    }\n  }\n};\n\nvar morphPositionScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar morphPrevPositionScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar morphNextPositionScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar morphVectorScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nPolylineBucket.prototype.writeForMorph = function (\n  positionArray,\n  positionIndex\n) {\n  var modelMatrix = this.modelMatrix;\n  var polylines = this.polylines;\n  var length = polylines.length;\n  for (var i = 0; i < length; ++i) {\n    var polyline = polylines[i];\n    var positions = polyline._segments.positions;\n    var lengths = polyline._segments.lengths;\n    var positionsLength = positions.length;\n\n    var segmentIndex = 0;\n    var count = 0;\n\n    for (var j = 0; j < positionsLength; ++j) {\n      var prevPosition;\n      if (j === 0) {\n        if (polyline._loop) {\n          prevPosition = positions[positionsLength - 2];\n        } else {\n          prevPosition = morphVectorScratch;\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(positions[0], positions[1], prevPosition);\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(positions[0], prevPosition, prevPosition);\n        }\n      } else {\n        prevPosition = positions[j - 1];\n      }\n\n      prevPosition = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n        modelMatrix,\n        prevPosition,\n        morphPrevPositionScratch\n      );\n\n      var position = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n        modelMatrix,\n        positions[j],\n        morphPositionScratch\n      );\n\n      var nextPosition;\n      if (j === positionsLength - 1) {\n        if (polyline._loop) {\n          nextPosition = positions[1];\n        } else {\n          nextPosition = morphVectorScratch;\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(\n            positions[positionsLength - 1],\n            positions[positionsLength - 2],\n            nextPosition\n          );\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(\n            positions[positionsLength - 1],\n            nextPosition,\n            nextPosition\n          );\n        }\n      } else {\n        nextPosition = positions[j + 1];\n      }\n\n      nextPosition = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n        modelMatrix,\n        nextPosition,\n        morphNextPositionScratch\n      );\n\n      var segmentLength = lengths[segmentIndex];\n      if (j === count + segmentLength) {\n        count += segmentLength;\n        ++segmentIndex;\n      }\n\n      var segmentStart = j - count === 0;\n      var segmentEnd = j === count + lengths[segmentIndex] - 1;\n\n      var startK = segmentStart ? 2 : 0;\n      var endK = segmentEnd ? 2 : 4;\n\n      for (var k = startK; k < endK; ++k) {\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(position, positionArray, positionIndex);\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(\n          prevPosition,\n          positionArray,\n          positionIndex + 6\n        );\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(\n          nextPosition,\n          positionArray,\n          positionIndex + 12\n        );\n\n        positionIndex += 6 * 3;\n      }\n    }\n  }\n};\n\nvar scratchSegmentLengths = new Array(1);\n\nPolylineBucket.prototype.updateIndices = function (\n  totalIndices,\n  vertexBufferOffset,\n  vertexArrayBuckets,\n  offset\n) {\n  var vaCount = vertexArrayBuckets.length - 1;\n  var bucketLocator = new VertexArrayBucketLocator(0, offset, this);\n  vertexArrayBuckets[vaCount].push(bucketLocator);\n  var count = 0;\n  var indices = totalIndices[totalIndices.length - 1];\n  var indicesCount = 0;\n  if (indices.length > 0) {\n    indicesCount = indices[indices.length - 1] + 1;\n  }\n  var polylines = this.polylines;\n  var length = polylines.length;\n  for (var i = 0; i < length; ++i) {\n    var polyline = polylines[i];\n    polyline._locatorBuckets = [];\n\n    var segments;\n    if (this.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n      segments = scratchSegmentLengths;\n      var positionsLength = polyline._actualPositions.length;\n      if (positionsLength > 0) {\n        segments[0] = positionsLength;\n      } else {\n        continue;\n      }\n    } else {\n      segments = polyline._segments.lengths;\n    }\n\n    var numberOfSegments = segments.length;\n    if (numberOfSegments > 0) {\n      var segmentIndexCount = 0;\n      for (var j = 0; j < numberOfSegments; ++j) {\n        var segmentLength = segments[j] - 1.0;\n        for (var k = 0; k < segmentLength; ++k) {\n          if (indicesCount + 4 > _Core_Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SIXTY_FOUR_KILOBYTES */ .Z.SIXTY_FOUR_KILOBYTES) {\n            polyline._locatorBuckets.push({\n              locator: bucketLocator,\n              count: segmentIndexCount,\n            });\n            segmentIndexCount = 0;\n            vertexBufferOffset.push(4);\n            indices = [];\n            totalIndices.push(indices);\n            indicesCount = 0;\n            bucketLocator.count = count;\n            count = 0;\n            offset = 0;\n            bucketLocator = new VertexArrayBucketLocator(0, 0, this);\n            vertexArrayBuckets[++vaCount] = [bucketLocator];\n          }\n\n          indices.push(indicesCount, indicesCount + 2, indicesCount + 1);\n          indices.push(indicesCount + 1, indicesCount + 2, indicesCount + 3);\n\n          segmentIndexCount += 6;\n          count += 6;\n          offset += 6;\n          indicesCount += 4;\n        }\n      }\n\n      polyline._locatorBuckets.push({\n        locator: bucketLocator,\n        count: segmentIndexCount,\n      });\n\n      if (indicesCount + 4 > _Core_Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SIXTY_FOUR_KILOBYTES */ .Z.SIXTY_FOUR_KILOBYTES) {\n        vertexBufferOffset.push(0);\n        indices = [];\n        totalIndices.push(indices);\n        indicesCount = 0;\n        bucketLocator.count = count;\n        offset = 0;\n        count = 0;\n        bucketLocator = new VertexArrayBucketLocator(0, 0, this);\n        vertexArrayBuckets[++vaCount] = [bucketLocator];\n      }\n    }\n    polyline._clean();\n  }\n  bucketLocator.count = count;\n  return offset;\n};\n\nPolylineBucket.prototype.getPolylineStartIndex = function (polyline) {\n  var polylines = this.polylines;\n  var positionIndex = 0;\n  var length = polylines.length;\n  for (var i = 0; i < length; ++i) {\n    var p = polylines[i];\n    if (p === polyline) {\n      break;\n    }\n    positionIndex += p._actualLength;\n  }\n  return positionIndex;\n};\n\nvar scratchSegments = {\n  positions: undefined,\n  lengths: undefined,\n};\nvar scratchLengths = new Array(1);\nvar pscratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar scratchCartographic = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nPolylineBucket.prototype.getSegments = function (polyline, projection) {\n  var positions = polyline._actualPositions;\n\n  if (this.mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n    scratchLengths[0] = positions.length;\n    scratchSegments.positions = positions;\n    scratchSegments.lengths = scratchLengths;\n    return scratchSegments;\n  }\n\n  if (intersectsIDL(polyline)) {\n    positions = polyline._segments.positions;\n  }\n\n  var ellipsoid = projection.ellipsoid;\n  var newPositions = [];\n  var modelMatrix = this.modelMatrix;\n  var length = positions.length;\n  var position;\n  var p = pscratch;\n\n  for (var n = 0; n < length; ++n) {\n    position = positions[n];\n    p = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(modelMatrix, position, p);\n    newPositions.push(\n      projection.project(\n        ellipsoid.cartesianToCartographic(p, scratchCartographic)\n      )\n    );\n  }\n\n  if (newPositions.length > 0) {\n    polyline._boundingVolume2D = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromPoints */ .Z.fromPoints(\n      newPositions,\n      polyline._boundingVolume2D\n    );\n    var center2D = polyline._boundingVolume2D.center;\n    polyline._boundingVolume2D.center = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      center2D.z,\n      center2D.x,\n      center2D.y\n    );\n  }\n\n  scratchSegments.positions = newPositions;\n  scratchSegments.lengths = polyline._segments.lengths;\n  return scratchSegments;\n};\n\nvar scratchPositionsArray;\n\nPolylineBucket.prototype.writeUpdate = function (\n  index,\n  polyline,\n  positionBuffer,\n  projection\n) {\n  var mode = this.mode;\n  var maxLon = projection.ellipsoid.maximumRadius * _Core_Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].PI */ .Z.PI;\n\n  var positionsLength = polyline._actualLength;\n  if (positionsLength) {\n    index += this.getPolylineStartIndex(polyline);\n\n    var positionArray = scratchPositionsArray;\n    var positionsArrayLength = 6 * positionsLength * 3;\n\n    if (\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z)(positionArray) ||\n      positionArray.length < positionsArrayLength\n    ) {\n      positionArray = scratchPositionsArray = new Float32Array(\n        positionsArrayLength\n      );\n    } else if (positionArray.length > positionsArrayLength) {\n      positionArray = new Float32Array(\n        positionArray.buffer,\n        0,\n        positionsArrayLength\n      );\n    }\n\n    var segments = this.getSegments(polyline, projection);\n    var positions = segments.positions;\n    var lengths = segments.lengths;\n\n    var positionIndex = 0;\n    var segmentIndex = 0;\n    var count = 0;\n    var position;\n\n    positionsLength = positions.length;\n    for (var i = 0; i < positionsLength; ++i) {\n      if (i === 0) {\n        if (polyline._loop) {\n          position = positions[positionsLength - 2];\n        } else {\n          position = scratchWriteVector;\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(positions[0], positions[1], position);\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(positions[0], position, position);\n        }\n      } else {\n        position = positions[i - 1];\n      }\n\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(position, scratchWritePrevPosition);\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(positions[i], scratchWritePosition);\n\n      if (i === positionsLength - 1) {\n        if (polyline._loop) {\n          position = positions[1];\n        } else {\n          position = scratchWriteVector;\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].subtract */ .Z.subtract(\n            positions[positionsLength - 1],\n            positions[positionsLength - 2],\n            position\n          );\n          _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].add */ .Z.add(positions[positionsLength - 1], position, position);\n        }\n      } else {\n        position = positions[i + 1];\n      }\n\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(position, scratchWriteNextPosition);\n\n      var segmentLength = lengths[segmentIndex];\n      if (i === count + segmentLength) {\n        count += segmentLength;\n        ++segmentIndex;\n      }\n\n      var segmentStart = i - count === 0;\n      var segmentEnd = i === count + lengths[segmentIndex] - 1;\n\n      if (mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE2D */ .Z.SCENE2D) {\n        scratchWritePrevPosition.z = 0.0;\n        scratchWritePosition.z = 0.0;\n        scratchWriteNextPosition.z = 0.0;\n      }\n\n      if (mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].SCENE2D */ .Z.SCENE2D || mode === _SceneMode_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"].MORPHING */ .Z.MORPHING) {\n        if (\n          (segmentStart || segmentEnd) &&\n          maxLon - Math.abs(scratchWritePosition.x) < 1.0\n        ) {\n          if (\n            (scratchWritePosition.x < 0.0 &&\n              scratchWritePrevPosition.x > 0.0) ||\n            (scratchWritePosition.x > 0.0 && scratchWritePrevPosition.x < 0.0)\n          ) {\n            _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(scratchWritePosition, scratchWritePrevPosition);\n          }\n\n          if (\n            (scratchWritePosition.x < 0.0 &&\n              scratchWriteNextPosition.x > 0.0) ||\n            (scratchWritePosition.x > 0.0 && scratchWriteNextPosition.x < 0.0)\n          ) {\n            _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(scratchWritePosition, scratchWriteNextPosition);\n          }\n        }\n      }\n\n      var startJ = segmentStart ? 2 : 0;\n      var endJ = segmentEnd ? 2 : 4;\n\n      for (var j = startJ; j < endJ; ++j) {\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(\n          scratchWritePosition,\n          positionArray,\n          positionIndex\n        );\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(\n          scratchWritePrevPosition,\n          positionArray,\n          positionIndex + 6\n        );\n        _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].writeElements */ .Z.writeElements(\n          scratchWriteNextPosition,\n          positionArray,\n          positionIndex + 12\n        );\n        positionIndex += 6 * 3;\n      }\n    }\n\n    positionBuffer.copyFromArrayView(\n      positionArray,\n      6 * 3 * Float32Array.BYTES_PER_ELEMENT * index\n    );\n  }\n};\n/* harmony default export */ __webpack_exports__["Z"] = (PolylineCollection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///56764\n')},54052:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(96037);\n/* harmony import */ var _Core_VertexFormat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67252);\n/* harmony import */ var _Shaders_Appearances_PerInstanceFlatColorAppearanceFS_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(76257);\n/* harmony import */ var _Shaders_Appearances_PolylineColorAppearanceVS_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12120);\n/* harmony import */ var _Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94373);\n/* harmony import */ var _Appearance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12804);\n\n\n\n\n\n\n\n\nvar defaultVertexShaderSource =\n  _Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z + "\\n" + _Shaders_Appearances_PolylineColorAppearanceVS_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z;\nvar defaultFragmentShaderSource = _Shaders_Appearances_PerInstanceFlatColorAppearanceFS_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z;\n\nif (!_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].isInternetExplorer */ .Z.isInternetExplorer()) {\n  defaultVertexShaderSource =\n    "#define CLIP_POLYLINE \\n" + defaultVertexShaderSource;\n}\n\n/**\n * An appearance for {@link GeometryInstance} instances with color attributes and\n * {@link PolylineGeometry} or {@link GroundPolylineGeometry}.\n * This allows several geometry instances, each with a different color, to\n * be drawn with the same {@link Primitive}.\n *\n * @alias PolylineColorAppearance\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Boolean} [options.translucent=true] When <code>true</code>, the geometry is expected to appear translucent so {@link PolylineColorAppearance#renderState} has alpha blending enabled.\n * @param {String} [options.vertexShaderSource] Optional GLSL vertex shader source to override the default vertex shader.\n * @param {String} [options.fragmentShaderSource] Optional GLSL fragment shader source to override the default fragment shader.\n * @param {Object} [options.renderState] Optional render state to override the default render state.\n *\n * @example\n * // A solid white line segment\n * var primitive = new Cesium.Primitive({\n *   geometryInstances : new Cesium.GeometryInstance({\n *     geometry : new Cesium.PolylineGeometry({\n *       positions : Cesium.Cartesian3.fromDegreesArray([\n *         0.0, 0.0,\n *         5.0, 0.0\n *       ]),\n *       width : 10.0,\n *       vertexFormat : Cesium.PolylineColorAppearance.VERTEX_FORMAT\n *     }),\n *     attributes : {\n *       color : Cesium.ColorGeometryInstanceAttribute.fromColor(new Cesium.Color(1.0, 1.0, 1.0, 1.0))\n *     }\n *   }),\n *   appearance : new Cesium.PolylineColorAppearance({\n *     translucent : false\n *   })\n * });\n */\nfunction PolylineColorAppearance(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var translucent = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.translucent, true);\n  var closed = false;\n  var vertexFormat = PolylineColorAppearance.VERTEX_FORMAT;\n\n  /**\n   * This property is part of the {@link Appearance} interface, but is not\n   * used by {@link PolylineColorAppearance} since a fully custom fragment shader is used.\n   *\n   * @type Material\n   *\n   * @default undefined\n   */\n  this.material = undefined;\n\n  /**\n   * When <code>true</code>, the geometry is expected to appear translucent so\n   * {@link PolylineColorAppearance#renderState} has alpha blending enabled.\n   *\n   * @type {Boolean}\n   *\n   * @default true\n   */\n  this.translucent = translucent;\n\n  this._vertexShaderSource = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    options.vertexShaderSource,\n    defaultVertexShaderSource\n  );\n  this._fragmentShaderSource = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    options.fragmentShaderSource,\n    defaultFragmentShaderSource\n  );\n  this._renderState = _Appearance_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getDefaultRenderState */ .Z.getDefaultRenderState(\n    translucent,\n    closed,\n    options.renderState\n  );\n  this._closed = closed;\n\n  // Non-derived members\n\n  this._vertexFormat = vertexFormat;\n}\n\nObject.defineProperties(PolylineColorAppearance.prototype, {\n  /**\n   * The GLSL source code for the vertex shader.\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  vertexShaderSource: {\n    get: function () {\n      return this._vertexShaderSource;\n    },\n  },\n\n  /**\n   * The GLSL source code for the fragment shader.\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  fragmentShaderSource: {\n    get: function () {\n      return this._fragmentShaderSource;\n    },\n  },\n\n  /**\n   * The WebGL fixed-function state to use when rendering the geometry.\n   * <p>\n   * The render state can be explicitly defined when constructing a {@link PolylineColorAppearance}\n   * instance, or it is set implicitly via {@link PolylineColorAppearance#translucent}.\n   * </p>\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  renderState: {\n    get: function () {\n      return this._renderState;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the geometry is expected to be closed so\n   * {@link PolylineColorAppearance#renderState} has backface culling enabled.\n   * This is always <code>false</code> for <code>PolylineColorAppearance</code>.\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  closed: {\n    get: function () {\n      return this._closed;\n    },\n  },\n\n  /**\n   * The {@link VertexFormat} that this appearance instance is compatible with.\n   * A geometry can have more vertex attributes and still be compatible - at a\n   * potential performance cost - but it can\'t have less.\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type VertexFormat\n   * @readonly\n   *\n   * @default {@link PolylineColorAppearance.VERTEX_FORMAT}\n   */\n  vertexFormat: {\n    get: function () {\n      return this._vertexFormat;\n    },\n  },\n});\n\n/**\n * The {@link VertexFormat} that all {@link PolylineColorAppearance} instances\n * are compatible with. This requires only a <code>position</code> attribute.\n *\n * @type VertexFormat\n *\n * @constant\n */\nPolylineColorAppearance.VERTEX_FORMAT = _Core_VertexFormat_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].POSITION_ONLY */ .Z.POSITION_ONLY;\n\n/**\n * Procedurally creates the full GLSL fragment shader source.\n *\n * @function\n *\n * @returns {String} The full GLSL fragment shader source.\n */\nPolylineColorAppearance.prototype.getFragmentShaderSource =\n  _Appearance_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].prototype.getFragmentShaderSource */ .Z.prototype.getFragmentShaderSource;\n\n/**\n * Determines if the geometry is translucent based on {@link PolylineColorAppearance#translucent}.\n *\n * @function\n *\n * @returns {Boolean} <code>true</code> if the appearance is translucent.\n */\nPolylineColorAppearance.prototype.isTranslucent =\n  _Appearance_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].prototype.isTranslucent */ .Z.prototype.isTranslucent;\n\n/**\n * Creates a render state.  This is not the final render state instance; instead,\n * it can contain a subset of render state properties identical to the render state\n * created in the context.\n *\n * @function\n *\n * @returns {Object} The render state.\n */\nPolylineColorAppearance.prototype.getRenderState =\n  _Appearance_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].prototype.getRenderState */ .Z.prototype.getRenderState;\n/* harmony default export */ __webpack_exports__["Z"] = (PolylineColorAppearance);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwNTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUNRO0FBQ1I7QUFDdUQ7QUFDZDtBQUNsQztBQUNqQjs7QUFFekM7QUFDQSxFQUFFLDJFQUFjLFVBQVUsa0dBQXlCO0FBQ25ELGtDQUFrQyx5R0FBZ0M7O0FBRWxFLEtBQUssZ0hBQW1DO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNCQUFzQix3QkFBd0I7QUFDOUMsSUFBSSx3QkFBd0IsSUFBSSw2QkFBNkI7QUFDN0Q7QUFDQSwyQkFBMkIsZ0JBQWdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUyxzR0FBc0csMkNBQTJDO0FBQ3JLLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTixJQUFJO0FBQ0o7QUFDQTtBQUNBLFlBQVksMEVBQVksVUFBVSxnR0FBeUI7O0FBRTNELG9CQUFvQiwwRUFBWTtBQUNoQztBQUNBOztBQUVBO0FBQ0EsbUNBQW1DLGtCQUFrQjtBQUNyRCxjQUFjLCtCQUErQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU0sMkNBQTJDO0FBQ2pEO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDZCQUE2QiwwRUFBWTtBQUN6QztBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMEVBQVk7QUFDM0M7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJHQUFnQztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxxRUFBcUU7QUFDckUsNENBQTRDLDBDQUEwQztBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLE1BQU0sMkNBQTJDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQSxVQUFVLG9CQUFvQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0EsUUFBUSxvQkFBb0IsVUFBVSwrQkFBK0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGtHQUEwQjs7QUFFbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsRUFBRSxtSUFBNEM7O0FBRTlDO0FBQ0EsdURBQXVELDBDQUEwQztBQUNqRztBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLEVBQUUsK0dBQWtDOztBQUVwQztBQUNBLHlFQUF5RTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSxFQUFFLGlIQUFtQztBQUNyQyx5REFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9Qb2x5bGluZUNvbG9yQXBwZWFyYW5jZS5qcz9kOGYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4uL0NvcmUvZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgRmVhdHVyZURldGVjdGlvbiBmcm9tIFwiLi4vQ29yZS9GZWF0dXJlRGV0ZWN0aW9uLmpzXCI7XG5pbXBvcnQgVmVydGV4Rm9ybWF0IGZyb20gXCIuLi9Db3JlL1ZlcnRleEZvcm1hdC5qc1wiO1xuaW1wb3J0IFBlckluc3RhbmNlRmxhdENvbG9yQXBwZWFyYW5jZUZTIGZyb20gXCIuLi9TaGFkZXJzL0FwcGVhcmFuY2VzL1Blckluc3RhbmNlRmxhdENvbG9yQXBwZWFyYW5jZUZTLmpzXCI7XG5pbXBvcnQgUG9seWxpbmVDb2xvckFwcGVhcmFuY2VWUyBmcm9tIFwiLi4vU2hhZGVycy9BcHBlYXJhbmNlcy9Qb2x5bGluZUNvbG9yQXBwZWFyYW5jZVZTLmpzXCI7XG5pbXBvcnQgUG9seWxpbmVDb21tb24gZnJvbSBcIi4uL1NoYWRlcnMvUG9seWxpbmVDb21tb24uanNcIjtcbmltcG9ydCBBcHBlYXJhbmNlIGZyb20gXCIuL0FwcGVhcmFuY2UuanNcIjtcblxudmFyIGRlZmF1bHRWZXJ0ZXhTaGFkZXJTb3VyY2UgPVxuICBQb2x5bGluZUNvbW1vbiArIFwiXFxuXCIgKyBQb2x5bGluZUNvbG9yQXBwZWFyYW5jZVZTO1xudmFyIGRlZmF1bHRGcmFnbWVudFNoYWRlclNvdXJjZSA9IFBlckluc3RhbmNlRmxhdENvbG9yQXBwZWFyYW5jZUZTO1xuXG5pZiAoIUZlYXR1cmVEZXRlY3Rpb24uaXNJbnRlcm5ldEV4cGxvcmVyKCkpIHtcbiAgZGVmYXVsdFZlcnRleFNoYWRlclNvdXJjZSA9XG4gICAgXCIjZGVmaW5lIENMSVBfUE9MWUxJTkUgXFxuXCIgKyBkZWZhdWx0VmVydGV4U2hhZGVyU291cmNlO1xufVxuXG4vKipcbiAqIEFuIGFwcGVhcmFuY2UgZm9yIHtAbGluayBHZW9tZXRyeUluc3RhbmNlfSBpbnN0YW5jZXMgd2l0aCBjb2xvciBhdHRyaWJ1dGVzIGFuZFxuICoge0BsaW5rIFBvbHlsaW5lR2VvbWV0cnl9IG9yIHtAbGluayBHcm91bmRQb2x5bGluZUdlb21ldHJ5fS5cbiAqIFRoaXMgYWxsb3dzIHNldmVyYWwgZ2VvbWV0cnkgaW5zdGFuY2VzLCBlYWNoIHdpdGggYSBkaWZmZXJlbnQgY29sb3IsIHRvXG4gKiBiZSBkcmF3biB3aXRoIHRoZSBzYW1lIHtAbGluayBQcmltaXRpdmV9LlxuICpcbiAqIEBhbGlhcyBQb2x5bGluZUNvbG9yQXBwZWFyYW5jZVxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBPYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnRyYW5zbHVjZW50PXRydWVdIFdoZW4gPGNvZGU+dHJ1ZTwvY29kZT4sIHRoZSBnZW9tZXRyeSBpcyBleHBlY3RlZCB0byBhcHBlYXIgdHJhbnNsdWNlbnQgc28ge0BsaW5rIFBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlI3JlbmRlclN0YXRlfSBoYXMgYWxwaGEgYmxlbmRpbmcgZW5hYmxlZC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy52ZXJ0ZXhTaGFkZXJTb3VyY2VdIE9wdGlvbmFsIEdMU0wgdmVydGV4IHNoYWRlciBzb3VyY2UgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgdmVydGV4IHNoYWRlci5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5mcmFnbWVudFNoYWRlclNvdXJjZV0gT3B0aW9uYWwgR0xTTCBmcmFnbWVudCBzaGFkZXIgc291cmNlIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGZyYWdtZW50IHNoYWRlci5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5yZW5kZXJTdGF0ZV0gT3B0aW9uYWwgcmVuZGVyIHN0YXRlIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IHJlbmRlciBzdGF0ZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQSBzb2xpZCB3aGl0ZSBsaW5lIHNlZ21lbnRcbiAqIHZhciBwcmltaXRpdmUgPSBuZXcgQ2VzaXVtLlByaW1pdGl2ZSh7XG4gKiAgIGdlb21ldHJ5SW5zdGFuY2VzIDogbmV3IENlc2l1bS5HZW9tZXRyeUluc3RhbmNlKHtcbiAqICAgICBnZW9tZXRyeSA6IG5ldyBDZXNpdW0uUG9seWxpbmVHZW9tZXRyeSh7XG4gKiAgICAgICBwb3NpdGlvbnMgOiBDZXNpdW0uQ2FydGVzaWFuMy5mcm9tRGVncmVlc0FycmF5KFtcbiAqICAgICAgICAgMC4wLCAwLjAsXG4gKiAgICAgICAgIDUuMCwgMC4wXG4gKiAgICAgICBdKSxcbiAqICAgICAgIHdpZHRoIDogMTAuMCxcbiAqICAgICAgIHZlcnRleEZvcm1hdCA6IENlc2l1bS5Qb2x5bGluZUNvbG9yQXBwZWFyYW5jZS5WRVJURVhfRk9STUFUXG4gKiAgICAgfSksXG4gKiAgICAgYXR0cmlidXRlcyA6IHtcbiAqICAgICAgIGNvbG9yIDogQ2VzaXVtLkNvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5mcm9tQ29sb3IobmV3IENlc2l1bS5Db2xvcigxLjAsIDEuMCwgMS4wLCAxLjApKVxuICogICAgIH1cbiAqICAgfSksXG4gKiAgIGFwcGVhcmFuY2UgOiBuZXcgQ2VzaXVtLlBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlKHtcbiAqICAgICB0cmFuc2x1Y2VudCA6IGZhbHNlXG4gKiAgIH0pXG4gKiB9KTtcbiAqL1xuZnVuY3Rpb24gUG9seWxpbmVDb2xvckFwcGVhcmFuY2Uob3B0aW9ucykge1xuICBvcHRpb25zID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMsIGRlZmF1bHRWYWx1ZS5FTVBUWV9PQkpFQ1QpO1xuXG4gIHZhciB0cmFuc2x1Y2VudCA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLnRyYW5zbHVjZW50LCB0cnVlKTtcbiAgdmFyIGNsb3NlZCA9IGZhbHNlO1xuICB2YXIgdmVydGV4Rm9ybWF0ID0gUG9seWxpbmVDb2xvckFwcGVhcmFuY2UuVkVSVEVYX0ZPUk1BVDtcblxuICAvKipcbiAgICogVGhpcyBwcm9wZXJ0eSBpcyBwYXJ0IG9mIHRoZSB7QGxpbmsgQXBwZWFyYW5jZX0gaW50ZXJmYWNlLCBidXQgaXMgbm90XG4gICAqIHVzZWQgYnkge0BsaW5rIFBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlfSBzaW5jZSBhIGZ1bGx5IGN1c3RvbSBmcmFnbWVudCBzaGFkZXIgaXMgdXNlZC5cbiAgICpcbiAgICogQHR5cGUgTWF0ZXJpYWxcbiAgICpcbiAgICogQGRlZmF1bHQgdW5kZWZpbmVkXG4gICAqL1xuICB0aGlzLm1hdGVyaWFsID0gdW5kZWZpbmVkO1xuXG4gIC8qKlxuICAgKiBXaGVuIDxjb2RlPnRydWU8L2NvZGU+LCB0aGUgZ2VvbWV0cnkgaXMgZXhwZWN0ZWQgdG8gYXBwZWFyIHRyYW5zbHVjZW50IHNvXG4gICAqIHtAbGluayBQb2x5bGluZUNvbG9yQXBwZWFyYW5jZSNyZW5kZXJTdGF0ZX0gaGFzIGFscGhhIGJsZW5kaW5nIGVuYWJsZWQuXG4gICAqXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKlxuICAgKiBAZGVmYXVsdCB0cnVlXG4gICAqL1xuICB0aGlzLnRyYW5zbHVjZW50ID0gdHJhbnNsdWNlbnQ7XG5cbiAgdGhpcy5fdmVydGV4U2hhZGVyU291cmNlID0gZGVmYXVsdFZhbHVlKFxuICAgIG9wdGlvbnMudmVydGV4U2hhZGVyU291cmNlLFxuICAgIGRlZmF1bHRWZXJ0ZXhTaGFkZXJTb3VyY2VcbiAgKTtcbiAgdGhpcy5fZnJhZ21lbnRTaGFkZXJTb3VyY2UgPSBkZWZhdWx0VmFsdWUoXG4gICAgb3B0aW9ucy5mcmFnbWVudFNoYWRlclNvdXJjZSxcbiAgICBkZWZhdWx0RnJhZ21lbnRTaGFkZXJTb3VyY2VcbiAgKTtcbiAgdGhpcy5fcmVuZGVyU3RhdGUgPSBBcHBlYXJhbmNlLmdldERlZmF1bHRSZW5kZXJTdGF0ZShcbiAgICB0cmFuc2x1Y2VudCxcbiAgICBjbG9zZWQsXG4gICAgb3B0aW9ucy5yZW5kZXJTdGF0ZVxuICApO1xuICB0aGlzLl9jbG9zZWQgPSBjbG9zZWQ7XG5cbiAgLy8gTm9uLWRlcml2ZWQgbWVtYmVyc1xuXG4gIHRoaXMuX3ZlcnRleEZvcm1hdCA9IHZlcnRleEZvcm1hdDtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoUG9seWxpbmVDb2xvckFwcGVhcmFuY2UucHJvdG90eXBlLCB7XG4gIC8qKlxuICAgKiBUaGUgR0xTTCBzb3VyY2UgY29kZSBmb3IgdGhlIHZlcnRleCBzaGFkZXIuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBQb2x5bGluZUNvbG9yQXBwZWFyYW5jZS5wcm90b3R5cGVcbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICB2ZXJ0ZXhTaGFkZXJTb3VyY2U6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl92ZXJ0ZXhTaGFkZXJTb3VyY2U7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIEdMU0wgc291cmNlIGNvZGUgZm9yIHRoZSBmcmFnbWVudCBzaGFkZXIuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBQb2x5bGluZUNvbG9yQXBwZWFyYW5jZS5wcm90b3R5cGVcbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICBmcmFnbWVudFNoYWRlclNvdXJjZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ZyYWdtZW50U2hhZGVyU291cmNlO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBXZWJHTCBmaXhlZC1mdW5jdGlvbiBzdGF0ZSB0byB1c2Ugd2hlbiByZW5kZXJpbmcgdGhlIGdlb21ldHJ5LlxuICAgKiA8cD5cbiAgICogVGhlIHJlbmRlciBzdGF0ZSBjYW4gYmUgZXhwbGljaXRseSBkZWZpbmVkIHdoZW4gY29uc3RydWN0aW5nIGEge0BsaW5rIFBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlfVxuICAgKiBpbnN0YW5jZSwgb3IgaXQgaXMgc2V0IGltcGxpY2l0bHkgdmlhIHtAbGluayBQb2x5bGluZUNvbG9yQXBwZWFyYW5jZSN0cmFuc2x1Y2VudH0uXG4gICAqIDwvcD5cbiAgICpcbiAgICogQG1lbWJlcm9mIFBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIHJlbmRlclN0YXRlOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVuZGVyU3RhdGU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogV2hlbiA8Y29kZT50cnVlPC9jb2RlPiwgdGhlIGdlb21ldHJ5IGlzIGV4cGVjdGVkIHRvIGJlIGNsb3NlZCBzb1xuICAgKiB7QGxpbmsgUG9seWxpbmVDb2xvckFwcGVhcmFuY2UjcmVuZGVyU3RhdGV9IGhhcyBiYWNrZmFjZSBjdWxsaW5nIGVuYWJsZWQuXG4gICAqIFRoaXMgaXMgYWx3YXlzIDxjb2RlPmZhbHNlPC9jb2RlPiBmb3IgPGNvZGU+UG9seWxpbmVDb2xvckFwcGVhcmFuY2U8L2NvZGU+LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgUG9seWxpbmVDb2xvckFwcGVhcmFuY2UucHJvdG90eXBlXG4gICAqXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAcmVhZG9ubHlcbiAgICpcbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGNsb3NlZDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2Nsb3NlZDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUge0BsaW5rIFZlcnRleEZvcm1hdH0gdGhhdCB0aGlzIGFwcGVhcmFuY2UgaW5zdGFuY2UgaXMgY29tcGF0aWJsZSB3aXRoLlxuICAgKiBBIGdlb21ldHJ5IGNhbiBoYXZlIG1vcmUgdmVydGV4IGF0dHJpYnV0ZXMgYW5kIHN0aWxsIGJlIGNvbXBhdGlibGUgLSBhdCBhXG4gICAqIHBvdGVudGlhbCBwZXJmb3JtYW5jZSBjb3N0IC0gYnV0IGl0IGNhbid0IGhhdmUgbGVzcy5cbiAgICpcbiAgICogQG1lbWJlcm9mIFBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSBWZXJ0ZXhGb3JtYXRcbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBkZWZhdWx0IHtAbGluayBQb2x5bGluZUNvbG9yQXBwZWFyYW5jZS5WRVJURVhfRk9STUFUfVxuICAgKi9cbiAgdmVydGV4Rm9ybWF0OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdmVydGV4Rm9ybWF0O1xuICAgIH0sXG4gIH0sXG59KTtcblxuLyoqXG4gKiBUaGUge0BsaW5rIFZlcnRleEZvcm1hdH0gdGhhdCBhbGwge0BsaW5rIFBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlfSBpbnN0YW5jZXNcbiAqIGFyZSBjb21wYXRpYmxlIHdpdGguIFRoaXMgcmVxdWlyZXMgb25seSBhIDxjb2RlPnBvc2l0aW9uPC9jb2RlPiBhdHRyaWJ1dGUuXG4gKlxuICogQHR5cGUgVmVydGV4Rm9ybWF0XG4gKlxuICogQGNvbnN0YW50XG4gKi9cblBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlLlZFUlRFWF9GT1JNQVQgPSBWZXJ0ZXhGb3JtYXQuUE9TSVRJT05fT05MWTtcblxuLyoqXG4gKiBQcm9jZWR1cmFsbHkgY3JlYXRlcyB0aGUgZnVsbCBHTFNMIGZyYWdtZW50IHNoYWRlciBzb3VyY2UuXG4gKlxuICogQGZ1bmN0aW9uXG4gKlxuICogQHJldHVybnMge1N0cmluZ30gVGhlIGZ1bGwgR0xTTCBmcmFnbWVudCBzaGFkZXIgc291cmNlLlxuICovXG5Qb2x5bGluZUNvbG9yQXBwZWFyYW5jZS5wcm90b3R5cGUuZ2V0RnJhZ21lbnRTaGFkZXJTb3VyY2UgPVxuICBBcHBlYXJhbmNlLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZTtcblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIHRoZSBnZW9tZXRyeSBpcyB0cmFuc2x1Y2VudCBiYXNlZCBvbiB7QGxpbmsgUG9seWxpbmVDb2xvckFwcGVhcmFuY2UjdHJhbnNsdWNlbnR9LlxuICpcbiAqIEBmdW5jdGlvblxuICpcbiAqIEByZXR1cm5zIHtCb29sZWFufSA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgYXBwZWFyYW5jZSBpcyB0cmFuc2x1Y2VudC5cbiAqL1xuUG9seWxpbmVDb2xvckFwcGVhcmFuY2UucHJvdG90eXBlLmlzVHJhbnNsdWNlbnQgPVxuICBBcHBlYXJhbmNlLnByb3RvdHlwZS5pc1RyYW5zbHVjZW50O1xuXG4vKipcbiAqIENyZWF0ZXMgYSByZW5kZXIgc3RhdGUuICBUaGlzIGlzIG5vdCB0aGUgZmluYWwgcmVuZGVyIHN0YXRlIGluc3RhbmNlOyBpbnN0ZWFkLFxuICogaXQgY2FuIGNvbnRhaW4gYSBzdWJzZXQgb2YgcmVuZGVyIHN0YXRlIHByb3BlcnRpZXMgaWRlbnRpY2FsIHRvIHRoZSByZW5kZXIgc3RhdGVcbiAqIGNyZWF0ZWQgaW4gdGhlIGNvbnRleHQuXG4gKlxuICogQGZ1bmN0aW9uXG4gKlxuICogQHJldHVybnMge09iamVjdH0gVGhlIHJlbmRlciBzdGF0ZS5cbiAqL1xuUG9seWxpbmVDb2xvckFwcGVhcmFuY2UucHJvdG90eXBlLmdldFJlbmRlclN0YXRlID1cbiAgQXBwZWFyYW5jZS5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGU7XG5leHBvcnQgZGVmYXVsdCBQb2x5bGluZUNvbG9yQXBwZWFyYW5jZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///54052\n')},13597:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(96037);\n/* harmony import */ var _Core_VertexFormat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67252);\n/* harmony import */ var _Shaders_Appearances_PolylineMaterialAppearanceVS_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(93981);\n/* harmony import */ var _Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(94373);\n/* harmony import */ var _Shaders_PolylineFS_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(36449);\n/* harmony import */ var _Appearance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12804);\n/* harmony import */ var _Material_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(69592);\n\n\n\n\n\n\n\n\n\n\nvar defaultVertexShaderSource =\n  _Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z + "\\n" + _Shaders_Appearances_PolylineMaterialAppearanceVS_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z;\nvar defaultFragmentShaderSource = _Shaders_PolylineFS_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z;\n\nif (!_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].isInternetExplorer */ .Z.isInternetExplorer()) {\n  defaultVertexShaderSource =\n    "#define CLIP_POLYLINE \\n" + defaultVertexShaderSource;\n}\n\n/**\n * An appearance for {@link PolylineGeometry} that supports shading with materials.\n *\n * @alias PolylineMaterialAppearance\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Boolean} [options.translucent=true] When <code>true</code>, the geometry is expected to appear translucent so {@link PolylineMaterialAppearance#renderState} has alpha blending enabled.\n * @param {Material} [options.material=Material.ColorType] The material used to determine the fragment color.\n * @param {String} [options.vertexShaderSource] Optional GLSL vertex shader source to override the default vertex shader.\n * @param {String} [options.fragmentShaderSource] Optional GLSL fragment shader source to override the default fragment shader.\n * @param {Object} [options.renderState] Optional render state to override the default render state.\n *\n * @see {@link https://github.com/CesiumGS/cesium/wiki/Fabric|Fabric}\n *\n * @example\n * var primitive = new Cesium.Primitive({\n *   geometryInstances : new Cesium.GeometryInstance({\n *     geometry : new Cesium.PolylineGeometry({\n *       positions : Cesium.Cartesian3.fromDegreesArray([\n *         0.0, 0.0,\n *         5.0, 0.0\n *       ]),\n *       width : 10.0,\n *       vertexFormat : Cesium.PolylineMaterialAppearance.VERTEX_FORMAT\n *     })\n *   }),\n *   appearance : new Cesium.PolylineMaterialAppearance({\n *     material : Cesium.Material.fromType(\'Color\')\n *   })\n * });\n */\nfunction PolylineMaterialAppearance(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var translucent = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.translucent, true);\n  var closed = false;\n  var vertexFormat = PolylineMaterialAppearance.VERTEX_FORMAT;\n\n  /**\n   * The material used to determine the fragment color.  Unlike other {@link PolylineMaterialAppearance}\n   * properties, this is not read-only, so an appearance\'s material can change on the fly.\n   *\n   * @type Material\n   *\n   * @default {@link Material.ColorType}\n   *\n   * @see {@link https://github.com/CesiumGS/cesium/wiki/Fabric|Fabric}\n   */\n  this.material = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.material)\n    ? options.material\n    : _Material_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromType */ .Z.fromType(_Material_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ColorType */ .Z.ColorType);\n\n  /**\n   * When <code>true</code>, the geometry is expected to appear translucent so\n   * {@link PolylineMaterialAppearance#renderState} has alpha blending enabled.\n   *\n   * @type {Boolean}\n   *\n   * @default true\n   */\n  this.translucent = translucent;\n\n  this._vertexShaderSource = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    options.vertexShaderSource,\n    defaultVertexShaderSource\n  );\n  this._fragmentShaderSource = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    options.fragmentShaderSource,\n    defaultFragmentShaderSource\n  );\n  this._renderState = _Appearance_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getDefaultRenderState */ .Z.getDefaultRenderState(\n    translucent,\n    closed,\n    options.renderState\n  );\n  this._closed = closed;\n\n  // Non-derived members\n\n  this._vertexFormat = vertexFormat;\n}\n\nObject.defineProperties(PolylineMaterialAppearance.prototype, {\n  /**\n   * The GLSL source code for the vertex shader.\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  vertexShaderSource: {\n    get: function () {\n      var vs = this._vertexShaderSource;\n      if (\n        this.material.shaderSource.search(\n          /varying\\s+float\\s+v_polylineAngle;/g\n        ) !== -1\n      ) {\n        vs = "#define POLYLINE_DASH\\n" + vs;\n      }\n      return vs;\n    },\n  },\n\n  /**\n   * The GLSL source code for the fragment shader.\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  fragmentShaderSource: {\n    get: function () {\n      return this._fragmentShaderSource;\n    },\n  },\n\n  /**\n   * The WebGL fixed-function state to use when rendering the geometry.\n   * <p>\n   * The render state can be explicitly defined when constructing a {@link PolylineMaterialAppearance}\n   * instance, or it is set implicitly via {@link PolylineMaterialAppearance#translucent}\n   * and {@link PolylineMaterialAppearance#closed}.\n   * </p>\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  renderState: {\n    get: function () {\n      return this._renderState;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the geometry is expected to be closed so\n   * {@link PolylineMaterialAppearance#renderState} has backface culling enabled.\n   * This is always <code>false</code> for <code>PolylineMaterialAppearance</code>.\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  closed: {\n    get: function () {\n      return this._closed;\n    },\n  },\n\n  /**\n   * The {@link VertexFormat} that this appearance instance is compatible with.\n   * A geometry can have more vertex attributes and still be compatible - at a\n   * potential performance cost - but it can\'t have less.\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type VertexFormat\n   * @readonly\n   *\n   * @default {@link PolylineMaterialAppearance.VERTEX_FORMAT}\n   */\n  vertexFormat: {\n    get: function () {\n      return this._vertexFormat;\n    },\n  },\n});\n\n/**\n * The {@link VertexFormat} that all {@link PolylineMaterialAppearance} instances\n * are compatible with. This requires <code>position</code> and <code>st</code> attributes.\n *\n * @type VertexFormat\n *\n * @constant\n */\nPolylineMaterialAppearance.VERTEX_FORMAT = _Core_VertexFormat_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].POSITION_AND_ST */ .Z.POSITION_AND_ST;\n\n/**\n * Procedurally creates the full GLSL fragment shader source.  For {@link PolylineMaterialAppearance},\n * this is derived from {@link PolylineMaterialAppearance#fragmentShaderSource} and {@link PolylineMaterialAppearance#material}.\n *\n * @function\n *\n * @returns {String} The full GLSL fragment shader source.\n */\nPolylineMaterialAppearance.prototype.getFragmentShaderSource =\n  _Appearance_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].prototype.getFragmentShaderSource */ .Z.prototype.getFragmentShaderSource;\n\n/**\n * Determines if the geometry is translucent based on {@link PolylineMaterialAppearance#translucent} and {@link Material#isTranslucent}.\n *\n * @function\n *\n * @returns {Boolean} <code>true</code> if the appearance is translucent.\n */\nPolylineMaterialAppearance.prototype.isTranslucent =\n  _Appearance_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].prototype.isTranslucent */ .Z.prototype.isTranslucent;\n\n/**\n * Creates a render state.  This is not the final render state instance; instead,\n * it can contain a subset of render state properties identical to the render state\n * created in the context.\n *\n * @function\n *\n * @returns {Object} The render state.\n */\nPolylineMaterialAppearance.prototype.getRenderState =\n  _Appearance_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].prototype.getRenderState */ .Z.prototype.getRenderState;\n/* harmony default export */ __webpack_exports__["Z"] = (PolylineMaterialAppearance);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1OTcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW1EO0FBQ1Y7QUFDa0I7QUFDUjtBQUMrQztBQUN4QztBQUNSO0FBQ1Q7QUFDSjs7QUFFckM7QUFDQSxFQUFFLDJFQUFjLFVBQVUscUdBQTRCO0FBQ3RELGtDQUFrQyx1RUFBVTs7QUFFNUMsS0FBSyxnSEFBbUM7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLHdCQUF3QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVMsc0dBQXNHLDhDQUE4QztBQUN4SyxXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTixJQUFJO0FBQ0o7QUFDQTtBQUNBLFlBQVksMEVBQVksVUFBVSxnR0FBeUI7O0FBRTNELG9CQUFvQiwwRUFBWTtBQUNoQztBQUNBOztBQUVBO0FBQ0EsdUVBQXVFO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0Esa0JBQWtCLHFFQUFPO0FBQ3pCO0FBQ0EsTUFBTSwrRUFBaUIsQ0FBQyxpRkFBa0I7O0FBRTFDO0FBQ0E7QUFDQSxNQUFNLDhDQUE4QztBQUNwRDtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkIsMEVBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDBFQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyR0FBZ0M7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFLDRDQUE0QztBQUM1QyxVQUFVLHdDQUF3QztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLE1BQU0sOENBQThDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQSxVQUFVLG9CQUFvQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0EsUUFBUSxvQkFBb0IsVUFBVSxrQ0FBa0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHNHQUE0Qjs7QUFFdkU7QUFDQSxvRUFBb0UsaUNBQWlDO0FBQ3JHLHlCQUF5Qix1REFBdUQsS0FBSywwQ0FBMEM7QUFDL0g7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSxFQUFFLG1JQUE0Qzs7QUFFOUM7QUFDQSx1REFBdUQsOENBQThDLEtBQUssNkJBQTZCO0FBQ3ZJO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0EsRUFBRSwrR0FBa0M7O0FBRXBDO0FBQ0EseUVBQXlFO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBLEVBQUUsaUhBQW1DO0FBQ3JDLHlEQUFlLDBCQUEwQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL1BvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlLmpzPzg0NmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBGZWF0dXJlRGV0ZWN0aW9uIGZyb20gXCIuLi9Db3JlL0ZlYXR1cmVEZXRlY3Rpb24uanNcIjtcbmltcG9ydCBWZXJ0ZXhGb3JtYXQgZnJvbSBcIi4uL0NvcmUvVmVydGV4Rm9ybWF0LmpzXCI7XG5pbXBvcnQgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2VWUyBmcm9tIFwiLi4vU2hhZGVycy9BcHBlYXJhbmNlcy9Qb2x5bGluZU1hdGVyaWFsQXBwZWFyYW5jZVZTLmpzXCI7XG5pbXBvcnQgUG9seWxpbmVDb21tb24gZnJvbSBcIi4uL1NoYWRlcnMvUG9seWxpbmVDb21tb24uanNcIjtcbmltcG9ydCBQb2x5bGluZUZTIGZyb20gXCIuLi9TaGFkZXJzL1BvbHlsaW5lRlMuanNcIjtcbmltcG9ydCBBcHBlYXJhbmNlIGZyb20gXCIuL0FwcGVhcmFuY2UuanNcIjtcbmltcG9ydCBNYXRlcmlhbCBmcm9tIFwiLi9NYXRlcmlhbC5qc1wiO1xuXG52YXIgZGVmYXVsdFZlcnRleFNoYWRlclNvdXJjZSA9XG4gIFBvbHlsaW5lQ29tbW9uICsgXCJcXG5cIiArIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlVlM7XG52YXIgZGVmYXVsdEZyYWdtZW50U2hhZGVyU291cmNlID0gUG9seWxpbmVGUztcblxuaWYgKCFGZWF0dXJlRGV0ZWN0aW9uLmlzSW50ZXJuZXRFeHBsb3JlcigpKSB7XG4gIGRlZmF1bHRWZXJ0ZXhTaGFkZXJTb3VyY2UgPVxuICAgIFwiI2RlZmluZSBDTElQX1BPTFlMSU5FIFxcblwiICsgZGVmYXVsdFZlcnRleFNoYWRlclNvdXJjZTtcbn1cblxuLyoqXG4gKiBBbiBhcHBlYXJhbmNlIGZvciB7QGxpbmsgUG9seWxpbmVHZW9tZXRyeX0gdGhhdCBzdXBwb3J0cyBzaGFkaW5nIHdpdGggbWF0ZXJpYWxzLlxuICpcbiAqIEBhbGlhcyBQb2x5bGluZU1hdGVyaWFsQXBwZWFyYW5jZVxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBPYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnRyYW5zbHVjZW50PXRydWVdIFdoZW4gPGNvZGU+dHJ1ZTwvY29kZT4sIHRoZSBnZW9tZXRyeSBpcyBleHBlY3RlZCB0byBhcHBlYXIgdHJhbnNsdWNlbnQgc28ge0BsaW5rIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlI3JlbmRlclN0YXRlfSBoYXMgYWxwaGEgYmxlbmRpbmcgZW5hYmxlZC5cbiAqIEBwYXJhbSB7TWF0ZXJpYWx9IFtvcHRpb25zLm1hdGVyaWFsPU1hdGVyaWFsLkNvbG9yVHlwZV0gVGhlIG1hdGVyaWFsIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBmcmFnbWVudCBjb2xvci5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy52ZXJ0ZXhTaGFkZXJTb3VyY2VdIE9wdGlvbmFsIEdMU0wgdmVydGV4IHNoYWRlciBzb3VyY2UgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgdmVydGV4IHNoYWRlci5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5mcmFnbWVudFNoYWRlclNvdXJjZV0gT3B0aW9uYWwgR0xTTCBmcmFnbWVudCBzaGFkZXIgc291cmNlIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGZyYWdtZW50IHNoYWRlci5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5yZW5kZXJTdGF0ZV0gT3B0aW9uYWwgcmVuZGVyIHN0YXRlIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IHJlbmRlciBzdGF0ZS5cbiAqXG4gKiBAc2VlIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vQ2VzaXVtR1MvY2VzaXVtL3dpa2kvRmFicmljfEZhYnJpY31cbiAqXG4gKiBAZXhhbXBsZVxuICogdmFyIHByaW1pdGl2ZSA9IG5ldyBDZXNpdW0uUHJpbWl0aXZlKHtcbiAqICAgZ2VvbWV0cnlJbnN0YW5jZXMgOiBuZXcgQ2VzaXVtLkdlb21ldHJ5SW5zdGFuY2Uoe1xuICogICAgIGdlb21ldHJ5IDogbmV3IENlc2l1bS5Qb2x5bGluZUdlb21ldHJ5KHtcbiAqICAgICAgIHBvc2l0aW9ucyA6IENlc2l1bS5DYXJ0ZXNpYW4zLmZyb21EZWdyZWVzQXJyYXkoW1xuICogICAgICAgICAwLjAsIDAuMCxcbiAqICAgICAgICAgNS4wLCAwLjBcbiAqICAgICAgIF0pLFxuICogICAgICAgd2lkdGggOiAxMC4wLFxuICogICAgICAgdmVydGV4Rm9ybWF0IDogQ2VzaXVtLlBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlLlZFUlRFWF9GT1JNQVRcbiAqICAgICB9KVxuICogICB9KSxcbiAqICAgYXBwZWFyYW5jZSA6IG5ldyBDZXNpdW0uUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2Uoe1xuICogICAgIG1hdGVyaWFsIDogQ2VzaXVtLk1hdGVyaWFsLmZyb21UeXBlKCdDb2xvcicpXG4gKiAgIH0pXG4gKiB9KTtcbiAqL1xuZnVuY3Rpb24gUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2Uob3B0aW9ucykge1xuICBvcHRpb25zID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMsIGRlZmF1bHRWYWx1ZS5FTVBUWV9PQkpFQ1QpO1xuXG4gIHZhciB0cmFuc2x1Y2VudCA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLnRyYW5zbHVjZW50LCB0cnVlKTtcbiAgdmFyIGNsb3NlZCA9IGZhbHNlO1xuICB2YXIgdmVydGV4Rm9ybWF0ID0gUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UuVkVSVEVYX0ZPUk1BVDtcblxuICAvKipcbiAgICogVGhlIG1hdGVyaWFsIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBmcmFnbWVudCBjb2xvci4gIFVubGlrZSBvdGhlciB7QGxpbmsgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2V9XG4gICAqIHByb3BlcnRpZXMsIHRoaXMgaXMgbm90IHJlYWQtb25seSwgc28gYW4gYXBwZWFyYW5jZSdzIG1hdGVyaWFsIGNhbiBjaGFuZ2Ugb24gdGhlIGZseS5cbiAgICpcbiAgICogQHR5cGUgTWF0ZXJpYWxcbiAgICpcbiAgICogQGRlZmF1bHQge0BsaW5rIE1hdGVyaWFsLkNvbG9yVHlwZX1cbiAgICpcbiAgICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL0Nlc2l1bUdTL2Nlc2l1bS93aWtpL0ZhYnJpY3xGYWJyaWN9XG4gICAqL1xuICB0aGlzLm1hdGVyaWFsID0gZGVmaW5lZChvcHRpb25zLm1hdGVyaWFsKVxuICAgID8gb3B0aW9ucy5tYXRlcmlhbFxuICAgIDogTWF0ZXJpYWwuZnJvbVR5cGUoTWF0ZXJpYWwuQ29sb3JUeXBlKTtcblxuICAvKipcbiAgICogV2hlbiA8Y29kZT50cnVlPC9jb2RlPiwgdGhlIGdlb21ldHJ5IGlzIGV4cGVjdGVkIHRvIGFwcGVhciB0cmFuc2x1Y2VudCBzb1xuICAgKiB7QGxpbmsgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UjcmVuZGVyU3RhdGV9IGhhcyBhbHBoYSBibGVuZGluZyBlbmFibGVkLlxuICAgKlxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICpcbiAgICogQGRlZmF1bHQgdHJ1ZVxuICAgKi9cbiAgdGhpcy50cmFuc2x1Y2VudCA9IHRyYW5zbHVjZW50O1xuXG4gIHRoaXMuX3ZlcnRleFNoYWRlclNvdXJjZSA9IGRlZmF1bHRWYWx1ZShcbiAgICBvcHRpb25zLnZlcnRleFNoYWRlclNvdXJjZSxcbiAgICBkZWZhdWx0VmVydGV4U2hhZGVyU291cmNlXG4gICk7XG4gIHRoaXMuX2ZyYWdtZW50U2hhZGVyU291cmNlID0gZGVmYXVsdFZhbHVlKFxuICAgIG9wdGlvbnMuZnJhZ21lbnRTaGFkZXJTb3VyY2UsXG4gICAgZGVmYXVsdEZyYWdtZW50U2hhZGVyU291cmNlXG4gICk7XG4gIHRoaXMuX3JlbmRlclN0YXRlID0gQXBwZWFyYW5jZS5nZXREZWZhdWx0UmVuZGVyU3RhdGUoXG4gICAgdHJhbnNsdWNlbnQsXG4gICAgY2xvc2VkLFxuICAgIG9wdGlvbnMucmVuZGVyU3RhdGVcbiAgKTtcbiAgdGhpcy5fY2xvc2VkID0gY2xvc2VkO1xuXG4gIC8vIE5vbi1kZXJpdmVkIG1lbWJlcnNcblxuICB0aGlzLl92ZXJ0ZXhGb3JtYXQgPSB2ZXJ0ZXhGb3JtYXQ7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlLnByb3RvdHlwZSwge1xuICAvKipcbiAgICogVGhlIEdMU0wgc291cmNlIGNvZGUgZm9yIHRoZSB2ZXJ0ZXggc2hhZGVyLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UucHJvdG90eXBlXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgdmVydGV4U2hhZGVyU291cmNlOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdnMgPSB0aGlzLl92ZXJ0ZXhTaGFkZXJTb3VyY2U7XG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMubWF0ZXJpYWwuc2hhZGVyU291cmNlLnNlYXJjaChcbiAgICAgICAgICAvdmFyeWluZ1xccytmbG9hdFxccyt2X3BvbHlsaW5lQW5nbGU7L2dcbiAgICAgICAgKSAhPT0gLTFcbiAgICAgICkge1xuICAgICAgICB2cyA9IFwiI2RlZmluZSBQT0xZTElORV9EQVNIXFxuXCIgKyB2cztcbiAgICAgIH1cbiAgICAgIHJldHVybiB2cztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgR0xTTCBzb3VyY2UgY29kZSBmb3IgdGhlIGZyYWdtZW50IHNoYWRlci5cbiAgICpcbiAgICogQG1lbWJlcm9mIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIGZyYWdtZW50U2hhZGVyU291cmNlOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZnJhZ21lbnRTaGFkZXJTb3VyY2U7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIFdlYkdMIGZpeGVkLWZ1bmN0aW9uIHN0YXRlIHRvIHVzZSB3aGVuIHJlbmRlcmluZyB0aGUgZ2VvbWV0cnkuXG4gICAqIDxwPlxuICAgKiBUaGUgcmVuZGVyIHN0YXRlIGNhbiBiZSBleHBsaWNpdGx5IGRlZmluZWQgd2hlbiBjb25zdHJ1Y3RpbmcgYSB7QGxpbmsgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2V9XG4gICAqIGluc3RhbmNlLCBvciBpdCBpcyBzZXQgaW1wbGljaXRseSB2aWEge0BsaW5rIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlI3RyYW5zbHVjZW50fVxuICAgKiBhbmQge0BsaW5rIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlI2Nsb3NlZH0uXG4gICAqIDwvcD5cbiAgICpcbiAgICogQG1lbWJlcm9mIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIHJlbmRlclN0YXRlOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVuZGVyU3RhdGU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogV2hlbiA8Y29kZT50cnVlPC9jb2RlPiwgdGhlIGdlb21ldHJ5IGlzIGV4cGVjdGVkIHRvIGJlIGNsb3NlZCBzb1xuICAgKiB7QGxpbmsgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UjcmVuZGVyU3RhdGV9IGhhcyBiYWNrZmFjZSBjdWxsaW5nIGVuYWJsZWQuXG4gICAqIFRoaXMgaXMgYWx3YXlzIDxjb2RlPmZhbHNlPC9jb2RlPiBmb3IgPGNvZGU+UG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2U8L2NvZGU+LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UucHJvdG90eXBlXG4gICAqXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAcmVhZG9ubHlcbiAgICpcbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGNsb3NlZDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2Nsb3NlZDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUge0BsaW5rIFZlcnRleEZvcm1hdH0gdGhhdCB0aGlzIGFwcGVhcmFuY2UgaW5zdGFuY2UgaXMgY29tcGF0aWJsZSB3aXRoLlxuICAgKiBBIGdlb21ldHJ5IGNhbiBoYXZlIG1vcmUgdmVydGV4IGF0dHJpYnV0ZXMgYW5kIHN0aWxsIGJlIGNvbXBhdGlibGUgLSBhdCBhXG4gICAqIHBvdGVudGlhbCBwZXJmb3JtYW5jZSBjb3N0IC0gYnV0IGl0IGNhbid0IGhhdmUgbGVzcy5cbiAgICpcbiAgICogQG1lbWJlcm9mIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSBWZXJ0ZXhGb3JtYXRcbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBkZWZhdWx0IHtAbGluayBQb2x5bGluZU1hdGVyaWFsQXBwZWFyYW5jZS5WRVJURVhfRk9STUFUfVxuICAgKi9cbiAgdmVydGV4Rm9ybWF0OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdmVydGV4Rm9ybWF0O1xuICAgIH0sXG4gIH0sXG59KTtcblxuLyoqXG4gKiBUaGUge0BsaW5rIFZlcnRleEZvcm1hdH0gdGhhdCBhbGwge0BsaW5rIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlfSBpbnN0YW5jZXNcbiAqIGFyZSBjb21wYXRpYmxlIHdpdGguIFRoaXMgcmVxdWlyZXMgPGNvZGU+cG9zaXRpb248L2NvZGU+IGFuZCA8Y29kZT5zdDwvY29kZT4gYXR0cmlidXRlcy5cbiAqXG4gKiBAdHlwZSBWZXJ0ZXhGb3JtYXRcbiAqXG4gKiBAY29uc3RhbnRcbiAqL1xuUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UuVkVSVEVYX0ZPUk1BVCA9IFZlcnRleEZvcm1hdC5QT1NJVElPTl9BTkRfU1Q7XG5cbi8qKlxuICogUHJvY2VkdXJhbGx5IGNyZWF0ZXMgdGhlIGZ1bGwgR0xTTCBmcmFnbWVudCBzaGFkZXIgc291cmNlLiAgRm9yIHtAbGluayBQb2x5bGluZU1hdGVyaWFsQXBwZWFyYW5jZX0sXG4gKiB0aGlzIGlzIGRlcml2ZWQgZnJvbSB7QGxpbmsgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UjZnJhZ21lbnRTaGFkZXJTb3VyY2V9IGFuZCB7QGxpbmsgUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UjbWF0ZXJpYWx9LlxuICpcbiAqIEBmdW5jdGlvblxuICpcbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBmdWxsIEdMU0wgZnJhZ21lbnQgc2hhZGVyIHNvdXJjZS5cbiAqL1xuUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UucHJvdG90eXBlLmdldEZyYWdtZW50U2hhZGVyU291cmNlID1cbiAgQXBwZWFyYW5jZS5wcm90b3R5cGUuZ2V0RnJhZ21lbnRTaGFkZXJTb3VyY2U7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiB0aGUgZ2VvbWV0cnkgaXMgdHJhbnNsdWNlbnQgYmFzZWQgb24ge0BsaW5rIFBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlI3RyYW5zbHVjZW50fSBhbmQge0BsaW5rIE1hdGVyaWFsI2lzVHJhbnNsdWNlbnR9LlxuICpcbiAqIEBmdW5jdGlvblxuICpcbiAqIEByZXR1cm5zIHtCb29sZWFufSA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgYXBwZWFyYW5jZSBpcyB0cmFuc2x1Y2VudC5cbiAqL1xuUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UucHJvdG90eXBlLmlzVHJhbnNsdWNlbnQgPVxuICBBcHBlYXJhbmNlLnByb3RvdHlwZS5pc1RyYW5zbHVjZW50O1xuXG4vKipcbiAqIENyZWF0ZXMgYSByZW5kZXIgc3RhdGUuICBUaGlzIGlzIG5vdCB0aGUgZmluYWwgcmVuZGVyIHN0YXRlIGluc3RhbmNlOyBpbnN0ZWFkLFxuICogaXQgY2FuIGNvbnRhaW4gYSBzdWJzZXQgb2YgcmVuZGVyIHN0YXRlIHByb3BlcnRpZXMgaWRlbnRpY2FsIHRvIHRoZSByZW5kZXIgc3RhdGVcbiAqIGNyZWF0ZWQgaW4gdGhlIGNvbnRleHQuXG4gKlxuICogQGZ1bmN0aW9uXG4gKlxuICogQHJldHVybnMge09iamVjdH0gVGhlIHJlbmRlciBzdGF0ZS5cbiAqL1xuUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UucHJvdG90eXBlLmdldFJlbmRlclN0YXRlID1cbiAgQXBwZWFyYW5jZS5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGU7XG5leHBvcnQgZGVmYXVsdCBQb2x5bGluZU1hdGVyaWFsQXBwZWFyYW5jZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13597\n')}}]);