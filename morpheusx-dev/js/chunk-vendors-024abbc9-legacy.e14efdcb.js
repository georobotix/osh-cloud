"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[6183],{79162:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Core_BoxOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27495);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(51688);\n/* harmony import */ var _Core_clone_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(83856);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(59947);\n/* harmony import */ var _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(92062);\n/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(8182);\n/* harmony import */ var _Core_CullingVolume_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(17711);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(12572);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(96037);\n/* harmony import */ var _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(26865);\n/* harmony import */ var _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(84935);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(72248);\n/* harmony import */ var _Core_OrthographicOffCenterFrustum_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(35131);\n/* harmony import */ var _Core_PerspectiveFrustum_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(66854);\n/* harmony import */ var _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(38443);\n/* harmony import */ var _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(87811);\n/* harmony import */ var _Core_SphereOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(38779);\n/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(52200);\n/* harmony import */ var _Renderer_ClearCommand_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(39899);\n/* harmony import */ var _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(20521);\n/* harmony import */ var _Renderer_CubeMap_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(51107);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Framebuffer_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(2932);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_PassState_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(65121);\n/* harmony import */ var _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(21572);\n/* harmony import */ var _Renderer_Renderbuffer_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(17941);\n/* harmony import */ var _Renderer_RenderbufferFormat_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(89032);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(87721);\n/* harmony import */ var _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(8743);\n/* harmony import */ var _Camera_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(70561);\n/* harmony import */ var _CullFace_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(71593);\n/* harmony import */ var _DebugCameraPrimitive_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(96548);\n/* harmony import */ var _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(64060);\n/* harmony import */ var _Primitive_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(34380);\n/* harmony import */ var _ShadowMapShader_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(2143);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Use {@link Viewer#shadowMap} to get the scene\'s shadow map. Do not construct this directly.\n *\n * <p>\n * The normalOffset bias pushes the shadows forward slightly, and may be disabled\n * for applications that require ultra precise shadows.\n * </p>\n *\n * @alias ShadowMap\n * @internalConstructor\n * @class\n *\n * @param {Object} options An object containing the following properties:\n * @param {Camera} options.lightCamera A camera representing the light source.\n * @param {Boolean} [options.enabled=true] Whether the shadow map is enabled.\n * @param {Boolean} [options.isPointLight=false] Whether the light source is a point light. Point light shadows do not use cascades.\n * @param {Boolean} [options.pointLightRadius=100.0] Radius of the point light.\n * @param {Boolean} [options.cascadesEnabled=true] Use multiple shadow maps to cover different partitions of the view frustum.\n * @param {Number} [options.numberOfCascades=4] The number of cascades to use for the shadow map. Supported values are one and four.\n * @param {Number} [options.maximumDistance=5000.0] The maximum distance used for generating cascaded shadows. Lower values improve shadow quality.\n * @param {Number} [options.size=2048] The width and height, in pixels, of each shadow map.\n * @param {Boolean} [options.softShadows=false] Whether percentage-closer-filtering is enabled for producing softer shadows.\n * @param {Number} [options.darkness=0.3] The shadow darkness.\n * @param {Boolean} [options.normalOffset=true] Whether a normal bias is applied to shadows.\n * @param {Boolean} [options.fadingEnabled=true] Whether shadows start to fade out once the light gets closer to the horizon.\n *\n * @exception {DeveloperError} Only one or four cascades are supported.\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Shadows.html|Cesium Sandcastle Shadows Demo}\n */\nfunction ShadowMap(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  // options.context is an undocumented option\n  var context = options.context;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(context)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z("context is required.");\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(options.lightCamera)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z("lightCamera is required.");\n  }\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(options.numberOfCascades) &&\n    options.numberOfCascades !== 1 &&\n    options.numberOfCascades !== 4\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z("Only one or four cascades are supported.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._enabled = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.enabled, true);\n  this._softShadows = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.softShadows, false);\n  this._normalOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.normalOffset, true);\n  this.dirty = true;\n\n  /**\n   * Specifies whether the shadow map originates from a light source. Shadow maps that are used for analytical\n   * purposes should set this to false so as not to affect scene rendering.\n   *\n   * @private\n   */\n  this.fromLightSource = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.fromLightSource, true);\n\n  /**\n   * Determines the darkness of the shadows.\n   *\n   * @type {Number}\n   * @default 0.3\n   */\n  this.darkness = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.darkness, 0.3);\n  this._darkness = this.darkness;\n\n  /**\n   * Determines whether shadows start to fade out once the light gets closer to the horizon.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.fadingEnabled = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.fadingEnabled, true);\n\n  /**\n   * Determines the maximum distance of the shadow map. Only applicable for cascaded shadows. Larger distances may result in lower quality shadows.\n   *\n   * @type {Number}\n   * @default 5000.0\n   */\n  this.maximumDistance = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.maximumDistance, 5000.0);\n\n  this._outOfView = false;\n  this._outOfViewPrevious = false;\n  this._needsUpdate = true;\n\n  // In IE11 and Edge polygon offset is not functional.\n  // TODO : Also disabled for instances of Firefox and Chrome running ANGLE that do not support depth textures.\n  // Re-enable once https://github.com/CesiumGS/cesium/issues/4560 is resolved.\n  var polygonOffsetSupported = true;\n  if (\n    _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].isInternetExplorer */ .Z.isInternetExplorer() ||\n    _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].isEdge */ .Z.isEdge() ||\n    ((_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].isChrome */ .Z.isChrome() || _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].isFirefox */ .Z.isFirefox()) &&\n      _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].isWindows */ .Z.isWindows() &&\n      !context.depthTexture)\n  ) {\n    polygonOffsetSupported = false;\n  }\n  this._polygonOffsetSupported = polygonOffsetSupported;\n\n  this._terrainBias = {\n    polygonOffset: polygonOffsetSupported,\n    polygonOffsetFactor: 1.1,\n    polygonOffsetUnits: 4.0,\n    normalOffset: this._normalOffset,\n    normalOffsetScale: 0.5,\n    normalShading: true,\n    normalShadingSmooth: 0.3,\n    depthBias: 0.0001,\n  };\n\n  this._primitiveBias = {\n    polygonOffset: polygonOffsetSupported,\n    polygonOffsetFactor: 1.1,\n    polygonOffsetUnits: 4.0,\n    normalOffset: this._normalOffset,\n    normalOffsetScale: 0.1,\n    normalShading: true,\n    normalShadingSmooth: 0.05,\n    depthBias: 0.00002,\n  };\n\n  this._pointBias = {\n    polygonOffset: false,\n    polygonOffsetFactor: 1.1,\n    polygonOffsetUnits: 4.0,\n    normalOffset: this._normalOffset,\n    normalOffsetScale: 0.0,\n    normalShading: true,\n    normalShadingSmooth: 0.1,\n    depthBias: 0.0005,\n  };\n\n  // Framebuffer resources\n  this._depthAttachment = undefined;\n  this._colorAttachment = undefined;\n\n  // Uniforms\n  this._shadowMapMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n  this._shadowMapTexture = undefined;\n  this._lightDirectionEC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n  this._lightPositionEC = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n  this._distance = 0.0;\n\n  this._lightCamera = options.lightCamera;\n  this._shadowMapCamera = new ShadowMapCamera();\n  this._shadowMapCullingVolume = undefined;\n  this._sceneCamera = undefined;\n  this._boundingSphere = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\n  this._isPointLight = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.isPointLight, false);\n  this._pointLightRadius = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.pointLightRadius, 100.0);\n\n  this._cascadesEnabled = this._isPointLight\n    ? false\n    : (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.cascadesEnabled, true);\n  this._numberOfCascades = !this._cascadesEnabled\n    ? 0\n    : (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.numberOfCascades, 4);\n  this._fitNearFar = true;\n  this._maximumCascadeDistances = [25.0, 150.0, 700.0, Number.MAX_VALUE];\n\n  this._textureSize = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\n  this._isSpotLight = false;\n  if (this._cascadesEnabled) {\n    // Cascaded shadows are always orthographic. The frustum dimensions are calculated on the fly.\n    this._shadowMapCamera.frustum = new _Core_OrthographicOffCenterFrustum_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z();\n  } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(this._lightCamera.frustum.fov)) {\n    // If the light camera uses a perspective frustum, then the light source is a spot light\n    this._isSpotLight = true;\n  }\n\n  // Uniforms\n  this._cascadeSplits = [new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(), new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z()];\n  this._cascadeMatrices = [\n    new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z(),\n    new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z(),\n    new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z(),\n    new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z(),\n  ];\n  this._cascadeDistances = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n\n  var numberOfPasses;\n  if (this._isPointLight) {\n    numberOfPasses = 6; // One shadow map for each direction\n  } else if (!this._cascadesEnabled) {\n    numberOfPasses = 1;\n  } else {\n    numberOfPasses = this._numberOfCascades;\n  }\n\n  this._passes = new Array(numberOfPasses);\n  for (var i = 0; i < numberOfPasses; ++i) {\n    this._passes[i] = new ShadowPass(context);\n  }\n\n  this.debugShow = false;\n  this.debugFreezeFrame = false;\n  this._debugFreezeFrame = false;\n  this._debugCascadeColors = false;\n  this._debugLightFrustum = undefined;\n  this._debugCameraFrustum = undefined;\n  this._debugCascadeFrustums = new Array(this._numberOfCascades);\n  this._debugShadowViewCommand = undefined;\n\n  this._usesDepthTexture = context.depthTexture;\n\n  if (this._isPointLight) {\n    this._usesDepthTexture = false;\n  }\n\n  // Create render states for shadow casters\n  this._primitiveRenderState = undefined;\n  this._terrainRenderState = undefined;\n  this._pointRenderState = undefined;\n  createRenderStates(this);\n\n  // For clearing the shadow map texture every frame\n  this._clearCommand = new _Renderer_ClearCommand_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z({\n    depth: 1.0,\n    color: new _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(),\n  });\n\n  this._clearPassState = new _Renderer_PassState_js__WEBPACK_IMPORTED_MODULE_45__/* ["default"] */ .Z(context);\n\n  this._size = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(options.size, 2048);\n  this.size = this._size;\n}\n\n/**\n * Global maximum shadow distance used to prevent far off receivers from extending\n * the shadow far plane. This helps set a tighter near/far when viewing objects from space.\n *\n * @private\n */\nShadowMap.MAXIMUM_DISTANCE = 20000.0;\n\nfunction ShadowPass(context) {\n  this.camera = new ShadowMapCamera();\n  this.passState = new _Renderer_PassState_js__WEBPACK_IMPORTED_MODULE_45__/* ["default"] */ .Z(context);\n  this.framebuffer = undefined;\n  this.textureOffsets = undefined;\n  this.commandList = [];\n  this.cullingVolume = undefined;\n}\n\nfunction createRenderState(colorMask, bias) {\n  return _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_35__/* ["default"].fromCache */ .Z.fromCache({\n    cull: {\n      enabled: true,\n      face: _CullFace_js__WEBPACK_IMPORTED_MODULE_39__/* ["default"].BACK */ .Z.BACK,\n    },\n    depthTest: {\n      enabled: true,\n    },\n    colorMask: {\n      red: colorMask,\n      green: colorMask,\n      blue: colorMask,\n      alpha: colorMask,\n    },\n    depthMask: true,\n    polygonOffset: {\n      enabled: bias.polygonOffset,\n      factor: bias.polygonOffsetFactor,\n      units: bias.polygonOffsetUnits,\n    },\n  });\n}\n\nfunction createRenderStates(shadowMap) {\n  // Enable the color mask if the shadow map is backed by a color texture, e.g. when depth textures aren\'t supported\n  var colorMask = !shadowMap._usesDepthTexture;\n  shadowMap._primitiveRenderState = createRenderState(\n    colorMask,\n    shadowMap._primitiveBias\n  );\n  shadowMap._terrainRenderState = createRenderState(\n    colorMask,\n    shadowMap._terrainBias\n  );\n  shadowMap._pointRenderState = createRenderState(\n    colorMask,\n    shadowMap._pointBias\n  );\n}\n\n/**\n * @private\n */\nShadowMap.prototype.debugCreateRenderStates = function () {\n  createRenderStates(this);\n};\n\nObject.defineProperties(ShadowMap.prototype, {\n  /**\n   * Determines if the shadow map will be shown.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {Boolean}\n   * @default true\n   */\n  enabled: {\n    get: function () {\n      return this._enabled;\n    },\n    set: function (value) {\n      this.dirty = this._enabled !== value;\n      this._enabled = value;\n    },\n  },\n\n  /**\n   * Determines if a normal bias will be applied to shadows.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {Boolean}\n   * @default true\n   */\n  normalOffset: {\n    get: function () {\n      return this._normalOffset;\n    },\n    set: function (value) {\n      this.dirty = this._normalOffset !== value;\n      this._normalOffset = value;\n      this._terrainBias.normalOffset = value;\n      this._primitiveBias.normalOffset = value;\n      this._pointBias.normalOffset = value;\n    },\n  },\n\n  /**\n   * Determines if soft shadows are enabled. Uses pcf filtering which requires more texture reads and may hurt performance.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {Boolean}\n   * @default false\n   */\n  softShadows: {\n    get: function () {\n      return this._softShadows;\n    },\n    set: function (value) {\n      this.dirty = this._softShadows !== value;\n      this._softShadows = value;\n    },\n  },\n\n  /**\n   * The width and height, in pixels, of each shadow map.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {Number}\n   * @default 2048\n   */\n  size: {\n    get: function () {\n      return this._size;\n    },\n    set: function (value) {\n      resize(this, value);\n    },\n  },\n\n  /**\n   * Whether the shadow map is out of view of the scene camera.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {Boolean}\n   * @readonly\n   * @private\n   */\n  outOfView: {\n    get: function () {\n      return this._outOfView;\n    },\n  },\n\n  /**\n   * The culling volume of the shadow frustum.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {CullingVolume}\n   * @readonly\n   * @private\n   */\n  shadowMapCullingVolume: {\n    get: function () {\n      return this._shadowMapCullingVolume;\n    },\n  },\n\n  /**\n   * The passes used for rendering shadows. Each face of a point light or each cascade for a cascaded shadow map is a separate pass.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {ShadowPass[]}\n   * @readonly\n   * @private\n   */\n  passes: {\n    get: function () {\n      return this._passes;\n    },\n  },\n\n  /**\n   * Whether the light source is a point light.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {Boolean}\n   * @readonly\n   * @private\n   */\n  isPointLight: {\n    get: function () {\n      return this._isPointLight;\n    },\n  },\n\n  /**\n   * Debug option for visualizing the cascades by color.\n   *\n   * @memberof ShadowMap.prototype\n   * @type {Boolean}\n   * @default false\n   * @private\n   */\n  debugCascadeColors: {\n    get: function () {\n      return this._debugCascadeColors;\n    },\n    set: function (value) {\n      this.dirty = this._debugCascadeColors !== value;\n      this._debugCascadeColors = value;\n    },\n  },\n});\n\nfunction destroyFramebuffer(shadowMap) {\n  var length = shadowMap._passes.length;\n  for (var i = 0; i < length; ++i) {\n    var pass = shadowMap._passes[i];\n    var framebuffer = pass.framebuffer;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(framebuffer) && !framebuffer.isDestroyed()) {\n      framebuffer.destroy();\n    }\n    pass.framebuffer = undefined;\n  }\n\n  // Destroy the framebuffer attachments\n  shadowMap._depthAttachment =\n    shadowMap._depthAttachment && shadowMap._depthAttachment.destroy();\n  shadowMap._colorAttachment =\n    shadowMap._colorAttachment && shadowMap._colorAttachment.destroy();\n}\n\nfunction createFramebufferColor(shadowMap, context) {\n  var depthRenderbuffer = new _Renderer_Renderbuffer_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"] */ .Z({\n    context: context,\n    width: shadowMap._textureSize.x,\n    height: shadowMap._textureSize.y,\n    format: _Renderer_RenderbufferFormat_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"].DEPTH_COMPONENT16 */ .Z.DEPTH_COMPONENT16,\n  });\n\n  var colorTexture = new _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"] */ .Z({\n    context: context,\n    width: shadowMap._textureSize.x,\n    height: shadowMap._textureSize.y,\n    pixelFormat: _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].RGBA */ .Z.RGBA,\n    pixelDatatype: _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n    sampler: _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_36__/* ["default"].NEAREST */ .Z.NEAREST,\n  });\n\n  var framebuffer = new _Renderer_Framebuffer_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"] */ .Z({\n    context: context,\n    depthRenderbuffer: depthRenderbuffer,\n    colorTextures: [colorTexture],\n    destroyAttachments: false,\n  });\n\n  var length = shadowMap._passes.length;\n  for (var i = 0; i < length; ++i) {\n    var pass = shadowMap._passes[i];\n    pass.framebuffer = framebuffer;\n    pass.passState.framebuffer = framebuffer;\n  }\n\n  shadowMap._shadowMapTexture = colorTexture;\n  shadowMap._depthAttachment = depthRenderbuffer;\n  shadowMap._colorAttachment = colorTexture;\n}\n\nfunction createFramebufferDepth(shadowMap, context) {\n  var depthStencilTexture = new _Renderer_Texture_js__WEBPACK_IMPORTED_MODULE_37__/* ["default"] */ .Z({\n    context: context,\n    width: shadowMap._textureSize.x,\n    height: shadowMap._textureSize.y,\n    pixelFormat: _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].DEPTH_STENCIL */ .Z.DEPTH_STENCIL,\n    pixelDatatype: _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].UNSIGNED_INT_24_8 */ .Z.UNSIGNED_INT_24_8,\n    sampler: _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_36__/* ["default"].NEAREST */ .Z.NEAREST,\n  });\n\n  var framebuffer = new _Renderer_Framebuffer_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"] */ .Z({\n    context: context,\n    depthStencilTexture: depthStencilTexture,\n    destroyAttachments: false,\n  });\n\n  var length = shadowMap._passes.length;\n  for (var i = 0; i < length; ++i) {\n    var pass = shadowMap._passes[i];\n    pass.framebuffer = framebuffer;\n    pass.passState.framebuffer = framebuffer;\n  }\n\n  shadowMap._shadowMapTexture = depthStencilTexture;\n  shadowMap._depthAttachment = depthStencilTexture;\n}\n\nfunction createFramebufferCube(shadowMap, context) {\n  var depthRenderbuffer = new _Renderer_Renderbuffer_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"] */ .Z({\n    context: context,\n    width: shadowMap._textureSize.x,\n    height: shadowMap._textureSize.y,\n    format: _Renderer_RenderbufferFormat_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"].DEPTH_COMPONENT16 */ .Z.DEPTH_COMPONENT16,\n  });\n\n  var cubeMap = new _Renderer_CubeMap_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"] */ .Z({\n    context: context,\n    width: shadowMap._textureSize.x,\n    height: shadowMap._textureSize.y,\n    pixelFormat: _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].RGBA */ .Z.RGBA,\n    pixelDatatype: _Renderer_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n    sampler: _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_36__/* ["default"].NEAREST */ .Z.NEAREST,\n  });\n\n  var faces = [\n    cubeMap.negativeX,\n    cubeMap.negativeY,\n    cubeMap.negativeZ,\n    cubeMap.positiveX,\n    cubeMap.positiveY,\n    cubeMap.positiveZ,\n  ];\n\n  for (var i = 0; i < 6; ++i) {\n    var framebuffer = new _Renderer_Framebuffer_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"] */ .Z({\n      context: context,\n      depthRenderbuffer: depthRenderbuffer,\n      colorTextures: [faces[i]],\n      destroyAttachments: false,\n    });\n    var pass = shadowMap._passes[i];\n    pass.framebuffer = framebuffer;\n    pass.passState.framebuffer = framebuffer;\n  }\n\n  shadowMap._shadowMapTexture = cubeMap;\n  shadowMap._depthAttachment = depthRenderbuffer;\n  shadowMap._colorAttachment = cubeMap;\n}\n\nfunction createFramebuffer(shadowMap, context) {\n  if (shadowMap._isPointLight) {\n    createFramebufferCube(shadowMap, context);\n  } else if (shadowMap._usesDepthTexture) {\n    createFramebufferDepth(shadowMap, context);\n  } else {\n    createFramebufferColor(shadowMap, context);\n  }\n}\n\nfunction checkFramebuffer(shadowMap, context) {\n  // Attempt to make an FBO with only a depth texture. If it fails, fallback to a color texture.\n  if (\n    shadowMap._usesDepthTexture &&\n    shadowMap._passes[0].framebuffer.status !==\n      _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"].FRAMEBUFFER_COMPLETE */ .Z.FRAMEBUFFER_COMPLETE\n  ) {\n    shadowMap._usesDepthTexture = false;\n    createRenderStates(shadowMap);\n    destroyFramebuffer(shadowMap);\n    createFramebuffer(shadowMap, context);\n  }\n}\n\nfunction updateFramebuffer(shadowMap, context) {\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(shadowMap._passes[0].framebuffer) ||\n    shadowMap._shadowMapTexture.width !== shadowMap._textureSize.x\n  ) {\n    destroyFramebuffer(shadowMap);\n    createFramebuffer(shadowMap, context);\n    checkFramebuffer(shadowMap, context);\n    clearFramebuffer(shadowMap, context);\n  }\n}\n\nfunction clearFramebuffer(shadowMap, context, shadowPass) {\n  shadowPass = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(shadowPass, 0);\n  if (shadowMap._isPointLight || shadowPass === 0) {\n    shadowMap._clearCommand.framebuffer =\n      shadowMap._passes[shadowPass].framebuffer;\n    shadowMap._clearCommand.execute(context, shadowMap._clearPassState);\n  }\n}\n\nfunction resize(shadowMap, size) {\n  shadowMap._size = size;\n  var passes = shadowMap._passes;\n  var numberOfPasses = passes.length;\n  var textureSize = shadowMap._textureSize;\n\n  if (shadowMap._isPointLight) {\n    size =\n      _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].maximumCubeMapSize */ .Z.maximumCubeMapSize >= size\n        ? size\n        : _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].maximumCubeMapSize */ .Z.maximumCubeMapSize;\n    textureSize.x = size;\n    textureSize.y = size;\n    var faceViewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(0, 0, size, size);\n    passes[0].passState.viewport = faceViewport;\n    passes[1].passState.viewport = faceViewport;\n    passes[2].passState.viewport = faceViewport;\n    passes[3].passState.viewport = faceViewport;\n    passes[4].passState.viewport = faceViewport;\n    passes[5].passState.viewport = faceViewport;\n  } else if (numberOfPasses === 1) {\n    // +----+\n    // |  1 |\n    // +----+\n    size =\n      _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].maximumTextureSize */ .Z.maximumTextureSize >= size\n        ? size\n        : _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].maximumTextureSize */ .Z.maximumTextureSize;\n    textureSize.x = size;\n    textureSize.y = size;\n    passes[0].passState.viewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(0, 0, size, size);\n  } else if (numberOfPasses === 4) {\n    // +----+----+\n    // |  3 |  4 |\n    // +----+----+\n    // |  1 |  2 |\n    // +----+----+\n    size =\n      _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].maximumTextureSize */ .Z.maximumTextureSize >= size * 2\n        ? size\n        : _Renderer_ContextLimits_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].maximumTextureSize */ .Z.maximumTextureSize / 2;\n    textureSize.x = size * 2;\n    textureSize.y = size * 2;\n    passes[0].passState.viewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(0, 0, size, size);\n    passes[1].passState.viewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(size, 0, size, size);\n    passes[2].passState.viewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(0, size, size, size);\n    passes[3].passState.viewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      size,\n      size,\n      size,\n      size\n    );\n  }\n\n  // Update clear pass state\n  shadowMap._clearPassState.viewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n    0,\n    0,\n    textureSize.x,\n    textureSize.y\n  );\n\n  // Transforms shadow coordinates [0, 1] into the pass\'s region of the texture\n  for (var i = 0; i < numberOfPasses; ++i) {\n    var pass = passes[i];\n    var viewport = pass.passState.viewport;\n    var biasX = viewport.x / textureSize.x;\n    var biasY = viewport.y / textureSize.y;\n    var scaleX = viewport.width / textureSize.x;\n    var scaleY = viewport.height / textureSize.y;\n    pass.textureOffsets = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z(\n      scaleX,\n      0.0,\n      0.0,\n      biasX,\n      0.0,\n      scaleY,\n      0.0,\n      biasY,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0\n    );\n  }\n}\n\nvar scratchViewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nfunction createDebugShadowViewCommand(shadowMap, context) {\n  var fs;\n  if (shadowMap._isPointLight) {\n    fs =\n      "uniform samplerCube shadowMap_textureCube; \\n" +\n      "varying vec2 v_textureCoordinates; \\n" +\n      "void main() \\n" +\n      "{ \\n" +\n      "    vec2 uv = v_textureCoordinates; \\n" +\n      "    vec3 dir; \\n" +\n      " \\n" +\n      "    if (uv.y < 0.5) \\n" +\n      "    { \\n" +\n      "        if (uv.x < 0.333) \\n" +\n      "        { \\n" +\n      "            dir.x = -1.0; \\n" +\n      "            dir.y = uv.x * 6.0 - 1.0; \\n" +\n      "            dir.z = uv.y * 4.0 - 1.0; \\n" +\n      "        } \\n" +\n      "        else if (uv.x < 0.666) \\n" +\n      "        { \\n" +\n      "            dir.y = -1.0; \\n" +\n      "            dir.x = uv.x * 6.0 - 3.0; \\n" +\n      "            dir.z = uv.y * 4.0 - 1.0; \\n" +\n      "        } \\n" +\n      "        else \\n" +\n      "        { \\n" +\n      "            dir.z = -1.0; \\n" +\n      "            dir.x = uv.x * 6.0 - 5.0; \\n" +\n      "            dir.y = uv.y * 4.0 - 1.0; \\n" +\n      "        } \\n" +\n      "    } \\n" +\n      "    else \\n" +\n      "    { \\n" +\n      "        if (uv.x < 0.333) \\n" +\n      "        { \\n" +\n      "            dir.x = 1.0; \\n" +\n      "            dir.y = uv.x * 6.0 - 1.0; \\n" +\n      "            dir.z = uv.y * 4.0 - 3.0; \\n" +\n      "        } \\n" +\n      "        else if (uv.x < 0.666) \\n" +\n      "        { \\n" +\n      "            dir.y = 1.0; \\n" +\n      "            dir.x = uv.x * 6.0 - 3.0; \\n" +\n      "            dir.z = uv.y * 4.0 - 3.0; \\n" +\n      "        } \\n" +\n      "        else \\n" +\n      "        { \\n" +\n      "            dir.z = 1.0; \\n" +\n      "            dir.x = uv.x * 6.0 - 5.0; \\n" +\n      "            dir.y = uv.y * 4.0 - 3.0; \\n" +\n      "        } \\n" +\n      "    } \\n" +\n      " \\n" +\n      "    float shadow = czm_unpackDepth(textureCube(shadowMap_textureCube, dir)); \\n" +\n      "    gl_FragColor = vec4(vec3(shadow), 1.0); \\n" +\n      "} \\n";\n  } else {\n    fs =\n      "uniform sampler2D shadowMap_texture; \\n" +\n      "varying vec2 v_textureCoordinates; \\n" +\n      "void main() \\n" +\n      "{ \\n" +\n      (shadowMap._usesDepthTexture\n        ? "    float shadow = texture2D(shadowMap_texture, v_textureCoordinates).r; \\n"\n        : "    float shadow = czm_unpackDepth(texture2D(shadowMap_texture, v_textureCoordinates)); \\n") +\n      "    gl_FragColor = vec4(vec3(shadow), 1.0); \\n" +\n      "} \\n";\n  }\n\n  var drawCommand = context.createViewportQuadCommand(fs, {\n    uniformMap: {\n      shadowMap_texture: function () {\n        return shadowMap._shadowMapTexture;\n      },\n      shadowMap_textureCube: function () {\n        return shadowMap._shadowMapTexture;\n      },\n    },\n  });\n  drawCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_31__/* ["default"].OVERLAY */ .Z.OVERLAY;\n  return drawCommand;\n}\n\nfunction updateDebugShadowViewCommand(shadowMap, frameState) {\n  // Draws the shadow map on the bottom-right corner of the screen\n  var context = frameState.context;\n  var screenWidth = frameState.context.drawingBufferWidth;\n  var screenHeight = frameState.context.drawingBufferHeight;\n  var size = Math.min(screenWidth, screenHeight) * 0.3;\n\n  var viewport = scratchViewport;\n  viewport.x = screenWidth - size;\n  viewport.y = 0;\n  viewport.width = size;\n  viewport.height = size;\n\n  var debugCommand = shadowMap._debugShadowViewCommand;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(debugCommand)) {\n    debugCommand = createDebugShadowViewCommand(shadowMap, context);\n    shadowMap._debugShadowViewCommand = debugCommand;\n  }\n\n  // Get a new RenderState for the updated viewport size\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(debugCommand.renderState) ||\n    !_Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(debugCommand.renderState.viewport, viewport)\n  ) {\n    debugCommand.renderState = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_35__/* ["default"].fromCache */ .Z.fromCache({\n      viewport: _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(viewport),\n    });\n  }\n\n  frameState.commandList.push(shadowMap._debugShadowViewCommand);\n}\n\nvar frustumCornersNDC = new Array(8);\nfrustumCornersNDC[0] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(-1.0, -1.0, -1.0, 1.0);\nfrustumCornersNDC[1] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(1.0, -1.0, -1.0, 1.0);\nfrustumCornersNDC[2] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(1.0, 1.0, -1.0, 1.0);\nfrustumCornersNDC[3] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(-1.0, 1.0, -1.0, 1.0);\nfrustumCornersNDC[4] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(-1.0, -1.0, 1.0, 1.0);\nfrustumCornersNDC[5] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(1.0, -1.0, 1.0, 1.0);\nfrustumCornersNDC[6] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(1.0, 1.0, 1.0, 1.0);\nfrustumCornersNDC[7] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(-1.0, 1.0, 1.0, 1.0);\n\nvar scratchMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\nvar scratchFrustumCorners = new Array(8);\nfor (var i = 0; i < 8; ++i) {\n  scratchFrustumCorners[i] = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n}\n\nfunction createDebugPointLight(modelMatrix, color) {\n  var box = new _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z({\n    geometry: new _Core_BoxOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({\n      minimum: new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(-0.5, -0.5, -0.5),\n      maximum: new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.5, 0.5, 0.5),\n    }),\n    attributes: {\n      color: _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromColor */ .Z.fromColor(color),\n    },\n  });\n\n  var sphere = new _Core_GeometryInstance_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z({\n    geometry: new _Core_SphereOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z({\n      radius: 0.5,\n    }),\n    attributes: {\n      color: _Core_ColorGeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].fromColor */ .Z.fromColor(color),\n    },\n  });\n\n  return new _Primitive_js__WEBPACK_IMPORTED_MODULE_42__/* ["default"] */ .Z({\n    geometryInstances: [box, sphere],\n    appearance: new _PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_41__/* ["default"] */ .Z({\n      translucent: false,\n      flat: true,\n    }),\n    asynchronous: false,\n    modelMatrix: modelMatrix,\n  });\n}\n\nvar debugOutlineColors = [_Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].RED */ .Z.RED, _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].GREEN */ .Z.GREEN, _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].BLUE */ .Z.BLUE, _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].MAGENTA */ .Z.MAGENTA];\nvar scratchScale = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nfunction applyDebugSettings(shadowMap, frameState) {\n  updateDebugShadowViewCommand(shadowMap, frameState);\n\n  var enterFreezeFrame =\n    shadowMap.debugFreezeFrame && !shadowMap._debugFreezeFrame;\n  shadowMap._debugFreezeFrame = shadowMap.debugFreezeFrame;\n\n  // Draw scene camera in freeze frame mode\n  if (shadowMap.debugFreezeFrame) {\n    if (enterFreezeFrame) {\n      // Recreate debug camera when entering freeze frame mode\n      shadowMap._debugCameraFrustum =\n        shadowMap._debugCameraFrustum &&\n        shadowMap._debugCameraFrustum.destroy();\n      shadowMap._debugCameraFrustum = new _DebugCameraPrimitive_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z({\n        camera: shadowMap._sceneCamera,\n        color: _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].CYAN */ .Z.CYAN,\n        updateOnChange: false,\n      });\n    }\n    shadowMap._debugCameraFrustum.update(frameState);\n  }\n\n  if (shadowMap._cascadesEnabled) {\n    // Draw cascades only in freeze frame mode\n    if (shadowMap.debugFreezeFrame) {\n      if (enterFreezeFrame) {\n        // Recreate debug frustum when entering freeze frame mode\n        shadowMap._debugLightFrustum =\n          shadowMap._debugLightFrustum &&\n          shadowMap._debugLightFrustum.destroy();\n        shadowMap._debugLightFrustum = new _DebugCameraPrimitive_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z({\n          camera: shadowMap._shadowMapCamera,\n          color: _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].YELLOW */ .Z.YELLOW,\n          updateOnChange: false,\n        });\n      }\n      shadowMap._debugLightFrustum.update(frameState);\n\n      for (var i = 0; i < shadowMap._numberOfCascades; ++i) {\n        if (enterFreezeFrame) {\n          // Recreate debug frustum when entering freeze frame mode\n          shadowMap._debugCascadeFrustums[i] =\n            shadowMap._debugCascadeFrustums[i] &&\n            shadowMap._debugCascadeFrustums[i].destroy();\n          shadowMap._debugCascadeFrustums[i] = new _DebugCameraPrimitive_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z({\n            camera: shadowMap._passes[i].camera,\n            color: debugOutlineColors[i],\n            updateOnChange: false,\n          });\n        }\n        shadowMap._debugCascadeFrustums[i].update(frameState);\n      }\n    }\n  } else if (shadowMap._isPointLight) {\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(shadowMap._debugLightFrustum) || shadowMap._needsUpdate) {\n      var translation = shadowMap._shadowMapCamera.positionWC;\n      var rotation = _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].IDENTITY */ .Z.IDENTITY;\n      var uniformScale = shadowMap._pointLightRadius * 2.0;\n      var scale = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromElements */ .Z.fromElements(\n        uniformScale,\n        uniformScale,\n        uniformScale,\n        scratchScale\n      );\n      var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].fromTranslationQuaternionRotationScale */ .Z.fromTranslationQuaternionRotationScale(\n        translation,\n        rotation,\n        scale,\n        scratchMatrix\n      );\n\n      shadowMap._debugLightFrustum =\n        shadowMap._debugLightFrustum && shadowMap._debugLightFrustum.destroy();\n      shadowMap._debugLightFrustum = createDebugPointLight(\n        modelMatrix,\n        _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].YELLOW */ .Z.YELLOW\n      );\n    }\n    shadowMap._debugLightFrustum.update(frameState);\n  } else {\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(shadowMap._debugLightFrustum) || shadowMap._needsUpdate) {\n      shadowMap._debugLightFrustum = new _DebugCameraPrimitive_js__WEBPACK_IMPORTED_MODULE_40__/* ["default"] */ .Z({\n        camera: shadowMap._shadowMapCamera,\n        color: _Core_Color_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].YELLOW */ .Z.YELLOW,\n        updateOnChange: false,\n      });\n    }\n    shadowMap._debugLightFrustum.update(frameState);\n  }\n}\n\nfunction ShadowMapCamera() {\n  this.viewMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n  this.inverseViewMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n  this.frustum = undefined;\n  this.positionCartographic = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\n  this.positionWC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n  this.directionWC = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNIT_Z */ .Z.UNIT_Z);\n  this.upWC = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNIT_Y */ .Z.UNIT_Y);\n  this.rightWC = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNIT_X */ .Z.UNIT_X);\n  this.viewProjectionMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n}\n\nShadowMapCamera.prototype.clone = function (camera) {\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].clone */ .Z.clone(camera.viewMatrix, this.viewMatrix);\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].clone */ .Z.clone(camera.inverseViewMatrix, this.inverseViewMatrix);\n  this.frustum = camera.frustum.clone(this.frustum);\n  _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(camera.positionCartographic, this.positionCartographic);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(camera.positionWC, this.positionWC);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(camera.directionWC, this.directionWC);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(camera.upWC, this.upWC);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(camera.rightWC, this.rightWC);\n};\n\n// Converts from NDC space to texture space\nvar scaleBiasMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z(\n  0.5,\n  0.0,\n  0.0,\n  0.5,\n  0.0,\n  0.5,\n  0.0,\n  0.5,\n  0.0,\n  0.0,\n  0.5,\n  0.5,\n  0.0,\n  0.0,\n  0.0,\n  1.0\n);\n\nShadowMapCamera.prototype.getViewProjection = function () {\n  var view = this.viewMatrix;\n  var projection = this.frustum.projectionMatrix;\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(projection, view, this.viewProjectionMatrix);\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(\n    scaleBiasMatrix,\n    this.viewProjectionMatrix,\n    this.viewProjectionMatrix\n  );\n  return this.viewProjectionMatrix;\n};\n\nvar scratchSplits = new Array(5);\nvar scratchFrustum = new _Core_PerspectiveFrustum_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z();\nvar scratchCascadeDistances = new Array(4);\nvar scratchMin = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchMax = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nfunction computeCascades(shadowMap, frameState) {\n  var shadowMapCamera = shadowMap._shadowMapCamera;\n  var sceneCamera = shadowMap._sceneCamera;\n  var cameraNear = sceneCamera.frustum.near;\n  var cameraFar = sceneCamera.frustum.far;\n  var numberOfCascades = shadowMap._numberOfCascades;\n\n  // Split cascades. Use a mix of linear and log splits.\n  var i;\n  var range = cameraFar - cameraNear;\n  var ratio = cameraFar / cameraNear;\n\n  var lambda = 0.9;\n  var clampCascadeDistances = false;\n\n  // When the camera is close to a relatively small model, provide more detail in the closer cascades.\n  // If the camera is near or inside a large model, such as the root tile of a city, then use the default values.\n  // To get the most accurate cascade splits we would need to find the min and max values from the depth texture.\n  if (frameState.shadowState.closestObjectSize < 200.0) {\n    clampCascadeDistances = true;\n    lambda = 0.9;\n  }\n\n  var cascadeDistances = scratchCascadeDistances;\n  var splits = scratchSplits;\n  splits[0] = cameraNear;\n  splits[numberOfCascades] = cameraFar;\n\n  // Find initial splits\n  for (i = 0; i < numberOfCascades; ++i) {\n    var p = (i + 1) / numberOfCascades;\n    var logScale = cameraNear * Math.pow(ratio, p);\n    var uniformScale = cameraNear + range * p;\n    var split = _Core_Math_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].lerp */ .Z.lerp(uniformScale, logScale, lambda);\n    splits[i + 1] = split;\n    cascadeDistances[i] = split - splits[i];\n  }\n\n  if (clampCascadeDistances) {\n    // Clamp each cascade to its maximum distance\n    for (i = 0; i < numberOfCascades; ++i) {\n      cascadeDistances[i] = Math.min(\n        cascadeDistances[i],\n        shadowMap._maximumCascadeDistances[i]\n      );\n    }\n\n    // Recompute splits\n    var distance = splits[0];\n    for (i = 0; i < numberOfCascades - 1; ++i) {\n      distance += cascadeDistances[i];\n      splits[i + 1] = distance;\n    }\n  }\n\n  _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].unpack */ .Z.unpack(splits, 0, shadowMap._cascadeSplits[0]);\n  _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].unpack */ .Z.unpack(splits, 1, shadowMap._cascadeSplits[1]);\n  _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].unpack */ .Z.unpack(cascadeDistances, 0, shadowMap._cascadeDistances);\n\n  var shadowFrustum = shadowMapCamera.frustum;\n  var left = shadowFrustum.left;\n  var right = shadowFrustum.right;\n  var bottom = shadowFrustum.bottom;\n  var top = shadowFrustum.top;\n  var near = shadowFrustum.near;\n  var far = shadowFrustum.far;\n\n  var position = shadowMapCamera.positionWC;\n  var direction = shadowMapCamera.directionWC;\n  var up = shadowMapCamera.upWC;\n\n  var cascadeSubFrustum = sceneCamera.frustum.clone(scratchFrustum);\n  var shadowViewProjection = shadowMapCamera.getViewProjection();\n\n  for (i = 0; i < numberOfCascades; ++i) {\n    // Find the bounding box of the camera sub-frustum in shadow map texture space\n    cascadeSubFrustum.near = splits[i];\n    cascadeSubFrustum.far = splits[i + 1];\n    var viewProjection = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(\n      cascadeSubFrustum.projectionMatrix,\n      sceneCamera.viewMatrix,\n      scratchMatrix\n    );\n    var inverseViewProjection = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].inverse */ .Z.inverse(viewProjection, scratchMatrix);\n    var shadowMapMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(\n      shadowViewProjection,\n      inverseViewProjection,\n      scratchMatrix\n    );\n\n    // Project each corner from camera NDC space to shadow map texture space. Min and max will be from 0 to 1.\n    var min = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromElements */ .Z.fromElements(\n      Number.MAX_VALUE,\n      Number.MAX_VALUE,\n      Number.MAX_VALUE,\n      scratchMin\n    );\n    var max = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromElements */ .Z.fromElements(\n      -Number.MAX_VALUE,\n      -Number.MAX_VALUE,\n      -Number.MAX_VALUE,\n      scratchMax\n    );\n\n    for (var k = 0; k < 8; ++k) {\n      var corner = _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].clone */ .Z.clone(\n        frustumCornersNDC[k],\n        scratchFrustumCorners[k]\n      );\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiplyByVector */ .Z.multiplyByVector(shadowMapMatrix, corner, corner);\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].divideByScalar */ .Z.divideByScalar(corner, corner.w, corner); // Handle the perspective divide\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].minimumByComponent */ .Z.minimumByComponent(corner, min, min);\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].maximumByComponent */ .Z.maximumByComponent(corner, max, max);\n    }\n\n    // Limit light-space coordinates to the [0, 1] range\n    min.x = Math.max(min.x, 0.0);\n    min.y = Math.max(min.y, 0.0);\n    min.z = 0.0; // Always start cascade frustum at the top of the light frustum to capture objects in the light\'s path\n    max.x = Math.min(max.x, 1.0);\n    max.y = Math.min(max.y, 1.0);\n    max.z = Math.min(max.z, 1.0);\n\n    var pass = shadowMap._passes[i];\n    var cascadeCamera = pass.camera;\n    cascadeCamera.clone(shadowMapCamera); // PERFORMANCE_IDEA : could do a shallow clone for all properties except the frustum\n\n    var frustum = cascadeCamera.frustum;\n    frustum.left = left + min.x * (right - left);\n    frustum.right = left + max.x * (right - left);\n    frustum.bottom = bottom + min.y * (top - bottom);\n    frustum.top = bottom + max.y * (top - bottom);\n    frustum.near = near + min.z * (far - near);\n    frustum.far = near + max.z * (far - near);\n\n    pass.cullingVolume = cascadeCamera.frustum.computeCullingVolume(\n      position,\n      direction,\n      up\n    );\n\n    // Transforms from eye space to the cascade\'s texture space\n    var cascadeMatrix = shadowMap._cascadeMatrices[i];\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(\n      cascadeCamera.getViewProjection(),\n      sceneCamera.inverseViewMatrix,\n      cascadeMatrix\n    );\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(pass.textureOffsets, cascadeMatrix, cascadeMatrix);\n  }\n}\n\nvar scratchLightView = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\nvar scratchRight = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchUp = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchTranslation = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nfunction fitShadowMapToScene(shadowMap, frameState) {\n  var shadowMapCamera = shadowMap._shadowMapCamera;\n  var sceneCamera = shadowMap._sceneCamera;\n\n  // 1. First find a tight bounding box in light space that contains the entire camera frustum.\n  var viewProjection = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(\n    sceneCamera.frustum.projectionMatrix,\n    sceneCamera.viewMatrix,\n    scratchMatrix\n  );\n  var inverseViewProjection = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].inverse */ .Z.inverse(viewProjection, scratchMatrix);\n\n  // Start to construct the light view matrix. Set translation later once the bounding box is found.\n  var lightDir = shadowMapCamera.directionWC;\n  var lightUp = sceneCamera.directionWC; // Align shadows to the camera view.\n  if (_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(lightDir, lightUp, _Core_Math_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].EPSILON10 */ .Z.EPSILON10)) {\n    lightUp = sceneCamera.upWC;\n  }\n  var lightRight = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].cross */ .Z.cross(lightDir, lightUp, scratchRight);\n  lightUp = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].cross */ .Z.cross(lightRight, lightDir, scratchUp); // Recalculate up now that right is derived\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].normalize */ .Z.normalize(lightUp, lightUp);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].normalize */ .Z.normalize(lightRight, lightRight);\n  var lightPosition = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromElements */ .Z.fromElements(\n    0.0,\n    0.0,\n    0.0,\n    scratchTranslation\n  );\n\n  var lightView = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].computeView */ .Z.computeView(\n    lightPosition,\n    lightDir,\n    lightUp,\n    lightRight,\n    scratchLightView\n  );\n  var cameraToLight = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(\n    lightView,\n    inverseViewProjection,\n    scratchMatrix\n  );\n\n  // Project each corner from NDC space to light view space, and calculate a min and max in light view space\n  var min = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromElements */ .Z.fromElements(\n    Number.MAX_VALUE,\n    Number.MAX_VALUE,\n    Number.MAX_VALUE,\n    scratchMin\n  );\n  var max = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromElements */ .Z.fromElements(\n    -Number.MAX_VALUE,\n    -Number.MAX_VALUE,\n    -Number.MAX_VALUE,\n    scratchMax\n  );\n\n  for (var i = 0; i < 8; ++i) {\n    var corner = _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].clone */ .Z.clone(\n      frustumCornersNDC[i],\n      scratchFrustumCorners[i]\n    );\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiplyByVector */ .Z.multiplyByVector(cameraToLight, corner, corner);\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].divideByScalar */ .Z.divideByScalar(corner, corner.w, corner); // Handle the perspective divide\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].minimumByComponent */ .Z.minimumByComponent(corner, min, min);\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].maximumByComponent */ .Z.maximumByComponent(corner, max, max);\n  }\n\n  // 2. Set bounding box back to include objects in the light\'s view\n  max.z += 1000.0; // Note: in light space, a positive number is behind the camera\n  min.z -= 10.0; // Extend the shadow volume forward slightly to avoid problems right at the edge\n\n  // 3. Adjust light view matrix so that it is centered on the bounding volume\n  var translation = scratchTranslation;\n  translation.x = -(0.5 * (min.x + max.x));\n  translation.y = -(0.5 * (min.y + max.y));\n  translation.z = -max.z;\n\n  var translationMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].fromTranslation */ .Z.fromTranslation(translation, scratchMatrix);\n  lightView = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(translationMatrix, lightView, lightView);\n\n  // 4. Create an orthographic frustum that covers the bounding box extents\n  var halfWidth = 0.5 * (max.x - min.x);\n  var halfHeight = 0.5 * (max.y - min.y);\n  var depth = max.z - min.z;\n\n  var frustum = shadowMapCamera.frustum;\n  frustum.left = -halfWidth;\n  frustum.right = halfWidth;\n  frustum.bottom = -halfHeight;\n  frustum.top = halfHeight;\n  frustum.near = 0.01;\n  frustum.far = depth;\n\n  // 5. Update the shadow map camera\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].clone */ .Z.clone(lightView, shadowMapCamera.viewMatrix);\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].inverse */ .Z.inverse(lightView, shadowMapCamera.inverseViewMatrix);\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].getTranslation */ .Z.getTranslation(\n    shadowMapCamera.inverseViewMatrix,\n    shadowMapCamera.positionWC\n  );\n  frameState.mapProjection.ellipsoid.cartesianToCartographic(\n    shadowMapCamera.positionWC,\n    shadowMapCamera.positionCartographic\n  );\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(lightDir, shadowMapCamera.directionWC);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(lightUp, shadowMapCamera.upWC);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(lightRight, shadowMapCamera.rightWC);\n}\n\nvar directions = [\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(-1.0, 0.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, -1.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, 0.0, -1.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(1.0, 0.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, 1.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, 0.0, 1.0),\n];\n\nvar ups = [\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, -1.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, 0.0, -1.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, -1.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, -1.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, 0.0, 1.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, -1.0, 0.0),\n];\n\nvar rights = [\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, 0.0, 1.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(1.0, 0.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(-1.0, 0.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(0.0, 0.0, -1.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(1.0, 0.0, 0.0),\n  new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(1.0, 0.0, 0.0),\n];\n\nfunction computeOmnidirectional(shadowMap, frameState) {\n  // All sides share the same frustum\n  var frustum = new _Core_PerspectiveFrustum_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z();\n  frustum.fov = _Core_Math_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO;\n  frustum.near = 1.0;\n  frustum.far = shadowMap._pointLightRadius;\n  frustum.aspectRatio = 1.0;\n\n  for (var i = 0; i < 6; ++i) {\n    var camera = shadowMap._passes[i].camera;\n    camera.positionWC = shadowMap._shadowMapCamera.positionWC;\n    camera.positionCartographic = frameState.mapProjection.ellipsoid.cartesianToCartographic(\n      camera.positionWC,\n      camera.positionCartographic\n    );\n    camera.directionWC = directions[i];\n    camera.upWC = ups[i];\n    camera.rightWC = rights[i];\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].computeView */ .Z.computeView(\n      camera.positionWC,\n      camera.directionWC,\n      camera.upWC,\n      camera.rightWC,\n      camera.viewMatrix\n    );\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].inverse */ .Z.inverse(camera.viewMatrix, camera.inverseViewMatrix);\n\n    camera.frustum = frustum;\n  }\n}\n\nvar scratchCartesian1 = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchCartesian2 = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchBoundingSphere = new _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchCenter = scratchBoundingSphere.center;\n\nfunction checkVisibility(shadowMap, frameState) {\n  var sceneCamera = shadowMap._sceneCamera;\n  var shadowMapCamera = shadowMap._shadowMapCamera;\n\n  var boundingSphere = scratchBoundingSphere;\n\n  // Check whether the shadow map is in view and needs to be updated\n  if (shadowMap._cascadesEnabled) {\n    // If the nearest shadow receiver is further than the shadow map\'s maximum distance then the shadow map is out of view.\n    if (sceneCamera.frustum.near >= shadowMap.maximumDistance) {\n      shadowMap._outOfView = true;\n      shadowMap._needsUpdate = false;\n      return;\n    }\n\n    // If the light source is below the horizon then the shadow map is out of view\n    var surfaceNormal = frameState.mapProjection.ellipsoid.geodeticSurfaceNormal(\n      sceneCamera.positionWC,\n      scratchCartesian1\n    );\n    var lightDirection = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].negate */ .Z.negate(\n      shadowMapCamera.directionWC,\n      scratchCartesian2\n    );\n    var dot = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].dot */ .Z.dot(surfaceNormal, lightDirection);\n    if (shadowMap.fadingEnabled) {\n      // Shadows start to fade out once the light gets closer to the horizon.\n      // At this point the globe uses vertex lighting alone to darken the surface.\n      var darknessAmount = _Core_Math_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].clamp */ .Z.clamp(dot / 0.1, 0.0, 1.0);\n      shadowMap._darkness = _Core_Math_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].lerp */ .Z.lerp(\n        1.0,\n        shadowMap.darkness,\n        darknessAmount\n      );\n    } else {\n      shadowMap._darkness = shadowMap.darkness;\n    }\n\n    if (dot < 0.0) {\n      shadowMap._outOfView = true;\n      shadowMap._needsUpdate = false;\n      return;\n    }\n\n    // By default cascaded shadows need to update and are always in view\n    shadowMap._needsUpdate = true;\n    shadowMap._outOfView = false;\n  } else if (shadowMap._isPointLight) {\n    // Sphere-frustum intersection test\n    boundingSphere.center = shadowMapCamera.positionWC;\n    boundingSphere.radius = shadowMap._pointLightRadius;\n    shadowMap._outOfView =\n      frameState.cullingVolume.computeVisibility(boundingSphere) ===\n      _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].OUTSIDE */ .Z.OUTSIDE;\n    shadowMap._needsUpdate =\n      !shadowMap._outOfView &&\n      !shadowMap._boundingSphere.equals(boundingSphere);\n    _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(boundingSphere, shadowMap._boundingSphere);\n  } else {\n    // Simplify frustum-frustum intersection test as a sphere-frustum test\n    var frustumRadius = shadowMapCamera.frustum.far / 2.0;\n    var frustumCenter = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].add */ .Z.add(\n      shadowMapCamera.positionWC,\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n        shadowMapCamera.directionWC,\n        frustumRadius,\n        scratchCenter\n      ),\n      scratchCenter\n    );\n    boundingSphere.center = frustumCenter;\n    boundingSphere.radius = frustumRadius;\n    shadowMap._outOfView =\n      frameState.cullingVolume.computeVisibility(boundingSphere) ===\n      _Core_Intersect_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].OUTSIDE */ .Z.OUTSIDE;\n    shadowMap._needsUpdate =\n      !shadowMap._outOfView &&\n      !shadowMap._boundingSphere.equals(boundingSphere);\n    _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(boundingSphere, shadowMap._boundingSphere);\n  }\n}\n\nfunction updateCameras(shadowMap, frameState) {\n  var camera = frameState.camera; // The actual camera in the scene\n  var lightCamera = shadowMap._lightCamera; // The external camera representing the light source\n  var sceneCamera = shadowMap._sceneCamera; // Clone of camera, with clamped near and far planes\n  var shadowMapCamera = shadowMap._shadowMapCamera; // Camera representing the shadow volume, initially cloned from lightCamera\n\n  // Clone light camera into the shadow map camera\n  if (shadowMap._cascadesEnabled) {\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(lightCamera.directionWC, shadowMapCamera.directionWC);\n  } else if (shadowMap._isPointLight) {\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(lightCamera.positionWC, shadowMapCamera.positionWC);\n  } else {\n    shadowMapCamera.clone(lightCamera);\n  }\n\n  // Get the light direction in eye coordinates\n  var lightDirection = shadowMap._lightDirectionEC;\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiplyByPointAsVector */ .Z.multiplyByPointAsVector(\n    camera.viewMatrix,\n    shadowMapCamera.directionWC,\n    lightDirection\n  );\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].normalize */ .Z.normalize(lightDirection, lightDirection);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].negate */ .Z.negate(lightDirection, lightDirection);\n\n  // Get the light position in eye coordinates\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n    camera.viewMatrix,\n    shadowMapCamera.positionWC,\n    shadowMap._lightPositionEC\n  );\n  shadowMap._lightPositionEC.w = shadowMap._pointLightRadius;\n\n  // Get the near and far of the scene camera\n  var near;\n  var far;\n  if (shadowMap._fitNearFar) {\n    // shadowFar can be very large, so limit to shadowMap.maximumDistance\n    // Push the far plane slightly further than the near plane to avoid degenerate frustum\n    near = Math.min(\n      frameState.shadowState.nearPlane,\n      shadowMap.maximumDistance\n    );\n    far = Math.min(frameState.shadowState.farPlane, shadowMap.maximumDistance);\n    far = Math.max(far, near + 1.0);\n  } else {\n    near = camera.frustum.near;\n    far = shadowMap.maximumDistance;\n  }\n\n  shadowMap._sceneCamera = _Camera_js__WEBPACK_IMPORTED_MODULE_38__/* ["default"].clone */ .Z.clone(camera, sceneCamera);\n  camera.frustum.clone(shadowMap._sceneCamera.frustum);\n  shadowMap._sceneCamera.frustum.near = near;\n  shadowMap._sceneCamera.frustum.far = far;\n  shadowMap._distance = far - near;\n\n  checkVisibility(shadowMap, frameState);\n\n  if (!shadowMap._outOfViewPrevious && shadowMap._outOfView) {\n    shadowMap._needsUpdate = true;\n  }\n  shadowMap._outOfViewPrevious = shadowMap._outOfView;\n}\n\n/**\n * @private\n */\nShadowMap.prototype.update = function (frameState) {\n  updateCameras(this, frameState);\n\n  if (this._needsUpdate) {\n    updateFramebuffer(this, frameState.context);\n\n    if (this._isPointLight) {\n      computeOmnidirectional(this, frameState);\n    }\n\n    if (this._cascadesEnabled) {\n      fitShadowMapToScene(this, frameState);\n\n      if (this._numberOfCascades > 1) {\n        computeCascades(this, frameState);\n      }\n    }\n\n    if (!this._isPointLight) {\n      // Compute the culling volume\n      var shadowMapCamera = this._shadowMapCamera;\n      var position = shadowMapCamera.positionWC;\n      var direction = shadowMapCamera.directionWC;\n      var up = shadowMapCamera.upWC;\n      this._shadowMapCullingVolume = shadowMapCamera.frustum.computeCullingVolume(\n        position,\n        direction,\n        up\n      );\n\n      if (this._passes.length === 1) {\n        // Since there is only one pass, use the shadow map camera as the pass camera.\n        this._passes[0].camera.clone(shadowMapCamera);\n      }\n    } else {\n      this._shadowMapCullingVolume = _Core_CullingVolume_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].fromBoundingSphere */ .Z.fromBoundingSphere(\n        this._boundingSphere\n      );\n    }\n  }\n\n  if (this._passes.length === 1) {\n    // Transforms from eye space to shadow texture space.\n    // Always requires an update since the scene camera constantly changes.\n    var inverseView = this._sceneCamera.inverseViewMatrix;\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].multiply */ .Z.multiply(\n      this._shadowMapCamera.getViewProjection(),\n      inverseView,\n      this._shadowMapMatrix\n    );\n  }\n\n  if (this.debugShow) {\n    applyDebugSettings(this, frameState);\n  }\n};\n\n/**\n * @private\n */\nShadowMap.prototype.updatePass = function (context, shadowPass) {\n  clearFramebuffer(this, context, shadowPass);\n};\n\nvar scratchTexelStepSize = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nfunction combineUniforms(shadowMap, uniforms, isTerrain) {\n  var bias = shadowMap._isPointLight\n    ? shadowMap._pointBias\n    : isTerrain\n    ? shadowMap._terrainBias\n    : shadowMap._primitiveBias;\n\n  var mapUniforms = {\n    shadowMap_texture: function () {\n      return shadowMap._shadowMapTexture;\n    },\n    shadowMap_textureCube: function () {\n      return shadowMap._shadowMapTexture;\n    },\n    shadowMap_matrix: function () {\n      return shadowMap._shadowMapMatrix;\n    },\n    shadowMap_cascadeSplits: function () {\n      return shadowMap._cascadeSplits;\n    },\n    shadowMap_cascadeMatrices: function () {\n      return shadowMap._cascadeMatrices;\n    },\n    shadowMap_lightDirectionEC: function () {\n      return shadowMap._lightDirectionEC;\n    },\n    shadowMap_lightPositionEC: function () {\n      return shadowMap._lightPositionEC;\n    },\n    shadowMap_cascadeDistances: function () {\n      return shadowMap._cascadeDistances;\n    },\n    shadowMap_texelSizeDepthBiasAndNormalShadingSmooth: function () {\n      var texelStepSize = scratchTexelStepSize;\n      texelStepSize.x = 1.0 / shadowMap._textureSize.x;\n      texelStepSize.y = 1.0 / shadowMap._textureSize.y;\n\n      return _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromElements */ .Z.fromElements(\n        texelStepSize.x,\n        texelStepSize.y,\n        bias.depthBias,\n        bias.normalShadingSmooth,\n        this.combinedUniforms1\n      );\n    },\n    shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness: function () {\n      return _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromElements */ .Z.fromElements(\n        bias.normalOffsetScale,\n        shadowMap._distance,\n        shadowMap.maximumDistance,\n        shadowMap._darkness,\n        this.combinedUniforms2\n      );\n    },\n\n    combinedUniforms1: new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(),\n    combinedUniforms2: new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(),\n  };\n\n  return (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(uniforms, mapUniforms, false);\n}\n\nfunction createCastDerivedCommand(\n  shadowMap,\n  shadowsDirty,\n  command,\n  context,\n  oldShaderId,\n  result\n) {\n  var castShader;\n  var castRenderState;\n  var castUniformMap;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(result)) {\n    castShader = result.shaderProgram;\n    castRenderState = result.renderState;\n    castUniformMap = result.uniformMap;\n  }\n\n  result = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_29__/* ["default"].shallowClone */ .Z.shallowClone(command, result);\n  result.castShadows = true;\n  result.receiveShadows = false;\n\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(castShader) ||\n    oldShaderId !== command.shaderProgram.id ||\n    shadowsDirty\n  ) {\n    var shaderProgram = command.shaderProgram;\n\n    var isTerrain = command.pass === _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_31__/* ["default"].GLOBE */ .Z.GLOBE;\n    var isOpaque = command.pass !== _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_31__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT;\n    var isPointLight = shadowMap._isPointLight;\n    var usesDepthTexture = shadowMap._usesDepthTexture;\n\n    var keyword = _ShadowMapShader_js__WEBPACK_IMPORTED_MODULE_43__/* ["default"].getShadowCastShaderKeyword */ .Z.getShadowCastShaderKeyword(\n      isPointLight,\n      isTerrain,\n      usesDepthTexture,\n      isOpaque\n    );\n    castShader = context.shaderCache.getDerivedShaderProgram(\n      shaderProgram,\n      keyword\n    );\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(castShader)) {\n      var vertexShaderSource = shaderProgram.vertexShaderSource;\n      var fragmentShaderSource = shaderProgram.fragmentShaderSource;\n\n      var castVS = _ShadowMapShader_js__WEBPACK_IMPORTED_MODULE_43__/* ["default"].createShadowCastVertexShader */ .Z.createShadowCastVertexShader(\n        vertexShaderSource,\n        isPointLight,\n        isTerrain\n      );\n      var castFS = _ShadowMapShader_js__WEBPACK_IMPORTED_MODULE_43__/* ["default"].createShadowCastFragmentShader */ .Z.createShadowCastFragmentShader(\n        fragmentShaderSource,\n        isPointLight,\n        usesDepthTexture,\n        isOpaque\n      );\n\n      castShader = context.shaderCache.createDerivedShaderProgram(\n        shaderProgram,\n        keyword,\n        {\n          vertexShaderSource: castVS,\n          fragmentShaderSource: castFS,\n          attributeLocations: shaderProgram._attributeLocations,\n        }\n      );\n    }\n\n    castRenderState = shadowMap._primitiveRenderState;\n    if (isPointLight) {\n      castRenderState = shadowMap._pointRenderState;\n    } else if (isTerrain) {\n      castRenderState = shadowMap._terrainRenderState;\n    }\n\n    // Modify the render state for commands that do not use back-face culling, e.g. flat textured walls\n    var cullEnabled = command.renderState.cull.enabled;\n    if (!cullEnabled) {\n      castRenderState = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(castRenderState, false);\n      castRenderState.cull = (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(castRenderState.cull, false);\n      castRenderState.cull.enabled = false;\n      castRenderState = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_35__/* ["default"].fromCache */ .Z.fromCache(castRenderState);\n    }\n\n    castUniformMap = combineUniforms(shadowMap, command.uniformMap, isTerrain);\n  }\n\n  result.shaderProgram = castShader;\n  result.renderState = castRenderState;\n  result.uniformMap = castUniformMap;\n\n  return result;\n}\n\nShadowMap.createReceiveDerivedCommand = function (\n  lightShadowMaps,\n  command,\n  shadowsDirty,\n  context,\n  result\n) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(result)) {\n    result = {};\n  }\n\n  var lightShadowMapsEnabled = lightShadowMaps.length > 0;\n  var shaderProgram = command.shaderProgram;\n  var vertexShaderSource = shaderProgram.vertexShaderSource;\n  var fragmentShaderSource = shaderProgram.fragmentShaderSource;\n  var isTerrain = command.pass === _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_31__/* ["default"].GLOBE */ .Z.GLOBE;\n\n  var hasTerrainNormal = false;\n  if (isTerrain) {\n    hasTerrainNormal =\n      command.owner.data.renderedMesh.encoding.hasVertexNormals;\n  }\n\n  if (command.receiveShadows && lightShadowMapsEnabled) {\n    // Only generate a receiveCommand if there is a shadow map originating from a light source.\n    var receiveShader;\n    var receiveUniformMap;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(result.receiveCommand)) {\n      receiveShader = result.receiveCommand.shaderProgram;\n      receiveUniformMap = result.receiveCommand.uniformMap;\n    }\n\n    result.receiveCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_29__/* ["default"].shallowClone */ .Z.shallowClone(\n      command,\n      result.receiveCommand\n    );\n    result.castShadows = false;\n    result.receiveShadows = true;\n\n    // If castShadows changed, recompile the receive shadows shader. The normal shading technique simulates\n    // self-shadowing so it should be turned off if castShadows is false.\n    var castShadowsDirty =\n      result.receiveShaderCastShadows !== command.castShadows;\n    var shaderDirty =\n      result.receiveShaderProgramId !== command.shaderProgram.id;\n\n    if (\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(receiveShader) ||\n      shaderDirty ||\n      shadowsDirty ||\n      castShadowsDirty\n    ) {\n      var keyword = _ShadowMapShader_js__WEBPACK_IMPORTED_MODULE_43__/* ["default"].getShadowReceiveShaderKeyword */ .Z.getShadowReceiveShaderKeyword(\n        lightShadowMaps[0],\n        command.castShadows,\n        isTerrain,\n        hasTerrainNormal\n      );\n      receiveShader = context.shaderCache.getDerivedShaderProgram(\n        shaderProgram,\n        keyword\n      );\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(receiveShader)) {\n        var receiveVS = _ShadowMapShader_js__WEBPACK_IMPORTED_MODULE_43__/* ["default"].createShadowReceiveVertexShader */ .Z.createShadowReceiveVertexShader(\n          vertexShaderSource,\n          isTerrain,\n          hasTerrainNormal\n        );\n        var receiveFS = _ShadowMapShader_js__WEBPACK_IMPORTED_MODULE_43__/* ["default"].createShadowReceiveFragmentShader */ .Z.createShadowReceiveFragmentShader(\n          fragmentShaderSource,\n          lightShadowMaps[0],\n          command.castShadows,\n          isTerrain,\n          hasTerrainNormal\n        );\n\n        receiveShader = context.shaderCache.createDerivedShaderProgram(\n          shaderProgram,\n          keyword,\n          {\n            vertexShaderSource: receiveVS,\n            fragmentShaderSource: receiveFS,\n            attributeLocations: shaderProgram._attributeLocations,\n          }\n        );\n      }\n\n      receiveUniformMap = combineUniforms(\n        lightShadowMaps[0],\n        command.uniformMap,\n        isTerrain\n      );\n    }\n\n    result.receiveCommand.shaderProgram = receiveShader;\n    result.receiveCommand.uniformMap = receiveUniformMap;\n    result.receiveShaderProgramId = command.shaderProgram.id;\n    result.receiveShaderCastShadows = command.castShadows;\n  }\n\n  return result;\n};\n\nShadowMap.createCastDerivedCommand = function (\n  shadowMaps,\n  command,\n  shadowsDirty,\n  context,\n  result\n) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(result)) {\n    result = {};\n  }\n\n  if (command.castShadows) {\n    var castCommands = result.castCommands;\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_44__/* ["default"] */ .Z)(castCommands)) {\n      castCommands = result.castCommands = [];\n    }\n\n    var oldShaderId = result.castShaderProgramId;\n\n    var shadowMapLength = shadowMaps.length;\n    castCommands.length = shadowMapLength;\n\n    for (var i = 0; i < shadowMapLength; ++i) {\n      castCommands[i] = createCastDerivedCommand(\n        shadowMaps[i],\n        shadowsDirty,\n        command,\n        context,\n        oldShaderId,\n        castCommands[i]\n      );\n    }\n\n    result.castShaderProgramId = command.shaderProgram.id;\n  }\n\n  return result;\n};\n\n/**\n * @private\n */\nShadowMap.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * @private\n */\nShadowMap.prototype.destroy = function () {\n  destroyFramebuffer(this);\n\n  this._debugLightFrustum =\n    this._debugLightFrustum && this._debugLightFrustum.destroy();\n  this._debugCameraFrustum =\n    this._debugCameraFrustum && this._debugCameraFrustum.destroy();\n  this._debugShadowViewCommand =\n    this._debugShadowViewCommand &&\n    this._debugShadowViewCommand.shaderProgram &&\n    this._debugShadowViewCommand.shaderProgram.destroy();\n\n  for (var i = 0; i < this._numberOfCascades; ++i) {\n    this._debugCascadeFrustums[i] =\n      this._debugCascadeFrustums[i] && this._debugCascadeFrustums[i].destroy();\n  }\n\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ShadowMap);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///79162\n')},2143:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82982);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(53642);\n\n\n\n/**\n * @private\n */\nfunction ShadowMapShader() {}\n\nShadowMapShader.getShadowCastShaderKeyword = function (\n  isPointLight,\n  isTerrain,\n  usesDepthTexture,\n  isOpaque\n) {\n  return (\n    "castShadow " +\n    isPointLight +\n    " " +\n    isTerrain +\n    " " +\n    usesDepthTexture +\n    " " +\n    isOpaque\n  );\n};\n\nShadowMapShader.createShadowCastVertexShader = function (\n  vs,\n  isPointLight,\n  isTerrain\n) {\n  var defines = vs.defines.slice(0);\n  var sources = vs.sources.slice(0);\n\n  defines.push("SHADOW_MAP");\n\n  if (isTerrain) {\n    defines.push("GENERATE_POSITION");\n  }\n\n  var positionVaryingName = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].findPositionVarying */ .Z.findPositionVarying(vs);\n  var hasPositionVarying = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(positionVaryingName);\n\n  if (isPointLight && !hasPositionVarying) {\n    var length = sources.length;\n    for (var j = 0; j < length; ++j) {\n      sources[j] = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].replaceMain */ .Z.replaceMain(sources[j], "czm_shadow_cast_main");\n    }\n\n    var shadowVS =\n      "varying vec3 v_positionEC; \\n" +\n      "void main() \\n" +\n      "{ \\n" +\n      "    czm_shadow_cast_main(); \\n" +\n      "    v_positionEC = (czm_inverseProjection * gl_Position).xyz; \\n" +\n      "}";\n    sources.push(shadowVS);\n  }\n\n  return new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z({\n    defines: defines,\n    sources: sources,\n  });\n};\n\nShadowMapShader.createShadowCastFragmentShader = function (\n  fs,\n  isPointLight,\n  usesDepthTexture,\n  opaque\n) {\n  var defines = fs.defines.slice(0);\n  var sources = fs.sources.slice(0);\n\n  var positionVaryingName = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].findPositionVarying */ .Z.findPositionVarying(fs);\n  var hasPositionVarying = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(positionVaryingName);\n  if (!hasPositionVarying) {\n    positionVaryingName = "v_positionEC";\n  }\n\n  var length = sources.length;\n  for (var i = 0; i < length; ++i) {\n    sources[i] = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].replaceMain */ .Z.replaceMain(sources[i], "czm_shadow_cast_main");\n  }\n\n  var fsSource = "";\n\n  if (isPointLight) {\n    if (!hasPositionVarying) {\n      fsSource += "varying vec3 v_positionEC; \\n";\n    }\n    fsSource += "uniform vec4 shadowMap_lightPositionEC; \\n";\n  }\n\n  if (opaque) {\n    fsSource += "void main() \\n" + "{ \\n";\n  } else {\n    fsSource +=\n      "void main() \\n" +\n      "{ \\n" +\n      "    czm_shadow_cast_main(); \\n" +\n      "    if (gl_FragColor.a == 0.0) \\n" +\n      "    { \\n" +\n      "       discard; \\n" +\n      "    } \\n";\n  }\n\n  if (isPointLight) {\n    fsSource +=\n      "    float distance = length(" +\n      positionVaryingName +\n      "); \\n" +\n      "    if (distance >= shadowMap_lightPositionEC.w) \\n" +\n      "    { \\n" +\n      "        discard; \\n" +\n      "    } \\n" +\n      "    distance /= shadowMap_lightPositionEC.w; // radius \\n" +\n      "    gl_FragColor = czm_packDepth(distance); \\n";\n  } else if (usesDepthTexture) {\n    fsSource += "    gl_FragColor = vec4(1.0); \\n";\n  } else {\n    fsSource += "    gl_FragColor = czm_packDepth(gl_FragCoord.z); \\n";\n  }\n\n  fsSource += "} \\n";\n\n  sources.push(fsSource);\n\n  return new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z({\n    defines: defines,\n    sources: sources,\n  });\n};\n\nShadowMapShader.getShadowReceiveShaderKeyword = function (\n  shadowMap,\n  castShadows,\n  isTerrain,\n  hasTerrainNormal\n) {\n  var usesDepthTexture = shadowMap._usesDepthTexture;\n  var polygonOffsetSupported = shadowMap._polygonOffsetSupported;\n  var isPointLight = shadowMap._isPointLight;\n  var isSpotLight = shadowMap._isSpotLight;\n  var hasCascades = shadowMap._numberOfCascades > 1;\n  var debugCascadeColors = shadowMap.debugCascadeColors;\n  var softShadows = shadowMap.softShadows;\n\n  return (\n    "receiveShadow " +\n    usesDepthTexture +\n    polygonOffsetSupported +\n    isPointLight +\n    isSpotLight +\n    hasCascades +\n    debugCascadeColors +\n    softShadows +\n    castShadows +\n    isTerrain +\n    hasTerrainNormal\n  );\n};\n\nShadowMapShader.createShadowReceiveVertexShader = function (\n  vs,\n  isTerrain,\n  hasTerrainNormal\n) {\n  var defines = vs.defines.slice(0);\n  var sources = vs.sources.slice(0);\n\n  defines.push("SHADOW_MAP");\n\n  if (isTerrain) {\n    if (hasTerrainNormal) {\n      defines.push("GENERATE_POSITION_AND_NORMAL");\n    } else {\n      defines.push("GENERATE_POSITION");\n    }\n  }\n\n  return new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z({\n    defines: defines,\n    sources: sources,\n  });\n};\n\nShadowMapShader.createShadowReceiveFragmentShader = function (\n  fs,\n  shadowMap,\n  castShadows,\n  isTerrain,\n  hasTerrainNormal\n) {\n  var normalVaryingName = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].findNormalVarying */ .Z.findNormalVarying(fs);\n  var hasNormalVarying =\n    (!isTerrain && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(normalVaryingName)) ||\n    (isTerrain && hasTerrainNormal);\n\n  var positionVaryingName = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].findPositionVarying */ .Z.findPositionVarying(fs);\n  var hasPositionVarying = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(positionVaryingName);\n\n  var usesDepthTexture = shadowMap._usesDepthTexture;\n  var polygonOffsetSupported = shadowMap._polygonOffsetSupported;\n  var isPointLight = shadowMap._isPointLight;\n  var isSpotLight = shadowMap._isSpotLight;\n  var hasCascades = shadowMap._numberOfCascades > 1;\n  var debugCascadeColors = shadowMap.debugCascadeColors;\n  var softShadows = shadowMap.softShadows;\n  var bias = isPointLight\n    ? shadowMap._pointBias\n    : isTerrain\n    ? shadowMap._terrainBias\n    : shadowMap._primitiveBias;\n\n  var defines = fs.defines.slice(0);\n  var sources = fs.sources.slice(0);\n\n  var length = sources.length;\n  for (var i = 0; i < length; ++i) {\n    sources[i] = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].replaceMain */ .Z.replaceMain(\n      sources[i],\n      "czm_shadow_receive_main"\n    );\n  }\n\n  if (isPointLight) {\n    defines.push("USE_CUBE_MAP_SHADOW");\n  } else if (usesDepthTexture) {\n    defines.push("USE_SHADOW_DEPTH_TEXTURE");\n  }\n\n  if (softShadows && !isPointLight) {\n    defines.push("USE_SOFT_SHADOWS");\n  }\n\n  // Enable day-night shading so that the globe is dark when the light is below the horizon\n  if (hasCascades && castShadows && isTerrain) {\n    if (hasNormalVarying) {\n      defines.push("ENABLE_VERTEX_LIGHTING");\n    } else {\n      defines.push("ENABLE_DAYNIGHT_SHADING");\n    }\n  }\n\n  if (castShadows && bias.normalShading && hasNormalVarying) {\n    defines.push("USE_NORMAL_SHADING");\n    if (bias.normalShadingSmooth > 0.0) {\n      defines.push("USE_NORMAL_SHADING_SMOOTH");\n    }\n  }\n\n  var fsSource = "";\n\n  if (isPointLight) {\n    fsSource += "uniform samplerCube shadowMap_textureCube; \\n";\n  } else {\n    fsSource += "uniform sampler2D shadowMap_texture; \\n";\n  }\n\n  var returnPositionEC;\n  if (hasPositionVarying) {\n    returnPositionEC = "    return vec4(" + positionVaryingName + ", 1.0); \\n";\n  } else {\n    returnPositionEC =\n      "#ifndef LOG_DEPTH \\n" +\n      "    return czm_windowToEyeCoordinates(gl_FragCoord); \\n" +\n      "#else \\n" +\n      "    return vec4(v_logPositionEC, 1.0); \\n" +\n      "#endif \\n";\n  }\n\n  fsSource +=\n    "uniform mat4 shadowMap_matrix; \\n" +\n    "uniform vec3 shadowMap_lightDirectionEC; \\n" +\n    "uniform vec4 shadowMap_lightPositionEC; \\n" +\n    "uniform vec4 shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness; \\n" +\n    "uniform vec4 shadowMap_texelSizeDepthBiasAndNormalShadingSmooth; \\n" +\n    "#ifdef LOG_DEPTH \\n" +\n    "varying vec3 v_logPositionEC; \\n" +\n    "#endif \\n" +\n    "vec4 getPositionEC() \\n" +\n    "{ \\n" +\n    returnPositionEC +\n    "} \\n" +\n    "vec3 getNormalEC() \\n" +\n    "{ \\n" +\n    (hasNormalVarying\n      ? "    return normalize(" + normalVaryingName + "); \\n"\n      : "    return vec3(1.0); \\n") +\n    "} \\n" +\n    // Offset the shadow position in the direction of the normal for perpendicular and back faces\n    "void applyNormalOffset(inout vec4 positionEC, vec3 normalEC, float nDotL) \\n" +\n    "{ \\n" +\n    (bias.normalOffset && hasNormalVarying\n      ? "    float normalOffset = shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness.x; \\n" +\n        "    float normalOffsetScale = 1.0 - nDotL; \\n" +\n        "    vec3 offset = normalOffset * normalOffsetScale * normalEC; \\n" +\n        "    positionEC.xyz += offset; \\n"\n      : "") +\n    "} \\n";\n\n  fsSource +=\n    "void main() \\n" +\n    "{ \\n" +\n    "    czm_shadow_receive_main(); \\n" +\n    "    vec4 positionEC = getPositionEC(); \\n" +\n    "    vec3 normalEC = getNormalEC(); \\n" +\n    "    float depth = -positionEC.z; \\n";\n\n  fsSource +=\n    "    czm_shadowParameters shadowParameters; \\n" +\n    "    shadowParameters.texelStepSize = shadowMap_texelSizeDepthBiasAndNormalShadingSmooth.xy; \\n" +\n    "    shadowParameters.depthBias = shadowMap_texelSizeDepthBiasAndNormalShadingSmooth.z; \\n" +\n    "    shadowParameters.normalShadingSmooth = shadowMap_texelSizeDepthBiasAndNormalShadingSmooth.w; \\n" +\n    "    shadowParameters.darkness = shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness.w; \\n";\n\n  if (isTerrain) {\n    // Scale depth bias based on view distance to reduce z-fighting in distant terrain\n    fsSource += "    shadowParameters.depthBias *= max(depth * 0.01, 1.0); \\n";\n  } else if (!polygonOffsetSupported) {\n    // If polygon offset isn\'t supported push the depth back based on view, however this\n    // causes light leaking at further away views\n    fsSource +=\n      "    shadowParameters.depthBias *= mix(1.0, 100.0, depth * 0.0015); \\n";\n  }\n\n  if (isPointLight) {\n    fsSource +=\n      "    vec3 directionEC = positionEC.xyz - shadowMap_lightPositionEC.xyz; \\n" +\n      "    float distance = length(directionEC); \\n" +\n      "    directionEC = normalize(directionEC); \\n" +\n      "    float radius = shadowMap_lightPositionEC.w; \\n" +\n      "    // Stop early if the fragment is beyond the point light radius \\n" +\n      "    if (distance > radius) \\n" +\n      "    { \\n" +\n      "        return; \\n" +\n      "    } \\n" +\n      "    vec3 directionWC  = czm_inverseViewRotation * directionEC; \\n" +\n      "    shadowParameters.depth = distance / radius; \\n" +\n      "    shadowParameters.nDotL = clamp(dot(normalEC, -directionEC), 0.0, 1.0); \\n" +\n      "    shadowParameters.texCoords = directionWC; \\n" +\n      "    float visibility = czm_shadowVisibility(shadowMap_textureCube, shadowParameters); \\n";\n  } else if (isSpotLight) {\n    fsSource +=\n      "    vec3 directionEC = normalize(positionEC.xyz - shadowMap_lightPositionEC.xyz); \\n" +\n      "    float nDotL = clamp(dot(normalEC, -directionEC), 0.0, 1.0); \\n" +\n      "    applyNormalOffset(positionEC, normalEC, nDotL); \\n" +\n      "    vec4 shadowPosition = shadowMap_matrix * positionEC; \\n" +\n      "    // Spot light uses a perspective projection, so perform the perspective divide \\n" +\n      "    shadowPosition /= shadowPosition.w; \\n" +\n      "    // Stop early if the fragment is not in the shadow bounds \\n" +\n      "    if (any(lessThan(shadowPosition.xyz, vec3(0.0))) || any(greaterThan(shadowPosition.xyz, vec3(1.0)))) \\n" +\n      "    { \\n" +\n      "        return; \\n" +\n      "    } \\n" +\n      "    shadowParameters.texCoords = shadowPosition.xy; \\n" +\n      "    shadowParameters.depth = shadowPosition.z; \\n" +\n      "    shadowParameters.nDotL = nDotL; \\n" +\n      "    float visibility = czm_shadowVisibility(shadowMap_texture, shadowParameters); \\n";\n  } else if (hasCascades) {\n    fsSource +=\n      "    float maxDepth = shadowMap_cascadeSplits[1].w; \\n" +\n      "    // Stop early if the eye depth exceeds the last cascade \\n" +\n      "    if (depth > maxDepth) \\n" +\n      "    { \\n" +\n      "        return; \\n" +\n      "    } \\n" +\n      "    // Get the cascade based on the eye-space depth \\n" +\n      "    vec4 weights = czm_cascadeWeights(depth); \\n" +\n      "    // Apply normal offset \\n" +\n      "    float nDotL = clamp(dot(normalEC, shadowMap_lightDirectionEC), 0.0, 1.0); \\n" +\n      "    applyNormalOffset(positionEC, normalEC, nDotL); \\n" +\n      "    // Transform position into the cascade \\n" +\n      "    vec4 shadowPosition = czm_cascadeMatrix(weights) * positionEC; \\n" +\n      "    // Get visibility \\n" +\n      "    shadowParameters.texCoords = shadowPosition.xy; \\n" +\n      "    shadowParameters.depth = shadowPosition.z; \\n" +\n      "    shadowParameters.nDotL = nDotL; \\n" +\n      "    float visibility = czm_shadowVisibility(shadowMap_texture, shadowParameters); \\n" +\n      "    // Fade out shadows that are far away \\n" +\n      "    float shadowMapMaximumDistance = shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness.z; \\n" +\n      "    float fade = max((depth - shadowMapMaximumDistance * 0.8) / (shadowMapMaximumDistance * 0.2), 0.0); \\n" +\n      "    visibility = mix(visibility, 1.0, fade); \\n" +\n      (debugCascadeColors\n        ? "    // Draw cascade colors for debugging \\n" +\n          "    gl_FragColor *= czm_cascadeColor(weights); \\n"\n        : "");\n  } else {\n    fsSource +=\n      "    float nDotL = clamp(dot(normalEC, shadowMap_lightDirectionEC), 0.0, 1.0); \\n" +\n      "    applyNormalOffset(positionEC, normalEC, nDotL); \\n" +\n      "    vec4 shadowPosition = shadowMap_matrix * positionEC; \\n" +\n      "    // Stop early if the fragment is not in the shadow bounds \\n" +\n      "    if (any(lessThan(shadowPosition.xyz, vec3(0.0))) || any(greaterThan(shadowPosition.xyz, vec3(1.0)))) \\n" +\n      "    { \\n" +\n      "        return; \\n" +\n      "    } \\n" +\n      "    shadowParameters.texCoords = shadowPosition.xy; \\n" +\n      "    shadowParameters.depth = shadowPosition.z; \\n" +\n      "    shadowParameters.nDotL = nDotL; \\n" +\n      "    float visibility = czm_shadowVisibility(shadowMap_texture, shadowParameters); \\n";\n  }\n\n  fsSource += "    gl_FragColor.rgb *= visibility; \\n" + "} \\n";\n\n  sources.push(fsSource);\n\n  return new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z({\n    defines: defines,\n    sources: sources,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ShadowMapShader);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE0My5qcyIsIm1hcHBpbmdzIjoiOztBQUF5QztBQUNjOztBQUV2RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSw0QkFBNEIsa0hBQWdDO0FBQzVELDJCQUEyQixxRUFBTzs7QUFFbEM7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDLG1CQUFtQixrR0FBd0I7QUFDM0M7O0FBRUE7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQSxTQUFTO0FBQ1QsbUNBQW1DO0FBQ25DLHFFQUFxRTtBQUNyRSxRQUFRO0FBQ1I7QUFDQTs7QUFFQSxhQUFhLDBFQUFZO0FBQ3pCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw0QkFBNEIsa0hBQWdDO0FBQzVELDJCQUEyQixxRUFBTztBQUNsQztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsWUFBWTtBQUM5QixpQkFBaUIsa0dBQXdCO0FBQ3pDOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQSx5REFBeUQ7QUFDekQ7O0FBRUE7QUFDQSxzQ0FBc0M7QUFDdEMsSUFBSTtBQUNKO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsbUNBQW1DO0FBQ25DO0FBQ0EsYUFBYTtBQUNiLHVCQUF1QjtBQUN2QixhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxhQUFhO0FBQ2Isd0JBQXdCO0FBQ3hCLGFBQWE7QUFDYixvREFBb0Q7QUFDcEQsbURBQW1EO0FBQ25ELElBQUk7QUFDSiwrQ0FBK0M7QUFDL0MsSUFBSTtBQUNKLG1FQUFtRTtBQUNuRTs7QUFFQSxpQkFBaUI7O0FBRWpCOztBQUVBLGFBQWEsMEVBQVk7QUFDekI7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEsYUFBYSwwRUFBWTtBQUN6QjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhHQUE4QjtBQUN4RDtBQUNBLG1CQUFtQixxRUFBTztBQUMxQjs7QUFFQSw0QkFBNEIsa0hBQWdDO0FBQzVELDJCQUEyQixxRUFBTzs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsWUFBWTtBQUM5QixpQkFBaUIsa0dBQXdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLDREQUE0RDtBQUM1RCxJQUFJO0FBQ0osc0RBQXNEO0FBQ3REOztBQUVBO0FBQ0E7QUFDQSwyRUFBMkU7QUFDM0UsSUFBSTtBQUNKO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTs7QUFFQTtBQUNBLG9DQUFvQztBQUNwQyw4Q0FBOEM7QUFDOUMsNkNBQTZDO0FBQzdDLDZFQUE2RTtBQUM3RSxzRUFBc0U7QUFDdEU7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUDtBQUNBLDBEQUEwRDtBQUMxRCwrQkFBK0I7QUFDL0IsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSwrRkFBK0Y7QUFDL0Ysb0RBQW9EO0FBQ3BELHdFQUF3RTtBQUN4RSx1Q0FBdUM7QUFDdkM7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxPQUFPO0FBQ1Asb0NBQW9DO0FBQ3BDLDRDQUE0QztBQUM1Qyx3Q0FBd0M7QUFDeEMsc0NBQXNDOztBQUV0QztBQUNBLGdEQUFnRDtBQUNoRCxpR0FBaUc7QUFDakcsNEZBQTRGO0FBQzVGLHNHQUFzRztBQUN0RyxrR0FBa0c7O0FBRWxHO0FBQ0E7QUFDQSwyRUFBMkU7QUFDM0UsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRTtBQUMxRTs7QUFFQTtBQUNBO0FBQ0EsOEVBQThFO0FBQzlFLGlEQUFpRDtBQUNqRCxpREFBaUQ7QUFDakQsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsdUJBQXVCO0FBQ3ZCLGFBQWE7QUFDYixzRUFBc0U7QUFDdEUsdURBQXVEO0FBQ3ZELGtGQUFrRjtBQUNsRixxREFBcUQ7QUFDckQsNkZBQTZGO0FBQzdGLElBQUk7QUFDSjtBQUNBLHlGQUF5RjtBQUN6Rix1RUFBdUU7QUFDdkUsMkRBQTJEO0FBQzNELGdFQUFnRTtBQUNoRTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0EsYUFBYTtBQUNiLHVCQUF1QjtBQUN2QixhQUFhO0FBQ2IsMkRBQTJEO0FBQzNELHNEQUFzRDtBQUN0RCwyQ0FBMkM7QUFDM0MseUZBQXlGO0FBQ3pGLElBQUk7QUFDSjtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0EsYUFBYTtBQUNiLHVCQUF1QjtBQUN2QixhQUFhO0FBQ2I7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQSxxRkFBcUY7QUFDckYsMkRBQTJEO0FBQzNEO0FBQ0EsMEVBQTBFO0FBQzFFO0FBQ0EsMkRBQTJEO0FBQzNELHNEQUFzRDtBQUN0RCwyQ0FBMkM7QUFDM0MseUZBQXlGO0FBQ3pGO0FBQ0EseUdBQXlHO0FBQ3pHLCtHQUErRztBQUMvRyxvREFBb0Q7QUFDcEQ7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBLElBQUk7QUFDSjtBQUNBLHFGQUFxRjtBQUNyRiwyREFBMkQ7QUFDM0QsZ0VBQWdFO0FBQ2hFO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsdUJBQXVCO0FBQ3ZCLGFBQWE7QUFDYiwyREFBMkQ7QUFDM0Qsc0RBQXNEO0FBQ3RELDJDQUEyQztBQUMzQyx5RkFBeUY7QUFDekY7O0FBRUEsbURBQW1ELFNBQVM7O0FBRTVEOztBQUVBLGFBQWEsMEVBQVk7QUFDekI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHlEQUFlLGVBQWUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9TaGFkb3dNYXBTaGFkZXIuanM/NDg2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgU2hhZGVyU291cmNlIGZyb20gXCIuLi9SZW5kZXJlci9TaGFkZXJTb3VyY2UuanNcIjtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBTaGFkb3dNYXBTaGFkZXIoKSB7fVxuXG5TaGFkb3dNYXBTaGFkZXIuZ2V0U2hhZG93Q2FzdFNoYWRlcktleXdvcmQgPSBmdW5jdGlvbiAoXG4gIGlzUG9pbnRMaWdodCxcbiAgaXNUZXJyYWluLFxuICB1c2VzRGVwdGhUZXh0dXJlLFxuICBpc09wYXF1ZVxuKSB7XG4gIHJldHVybiAoXG4gICAgXCJjYXN0U2hhZG93IFwiICtcbiAgICBpc1BvaW50TGlnaHQgK1xuICAgIFwiIFwiICtcbiAgICBpc1RlcnJhaW4gK1xuICAgIFwiIFwiICtcbiAgICB1c2VzRGVwdGhUZXh0dXJlICtcbiAgICBcIiBcIiArXG4gICAgaXNPcGFxdWVcbiAgKTtcbn07XG5cblNoYWRvd01hcFNoYWRlci5jcmVhdGVTaGFkb3dDYXN0VmVydGV4U2hhZGVyID0gZnVuY3Rpb24gKFxuICB2cyxcbiAgaXNQb2ludExpZ2h0LFxuICBpc1RlcnJhaW5cbikge1xuICB2YXIgZGVmaW5lcyA9IHZzLmRlZmluZXMuc2xpY2UoMCk7XG4gIHZhciBzb3VyY2VzID0gdnMuc291cmNlcy5zbGljZSgwKTtcblxuICBkZWZpbmVzLnB1c2goXCJTSEFET1dfTUFQXCIpO1xuXG4gIGlmIChpc1RlcnJhaW4pIHtcbiAgICBkZWZpbmVzLnB1c2goXCJHRU5FUkFURV9QT1NJVElPTlwiKTtcbiAgfVxuXG4gIHZhciBwb3NpdGlvblZhcnlpbmdOYW1lID0gU2hhZGVyU291cmNlLmZpbmRQb3NpdGlvblZhcnlpbmcodnMpO1xuICB2YXIgaGFzUG9zaXRpb25WYXJ5aW5nID0gZGVmaW5lZChwb3NpdGlvblZhcnlpbmdOYW1lKTtcblxuICBpZiAoaXNQb2ludExpZ2h0ICYmICFoYXNQb3NpdGlvblZhcnlpbmcpIHtcbiAgICB2YXIgbGVuZ3RoID0gc291cmNlcy5sZW5ndGg7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBsZW5ndGg7ICsraikge1xuICAgICAgc291cmNlc1tqXSA9IFNoYWRlclNvdXJjZS5yZXBsYWNlTWFpbihzb3VyY2VzW2pdLCBcImN6bV9zaGFkb3dfY2FzdF9tYWluXCIpO1xuICAgIH1cblxuICAgIHZhciBzaGFkb3dWUyA9XG4gICAgICBcInZhcnlpbmcgdmVjMyB2X3Bvc2l0aW9uRUM7IFxcblwiICtcbiAgICAgIFwidm9pZCBtYWluKCkgXFxuXCIgK1xuICAgICAgXCJ7IFxcblwiICtcbiAgICAgIFwiICAgIGN6bV9zaGFkb3dfY2FzdF9tYWluKCk7IFxcblwiICtcbiAgICAgIFwiICAgIHZfcG9zaXRpb25FQyA9IChjem1faW52ZXJzZVByb2plY3Rpb24gKiBnbF9Qb3NpdGlvbikueHl6OyBcXG5cIiArXG4gICAgICBcIn1cIjtcbiAgICBzb3VyY2VzLnB1c2goc2hhZG93VlMpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTaGFkZXJTb3VyY2Uoe1xuICAgIGRlZmluZXM6IGRlZmluZXMsXG4gICAgc291cmNlczogc291cmNlcyxcbiAgfSk7XG59O1xuXG5TaGFkb3dNYXBTaGFkZXIuY3JlYXRlU2hhZG93Q2FzdEZyYWdtZW50U2hhZGVyID0gZnVuY3Rpb24gKFxuICBmcyxcbiAgaXNQb2ludExpZ2h0LFxuICB1c2VzRGVwdGhUZXh0dXJlLFxuICBvcGFxdWVcbikge1xuICB2YXIgZGVmaW5lcyA9IGZzLmRlZmluZXMuc2xpY2UoMCk7XG4gIHZhciBzb3VyY2VzID0gZnMuc291cmNlcy5zbGljZSgwKTtcblxuICB2YXIgcG9zaXRpb25WYXJ5aW5nTmFtZSA9IFNoYWRlclNvdXJjZS5maW5kUG9zaXRpb25WYXJ5aW5nKGZzKTtcbiAgdmFyIGhhc1Bvc2l0aW9uVmFyeWluZyA9IGRlZmluZWQocG9zaXRpb25WYXJ5aW5nTmFtZSk7XG4gIGlmICghaGFzUG9zaXRpb25WYXJ5aW5nKSB7XG4gICAgcG9zaXRpb25WYXJ5aW5nTmFtZSA9IFwidl9wb3NpdGlvbkVDXCI7XG4gIH1cblxuICB2YXIgbGVuZ3RoID0gc291cmNlcy5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICBzb3VyY2VzW2ldID0gU2hhZGVyU291cmNlLnJlcGxhY2VNYWluKHNvdXJjZXNbaV0sIFwiY3ptX3NoYWRvd19jYXN0X21haW5cIik7XG4gIH1cblxuICB2YXIgZnNTb3VyY2UgPSBcIlwiO1xuXG4gIGlmIChpc1BvaW50TGlnaHQpIHtcbiAgICBpZiAoIWhhc1Bvc2l0aW9uVmFyeWluZykge1xuICAgICAgZnNTb3VyY2UgKz0gXCJ2YXJ5aW5nIHZlYzMgdl9wb3NpdGlvbkVDOyBcXG5cIjtcbiAgICB9XG4gICAgZnNTb3VyY2UgKz0gXCJ1bmlmb3JtIHZlYzQgc2hhZG93TWFwX2xpZ2h0UG9zaXRpb25FQzsgXFxuXCI7XG4gIH1cblxuICBpZiAob3BhcXVlKSB7XG4gICAgZnNTb3VyY2UgKz0gXCJ2b2lkIG1haW4oKSBcXG5cIiArIFwieyBcXG5cIjtcbiAgfSBlbHNlIHtcbiAgICBmc1NvdXJjZSArPVxuICAgICAgXCJ2b2lkIG1haW4oKSBcXG5cIiArXG4gICAgICBcInsgXFxuXCIgK1xuICAgICAgXCIgICAgY3ptX3NoYWRvd19jYXN0X21haW4oKTsgXFxuXCIgK1xuICAgICAgXCIgICAgaWYgKGdsX0ZyYWdDb2xvci5hID09IDAuMCkgXFxuXCIgK1xuICAgICAgXCIgICAgeyBcXG5cIiArXG4gICAgICBcIiAgICAgICBkaXNjYXJkOyBcXG5cIiArXG4gICAgICBcIiAgICB9IFxcblwiO1xuICB9XG5cbiAgaWYgKGlzUG9pbnRMaWdodCkge1xuICAgIGZzU291cmNlICs9XG4gICAgICBcIiAgICBmbG9hdCBkaXN0YW5jZSA9IGxlbmd0aChcIiArXG4gICAgICBwb3NpdGlvblZhcnlpbmdOYW1lICtcbiAgICAgIFwiKTsgXFxuXCIgK1xuICAgICAgXCIgICAgaWYgKGRpc3RhbmNlID49IHNoYWRvd01hcF9saWdodFBvc2l0aW9uRUMudykgXFxuXCIgK1xuICAgICAgXCIgICAgeyBcXG5cIiArXG4gICAgICBcIiAgICAgICAgZGlzY2FyZDsgXFxuXCIgK1xuICAgICAgXCIgICAgfSBcXG5cIiArXG4gICAgICBcIiAgICBkaXN0YW5jZSAvPSBzaGFkb3dNYXBfbGlnaHRQb3NpdGlvbkVDLnc7IC8vIHJhZGl1cyBcXG5cIiArXG4gICAgICBcIiAgICBnbF9GcmFnQ29sb3IgPSBjem1fcGFja0RlcHRoKGRpc3RhbmNlKTsgXFxuXCI7XG4gIH0gZWxzZSBpZiAodXNlc0RlcHRoVGV4dHVyZSkge1xuICAgIGZzU291cmNlICs9IFwiICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoMS4wKTsgXFxuXCI7XG4gIH0gZWxzZSB7XG4gICAgZnNTb3VyY2UgKz0gXCIgICAgZ2xfRnJhZ0NvbG9yID0gY3ptX3BhY2tEZXB0aChnbF9GcmFnQ29vcmQueik7IFxcblwiO1xuICB9XG5cbiAgZnNTb3VyY2UgKz0gXCJ9IFxcblwiO1xuXG4gIHNvdXJjZXMucHVzaChmc1NvdXJjZSk7XG5cbiAgcmV0dXJuIG5ldyBTaGFkZXJTb3VyY2Uoe1xuICAgIGRlZmluZXM6IGRlZmluZXMsXG4gICAgc291cmNlczogc291cmNlcyxcbiAgfSk7XG59O1xuXG5TaGFkb3dNYXBTaGFkZXIuZ2V0U2hhZG93UmVjZWl2ZVNoYWRlcktleXdvcmQgPSBmdW5jdGlvbiAoXG4gIHNoYWRvd01hcCxcbiAgY2FzdFNoYWRvd3MsXG4gIGlzVGVycmFpbixcbiAgaGFzVGVycmFpbk5vcm1hbFxuKSB7XG4gIHZhciB1c2VzRGVwdGhUZXh0dXJlID0gc2hhZG93TWFwLl91c2VzRGVwdGhUZXh0dXJlO1xuICB2YXIgcG9seWdvbk9mZnNldFN1cHBvcnRlZCA9IHNoYWRvd01hcC5fcG9seWdvbk9mZnNldFN1cHBvcnRlZDtcbiAgdmFyIGlzUG9pbnRMaWdodCA9IHNoYWRvd01hcC5faXNQb2ludExpZ2h0O1xuICB2YXIgaXNTcG90TGlnaHQgPSBzaGFkb3dNYXAuX2lzU3BvdExpZ2h0O1xuICB2YXIgaGFzQ2FzY2FkZXMgPSBzaGFkb3dNYXAuX251bWJlck9mQ2FzY2FkZXMgPiAxO1xuICB2YXIgZGVidWdDYXNjYWRlQ29sb3JzID0gc2hhZG93TWFwLmRlYnVnQ2FzY2FkZUNvbG9ycztcbiAgdmFyIHNvZnRTaGFkb3dzID0gc2hhZG93TWFwLnNvZnRTaGFkb3dzO1xuXG4gIHJldHVybiAoXG4gICAgXCJyZWNlaXZlU2hhZG93IFwiICtcbiAgICB1c2VzRGVwdGhUZXh0dXJlICtcbiAgICBwb2x5Z29uT2Zmc2V0U3VwcG9ydGVkICtcbiAgICBpc1BvaW50TGlnaHQgK1xuICAgIGlzU3BvdExpZ2h0ICtcbiAgICBoYXNDYXNjYWRlcyArXG4gICAgZGVidWdDYXNjYWRlQ29sb3JzICtcbiAgICBzb2Z0U2hhZG93cyArXG4gICAgY2FzdFNoYWRvd3MgK1xuICAgIGlzVGVycmFpbiArXG4gICAgaGFzVGVycmFpbk5vcm1hbFxuICApO1xufTtcblxuU2hhZG93TWFwU2hhZGVyLmNyZWF0ZVNoYWRvd1JlY2VpdmVWZXJ0ZXhTaGFkZXIgPSBmdW5jdGlvbiAoXG4gIHZzLFxuICBpc1RlcnJhaW4sXG4gIGhhc1RlcnJhaW5Ob3JtYWxcbikge1xuICB2YXIgZGVmaW5lcyA9IHZzLmRlZmluZXMuc2xpY2UoMCk7XG4gIHZhciBzb3VyY2VzID0gdnMuc291cmNlcy5zbGljZSgwKTtcblxuICBkZWZpbmVzLnB1c2goXCJTSEFET1dfTUFQXCIpO1xuXG4gIGlmIChpc1RlcnJhaW4pIHtcbiAgICBpZiAoaGFzVGVycmFpbk5vcm1hbCkge1xuICAgICAgZGVmaW5lcy5wdXNoKFwiR0VORVJBVEVfUE9TSVRJT05fQU5EX05PUk1BTFwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVmaW5lcy5wdXNoKFwiR0VORVJBVEVfUE9TSVRJT05cIik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBTaGFkZXJTb3VyY2Uoe1xuICAgIGRlZmluZXM6IGRlZmluZXMsXG4gICAgc291cmNlczogc291cmNlcyxcbiAgfSk7XG59O1xuXG5TaGFkb3dNYXBTaGFkZXIuY3JlYXRlU2hhZG93UmVjZWl2ZUZyYWdtZW50U2hhZGVyID0gZnVuY3Rpb24gKFxuICBmcyxcbiAgc2hhZG93TWFwLFxuICBjYXN0U2hhZG93cyxcbiAgaXNUZXJyYWluLFxuICBoYXNUZXJyYWluTm9ybWFsXG4pIHtcbiAgdmFyIG5vcm1hbFZhcnlpbmdOYW1lID0gU2hhZGVyU291cmNlLmZpbmROb3JtYWxWYXJ5aW5nKGZzKTtcbiAgdmFyIGhhc05vcm1hbFZhcnlpbmcgPVxuICAgICghaXNUZXJyYWluICYmIGRlZmluZWQobm9ybWFsVmFyeWluZ05hbWUpKSB8fFxuICAgIChpc1RlcnJhaW4gJiYgaGFzVGVycmFpbk5vcm1hbCk7XG5cbiAgdmFyIHBvc2l0aW9uVmFyeWluZ05hbWUgPSBTaGFkZXJTb3VyY2UuZmluZFBvc2l0aW9uVmFyeWluZyhmcyk7XG4gIHZhciBoYXNQb3NpdGlvblZhcnlpbmcgPSBkZWZpbmVkKHBvc2l0aW9uVmFyeWluZ05hbWUpO1xuXG4gIHZhciB1c2VzRGVwdGhUZXh0dXJlID0gc2hhZG93TWFwLl91c2VzRGVwdGhUZXh0dXJlO1xuICB2YXIgcG9seWdvbk9mZnNldFN1cHBvcnRlZCA9IHNoYWRvd01hcC5fcG9seWdvbk9mZnNldFN1cHBvcnRlZDtcbiAgdmFyIGlzUG9pbnRMaWdodCA9IHNoYWRvd01hcC5faXNQb2ludExpZ2h0O1xuICB2YXIgaXNTcG90TGlnaHQgPSBzaGFkb3dNYXAuX2lzU3BvdExpZ2h0O1xuICB2YXIgaGFzQ2FzY2FkZXMgPSBzaGFkb3dNYXAuX251bWJlck9mQ2FzY2FkZXMgPiAxO1xuICB2YXIgZGVidWdDYXNjYWRlQ29sb3JzID0gc2hhZG93TWFwLmRlYnVnQ2FzY2FkZUNvbG9ycztcbiAgdmFyIHNvZnRTaGFkb3dzID0gc2hhZG93TWFwLnNvZnRTaGFkb3dzO1xuICB2YXIgYmlhcyA9IGlzUG9pbnRMaWdodFxuICAgID8gc2hhZG93TWFwLl9wb2ludEJpYXNcbiAgICA6IGlzVGVycmFpblxuICAgID8gc2hhZG93TWFwLl90ZXJyYWluQmlhc1xuICAgIDogc2hhZG93TWFwLl9wcmltaXRpdmVCaWFzO1xuXG4gIHZhciBkZWZpbmVzID0gZnMuZGVmaW5lcy5zbGljZSgwKTtcbiAgdmFyIHNvdXJjZXMgPSBmcy5zb3VyY2VzLnNsaWNlKDApO1xuXG4gIHZhciBsZW5ndGggPSBzb3VyY2VzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHNvdXJjZXNbaV0gPSBTaGFkZXJTb3VyY2UucmVwbGFjZU1haW4oXG4gICAgICBzb3VyY2VzW2ldLFxuICAgICAgXCJjem1fc2hhZG93X3JlY2VpdmVfbWFpblwiXG4gICAgKTtcbiAgfVxuXG4gIGlmIChpc1BvaW50TGlnaHQpIHtcbiAgICBkZWZpbmVzLnB1c2goXCJVU0VfQ1VCRV9NQVBfU0hBRE9XXCIpO1xuICB9IGVsc2UgaWYgKHVzZXNEZXB0aFRleHR1cmUpIHtcbiAgICBkZWZpbmVzLnB1c2goXCJVU0VfU0hBRE9XX0RFUFRIX1RFWFRVUkVcIik7XG4gIH1cblxuICBpZiAoc29mdFNoYWRvd3MgJiYgIWlzUG9pbnRMaWdodCkge1xuICAgIGRlZmluZXMucHVzaChcIlVTRV9TT0ZUX1NIQURPV1NcIik7XG4gIH1cblxuICAvLyBFbmFibGUgZGF5LW5pZ2h0IHNoYWRpbmcgc28gdGhhdCB0aGUgZ2xvYmUgaXMgZGFyayB3aGVuIHRoZSBsaWdodCBpcyBiZWxvdyB0aGUgaG9yaXpvblxuICBpZiAoaGFzQ2FzY2FkZXMgJiYgY2FzdFNoYWRvd3MgJiYgaXNUZXJyYWluKSB7XG4gICAgaWYgKGhhc05vcm1hbFZhcnlpbmcpIHtcbiAgICAgIGRlZmluZXMucHVzaChcIkVOQUJMRV9WRVJURVhfTElHSFRJTkdcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlZmluZXMucHVzaChcIkVOQUJMRV9EQVlOSUdIVF9TSEFESU5HXCIpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChjYXN0U2hhZG93cyAmJiBiaWFzLm5vcm1hbFNoYWRpbmcgJiYgaGFzTm9ybWFsVmFyeWluZykge1xuICAgIGRlZmluZXMucHVzaChcIlVTRV9OT1JNQUxfU0hBRElOR1wiKTtcbiAgICBpZiAoYmlhcy5ub3JtYWxTaGFkaW5nU21vb3RoID4gMC4wKSB7XG4gICAgICBkZWZpbmVzLnB1c2goXCJVU0VfTk9STUFMX1NIQURJTkdfU01PT1RIXCIpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBmc1NvdXJjZSA9IFwiXCI7XG5cbiAgaWYgKGlzUG9pbnRMaWdodCkge1xuICAgIGZzU291cmNlICs9IFwidW5pZm9ybSBzYW1wbGVyQ3ViZSBzaGFkb3dNYXBfdGV4dHVyZUN1YmU7IFxcblwiO1xuICB9IGVsc2Uge1xuICAgIGZzU291cmNlICs9IFwidW5pZm9ybSBzYW1wbGVyMkQgc2hhZG93TWFwX3RleHR1cmU7IFxcblwiO1xuICB9XG5cbiAgdmFyIHJldHVyblBvc2l0aW9uRUM7XG4gIGlmIChoYXNQb3NpdGlvblZhcnlpbmcpIHtcbiAgICByZXR1cm5Qb3NpdGlvbkVDID0gXCIgICAgcmV0dXJuIHZlYzQoXCIgKyBwb3NpdGlvblZhcnlpbmdOYW1lICsgXCIsIDEuMCk7IFxcblwiO1xuICB9IGVsc2Uge1xuICAgIHJldHVyblBvc2l0aW9uRUMgPVxuICAgICAgXCIjaWZuZGVmIExPR19ERVBUSCBcXG5cIiArXG4gICAgICBcIiAgICByZXR1cm4gY3ptX3dpbmRvd1RvRXllQ29vcmRpbmF0ZXMoZ2xfRnJhZ0Nvb3JkKTsgXFxuXCIgK1xuICAgICAgXCIjZWxzZSBcXG5cIiArXG4gICAgICBcIiAgICByZXR1cm4gdmVjNCh2X2xvZ1Bvc2l0aW9uRUMsIDEuMCk7IFxcblwiICtcbiAgICAgIFwiI2VuZGlmIFxcblwiO1xuICB9XG5cbiAgZnNTb3VyY2UgKz1cbiAgICBcInVuaWZvcm0gbWF0NCBzaGFkb3dNYXBfbWF0cml4OyBcXG5cIiArXG4gICAgXCJ1bmlmb3JtIHZlYzMgc2hhZG93TWFwX2xpZ2h0RGlyZWN0aW9uRUM7IFxcblwiICtcbiAgICBcInVuaWZvcm0gdmVjNCBzaGFkb3dNYXBfbGlnaHRQb3NpdGlvbkVDOyBcXG5cIiArXG4gICAgXCJ1bmlmb3JtIHZlYzQgc2hhZG93TWFwX25vcm1hbE9mZnNldFNjYWxlRGlzdGFuY2VNYXhEaXN0YW5jZUFuZERhcmtuZXNzOyBcXG5cIiArXG4gICAgXCJ1bmlmb3JtIHZlYzQgc2hhZG93TWFwX3RleGVsU2l6ZURlcHRoQmlhc0FuZE5vcm1hbFNoYWRpbmdTbW9vdGg7IFxcblwiICtcbiAgICBcIiNpZmRlZiBMT0dfREVQVEggXFxuXCIgK1xuICAgIFwidmFyeWluZyB2ZWMzIHZfbG9nUG9zaXRpb25FQzsgXFxuXCIgK1xuICAgIFwiI2VuZGlmIFxcblwiICtcbiAgICBcInZlYzQgZ2V0UG9zaXRpb25FQygpIFxcblwiICtcbiAgICBcInsgXFxuXCIgK1xuICAgIHJldHVyblBvc2l0aW9uRUMgK1xuICAgIFwifSBcXG5cIiArXG4gICAgXCJ2ZWMzIGdldE5vcm1hbEVDKCkgXFxuXCIgK1xuICAgIFwieyBcXG5cIiArXG4gICAgKGhhc05vcm1hbFZhcnlpbmdcbiAgICAgID8gXCIgICAgcmV0dXJuIG5vcm1hbGl6ZShcIiArIG5vcm1hbFZhcnlpbmdOYW1lICsgXCIpOyBcXG5cIlxuICAgICAgOiBcIiAgICByZXR1cm4gdmVjMygxLjApOyBcXG5cIikgK1xuICAgIFwifSBcXG5cIiArXG4gICAgLy8gT2Zmc2V0IHRoZSBzaGFkb3cgcG9zaXRpb24gaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUgbm9ybWFsIGZvciBwZXJwZW5kaWN1bGFyIGFuZCBiYWNrIGZhY2VzXG4gICAgXCJ2b2lkIGFwcGx5Tm9ybWFsT2Zmc2V0KGlub3V0IHZlYzQgcG9zaXRpb25FQywgdmVjMyBub3JtYWxFQywgZmxvYXQgbkRvdEwpIFxcblwiICtcbiAgICBcInsgXFxuXCIgK1xuICAgIChiaWFzLm5vcm1hbE9mZnNldCAmJiBoYXNOb3JtYWxWYXJ5aW5nXG4gICAgICA/IFwiICAgIGZsb2F0IG5vcm1hbE9mZnNldCA9IHNoYWRvd01hcF9ub3JtYWxPZmZzZXRTY2FsZURpc3RhbmNlTWF4RGlzdGFuY2VBbmREYXJrbmVzcy54OyBcXG5cIiArXG4gICAgICAgIFwiICAgIGZsb2F0IG5vcm1hbE9mZnNldFNjYWxlID0gMS4wIC0gbkRvdEw7IFxcblwiICtcbiAgICAgICAgXCIgICAgdmVjMyBvZmZzZXQgPSBub3JtYWxPZmZzZXQgKiBub3JtYWxPZmZzZXRTY2FsZSAqIG5vcm1hbEVDOyBcXG5cIiArXG4gICAgICAgIFwiICAgIHBvc2l0aW9uRUMueHl6ICs9IG9mZnNldDsgXFxuXCJcbiAgICAgIDogXCJcIikgK1xuICAgIFwifSBcXG5cIjtcblxuICBmc1NvdXJjZSArPVxuICAgIFwidm9pZCBtYWluKCkgXFxuXCIgK1xuICAgIFwieyBcXG5cIiArXG4gICAgXCIgICAgY3ptX3NoYWRvd19yZWNlaXZlX21haW4oKTsgXFxuXCIgK1xuICAgIFwiICAgIHZlYzQgcG9zaXRpb25FQyA9IGdldFBvc2l0aW9uRUMoKTsgXFxuXCIgK1xuICAgIFwiICAgIHZlYzMgbm9ybWFsRUMgPSBnZXROb3JtYWxFQygpOyBcXG5cIiArXG4gICAgXCIgICAgZmxvYXQgZGVwdGggPSAtcG9zaXRpb25FQy56OyBcXG5cIjtcblxuICBmc1NvdXJjZSArPVxuICAgIFwiICAgIGN6bV9zaGFkb3dQYXJhbWV0ZXJzIHNoYWRvd1BhcmFtZXRlcnM7IFxcblwiICtcbiAgICBcIiAgICBzaGFkb3dQYXJhbWV0ZXJzLnRleGVsU3RlcFNpemUgPSBzaGFkb3dNYXBfdGV4ZWxTaXplRGVwdGhCaWFzQW5kTm9ybWFsU2hhZGluZ1Ntb290aC54eTsgXFxuXCIgK1xuICAgIFwiICAgIHNoYWRvd1BhcmFtZXRlcnMuZGVwdGhCaWFzID0gc2hhZG93TWFwX3RleGVsU2l6ZURlcHRoQmlhc0FuZE5vcm1hbFNoYWRpbmdTbW9vdGguejsgXFxuXCIgK1xuICAgIFwiICAgIHNoYWRvd1BhcmFtZXRlcnMubm9ybWFsU2hhZGluZ1Ntb290aCA9IHNoYWRvd01hcF90ZXhlbFNpemVEZXB0aEJpYXNBbmROb3JtYWxTaGFkaW5nU21vb3RoLnc7IFxcblwiICtcbiAgICBcIiAgICBzaGFkb3dQYXJhbWV0ZXJzLmRhcmtuZXNzID0gc2hhZG93TWFwX25vcm1hbE9mZnNldFNjYWxlRGlzdGFuY2VNYXhEaXN0YW5jZUFuZERhcmtuZXNzLnc7IFxcblwiO1xuXG4gIGlmIChpc1RlcnJhaW4pIHtcbiAgICAvLyBTY2FsZSBkZXB0aCBiaWFzIGJhc2VkIG9uIHZpZXcgZGlzdGFuY2UgdG8gcmVkdWNlIHotZmlnaHRpbmcgaW4gZGlzdGFudCB0ZXJyYWluXG4gICAgZnNTb3VyY2UgKz0gXCIgICAgc2hhZG93UGFyYW1ldGVycy5kZXB0aEJpYXMgKj0gbWF4KGRlcHRoICogMC4wMSwgMS4wKTsgXFxuXCI7XG4gIH0gZWxzZSBpZiAoIXBvbHlnb25PZmZzZXRTdXBwb3J0ZWQpIHtcbiAgICAvLyBJZiBwb2x5Z29uIG9mZnNldCBpc24ndCBzdXBwb3J0ZWQgcHVzaCB0aGUgZGVwdGggYmFjayBiYXNlZCBvbiB2aWV3LCBob3dldmVyIHRoaXNcbiAgICAvLyBjYXVzZXMgbGlnaHQgbGVha2luZyBhdCBmdXJ0aGVyIGF3YXkgdmlld3NcbiAgICBmc1NvdXJjZSArPVxuICAgICAgXCIgICAgc2hhZG93UGFyYW1ldGVycy5kZXB0aEJpYXMgKj0gbWl4KDEuMCwgMTAwLjAsIGRlcHRoICogMC4wMDE1KTsgXFxuXCI7XG4gIH1cblxuICBpZiAoaXNQb2ludExpZ2h0KSB7XG4gICAgZnNTb3VyY2UgKz1cbiAgICAgIFwiICAgIHZlYzMgZGlyZWN0aW9uRUMgPSBwb3NpdGlvbkVDLnh5eiAtIHNoYWRvd01hcF9saWdodFBvc2l0aW9uRUMueHl6OyBcXG5cIiArXG4gICAgICBcIiAgICBmbG9hdCBkaXN0YW5jZSA9IGxlbmd0aChkaXJlY3Rpb25FQyk7IFxcblwiICtcbiAgICAgIFwiICAgIGRpcmVjdGlvbkVDID0gbm9ybWFsaXplKGRpcmVjdGlvbkVDKTsgXFxuXCIgK1xuICAgICAgXCIgICAgZmxvYXQgcmFkaXVzID0gc2hhZG93TWFwX2xpZ2h0UG9zaXRpb25FQy53OyBcXG5cIiArXG4gICAgICBcIiAgICAvLyBTdG9wIGVhcmx5IGlmIHRoZSBmcmFnbWVudCBpcyBiZXlvbmQgdGhlIHBvaW50IGxpZ2h0IHJhZGl1cyBcXG5cIiArXG4gICAgICBcIiAgICBpZiAoZGlzdGFuY2UgPiByYWRpdXMpIFxcblwiICtcbiAgICAgIFwiICAgIHsgXFxuXCIgK1xuICAgICAgXCIgICAgICAgIHJldHVybjsgXFxuXCIgK1xuICAgICAgXCIgICAgfSBcXG5cIiArXG4gICAgICBcIiAgICB2ZWMzIGRpcmVjdGlvbldDICA9IGN6bV9pbnZlcnNlVmlld1JvdGF0aW9uICogZGlyZWN0aW9uRUM7IFxcblwiICtcbiAgICAgIFwiICAgIHNoYWRvd1BhcmFtZXRlcnMuZGVwdGggPSBkaXN0YW5jZSAvIHJhZGl1czsgXFxuXCIgK1xuICAgICAgXCIgICAgc2hhZG93UGFyYW1ldGVycy5uRG90TCA9IGNsYW1wKGRvdChub3JtYWxFQywgLWRpcmVjdGlvbkVDKSwgMC4wLCAxLjApOyBcXG5cIiArXG4gICAgICBcIiAgICBzaGFkb3dQYXJhbWV0ZXJzLnRleENvb3JkcyA9IGRpcmVjdGlvbldDOyBcXG5cIiArXG4gICAgICBcIiAgICBmbG9hdCB2aXNpYmlsaXR5ID0gY3ptX3NoYWRvd1Zpc2liaWxpdHkoc2hhZG93TWFwX3RleHR1cmVDdWJlLCBzaGFkb3dQYXJhbWV0ZXJzKTsgXFxuXCI7XG4gIH0gZWxzZSBpZiAoaXNTcG90TGlnaHQpIHtcbiAgICBmc1NvdXJjZSArPVxuICAgICAgXCIgICAgdmVjMyBkaXJlY3Rpb25FQyA9IG5vcm1hbGl6ZShwb3NpdGlvbkVDLnh5eiAtIHNoYWRvd01hcF9saWdodFBvc2l0aW9uRUMueHl6KTsgXFxuXCIgK1xuICAgICAgXCIgICAgZmxvYXQgbkRvdEwgPSBjbGFtcChkb3Qobm9ybWFsRUMsIC1kaXJlY3Rpb25FQyksIDAuMCwgMS4wKTsgXFxuXCIgK1xuICAgICAgXCIgICAgYXBwbHlOb3JtYWxPZmZzZXQocG9zaXRpb25FQywgbm9ybWFsRUMsIG5Eb3RMKTsgXFxuXCIgK1xuICAgICAgXCIgICAgdmVjNCBzaGFkb3dQb3NpdGlvbiA9IHNoYWRvd01hcF9tYXRyaXggKiBwb3NpdGlvbkVDOyBcXG5cIiArXG4gICAgICBcIiAgICAvLyBTcG90IGxpZ2h0IHVzZXMgYSBwZXJzcGVjdGl2ZSBwcm9qZWN0aW9uLCBzbyBwZXJmb3JtIHRoZSBwZXJzcGVjdGl2ZSBkaXZpZGUgXFxuXCIgK1xuICAgICAgXCIgICAgc2hhZG93UG9zaXRpb24gLz0gc2hhZG93UG9zaXRpb24udzsgXFxuXCIgK1xuICAgICAgXCIgICAgLy8gU3RvcCBlYXJseSBpZiB0aGUgZnJhZ21lbnQgaXMgbm90IGluIHRoZSBzaGFkb3cgYm91bmRzIFxcblwiICtcbiAgICAgIFwiICAgIGlmIChhbnkobGVzc1RoYW4oc2hhZG93UG9zaXRpb24ueHl6LCB2ZWMzKDAuMCkpKSB8fCBhbnkoZ3JlYXRlclRoYW4oc2hhZG93UG9zaXRpb24ueHl6LCB2ZWMzKDEuMCkpKSkgXFxuXCIgK1xuICAgICAgXCIgICAgeyBcXG5cIiArXG4gICAgICBcIiAgICAgICAgcmV0dXJuOyBcXG5cIiArXG4gICAgICBcIiAgICB9IFxcblwiICtcbiAgICAgIFwiICAgIHNoYWRvd1BhcmFtZXRlcnMudGV4Q29vcmRzID0gc2hhZG93UG9zaXRpb24ueHk7IFxcblwiICtcbiAgICAgIFwiICAgIHNoYWRvd1BhcmFtZXRlcnMuZGVwdGggPSBzaGFkb3dQb3NpdGlvbi56OyBcXG5cIiArXG4gICAgICBcIiAgICBzaGFkb3dQYXJhbWV0ZXJzLm5Eb3RMID0gbkRvdEw7IFxcblwiICtcbiAgICAgIFwiICAgIGZsb2F0IHZpc2liaWxpdHkgPSBjem1fc2hhZG93VmlzaWJpbGl0eShzaGFkb3dNYXBfdGV4dHVyZSwgc2hhZG93UGFyYW1ldGVycyk7IFxcblwiO1xuICB9IGVsc2UgaWYgKGhhc0Nhc2NhZGVzKSB7XG4gICAgZnNTb3VyY2UgKz1cbiAgICAgIFwiICAgIGZsb2F0IG1heERlcHRoID0gc2hhZG93TWFwX2Nhc2NhZGVTcGxpdHNbMV0udzsgXFxuXCIgK1xuICAgICAgXCIgICAgLy8gU3RvcCBlYXJseSBpZiB0aGUgZXllIGRlcHRoIGV4Y2VlZHMgdGhlIGxhc3QgY2FzY2FkZSBcXG5cIiArXG4gICAgICBcIiAgICBpZiAoZGVwdGggPiBtYXhEZXB0aCkgXFxuXCIgK1xuICAgICAgXCIgICAgeyBcXG5cIiArXG4gICAgICBcIiAgICAgICAgcmV0dXJuOyBcXG5cIiArXG4gICAgICBcIiAgICB9IFxcblwiICtcbiAgICAgIFwiICAgIC8vIEdldCB0aGUgY2FzY2FkZSBiYXNlZCBvbiB0aGUgZXllLXNwYWNlIGRlcHRoIFxcblwiICtcbiAgICAgIFwiICAgIHZlYzQgd2VpZ2h0cyA9IGN6bV9jYXNjYWRlV2VpZ2h0cyhkZXB0aCk7IFxcblwiICtcbiAgICAgIFwiICAgIC8vIEFwcGx5IG5vcm1hbCBvZmZzZXQgXFxuXCIgK1xuICAgICAgXCIgICAgZmxvYXQgbkRvdEwgPSBjbGFtcChkb3Qobm9ybWFsRUMsIHNoYWRvd01hcF9saWdodERpcmVjdGlvbkVDKSwgMC4wLCAxLjApOyBcXG5cIiArXG4gICAgICBcIiAgICBhcHBseU5vcm1hbE9mZnNldChwb3NpdGlvbkVDLCBub3JtYWxFQywgbkRvdEwpOyBcXG5cIiArXG4gICAgICBcIiAgICAvLyBUcmFuc2Zvcm0gcG9zaXRpb24gaW50byB0aGUgY2FzY2FkZSBcXG5cIiArXG4gICAgICBcIiAgICB2ZWM0IHNoYWRvd1Bvc2l0aW9uID0gY3ptX2Nhc2NhZGVNYXRyaXgod2VpZ2h0cykgKiBwb3NpdGlvbkVDOyBcXG5cIiArXG4gICAgICBcIiAgICAvLyBHZXQgdmlzaWJpbGl0eSBcXG5cIiArXG4gICAgICBcIiAgICBzaGFkb3dQYXJhbWV0ZXJzLnRleENvb3JkcyA9IHNoYWRvd1Bvc2l0aW9uLnh5OyBcXG5cIiArXG4gICAgICBcIiAgICBzaGFkb3dQYXJhbWV0ZXJzLmRlcHRoID0gc2hhZG93UG9zaXRpb24uejsgXFxuXCIgK1xuICAgICAgXCIgICAgc2hhZG93UGFyYW1ldGVycy5uRG90TCA9IG5Eb3RMOyBcXG5cIiArXG4gICAgICBcIiAgICBmbG9hdCB2aXNpYmlsaXR5ID0gY3ptX3NoYWRvd1Zpc2liaWxpdHkoc2hhZG93TWFwX3RleHR1cmUsIHNoYWRvd1BhcmFtZXRlcnMpOyBcXG5cIiArXG4gICAgICBcIiAgICAvLyBGYWRlIG91dCBzaGFkb3dzIHRoYXQgYXJlIGZhciBhd2F5IFxcblwiICtcbiAgICAgIFwiICAgIGZsb2F0IHNoYWRvd01hcE1heGltdW1EaXN0YW5jZSA9IHNoYWRvd01hcF9ub3JtYWxPZmZzZXRTY2FsZURpc3RhbmNlTWF4RGlzdGFuY2VBbmREYXJrbmVzcy56OyBcXG5cIiArXG4gICAgICBcIiAgICBmbG9hdCBmYWRlID0gbWF4KChkZXB0aCAtIHNoYWRvd01hcE1heGltdW1EaXN0YW5jZSAqIDAuOCkgLyAoc2hhZG93TWFwTWF4aW11bURpc3RhbmNlICogMC4yKSwgMC4wKTsgXFxuXCIgK1xuICAgICAgXCIgICAgdmlzaWJpbGl0eSA9IG1peCh2aXNpYmlsaXR5LCAxLjAsIGZhZGUpOyBcXG5cIiArXG4gICAgICAoZGVidWdDYXNjYWRlQ29sb3JzXG4gICAgICAgID8gXCIgICAgLy8gRHJhdyBjYXNjYWRlIGNvbG9ycyBmb3IgZGVidWdnaW5nIFxcblwiICtcbiAgICAgICAgICBcIiAgICBnbF9GcmFnQ29sb3IgKj0gY3ptX2Nhc2NhZGVDb2xvcih3ZWlnaHRzKTsgXFxuXCJcbiAgICAgICAgOiBcIlwiKTtcbiAgfSBlbHNlIHtcbiAgICBmc1NvdXJjZSArPVxuICAgICAgXCIgICAgZmxvYXQgbkRvdEwgPSBjbGFtcChkb3Qobm9ybWFsRUMsIHNoYWRvd01hcF9saWdodERpcmVjdGlvbkVDKSwgMC4wLCAxLjApOyBcXG5cIiArXG4gICAgICBcIiAgICBhcHBseU5vcm1hbE9mZnNldChwb3NpdGlvbkVDLCBub3JtYWxFQywgbkRvdEwpOyBcXG5cIiArXG4gICAgICBcIiAgICB2ZWM0IHNoYWRvd1Bvc2l0aW9uID0gc2hhZG93TWFwX21hdHJpeCAqIHBvc2l0aW9uRUM7IFxcblwiICtcbiAgICAgIFwiICAgIC8vIFN0b3AgZWFybHkgaWYgdGhlIGZyYWdtZW50IGlzIG5vdCBpbiB0aGUgc2hhZG93IGJvdW5kcyBcXG5cIiArXG4gICAgICBcIiAgICBpZiAoYW55KGxlc3NUaGFuKHNoYWRvd1Bvc2l0aW9uLnh5eiwgdmVjMygwLjApKSkgfHwgYW55KGdyZWF0ZXJUaGFuKHNoYWRvd1Bvc2l0aW9uLnh5eiwgdmVjMygxLjApKSkpIFxcblwiICtcbiAgICAgIFwiICAgIHsgXFxuXCIgK1xuICAgICAgXCIgICAgICAgIHJldHVybjsgXFxuXCIgK1xuICAgICAgXCIgICAgfSBcXG5cIiArXG4gICAgICBcIiAgICBzaGFkb3dQYXJhbWV0ZXJzLnRleENvb3JkcyA9IHNoYWRvd1Bvc2l0aW9uLnh5OyBcXG5cIiArXG4gICAgICBcIiAgICBzaGFkb3dQYXJhbWV0ZXJzLmRlcHRoID0gc2hhZG93UG9zaXRpb24uejsgXFxuXCIgK1xuICAgICAgXCIgICAgc2hhZG93UGFyYW1ldGVycy5uRG90TCA9IG5Eb3RMOyBcXG5cIiArXG4gICAgICBcIiAgICBmbG9hdCB2aXNpYmlsaXR5ID0gY3ptX3NoYWRvd1Zpc2liaWxpdHkoc2hhZG93TWFwX3RleHR1cmUsIHNoYWRvd1BhcmFtZXRlcnMpOyBcXG5cIjtcbiAgfVxuXG4gIGZzU291cmNlICs9IFwiICAgIGdsX0ZyYWdDb2xvci5yZ2IgKj0gdmlzaWJpbGl0eTsgXFxuXCIgKyBcIn0gXFxuXCI7XG5cbiAgc291cmNlcy5wdXNoKGZzU291cmNlKTtcblxuICByZXR1cm4gbmV3IFNoYWRlclNvdXJjZSh7XG4gICAgZGVmaW5lczogZGVmaW5lcyxcbiAgICBzb3VyY2VzOiBzb3VyY2VzLFxuICB9KTtcbn07XG5leHBvcnQgZGVmYXVsdCBTaGFkb3dNYXBTaGFkZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2143\n')},34125:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Specifies whether the object casts or receives shadows from light sources when\n * shadows are enabled.\n *\n * @enum {Number}\n */\nvar ShadowMode = {\n  /**\n   * The object does not cast or receive shadows.\n   *\n   * @type {Number}\n   * @constant\n   */\n  DISABLED: 0,\n\n  /**\n   * The object casts and receives shadows.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ENABLED: 1,\n\n  /**\n   * The object casts shadows only.\n   *\n   * @type {Number}\n   * @constant\n   */\n  CAST_ONLY: 2,\n\n  /**\n   * The object receives shadows only.\n   *\n   * @type {Number}\n   * @constant\n   */\n  RECEIVE_ONLY: 3,\n};\n\n/**\n * @private\n */\nShadowMode.NUMBER_OF_SHADOW_MODES = 4;\n\n/**\n * @private\n */\nShadowMode.castShadows = function (shadowMode) {\n  return (\n    shadowMode === ShadowMode.ENABLED || shadowMode === ShadowMode.CAST_ONLY\n  );\n};\n\n/**\n * @private\n */\nShadowMode.receiveShadows = function (shadowMode) {\n  return (\n    shadowMode === ShadowMode.ENABLED || shadowMode === ShadowMode.RECEIVE_ONLY\n  );\n};\n\n/**\n * @private\n */\nShadowMode.fromCastReceive = function (castShadows, receiveShadows) {\n  if (castShadows && receiveShadows) {\n    return ShadowMode.ENABLED;\n  } else if (castShadows) {\n    return ShadowMode.CAST_ONLY;\n  } else if (receiveShadows) {\n    return ShadowMode.RECEIVE_ONLY;\n  }\n  return ShadowMode.DISABLED;\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(ShadowMode));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQxMjUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlEQUFlLHlCQUF5QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL1NoYWRvd01vZGUuanM/Y2UxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNwZWNpZmllcyB3aGV0aGVyIHRoZSBvYmplY3QgY2FzdHMgb3IgcmVjZWl2ZXMgc2hhZG93cyBmcm9tIGxpZ2h0IHNvdXJjZXMgd2hlblxuICogc2hhZG93cyBhcmUgZW5hYmxlZC5cbiAqXG4gKiBAZW51bSB7TnVtYmVyfVxuICovXG52YXIgU2hhZG93TW9kZSA9IHtcbiAgLyoqXG4gICAqIFRoZSBvYmplY3QgZG9lcyBub3QgY2FzdCBvciByZWNlaXZlIHNoYWRvd3MuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgRElTQUJMRUQ6IDAsXG5cbiAgLyoqXG4gICAqIFRoZSBvYmplY3QgY2FzdHMgYW5kIHJlY2VpdmVzIHNoYWRvd3MuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgRU5BQkxFRDogMSxcblxuICAvKipcbiAgICogVGhlIG9iamVjdCBjYXN0cyBzaGFkb3dzIG9ubHkuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgQ0FTVF9PTkxZOiAyLFxuXG4gIC8qKlxuICAgKiBUaGUgb2JqZWN0IHJlY2VpdmVzIHNoYWRvd3Mgb25seS5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBSRUNFSVZFX09OTFk6IDMsXG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cblNoYWRvd01vZGUuTlVNQkVSX09GX1NIQURPV19NT0RFUyA9IDQ7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuU2hhZG93TW9kZS5jYXN0U2hhZG93cyA9IGZ1bmN0aW9uIChzaGFkb3dNb2RlKSB7XG4gIHJldHVybiAoXG4gICAgc2hhZG93TW9kZSA9PT0gU2hhZG93TW9kZS5FTkFCTEVEIHx8IHNoYWRvd01vZGUgPT09IFNoYWRvd01vZGUuQ0FTVF9PTkxZXG4gICk7XG59O1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cblNoYWRvd01vZGUucmVjZWl2ZVNoYWRvd3MgPSBmdW5jdGlvbiAoc2hhZG93TW9kZSkge1xuICByZXR1cm4gKFxuICAgIHNoYWRvd01vZGUgPT09IFNoYWRvd01vZGUuRU5BQkxFRCB8fCBzaGFkb3dNb2RlID09PSBTaGFkb3dNb2RlLlJFQ0VJVkVfT05MWVxuICApO1xufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5TaGFkb3dNb2RlLmZyb21DYXN0UmVjZWl2ZSA9IGZ1bmN0aW9uIChjYXN0U2hhZG93cywgcmVjZWl2ZVNoYWRvd3MpIHtcbiAgaWYgKGNhc3RTaGFkb3dzICYmIHJlY2VpdmVTaGFkb3dzKSB7XG4gICAgcmV0dXJuIFNoYWRvd01vZGUuRU5BQkxFRDtcbiAgfSBlbHNlIGlmIChjYXN0U2hhZG93cykge1xuICAgIHJldHVybiBTaGFkb3dNb2RlLkNBU1RfT05MWTtcbiAgfSBlbHNlIGlmIChyZWNlaXZlU2hhZG93cykge1xuICAgIHJldHVybiBTaGFkb3dNb2RlLlJFQ0VJVkVfT05MWTtcbiAgfVxuICByZXR1cm4gU2hhZG93TW9kZS5ESVNBQkxFRDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoU2hhZG93TW9kZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///34125\n')},88472:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51688);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82982);\n/* harmony import */ var _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(74938);\n/* harmony import */ var _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(15361);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(96190);\n/* harmony import */ var _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(95555);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(53642);\n/* harmony import */ var _Scene_PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(64060);\n/* harmony import */ var _Shaders_ShadowVolumeAppearanceFS_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(52965);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Creates shaders for a ClassificationPrimitive to use a given Appearance, as well as for picking.\n *\n * @param {Boolean} extentsCulling Discard fragments outside the instance\'s texture coordinate extents.\n * @param {Boolean} planarExtents If true, texture coordinates will be computed using planes instead of spherical coordinates.\n * @param {Appearance} appearance An Appearance to be used with a ClassificationPrimitive via GroundPrimitive.\n * @private\n */\nfunction ShadowVolumeAppearance(extentsCulling, planarExtents, appearance) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.bool */ .Z.typeOf.bool("extentsCulling", extentsCulling);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.bool */ .Z.typeOf.bool("planarExtents", planarExtents);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("appearance", appearance);\n  //>>includeEnd(\'debug\');\n\n  this._projectionExtentDefines = {\n    eastMostYhighDefine: "",\n    eastMostYlowDefine: "",\n    westMostYhighDefine: "",\n    westMostYlowDefine: "",\n  };\n\n  // Compute shader dependencies\n  var colorShaderDependencies = new ShaderDependencies();\n  colorShaderDependencies.requiresTextureCoordinates = extentsCulling;\n  colorShaderDependencies.requiresEC = !appearance.flat;\n\n  var pickShaderDependencies = new ShaderDependencies();\n  pickShaderDependencies.requiresTextureCoordinates = extentsCulling;\n\n  if (appearance instanceof _Scene_PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z) {\n    // PerInstanceColorAppearance doesn\'t have material.shaderSource, instead it has its own vertex and fragment shaders\n    colorShaderDependencies.requiresNormalEC = !appearance.flat;\n  } else {\n    // Scan material source for what hookups are needed. Assume czm_materialInput materialInput.\n    var materialShaderSource =\n      appearance.material.shaderSource + "\\n" + appearance.fragmentShaderSource;\n\n    colorShaderDependencies.normalEC =\n      materialShaderSource.indexOf("materialInput.normalEC") !== -1 ||\n      materialShaderSource.indexOf("czm_getDefaultMaterial") !== -1;\n    colorShaderDependencies.positionToEyeEC =\n      materialShaderSource.indexOf("materialInput.positionToEyeEC") !== -1;\n    colorShaderDependencies.tangentToEyeMatrix =\n      materialShaderSource.indexOf("materialInput.tangentToEyeMatrix") !== -1;\n    colorShaderDependencies.st =\n      materialShaderSource.indexOf("materialInput.st") !== -1;\n  }\n\n  this._colorShaderDependencies = colorShaderDependencies;\n  this._pickShaderDependencies = pickShaderDependencies;\n  this._appearance = appearance;\n  this._extentsCulling = extentsCulling;\n  this._planarExtents = planarExtents;\n}\n\n/**\n * Create the fragment shader for a ClassificationPrimitive\'s color pass when rendering for color.\n *\n * @param {Boolean} columbusView2D Whether the shader will be used for Columbus View or 2D.\n * @returns {ShaderSource} Shader source for the fragment shader.\n */\nShadowVolumeAppearance.prototype.createFragmentShader = function (\n  columbusView2D\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.bool */ .Z.typeOf.bool("columbusView2D", columbusView2D);\n  //>>includeEnd(\'debug\');\n\n  var appearance = this._appearance;\n  var dependencies = this._colorShaderDependencies;\n\n  var defines = [];\n  if (!columbusView2D && !this._planarExtents) {\n    defines.push("SPHERICAL");\n  }\n  if (dependencies.requiresEC) {\n    defines.push("REQUIRES_EC");\n  }\n  if (dependencies.requiresWC) {\n    defines.push("REQUIRES_WC");\n  }\n  if (dependencies.requiresTextureCoordinates) {\n    defines.push("TEXTURE_COORDINATES");\n  }\n  if (this._extentsCulling) {\n    defines.push("CULL_FRAGMENTS");\n  }\n  if (dependencies.requiresNormalEC) {\n    defines.push("NORMAL_EC");\n  }\n  if (appearance instanceof _Scene_PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z) {\n    defines.push("PER_INSTANCE_COLOR");\n  }\n\n  // Material inputs. Use of parameters in the material is different\n  // from requirement of the parameters in the overall shader, for example,\n  // texture coordinates may be used for fragment culling but not for the material itself.\n  if (dependencies.normalEC) {\n    defines.push("USES_NORMAL_EC");\n  }\n  if (dependencies.positionToEyeEC) {\n    defines.push("USES_POSITION_TO_EYE_EC");\n  }\n  if (dependencies.tangentToEyeMatrix) {\n    defines.push("USES_TANGENT_TO_EYE");\n  }\n  if (dependencies.st) {\n    defines.push("USES_ST");\n  }\n\n  if (appearance.flat) {\n    defines.push("FLAT");\n  }\n\n  var materialSource = "";\n  if (!(appearance instanceof _Scene_PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)) {\n    materialSource = appearance.material.shaderSource;\n  }\n\n  return new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    defines: defines,\n    sources: [materialSource, _Shaders_ShadowVolumeAppearanceFS_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z],\n  });\n};\n\nShadowVolumeAppearance.prototype.createPickFragmentShader = function (\n  columbusView2D\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.bool */ .Z.typeOf.bool("columbusView2D", columbusView2D);\n  //>>includeEnd(\'debug\');\n\n  var dependencies = this._pickShaderDependencies;\n\n  var defines = ["PICK"];\n  if (!columbusView2D && !this._planarExtents) {\n    defines.push("SPHERICAL");\n  }\n  if (dependencies.requiresEC) {\n    defines.push("REQUIRES_EC");\n  }\n  if (dependencies.requiresWC) {\n    defines.push("REQUIRES_WC");\n  }\n  if (dependencies.requiresTextureCoordinates) {\n    defines.push("TEXTURE_COORDINATES");\n  }\n  if (this._extentsCulling) {\n    defines.push("CULL_FRAGMENTS");\n  }\n  return new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    defines: defines,\n    sources: [_Shaders_ShadowVolumeAppearanceFS_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z],\n    pickColorQualifier: "varying",\n  });\n};\n\n/**\n * Create the vertex shader for a ClassificationPrimitive\'s color pass on the final of 3 shadow volume passes\n *\n * @param {String[]} defines External defines to pass to the vertex shader.\n * @param {String} vertexShaderSource ShadowVolumeAppearanceVS with any required modifications for computing position.\n * @param {Boolean} columbusView2D Whether the shader will be used for Columbus View or 2D.\n * @param {MapProjection} mapProjection Current scene\'s map projection.\n * @returns {String} Shader source for the vertex shader.\n */\nShadowVolumeAppearance.prototype.createVertexShader = function (\n  defines,\n  vertexShaderSource,\n  columbusView2D,\n  mapProjection\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("defines", defines);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.string */ .Z.typeOf.string("vertexShaderSource", vertexShaderSource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.bool */ .Z.typeOf.bool("columbusView2D", columbusView2D);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("mapProjection", mapProjection);\n  //>>includeEnd(\'debug\');\n  return createShadowVolumeAppearanceVS(\n    this._colorShaderDependencies,\n    this._planarExtents,\n    columbusView2D,\n    defines,\n    vertexShaderSource,\n    this._appearance,\n    mapProjection,\n    this._projectionExtentDefines\n  );\n};\n\n/**\n * Create the vertex shader for a ClassificationPrimitive\'s pick pass on the final of 3 shadow volume passes\n *\n * @param {String[]} defines External defines to pass to the vertex shader.\n * @param {String} vertexShaderSource ShadowVolumeAppearanceVS with any required modifications for computing position and picking.\n * @param {Boolean} columbusView2D Whether the shader will be used for Columbus View or 2D.\n * @param {MapProjection} mapProjection Current scene\'s map projection.\n * @returns {String} Shader source for the vertex shader.\n */\nShadowVolumeAppearance.prototype.createPickVertexShader = function (\n  defines,\n  vertexShaderSource,\n  columbusView2D,\n  mapProjection\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("defines", defines);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.string */ .Z.typeOf.string("vertexShaderSource", vertexShaderSource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.bool */ .Z.typeOf.bool("columbusView2D", columbusView2D);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("mapProjection", mapProjection);\n  //>>includeEnd(\'debug\');\n  return createShadowVolumeAppearanceVS(\n    this._pickShaderDependencies,\n    this._planarExtents,\n    columbusView2D,\n    defines,\n    vertexShaderSource,\n    undefined,\n    mapProjection,\n    this._projectionExtentDefines\n  );\n};\n\nvar longitudeExtentsCartesianScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar longitudeExtentsCartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar longitudeExtentsEncodeScratch = {\n  high: 0.0,\n  low: 0.0,\n};\nfunction createShadowVolumeAppearanceVS(\n  shaderDependencies,\n  planarExtents,\n  columbusView2D,\n  defines,\n  vertexShaderSource,\n  appearance,\n  mapProjection,\n  projectionExtentDefines\n) {\n  var allDefines = defines.slice();\n\n  if (projectionExtentDefines.eastMostYhighDefine === "") {\n    var eastMostCartographic = longitudeExtentsCartographicScratch;\n    eastMostCartographic.longitude = _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PI */ .Z.PI;\n    eastMostCartographic.latitude = 0.0;\n    eastMostCartographic.height = 0.0;\n    var eastMostCartesian = mapProjection.project(\n      eastMostCartographic,\n      longitudeExtentsCartesianScratch\n    );\n    var encoded = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].encode */ .Z.encode(\n      eastMostCartesian.x,\n      longitudeExtentsEncodeScratch\n    );\n    projectionExtentDefines.eastMostYhighDefine =\n      "EAST_MOST_X_HIGH " +\n      encoded.high.toFixed((encoded.high + "").length + 1);\n    projectionExtentDefines.eastMostYlowDefine =\n      "EAST_MOST_X_LOW " + encoded.low.toFixed((encoded.low + "").length + 1);\n\n    var westMostCartographic = longitudeExtentsCartographicScratch;\n    westMostCartographic.longitude = -_Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PI */ .Z.PI;\n    westMostCartographic.latitude = 0.0;\n    westMostCartographic.height = 0.0;\n    var westMostCartesian = mapProjection.project(\n      westMostCartographic,\n      longitudeExtentsCartesianScratch\n    );\n    encoded = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].encode */ .Z.encode(\n      westMostCartesian.x,\n      longitudeExtentsEncodeScratch\n    );\n    projectionExtentDefines.westMostYhighDefine =\n      "WEST_MOST_X_HIGH " +\n      encoded.high.toFixed((encoded.high + "").length + 1);\n    projectionExtentDefines.westMostYlowDefine =\n      "WEST_MOST_X_LOW " + encoded.low.toFixed((encoded.low + "").length + 1);\n  }\n\n  if (columbusView2D) {\n    allDefines.push(projectionExtentDefines.eastMostYhighDefine);\n    allDefines.push(projectionExtentDefines.eastMostYlowDefine);\n    allDefines.push(projectionExtentDefines.westMostYhighDefine);\n    allDefines.push(projectionExtentDefines.westMostYlowDefine);\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(appearance) && appearance instanceof _Scene_PerInstanceColorAppearance_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z) {\n    allDefines.push("PER_INSTANCE_COLOR");\n  }\n  if (shaderDependencies.requiresTextureCoordinates) {\n    allDefines.push("TEXTURE_COORDINATES");\n    if (!(planarExtents || columbusView2D)) {\n      allDefines.push("SPHERICAL");\n    }\n    if (columbusView2D) {\n      allDefines.push("COLUMBUS_VIEW_2D");\n    }\n  }\n\n  return new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    defines: allDefines,\n    sources: [vertexShaderSource],\n  });\n}\n\n/**\n * Tracks shader dependencies.\n * @private\n */\nfunction ShaderDependencies() {\n  this._requiresEC = false;\n  this._requiresWC = false; // depends on eye coordinates, needed for material and for phong\n  this._requiresNormalEC = false; // depends on eye coordinates, needed for material\n  this._requiresTextureCoordinates = false; // depends on world coordinates, needed for material and for culling\n\n  this._usesNormalEC = false;\n  this._usesPositionToEyeEC = false;\n  this._usesTangentToEyeMat = false;\n  this._usesSt = false;\n}\n\nObject.defineProperties(ShaderDependencies.prototype, {\n  // Set when assessing final shading (flat vs. phong) and culling using computed texture coordinates\n  requiresEC: {\n    get: function () {\n      return this._requiresEC;\n    },\n    set: function (value) {\n      this._requiresEC = value || this._requiresEC;\n    },\n  },\n  requiresWC: {\n    get: function () {\n      return this._requiresWC;\n    },\n    set: function (value) {\n      this._requiresWC = value || this._requiresWC;\n      this.requiresEC = this._requiresWC;\n    },\n  },\n  requiresNormalEC: {\n    get: function () {\n      return this._requiresNormalEC;\n    },\n    set: function (value) {\n      this._requiresNormalEC = value || this._requiresNormalEC;\n      this.requiresEC = this._requiresNormalEC;\n    },\n  },\n  requiresTextureCoordinates: {\n    get: function () {\n      return this._requiresTextureCoordinates;\n    },\n    set: function (value) {\n      this._requiresTextureCoordinates =\n        value || this._requiresTextureCoordinates;\n      this.requiresWC = this._requiresTextureCoordinates;\n    },\n  },\n  // Get/Set when assessing material hookups\n  normalEC: {\n    set: function (value) {\n      this.requiresNormalEC = value;\n      this._usesNormalEC = value;\n    },\n    get: function () {\n      return this._usesNormalEC;\n    },\n  },\n  tangentToEyeMatrix: {\n    set: function (value) {\n      this.requiresWC = value;\n      this.requiresNormalEC = value;\n      this._usesTangentToEyeMat = value;\n    },\n    get: function () {\n      return this._usesTangentToEyeMat;\n    },\n  },\n  positionToEyeEC: {\n    set: function (value) {\n      this.requiresEC = value;\n      this._usesPositionToEyeEC = value;\n    },\n    get: function () {\n      return this._usesPositionToEyeEC;\n    },\n  },\n  st: {\n    set: function (value) {\n      this.requiresTextureCoordinates = value;\n      this._usesSt = value;\n    },\n    get: function () {\n      return this._usesSt;\n    },\n  },\n});\n\nfunction pointLineDistance(point1, point2, point) {\n  return (\n    Math.abs(\n      (point2.y - point1.y) * point.x -\n        (point2.x - point1.x) * point.y +\n        point2.x * point1.y -\n        point2.y * point1.x\n    ) / _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].distance */ .Z.distance(point2, point1)\n  );\n}\n\nvar points2DScratch = [\n  new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n];\n\n// textureCoordinateRotationPoints form 2 lines in the computed UV space that remap to desired texture coordinates.\n// This allows simulation of baked texture coordinates for EllipseGeometry, RectangleGeometry, and PolygonGeometry.\nfunction addTextureCoordinateRotationAttributes(\n  attributes,\n  textureCoordinateRotationPoints\n) {\n  var points2D = points2DScratch;\n\n  var minXYCorner = _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(\n    textureCoordinateRotationPoints,\n    0,\n    points2D[0]\n  );\n  var maxYCorner = _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(\n    textureCoordinateRotationPoints,\n    2,\n    points2D[1]\n  );\n  var maxXCorner = _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(\n    textureCoordinateRotationPoints,\n    4,\n    points2D[2]\n  );\n\n  attributes.uMaxVmax = new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    value: [maxYCorner.x, maxYCorner.y, maxXCorner.x, maxXCorner.y],\n  });\n\n  var inverseExtentX =\n    1.0 / pointLineDistance(minXYCorner, maxYCorner, maxXCorner);\n  var inverseExtentY =\n    1.0 / pointLineDistance(minXYCorner, maxXCorner, maxYCorner);\n\n  attributes.uvMinAndExtents = new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    value: [minXYCorner.x, minXYCorner.y, inverseExtentX, inverseExtentY],\n  });\n}\n\nvar cartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar cornerScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar northWestScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar southEastScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar highLowScratch = { high: 0.0, low: 0.0 };\nfunction add2DTextureCoordinateAttributes(rectangle, projection, attributes) {\n  // Compute corner positions in double precision\n  var carto = cartographicScratch;\n  carto.height = 0.0;\n\n  carto.longitude = rectangle.west;\n  carto.latitude = rectangle.south;\n\n  var southWestCorner = projection.project(carto, cornerScratch);\n\n  carto.latitude = rectangle.north;\n  var northWest = projection.project(carto, northWestScratch);\n\n  carto.longitude = rectangle.east;\n  carto.latitude = rectangle.south;\n  var southEast = projection.project(carto, southEastScratch);\n\n  // Since these positions are all in the 2D plane, there\'s a lot of zeros\n  // and a lot of repetition. So we only need to encode 4 values.\n  // Encode:\n  // x: x value for southWestCorner\n  // y: y value for southWestCorner\n  // z: y value for northWest\n  // w: x value for southEast\n\n  var valuesHigh = [0, 0, 0, 0];\n  var valuesLow = [0, 0, 0, 0];\n  var encoded = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].encode */ .Z.encode(southWestCorner.x, highLowScratch);\n  valuesHigh[0] = encoded.high;\n  valuesLow[0] = encoded.low;\n\n  encoded = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].encode */ .Z.encode(southWestCorner.y, highLowScratch);\n  valuesHigh[1] = encoded.high;\n  valuesLow[1] = encoded.low;\n\n  encoded = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].encode */ .Z.encode(northWest.y, highLowScratch);\n  valuesHigh[2] = encoded.high;\n  valuesLow[2] = encoded.low;\n\n  encoded = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].encode */ .Z.encode(southEast.x, highLowScratch);\n  valuesHigh[3] = encoded.high;\n  valuesLow[3] = encoded.low;\n\n  attributes.planes2D_HIGH = new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    value: valuesHigh,\n  });\n\n  attributes.planes2D_LOW = new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    value: valuesLow,\n  });\n}\n\nvar enuMatrixScratch = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\nvar inverseEnuScratch = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\nvar rectanglePointCartesianScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar rectangleCenterScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar pointsCartographicScratch = [\n  new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(),\n  new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(),\n  new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(),\n  new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(),\n  new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(),\n  new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(),\n  new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(),\n  new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(),\n];\n/**\n * When computing planes to bound the rectangle,\n * need to factor in "bulge" and other distortion.\n * Flatten the ellipsoid-centered corners and edge-centers of the rectangle\n * into the plane of the local ENU system, compute bounds in 2D, and\n * project back to ellipsoid-centered.\n *\n * @private\n */\nfunction computeRectangleBounds(\n  rectangle,\n  ellipsoid,\n  height,\n  southWestCornerResult,\n  eastVectorResult,\n  northVectorResult\n) {\n  // Compute center of rectangle\n  var centerCartographic = _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].center */ .Z.center(rectangle, rectangleCenterScratch);\n  centerCartographic.height = height;\n  var centerCartesian = _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].toCartesian */ .Z.toCartesian(\n    centerCartographic,\n    ellipsoid,\n    rectanglePointCartesianScratch\n  );\n  var enuMatrix = _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].eastNorthUpToFixedFrame */ .Z.eastNorthUpToFixedFrame(\n    centerCartesian,\n    ellipsoid,\n    enuMatrixScratch\n  );\n  var inverseEnu = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].inverse */ .Z.inverse(enuMatrix, inverseEnuScratch);\n\n  var west = rectangle.west;\n  var east = rectangle.east;\n  var north = rectangle.north;\n  var south = rectangle.south;\n\n  var cartographics = pointsCartographicScratch;\n  cartographics[0].latitude = south;\n  cartographics[0].longitude = west;\n  cartographics[1].latitude = north;\n  cartographics[1].longitude = west;\n  cartographics[2].latitude = north;\n  cartographics[2].longitude = east;\n  cartographics[3].latitude = south;\n  cartographics[3].longitude = east;\n\n  var longitudeCenter = (west + east) * 0.5;\n  var latitudeCenter = (north + south) * 0.5;\n\n  cartographics[4].latitude = south;\n  cartographics[4].longitude = longitudeCenter;\n  cartographics[5].latitude = north;\n  cartographics[5].longitude = longitudeCenter;\n  cartographics[6].latitude = latitudeCenter;\n  cartographics[6].longitude = west;\n  cartographics[7].latitude = latitudeCenter;\n  cartographics[7].longitude = east;\n\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = Number.NEGATIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = Number.NEGATIVE_INFINITY;\n  for (var i = 0; i < 8; i++) {\n    cartographics[i].height = height;\n    var pointCartesian = _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].toCartesian */ .Z.toCartesian(\n      cartographics[i],\n      ellipsoid,\n      rectanglePointCartesianScratch\n    );\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(inverseEnu, pointCartesian, pointCartesian);\n    pointCartesian.z = 0.0; // flatten into XY plane of ENU coordinate system\n    minX = Math.min(minX, pointCartesian.x);\n    maxX = Math.max(maxX, pointCartesian.x);\n    minY = Math.min(minY, pointCartesian.y);\n    maxY = Math.max(maxY, pointCartesian.y);\n  }\n\n  var southWestCorner = southWestCornerResult;\n  southWestCorner.x = minX;\n  southWestCorner.y = minY;\n  southWestCorner.z = 0.0;\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(enuMatrix, southWestCorner, southWestCorner);\n\n  var southEastCorner = eastVectorResult;\n  southEastCorner.x = maxX;\n  southEastCorner.y = minY;\n  southEastCorner.z = 0.0;\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(enuMatrix, southEastCorner, southEastCorner);\n  // make eastward vector\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(southEastCorner, southWestCorner, eastVectorResult);\n\n  var northWestCorner = northVectorResult;\n  northWestCorner.x = minX;\n  northWestCorner.y = maxY;\n  northWestCorner.z = 0.0;\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(enuMatrix, northWestCorner, northWestCorner);\n  // make eastward vector\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(northWestCorner, southWestCorner, northVectorResult);\n}\n\nvar eastwardScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar northwardScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar encodeScratch = new _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\n/**\n * Gets an attributes object containing:\n * - 3 high-precision points as 6 GeometryInstanceAttributes. These points are used to compute eye-space planes.\n * - 1 texture coordinate rotation GeometryInstanceAttributes\n * - 2 GeometryInstanceAttributes used to compute high-precision points in 2D and Columbus View.\n *   These points are used to compute eye-space planes like above.\n *\n * Used to compute texture coordinates for small-area ClassificationPrimitives with materials or multiple non-overlapping instances.\n *\n * @see ShadowVolumeAppearance\n * @private\n *\n * @param {Rectangle} boundingRectangle Rectangle object that the points will approximately bound\n * @param {Number[]} textureCoordinateRotationPoints Points in the computed texture coordinate system for remapping texture coordinates\n * @param {Ellipsoid} ellipsoid Ellipsoid for converting Rectangle points to world coordinates\n * @param {MapProjection} projection The MapProjection used for 2D and Columbus View.\n * @param {Number} [height=0] The maximum height for the shadow volume.\n * @returns {Object} An attributes dictionary containing planar texture coordinate attributes.\n */\nShadowVolumeAppearance.getPlanarTextureCoordinateAttributes = function (\n  boundingRectangle,\n  textureCoordinateRotationPoints,\n  ellipsoid,\n  projection,\n  height\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("boundingRectangle", boundingRectangle);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined(\n    "textureCoordinateRotationPoints",\n    textureCoordinateRotationPoints\n  );\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("ellipsoid", ellipsoid);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("projection", projection);\n  //>>includeEnd(\'debug\');\n\n  var corner = cornerScratch;\n  var eastward = eastwardScratch;\n  var northward = northwardScratch;\n  computeRectangleBounds(\n    boundingRectangle,\n    ellipsoid,\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(height, 0.0),\n    corner,\n    eastward,\n    northward\n  );\n\n  var attributes = {};\n  addTextureCoordinateRotationAttributes(\n    attributes,\n    textureCoordinateRotationPoints\n  );\n\n  var encoded = _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].fromCartesian */ .Z.fromCartesian(corner, encodeScratch);\n\n  attributes.southWest_HIGH = new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 3,\n    normalize: false,\n    value: _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].pack */ .Z.pack(encoded.high, [0, 0, 0]),\n  });\n  attributes.southWest_LOW = new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 3,\n    normalize: false,\n    value: _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].pack */ .Z.pack(encoded.low, [0, 0, 0]),\n  });\n  attributes.eastward = new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 3,\n    normalize: false,\n    value: _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].pack */ .Z.pack(eastward, [0, 0, 0]),\n  });\n  attributes.northward = new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n    componentsPerAttribute: 3,\n    normalize: false,\n    value: _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].pack */ .Z.pack(northward, [0, 0, 0]),\n  });\n\n  add2DTextureCoordinateAttributes(boundingRectangle, projection, attributes);\n  return attributes;\n};\n\nvar spherePointScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nfunction latLongToSpherical(latitude, longitude, ellipsoid, result) {\n  var cartographic = cartographicScratch;\n  cartographic.latitude = latitude;\n  cartographic.longitude = longitude;\n  cartographic.height = 0.0;\n\n  var spherePoint = _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].toCartesian */ .Z.toCartesian(\n    cartographic,\n    ellipsoid,\n    spherePointScratch\n  );\n\n  // Project into plane with vertical for latitude\n  var magXY = Math.sqrt(\n    spherePoint.x * spherePoint.x + spherePoint.y * spherePoint.y\n  );\n\n  // Use fastApproximateAtan2 for alignment with shader\n  var sphereLatitude = _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].fastApproximateAtan2 */ .Z.fastApproximateAtan2(magXY, spherePoint.z);\n  var sphereLongitude = _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].fastApproximateAtan2 */ .Z.fastApproximateAtan2(\n    spherePoint.x,\n    spherePoint.y\n  );\n\n  result.x = sphereLatitude;\n  result.y = sphereLongitude;\n\n  return result;\n}\n\nvar sphericalScratch = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n/**\n * Gets an attributes object containing:\n * - the southwest corner of a rectangular area in spherical coordinates, as well as the inverse of the latitude/longitude range.\n *   These are computed using the same atan2 approximation used in the shader.\n * - 1 texture coordinate rotation GeometryInstanceAttributes\n * - 2 GeometryInstanceAttributes used to compute high-precision points in 2D and Columbus View.\n *   These points are used to compute eye-space planes like above.\n *\n * Used when computing texture coordinates for large-area ClassificationPrimitives with materials or\n * multiple non-overlapping instances.\n * @see ShadowVolumeAppearance\n * @private\n *\n * @param {Rectangle} boundingRectangle Rectangle object that the spherical extents will approximately bound\n * @param {Number[]} textureCoordinateRotationPoints Points in the computed texture coordinate system for remapping texture coordinates\n * @param {Ellipsoid} ellipsoid Ellipsoid for converting Rectangle points to world coordinates\n * @param {MapProjection} projection The MapProjection used for 2D and Columbus View.\n * @returns {Object} An attributes dictionary containing spherical texture coordinate attributes.\n */\nShadowVolumeAppearance.getSphericalExtentGeometryInstanceAttributes = function (\n  boundingRectangle,\n  textureCoordinateRotationPoints,\n  ellipsoid,\n  projection\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("boundingRectangle", boundingRectangle);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined(\n    "textureCoordinateRotationPoints",\n    textureCoordinateRotationPoints\n  );\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("ellipsoid", ellipsoid);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("projection", projection);\n  //>>includeEnd(\'debug\');\n\n  // rectangle cartographic coords !== spherical because it\'s on an ellipsoid\n  var southWestExtents = latLongToSpherical(\n    boundingRectangle.south,\n    boundingRectangle.west,\n    ellipsoid,\n    sphericalScratch\n  );\n\n  var south = southWestExtents.x;\n  var west = southWestExtents.y;\n\n  var northEastExtents = latLongToSpherical(\n    boundingRectangle.north,\n    boundingRectangle.east,\n    ellipsoid,\n    sphericalScratch\n  );\n  var north = northEastExtents.x;\n  var east = northEastExtents.y;\n\n  // If the bounding rectangle crosses the IDL, rotate the spherical extents so the cross no longer happens.\n  // This rotation must happen in the shader too.\n  var rotationRadians = 0.0;\n  if (west > east) {\n    rotationRadians = _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PI */ .Z.PI - west;\n    west = -_Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PI */ .Z.PI;\n    east += rotationRadians;\n  }\n\n  // Slightly pad extents to avoid floating point error when fragment culling at edges.\n  south -= _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON5 */ .Z.EPSILON5;\n  west -= _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON5 */ .Z.EPSILON5;\n  north += _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON5 */ .Z.EPSILON5;\n  east += _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EPSILON5 */ .Z.EPSILON5;\n\n  var longitudeRangeInverse = 1.0 / (east - west);\n  var latitudeRangeInverse = 1.0 / (north - south);\n\n  var attributes = {\n    sphericalExtents: new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 4,\n      normalize: false,\n      value: [south, west, latitudeRangeInverse, longitudeRangeInverse],\n    }),\n    longitudeRotation: new _Core_GeometryInstanceAttribute_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 1,\n      normalize: false,\n      value: [rotationRadians],\n    }),\n  };\n\n  addTextureCoordinateRotationAttributes(\n    attributes,\n    textureCoordinateRotationPoints\n  );\n  add2DTextureCoordinateAttributes(boundingRectangle, projection, attributes);\n  return attributes;\n};\n\nShadowVolumeAppearance.hasAttributesForTextureCoordinatePlanes = function (\n  attributes\n) {\n  return (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.southWest_HIGH) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.southWest_LOW) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.northward) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.eastward) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.planes2D_HIGH) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.planes2D_LOW) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.uMaxVmax) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.uvMinAndExtents)\n  );\n};\n\nShadowVolumeAppearance.hasAttributesForSphericalExtents = function (\n  attributes\n) {\n  return (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.sphericalExtents) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.longitudeRotation) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.planes2D_HIGH) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.planes2D_LOW) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.uMaxVmax) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(attributes.uvMinAndExtents)\n  );\n};\n\nfunction shouldUseSpherical(rectangle) {\n  return (\n    Math.max(rectangle.width, rectangle.height) >\n    ShadowVolumeAppearance.MAX_WIDTH_FOR_PLANAR_EXTENTS\n  );\n}\n\n/**\n * Computes whether the given rectangle is wide enough that texture coordinates\n * over its area should be computed using spherical extents instead of distance to planes.\n *\n * @param {Rectangle} rectangle A rectangle\n * @private\n */\nShadowVolumeAppearance.shouldUseSphericalCoordinates = function (rectangle) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("rectangle", rectangle);\n  //>>includeEnd(\'debug\');\n\n  return shouldUseSpherical(rectangle);\n};\n\n/**\n * Texture coordinates for ground primitives are computed either using spherical coordinates for large areas or\n * using distance from planes for small areas.\n *\n * @type {Number}\n * @constant\n * @private\n */\nShadowVolumeAppearance.MAX_WIDTH_FOR_PLANAR_EXTENTS = _Core_Math_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].toRadians */ .Z.toRadians(1.0);\n/* harmony default export */ __webpack_exports__["Z"] = (ShadowVolumeAppearance);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///88472\n')},57018:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Credit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52975);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14459);\n/* harmony import */ var _Core_GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(71351);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(96190);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(68985);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9407);\n/* harmony import */ var _Core_TileProviderError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(9121);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(13222);\n/* harmony import */ var _ImageryProvider_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(95451);\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {Object} SingleTileImageryProvider.ConstructorOptions\n *\n * Initialization options for the SingleTileImageryProvider constructor\n *\n * @property {Resource|String} url The url for the tile.\n * @property {Rectangle} [rectangle=Rectangle.MAX_VALUE] The rectangle, in radians, covered by the image.\n * @property {Credit|String} [credit] A credit for the data source, which is displayed on the canvas.\n * @property {Ellipsoid} [ellipsoid] The ellipsoid.  If not specified, the WGS84 ellipsoid is used.\n */\n\n/**\n * Provides a single, top-level imagery tile.  The single image is assumed to use a\n * {@link GeographicTilingScheme}.\n *\n * @alias SingleTileImageryProvider\n * @constructor\n *\n * @param {SingleTileImageryProvider.ConstructorOptions} options Object describing initialization options\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see OpenStreetMapImageryProvider\n * @see TileMapServiceImageryProvider\n * @see WebMapServiceImageryProvider\n * @see WebMapTileServiceImageryProvider\n * @see UrlTemplateImageryProvider\n */\nfunction SingleTileImageryProvider(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(options.url)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("options.url is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  /**\n   * The default alpha blending value of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the night side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultNightAlpha = undefined;\n\n  /**\n   * The default alpha blending value on the day side of the globe of this provider, with 0.0 representing fully transparent and\n   * 1.0 representing fully opaque.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultDayAlpha = undefined;\n\n  /**\n   * The default brightness of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0\n   * makes the imagery darker while greater than 1.0 makes it brighter.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultBrightness = undefined;\n\n  /**\n   * The default contrast of this provider.  1.0 uses the unmodified imagery color.  Less than 1.0 reduces\n   * the contrast while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultContrast = undefined;\n\n  /**\n   * The default hue of this provider in radians. 0.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultHue = undefined;\n\n  /**\n   * The default saturation of this provider. 1.0 uses the unmodified imagery color. Less than 1.0 reduces the\n   * saturation while greater than 1.0 increases it.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultSaturation = undefined;\n\n  /**\n   * The default gamma correction to apply to this provider.  1.0 uses the unmodified imagery color.\n   *\n   * @type {Number|undefined}\n   * @default undefined\n   */\n  this.defaultGamma = undefined;\n\n  /**\n   * The default texture minification filter to apply to this provider.\n   *\n   * @type {TextureMinificationFilter}\n   * @default undefined\n   */\n  this.defaultMinificationFilter = undefined;\n\n  /**\n   * The default texture magnification filter to apply to this provider.\n   *\n   * @type {TextureMagnificationFilter}\n   * @default undefined\n   */\n  this.defaultMagnificationFilter = undefined;\n\n  var resource = _Core_Resource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].createIfNeeded */ .Z.createIfNeeded(options.url);\n\n  var rectangle = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.rectangle, _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].MAX_VALUE */ .Z.MAX_VALUE);\n  var tilingScheme = new _Core_GeographicTilingScheme_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n    rectangle: rectangle,\n    numberOfLevelZeroTilesX: 1,\n    numberOfLevelZeroTilesY: 1,\n    ellipsoid: options.ellipsoid,\n  });\n  this._tilingScheme = tilingScheme;\n  this._resource = resource;\n  this._image = undefined;\n  this._texture = undefined;\n  this._tileWidth = 0;\n  this._tileHeight = 0;\n\n  this._errorEvent = new _Core_Event_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].defer */ .Z.defer();\n\n  var credit = options.credit;\n  if (typeof credit === "string") {\n    credit = new _Core_Credit_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(credit);\n  }\n  this._credit = credit;\n\n  var that = this;\n  var error;\n\n  function success(image) {\n    that._image = image;\n    that._tileWidth = image.width;\n    that._tileHeight = image.height;\n    that._ready = true;\n    that._readyPromise.resolve(true);\n    _Core_TileProviderError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].handleSuccess */ .Z.handleSuccess(that._errorEvent);\n  }\n\n  function failure(e) {\n    var message = "Failed to load image " + resource.url + ".";\n    error = _Core_TileProviderError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].handleError */ .Z.handleError(\n      error,\n      that,\n      that._errorEvent,\n      message,\n      0,\n      0,\n      0,\n      doRequest,\n      e\n    );\n    that._readyPromise.reject(new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(message));\n  }\n\n  function doRequest() {\n    _ImageryProvider_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].loadImage */ .Z.loadImage(null, resource).then(success).otherwise(failure);\n  }\n\n  doRequest();\n}\n\nObject.defineProperties(SingleTileImageryProvider.prototype, {\n  /**\n   * Gets the URL of the single, top-level imagery tile.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {String}\n   * @readonly\n   */\n  url: {\n    get: function () {\n      return this._resource.url;\n    },\n  },\n\n  /**\n   * Gets the proxy used by this provider.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Proxy}\n   * @readonly\n   */\n  proxy: {\n    get: function () {\n      return this._resource.proxy;\n    },\n  },\n\n  /**\n   * Gets the width of each tile, in pixels. This function should\n   * not be called before {@link SingleTileImageryProvider#ready} returns true.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  tileWidth: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this._ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n          "tileWidth must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      return this._tileWidth;\n    },\n  },\n\n  /**\n   * Gets the height of each tile, in pixels.  This function should\n   * not be called before {@link SingleTileImageryProvider#ready} returns true.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  tileHeight: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this._ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n          "tileHeight must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      return this._tileHeight;\n    },\n  },\n\n  /**\n   * Gets the maximum level-of-detail that can be requested.  This function should\n   * not be called before {@link SingleTileImageryProvider#ready} returns true.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Number|undefined}\n   * @readonly\n   */\n  maximumLevel: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this._ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n          "maximumLevel must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      return 0;\n    },\n  },\n\n  /**\n   * Gets the minimum level-of-detail that can be requested.  This function should\n   * not be called before {@link SingleTileImageryProvider#ready} returns true.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Number}\n   * @readonly\n   */\n  minimumLevel: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this._ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n          "minimumLevel must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      return 0;\n    },\n  },\n\n  /**\n   * Gets the tiling scheme used by this provider.  This function should\n   * not be called before {@link SingleTileImageryProvider#ready} returns true.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {TilingScheme}\n   * @readonly\n   */\n  tilingScheme: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this._ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n          "tilingScheme must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      return this._tilingScheme;\n    },\n  },\n\n  /**\n   * Gets the rectangle, in radians, of the imagery provided by this instance.  This function should\n   * not be called before {@link SingleTileImageryProvider#ready} returns true.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Rectangle}\n   * @readonly\n   */\n  rectangle: {\n    get: function () {\n      return this._tilingScheme.rectangle;\n    },\n  },\n\n  /**\n   * Gets the tile discard policy.  If not undefined, the discard policy is responsible\n   * for filtering out "missing" tiles via its shouldDiscardImage function.  If this function\n   * returns undefined, no tiles are filtered.  This function should\n   * not be called before {@link SingleTileImageryProvider#ready} returns true.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {TileDiscardPolicy}\n   * @readonly\n   */\n  tileDiscardPolicy: {\n    get: function () {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!this._ready) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n          "tileDiscardPolicy must not be called before the imagery provider is ready."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      return undefined;\n    },\n  },\n\n  /**\n   * Gets an event that is raised when the imagery provider encounters an asynchronous error.  By subscribing\n   * to the event, you will be notified of the error and can potentially recover from it.  Event listeners\n   * are passed an instance of {@link TileProviderError}.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Event}\n   * @readonly\n   */\n  errorEvent: {\n    get: function () {\n      return this._errorEvent;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the provider is ready for use.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves to true when the provider is ready for use.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Promise.<Boolean>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n\n  /**\n   * Gets the credit to display when this imagery provider is active.  Typically this is used to credit\n   * the source of the imagery.  This function should not be called before {@link SingleTileImageryProvider#ready} returns true.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Credit}\n   * @readonly\n   */\n  credit: {\n    get: function () {\n      return this._credit;\n    },\n  },\n\n  /**\n   * Gets a value indicating whether or not the images provided by this imagery provider\n   * include an alpha channel.  If this property is false, an alpha channel, if present, will\n   * be ignored.  If this property is true, any images without an alpha channel will be treated\n   * as if their alpha is 1.0 everywhere.  When this property is false, memory usage\n   * and texture upload time are reduced.\n   * @memberof SingleTileImageryProvider.prototype\n   * @type {Boolean}\n   * @readonly\n   */\n  hasAlphaChannel: {\n    get: function () {\n      return true;\n    },\n  },\n});\n\n/**\n * Gets the credits to be displayed when a given tile is displayed.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level;\n * @returns {Credit[]} The credits to be displayed when the tile is displayed.\n *\n * @exception {DeveloperError} <code>getTileCredits</code> must not be called before the imagery provider is ready.\n */\nSingleTileImageryProvider.prototype.getTileCredits = function (x, y, level) {\n  return undefined;\n};\n\n/**\n * Requests the image for a given tile.  This function should\n * not be called before {@link SingleTileImageryProvider#ready} returns true.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Request} [request] The request object. Intended for internal use only.\n * @returns {Promise.<HTMLImageElement|HTMLCanvasElement>|undefined} A promise for the image that will resolve when the image is available, or\n *          undefined if there are too many active requests to the server, and the request\n *          should be retried later.  The resolved image may be either an\n *          Image or a Canvas DOM object.\n *\n * @exception {DeveloperError} <code>requestImage</code> must not be called before the imagery provider is ready.\n */\nSingleTileImageryProvider.prototype.requestImage = function (\n  x,\n  y,\n  level,\n  request\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!this._ready) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      "requestImage must not be called before the imagery provider is ready."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  return this._image;\n};\n\n/**\n * Picking features is not currently supported by this imagery provider, so this function simply returns\n * undefined.\n *\n * @param {Number} x The tile X coordinate.\n * @param {Number} y The tile Y coordinate.\n * @param {Number} level The tile level.\n * @param {Number} longitude The longitude at which to pick features.\n * @param {Number} latitude  The latitude at which to pick features.\n * @return {Promise.<ImageryLayerFeatureInfo[]>|undefined} A promise for the picked features that will resolve when the asynchronous\n *                   picking completes.  The resolved value is an array of {@link ImageryLayerFeatureInfo}\n *                   instances.  The array may be empty if no features are found at the given location.\n *                   It may also be undefined if picking is not supported.\n */\nSingleTileImageryProvider.prototype.pickFeatures = function (\n  x,\n  y,\n  level,\n  longitude,\n  latitude\n) {\n  return undefined;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (SingleTileImageryProvider);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///57018\n')},80763:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86511);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50491);\n/* harmony import */ var _Core_EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(64727);\n/* harmony import */ var _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(57552);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(72248);\n/* harmony import */ var _Core_VertexFormat_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(67252);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(46588);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(18192);\n/* harmony import */ var _Shaders_SkyAtmosphereCommon_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(66629);\n/* harmony import */ var _Shaders_SkyAtmosphereFS_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(79908);\n/* harmony import */ var _Shaders_SkyAtmosphereVS_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(4399);\n/* harmony import */ var _Axis_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(66577);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(13633);\n/* harmony import */ var _CullFace_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(71593);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(89917);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * An atmosphere drawn around the limb of the provided ellipsoid.  Based on\n * {@link https://developer.nvidia.com/gpugems/GPUGems2/gpugems2_chapter16.html|Accurate Atmospheric Scattering}\n * in GPU Gems 2.\n * <p>\n * This is only supported in 3D. Atmosphere is faded out when morphing to 2D or Columbus view.\n * </p>\n *\n * @alias SkyAtmosphere\n * @constructor\n *\n * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid that the atmosphere is drawn around.\n *\n * @example\n * scene.skyAtmosphere = new Cesium.SkyAtmosphere();\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Sky%20Atmosphere.html|Sky atmosphere demo in Sandcastle}\n *\n * @see Scene.skyAtmosphere\n */\nfunction SkyAtmosphere(ellipsoid) {\n  ellipsoid = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(ellipsoid, _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].WGS84 */ .Z.WGS84);\n\n  /**\n   * Determines if the atmosphere is shown.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.show = true;\n\n  /**\n   * Compute atmosphere per-fragment instead of per-vertex.\n   * This produces better looking atmosphere with a slight performance penalty.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.perFragmentAtmosphere = false;\n\n  this._ellipsoid = ellipsoid;\n\n  var outerEllipsoidScale = 1.025;\n  var scaleVector = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    ellipsoid.radii,\n    outerEllipsoidScale,\n    new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z()\n  );\n  this._scaleMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].fromScale */ .Z.fromScale(scaleVector);\n  this._modelMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\n\n  this._command = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    owner: this,\n    modelMatrix: this._modelMatrix,\n  });\n  this._spSkyFromSpace = undefined;\n  this._spSkyFromAtmosphere = undefined;\n\n  this._flags = undefined;\n\n  /**\n   * The hue shift to apply to the atmosphere. Defaults to 0.0 (no shift).\n   * A hue shift of 1.0 indicates a complete rotation of the hues available.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.hueShift = 0.0;\n\n  /**\n   * The saturation shift to apply to the atmosphere. Defaults to 0.0 (no shift).\n   * A saturation shift of -1.0 is monochrome.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.saturationShift = 0.0;\n\n  /**\n   * The brightness shift to apply to the atmosphere. Defaults to 0.0 (no shift).\n   * A brightness shift of -1.0 is complete darkness, which will let space show through.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.brightnessShift = 0.0;\n\n  this._hueSaturationBrightness = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n  // outer radius, inner radius, dynamic atmosphere color flag\n  var radiiAndDynamicAtmosphereColor = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n  radiiAndDynamicAtmosphereColor.x =\n    ellipsoid.maximumRadius * outerEllipsoidScale;\n  radiiAndDynamicAtmosphereColor.y = ellipsoid.maximumRadius;\n\n  // Toggles whether the sun position is used. 0 treats the sun as always directly overhead.\n  radiiAndDynamicAtmosphereColor.z = 0;\n\n  this._radiiAndDynamicAtmosphereColor = radiiAndDynamicAtmosphereColor;\n\n  var that = this;\n\n  this._command.uniformMap = {\n    u_radiiAndDynamicAtmosphereColor: function () {\n      return that._radiiAndDynamicAtmosphereColor;\n    },\n    u_hsbShift: function () {\n      that._hueSaturationBrightness.x = that.hueShift;\n      that._hueSaturationBrightness.y = that.saturationShift;\n      that._hueSaturationBrightness.z = that.brightnessShift;\n      return that._hueSaturationBrightness;\n    },\n  };\n}\n\nObject.defineProperties(SkyAtmosphere.prototype, {\n  /**\n   * Gets the ellipsoid the atmosphere is drawn around.\n   * @memberof SkyAtmosphere.prototype\n   *\n   * @type {Ellipsoid}\n   * @readonly\n   */\n  ellipsoid: {\n    get: function () {\n      return this._ellipsoid;\n    },\n  },\n});\n\n/**\n * @private\n */\nSkyAtmosphere.prototype.setDynamicAtmosphereColor = function (\n  enableLighting,\n  useSunDirection\n) {\n  var lightEnum = enableLighting ? (useSunDirection ? 2.0 : 1.0) : 0.0;\n  this._radiiAndDynamicAtmosphereColor.z = lightEnum;\n};\n\nvar scratchModelMatrix = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\n\n/**\n * @private\n */\nSkyAtmosphere.prototype.update = function (frameState, globe) {\n  if (!this.show) {\n    return undefined;\n  }\n\n  var mode = frameState.mode;\n  if (mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].SCENE3D */ .Z.SCENE3D && mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].MORPHING */ .Z.MORPHING) {\n    return undefined;\n  }\n\n  // The atmosphere is only rendered during the render pass; it is not pickable, it doesn\'t cast shadows, etc.\n  if (!frameState.passes.render) {\n    return undefined;\n  }\n\n  // Align the ellipsoid geometry so it always faces the same direction as the\n  // camera to reduce artifacts when rendering atmosphere per-vertex\n  var rotationMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].fromRotationTranslation */ .Z.fromRotationTranslation(\n    frameState.context.uniformState.inverseViewRotation,\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO,\n    scratchModelMatrix\n  );\n  var rotationOffsetMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(\n    rotationMatrix,\n    _Axis_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].Y_UP_TO_Z_UP */ .Z.Y_UP_TO_Z_UP,\n    scratchModelMatrix\n  );\n  var modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].multiply */ .Z.multiply(\n    this._scaleMatrix,\n    rotationOffsetMatrix,\n    scratchModelMatrix\n  );\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(modelMatrix, this._modelMatrix);\n\n  var context = frameState.context;\n\n  var colorCorrect = hasColorCorrection(this);\n  var translucent = frameState.globeTranslucencyState.translucent;\n  var perFragmentAtmosphere =\n    this.perFragmentAtmosphere || translucent || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(globe) || !globe.show;\n\n  var command = this._command;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(command.vertexArray)) {\n    var geometry = _Core_EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].createGeometry */ .Z.createGeometry(\n      new _Core_EllipsoidGeometry_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n        radii: new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(1.0, 1.0, 1.0),\n        slicePartitions: 256,\n        stackPartitions: 256,\n        vertexFormat: _Core_VertexFormat_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].POSITION_ONLY */ .Z.POSITION_ONLY,\n      })\n    );\n    command.vertexArray = _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].fromGeometry */ .Z.fromGeometry({\n      context: context,\n      geometry: geometry,\n      attributeLocations: _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].createAttributeLocations */ .Z.createAttributeLocations(geometry),\n      bufferUsage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    command.renderState = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].fromCache */ .Z.fromCache({\n      cull: {\n        enabled: true,\n        face: _CullFace_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].FRONT */ .Z.FRONT,\n      },\n      blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND,\n      depthMask: false,\n    });\n  }\n\n  var flags = colorCorrect | (perFragmentAtmosphere << 2) | (translucent << 3);\n\n  if (flags !== this._flags) {\n    this._flags = flags;\n\n    var defines = [];\n\n    if (colorCorrect) {\n      defines.push("COLOR_CORRECT");\n    }\n\n    if (perFragmentAtmosphere) {\n      defines.push("PER_FRAGMENT_ATMOSPHERE");\n    }\n\n    if (translucent) {\n      defines.push("GLOBE_TRANSLUCENT");\n    }\n\n    var vs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z({\n      defines: defines.concat("SKY_FROM_SPACE"),\n      sources: [_Shaders_SkyAtmosphereCommon_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z, _Shaders_SkyAtmosphereVS_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z],\n    });\n\n    var fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z({\n      defines: defines.concat("SKY_FROM_SPACE"),\n      sources: [_Shaders_SkyAtmosphereCommon_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z, _Shaders_SkyAtmosphereFS_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z],\n    });\n\n    this._spSkyFromSpace = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCache */ .Z.fromCache({\n      context: context,\n      vertexShaderSource: vs,\n      fragmentShaderSource: fs,\n    });\n\n    vs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z({\n      defines: defines.concat("SKY_FROM_ATMOSPHERE"),\n      sources: [_Shaders_SkyAtmosphereCommon_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z, _Shaders_SkyAtmosphereVS_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z],\n    });\n\n    fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z({\n      defines: defines.concat("SKY_FROM_ATMOSPHERE"),\n      sources: [_Shaders_SkyAtmosphereCommon_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z, _Shaders_SkyAtmosphereFS_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z],\n    });\n\n    this._spSkyFromAtmosphere = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCache */ .Z.fromCache({\n      context: context,\n      vertexShaderSource: vs,\n      fragmentShaderSource: fs,\n    });\n  }\n\n  var cameraPosition = frameState.camera.positionWC;\n  var cameraHeight = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(cameraPosition);\n\n  if (cameraHeight > this._radiiAndDynamicAtmosphereColor.x) {\n    // Camera in space\n    command.shaderProgram = this._spSkyFromSpace;\n  } else {\n    // Camera in atmosphere\n    command.shaderProgram = this._spSkyFromAtmosphere;\n  }\n\n  return command;\n};\n\nfunction hasColorCorrection(skyAtmosphere) {\n  return !(\n    _Core_Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n      skyAtmosphere.hueShift,\n      0.0,\n      _Core_Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].EPSILON7 */ .Z.EPSILON7\n    ) &&\n    _Core_Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n      skyAtmosphere.saturationShift,\n      0.0,\n      _Core_Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].EPSILON7 */ .Z.EPSILON7\n    ) &&\n    _Core_Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n      skyAtmosphere.brightnessShift,\n      0.0,\n      _Core_Math_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].EPSILON7 */ .Z.EPSILON7\n    )\n  );\n}\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see SkyAtmosphere#destroy\n */\nSkyAtmosphere.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * skyAtmosphere = skyAtmosphere && skyAtmosphere.destroy();\n *\n * @see SkyAtmosphere#isDestroyed\n */\nSkyAtmosphere.prototype.destroy = function () {\n  var command = this._command;\n  command.vertexArray = command.vertexArray && command.vertexArray.destroy();\n  this._spSkyFromSpace = this._spSkyFromSpace && this._spSkyFromSpace.destroy();\n  this._spSkyFromAtmosphere =\n    this._spSkyFromAtmosphere && this._spSkyFromAtmosphere.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (SkyAtmosphere);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODA3NjMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBK0M7QUFDSTtBQUNWO0FBQ1k7QUFDUjtBQUNnQjtBQUNGO0FBQ2xCO0FBQ0E7QUFDVTtBQUNFO0FBQ0E7QUFDQTtBQUNJO0FBQ0Y7QUFDRjtBQUNlO0FBQ1I7QUFDQTtBQUMvQjtBQUNrQjtBQUNWO0FBQ0U7O0FBRXZDO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsV0FBVztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMEVBQVksWUFBWSwrRUFBZTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxvQkFBb0Isc0dBQTJCO0FBQy9DO0FBQ0E7QUFDQSxRQUFRLG9FQUFVO0FBQ2xCO0FBQ0Esc0JBQXNCLHFGQUFpQjtBQUN2QywwQkFBMEIsaUVBQU87O0FBRWpDLHNCQUFzQiwwRUFBVztBQUNqQztBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUEsc0NBQXNDLG9FQUFVOztBQUVoRDtBQUNBLDJDQUEyQyxvRUFBVTs7QUFFckQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLGlFQUFPOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsK0VBQWlCLGFBQWEsaUZBQWtCO0FBQy9EO0FBQ0E7O0FBRUEsNkRBQTZEO0FBQzdEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUJBQXVCLGlIQUErQjtBQUN0RDtBQUNBLElBQUksOEVBQWU7QUFDbkI7QUFDQTtBQUNBLDZCQUE2QiwrR0FBOEI7QUFDM0Q7QUFDQSxJQUFJLG9GQUFpQjtBQUNyQjtBQUNBO0FBQ0Esb0JBQW9CLG1GQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNkVBQWE7O0FBRWY7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELHNFQUFPOztBQUV6RDs7QUFFQSxPQUFPLHNFQUFPO0FBQ2QsbUJBQW1CLHlHQUFnQztBQUNuRCxVQUFVLDJFQUFpQjtBQUMzQixtQkFBbUIsb0VBQVU7QUFDN0I7QUFDQTtBQUNBLHNCQUFzQixrR0FBMEI7QUFDaEQsT0FBTztBQUNQO0FBQ0EsMEJBQTBCLG9HQUF3QjtBQUNsRDtBQUNBO0FBQ0EsMEJBQTBCLDRIQUF5QztBQUNuRSxtQkFBbUIsaUdBQXVCO0FBQzFDLEtBQUs7QUFDTCwwQkFBMEIsOEZBQXFCO0FBQy9DO0FBQ0E7QUFDQSxjQUFjLDBFQUFjO0FBQzVCLE9BQU87QUFDUCxnQkFBZ0IsMkZBQXlCO0FBQ3pDO0FBQ0EsS0FBSztBQUNMOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLDJFQUFZO0FBQzdCO0FBQ0EsZ0JBQWdCLGlGQUFtQixFQUFFLDZFQUFlO0FBQ3BELEtBQUs7O0FBRUwsaUJBQWlCLDJFQUFZO0FBQzdCO0FBQ0EsZ0JBQWdCLGlGQUFtQixFQUFFLDZFQUFlO0FBQ3BELEtBQUs7O0FBRUwsMkJBQTJCLGdHQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMLGFBQWEsMkVBQVk7QUFDekI7QUFDQSxnQkFBZ0IsaUZBQW1CLEVBQUUsNkVBQWU7QUFDcEQsS0FBSzs7QUFFTCxhQUFhLDJFQUFZO0FBQ3pCO0FBQ0EsZ0JBQWdCLGlGQUFtQixFQUFFLDZFQUFlO0FBQ3BELEtBQUs7O0FBRUwsZ0NBQWdDLGdHQUF1QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxxQkFBcUIsd0ZBQW9COztBQUV6QztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksMEZBQXdCO0FBQzVCO0FBQ0E7QUFDQSxNQUFNLGdGQUFtQjtBQUN6QjtBQUNBLElBQUksMEZBQXdCO0FBQzVCO0FBQ0E7QUFDQSxNQUFNLGdGQUFtQjtBQUN6QjtBQUNBLElBQUksMEZBQXdCO0FBQzVCO0FBQ0E7QUFDQSxNQUFNLGdGQUFtQjtBQUN6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQSx3REFBd0Q7QUFDeEQsOENBQThDLHNCQUFzQjtBQUNwRTtBQUNBLGFBQWEsU0FBUyxnREFBZ0Q7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELDhDQUE4QyxzQkFBc0I7QUFDcEU7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyRUFBYTtBQUN0QjtBQUNBLHlEQUFlLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9Ta3lBdG1vc3BoZXJlLmpzPzg5NjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhcnRlc2lhbjMgZnJvbSBcIi4uL0NvcmUvQ2FydGVzaWFuMy5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBkZXN0cm95T2JqZWN0IGZyb20gXCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QuanNcIjtcbmltcG9ydCBFbGxpcHNvaWQgZnJvbSBcIi4uL0NvcmUvRWxsaXBzb2lkLmpzXCI7XG5pbXBvcnQgRWxsaXBzb2lkR2VvbWV0cnkgZnJvbSBcIi4uL0NvcmUvRWxsaXBzb2lkR2VvbWV0cnkuanNcIjtcbmltcG9ydCBHZW9tZXRyeVBpcGVsaW5lIGZyb20gXCIuLi9Db3JlL0dlb21ldHJ5UGlwZWxpbmUuanNcIjtcbmltcG9ydCBDZXNpdW1NYXRoIGZyb20gXCIuLi9Db3JlL01hdGguanNcIjtcbmltcG9ydCBNYXRyaXg0IGZyb20gXCIuLi9Db3JlL01hdHJpeDQuanNcIjtcbmltcG9ydCBWZXJ0ZXhGb3JtYXQgZnJvbSBcIi4uL0NvcmUvVmVydGV4Rm9ybWF0LmpzXCI7XG5pbXBvcnQgQnVmZmVyVXNhZ2UgZnJvbSBcIi4uL1JlbmRlcmVyL0J1ZmZlclVzYWdlLmpzXCI7XG5pbXBvcnQgRHJhd0NvbW1hbmQgZnJvbSBcIi4uL1JlbmRlcmVyL0RyYXdDb21tYW5kLmpzXCI7XG5pbXBvcnQgUmVuZGVyU3RhdGUgZnJvbSBcIi4uL1JlbmRlcmVyL1JlbmRlclN0YXRlLmpzXCI7XG5pbXBvcnQgU2hhZGVyUHJvZ3JhbSBmcm9tIFwiLi4vUmVuZGVyZXIvU2hhZGVyUHJvZ3JhbS5qc1wiO1xuaW1wb3J0IFNoYWRlclNvdXJjZSBmcm9tIFwiLi4vUmVuZGVyZXIvU2hhZGVyU291cmNlLmpzXCI7XG5pbXBvcnQgVmVydGV4QXJyYXkgZnJvbSBcIi4uL1JlbmRlcmVyL1ZlcnRleEFycmF5LmpzXCI7XG5pbXBvcnQgU2t5QXRtb3NwaGVyZUNvbW1vbiBmcm9tIFwiLi4vU2hhZGVycy9Ta3lBdG1vc3BoZXJlQ29tbW9uLmpzXCI7XG5pbXBvcnQgU2t5QXRtb3NwaGVyZUZTIGZyb20gXCIuLi9TaGFkZXJzL1NreUF0bW9zcGhlcmVGUy5qc1wiO1xuaW1wb3J0IFNreUF0bW9zcGhlcmVWUyBmcm9tIFwiLi4vU2hhZGVycy9Ta3lBdG1vc3BoZXJlVlMuanNcIjtcbmltcG9ydCBBeGlzIGZyb20gXCIuL0F4aXMuanNcIjtcbmltcG9ydCBCbGVuZGluZ1N0YXRlIGZyb20gXCIuL0JsZW5kaW5nU3RhdGUuanNcIjtcbmltcG9ydCBDdWxsRmFjZSBmcm9tIFwiLi9DdWxsRmFjZS5qc1wiO1xuaW1wb3J0IFNjZW5lTW9kZSBmcm9tIFwiLi9TY2VuZU1vZGUuanNcIjtcblxuLyoqXG4gKiBBbiBhdG1vc3BoZXJlIGRyYXduIGFyb3VuZCB0aGUgbGltYiBvZiB0aGUgcHJvdmlkZWQgZWxsaXBzb2lkLiAgQmFzZWQgb25cbiAqIHtAbGluayBodHRwczovL2RldmVsb3Blci5udmlkaWEuY29tL2dwdWdlbXMvR1BVR2VtczIvZ3B1Z2VtczJfY2hhcHRlcjE2Lmh0bWx8QWNjdXJhdGUgQXRtb3NwaGVyaWMgU2NhdHRlcmluZ31cbiAqIGluIEdQVSBHZW1zIDIuXG4gKiA8cD5cbiAqIFRoaXMgaXMgb25seSBzdXBwb3J0ZWQgaW4gM0QuIEF0bW9zcGhlcmUgaXMgZmFkZWQgb3V0IHdoZW4gbW9ycGhpbmcgdG8gMkQgb3IgQ29sdW1idXMgdmlldy5cbiAqIDwvcD5cbiAqXG4gKiBAYWxpYXMgU2t5QXRtb3NwaGVyZVxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtFbGxpcHNvaWR9IFtlbGxpcHNvaWQ9RWxsaXBzb2lkLldHUzg0XSBUaGUgZWxsaXBzb2lkIHRoYXQgdGhlIGF0bW9zcGhlcmUgaXMgZHJhd24gYXJvdW5kLlxuICpcbiAqIEBleGFtcGxlXG4gKiBzY2VuZS5za3lBdG1vc3BoZXJlID0gbmV3IENlc2l1bS5Ta3lBdG1vc3BoZXJlKCk7XG4gKlxuICogQGRlbW8ge0BsaW5rIGh0dHBzOi8vc2FuZGNhc3RsZS5jZXNpdW0uY29tL2luZGV4Lmh0bWw/c3JjPVNreSUyMEF0bW9zcGhlcmUuaHRtbHxTa3kgYXRtb3NwaGVyZSBkZW1vIGluIFNhbmRjYXN0bGV9XG4gKlxuICogQHNlZSBTY2VuZS5za3lBdG1vc3BoZXJlXG4gKi9cbmZ1bmN0aW9uIFNreUF0bW9zcGhlcmUoZWxsaXBzb2lkKSB7XG4gIGVsbGlwc29pZCA9IGRlZmF1bHRWYWx1ZShlbGxpcHNvaWQsIEVsbGlwc29pZC5XR1M4NCk7XG5cbiAgLyoqXG4gICAqIERldGVybWluZXMgaWYgdGhlIGF0bW9zcGhlcmUgaXMgc2hvd24uXG4gICAqXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVmYXVsdCB0cnVlXG4gICAqL1xuICB0aGlzLnNob3cgPSB0cnVlO1xuXG4gIC8qKlxuICAgKiBDb21wdXRlIGF0bW9zcGhlcmUgcGVyLWZyYWdtZW50IGluc3RlYWQgb2YgcGVyLXZlcnRleC5cbiAgICogVGhpcyBwcm9kdWNlcyBiZXR0ZXIgbG9va2luZyBhdG1vc3BoZXJlIHdpdGggYSBzbGlnaHQgcGVyZm9ybWFuY2UgcGVuYWx0eS5cbiAgICpcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICB0aGlzLnBlckZyYWdtZW50QXRtb3NwaGVyZSA9IGZhbHNlO1xuXG4gIHRoaXMuX2VsbGlwc29pZCA9IGVsbGlwc29pZDtcblxuICB2YXIgb3V0ZXJFbGxpcHNvaWRTY2FsZSA9IDEuMDI1O1xuICB2YXIgc2NhbGVWZWN0b3IgPSBDYXJ0ZXNpYW4zLm11bHRpcGx5QnlTY2FsYXIoXG4gICAgZWxsaXBzb2lkLnJhZGlpLFxuICAgIG91dGVyRWxsaXBzb2lkU2NhbGUsXG4gICAgbmV3IENhcnRlc2lhbjMoKVxuICApO1xuICB0aGlzLl9zY2FsZU1hdHJpeCA9IE1hdHJpeDQuZnJvbVNjYWxlKHNjYWxlVmVjdG9yKTtcbiAgdGhpcy5fbW9kZWxNYXRyaXggPSBuZXcgTWF0cml4NCgpO1xuXG4gIHRoaXMuX2NvbW1hbmQgPSBuZXcgRHJhd0NvbW1hbmQoe1xuICAgIG93bmVyOiB0aGlzLFxuICAgIG1vZGVsTWF0cml4OiB0aGlzLl9tb2RlbE1hdHJpeCxcbiAgfSk7XG4gIHRoaXMuX3NwU2t5RnJvbVNwYWNlID0gdW5kZWZpbmVkO1xuICB0aGlzLl9zcFNreUZyb21BdG1vc3BoZXJlID0gdW5kZWZpbmVkO1xuXG4gIHRoaXMuX2ZsYWdzID0gdW5kZWZpbmVkO1xuXG4gIC8qKlxuICAgKiBUaGUgaHVlIHNoaWZ0IHRvIGFwcGx5IHRvIHRoZSBhdG1vc3BoZXJlLiBEZWZhdWx0cyB0byAwLjAgKG5vIHNoaWZ0KS5cbiAgICogQSBodWUgc2hpZnQgb2YgMS4wIGluZGljYXRlcyBhIGNvbXBsZXRlIHJvdGF0aW9uIG9mIHRoZSBodWVzIGF2YWlsYWJsZS5cbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlZmF1bHQgMC4wXG4gICAqL1xuICB0aGlzLmh1ZVNoaWZ0ID0gMC4wO1xuXG4gIC8qKlxuICAgKiBUaGUgc2F0dXJhdGlvbiBzaGlmdCB0byBhcHBseSB0byB0aGUgYXRtb3NwaGVyZS4gRGVmYXVsdHMgdG8gMC4wIChubyBzaGlmdCkuXG4gICAqIEEgc2F0dXJhdGlvbiBzaGlmdCBvZiAtMS4wIGlzIG1vbm9jaHJvbWUuXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZWZhdWx0IDAuMFxuICAgKi9cbiAgdGhpcy5zYXR1cmF0aW9uU2hpZnQgPSAwLjA7XG5cbiAgLyoqXG4gICAqIFRoZSBicmlnaHRuZXNzIHNoaWZ0IHRvIGFwcGx5IHRvIHRoZSBhdG1vc3BoZXJlLiBEZWZhdWx0cyB0byAwLjAgKG5vIHNoaWZ0KS5cbiAgICogQSBicmlnaHRuZXNzIHNoaWZ0IG9mIC0xLjAgaXMgY29tcGxldGUgZGFya25lc3MsIHdoaWNoIHdpbGwgbGV0IHNwYWNlIHNob3cgdGhyb3VnaC5cbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlZmF1bHQgMC4wXG4gICAqL1xuICB0aGlzLmJyaWdodG5lc3NTaGlmdCA9IDAuMDtcblxuICB0aGlzLl9odWVTYXR1cmF0aW9uQnJpZ2h0bmVzcyA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG5cbiAgLy8gb3V0ZXIgcmFkaXVzLCBpbm5lciByYWRpdXMsIGR5bmFtaWMgYXRtb3NwaGVyZSBjb2xvciBmbGFnXG4gIHZhciByYWRpaUFuZER5bmFtaWNBdG1vc3BoZXJlQ29sb3IgPSBuZXcgQ2FydGVzaWFuMygpO1xuXG4gIHJhZGlpQW5kRHluYW1pY0F0bW9zcGhlcmVDb2xvci54ID1cbiAgICBlbGxpcHNvaWQubWF4aW11bVJhZGl1cyAqIG91dGVyRWxsaXBzb2lkU2NhbGU7XG4gIHJhZGlpQW5kRHluYW1pY0F0bW9zcGhlcmVDb2xvci55ID0gZWxsaXBzb2lkLm1heGltdW1SYWRpdXM7XG5cbiAgLy8gVG9nZ2xlcyB3aGV0aGVyIHRoZSBzdW4gcG9zaXRpb24gaXMgdXNlZC4gMCB0cmVhdHMgdGhlIHN1biBhcyBhbHdheXMgZGlyZWN0bHkgb3ZlcmhlYWQuXG4gIHJhZGlpQW5kRHluYW1pY0F0bW9zcGhlcmVDb2xvci56ID0gMDtcblxuICB0aGlzLl9yYWRpaUFuZER5bmFtaWNBdG1vc3BoZXJlQ29sb3IgPSByYWRpaUFuZER5bmFtaWNBdG1vc3BoZXJlQ29sb3I7XG5cbiAgdmFyIHRoYXQgPSB0aGlzO1xuXG4gIHRoaXMuX2NvbW1hbmQudW5pZm9ybU1hcCA9IHtcbiAgICB1X3JhZGlpQW5kRHluYW1pY0F0bW9zcGhlcmVDb2xvcjogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoYXQuX3JhZGlpQW5kRHluYW1pY0F0bW9zcGhlcmVDb2xvcjtcbiAgICB9LFxuICAgIHVfaHNiU2hpZnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoYXQuX2h1ZVNhdHVyYXRpb25CcmlnaHRuZXNzLnggPSB0aGF0Lmh1ZVNoaWZ0O1xuICAgICAgdGhhdC5faHVlU2F0dXJhdGlvbkJyaWdodG5lc3MueSA9IHRoYXQuc2F0dXJhdGlvblNoaWZ0O1xuICAgICAgdGhhdC5faHVlU2F0dXJhdGlvbkJyaWdodG5lc3MueiA9IHRoYXQuYnJpZ2h0bmVzc1NoaWZ0O1xuICAgICAgcmV0dXJuIHRoYXQuX2h1ZVNhdHVyYXRpb25CcmlnaHRuZXNzO1xuICAgIH0sXG4gIH07XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFNreUF0bW9zcGhlcmUucHJvdG90eXBlLCB7XG4gIC8qKlxuICAgKiBHZXRzIHRoZSBlbGxpcHNvaWQgdGhlIGF0bW9zcGhlcmUgaXMgZHJhd24gYXJvdW5kLlxuICAgKiBAbWVtYmVyb2YgU2t5QXRtb3NwaGVyZS5wcm90b3R5cGVcbiAgICpcbiAgICogQHR5cGUge0VsbGlwc29pZH1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICBlbGxpcHNvaWQ6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9lbGxpcHNvaWQ7XG4gICAgfSxcbiAgfSxcbn0pO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cblNreUF0bW9zcGhlcmUucHJvdG90eXBlLnNldER5bmFtaWNBdG1vc3BoZXJlQ29sb3IgPSBmdW5jdGlvbiAoXG4gIGVuYWJsZUxpZ2h0aW5nLFxuICB1c2VTdW5EaXJlY3Rpb25cbikge1xuICB2YXIgbGlnaHRFbnVtID0gZW5hYmxlTGlnaHRpbmcgPyAodXNlU3VuRGlyZWN0aW9uID8gMi4wIDogMS4wKSA6IDAuMDtcbiAgdGhpcy5fcmFkaWlBbmREeW5hbWljQXRtb3NwaGVyZUNvbG9yLnogPSBsaWdodEVudW07XG59O1xuXG52YXIgc2NyYXRjaE1vZGVsTWF0cml4ID0gbmV3IE1hdHJpeDQoKTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5Ta3lBdG1vc3BoZXJlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoZnJhbWVTdGF0ZSwgZ2xvYmUpIHtcbiAgaWYgKCF0aGlzLnNob3cpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgdmFyIG1vZGUgPSBmcmFtZVN0YXRlLm1vZGU7XG4gIGlmIChtb2RlICE9PSBTY2VuZU1vZGUuU0NFTkUzRCAmJiBtb2RlICE9PSBTY2VuZU1vZGUuTU9SUEhJTkcpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLy8gVGhlIGF0bW9zcGhlcmUgaXMgb25seSByZW5kZXJlZCBkdXJpbmcgdGhlIHJlbmRlciBwYXNzOyBpdCBpcyBub3QgcGlja2FibGUsIGl0IGRvZXNuJ3QgY2FzdCBzaGFkb3dzLCBldGMuXG4gIGlmICghZnJhbWVTdGF0ZS5wYXNzZXMucmVuZGVyKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8vIEFsaWduIHRoZSBlbGxpcHNvaWQgZ2VvbWV0cnkgc28gaXQgYWx3YXlzIGZhY2VzIHRoZSBzYW1lIGRpcmVjdGlvbiBhcyB0aGVcbiAgLy8gY2FtZXJhIHRvIHJlZHVjZSBhcnRpZmFjdHMgd2hlbiByZW5kZXJpbmcgYXRtb3NwaGVyZSBwZXItdmVydGV4XG4gIHZhciByb3RhdGlvbk1hdHJpeCA9IE1hdHJpeDQuZnJvbVJvdGF0aW9uVHJhbnNsYXRpb24oXG4gICAgZnJhbWVTdGF0ZS5jb250ZXh0LnVuaWZvcm1TdGF0ZS5pbnZlcnNlVmlld1JvdGF0aW9uLFxuICAgIENhcnRlc2lhbjMuWkVSTyxcbiAgICBzY3JhdGNoTW9kZWxNYXRyaXhcbiAgKTtcbiAgdmFyIHJvdGF0aW9uT2Zmc2V0TWF0cml4ID0gTWF0cml4NC5tdWx0aXBseVRyYW5zZm9ybWF0aW9uKFxuICAgIHJvdGF0aW9uTWF0cml4LFxuICAgIEF4aXMuWV9VUF9UT19aX1VQLFxuICAgIHNjcmF0Y2hNb2RlbE1hdHJpeFxuICApO1xuICB2YXIgbW9kZWxNYXRyaXggPSBNYXRyaXg0Lm11bHRpcGx5KFxuICAgIHRoaXMuX3NjYWxlTWF0cml4LFxuICAgIHJvdGF0aW9uT2Zmc2V0TWF0cml4LFxuICAgIHNjcmF0Y2hNb2RlbE1hdHJpeFxuICApO1xuICBNYXRyaXg0LmNsb25lKG1vZGVsTWF0cml4LCB0aGlzLl9tb2RlbE1hdHJpeCk7XG5cbiAgdmFyIGNvbnRleHQgPSBmcmFtZVN0YXRlLmNvbnRleHQ7XG5cbiAgdmFyIGNvbG9yQ29ycmVjdCA9IGhhc0NvbG9yQ29ycmVjdGlvbih0aGlzKTtcbiAgdmFyIHRyYW5zbHVjZW50ID0gZnJhbWVTdGF0ZS5nbG9iZVRyYW5zbHVjZW5jeVN0YXRlLnRyYW5zbHVjZW50O1xuICB2YXIgcGVyRnJhZ21lbnRBdG1vc3BoZXJlID1cbiAgICB0aGlzLnBlckZyYWdtZW50QXRtb3NwaGVyZSB8fCB0cmFuc2x1Y2VudCB8fCAhZGVmaW5lZChnbG9iZSkgfHwgIWdsb2JlLnNob3c7XG5cbiAgdmFyIGNvbW1hbmQgPSB0aGlzLl9jb21tYW5kO1xuXG4gIGlmICghZGVmaW5lZChjb21tYW5kLnZlcnRleEFycmF5KSkge1xuICAgIHZhciBnZW9tZXRyeSA9IEVsbGlwc29pZEdlb21ldHJ5LmNyZWF0ZUdlb21ldHJ5KFxuICAgICAgbmV3IEVsbGlwc29pZEdlb21ldHJ5KHtcbiAgICAgICAgcmFkaWk6IG5ldyBDYXJ0ZXNpYW4zKDEuMCwgMS4wLCAxLjApLFxuICAgICAgICBzbGljZVBhcnRpdGlvbnM6IDI1NixcbiAgICAgICAgc3RhY2tQYXJ0aXRpb25zOiAyNTYsXG4gICAgICAgIHZlcnRleEZvcm1hdDogVmVydGV4Rm9ybWF0LlBPU0lUSU9OX09OTFksXG4gICAgICB9KVxuICAgICk7XG4gICAgY29tbWFuZC52ZXJ0ZXhBcnJheSA9IFZlcnRleEFycmF5LmZyb21HZW9tZXRyeSh7XG4gICAgICBjb250ZXh0OiBjb250ZXh0LFxuICAgICAgZ2VvbWV0cnk6IGdlb21ldHJ5LFxuICAgICAgYXR0cmlidXRlTG9jYXRpb25zOiBHZW9tZXRyeVBpcGVsaW5lLmNyZWF0ZUF0dHJpYnV0ZUxvY2F0aW9ucyhnZW9tZXRyeSksXG4gICAgICBidWZmZXJVc2FnZTogQnVmZmVyVXNhZ2UuU1RBVElDX0RSQVcsXG4gICAgfSk7XG4gICAgY29tbWFuZC5yZW5kZXJTdGF0ZSA9IFJlbmRlclN0YXRlLmZyb21DYWNoZSh7XG4gICAgICBjdWxsOiB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIGZhY2U6IEN1bGxGYWNlLkZST05ULFxuICAgICAgfSxcbiAgICAgIGJsZW5kaW5nOiBCbGVuZGluZ1N0YXRlLkFMUEhBX0JMRU5ELFxuICAgICAgZGVwdGhNYXNrOiBmYWxzZSxcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBmbGFncyA9IGNvbG9yQ29ycmVjdCB8IChwZXJGcmFnbWVudEF0bW9zcGhlcmUgPDwgMikgfCAodHJhbnNsdWNlbnQgPDwgMyk7XG5cbiAgaWYgKGZsYWdzICE9PSB0aGlzLl9mbGFncykge1xuICAgIHRoaXMuX2ZsYWdzID0gZmxhZ3M7XG5cbiAgICB2YXIgZGVmaW5lcyA9IFtdO1xuXG4gICAgaWYgKGNvbG9yQ29ycmVjdCkge1xuICAgICAgZGVmaW5lcy5wdXNoKFwiQ09MT1JfQ09SUkVDVFwiKTtcbiAgICB9XG5cbiAgICBpZiAocGVyRnJhZ21lbnRBdG1vc3BoZXJlKSB7XG4gICAgICBkZWZpbmVzLnB1c2goXCJQRVJfRlJBR01FTlRfQVRNT1NQSEVSRVwiKTtcbiAgICB9XG5cbiAgICBpZiAodHJhbnNsdWNlbnQpIHtcbiAgICAgIGRlZmluZXMucHVzaChcIkdMT0JFX1RSQU5TTFVDRU5UXCIpO1xuICAgIH1cblxuICAgIHZhciB2cyA9IG5ldyBTaGFkZXJTb3VyY2Uoe1xuICAgICAgZGVmaW5lczogZGVmaW5lcy5jb25jYXQoXCJTS1lfRlJPTV9TUEFDRVwiKSxcbiAgICAgIHNvdXJjZXM6IFtTa3lBdG1vc3BoZXJlQ29tbW9uLCBTa3lBdG1vc3BoZXJlVlNdLFxuICAgIH0pO1xuXG4gICAgdmFyIGZzID0gbmV3IFNoYWRlclNvdXJjZSh7XG4gICAgICBkZWZpbmVzOiBkZWZpbmVzLmNvbmNhdChcIlNLWV9GUk9NX1NQQUNFXCIpLFxuICAgICAgc291cmNlczogW1NreUF0bW9zcGhlcmVDb21tb24sIFNreUF0bW9zcGhlcmVGU10sXG4gICAgfSk7XG5cbiAgICB0aGlzLl9zcFNreUZyb21TcGFjZSA9IFNoYWRlclByb2dyYW0uZnJvbUNhY2hlKHtcbiAgICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgICB2ZXJ0ZXhTaGFkZXJTb3VyY2U6IHZzLFxuICAgICAgZnJhZ21lbnRTaGFkZXJTb3VyY2U6IGZzLFxuICAgIH0pO1xuXG4gICAgdnMgPSBuZXcgU2hhZGVyU291cmNlKHtcbiAgICAgIGRlZmluZXM6IGRlZmluZXMuY29uY2F0KFwiU0tZX0ZST01fQVRNT1NQSEVSRVwiKSxcbiAgICAgIHNvdXJjZXM6IFtTa3lBdG1vc3BoZXJlQ29tbW9uLCBTa3lBdG1vc3BoZXJlVlNdLFxuICAgIH0pO1xuXG4gICAgZnMgPSBuZXcgU2hhZGVyU291cmNlKHtcbiAgICAgIGRlZmluZXM6IGRlZmluZXMuY29uY2F0KFwiU0tZX0ZST01fQVRNT1NQSEVSRVwiKSxcbiAgICAgIHNvdXJjZXM6IFtTa3lBdG1vc3BoZXJlQ29tbW9uLCBTa3lBdG1vc3BoZXJlRlNdLFxuICAgIH0pO1xuXG4gICAgdGhpcy5fc3BTa3lGcm9tQXRtb3NwaGVyZSA9IFNoYWRlclByb2dyYW0uZnJvbUNhY2hlKHtcbiAgICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgICB2ZXJ0ZXhTaGFkZXJTb3VyY2U6IHZzLFxuICAgICAgZnJhZ21lbnRTaGFkZXJTb3VyY2U6IGZzLFxuICAgIH0pO1xuICB9XG5cbiAgdmFyIGNhbWVyYVBvc2l0aW9uID0gZnJhbWVTdGF0ZS5jYW1lcmEucG9zaXRpb25XQztcbiAgdmFyIGNhbWVyYUhlaWdodCA9IENhcnRlc2lhbjMubWFnbml0dWRlKGNhbWVyYVBvc2l0aW9uKTtcblxuICBpZiAoY2FtZXJhSGVpZ2h0ID4gdGhpcy5fcmFkaWlBbmREeW5hbWljQXRtb3NwaGVyZUNvbG9yLngpIHtcbiAgICAvLyBDYW1lcmEgaW4gc3BhY2VcbiAgICBjb21tYW5kLnNoYWRlclByb2dyYW0gPSB0aGlzLl9zcFNreUZyb21TcGFjZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBDYW1lcmEgaW4gYXRtb3NwaGVyZVxuICAgIGNvbW1hbmQuc2hhZGVyUHJvZ3JhbSA9IHRoaXMuX3NwU2t5RnJvbUF0bW9zcGhlcmU7XG4gIH1cblxuICByZXR1cm4gY29tbWFuZDtcbn07XG5cbmZ1bmN0aW9uIGhhc0NvbG9yQ29ycmVjdGlvbihza3lBdG1vc3BoZXJlKSB7XG4gIHJldHVybiAhKFxuICAgIENlc2l1bU1hdGguZXF1YWxzRXBzaWxvbihcbiAgICAgIHNreUF0bW9zcGhlcmUuaHVlU2hpZnQsXG4gICAgICAwLjAsXG4gICAgICBDZXNpdW1NYXRoLkVQU0lMT043XG4gICAgKSAmJlxuICAgIENlc2l1bU1hdGguZXF1YWxzRXBzaWxvbihcbiAgICAgIHNreUF0bW9zcGhlcmUuc2F0dXJhdGlvblNoaWZ0LFxuICAgICAgMC4wLFxuICAgICAgQ2VzaXVtTWF0aC5FUFNJTE9ON1xuICAgICkgJiZcbiAgICBDZXNpdW1NYXRoLmVxdWFsc0Vwc2lsb24oXG4gICAgICBza3lBdG1vc3BoZXJlLmJyaWdodG5lc3NTaGlmdCxcbiAgICAgIDAuMCxcbiAgICAgIENlc2l1bU1hdGguRVBTSUxPTjdcbiAgICApXG4gICk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQ7IG90aGVyd2lzZSwgZmFsc2UuXG4gKiA8YnIgLz48YnIgLz5cbiAqIElmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQsIGl0IHNob3VsZCBub3QgYmUgdXNlZDsgY2FsbGluZyBhbnkgZnVuY3Rpb24gb3RoZXIgdGhhblxuICogPGNvZGU+aXNEZXN0cm95ZWQ8L2NvZGU+IHdpbGwgcmVzdWx0IGluIGEge0BsaW5rIERldmVsb3BlckVycm9yfSBleGNlcHRpb24uXG4gKlxuICogQHJldHVybnMge0Jvb2xlYW59IDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQ7IG90aGVyd2lzZSwgPGNvZGU+ZmFsc2U8L2NvZGU+LlxuICpcbiAqIEBzZWUgU2t5QXRtb3NwaGVyZSNkZXN0cm95XG4gKi9cblNreUF0bW9zcGhlcmUucHJvdG90eXBlLmlzRGVzdHJveWVkID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZmFsc2U7XG59O1xuXG4vKipcbiAqIERlc3Ryb3lzIHRoZSBXZWJHTCByZXNvdXJjZXMgaGVsZCBieSB0aGlzIG9iamVjdC4gIERlc3Ryb3lpbmcgYW4gb2JqZWN0IGFsbG93cyBmb3IgZGV0ZXJtaW5pc3RpY1xuICogcmVsZWFzZSBvZiBXZWJHTCByZXNvdXJjZXMsIGluc3RlYWQgb2YgcmVseWluZyBvbiB0aGUgZ2FyYmFnZSBjb2xsZWN0b3IgdG8gZGVzdHJveSB0aGlzIG9iamVjdC5cbiAqIDxiciAvPjxiciAvPlxuICogT25jZSBhbiBvYmplY3QgaXMgZGVzdHJveWVkLCBpdCBzaG91bGQgbm90IGJlIHVzZWQ7IGNhbGxpbmcgYW55IGZ1bmN0aW9uIG90aGVyIHRoYW5cbiAqIDxjb2RlPmlzRGVzdHJveWVkPC9jb2RlPiB3aWxsIHJlc3VsdCBpbiBhIHtAbGluayBEZXZlbG9wZXJFcnJvcn0gZXhjZXB0aW9uLiAgVGhlcmVmb3JlLFxuICogYXNzaWduIHRoZSByZXR1cm4gdmFsdWUgKDxjb2RlPnVuZGVmaW5lZDwvY29kZT4pIHRvIHRoZSBvYmplY3QgYXMgZG9uZSBpbiB0aGUgZXhhbXBsZS5cbiAqXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gVGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZCwgaS5lLiwgZGVzdHJveSgpIHdhcyBjYWxsZWQuXG4gKlxuICpcbiAqIEBleGFtcGxlXG4gKiBza3lBdG1vc3BoZXJlID0gc2t5QXRtb3NwaGVyZSAmJiBza3lBdG1vc3BoZXJlLmRlc3Ryb3koKTtcbiAqXG4gKiBAc2VlIFNreUF0bW9zcGhlcmUjaXNEZXN0cm95ZWRcbiAqL1xuU2t5QXRtb3NwaGVyZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGNvbW1hbmQgPSB0aGlzLl9jb21tYW5kO1xuICBjb21tYW5kLnZlcnRleEFycmF5ID0gY29tbWFuZC52ZXJ0ZXhBcnJheSAmJiBjb21tYW5kLnZlcnRleEFycmF5LmRlc3Ryb3koKTtcbiAgdGhpcy5fc3BTa3lGcm9tU3BhY2UgPSB0aGlzLl9zcFNreUZyb21TcGFjZSAmJiB0aGlzLl9zcFNreUZyb21TcGFjZS5kZXN0cm95KCk7XG4gIHRoaXMuX3NwU2t5RnJvbUF0bW9zcGhlcmUgPVxuICAgIHRoaXMuX3NwU2t5RnJvbUF0bW9zcGhlcmUgJiYgdGhpcy5fc3BTa3lGcm9tQXRtb3NwaGVyZS5kZXN0cm95KCk7XG4gIHJldHVybiBkZXN0cm95T2JqZWN0KHRoaXMpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFNreUF0bW9zcGhlcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///80763\n')},78149:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoxGeometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20305);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12572);\n/* harmony import */ var _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(57552);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72248);\n/* harmony import */ var _Core_VertexFormat_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(67252);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_CubeMap_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(51107);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_loadCubeMap_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(93958);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(46588);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(18192);\n/* harmony import */ var _Shaders_SkyBoxFS_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(81277);\n/* harmony import */ var _Shaders_SkyBoxVS_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(8910);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(13633);\n/* harmony import */ var _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(89917);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A sky box around the scene to draw stars.  The sky box is defined using the True Equator Mean Equinox (TEME) axes.\n * <p>\n * This is only supported in 3D.  The sky box is faded out when morphing to 2D or Columbus view.  The size of\n * the sky box must not exceed {@link Scene#maximumCubeMapSize}.\n * </p>\n *\n * @alias SkyBox\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} [options.sources] The source URL or <code>Image</code> object for each of the six cube map faces.  See the example below.\n * @param {Boolean} [options.show=true] Determines if this primitive will be shown.\n *\n *\n * @example\n * scene.skyBox = new Cesium.SkyBox({\n *   sources : {\n *     positiveX : \'skybox_px.png\',\n *     negativeX : \'skybox_nx.png\',\n *     positiveY : \'skybox_py.png\',\n *     negativeY : \'skybox_ny.png\',\n *     positiveZ : \'skybox_pz.png\',\n *     negativeZ : \'skybox_nz.png\'\n *   }\n * });\n *\n * @see Scene#skyBox\n * @see Transforms.computeTemeToPseudoFixedMatrix\n */\nfunction SkyBox(options) {\n  /**\n   * The sources used to create the cube map faces: an object\n   * with <code>positiveX</code>, <code>negativeX</code>, <code>positiveY</code>,\n   * <code>negativeY</code>, <code>positiveZ</code>, and <code>negativeZ</code> properties.\n   * These can be either URLs or <code>Image</code> objects.\n   *\n   * @type Object\n   * @default undefined\n   */\n  this.sources = options.sources;\n  this._sources = undefined;\n\n  /**\n   * Determines if the sky box will be shown.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.show, true);\n\n  this._command = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    modelMatrix: _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].IDENTITY */ .Z.IDENTITY),\n    owner: this,\n  });\n  this._cubeMap = undefined;\n\n  this._attributeLocations = undefined;\n  this._useHdr = undefined;\n}\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {DeveloperError} this.sources is required and must have positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ properties.\n * @exception {DeveloperError} this.sources properties must all be the same type.\n */\nSkyBox.prototype.update = function (frameState, useHdr) {\n  var that = this;\n\n  if (!this.show) {\n    return undefined;\n  }\n\n  if (\n    frameState.mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].SCENE3D */ .Z.SCENE3D &&\n    frameState.mode !== _SceneMode_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].MORPHING */ .Z.MORPHING\n  ) {\n    return undefined;\n  }\n\n  // The sky box is only rendered during the render pass; it is not pickable, it doesn\'t cast shadows, etc.\n  if (!frameState.passes.render) {\n    return undefined;\n  }\n\n  var context = frameState.context;\n\n  if (this._sources !== this.sources) {\n    this._sources = this.sources;\n    var sources = this.sources;\n\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(sources.positiveX) ||\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(sources.negativeX) ||\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(sources.positiveY) ||\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(sources.negativeY) ||\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(sources.positiveZ) ||\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(sources.negativeZ)\n    ) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "this.sources is required and must have positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ properties."\n      );\n    }\n\n    if (\n      typeof sources.positiveX !== typeof sources.negativeX ||\n      typeof sources.positiveX !== typeof sources.positiveY ||\n      typeof sources.positiveX !== typeof sources.negativeY ||\n      typeof sources.positiveX !== typeof sources.positiveZ ||\n      typeof sources.positiveX !== typeof sources.negativeZ\n    ) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "this.sources properties must all be the same type."\n      );\n    }\n    //>>includeEnd(\'debug\');\n\n    if (typeof sources.positiveX === "string") {\n      // Given urls for cube-map images.  Load them.\n      (0,_Renderer_loadCubeMap_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(context, this._sources).then(function (cubeMap) {\n        that._cubeMap = that._cubeMap && that._cubeMap.destroy();\n        that._cubeMap = cubeMap;\n      });\n    } else {\n      this._cubeMap = this._cubeMap && this._cubeMap.destroy();\n      this._cubeMap = new _Renderer_CubeMap_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n        context: context,\n        source: sources,\n      });\n    }\n  }\n\n  var command = this._command;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(command.vertexArray)) {\n    command.uniformMap = {\n      u_cubeMap: function () {\n        return that._cubeMap;\n      },\n    };\n\n    var geometry = _Core_BoxGeometry_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].createGeometry */ .Z.createGeometry(\n      _Core_BoxGeometry_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromDimensions */ .Z.fromDimensions({\n        dimensions: new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(2.0, 2.0, 2.0),\n        vertexFormat: _Core_VertexFormat_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].POSITION_ONLY */ .Z.POSITION_ONLY,\n      })\n    );\n    var attributeLocations = (this._attributeLocations = _Core_GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].createAttributeLocations */ .Z.createAttributeLocations(\n      geometry\n    ));\n\n    command.vertexArray = _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].fromGeometry */ .Z.fromGeometry({\n      context: context,\n      geometry: geometry,\n      attributeLocations: attributeLocations,\n      bufferUsage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n\n    command.renderState = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCache */ .Z.fromCache({\n      blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND,\n    });\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(command.shaderProgram) || this._useHdr !== useHdr) {\n    var fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n      defines: [useHdr ? "HDR" : ""],\n      sources: [_Shaders_SkyBoxFS_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z],\n    });\n    command.shaderProgram = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromCache */ .Z.fromCache({\n      context: context,\n      vertexShaderSource: _Shaders_SkyBoxVS_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z,\n      fragmentShaderSource: fs,\n      attributeLocations: this._attributeLocations,\n    });\n    this._useHdr = useHdr;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(this._cubeMap)) {\n    return undefined;\n  }\n\n  return command;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see SkyBox#destroy\n */\nSkyBox.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * skyBox = skyBox && skyBox.destroy();\n *\n * @see SkyBox#isDestroyed\n */\nSkyBox.prototype.destroy = function () {\n  var command = this._command;\n  command.vertexArray = command.vertexArray && command.vertexArray.destroy();\n  command.shaderProgram =\n    command.shaderProgram && command.shaderProgram.destroy();\n  this._cubeMap = this._cubeMap && this._cubeMap.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (SkyBox);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///78149\n')}}]);