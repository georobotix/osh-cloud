"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[227],{21572:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52200);\n\n\n/**\n * The data type of a pixel.\n *\n * @enum {Number}\n * @see PostProcessStage\n */\nvar PixelDatatype = {\n  UNSIGNED_BYTE: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n  UNSIGNED_SHORT: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n  UNSIGNED_INT: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n  FLOAT: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].FLOAT */ .Z.FLOAT,\n  HALF_FLOAT: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].HALF_FLOAT_OES */ .Z.HALF_FLOAT_OES,\n  UNSIGNED_INT_24_8: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_INT_24_8 */ .Z.UNSIGNED_INT_24_8,\n  UNSIGNED_SHORT_4_4_4_4: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_SHORT_4_4_4_4 */ .Z.UNSIGNED_SHORT_4_4_4_4,\n  UNSIGNED_SHORT_5_5_5_1: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_SHORT_5_5_5_1 */ .Z.UNSIGNED_SHORT_5_5_5_1,\n  UNSIGNED_SHORT_5_6_5: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_SHORT_5_6_5 */ .Z.UNSIGNED_SHORT_5_6_5,\n};\n\n/**\n  @private\n*/\nPixelDatatype.toWebGLConstant = function (pixelDatatype, context) {\n  switch (pixelDatatype) {\n    case PixelDatatype.UNSIGNED_BYTE:\n      return _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE;\n    case PixelDatatype.UNSIGNED_SHORT:\n      return _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT;\n    case PixelDatatype.UNSIGNED_INT:\n      return _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT;\n    case PixelDatatype.FLOAT:\n      return _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].FLOAT */ .Z.FLOAT;\n    case PixelDatatype.HALF_FLOAT:\n      return context.webgl2\n        ? _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].HALF_FLOAT */ .Z.HALF_FLOAT\n        : _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].HALF_FLOAT_OES */ .Z.HALF_FLOAT_OES;\n    case PixelDatatype.UNSIGNED_INT_24_8:\n      return _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_INT_24_8 */ .Z.UNSIGNED_INT_24_8;\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\n      return _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_SHORT_4_4_4_4 */ .Z.UNSIGNED_SHORT_4_4_4_4;\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\n      return _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNSIGNED_SHORT_5_5_5_1 */ .Z.UNSIGNED_SHORT_5_5_5_1;\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\n      return PixelDatatype.UNSIGNED_SHORT_5_6_5;\n  }\n};\n\n/**\n  @private\n*/\nPixelDatatype.isPacked = function (pixelDatatype) {\n  return (\n    pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5\n  );\n};\n\n/**\n  @private\n*/\nPixelDatatype.sizeInBytes = function (pixelDatatype) {\n  switch (pixelDatatype) {\n    case PixelDatatype.UNSIGNED_BYTE:\n      return 1;\n    case PixelDatatype.UNSIGNED_SHORT:\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\n    case PixelDatatype.HALF_FLOAT:\n      return 2;\n    case PixelDatatype.UNSIGNED_INT:\n    case PixelDatatype.FLOAT:\n    case PixelDatatype.UNSIGNED_INT_24_8:\n      return 4;\n  }\n};\n\n/**\n  @private\n*/\nPixelDatatype.validate = function (pixelDatatype) {\n  return (\n    pixelDatatype === PixelDatatype.UNSIGNED_BYTE ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT ||\n    pixelDatatype === PixelDatatype.UNSIGNED_INT ||\n    pixelDatatype === PixelDatatype.FLOAT ||\n    pixelDatatype === PixelDatatype.HALF_FLOAT ||\n    pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5\n  );\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(PixelDatatype));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE1NzIuanMiLCJtYXBwaW5ncyI6IjtBQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvR0FBNEI7QUFDN0Msa0JBQWtCLHNHQUE2QjtBQUMvQyxnQkFBZ0Isa0dBQTJCO0FBQzNDLFNBQVMsb0ZBQW9CO0FBQzdCLGNBQWMsc0dBQTZCO0FBQzNDLHFCQUFxQiw0R0FBZ0M7QUFDckQsMEJBQTBCLHNIQUFxQztBQUMvRCwwQkFBMEIsc0hBQXFDO0FBQy9ELHdCQUF3QixrSEFBbUM7QUFDM0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvR0FBNEI7QUFDekM7QUFDQSxhQUFhLHNHQUE2QjtBQUMxQztBQUNBLGFBQWEsa0dBQTJCO0FBQ3hDO0FBQ0EsYUFBYSxvRkFBb0I7QUFDakM7QUFDQTtBQUNBLFVBQVUsOEZBQXlCO0FBQ25DLFVBQVUsc0dBQTZCO0FBQ3ZDO0FBQ0EsYUFBYSw0R0FBZ0M7QUFDN0M7QUFDQSxhQUFhLHNIQUFxQztBQUNsRDtBQUNBLGFBQWEsc0hBQXFDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseURBQWUsNEJBQTRCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvUmVuZGVyZXIvUGl4ZWxEYXRhdHlwZS5qcz8yMzAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXZWJHTENvbnN0YW50cyBmcm9tIFwiLi4vQ29yZS9XZWJHTENvbnN0YW50cy5qc1wiO1xuXG4vKipcbiAqIFRoZSBkYXRhIHR5cGUgb2YgYSBwaXhlbC5cbiAqXG4gKiBAZW51bSB7TnVtYmVyfVxuICogQHNlZSBQb3N0UHJvY2Vzc1N0YWdlXG4gKi9cbnZhciBQaXhlbERhdGF0eXBlID0ge1xuICBVTlNJR05FRF9CWVRFOiBXZWJHTENvbnN0YW50cy5VTlNJR05FRF9CWVRFLFxuICBVTlNJR05FRF9TSE9SVDogV2ViR0xDb25zdGFudHMuVU5TSUdORURfU0hPUlQsXG4gIFVOU0lHTkVEX0lOVDogV2ViR0xDb25zdGFudHMuVU5TSUdORURfSU5ULFxuICBGTE9BVDogV2ViR0xDb25zdGFudHMuRkxPQVQsXG4gIEhBTEZfRkxPQVQ6IFdlYkdMQ29uc3RhbnRzLkhBTEZfRkxPQVRfT0VTLFxuICBVTlNJR05FRF9JTlRfMjRfODogV2ViR0xDb25zdGFudHMuVU5TSUdORURfSU5UXzI0XzgsXG4gIFVOU0lHTkVEX1NIT1JUXzRfNF80XzQ6IFdlYkdMQ29uc3RhbnRzLlVOU0lHTkVEX1NIT1JUXzRfNF80XzQsXG4gIFVOU0lHTkVEX1NIT1JUXzVfNV81XzE6IFdlYkdMQ29uc3RhbnRzLlVOU0lHTkVEX1NIT1JUXzVfNV81XzEsXG4gIFVOU0lHTkVEX1NIT1JUXzVfNl81OiBXZWJHTENvbnN0YW50cy5VTlNJR05FRF9TSE9SVF81XzZfNSxcbn07XG5cbi8qKlxuICBAcHJpdmF0ZVxuKi9cblBpeGVsRGF0YXR5cGUudG9XZWJHTENvbnN0YW50ID0gZnVuY3Rpb24gKHBpeGVsRGF0YXR5cGUsIGNvbnRleHQpIHtcbiAgc3dpdGNoIChwaXhlbERhdGF0eXBlKSB7XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX0JZVEU6XG4gICAgICByZXR1cm4gV2ViR0xDb25zdGFudHMuVU5TSUdORURfQllURTtcbiAgICBjYXNlIFBpeGVsRGF0YXR5cGUuVU5TSUdORURfU0hPUlQ6XG4gICAgICByZXR1cm4gV2ViR0xDb25zdGFudHMuVU5TSUdORURfU0hPUlQ7XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX0lOVDpcbiAgICAgIHJldHVybiBXZWJHTENvbnN0YW50cy5VTlNJR05FRF9JTlQ7XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLkZMT0FUOlxuICAgICAgcmV0dXJuIFdlYkdMQ29uc3RhbnRzLkZMT0FUO1xuICAgIGNhc2UgUGl4ZWxEYXRhdHlwZS5IQUxGX0ZMT0FUOlxuICAgICAgcmV0dXJuIGNvbnRleHQud2ViZ2wyXG4gICAgICAgID8gV2ViR0xDb25zdGFudHMuSEFMRl9GTE9BVFxuICAgICAgICA6IFdlYkdMQ29uc3RhbnRzLkhBTEZfRkxPQVRfT0VTO1xuICAgIGNhc2UgUGl4ZWxEYXRhdHlwZS5VTlNJR05FRF9JTlRfMjRfODpcbiAgICAgIHJldHVybiBXZWJHTENvbnN0YW50cy5VTlNJR05FRF9JTlRfMjRfODtcbiAgICBjYXNlIFBpeGVsRGF0YXR5cGUuVU5TSUdORURfU0hPUlRfNF80XzRfNDpcbiAgICAgIHJldHVybiBXZWJHTENvbnN0YW50cy5VTlNJR05FRF9TSE9SVF80XzRfNF80O1xuICAgIGNhc2UgUGl4ZWxEYXRhdHlwZS5VTlNJR05FRF9TSE9SVF81XzVfNV8xOlxuICAgICAgcmV0dXJuIFdlYkdMQ29uc3RhbnRzLlVOU0lHTkVEX1NIT1JUXzVfNV81XzE7XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX1NIT1JUXzVfNl81OlxuICAgICAgcmV0dXJuIFBpeGVsRGF0YXR5cGUuVU5TSUdORURfU0hPUlRfNV82XzU7XG4gIH1cbn07XG5cbi8qKlxuICBAcHJpdmF0ZVxuKi9cblBpeGVsRGF0YXR5cGUuaXNQYWNrZWQgPSBmdW5jdGlvbiAocGl4ZWxEYXRhdHlwZSkge1xuICByZXR1cm4gKFxuICAgIHBpeGVsRGF0YXR5cGUgPT09IFBpeGVsRGF0YXR5cGUuVU5TSUdORURfSU5UXzI0XzggfHxcbiAgICBwaXhlbERhdGF0eXBlID09PSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX1NIT1JUXzRfNF80XzQgfHxcbiAgICBwaXhlbERhdGF0eXBlID09PSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX1NIT1JUXzVfNV81XzEgfHxcbiAgICBwaXhlbERhdGF0eXBlID09PSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX1NIT1JUXzVfNl81XG4gICk7XG59O1xuXG4vKipcbiAgQHByaXZhdGVcbiovXG5QaXhlbERhdGF0eXBlLnNpemVJbkJ5dGVzID0gZnVuY3Rpb24gKHBpeGVsRGF0YXR5cGUpIHtcbiAgc3dpdGNoIChwaXhlbERhdGF0eXBlKSB7XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX0JZVEU6XG4gICAgICByZXR1cm4gMTtcbiAgICBjYXNlIFBpeGVsRGF0YXR5cGUuVU5TSUdORURfU0hPUlQ6XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX1NIT1JUXzRfNF80XzQ6XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX1NIT1JUXzVfNV81XzE6XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX1NIT1JUXzVfNl81OlxuICAgIGNhc2UgUGl4ZWxEYXRhdHlwZS5IQUxGX0ZMT0FUOlxuICAgICAgcmV0dXJuIDI7XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX0lOVDpcbiAgICBjYXNlIFBpeGVsRGF0YXR5cGUuRkxPQVQ6XG4gICAgY2FzZSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX0lOVF8yNF84OlxuICAgICAgcmV0dXJuIDQ7XG4gIH1cbn07XG5cbi8qKlxuICBAcHJpdmF0ZVxuKi9cblBpeGVsRGF0YXR5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAocGl4ZWxEYXRhdHlwZSkge1xuICByZXR1cm4gKFxuICAgIHBpeGVsRGF0YXR5cGUgPT09IFBpeGVsRGF0YXR5cGUuVU5TSUdORURfQllURSB8fFxuICAgIHBpeGVsRGF0YXR5cGUgPT09IFBpeGVsRGF0YXR5cGUuVU5TSUdORURfU0hPUlQgfHxcbiAgICBwaXhlbERhdGF0eXBlID09PSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX0lOVCB8fFxuICAgIHBpeGVsRGF0YXR5cGUgPT09IFBpeGVsRGF0YXR5cGUuRkxPQVQgfHxcbiAgICBwaXhlbERhdGF0eXBlID09PSBQaXhlbERhdGF0eXBlLkhBTEZfRkxPQVQgfHxcbiAgICBwaXhlbERhdGF0eXBlID09PSBQaXhlbERhdGF0eXBlLlVOU0lHTkVEX0lOVF8yNF84IHx8XG4gICAgcGl4ZWxEYXRhdHlwZSA9PT0gUGl4ZWxEYXRhdHlwZS5VTlNJR05FRF9TSE9SVF80XzRfNF80IHx8XG4gICAgcGl4ZWxEYXRhdHlwZSA9PT0gUGl4ZWxEYXRhdHlwZS5VTlNJR05FRF9TSE9SVF81XzVfNV8xIHx8XG4gICAgcGl4ZWxEYXRhdHlwZSA9PT0gUGl4ZWxEYXRhdHlwZS5VTlNJR05FRF9TSE9SVF81XzZfNVxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmZyZWV6ZShQaXhlbERhdGF0eXBlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21572\n')},10667:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(52200);\n/* harmony import */ var _Core_WindingOrder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(32441);\n/* harmony import */ var _ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20521);\n/* harmony import */ var _freezeRenderState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(513);\n\n\n\n\n\n\n\n\n\n\nfunction validateBlendEquation(blendEquation) {\n  return (\n    blendEquation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FUNC_ADD */ .Z.FUNC_ADD ||\n    blendEquation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FUNC_SUBTRACT */ .Z.FUNC_SUBTRACT ||\n    blendEquation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FUNC_REVERSE_SUBTRACT */ .Z.FUNC_REVERSE_SUBTRACT ||\n    blendEquation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].MIN */ .Z.MIN ||\n    blendEquation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].MAX */ .Z.MAX\n  );\n}\n\nfunction validateBlendFunction(blendFunction) {\n  return (\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ZERO */ .Z.ZERO ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE */ .Z.ONE ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SRC_COLOR */ .Z.SRC_COLOR ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE_MINUS_SRC_COLOR */ .Z.ONE_MINUS_SRC_COLOR ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DST_COLOR */ .Z.DST_COLOR ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE_MINUS_DST_COLOR */ .Z.ONE_MINUS_DST_COLOR ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SRC_ALPHA */ .Z.SRC_ALPHA ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE_MINUS_SRC_ALPHA */ .Z.ONE_MINUS_SRC_ALPHA ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DST_ALPHA */ .Z.DST_ALPHA ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE_MINUS_DST_ALPHA */ .Z.ONE_MINUS_DST_ALPHA ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].CONSTANT_COLOR */ .Z.CONSTANT_COLOR ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE_MINUS_CONSTANT_COLOR */ .Z.ONE_MINUS_CONSTANT_COLOR ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].CONSTANT_ALPHA */ .Z.CONSTANT_ALPHA ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE_MINUS_CONSTANT_ALPHA */ .Z.ONE_MINUS_CONSTANT_ALPHA ||\n    blendFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].SRC_ALPHA_SATURATE */ .Z.SRC_ALPHA_SATURATE\n  );\n}\n\nfunction validateCullFace(cullFace) {\n  return (\n    cullFace === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FRONT */ .Z.FRONT ||\n    cullFace === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].BACK */ .Z.BACK ||\n    cullFace === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FRONT_AND_BACK */ .Z.FRONT_AND_BACK\n  );\n}\n\nfunction validateDepthFunction(depthFunction) {\n  return (\n    depthFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].NEVER */ .Z.NEVER ||\n    depthFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].LESS */ .Z.LESS ||\n    depthFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].EQUAL */ .Z.EQUAL ||\n    depthFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].LEQUAL */ .Z.LEQUAL ||\n    depthFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].GREATER */ .Z.GREATER ||\n    depthFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].NOTEQUAL */ .Z.NOTEQUAL ||\n    depthFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].GEQUAL */ .Z.GEQUAL ||\n    depthFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ALWAYS */ .Z.ALWAYS\n  );\n}\n\nfunction validateStencilFunction(stencilFunction) {\n  return (\n    stencilFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].NEVER */ .Z.NEVER ||\n    stencilFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].LESS */ .Z.LESS ||\n    stencilFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].EQUAL */ .Z.EQUAL ||\n    stencilFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].LEQUAL */ .Z.LEQUAL ||\n    stencilFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].GREATER */ .Z.GREATER ||\n    stencilFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].NOTEQUAL */ .Z.NOTEQUAL ||\n    stencilFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].GEQUAL */ .Z.GEQUAL ||\n    stencilFunction === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ALWAYS */ .Z.ALWAYS\n  );\n}\n\nfunction validateStencilOperation(stencilOperation) {\n  return (\n    stencilOperation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ZERO */ .Z.ZERO ||\n    stencilOperation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].KEEP */ .Z.KEEP ||\n    stencilOperation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].REPLACE */ .Z.REPLACE ||\n    stencilOperation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].INCR */ .Z.INCR ||\n    stencilOperation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DECR */ .Z.DECR ||\n    stencilOperation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].INVERT */ .Z.INVERT ||\n    stencilOperation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].INCR_WRAP */ .Z.INCR_WRAP ||\n    stencilOperation === _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DECR_WRAP */ .Z.DECR_WRAP\n  );\n}\n\n/**\n * @private\n */\nfunction RenderState(renderState) {\n  var rs = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(renderState, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var cull = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.cull, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var polygonOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.polygonOffset, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var scissorTest = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.scissorTest, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var scissorTestRectangle = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    scissorTest.rectangle,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  );\n  var depthRange = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.depthRange, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var depthTest = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.depthTest, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var colorMask = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.colorMask, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var blending = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.blending, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var blendingColor = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(blending.color, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var stencilTest = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.stencilTest, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var stencilTestFrontOperation = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    stencilTest.frontOperation,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  );\n  var stencilTestBackOperation = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    stencilTest.backOperation,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  );\n  var sampleCoverage = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    rs.sampleCoverage,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  );\n  var viewport = rs.viewport;\n\n  this.frontFace = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.frontFace, _Core_WindingOrder_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].COUNTER_CLOCKWISE */ .Z.COUNTER_CLOCKWISE);\n  this.cull = {\n    enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(cull.enabled, false),\n    face: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(cull.face, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].BACK */ .Z.BACK),\n  };\n  this.lineWidth = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.lineWidth, 1.0);\n  this.polygonOffset = {\n    enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(polygonOffset.enabled, false),\n    factor: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(polygonOffset.factor, 0),\n    units: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(polygonOffset.units, 0),\n  };\n  this.scissorTest = {\n    enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(scissorTest.enabled, false),\n    rectangle: _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(scissorTestRectangle),\n  };\n  this.depthRange = {\n    near: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(depthRange.near, 0),\n    far: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(depthRange.far, 1),\n  };\n  this.depthTest = {\n    enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(depthTest.enabled, false),\n    func: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(depthTest.func, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].LESS */ .Z.LESS), // func, because function is a JavaScript keyword\n  };\n  this.colorMask = {\n    red: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(colorMask.red, true),\n    green: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(colorMask.green, true),\n    blue: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(colorMask.blue, true),\n    alpha: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(colorMask.alpha, true),\n  };\n  this.depthMask = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.depthMask, true);\n  this.stencilMask = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(rs.stencilMask, ~0);\n  this.blending = {\n    enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(blending.enabled, false),\n    color: new _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(blendingColor.red, 0.0),\n      (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(blendingColor.green, 0.0),\n      (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(blendingColor.blue, 0.0),\n      (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(blendingColor.alpha, 0.0)\n    ),\n    equationRgb: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(blending.equationRgb, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FUNC_ADD */ .Z.FUNC_ADD),\n    equationAlpha: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n      blending.equationAlpha,\n      _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].FUNC_ADD */ .Z.FUNC_ADD\n    ),\n    functionSourceRgb: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n      blending.functionSourceRgb,\n      _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE */ .Z.ONE\n    ),\n    functionSourceAlpha: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n      blending.functionSourceAlpha,\n      _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ONE */ .Z.ONE\n    ),\n    functionDestinationRgb: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n      blending.functionDestinationRgb,\n      _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ZERO */ .Z.ZERO\n    ),\n    functionDestinationAlpha: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n      blending.functionDestinationAlpha,\n      _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ZERO */ .Z.ZERO\n    ),\n  };\n  this.stencilTest = {\n    enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTest.enabled, false),\n    frontFunction: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n      stencilTest.frontFunction,\n      _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ALWAYS */ .Z.ALWAYS\n    ),\n    backFunction: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTest.backFunction, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ALWAYS */ .Z.ALWAYS),\n    reference: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTest.reference, 0),\n    mask: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTest.mask, ~0),\n    frontOperation: {\n      fail: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTestFrontOperation.fail, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].KEEP */ .Z.KEEP),\n      zFail: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTestFrontOperation.zFail, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].KEEP */ .Z.KEEP),\n      zPass: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTestFrontOperation.zPass, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].KEEP */ .Z.KEEP),\n    },\n    backOperation: {\n      fail: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTestBackOperation.fail, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].KEEP */ .Z.KEEP),\n      zFail: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTestBackOperation.zFail, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].KEEP */ .Z.KEEP),\n      zPass: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(stencilTestBackOperation.zPass, _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].KEEP */ .Z.KEEP),\n    },\n  };\n  this.sampleCoverage = {\n    enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(sampleCoverage.enabled, false),\n    value: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(sampleCoverage.value, 1.0),\n    invert: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(sampleCoverage.invert, false),\n  };\n  this.viewport = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(viewport)\n    ? new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n        viewport.x,\n        viewport.y,\n        viewport.width,\n        viewport.height\n      )\n    : undefined;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    this.lineWidth < _ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].minimumAliasedLineWidth */ .Z.minimumAliasedLineWidth ||\n    this.lineWidth > _ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].maximumAliasedLineWidth */ .Z.maximumAliasedLineWidth\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "renderState.lineWidth is out of range.  Check minimumAliasedLineWidth and maximumAliasedLineWidth."\n    );\n  }\n  if (!_Core_WindingOrder_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].validate */ .Z.validate(this.frontFace)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid renderState.frontFace.");\n  }\n  if (!validateCullFace(this.cull.face)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid renderState.cull.face.");\n  }\n  if (\n    this.scissorTest.rectangle.width < 0 ||\n    this.scissorTest.rectangle.height < 0\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "renderState.scissorTest.rectangle.width and renderState.scissorTest.rectangle.height must be greater than or equal to zero."\n    );\n  }\n  if (this.depthRange.near > this.depthRange.far) {\n    // WebGL specific - not an error in GL ES\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "renderState.depthRange.near can not be greater than renderState.depthRange.far."\n    );\n  }\n  if (this.depthRange.near < 0) {\n    // Would be clamped by GL\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "renderState.depthRange.near must be greater than or equal to zero."\n    );\n  }\n  if (this.depthRange.far > 1) {\n    // Would be clamped by GL\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "renderState.depthRange.far must be less than or equal to one."\n    );\n  }\n  if (!validateDepthFunction(this.depthTest.func)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid renderState.depthTest.func.");\n  }\n  if (\n    this.blending.color.red < 0.0 ||\n    this.blending.color.red > 1.0 ||\n    this.blending.color.green < 0.0 ||\n    this.blending.color.green > 1.0 ||\n    this.blending.color.blue < 0.0 ||\n    this.blending.color.blue > 1.0 ||\n    this.blending.color.alpha < 0.0 ||\n    this.blending.color.alpha > 1.0\n  ) {\n    // Would be clamped by GL\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "renderState.blending.color components must be greater than or equal to zero and less than or equal to one."\n    );\n  }\n  if (!validateBlendEquation(this.blending.equationRgb)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid renderState.blending.equationRgb.");\n  }\n  if (!validateBlendEquation(this.blending.equationAlpha)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid renderState.blending.equationAlpha.");\n  }\n  if (!validateBlendFunction(this.blending.functionSourceRgb)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid renderState.blending.functionSourceRgb.");\n  }\n  if (!validateBlendFunction(this.blending.functionSourceAlpha)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.blending.functionSourceAlpha."\n    );\n  }\n  if (!validateBlendFunction(this.blending.functionDestinationRgb)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.blending.functionDestinationRgb."\n    );\n  }\n  if (!validateBlendFunction(this.blending.functionDestinationAlpha)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.blending.functionDestinationAlpha."\n    );\n  }\n  if (!validateStencilFunction(this.stencilTest.frontFunction)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid renderState.stencilTest.frontFunction.");\n  }\n  if (!validateStencilFunction(this.stencilTest.backFunction)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid renderState.stencilTest.backFunction.");\n  }\n  if (!validateStencilOperation(this.stencilTest.frontOperation.fail)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.stencilTest.frontOperation.fail."\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.frontOperation.zFail)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.stencilTest.frontOperation.zFail."\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.frontOperation.zPass)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.stencilTest.frontOperation.zPass."\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.backOperation.fail)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.stencilTest.backOperation.fail."\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.backOperation.zFail)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.stencilTest.backOperation.zFail."\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.backOperation.zPass)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Invalid renderState.stencilTest.backOperation.zPass."\n    );\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this.viewport)) {\n    if (this.viewport.width < 0) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n        "renderState.viewport.width must be greater than or equal to zero."\n      );\n    }\n    if (this.viewport.height < 0) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n        "renderState.viewport.height must be greater than or equal to zero."\n      );\n    }\n\n    if (this.viewport.width > _ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].maximumViewportWidth */ .Z.maximumViewportWidth) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n        "renderState.viewport.width must be less than or equal to the maximum viewport width (" +\n          _ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].maximumViewportWidth.toString */ .Z.maximumViewportWidth.toString() +\n          ").  Check maximumViewportWidth."\n      );\n    }\n    if (this.viewport.height > _ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].maximumViewportHeight */ .Z.maximumViewportHeight) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n        "renderState.viewport.height must be less than or equal to the maximum viewport height (" +\n          _ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].maximumViewportHeight.toString */ .Z.maximumViewportHeight.toString() +\n          ").  Check maximumViewportHeight."\n      );\n    }\n  }\n  //>>includeEnd(\'debug\');\n\n  this.id = 0;\n  this._applyFunctions = [];\n}\n\nvar nextRenderStateId = 0;\nvar renderStateCache = {};\n\n/**\n * Validates and then finds or creates an immutable render state, which defines the pipeline\n * state for a {@link DrawCommand} or {@link ClearCommand}.  All inputs states are optional.  Omitted states\n * use the defaults shown in the example below.\n *\n * @param {Object} [renderState] The states defining the render state as shown in the example below.\n *\n * @exception {RuntimeError} renderState.lineWidth is out of range.\n * @exception {DeveloperError} Invalid renderState.frontFace.\n * @exception {DeveloperError} Invalid renderState.cull.face.\n * @exception {DeveloperError} scissorTest.rectangle.width and scissorTest.rectangle.height must be greater than or equal to zero.\n * @exception {DeveloperError} renderState.depthRange.near can\'t be greater than renderState.depthRange.far.\n * @exception {DeveloperError} renderState.depthRange.near must be greater than or equal to zero.\n * @exception {DeveloperError} renderState.depthRange.far must be less than or equal to zero.\n * @exception {DeveloperError} Invalid renderState.depthTest.func.\n * @exception {DeveloperError} renderState.blending.color components must be greater than or equal to zero and less than or equal to one\n * @exception {DeveloperError} Invalid renderState.blending.equationRgb.\n * @exception {DeveloperError} Invalid renderState.blending.equationAlpha.\n * @exception {DeveloperError} Invalid renderState.blending.functionSourceRgb.\n * @exception {DeveloperError} Invalid renderState.blending.functionSourceAlpha.\n * @exception {DeveloperError} Invalid renderState.blending.functionDestinationRgb.\n * @exception {DeveloperError} Invalid renderState.blending.functionDestinationAlpha.\n * @exception {DeveloperError} Invalid renderState.stencilTest.frontFunction.\n * @exception {DeveloperError} Invalid renderState.stencilTest.backFunction.\n * @exception {DeveloperError} Invalid renderState.stencilTest.frontOperation.fail.\n * @exception {DeveloperError} Invalid renderState.stencilTest.frontOperation.zFail.\n * @exception {DeveloperError} Invalid renderState.stencilTest.frontOperation.zPass.\n * @exception {DeveloperError} Invalid renderState.stencilTest.backOperation.fail.\n * @exception {DeveloperError} Invalid renderState.stencilTest.backOperation.zFail.\n * @exception {DeveloperError} Invalid renderState.stencilTest.backOperation.zPass.\n * @exception {DeveloperError} renderState.viewport.width must be greater than or equal to zero.\n * @exception {DeveloperError} renderState.viewport.width must be less than or equal to the maximum viewport width.\n * @exception {DeveloperError} renderState.viewport.height must be greater than or equal to zero.\n * @exception {DeveloperError} renderState.viewport.height must be less than or equal to the maximum viewport height.\n *\n *\n * @example\n * var defaults = {\n *     frontFace : WindingOrder.COUNTER_CLOCKWISE,\n *     cull : {\n *         enabled : false,\n *         face : CullFace.BACK\n *     },\n *     lineWidth : 1,\n *     polygonOffset : {\n *         enabled : false,\n *         factor : 0,\n *         units : 0\n *     },\n *     scissorTest : {\n *         enabled : false,\n *         rectangle : {\n *             x : 0,\n *             y : 0,\n *             width : 0,\n *             height : 0\n *         }\n *     },\n *     depthRange : {\n *         near : 0,\n *         far : 1\n *     },\n *     depthTest : {\n *         enabled : false,\n *         func : DepthFunction.LESS\n *      },\n *     colorMask : {\n *         red : true,\n *         green : true,\n *         blue : true,\n *         alpha : true\n *     },\n *     depthMask : true,\n *     stencilMask : ~0,\n *     blending : {\n *         enabled : false,\n *         color : {\n *             red : 0.0,\n *             green : 0.0,\n *             blue : 0.0,\n *             alpha : 0.0\n *         },\n *         equationRgb : BlendEquation.ADD,\n *         equationAlpha : BlendEquation.ADD,\n *         functionSourceRgb : BlendFunction.ONE,\n *         functionSourceAlpha : BlendFunction.ONE,\n *         functionDestinationRgb : BlendFunction.ZERO,\n *         functionDestinationAlpha : BlendFunction.ZERO\n *     },\n *     stencilTest : {\n *         enabled : false,\n *         frontFunction : StencilFunction.ALWAYS,\n *         backFunction : StencilFunction.ALWAYS,\n *         reference : 0,\n *         mask : ~0,\n *         frontOperation : {\n *             fail : StencilOperation.KEEP,\n *             zFail : StencilOperation.KEEP,\n *             zPass : StencilOperation.KEEP\n *         },\n *         backOperation : {\n *             fail : StencilOperation.KEEP,\n *             zFail : StencilOperation.KEEP,\n *             zPass : StencilOperation.KEEP\n *         }\n *     },\n *     sampleCoverage : {\n *         enabled : false,\n *         value : 1.0,\n *         invert : false\n *      }\n * };\n *\n * var rs = RenderState.fromCache(defaults);\n *\n * @see DrawCommand\n * @see ClearCommand\n *\n * @private\n */\nRenderState.fromCache = function (renderState) {\n  var partialKey = JSON.stringify(renderState);\n  var cachedState = renderStateCache[partialKey];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(cachedState)) {\n    ++cachedState.referenceCount;\n    return cachedState.state;\n  }\n\n  // Cache miss.  Fully define render state and try again.\n  var states = new RenderState(renderState);\n  var fullKey = JSON.stringify(states);\n  cachedState = renderStateCache[fullKey];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(cachedState)) {\n    states.id = nextRenderStateId++;\n    //>>includeStart(\'debug\', pragmas.debug);\n    states = (0,_freezeRenderState_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(states);\n    //>>includeEnd(\'debug\');\n    cachedState = {\n      referenceCount: 0,\n      state: states,\n    };\n\n    // Cache full render state.  Multiple partially defined render states may map to this.\n    renderStateCache[fullKey] = cachedState;\n  }\n\n  ++cachedState.referenceCount;\n\n  // Cache partial render state so we can skip validation on a cache hit for a partially defined render state\n  renderStateCache[partialKey] = {\n    referenceCount: 1,\n    state: cachedState.state,\n  };\n\n  return cachedState.state;\n};\n\n/**\n * @private\n */\nRenderState.removeFromCache = function (renderState) {\n  var states = new RenderState(renderState);\n  var fullKey = JSON.stringify(states);\n  var fullCachedState = renderStateCache[fullKey];\n\n  // decrement partial key reference count\n  var partialKey = JSON.stringify(renderState);\n  var cachedState = renderStateCache[partialKey];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(cachedState)) {\n    --cachedState.referenceCount;\n\n    if (cachedState.referenceCount === 0) {\n      // remove partial key\n      delete renderStateCache[partialKey];\n\n      // decrement full key reference count\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(fullCachedState)) {\n        --fullCachedState.referenceCount;\n      }\n    }\n  }\n\n  // remove full key if reference count is zero\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(fullCachedState) && fullCachedState.referenceCount === 0) {\n    delete renderStateCache[fullKey];\n  }\n};\n\n/**\n * This function is for testing purposes only.\n * @private\n */\nRenderState.getCache = function () {\n  return renderStateCache;\n};\n\n/**\n * This function is for testing purposes only.\n * @private\n */\nRenderState.clearCache = function () {\n  renderStateCache = {};\n};\n\nfunction enableOrDisable(gl, glEnum, enable) {\n  if (enable) {\n    gl.enable(glEnum);\n  } else {\n    gl.disable(glEnum);\n  }\n}\n\nfunction applyFrontFace(gl, renderState) {\n  gl.frontFace(renderState.frontFace);\n}\n\nfunction applyCull(gl, renderState) {\n  var cull = renderState.cull;\n  var enabled = cull.enabled;\n\n  enableOrDisable(gl, gl.CULL_FACE, enabled);\n\n  if (enabled) {\n    gl.cullFace(cull.face);\n  }\n}\n\nfunction applyLineWidth(gl, renderState) {\n  gl.lineWidth(renderState.lineWidth);\n}\n\nfunction applyPolygonOffset(gl, renderState) {\n  var polygonOffset = renderState.polygonOffset;\n  var enabled = polygonOffset.enabled;\n\n  enableOrDisable(gl, gl.POLYGON_OFFSET_FILL, enabled);\n\n  if (enabled) {\n    gl.polygonOffset(polygonOffset.factor, polygonOffset.units);\n  }\n}\n\nfunction applyScissorTest(gl, renderState, passState) {\n  var scissorTest = renderState.scissorTest;\n  var enabled = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(passState.scissorTest)\n    ? passState.scissorTest.enabled\n    : scissorTest.enabled;\n\n  enableOrDisable(gl, gl.SCISSOR_TEST, enabled);\n\n  if (enabled) {\n    var rectangle = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(passState.scissorTest)\n      ? passState.scissorTest.rectangle\n      : scissorTest.rectangle;\n    gl.scissor(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  }\n}\n\nfunction applyDepthRange(gl, renderState) {\n  var depthRange = renderState.depthRange;\n  gl.depthRange(depthRange.near, depthRange.far);\n}\n\nfunction applyDepthTest(gl, renderState) {\n  var depthTest = renderState.depthTest;\n  var enabled = depthTest.enabled;\n\n  enableOrDisable(gl, gl.DEPTH_TEST, enabled);\n\n  if (enabled) {\n    gl.depthFunc(depthTest.func);\n  }\n}\n\nfunction applyColorMask(gl, renderState) {\n  var colorMask = renderState.colorMask;\n  gl.colorMask(colorMask.red, colorMask.green, colorMask.blue, colorMask.alpha);\n}\n\nfunction applyDepthMask(gl, renderState) {\n  gl.depthMask(renderState.depthMask);\n}\n\nfunction applyStencilMask(gl, renderState) {\n  gl.stencilMask(renderState.stencilMask);\n}\n\nfunction applyBlendingColor(gl, color) {\n  gl.blendColor(color.red, color.green, color.blue, color.alpha);\n}\n\nfunction applyBlending(gl, renderState, passState) {\n  var blending = renderState.blending;\n  var enabled = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(passState.blendingEnabled)\n    ? passState.blendingEnabled\n    : blending.enabled;\n\n  enableOrDisable(gl, gl.BLEND, enabled);\n\n  if (enabled) {\n    applyBlendingColor(gl, blending.color);\n    gl.blendEquationSeparate(blending.equationRgb, blending.equationAlpha);\n    gl.blendFuncSeparate(\n      blending.functionSourceRgb,\n      blending.functionDestinationRgb,\n      blending.functionSourceAlpha,\n      blending.functionDestinationAlpha\n    );\n  }\n}\n\nfunction applyStencilTest(gl, renderState) {\n  var stencilTest = renderState.stencilTest;\n  var enabled = stencilTest.enabled;\n\n  enableOrDisable(gl, gl.STENCIL_TEST, enabled);\n\n  if (enabled) {\n    var frontFunction = stencilTest.frontFunction;\n    var backFunction = stencilTest.backFunction;\n    var reference = stencilTest.reference;\n    var mask = stencilTest.mask;\n\n    // Section 6.8 of the WebGL spec requires the reference and masks to be the same for\n    // front- and back-face tests.  This call prevents invalid operation errors when calling\n    // stencilFuncSeparate on Firefox.  Perhaps they should delay validation to avoid requiring this.\n    gl.stencilFunc(frontFunction, reference, mask);\n    gl.stencilFuncSeparate(gl.BACK, backFunction, reference, mask);\n    gl.stencilFuncSeparate(gl.FRONT, frontFunction, reference, mask);\n\n    var frontOperation = stencilTest.frontOperation;\n    var frontOperationFail = frontOperation.fail;\n    var frontOperationZFail = frontOperation.zFail;\n    var frontOperationZPass = frontOperation.zPass;\n\n    gl.stencilOpSeparate(\n      gl.FRONT,\n      frontOperationFail,\n      frontOperationZFail,\n      frontOperationZPass\n    );\n\n    var backOperation = stencilTest.backOperation;\n    var backOperationFail = backOperation.fail;\n    var backOperationZFail = backOperation.zFail;\n    var backOperationZPass = backOperation.zPass;\n\n    gl.stencilOpSeparate(\n      gl.BACK,\n      backOperationFail,\n      backOperationZFail,\n      backOperationZPass\n    );\n  }\n}\n\nfunction applySampleCoverage(gl, renderState) {\n  var sampleCoverage = renderState.sampleCoverage;\n  var enabled = sampleCoverage.enabled;\n\n  enableOrDisable(gl, gl.SAMPLE_COVERAGE, enabled);\n\n  if (enabled) {\n    gl.sampleCoverage(sampleCoverage.value, sampleCoverage.invert);\n  }\n}\n\nvar scratchViewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nfunction applyViewport(gl, renderState, passState) {\n  var viewport = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(renderState.viewport, passState.viewport);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(viewport)) {\n    viewport = scratchViewport;\n    viewport.width = passState.context.drawingBufferWidth;\n    viewport.height = passState.context.drawingBufferHeight;\n  }\n\n  passState.context.uniformState.viewport = viewport;\n  gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n}\n\nRenderState.apply = function (gl, renderState, passState) {\n  applyFrontFace(gl, renderState);\n  applyCull(gl, renderState);\n  applyLineWidth(gl, renderState);\n  applyPolygonOffset(gl, renderState);\n  applyDepthRange(gl, renderState);\n  applyDepthTest(gl, renderState);\n  applyColorMask(gl, renderState);\n  applyDepthMask(gl, renderState);\n  applyStencilMask(gl, renderState);\n  applyStencilTest(gl, renderState);\n  applySampleCoverage(gl, renderState);\n  applyScissorTest(gl, renderState, passState);\n  applyBlending(gl, renderState, passState);\n  applyViewport(gl, renderState, passState);\n};\n\nfunction createFuncs(previousState, nextState) {\n  var funcs = [];\n\n  if (previousState.frontFace !== nextState.frontFace) {\n    funcs.push(applyFrontFace);\n  }\n\n  if (\n    previousState.cull.enabled !== nextState.cull.enabled ||\n    previousState.cull.face !== nextState.cull.face\n  ) {\n    funcs.push(applyCull);\n  }\n\n  if (previousState.lineWidth !== nextState.lineWidth) {\n    funcs.push(applyLineWidth);\n  }\n\n  if (\n    previousState.polygonOffset.enabled !== nextState.polygonOffset.enabled ||\n    previousState.polygonOffset.factor !== nextState.polygonOffset.factor ||\n    previousState.polygonOffset.units !== nextState.polygonOffset.units\n  ) {\n    funcs.push(applyPolygonOffset);\n  }\n\n  if (\n    previousState.depthRange.near !== nextState.depthRange.near ||\n    previousState.depthRange.far !== nextState.depthRange.far\n  ) {\n    funcs.push(applyDepthRange);\n  }\n\n  if (\n    previousState.depthTest.enabled !== nextState.depthTest.enabled ||\n    previousState.depthTest.func !== nextState.depthTest.func\n  ) {\n    funcs.push(applyDepthTest);\n  }\n\n  if (\n    previousState.colorMask.red !== nextState.colorMask.red ||\n    previousState.colorMask.green !== nextState.colorMask.green ||\n    previousState.colorMask.blue !== nextState.colorMask.blue ||\n    previousState.colorMask.alpha !== nextState.colorMask.alpha\n  ) {\n    funcs.push(applyColorMask);\n  }\n\n  if (previousState.depthMask !== nextState.depthMask) {\n    funcs.push(applyDepthMask);\n  }\n\n  if (previousState.stencilMask !== nextState.stencilMask) {\n    funcs.push(applyStencilMask);\n  }\n\n  if (\n    previousState.stencilTest.enabled !== nextState.stencilTest.enabled ||\n    previousState.stencilTest.frontFunction !==\n      nextState.stencilTest.frontFunction ||\n    previousState.stencilTest.backFunction !==\n      nextState.stencilTest.backFunction ||\n    previousState.stencilTest.reference !== nextState.stencilTest.reference ||\n    previousState.stencilTest.mask !== nextState.stencilTest.mask ||\n    previousState.stencilTest.frontOperation.fail !==\n      nextState.stencilTest.frontOperation.fail ||\n    previousState.stencilTest.frontOperation.zFail !==\n      nextState.stencilTest.frontOperation.zFail ||\n    previousState.stencilTest.backOperation.fail !==\n      nextState.stencilTest.backOperation.fail ||\n    previousState.stencilTest.backOperation.zFail !==\n      nextState.stencilTest.backOperation.zFail ||\n    previousState.stencilTest.backOperation.zPass !==\n      nextState.stencilTest.backOperation.zPass\n  ) {\n    funcs.push(applyStencilTest);\n  }\n\n  if (\n    previousState.sampleCoverage.enabled !== nextState.sampleCoverage.enabled ||\n    previousState.sampleCoverage.value !== nextState.sampleCoverage.value ||\n    previousState.sampleCoverage.invert !== nextState.sampleCoverage.invert\n  ) {\n    funcs.push(applySampleCoverage);\n  }\n\n  return funcs;\n}\n\nRenderState.partialApply = function (\n  gl,\n  previousRenderState,\n  renderState,\n  previousPassState,\n  passState,\n  clear\n) {\n  if (previousRenderState !== renderState) {\n    // When a new render state is applied, instead of making WebGL calls for all the states or first\n    // comparing the states one-by-one with the previous state (basically a linear search), we take\n    // advantage of RenderState\'s immutability, and store a dynamically populated sparse data structure\n    // containing functions that make the minimum number of WebGL calls when transitioning from one state\n    // to the other.  In practice, this works well since state-to-state transitions generally only require a\n    // few WebGL calls, especially if commands are stored by state.\n    var funcs = renderState._applyFunctions[previousRenderState.id];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(funcs)) {\n      funcs = createFuncs(previousRenderState, renderState);\n      renderState._applyFunctions[previousRenderState.id] = funcs;\n    }\n\n    var len = funcs.length;\n    for (var i = 0; i < len; ++i) {\n      funcs[i](gl, renderState);\n    }\n  }\n\n  var previousScissorTest = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(previousPassState.scissorTest)\n    ? previousPassState.scissorTest\n    : previousRenderState.scissorTest;\n  var scissorTest = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(passState.scissorTest)\n    ? passState.scissorTest\n    : renderState.scissorTest;\n\n  // Our scissor rectangle can get out of sync with the GL scissor rectangle on clears.\n  // Seems to be a problem only on ANGLE. See https://github.com/CesiumGS/cesium/issues/2994\n  if (previousScissorTest !== scissorTest || clear) {\n    applyScissorTest(gl, renderState, passState);\n  }\n\n  var previousBlendingEnabled = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(previousPassState.blendingEnabled)\n    ? previousPassState.blendingEnabled\n    : previousRenderState.blending.enabled;\n  var blendingEnabled = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(passState.blendingEnabled)\n    ? passState.blendingEnabled\n    : renderState.blending.enabled;\n  if (\n    previousBlendingEnabled !== blendingEnabled ||\n    (blendingEnabled && previousRenderState.blending !== renderState.blending)\n  ) {\n    applyBlending(gl, renderState, passState);\n  }\n\n  if (\n    previousRenderState !== renderState ||\n    previousPassState !== passState ||\n    previousPassState.context !== passState.context\n  ) {\n    applyViewport(gl, renderState, passState);\n  }\n};\n\nRenderState.getState = function (renderState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(renderState)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("renderState is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return {\n    frontFace: renderState.frontFace,\n    cull: {\n      enabled: renderState.cull.enabled,\n      face: renderState.cull.face,\n    },\n    lineWidth: renderState.lineWidth,\n    polygonOffset: {\n      enabled: renderState.polygonOffset.enabled,\n      factor: renderState.polygonOffset.factor,\n      units: renderState.polygonOffset.units,\n    },\n    scissorTest: {\n      enabled: renderState.scissorTest.enabled,\n      rectangle: _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(renderState.scissorTest.rectangle),\n    },\n    depthRange: {\n      near: renderState.depthRange.near,\n      far: renderState.depthRange.far,\n    },\n    depthTest: {\n      enabled: renderState.depthTest.enabled,\n      func: renderState.depthTest.func,\n    },\n    colorMask: {\n      red: renderState.colorMask.red,\n      green: renderState.colorMask.green,\n      blue: renderState.colorMask.blue,\n      alpha: renderState.colorMask.alpha,\n    },\n    depthMask: renderState.depthMask,\n    stencilMask: renderState.stencilMask,\n    blending: {\n      enabled: renderState.blending.enabled,\n      color: _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(renderState.blending.color),\n      equationRgb: renderState.blending.equationRgb,\n      equationAlpha: renderState.blending.equationAlpha,\n      functionSourceRgb: renderState.blending.functionSourceRgb,\n      functionSourceAlpha: renderState.blending.functionSourceAlpha,\n      functionDestinationRgb: renderState.blending.functionDestinationRgb,\n      functionDestinationAlpha: renderState.blending.functionDestinationAlpha,\n    },\n    stencilTest: {\n      enabled: renderState.stencilTest.enabled,\n      frontFunction: renderState.stencilTest.frontFunction,\n      backFunction: renderState.stencilTest.backFunction,\n      reference: renderState.stencilTest.reference,\n      mask: renderState.stencilTest.mask,\n      frontOperation: {\n        fail: renderState.stencilTest.frontOperation.fail,\n        zFail: renderState.stencilTest.frontOperation.zFail,\n        zPass: renderState.stencilTest.frontOperation.zPass,\n      },\n      backOperation: {\n        fail: renderState.stencilTest.backOperation.fail,\n        zFail: renderState.stencilTest.backOperation.zFail,\n        zPass: renderState.stencilTest.backOperation.zPass,\n      },\n    },\n    sampleCoverage: {\n      enabled: renderState.sampleCoverage.enabled,\n      value: renderState.sampleCoverage.value,\n      invert: renderState.sampleCoverage.invert,\n    },\n    viewport: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(renderState.viewport)\n      ? _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(renderState.viewport)\n      : undefined,\n  };\n};\n/* harmony default export */ __webpack_exports__["Z"] = (RenderState);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10667\n')},17941:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _ContextLimits_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20521);\n/* harmony import */ var _RenderbufferFormat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89032);\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nfunction Renderbuffer(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("options.context", options.context);\n  //>>includeEnd(\'debug\');\n\n  var context = options.context;\n  var gl = context._gl;\n  var maximumRenderbufferSize = _ContextLimits_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].maximumRenderbufferSize */ .Z.maximumRenderbufferSize;\n\n  var format = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.format, _RenderbufferFormat_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].RGBA4 */ .Z.RGBA4);\n  var width = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.width) ? options.width : gl.drawingBufferWidth;\n  var height = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.height)\n    ? options.height\n    : gl.drawingBufferHeight;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!_RenderbufferFormat_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].validate */ .Z.validate(format)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("Invalid format.");\n  }\n\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("width", width, 0);\n\n  if (width > maximumRenderbufferSize) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Width must be less than or equal to the maximum renderbuffer size (" +\n        maximumRenderbufferSize +\n        ").  Check maximumRenderbufferSize."\n    );\n  }\n\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("height", height, 0);\n\n  if (height > maximumRenderbufferSize) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "Height must be less than or equal to the maximum renderbuffer size (" +\n        maximumRenderbufferSize +\n        ").  Check maximumRenderbufferSize."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this._gl = gl;\n  this._format = format;\n  this._width = width;\n  this._height = height;\n  this._renderbuffer = this._gl.createRenderbuffer();\n\n  gl.bindRenderbuffer(gl.RENDERBUFFER, this._renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n}\n\nObject.defineProperties(Renderbuffer.prototype, {\n  format: {\n    get: function () {\n      return this._format;\n    },\n  },\n  width: {\n    get: function () {\n      return this._width;\n    },\n  },\n  height: {\n    get: function () {\n      return this._height;\n    },\n  },\n});\n\nRenderbuffer.prototype._getRenderbuffer = function () {\n  return this._renderbuffer;\n};\n\nRenderbuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nRenderbuffer.prototype.destroy = function () {\n  this._gl.deleteRenderbuffer(this._renderbuffer);\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Renderbuffer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc5NDEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUNjO0FBQ1Y7QUFDWTtBQUNFO0FBQ1I7QUFDVTs7QUFFekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDBFQUFZLFVBQVUsZ0dBQXlCOztBQUUzRDtBQUNBLEVBQUUsK0VBQWE7QUFDZjs7QUFFQTtBQUNBO0FBQ0EsZ0NBQWdDLGtIQUFxQzs7QUFFckUsZUFBZSwwRUFBWSxpQkFBaUIsbUZBQXdCO0FBQ3BFLGNBQWMscUVBQU87QUFDckIsZUFBZSxxRUFBTztBQUN0QjtBQUNBOztBQUVBO0FBQ0EsT0FBTyx5RkFBMkI7QUFDbEMsY0FBYyx3RUFBYztBQUM1Qjs7QUFFQSxFQUFFLG1IQUErQjs7QUFFakM7QUFDQSxjQUFjLHdFQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxtSEFBK0I7O0FBRWpDO0FBQ0EsY0FBYyx3RUFBYztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUywyRUFBYTtBQUN0QjtBQUNBLHlEQUFlLFlBQVksRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9SZW5kZXJlci9SZW5kZXJidWZmZXIuanM/YTU1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hlY2sgZnJvbSBcIi4uL0NvcmUvQ2hlY2suanNcIjtcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4uL0NvcmUvZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgZGVzdHJveU9iamVjdCBmcm9tIFwiLi4vQ29yZS9kZXN0cm95T2JqZWN0LmpzXCI7XG5pbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IuanNcIjtcbmltcG9ydCBDb250ZXh0TGltaXRzIGZyb20gXCIuL0NvbnRleHRMaW1pdHMuanNcIjtcbmltcG9ydCBSZW5kZXJidWZmZXJGb3JtYXQgZnJvbSBcIi4vUmVuZGVyYnVmZmVyRm9ybWF0LmpzXCI7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gUmVuZGVyYnVmZmVyKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcblxuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay5kZWZpbmVkKFwib3B0aW9ucy5jb250ZXh0XCIsIG9wdGlvbnMuY29udGV4dCk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBjb250ZXh0ID0gb3B0aW9ucy5jb250ZXh0O1xuICB2YXIgZ2wgPSBjb250ZXh0Ll9nbDtcbiAgdmFyIG1heGltdW1SZW5kZXJidWZmZXJTaXplID0gQ29udGV4dExpbWl0cy5tYXhpbXVtUmVuZGVyYnVmZmVyU2l6ZTtcblxuICB2YXIgZm9ybWF0ID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMuZm9ybWF0LCBSZW5kZXJidWZmZXJGb3JtYXQuUkdCQTQpO1xuICB2YXIgd2lkdGggPSBkZWZpbmVkKG9wdGlvbnMud2lkdGgpID8gb3B0aW9ucy53aWR0aCA6IGdsLmRyYXdpbmdCdWZmZXJXaWR0aDtcbiAgdmFyIGhlaWdodCA9IGRlZmluZWQob3B0aW9ucy5oZWlnaHQpXG4gICAgPyBvcHRpb25zLmhlaWdodFxuICAgIDogZ2wuZHJhd2luZ0J1ZmZlckhlaWdodDtcblxuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIVJlbmRlcmJ1ZmZlckZvcm1hdC52YWxpZGF0ZShmb3JtYXQpKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwiSW52YWxpZCBmb3JtYXQuXCIpO1xuICB9XG5cbiAgQ2hlY2sudHlwZU9mLm51bWJlci5ncmVhdGVyVGhhbihcIndpZHRoXCIsIHdpZHRoLCAwKTtcblxuICBpZiAod2lkdGggPiBtYXhpbXVtUmVuZGVyYnVmZmVyU2l6ZSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIFwiV2lkdGggbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIG1heGltdW0gcmVuZGVyYnVmZmVyIHNpemUgKFwiICtcbiAgICAgICAgbWF4aW11bVJlbmRlcmJ1ZmZlclNpemUgK1xuICAgICAgICBcIikuICBDaGVjayBtYXhpbXVtUmVuZGVyYnVmZmVyU2l6ZS5cIlxuICAgICk7XG4gIH1cblxuICBDaGVjay50eXBlT2YubnVtYmVyLmdyZWF0ZXJUaGFuKFwiaGVpZ2h0XCIsIGhlaWdodCwgMCk7XG5cbiAgaWYgKGhlaWdodCA+IG1heGltdW1SZW5kZXJidWZmZXJTaXplKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFxuICAgICAgXCJIZWlnaHQgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIG1heGltdW0gcmVuZGVyYnVmZmVyIHNpemUgKFwiICtcbiAgICAgICAgbWF4aW11bVJlbmRlcmJ1ZmZlclNpemUgK1xuICAgICAgICBcIikuICBDaGVjayBtYXhpbXVtUmVuZGVyYnVmZmVyU2l6ZS5cIlxuICAgICk7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdGhpcy5fZ2wgPSBnbDtcbiAgdGhpcy5fZm9ybWF0ID0gZm9ybWF0O1xuICB0aGlzLl93aWR0aCA9IHdpZHRoO1xuICB0aGlzLl9oZWlnaHQgPSBoZWlnaHQ7XG4gIHRoaXMuX3JlbmRlcmJ1ZmZlciA9IHRoaXMuX2dsLmNyZWF0ZVJlbmRlcmJ1ZmZlcigpO1xuXG4gIGdsLmJpbmRSZW5kZXJidWZmZXIoZ2wuUkVOREVSQlVGRkVSLCB0aGlzLl9yZW5kZXJidWZmZXIpO1xuICBnbC5yZW5kZXJidWZmZXJTdG9yYWdlKGdsLlJFTkRFUkJVRkZFUiwgZm9ybWF0LCB3aWR0aCwgaGVpZ2h0KTtcbiAgZ2wuYmluZFJlbmRlcmJ1ZmZlcihnbC5SRU5ERVJCVUZGRVIsIG51bGwpO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhSZW5kZXJidWZmZXIucHJvdG90eXBlLCB7XG4gIGZvcm1hdDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2Zvcm1hdDtcbiAgICB9LFxuICB9LFxuICB3aWR0aDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3dpZHRoO1xuICAgIH0sXG4gIH0sXG4gIGhlaWdodDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2hlaWdodDtcbiAgICB9LFxuICB9LFxufSk7XG5cblJlbmRlcmJ1ZmZlci5wcm90b3R5cGUuX2dldFJlbmRlcmJ1ZmZlciA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuX3JlbmRlcmJ1ZmZlcjtcbn07XG5cblJlbmRlcmJ1ZmZlci5wcm90b3R5cGUuaXNEZXN0cm95ZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmYWxzZTtcbn07XG5cblJlbmRlcmJ1ZmZlci5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fZ2wuZGVsZXRlUmVuZGVyYnVmZmVyKHRoaXMuX3JlbmRlcmJ1ZmZlcik7XG4gIHJldHVybiBkZXN0cm95T2JqZWN0KHRoaXMpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFJlbmRlcmJ1ZmZlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17941\n')},89032:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52200);\n\n\n/**\n * @private\n */\nvar RenderbufferFormat = {\n  RGBA4: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RGBA4 */ .Z.RGBA4,\n  RGB5_A1: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RGB5_A1 */ .Z.RGB5_A1,\n  RGB565: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].RGB565 */ .Z.RGB565,\n  DEPTH_COMPONENT16: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].DEPTH_COMPONENT16 */ .Z.DEPTH_COMPONENT16,\n  STENCIL_INDEX8: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].STENCIL_INDEX8 */ .Z.STENCIL_INDEX8,\n  DEPTH_STENCIL: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].DEPTH_STENCIL */ .Z.DEPTH_STENCIL,\n\n  validate: function (renderbufferFormat) {\n    return (\n      renderbufferFormat === RenderbufferFormat.RGBA4 ||\n      renderbufferFormat === RenderbufferFormat.RGB5_A1 ||\n      renderbufferFormat === RenderbufferFormat.RGB565 ||\n      renderbufferFormat === RenderbufferFormat.DEPTH_COMPONENT16 ||\n      renderbufferFormat === RenderbufferFormat.STENCIL_INDEX8 ||\n      renderbufferFormat === RenderbufferFormat.DEPTH_STENCIL\n    );\n  },\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(RenderbufferFormat));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkwMzIuanMiLCJtYXBwaW5ncyI6IjtBQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLG9GQUFvQjtBQUM3QixXQUFXLHdGQUFzQjtBQUNqQyxVQUFVLHNGQUFxQjtBQUMvQixxQkFBcUIsNEdBQWdDO0FBQ3JELGtCQUFrQixzR0FBNkI7QUFDL0MsaUJBQWlCLG9HQUE0Qjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EseURBQWUsaUNBQWlDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvUmVuZGVyZXIvUmVuZGVyYnVmZmVyRm9ybWF0LmpzP2ViMzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdlYkdMQ29uc3RhbnRzIGZyb20gXCIuLi9Db3JlL1dlYkdMQ29uc3RhbnRzLmpzXCI7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xudmFyIFJlbmRlcmJ1ZmZlckZvcm1hdCA9IHtcbiAgUkdCQTQ6IFdlYkdMQ29uc3RhbnRzLlJHQkE0LFxuICBSR0I1X0ExOiBXZWJHTENvbnN0YW50cy5SR0I1X0ExLFxuICBSR0I1NjU6IFdlYkdMQ29uc3RhbnRzLlJHQjU2NSxcbiAgREVQVEhfQ09NUE9ORU5UMTY6IFdlYkdMQ29uc3RhbnRzLkRFUFRIX0NPTVBPTkVOVDE2LFxuICBTVEVOQ0lMX0lOREVYODogV2ViR0xDb25zdGFudHMuU1RFTkNJTF9JTkRFWDgsXG4gIERFUFRIX1NURU5DSUw6IFdlYkdMQ29uc3RhbnRzLkRFUFRIX1NURU5DSUwsXG5cbiAgdmFsaWRhdGU6IGZ1bmN0aW9uIChyZW5kZXJidWZmZXJGb3JtYXQpIHtcbiAgICByZXR1cm4gKFxuICAgICAgcmVuZGVyYnVmZmVyRm9ybWF0ID09PSBSZW5kZXJidWZmZXJGb3JtYXQuUkdCQTQgfHxcbiAgICAgIHJlbmRlcmJ1ZmZlckZvcm1hdCA9PT0gUmVuZGVyYnVmZmVyRm9ybWF0LlJHQjVfQTEgfHxcbiAgICAgIHJlbmRlcmJ1ZmZlckZvcm1hdCA9PT0gUmVuZGVyYnVmZmVyRm9ybWF0LlJHQjU2NSB8fFxuICAgICAgcmVuZGVyYnVmZmVyRm9ybWF0ID09PSBSZW5kZXJidWZmZXJGb3JtYXQuREVQVEhfQ09NUE9ORU5UMTYgfHxcbiAgICAgIHJlbmRlcmJ1ZmZlckZvcm1hdCA9PT0gUmVuZGVyYnVmZmVyRm9ybWF0LlNURU5DSUxfSU5ERVg4IHx8XG4gICAgICByZW5kZXJidWZmZXJGb3JtYXQgPT09IFJlbmRlcmJ1ZmZlckZvcm1hdC5ERVBUSF9TVEVOQ0lMXG4gICAgKTtcbiAgfSxcbn07XG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKFJlbmRlcmJ1ZmZlckZvcm1hdCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///89032\n')},87721:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12572);\n/* harmony import */ var _TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(42246);\n/* harmony import */ var _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80188);\n/* harmony import */ var _TextureWrap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(88453);\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nfunction Sampler(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var wrapS = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.wrapS, _TextureWrap_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE);\n  var wrapT = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.wrapT, _TextureWrap_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE);\n  var minificationFilter = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    options.minificationFilter,\n    _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].LINEAR */ .Z.LINEAR\n  );\n  var magnificationFilter = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    options.magnificationFilter,\n    _TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].LINEAR */ .Z.LINEAR\n  );\n  var maximumAnisotropy = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.maximumAnisotropy)\n    ? options.maximumAnisotropy\n    : 1.0;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!_TextureWrap_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].validate */ .Z.validate(wrapS)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("Invalid sampler.wrapS.");\n  }\n\n  if (!_TextureWrap_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].validate */ .Z.validate(wrapT)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("Invalid sampler.wrapT.");\n  }\n\n  if (!_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].validate */ .Z.validate(minificationFilter)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("Invalid sampler.minificationFilter.");\n  }\n\n  if (!_TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].validate */ .Z.validate(magnificationFilter)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("Invalid sampler.magnificationFilter.");\n  }\n\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals(\n    "maximumAnisotropy",\n    maximumAnisotropy,\n    1.0\n  );\n  //>>includeEnd(\'debug\');\n\n  this._wrapS = wrapS;\n  this._wrapT = wrapT;\n  this._minificationFilter = minificationFilter;\n  this._magnificationFilter = magnificationFilter;\n  this._maximumAnisotropy = maximumAnisotropy;\n}\n\nObject.defineProperties(Sampler.prototype, {\n  wrapS: {\n    get: function () {\n      return this._wrapS;\n    },\n  },\n  wrapT: {\n    get: function () {\n      return this._wrapT;\n    },\n  },\n  minificationFilter: {\n    get: function () {\n      return this._minificationFilter;\n    },\n  },\n  magnificationFilter: {\n    get: function () {\n      return this._magnificationFilter;\n    },\n  },\n  maximumAnisotropy: {\n    get: function () {\n      return this._maximumAnisotropy;\n    },\n  },\n});\n\nSampler.equals = function (left, right) {\n  return (\n    left === right ||\n    ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(left) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(right) &&\n      left._wrapS === right._wrapS &&\n      left._wrapT === right._wrapT &&\n      left._minificationFilter === right._minificationFilter &&\n      left._magnificationFilter === right._magnificationFilter &&\n      left._maximumAnisotropy === right._maximumAnisotropy)\n  );\n};\n\nSampler.NEAREST = Object.freeze(\n  new Sampler({\n    wrapS: _TextureWrap_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE,\n    wrapT: _TextureWrap_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE,\n    minificationFilter: _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].NEAREST */ .Z.NEAREST,\n    magnificationFilter: _TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].NEAREST */ .Z.NEAREST,\n  })\n);\n/* harmony default export */ __webpack_exports__["Z"] = (Sampler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODc3MjEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUNjO0FBQ1Y7QUFDYztBQUNrQjtBQUNGO0FBQzVCOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMEVBQVksVUFBVSxnR0FBeUI7O0FBRTNELGNBQWMsMEVBQVksZ0JBQWdCLDRGQUF5QjtBQUNuRSxjQUFjLDBFQUFZLGdCQUFnQiw0RkFBeUI7QUFDbkUsMkJBQTJCLDBFQUFZO0FBQ3ZDO0FBQ0EsSUFBSSw0RkFBZ0M7QUFDcEM7QUFDQSw0QkFBNEIsMEVBQVk7QUFDeEM7QUFDQSxJQUFJLDZGQUFpQztBQUNyQztBQUNBLDBCQUEwQixxRUFBTztBQUNqQztBQUNBOztBQUVBO0FBQ0EsT0FBTyxrRkFBb0I7QUFDM0IsY0FBYyx3RUFBYztBQUM1Qjs7QUFFQSxPQUFPLGtGQUFvQjtBQUMzQixjQUFjLHdFQUFjO0FBQzVCOztBQUVBLE9BQU8sZ0dBQWtDO0FBQ3pDLGNBQWMsd0VBQWM7QUFDNUI7O0FBRUEsT0FBTyxpR0FBbUM7QUFDMUMsY0FBYyx3RUFBYztBQUM1Qjs7QUFFQSxFQUFFLG1JQUF1QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLEtBQUsscUVBQU87QUFDWixNQUFNLHFFQUFPO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsNEZBQXlCO0FBQ3BDLFdBQVcsNEZBQXlCO0FBQ3BDLHdCQUF3Qiw4RkFBaUM7QUFDekQseUJBQXlCLCtGQUFrQztBQUMzRCxHQUFHO0FBQ0g7QUFDQSx5REFBZSxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvUmVuZGVyZXIvU2FtcGxlci5qcz9kZGYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGVjayBmcm9tIFwiLi4vQ29yZS9DaGVjay5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvci5qc1wiO1xuaW1wb3J0IFRleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyIGZyb20gXCIuL1RleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyLmpzXCI7XG5pbXBvcnQgVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlciBmcm9tIFwiLi9UZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyLmpzXCI7XG5pbXBvcnQgVGV4dHVyZVdyYXAgZnJvbSBcIi4vVGV4dHVyZVdyYXAuanNcIjtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBTYW1wbGVyKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcblxuICB2YXIgd3JhcFMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy53cmFwUywgVGV4dHVyZVdyYXAuQ0xBTVBfVE9fRURHRSk7XG4gIHZhciB3cmFwVCA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLndyYXBULCBUZXh0dXJlV3JhcC5DTEFNUF9UT19FREdFKTtcbiAgdmFyIG1pbmlmaWNhdGlvbkZpbHRlciA9IGRlZmF1bHRWYWx1ZShcbiAgICBvcHRpb25zLm1pbmlmaWNhdGlvbkZpbHRlcixcbiAgICBUZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyLkxJTkVBUlxuICApO1xuICB2YXIgbWFnbmlmaWNhdGlvbkZpbHRlciA9IGRlZmF1bHRWYWx1ZShcbiAgICBvcHRpb25zLm1hZ25pZmljYXRpb25GaWx0ZXIsXG4gICAgVGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXIuTElORUFSXG4gICk7XG4gIHZhciBtYXhpbXVtQW5pc290cm9weSA9IGRlZmluZWQob3B0aW9ucy5tYXhpbXVtQW5pc290cm9weSlcbiAgICA/IG9wdGlvbnMubWF4aW11bUFuaXNvdHJvcHlcbiAgICA6IDEuMDtcblxuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBpZiAoIVRleHR1cmVXcmFwLnZhbGlkYXRlKHdyYXBTKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIkludmFsaWQgc2FtcGxlci53cmFwUy5cIik7XG4gIH1cblxuICBpZiAoIVRleHR1cmVXcmFwLnZhbGlkYXRlKHdyYXBUKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIkludmFsaWQgc2FtcGxlci53cmFwVC5cIik7XG4gIH1cblxuICBpZiAoIVRleHR1cmVNaW5pZmljYXRpb25GaWx0ZXIudmFsaWRhdGUobWluaWZpY2F0aW9uRmlsdGVyKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIkludmFsaWQgc2FtcGxlci5taW5pZmljYXRpb25GaWx0ZXIuXCIpO1xuICB9XG5cbiAgaWYgKCFUZXh0dXJlTWFnbmlmaWNhdGlvbkZpbHRlci52YWxpZGF0ZShtYWduaWZpY2F0aW9uRmlsdGVyKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcIkludmFsaWQgc2FtcGxlci5tYWduaWZpY2F0aW9uRmlsdGVyLlwiKTtcbiAgfVxuXG4gIENoZWNrLnR5cGVPZi5udW1iZXIuZ3JlYXRlclRoYW5PckVxdWFscyhcbiAgICBcIm1heGltdW1Bbmlzb3Ryb3B5XCIsXG4gICAgbWF4aW11bUFuaXNvdHJvcHksXG4gICAgMS4wXG4gICk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHRoaXMuX3dyYXBTID0gd3JhcFM7XG4gIHRoaXMuX3dyYXBUID0gd3JhcFQ7XG4gIHRoaXMuX21pbmlmaWNhdGlvbkZpbHRlciA9IG1pbmlmaWNhdGlvbkZpbHRlcjtcbiAgdGhpcy5fbWFnbmlmaWNhdGlvbkZpbHRlciA9IG1hZ25pZmljYXRpb25GaWx0ZXI7XG4gIHRoaXMuX21heGltdW1Bbmlzb3Ryb3B5ID0gbWF4aW11bUFuaXNvdHJvcHk7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFNhbXBsZXIucHJvdG90eXBlLCB7XG4gIHdyYXBTOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fd3JhcFM7XG4gICAgfSxcbiAgfSxcbiAgd3JhcFQ6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl93cmFwVDtcbiAgICB9LFxuICB9LFxuICBtaW5pZmljYXRpb25GaWx0ZXI6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9taW5pZmljYXRpb25GaWx0ZXI7XG4gICAgfSxcbiAgfSxcbiAgbWFnbmlmaWNhdGlvbkZpbHRlcjoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX21hZ25pZmljYXRpb25GaWx0ZXI7XG4gICAgfSxcbiAgfSxcbiAgbWF4aW11bUFuaXNvdHJvcHk6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9tYXhpbXVtQW5pc290cm9weTtcbiAgICB9LFxuICB9LFxufSk7XG5cblNhbXBsZXIuZXF1YWxzID0gZnVuY3Rpb24gKGxlZnQsIHJpZ2h0KSB7XG4gIHJldHVybiAoXG4gICAgbGVmdCA9PT0gcmlnaHQgfHxcbiAgICAoZGVmaW5lZChsZWZ0KSAmJlxuICAgICAgZGVmaW5lZChyaWdodCkgJiZcbiAgICAgIGxlZnQuX3dyYXBTID09PSByaWdodC5fd3JhcFMgJiZcbiAgICAgIGxlZnQuX3dyYXBUID09PSByaWdodC5fd3JhcFQgJiZcbiAgICAgIGxlZnQuX21pbmlmaWNhdGlvbkZpbHRlciA9PT0gcmlnaHQuX21pbmlmaWNhdGlvbkZpbHRlciAmJlxuICAgICAgbGVmdC5fbWFnbmlmaWNhdGlvbkZpbHRlciA9PT0gcmlnaHQuX21hZ25pZmljYXRpb25GaWx0ZXIgJiZcbiAgICAgIGxlZnQuX21heGltdW1Bbmlzb3Ryb3B5ID09PSByaWdodC5fbWF4aW11bUFuaXNvdHJvcHkpXG4gICk7XG59O1xuXG5TYW1wbGVyLk5FQVJFU1QgPSBPYmplY3QuZnJlZXplKFxuICBuZXcgU2FtcGxlcih7XG4gICAgd3JhcFM6IFRleHR1cmVXcmFwLkNMQU1QX1RPX0VER0UsXG4gICAgd3JhcFQ6IFRleHR1cmVXcmFwLkNMQU1QX1RPX0VER0UsXG4gICAgbWluaWZpY2F0aW9uRmlsdGVyOiBUZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyLk5FQVJFU1QsXG4gICAgbWFnbmlmaWNhdGlvbkZpbHRlcjogVGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXIuTkVBUkVTVCxcbiAgfSlcbik7XG5leHBvcnQgZGVmYXVsdCBTYW1wbGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///87721\n')},62099:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ShaderBuilder; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_clone_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83856);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87826);\n/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(46588);\n/* harmony import */ var _ShaderSource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(53642);\n\n\n\n\n\n\n\n\n\n/**\n * An object that makes it easier to build the text of a {@link ShaderProgram}. This tracks GLSL code for both the vertex shader and the fragment shader.\n * <p>\n * For vertex shaders, the shader builder tracks a list of <code>#defines</code>,\n * a list of attributes, a list of uniforms, and a list of shader lines. It also\n * tracks the location of each attribute so the caller can easily build the {@link VertexArray}\n * </p>\n * <p>\n * For fragment shaders, the shader builder tracks a list of <code>#defines</code>,\n * a list of attributes, a list of uniforms, and a list of shader lines.\n * </p>\n *\n * @alias ShaderBuilder\n * @constructor\n *\n * @example\n * var shaderBuilder = new ShaderBuilder();\n * shaderBuilder.addDefine("SOLID_COLOR", undefined, ShaderDestination.FRAGMENT);\n * shaderBuilder.addUniform("vec3", "u_color", ShaderDestination.FRAGMENT);\n * shaderBuilder.addVarying("vec3", v_color");\n * // These locations can be used when creating the VertexArray\n * var positionLocation = shaderBuilder.addPositionAttribute("vec3", "a_position");\n * var colorLocation = shaderBuilder.addAttribute("vec3", "a_color");\n * shaderBuilder.addVertexLines([\n *  "void main()",\n *  "{",\n *  "    v_color = a_color;",\n *  "    gl_Position = vec4(a_position, 1.0);",\n *  "}"\n * ]);\n * shaderBuilder.addFragmentLines([\n *  "void main()",\n *  "{",\n *  "    #ifdef SOLID_COLOR",\n *  "    gl_FragColor = vec4(u_color, 1.0);",\n *  "    #else",\n *  "    gl_FragColor = vec4(v_color, 1.0);",\n *  "    #endif",\n *  "}"\n * ]);\n * var shaderProgram = shaderBuilder.build(context);\n *\n * @private\n */\nfunction ShaderBuilder() {\n  // Some WebGL implementations require attribute 0 to always\n  // be active, so the position attribute is tracked separately\n  this._positionAttributeLine = undefined;\n  this._nextAttributeLocation = 1;\n  this._attributeLocations = {};\n  this._attributeLines = [];\n\n  this._vertexShaderParts = {\n    defineLines: [],\n    uniformLines: [],\n    shaderLines: [],\n    varyingLines: [],\n  };\n  this._fragmentShaderParts = {\n    defineLines: [],\n    uniformLines: [],\n    shaderLines: [],\n    varyingLines: [],\n  };\n}\n\nObject.defineProperties(ShaderBuilder.prototype, {\n  /**\n   * Get a dictionary of attribute names to the integer location in\n   * the vertex shader.\n   *\n   * @memberof ShaderBuilder.prototype\n   * @type {Object.<String, Number>}\n   * @readonly\n   * @private\n   */\n  attributeLocations: {\n    get: function () {\n      return this._attributeLocations;\n    },\n  },\n});\n\n/**\n * Add a <code>#define</code> macro to one or both of the shaders. These lines\n * will appear at the top of the final shader source.\n *\n * @param {String} identifier An identifier for the macro. Identifiers must use uppercase letters with underscores to be consistent with Cesium\'s style guide.\n * @param {String} [value] The value of the macro. If undefined, the define will not include a value. The value will be converted to GLSL code via <code>toString()</code>\n * @param {ShaderDestination} [destination=ShaderDestination.BOTH] Whether the define appears in the vertex shader, the fragment shader, or both.\n *\n * @example\n * // creates the line "#define ENABLE_LIGHTING" in both shaders\n * shaderBuilder.addDefine("ENABLE_LIGHTING");\n * // creates the line "#define PI 3.141592" in the fragment shader\n * shaderBuilder.addDefine("PI", 3.141593, ShaderDestination.FRAGMENT);\n */\nShaderBuilder.prototype.addDefine = function (identifier, value, destination) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("identifier", identifier);\n  //>>includeEnd(\'debug\');\n\n  destination = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(destination, _ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].BOTH */ .Z.BOTH);\n\n  // The ShaderSource created in build() will add the #define part\n  var line = identifier;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(value)) {\n    line += " " + value.toString();\n  }\n\n  if (_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].includesVertexShader */ .Z.includesVertexShader(destination)) {\n    this._vertexShaderParts.defineLines.push(line);\n  }\n\n  if (_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].includesFragmentShader */ .Z.includesFragmentShader(destination)) {\n    this._fragmentShaderParts.defineLines.push(line);\n  }\n};\n\n/**\n * Add a uniform declaration to one or both of the shaders. These lines\n * will appear grouped near the top of the final shader source.\n *\n * @param {String} type The GLSL type of the uniform.\n * @param {String} identifier An identifier for the uniform. Identifiers must begin with <code>u_</code> to be consistent with Cesium\'s style guide.\n * @param {ShaderDestination} [destination=ShaderDestination.BOTH] Whether the uniform appears in the vertex shader, the fragment shader, or both.\n *\n * @example\n * // creates the line "uniform vec3 u_resolution;"\n * shaderBuilder.addUniform("vec3", "u_resolution", ShaderDestination.FRAGMENT);\n * // creates the line "uniform float u_time;" in both shaders\n * shaderBuilder.addDefine("float", "u_time", ShaderDestination.BOTH);\n */\nShaderBuilder.prototype.addUniform = function (type, identifier, destination) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("type", type);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("identifier", identifier);\n  //>>includeEnd(\'debug\');\n\n  destination = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(destination, _ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].BOTH */ .Z.BOTH);\n  var line = "uniform " + type + " " + identifier + ";";\n\n  if (_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].includesVertexShader */ .Z.includesVertexShader(destination)) {\n    this._vertexShaderParts.uniformLines.push(line);\n  }\n\n  if (_ShaderDestination_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].includesFragmentShader */ .Z.includesFragmentShader(destination)) {\n    this._fragmentShaderParts.uniformLines.push(line);\n  }\n};\n\n/**\n * Add a position attribute declaration to the vertex shader. These lines\n * will appear grouped near the top of the final shader source.\n * <p>\n * Some WebGL implementations require attribute 0 to be enabled, so this is\n * reserved for the position attribute. For all other attributes, see\n * {@link ShaderBuilder#addAttribute}\n * </p>\n *\n * @param {String} type The GLSL type of the attribute\n * @param {String} identifier An identifier for the attribute. Identifiers must begin with <code>a_</code> to be consistent with Cesium\'s style guide.\n * @return {Number} The integer location of the attribute. This location can be used when creating attributes for a {@link VertexArray}. This will always be 0.\n *\n * @example\n * // creates the line "attribute vec3 a_position;"\n * shaderBuilder.setPositionAttribute("vec3", "a_position");\n */\nShaderBuilder.prototype.setPositionAttribute = function (type, identifier) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("type", type);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("identifier", identifier);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this._positionAttributeLine)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "setPositionAttribute() must be called exactly once for the attribute used for gl_Position. For other attributes, use addAttribute()"\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this._positionAttributeLine = "attribute " + type + " " + identifier + ";";\n\n  // Some WebGL implementations require attribute 0 to always be active, so\n  // this builder assumes the position will always go in location 0\n  this._attributeLocations[identifier] = 0;\n  return 0;\n};\n\n/**\n * Add an attribute declaration to the vertex shader. These lines\n * will appear grouped near the top of the final shader source.\n * <p>\n * Some WebGL implementations require attribute 0 to be enabled, so this is\n * reserved for the position attribute. See {@link ShaderBuilder#setPositionAttribute}\n * </p>\n *\n * @param {String} type The GLSL type of the attribute\n * @param {String} identifier An identifier for the attribute. Identifiers must begin with <code>a_</code> to be consistent with Cesium\'s style guide.\n * @return {Number} The integer location of the attribute. This location can be used when creating attributes for a {@link VertexArray}\n *\n * @example\n * // creates the line "attribute vec2 a_texCoord0;" in the vertex shader\n * shaderBuilder.addAttribute("vec2", "a_texCoord0");\n */\nShaderBuilder.prototype.addAttribute = function (type, identifier) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("type", type);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("identifier", identifier);\n  //>>includeEnd(\'debug\');\n\n  var line = "attribute " + type + " " + identifier + ";";\n  this._attributeLines.push(line);\n\n  var location = this._nextAttributeLocation;\n  this._attributeLocations[identifier] = location;\n  this._nextAttributeLocation++;\n  return location;\n};\n\n/**\n * Add a varying declaration to both the vertex and fragment shaders.\n *\n * @param {String} type The GLSL type of the varying\n * @param {String} identifier An identifier for the varying. Identifiers must begin with <code>v_</code> to be consistent with Cesium\'s style guide.\n *\n * @example\n * // creates the line "varying vec3 v_color;" in both shaders\n * shaderBuilder.addVarying("vec3", "v_color");\n */\nShaderBuilder.prototype.addVarying = function (type, identifier) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("type", type);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("identifier", identifier);\n  //>>includeEnd(\'debug\');\n\n  var line = "varying " + type + " " + identifier + ";";\n  this._vertexShaderParts.varyingLines.push(line);\n  this._fragmentShaderParts.varyingLines.push(line);\n};\n\n/**\n * Appends lines of GLSL code to the vertex shader\n *\n * @param {String[]} lines The lines to add to the end of the vertex shader source\n * @example\n * shaderBuilder.addVertexLines([\n *  "void main()",\n *  "{",\n *  "    v_color = a_color;",\n *  "    gl_Position = vec4(a_position, 1.0);",\n *  "}"\n * ]);\n */\nShaderBuilder.prototype.addVertexLines = function (lines) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("lines", lines);\n  //>>includeEnd(\'debug\');\n\n  Array.prototype.push.apply(this._vertexShaderParts.shaderLines, lines);\n};\n\n/**\n * Appends lines of GLSL code to the fragment shader\n *\n * @param {String[]} lines The lines to add to the end of the fragment shader source\n * @example\n * shaderBuilder.addFragmentLines([\n *  "void main()",\n *  "{",\n *  "    #ifdef SOLID_COLOR",\n *  "    gl_FragColor = vec4(u_color, 1.0);",\n *  "    #else",\n *  "    gl_FragColor = vec4(v_color, 1.0);",\n *  "    #endif",\n *  "}"\n * ]);\n */\nShaderBuilder.prototype.addFragmentLines = function (lines) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("lines", lines);\n  //>>includeEnd(\'debug\');\n  Array.prototype.push.apply(this._fragmentShaderParts.shaderLines, lines);\n};\n\n/**\n * Builds the {@link ShaderProgram} from the pieces added by the other methods.\n * Call this one time at the end of modifying the shader through the other\n * methods in this class.\n *\n * @param {Context} context The context to use for creating the shader.\n * @return {ShaderProgram} A shader program to use for rendering.\n *\n * @example\n * var shaderProgram = shaderBuilder.buildShaderProgram(context);\n */\nShaderBuilder.prototype.buildShaderProgram = function (context) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("context", context);\n  //>>includeEnd(\'debug\');\n\n  var positionAttribute = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this._positionAttributeLine)\n    ? [this._positionAttributeLine]\n    : [];\n\n  // Lines are joined here so the ShaderSource\n  // generates a single #line 0 directive\n  var vertexLines = positionAttribute\n    .concat(\n      this._attributeLines,\n      this._vertexShaderParts.uniformLines,\n      this._vertexShaderParts.varyingLines,\n      this._vertexShaderParts.shaderLines\n    )\n    .join("\\n");\n  var vertexShaderSource = new _ShaderSource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n    defines: this._vertexShaderParts.defineLines,\n    sources: [vertexLines],\n  });\n\n  var fragmentLines = this._fragmentShaderParts.uniformLines\n    .concat(\n      this._fragmentShaderParts.varyingLines,\n      this._fragmentShaderParts.shaderLines\n    )\n    .join("\\n");\n  var fragmentShaderSource = new _ShaderSource_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z({\n    defines: this._fragmentShaderParts.defineLines,\n    sources: [fragmentLines],\n  });\n\n  return _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fromCache */ .Z.fromCache({\n    context: context,\n    vertexShaderSource: vertexShaderSource,\n    fragmentShaderSource: fragmentShaderSource,\n    attributeLocations: this._attributeLocations,\n  });\n};\n\nShaderBuilder.prototype.clone = function () {\n  return (0,_Core_clone_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this, true);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///62099\n')},5631:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86511);\n/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(46588);\n/* harmony import */ var _ShaderSource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(53642);\n\n\n\n\n\n/**\n * @private\n */\nfunction ShaderCache(context) {\n  this._context = context;\n  this._shaders = {};\n  this._numberOfShaders = 0;\n  this._shadersToRelease = {};\n}\n\nObject.defineProperties(ShaderCache.prototype, {\n  numberOfShaders: {\n    get: function () {\n      return this._numberOfShaders;\n    },\n  },\n});\n\n/**\n     * Returns a shader program from the cache, or creates and caches a new shader program,\n     * given the GLSL vertex and fragment shader source and attribute locations.\n     * <p>\n     * The difference between this and {@link ShaderCache#getShaderProgram}, is this is used to\n     * replace an existing reference to a shader program, which is passed as the first argument.\n     * </p>\n     *\n     * @param {Object} options Object with the following properties:\n     * @param {ShaderProgram} [options.shaderProgram] The shader program that is being reassigned.\n     * @param {String|ShaderSource} options.vertexShaderSource The GLSL source for the vertex shader.\n     * @param {String|ShaderSource} options.fragmentShaderSource The GLSL source for the fragment shader.\n     * @param {Object} options.attributeLocations Indices for the attribute inputs to the vertex shader.\n\n     * @returns {ShaderProgram} The cached or newly created shader program.\n     *\n     *\n     * @example\n     * this._shaderProgram = context.shaderCache.replaceShaderProgram({\n     *     shaderProgram : this._shaderProgram,\n     *     vertexShaderSource : vs,\n     *     fragmentShaderSource : fs,\n     *     attributeLocations : attributeLocations\n     * });\n     *\n     * @see ShaderCache#getShaderProgram\n     */\nShaderCache.prototype.replaceShaderProgram = function (options) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.shaderProgram)) {\n    options.shaderProgram.destroy();\n  }\n\n  return this.getShaderProgram(options);\n};\n\n/**\n * Returns a shader program from the cache, or creates and caches a new shader program,\n * given the GLSL vertex and fragment shader source and attribute locations.\n *\n * @param {Object} options Object with the following properties:\n * @param {String|ShaderSource} options.vertexShaderSource The GLSL source for the vertex shader.\n * @param {String|ShaderSource} options.fragmentShaderSource The GLSL source for the fragment shader.\n * @param {Object} options.attributeLocations Indices for the attribute inputs to the vertex shader.\n *\n * @returns {ShaderProgram} The cached or newly created shader program.\n */\nShaderCache.prototype.getShaderProgram = function (options) {\n  // convert shaders which are provided as strings into ShaderSource objects\n  // because ShaderSource handles all the automatic including of built-in functions, etc.\n\n  var vertexShaderSource = options.vertexShaderSource;\n  var fragmentShaderSource = options.fragmentShaderSource;\n  var attributeLocations = options.attributeLocations;\n\n  if (typeof vertexShaderSource === "string") {\n    vertexShaderSource = new _ShaderSource_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({\n      sources: [vertexShaderSource],\n    });\n  }\n\n  if (typeof fragmentShaderSource === "string") {\n    fragmentShaderSource = new _ShaderSource_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({\n      sources: [fragmentShaderSource],\n    });\n  }\n\n  var vertexShaderText = vertexShaderSource.createCombinedVertexShader(\n    this._context\n  );\n  var fragmentShaderText = fragmentShaderSource.createCombinedFragmentShader(\n    this._context\n  );\n\n  var keyword =\n    vertexShaderText + fragmentShaderText + JSON.stringify(attributeLocations);\n  var cachedShader;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this._shaders[keyword])) {\n    cachedShader = this._shaders[keyword];\n\n    // No longer want to release this if it was previously released.\n    delete this._shadersToRelease[keyword];\n  } else {\n    var context = this._context;\n    var shaderProgram = new _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({\n      gl: context._gl,\n      logShaderCompilation: context.logShaderCompilation,\n      debugShaders: context.debugShaders,\n      vertexShaderSource: vertexShaderSource,\n      vertexShaderText: vertexShaderText,\n      fragmentShaderSource: fragmentShaderSource,\n      fragmentShaderText: fragmentShaderText,\n      attributeLocations: attributeLocations,\n    });\n\n    cachedShader = {\n      cache: this,\n      shaderProgram: shaderProgram,\n      keyword: keyword,\n      derivedKeywords: [],\n      count: 0,\n    };\n\n    // A shader can\'t be in more than one cache.\n    shaderProgram._cachedShader = cachedShader;\n    this._shaders[keyword] = cachedShader;\n    ++this._numberOfShaders;\n  }\n\n  ++cachedShader.count;\n  return cachedShader.shaderProgram;\n};\n\nShaderCache.prototype.replaceDerivedShaderProgram = function (\n  shaderProgram,\n  keyword,\n  options\n) {\n  var cachedShader = shaderProgram._cachedShader;\n  var derivedKeyword = keyword + cachedShader.keyword;\n  var cachedDerivedShader = this._shaders[derivedKeyword];\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(cachedDerivedShader)) {\n    destroyShader(this, cachedDerivedShader);\n    var index = cachedShader.derivedKeywords.indexOf(keyword);\n    if (index > -1) {\n      cachedShader.derivedKeywords.splice(index, 1);\n    }\n  }\n\n  return this.createDerivedShaderProgram(shaderProgram, keyword, options);\n};\n\nShaderCache.prototype.getDerivedShaderProgram = function (\n  shaderProgram,\n  keyword\n) {\n  var cachedShader = shaderProgram._cachedShader;\n  var derivedKeyword = keyword + cachedShader.keyword;\n  var cachedDerivedShader = this._shaders[derivedKeyword];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(cachedDerivedShader)) {\n    return undefined;\n  }\n\n  return cachedDerivedShader.shaderProgram;\n};\n\nShaderCache.prototype.createDerivedShaderProgram = function (\n  shaderProgram,\n  keyword,\n  options\n) {\n  var cachedShader = shaderProgram._cachedShader;\n  var derivedKeyword = keyword + cachedShader.keyword;\n\n  var vertexShaderSource = options.vertexShaderSource;\n  var fragmentShaderSource = options.fragmentShaderSource;\n  var attributeLocations = options.attributeLocations;\n\n  if (typeof vertexShaderSource === "string") {\n    vertexShaderSource = new _ShaderSource_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({\n      sources: [vertexShaderSource],\n    });\n  }\n\n  if (typeof fragmentShaderSource === "string") {\n    fragmentShaderSource = new _ShaderSource_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z({\n      sources: [fragmentShaderSource],\n    });\n  }\n\n  var context = this._context;\n\n  var vertexShaderText = vertexShaderSource.createCombinedVertexShader(context);\n  var fragmentShaderText = fragmentShaderSource.createCombinedFragmentShader(\n    context\n  );\n\n  var derivedShaderProgram = new _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z({\n    gl: context._gl,\n    logShaderCompilation: context.logShaderCompilation,\n    debugShaders: context.debugShaders,\n    vertexShaderSource: vertexShaderSource,\n    vertexShaderText: vertexShaderText,\n    fragmentShaderSource: fragmentShaderSource,\n    fragmentShaderText: fragmentShaderText,\n    attributeLocations: attributeLocations,\n  });\n\n  var derivedCachedShader = {\n    cache: this,\n    shaderProgram: derivedShaderProgram,\n    keyword: derivedKeyword,\n    derivedKeywords: [],\n    count: 0,\n  };\n\n  cachedShader.derivedKeywords.push(keyword);\n  derivedShaderProgram._cachedShader = derivedCachedShader;\n  this._shaders[derivedKeyword] = derivedCachedShader;\n  return derivedShaderProgram;\n};\n\nfunction destroyShader(cache, cachedShader) {\n  var derivedKeywords = cachedShader.derivedKeywords;\n  var length = derivedKeywords.length;\n  for (var i = 0; i < length; ++i) {\n    var keyword = derivedKeywords[i] + cachedShader.keyword;\n    var derivedCachedShader = cache._shaders[keyword];\n    destroyShader(cache, derivedCachedShader);\n  }\n\n  delete cache._shaders[cachedShader.keyword];\n  cachedShader.shaderProgram.finalDestroy();\n}\n\nShaderCache.prototype.destroyReleasedShaderPrograms = function () {\n  var shadersToRelease = this._shadersToRelease;\n\n  for (var keyword in shadersToRelease) {\n    if (shadersToRelease.hasOwnProperty(keyword)) {\n      var cachedShader = shadersToRelease[keyword];\n      destroyShader(this, cachedShader);\n      --this._numberOfShaders;\n    }\n  }\n\n  this._shadersToRelease = {};\n};\n\nShaderCache.prototype.releaseShaderProgram = function (shaderProgram) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(shaderProgram)) {\n    var cachedShader = shaderProgram._cachedShader;\n    if (cachedShader && --cachedShader.count === 0) {\n      this._shadersToRelease[cachedShader.keyword] = cachedShader;\n    }\n  }\n};\n\nShaderCache.prototype.isDestroyed = function () {\n  return false;\n};\n\nShaderCache.prototype.destroy = function () {\n  var shaders = this._shaders;\n  for (var keyword in shaders) {\n    if (shaders.hasOwnProperty(keyword)) {\n      shaders[keyword].shaderProgram.finalDestroy();\n    }\n  }\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ShaderCache);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5631\n')},87826:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n\n\n/**\n * An enum describing whether a variable should be added to the\n * vertex shader, the fragment shader, or both.\n *\n * @private\n */\nvar ShaderDestination = {\n  VERTEX: 0,\n  FRAGMENT: 1,\n  BOTH: 2,\n};\n\n/**\n * Check if a variable should be included in the vertex shader.\n *\n * @param {ShaderDestination} destination The ShaderDestination to check\n * @return {Boolean} <code>true</code> if the variable appears in the vertex shader, or <code>false</code> otherwise\n * @private\n */\nShaderDestination.includesVertexShader = function (destination) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("destination", destination);\n  //>>includeEnd(\'debug\');\n\n  return (\n    destination === ShaderDestination.VERTEX ||\n    destination === ShaderDestination.BOTH\n  );\n};\n\n/**\n * Check if a variable should be included in the vertex shader.\n *\n * @param {ShaderDestination} destination The ShaderDestination to check\n * @return {Boolean} <code>true</code> if the variable appears in the vertex shader, or <code>false</code> otherwise\n * @private\n */\nShaderDestination.includesFragmentShader = function (destination) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("destination", destination);\n  //>>includeEnd(\'debug\');\n  //\n  return (\n    destination === ShaderDestination.FRAGMENT ||\n    destination === ShaderDestination.BOTH\n  );\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(ShaderDestination));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODc4MjYuanMiLCJtYXBwaW5ncyI6IjtBQUFxQzs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDJGQUFtQjtBQUNyQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCLFlBQVksU0FBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkZBQW1CO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlEQUFlLGdDQUFnQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1JlbmRlcmVyL1NoYWRlckRlc3RpbmF0aW9uLmpzPzk1Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENoZWNrIGZyb20gXCIuLi9Db3JlL0NoZWNrLmpzXCI7XG5cbi8qKlxuICogQW4gZW51bSBkZXNjcmliaW5nIHdoZXRoZXIgYSB2YXJpYWJsZSBzaG91bGQgYmUgYWRkZWQgdG8gdGhlXG4gKiB2ZXJ0ZXggc2hhZGVyLCB0aGUgZnJhZ21lbnQgc2hhZGVyLCBvciBib3RoLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbnZhciBTaGFkZXJEZXN0aW5hdGlvbiA9IHtcbiAgVkVSVEVYOiAwLFxuICBGUkFHTUVOVDogMSxcbiAgQk9USDogMixcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYSB2YXJpYWJsZSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gdGhlIHZlcnRleCBzaGFkZXIuXG4gKlxuICogQHBhcmFtIHtTaGFkZXJEZXN0aW5hdGlvbn0gZGVzdGluYXRpb24gVGhlIFNoYWRlckRlc3RpbmF0aW9uIHRvIGNoZWNrXG4gKiBAcmV0dXJuIHtCb29sZWFufSA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgdmFyaWFibGUgYXBwZWFycyBpbiB0aGUgdmVydGV4IHNoYWRlciwgb3IgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZVxuICogQHByaXZhdGVcbiAqL1xuU2hhZGVyRGVzdGluYXRpb24uaW5jbHVkZXNWZXJ0ZXhTaGFkZXIgPSBmdW5jdGlvbiAoZGVzdGluYXRpb24pIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLm51bWJlcihcImRlc3RpbmF0aW9uXCIsIGRlc3RpbmF0aW9uKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgcmV0dXJuIChcbiAgICBkZXN0aW5hdGlvbiA9PT0gU2hhZGVyRGVzdGluYXRpb24uVkVSVEVYIHx8XG4gICAgZGVzdGluYXRpb24gPT09IFNoYWRlckRlc3RpbmF0aW9uLkJPVEhcbiAgKTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYSB2YXJpYWJsZSBzaG91bGQgYmUgaW5jbHVkZWQgaW4gdGhlIHZlcnRleCBzaGFkZXIuXG4gKlxuICogQHBhcmFtIHtTaGFkZXJEZXN0aW5hdGlvbn0gZGVzdGluYXRpb24gVGhlIFNoYWRlckRlc3RpbmF0aW9uIHRvIGNoZWNrXG4gKiBAcmV0dXJuIHtCb29sZWFufSA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgdmFyaWFibGUgYXBwZWFycyBpbiB0aGUgdmVydGV4IHNoYWRlciwgb3IgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZVxuICogQHByaXZhdGVcbiAqL1xuU2hhZGVyRGVzdGluYXRpb24uaW5jbHVkZXNGcmFnbWVudFNoYWRlciA9IGZ1bmN0aW9uIChkZXN0aW5hdGlvbikge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay50eXBlT2YubnVtYmVyKFwiZGVzdGluYXRpb25cIiwgZGVzdGluYXRpb24pO1xuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcbiAgLy9cbiAgcmV0dXJuIChcbiAgICBkZXN0aW5hdGlvbiA9PT0gU2hhZGVyRGVzdGluYXRpb24uRlJBR01FTlQgfHxcbiAgICBkZXN0aW5hdGlvbiA9PT0gU2hhZGVyRGVzdGluYXRpb24uQk9USFxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmZyZWV6ZShTaGFkZXJEZXN0aW5hdGlvbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///87826\n')},46588:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9407);\n/* harmony import */ var _AutomaticUniforms_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(92244);\n/* harmony import */ var _ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20521);\n/* harmony import */ var _createUniform_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(33676);\n/* harmony import */ var _createUniformArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(15990);\n\n\n\n\n\n\n\n\n\n\n\nvar nextShaderProgramId = 0;\n\n/**\n * @private\n */\nfunction ShaderProgram(options) {\n  var vertexShaderText = options.vertexShaderText;\n  var fragmentShaderText = options.fragmentShaderText;\n\n  if (typeof spector !== "undefined") {\n    // The #line statements common in Cesium shaders interfere with the ability of the\n    // SpectorJS to show errors on the correct line. So remove them when SpectorJS\n    // is active.\n    vertexShaderText = vertexShaderText.replace(/^#line/gm, "//#line");\n    fragmentShaderText = fragmentShaderText.replace(/^#line/gm, "//#line");\n  }\n\n  var modifiedFS = handleUniformPrecisionMismatches(\n    vertexShaderText,\n    fragmentShaderText\n  );\n\n  this._gl = options.gl;\n  this._logShaderCompilation = options.logShaderCompilation;\n  this._debugShaders = options.debugShaders;\n  this._attributeLocations = options.attributeLocations;\n\n  this._program = undefined;\n  this._numberOfVertexAttributes = undefined;\n  this._vertexAttributes = undefined;\n  this._uniformsByName = undefined;\n  this._uniforms = undefined;\n  this._automaticUniforms = undefined;\n  this._manualUniforms = undefined;\n  this._duplicateUniformNames = modifiedFS.duplicateUniformNames;\n  this._cachedShader = undefined; // Used by ShaderCache\n\n  /**\n   * @private\n   */\n  this.maximumTextureUnitIndex = undefined;\n\n  this._vertexShaderSource = options.vertexShaderSource;\n  this._vertexShaderText = options.vertexShaderText;\n  this._fragmentShaderSource = options.fragmentShaderSource;\n  this._fragmentShaderText = modifiedFS.fragmentShaderText;\n\n  /**\n   * @private\n   */\n  this.id = nextShaderProgramId++;\n}\n\nShaderProgram.fromCache = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("options.context", options.context);\n  //>>includeEnd(\'debug\');\n\n  return options.context.shaderCache.getShaderProgram(options);\n};\n\nShaderProgram.replaceCache = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("options.context", options.context);\n  //>>includeEnd(\'debug\');\n\n  return options.context.shaderCache.replaceShaderProgram(options);\n};\n\nObject.defineProperties(ShaderProgram.prototype, {\n  /**\n   * GLSL source for the shader program\'s vertex shader.\n   * @memberof ShaderProgram.prototype\n   *\n   * @type {ShaderSource}\n   * @readonly\n   */\n  vertexShaderSource: {\n    get: function () {\n      return this._vertexShaderSource;\n    },\n  },\n  /**\n   * GLSL source for the shader program\'s fragment shader.\n   * @memberof ShaderProgram.prototype\n   *\n   * @type {ShaderSource}\n   * @readonly\n   */\n  fragmentShaderSource: {\n    get: function () {\n      return this._fragmentShaderSource;\n    },\n  },\n  vertexAttributes: {\n    get: function () {\n      initialize(this);\n      return this._vertexAttributes;\n    },\n  },\n  numberOfVertexAttributes: {\n    get: function () {\n      initialize(this);\n      return this._numberOfVertexAttributes;\n    },\n  },\n  allUniforms: {\n    get: function () {\n      initialize(this);\n      return this._uniformsByName;\n    },\n  },\n});\n\nfunction extractUniforms(shaderText) {\n  var uniformNames = [];\n  var uniformLines = shaderText.match(/uniform.*?(?![^{]*})(?=[=\\[;])/g);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(uniformLines)) {\n    var len = uniformLines.length;\n    for (var i = 0; i < len; i++) {\n      var line = uniformLines[i].trim();\n      var name = line.slice(line.lastIndexOf(" ") + 1);\n      uniformNames.push(name);\n    }\n  }\n  return uniformNames;\n}\n\nfunction handleUniformPrecisionMismatches(\n  vertexShaderText,\n  fragmentShaderText\n) {\n  // If a uniform exists in both the vertex and fragment shader but with different precision qualifiers,\n  // give the fragment shader uniform a different name. This fixes shader compilation errors on devices\n  // that only support mediump in the fragment shader.\n  var duplicateUniformNames = {};\n\n  if (!_ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].highpFloatSupported */ .Z.highpFloatSupported || !_ContextLimits_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].highpIntSupported */ .Z.highpIntSupported) {\n    var i, j;\n    var uniformName;\n    var duplicateName;\n    var vertexShaderUniforms = extractUniforms(vertexShaderText);\n    var fragmentShaderUniforms = extractUniforms(fragmentShaderText);\n    var vertexUniformsCount = vertexShaderUniforms.length;\n    var fragmentUniformsCount = fragmentShaderUniforms.length;\n\n    for (i = 0; i < vertexUniformsCount; i++) {\n      for (j = 0; j < fragmentUniformsCount; j++) {\n        if (vertexShaderUniforms[i] === fragmentShaderUniforms[j]) {\n          uniformName = vertexShaderUniforms[i];\n          duplicateName = "czm_mediump_" + uniformName;\n          // Update fragmentShaderText with renamed uniforms\n          var re = new RegExp(uniformName + "\\\\b", "g");\n          fragmentShaderText = fragmentShaderText.replace(re, duplicateName);\n          duplicateUniformNames[duplicateName] = uniformName;\n        }\n      }\n    }\n  }\n\n  return {\n    fragmentShaderText: fragmentShaderText,\n    duplicateUniformNames: duplicateUniformNames,\n  };\n}\n\nvar consolePrefix = "[Cesium WebGL] ";\n\nfunction createAndLinkProgram(gl, shader) {\n  var vsSource = shader._vertexShaderText;\n  var fsSource = shader._fragmentShaderText;\n\n  var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vsSource);\n  gl.compileShader(vertexShader);\n\n  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fsSource);\n  gl.compileShader(fragmentShader);\n\n  var program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n\n  var attributeLocations = shader._attributeLocations;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(attributeLocations)) {\n    for (var attribute in attributeLocations) {\n      if (attributeLocations.hasOwnProperty(attribute)) {\n        gl.bindAttribLocation(\n          program,\n          attributeLocations[attribute],\n          attribute\n        );\n      }\n    }\n  }\n\n  gl.linkProgram(program);\n\n  var log;\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    var debugShaders = shader._debugShaders;\n\n    // For performance, only check compile errors if there is a linker error.\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      log = gl.getShaderInfoLog(fragmentShader);\n      console.error(consolePrefix + "Fragment shader compile log: " + log);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(debugShaders)) {\n        var fragmentSourceTranslation = debugShaders.getTranslatedShaderSource(\n          fragmentShader\n        );\n        if (fragmentSourceTranslation !== "") {\n          console.error(\n            consolePrefix +\n              "Translated fragment shader source:\\n" +\n              fragmentSourceTranslation\n          );\n        } else {\n          console.error(consolePrefix + "Fragment shader translation failed.");\n        }\n      }\n\n      gl.deleteProgram(program);\n      throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "Fragment shader failed to compile.  Compile log: " + log\n      );\n    }\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      log = gl.getShaderInfoLog(vertexShader);\n      console.error(consolePrefix + "Vertex shader compile log: " + log);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(debugShaders)) {\n        var vertexSourceTranslation = debugShaders.getTranslatedShaderSource(\n          vertexShader\n        );\n        if (vertexSourceTranslation !== "") {\n          console.error(\n            consolePrefix +\n              "Translated vertex shader source:\\n" +\n              vertexSourceTranslation\n          );\n        } else {\n          console.error(consolePrefix + "Vertex shader translation failed.");\n        }\n      }\n\n      gl.deleteProgram(program);\n      throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "Vertex shader failed to compile.  Compile log: " + log\n      );\n    }\n\n    log = gl.getProgramInfoLog(program);\n    console.error(consolePrefix + "Shader program link log: " + log);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(debugShaders)) {\n      console.error(\n        consolePrefix +\n          "Translated vertex shader source:\\n" +\n          debugShaders.getTranslatedShaderSource(vertexShader)\n      );\n      console.error(\n        consolePrefix +\n          "Translated fragment shader source:\\n" +\n          debugShaders.getTranslatedShaderSource(fragmentShader)\n      );\n    }\n\n    gl.deleteProgram(program);\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Program failed to link.  Link log: " + log);\n  }\n\n  var logShaderCompilation = shader._logShaderCompilation;\n\n  if (logShaderCompilation) {\n    log = gl.getShaderInfoLog(vertexShader);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(log) && log.length > 0) {\n      console.log(consolePrefix + "Vertex shader compile log: " + log);\n    }\n  }\n\n  if (logShaderCompilation) {\n    log = gl.getShaderInfoLog(fragmentShader);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(log) && log.length > 0) {\n      console.log(consolePrefix + "Fragment shader compile log: " + log);\n    }\n  }\n\n  if (logShaderCompilation) {\n    log = gl.getProgramInfoLog(program);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(log) && log.length > 0) {\n      console.log(consolePrefix + "Shader program link log: " + log);\n    }\n  }\n\n  return program;\n}\n\nfunction findVertexAttributes(gl, program, numberOfAttributes) {\n  var attributes = {};\n  for (var i = 0; i < numberOfAttributes; ++i) {\n    var attr = gl.getActiveAttrib(program, i);\n    var location = gl.getAttribLocation(program, attr.name);\n\n    attributes[attr.name] = {\n      name: attr.name,\n      type: attr.type,\n      index: location,\n    };\n  }\n\n  return attributes;\n}\n\nfunction findUniforms(gl, program) {\n  var uniformsByName = {};\n  var uniforms = [];\n  var samplerUniforms = [];\n\n  var numberOfUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var i = 0; i < numberOfUniforms; ++i) {\n    var activeUniform = gl.getActiveUniform(program, i);\n    var suffix = "[0]";\n    var uniformName =\n      activeUniform.name.indexOf(\n        suffix,\n        activeUniform.name.length - suffix.length\n      ) !== -1\n        ? activeUniform.name.slice(0, activeUniform.name.length - 3)\n        : activeUniform.name;\n\n    // Ignore GLSL built-in uniforms returned in Firefox.\n    if (uniformName.indexOf("gl_") !== 0) {\n      if (activeUniform.name.indexOf("[") < 0) {\n        // Single uniform\n        var location = gl.getUniformLocation(program, uniformName);\n\n        // IE 11.0.9 needs this check since getUniformLocation can return null\n        // if the uniform is not active (e.g., it is optimized out).  Looks like\n        // getActiveUniform() above returns uniforms that are not actually active.\n        if (location !== null) {\n          var uniform = (0,_createUniform_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(gl, activeUniform, uniformName, location);\n\n          uniformsByName[uniformName] = uniform;\n          uniforms.push(uniform);\n\n          if (uniform._setSampler) {\n            samplerUniforms.push(uniform);\n          }\n        }\n      } else {\n        // Uniform array\n\n        var uniformArray;\n        var locations;\n        var value;\n        var loc;\n\n        // On some platforms - Nexus 4 in Firefox for one - an array of sampler2D ends up being represented\n        // as separate uniforms, one for each array element.  Check for and handle that case.\n        var indexOfBracket = uniformName.indexOf("[");\n        if (indexOfBracket >= 0) {\n          // We\'re assuming the array elements show up in numerical order - it seems to be true.\n          uniformArray = uniformsByName[uniformName.slice(0, indexOfBracket)];\n\n          // Nexus 4 with Android 4.3 needs this check, because it reports a uniform\n          // with the strange name webgl_3467e0265d05c3c1[1] in our globe surface shader.\n          if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(uniformArray)) {\n            continue;\n          }\n\n          locations = uniformArray._locations;\n\n          // On the Nexus 4 in Chrome, we get one uniform per sampler, just like in Firefox,\n          // but the size is not 1 like it is in Firefox.  So if we push locations here,\n          // we\'ll end up adding too many locations.\n          if (locations.length <= 1) {\n            value = uniformArray.value;\n            loc = gl.getUniformLocation(program, uniformName);\n\n            // Workaround for IE 11.0.9.  See above.\n            if (loc !== null) {\n              locations.push(loc);\n              value.push(gl.getUniform(program, loc));\n            }\n          }\n        } else {\n          locations = [];\n          for (var j = 0; j < activeUniform.size; ++j) {\n            loc = gl.getUniformLocation(program, uniformName + "[" + j + "]");\n\n            // Workaround for IE 11.0.9.  See above.\n            if (loc !== null) {\n              locations.push(loc);\n            }\n          }\n          uniformArray = (0,_createUniformArray_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(\n            gl,\n            activeUniform,\n            uniformName,\n            locations\n          );\n\n          uniformsByName[uniformName] = uniformArray;\n          uniforms.push(uniformArray);\n\n          if (uniformArray._setSampler) {\n            samplerUniforms.push(uniformArray);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    uniformsByName: uniformsByName,\n    uniforms: uniforms,\n    samplerUniforms: samplerUniforms,\n  };\n}\n\nfunction partitionUniforms(shader, uniforms) {\n  var automaticUniforms = [];\n  var manualUniforms = [];\n\n  for (var uniform in uniforms) {\n    if (uniforms.hasOwnProperty(uniform)) {\n      var uniformObject = uniforms[uniform];\n      var uniformName = uniform;\n      // if it\'s a duplicate uniform, use its original name so it is updated correctly\n      var duplicateUniform = shader._duplicateUniformNames[uniformName];\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(duplicateUniform)) {\n        uniformObject.name = duplicateUniform;\n        uniformName = duplicateUniform;\n      }\n      var automaticUniform = _AutomaticUniforms_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z[uniformName];\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(automaticUniform)) {\n        automaticUniforms.push({\n          uniform: uniformObject,\n          automaticUniform: automaticUniform,\n        });\n      } else {\n        manualUniforms.push(uniformObject);\n      }\n    }\n  }\n\n  return {\n    automaticUniforms: automaticUniforms,\n    manualUniforms: manualUniforms,\n  };\n}\n\nfunction setSamplerUniforms(gl, program, samplerUniforms) {\n  gl.useProgram(program);\n\n  var textureUnitIndex = 0;\n  var length = samplerUniforms.length;\n  for (var i = 0; i < length; ++i) {\n    textureUnitIndex = samplerUniforms[i]._setSampler(textureUnitIndex);\n  }\n\n  gl.useProgram(null);\n\n  return textureUnitIndex;\n}\n\nfunction initialize(shader) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(shader._program)) {\n    return;\n  }\n\n  reinitialize(shader);\n}\n\nfunction reinitialize(shader) {\n  var oldProgram = shader._program;\n\n  var gl = shader._gl;\n  var program = createAndLinkProgram(gl, shader, shader._debugShaders);\n  var numberOfVertexAttributes = gl.getProgramParameter(\n    program,\n    gl.ACTIVE_ATTRIBUTES\n  );\n  var uniforms = findUniforms(gl, program);\n  var partitionedUniforms = partitionUniforms(shader, uniforms.uniformsByName);\n\n  shader._program = program;\n  shader._numberOfVertexAttributes = numberOfVertexAttributes;\n  shader._vertexAttributes = findVertexAttributes(\n    gl,\n    program,\n    numberOfVertexAttributes\n  );\n  shader._uniformsByName = uniforms.uniformsByName;\n  shader._uniforms = uniforms.uniforms;\n  shader._automaticUniforms = partitionedUniforms.automaticUniforms;\n  shader._manualUniforms = partitionedUniforms.manualUniforms;\n\n  shader.maximumTextureUnitIndex = setSamplerUniforms(\n    gl,\n    program,\n    uniforms.samplerUniforms\n  );\n\n  if (oldProgram) {\n    shader._gl.deleteProgram(oldProgram);\n  }\n\n  // If SpectorJS is active, add the hook to make the shader editor work.\n  // https://github.com/BabylonJS/Spector.js/blob/master/documentation/extension.md#shader-editor\n  if (typeof spector !== "undefined") {\n    shader._program.__SPECTOR_rebuildProgram = function (\n      vertexSourceCode, // The new vertex shader source\n      fragmentSourceCode, // The new fragment shader source\n      onCompiled, // Callback triggered by your engine when the compilation is successful. It needs to send back the new linked program.\n      onError // Callback triggered by your engine in case of error. It needs to send the WebGL error to allow the editor to display the error in the gutter.\n    ) {\n      var originalVS = shader._vertexShaderText;\n      var originalFS = shader._fragmentShaderText;\n\n      // SpectorJS likes to replace `!=` with `! =` for unknown reasons,\n      // and that causes glsl compile failures. So fix that up.\n      var regex = / ! = /g;\n      shader._vertexShaderText = vertexSourceCode.replace(regex, " != ");\n      shader._fragmentShaderText = fragmentSourceCode.replace(regex, " != ");\n\n      try {\n        reinitialize(shader);\n        onCompiled(shader._program);\n      } catch (e) {\n        shader._vertexShaderText = originalVS;\n        shader._fragmentShaderText = originalFS;\n\n        // Only pass on the WebGL error:\n        var errorMatcher = /(?:Compile|Link) error: ([^]*)/;\n        var match = errorMatcher.exec(e.message);\n        if (match) {\n          onError(match[1]);\n        } else {\n          onError(e.message);\n        }\n      }\n    };\n  }\n}\n\nShaderProgram.prototype._bind = function () {\n  initialize(this);\n  this._gl.useProgram(this._program);\n};\n\nShaderProgram.prototype._setUniforms = function (\n  uniformMap,\n  uniformState,\n  validate\n) {\n  var len;\n  var i;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(uniformMap)) {\n    var manualUniforms = this._manualUniforms;\n    len = manualUniforms.length;\n    for (i = 0; i < len; ++i) {\n      var mu = manualUniforms[i];\n      mu.value = uniformMap[mu.name]();\n    }\n  }\n\n  var automaticUniforms = this._automaticUniforms;\n  len = automaticUniforms.length;\n  for (i = 0; i < len; ++i) {\n    var au = automaticUniforms[i];\n    au.uniform.value = au.automaticUniform.getValue(uniformState);\n  }\n\n  ///////////////////////////////////////////////////////////////////\n\n  // It appears that assigning the uniform values above and then setting them here\n  // (which makes the GL calls) is faster than removing this loop and making\n  // the GL calls above.  I suspect this is because each GL call pollutes the\n  // L2 cache making our JavaScript and the browser/driver ping-pong cache lines.\n  var uniforms = this._uniforms;\n  len = uniforms.length;\n  for (i = 0; i < len; ++i) {\n    uniforms[i].set();\n  }\n\n  if (validate) {\n    var gl = this._gl;\n    var program = this._program;\n\n    gl.validateProgram(program);\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n        "Program validation failed.  Program info log: " +\n          gl.getProgramInfoLog(program)\n      );\n    }\n    //>>includeEnd(\'debug\');\n  }\n};\n\nShaderProgram.prototype.isDestroyed = function () {\n  return false;\n};\n\nShaderProgram.prototype.destroy = function () {\n  this._cachedShader.cache.releaseShaderProgram(this);\n  return undefined;\n};\n\nShaderProgram.prototype.finalDestroy = function () {\n  this._gl.deleteProgram(this._program);\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ShaderProgram);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///46588\n')},53642:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _Renderer_modernizeShader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33445);\n/* harmony import */ var _Shaders_Builtin_CzmBuiltins_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2303);\n/* harmony import */ var _AutomaticUniforms_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(92244);\n\n\n\n\n\n\n\nfunction removeComments(source) {\n  // remove inline comments\n  source = source.replace(/\\/\\/.*/g, "");\n  // remove multiline comment block\n  return source.replace(/\\/\\*\\*[\\s\\S]*?\\*\\//gm, function (match) {\n    // preserve the number of lines in the comment block so the line numbers will be correct when debugging shaders\n    var numberOfLines = match.match(/\\n/gm).length;\n    var replacement = "";\n    for (var lineNumber = 0; lineNumber < numberOfLines; ++lineNumber) {\n      replacement += "\\n";\n    }\n    return replacement;\n  });\n}\n\nfunction getDependencyNode(name, glslSource, nodes) {\n  var dependencyNode;\n\n  // check if already loaded\n  for (var i = 0; i < nodes.length; ++i) {\n    if (nodes[i].name === name) {\n      dependencyNode = nodes[i];\n    }\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(dependencyNode)) {\n    // strip doc comments so we don\'t accidentally try to determine a dependency for something found\n    // in a comment\n    glslSource = removeComments(glslSource);\n\n    // create new node\n    dependencyNode = {\n      name: name,\n      glslSource: glslSource,\n      dependsOn: [],\n      requiredBy: [],\n      evaluated: false,\n    };\n    nodes.push(dependencyNode);\n  }\n\n  return dependencyNode;\n}\n\nfunction generateDependencies(currentNode, dependencyNodes) {\n  if (currentNode.evaluated) {\n    return;\n  }\n\n  currentNode.evaluated = true;\n\n  // identify all dependencies that are referenced from this glsl source code\n  var czmMatches = currentNode.glslSource.match(/\\bczm_[a-zA-Z0-9_]*/g);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(czmMatches) && czmMatches !== null) {\n    // remove duplicates\n    czmMatches = czmMatches.filter(function (elem, pos) {\n      return czmMatches.indexOf(elem) === pos;\n    });\n\n    czmMatches.forEach(function (element) {\n      if (\n        element !== currentNode.name &&\n        ShaderSource._czmBuiltinsAndUniforms.hasOwnProperty(element)\n      ) {\n        var referencedNode = getDependencyNode(\n          element,\n          ShaderSource._czmBuiltinsAndUniforms[element],\n          dependencyNodes\n        );\n        currentNode.dependsOn.push(referencedNode);\n        referencedNode.requiredBy.push(currentNode);\n\n        // recursive call to find any dependencies of the new node\n        generateDependencies(referencedNode, dependencyNodes);\n      }\n    });\n  }\n}\n\nfunction sortDependencies(dependencyNodes) {\n  var nodesWithoutIncomingEdges = [];\n  var allNodes = [];\n\n  while (dependencyNodes.length > 0) {\n    var node = dependencyNodes.pop();\n    allNodes.push(node);\n\n    if (node.requiredBy.length === 0) {\n      nodesWithoutIncomingEdges.push(node);\n    }\n  }\n\n  while (nodesWithoutIncomingEdges.length > 0) {\n    var currentNode = nodesWithoutIncomingEdges.shift();\n\n    dependencyNodes.push(currentNode);\n\n    for (var i = 0; i < currentNode.dependsOn.length; ++i) {\n      // remove the edge from the graph\n      var referencedNode = currentNode.dependsOn[i];\n      var index = referencedNode.requiredBy.indexOf(currentNode);\n      referencedNode.requiredBy.splice(index, 1);\n\n      // if referenced node has no more incoming edges, add to list\n      if (referencedNode.requiredBy.length === 0) {\n        nodesWithoutIncomingEdges.push(referencedNode);\n      }\n    }\n  }\n\n  // if there are any nodes left with incoming edges, then there was a circular dependency somewhere in the graph\n  var badNodes = [];\n  for (var j = 0; j < allNodes.length; ++j) {\n    if (allNodes[j].requiredBy.length !== 0) {\n      badNodes.push(allNodes[j]);\n    }\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (badNodes.length !== 0) {\n    var message =\n      "A circular dependency was found in the following built-in functions/structs/constants: \\n";\n    for (var k = 0; k < badNodes.length; ++k) {\n      message = message + badNodes[k].name + "\\n";\n    }\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(message);\n  }\n  //>>includeEnd(\'debug\');\n}\n\nfunction getBuiltinsAndAutomaticUniforms(shaderSource) {\n  // generate a dependency graph for builtin functions\n  var dependencyNodes = [];\n  var root = getDependencyNode("main", shaderSource, dependencyNodes);\n  generateDependencies(root, dependencyNodes);\n  sortDependencies(dependencyNodes);\n\n  // Concatenate the source code for the function dependencies.\n  // Iterate in reverse so that dependent items are declared before they are used.\n  var builtinsSource = "";\n  for (var i = dependencyNodes.length - 1; i >= 0; --i) {\n    builtinsSource = builtinsSource + dependencyNodes[i].glslSource + "\\n";\n  }\n\n  return builtinsSource.replace(root.glslSource, "");\n}\n\nfunction combineShader(shaderSource, isFragmentShader, context) {\n  var i;\n  var length;\n\n  // Combine shader sources, generally for pseudo-polymorphism, e.g., czm_getMaterial.\n  var combinedSources = "";\n  var sources = shaderSource.sources;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(sources)) {\n    for (i = 0, length = sources.length; i < length; ++i) {\n      // #line needs to be on its own line.\n      combinedSources += "\\n#line 0\\n" + sources[i];\n    }\n  }\n\n  combinedSources = removeComments(combinedSources);\n\n  // Extract existing shader version from sources\n  var version;\n  combinedSources = combinedSources.replace(/#version\\s+(.*?)\\n/gm, function (\n    match,\n    group1\n  ) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(version) && version !== group1) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n        "inconsistent versions found: " + version + " and " + group1\n      );\n    }\n    //>>includeEnd(\'debug\');\n\n    // Extract #version to put at the top\n    version = group1;\n\n    // Replace original #version directive with a new line so the line numbers\n    // are not off by one.  There can be only one #version directive\n    // and it must appear at the top of the source, only preceded by\n    // whitespace and comments.\n    return "\\n";\n  });\n\n  // Extract shader extensions from sources\n  var extensions = [];\n  combinedSources = combinedSources.replace(/#extension.*\\n/gm, function (\n    match\n  ) {\n    // Extract extension to put at the top\n    extensions.push(match);\n\n    // Replace original #extension directive with a new line so the line numbers\n    // are not off by one.\n    return "\\n";\n  });\n\n  // Remove precision qualifier\n  combinedSources = combinedSources.replace(\n    /precision\\s(lowp|mediump|highp)\\s(float|int);/,\n    ""\n  );\n\n  // Replace main() for picked if desired.\n  var pickColorQualifier = shaderSource.pickColorQualifier;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(pickColorQualifier)) {\n    combinedSources = ShaderSource.createPickFragmentShaderSource(\n      combinedSources,\n      pickColorQualifier\n    );\n  }\n\n  // combine into single string\n  var result = "";\n\n  // #version must be first\n  // defaults to #version 100 if not specified\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(version)) {\n    result = "#version " + version + "\\n";\n  }\n\n  var extensionsLength = extensions.length;\n  for (i = 0; i < extensionsLength; i++) {\n    result += extensions[i];\n  }\n\n  if (isFragmentShader) {\n    // If high precision isn\'t support replace occurrences of highp with mediump\n    // The highp keyword is not always available on older mobile devices\n    // See https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#In_WebGL_1_highp_float_support_is_optional_in_fragment_shaders\n    result +=\n      "\\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\n\\\n    precision highp float;\\n\\\n#else\\n\\\n    precision mediump float;\\n\\\n    #define highp mediump\\n\\\n#endif\\n\\n";\n  }\n\n  // Prepend #defines for uber-shaders\n  var defines = shaderSource.defines;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(defines)) {\n    for (i = 0, length = defines.length; i < length; ++i) {\n      var define = defines[i];\n      if (define.length !== 0) {\n        result += "#define " + define + "\\n";\n      }\n    }\n  }\n\n  // GLSLModernizer inserts its own layout qualifiers\n  // at this position in the source\n  if (context.webgl2) {\n    result += "#define OUTPUT_DECLARATION\\n\\n";\n  }\n\n  // Define a constant for the OES_texture_float_linear extension since WebGL does not.\n  if (context.textureFloatLinear) {\n    result += "#define OES_texture_float_linear\\n\\n";\n  }\n\n  // Define a constant for the OES_texture_float extension since WebGL does not.\n  if (context.floatingPointTexture) {\n    result += "#define OES_texture_float\\n\\n";\n  }\n\n  // append built-ins\n  if (shaderSource.includeBuiltIns) {\n    result += getBuiltinsAndAutomaticUniforms(combinedSources);\n  }\n\n  // reset line number\n  result += "\\n#line 0\\n";\n\n  // append actual source\n  result += combinedSources;\n\n  // modernize the source\n  if (context.webgl2) {\n    result = (0,_Renderer_modernizeShader_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(result, isFragmentShader, true);\n  }\n\n  return result;\n}\n\n/**\n * An object containing various inputs that will be combined to form a final GLSL shader string.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {String[]} [options.sources] An array of strings to combine containing GLSL code for the shader.\n * @param {String[]} [options.defines] An array of strings containing GLSL identifiers to <code>#define</code>.\n * @param {String} [options.pickColorQualifier] The GLSL qualifier, <code>uniform</code> or <code>varying</code>, for the input <code>czm_pickColor</code>.  When defined, a pick fragment shader is generated.\n * @param {Boolean} [options.includeBuiltIns=true] If true, referenced built-in functions will be included with the combined shader.  Set to false if this shader will become a source in another shader, to avoid duplicating functions.\n *\n * @exception {DeveloperError} options.pickColorQualifier must be \'uniform\' or \'varying\'.\n *\n * @example\n * // 1. Prepend #defines to a shader\n * var source = new Cesium.ShaderSource({\n *   defines : [\'WHITE\'],\n *   sources : [\'void main() { \\n#ifdef WHITE\\n gl_FragColor = vec4(1.0); \\n#else\\n gl_FragColor = vec4(0.0); \\n#endif\\n }\']\n * });\n *\n * // 2. Modify a fragment shader for picking\n * var source = new Cesium.ShaderSource({\n *   sources : [\'void main() { gl_FragColor = vec4(1.0); }\'],\n *   pickColorQualifier : \'uniform\'\n * });\n *\n * @private\n */\nfunction ShaderSource(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var pickColorQualifier = options.pickColorQualifier;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(pickColorQualifier) &&\n    pickColorQualifier !== "uniform" &&\n    pickColorQualifier !== "varying"\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n      "options.pickColorQualifier must be \'uniform\' or \'varying\'."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  this.defines = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.defines) ? options.defines.slice(0) : [];\n  this.sources = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.sources) ? options.sources.slice(0) : [];\n  this.pickColorQualifier = pickColorQualifier;\n  this.includeBuiltIns = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(options.includeBuiltIns, true);\n}\n\nShaderSource.prototype.clone = function () {\n  return new ShaderSource({\n    sources: this.sources,\n    defines: this.defines,\n    pickColorQualifier: this.pickColorQualifier,\n    includeBuiltIns: this.includeBuiltIns,\n  });\n};\n\nShaderSource.replaceMain = function (source, renamedMain) {\n  renamedMain = "void " + renamedMain + "()";\n  return source.replace(/void\\s+main\\s*\\(\\s*(?:void)?\\s*\\)/g, renamedMain);\n};\n\n/**\n * Create a single string containing the full, combined vertex shader with all dependencies and defines.\n *\n * @param {Context} context The current rendering context\n *\n * @returns {String} The combined shader string.\n */\nShaderSource.prototype.createCombinedVertexShader = function (context) {\n  return combineShader(this, false, context);\n};\n\n/**\n * Create a single string containing the full, combined fragment shader with all dependencies and defines.\n *\n * @param {Context} context The current rendering context\n *\n * @returns {String} The combined shader string.\n */\nShaderSource.prototype.createCombinedFragmentShader = function (context) {\n  return combineShader(this, true, context);\n};\n\n/**\n * For ShaderProgram testing\n * @private\n */\nShaderSource._czmBuiltinsAndUniforms = {};\n\n// combine automatic uniforms and Cesium built-ins\nfor (var builtinName in _Shaders_Builtin_CzmBuiltins_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z) {\n  if (_Shaders_Builtin_CzmBuiltins_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].hasOwnProperty */ .Z.hasOwnProperty(builtinName)) {\n    ShaderSource._czmBuiltinsAndUniforms[builtinName] =\n      _Shaders_Builtin_CzmBuiltins_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z[builtinName];\n  }\n}\nfor (var uniformName in _AutomaticUniforms_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z) {\n  if (_AutomaticUniforms_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].hasOwnProperty */ .Z.hasOwnProperty(uniformName)) {\n    var uniform = _AutomaticUniforms_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z[uniformName];\n    if (typeof uniform.getDeclaration === "function") {\n      ShaderSource._czmBuiltinsAndUniforms[\n        uniformName\n      ] = uniform.getDeclaration(uniformName);\n    }\n  }\n}\n\nShaderSource.createPickVertexShaderSource = function (vertexShaderSource) {\n  var renamedVS = ShaderSource.replaceMain(vertexShaderSource, "czm_old_main");\n  var pickMain =\n    "attribute vec4 pickColor; \\n" +\n    "varying vec4 czm_pickColor; \\n" +\n    "void main() \\n" +\n    "{ \\n" +\n    "    czm_old_main(); \\n" +\n    "    czm_pickColor = pickColor; \\n" +\n    "}";\n\n  return renamedVS + "\\n" + pickMain;\n};\n\nShaderSource.createPickFragmentShaderSource = function (\n  fragmentShaderSource,\n  pickColorQualifier\n) {\n  var renamedFS = ShaderSource.replaceMain(\n    fragmentShaderSource,\n    "czm_old_main"\n  );\n  var pickMain =\n    pickColorQualifier +\n    " vec4 czm_pickColor; \\n" +\n    "void main() \\n" +\n    "{ \\n" +\n    "    czm_old_main(); \\n" +\n    "    if (gl_FragColor.a == 0.0) { \\n" +\n    "       discard; \\n" +\n    "    } \\n" +\n    "    gl_FragColor = czm_pickColor; \\n" +\n    "}";\n\n  return renamedFS + "\\n" + pickMain;\n};\n\nShaderSource.findVarying = function (shaderSource, names) {\n  var sources = shaderSource.sources;\n\n  var namesLength = names.length;\n  for (var i = 0; i < namesLength; ++i) {\n    var name = names[i];\n\n    var sourcesLength = sources.length;\n    for (var j = 0; j < sourcesLength; ++j) {\n      if (sources[j].indexOf(name) !== -1) {\n        return name;\n      }\n    }\n  }\n\n  return undefined;\n};\n\nvar normalVaryingNames = ["v_normalEC", "v_normal"];\n\nShaderSource.findNormalVarying = function (shaderSource) {\n  return ShaderSource.findVarying(shaderSource, normalVaryingNames);\n};\n\nvar positionVaryingNames = ["v_positionEC"];\n\nShaderSource.findPositionVarying = function (shaderSource) {\n  return ShaderSource.findVarying(shaderSource, positionVaryingNames);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ShaderSource);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTM2NDIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1EO0FBQ1Y7QUFDYztBQUNNO0FBQ0Q7QUFDTDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw0QkFBNEI7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8scUVBQU87QUFDZDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxxRUFBTztBQUNiO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSxvQkFBb0Isa0NBQWtDO0FBQ3REO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBLGNBQWMsd0VBQWM7QUFDNUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsUUFBUTtBQUNuRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0scUVBQU87QUFDYix5Q0FBeUMsWUFBWTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEscUVBQU87QUFDZixnQkFBZ0Isd0VBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxxRUFBTztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxxRUFBTztBQUNiO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLHNCQUFzQjtBQUNwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxxRUFBTztBQUNiLHlDQUF5QyxZQUFZO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxpRkFBZTtBQUM1Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEI7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDJDQUEyQyxvQ0FBb0MsWUFBWTtBQUMxSCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDJCQUEyQjtBQUMxRDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMEVBQVksVUFBVSxnR0FBeUI7QUFDM0Q7O0FBRUE7QUFDQTtBQUNBLElBQUkscUVBQU87QUFDWDtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdFQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixxRUFBTztBQUN4QixpQkFBaUIscUVBQU87QUFDeEI7QUFDQSx5QkFBeUIsMEVBQVk7QUFDckM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdCQUF3QixnRkFBVztBQUNuQyxNQUFNLDhHQUEwQjtBQUNoQztBQUNBLE1BQU0sZ0ZBQVc7QUFDakI7QUFDQTtBQUNBLHdCQUF3QixzRUFBaUI7QUFDekMsTUFBTSxvR0FBZ0M7QUFDdEMsa0JBQWtCLHNFQUFpQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsaUNBQWlDO0FBQ2pDO0FBQ0EsT0FBTztBQUNQLHlCQUF5QjtBQUN6QixvQ0FBb0M7QUFDcEMsTUFBTTs7QUFFTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0EsT0FBTztBQUNQLHlCQUF5QjtBQUN6QixzQ0FBc0M7QUFDdEMscUJBQXFCO0FBQ3JCLFdBQVc7QUFDWCx1Q0FBdUM7QUFDdkMsTUFBTTs7QUFFTjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsaUJBQWlCO0FBQ25DOztBQUVBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHlEQUFlLFlBQVksRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9SZW5kZXJlci9TaGFkZXJTb3VyY2UuanM/MDBkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuLi9Db3JlL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuaW1wb3J0IERldmVsb3BlckVycm9yIGZyb20gXCIuLi9Db3JlL0RldmVsb3BlckVycm9yLmpzXCI7XG5pbXBvcnQgbW9kZXJuaXplU2hhZGVyIGZyb20gXCIuLi9SZW5kZXJlci9tb2Rlcm5pemVTaGFkZXIuanNcIjtcbmltcG9ydCBDem1CdWlsdGlucyBmcm9tIFwiLi4vU2hhZGVycy9CdWlsdGluL0N6bUJ1aWx0aW5zLmpzXCI7XG5pbXBvcnQgQXV0b21hdGljVW5pZm9ybXMgZnJvbSBcIi4vQXV0b21hdGljVW5pZm9ybXMuanNcIjtcblxuZnVuY3Rpb24gcmVtb3ZlQ29tbWVudHMoc291cmNlKSB7XG4gIC8vIHJlbW92ZSBpbmxpbmUgY29tbWVudHNcbiAgc291cmNlID0gc291cmNlLnJlcGxhY2UoL1xcL1xcLy4qL2csIFwiXCIpO1xuICAvLyByZW1vdmUgbXVsdGlsaW5lIGNvbW1lbnQgYmxvY2tcbiAgcmV0dXJuIHNvdXJjZS5yZXBsYWNlKC9cXC9cXCpcXCpbXFxzXFxTXSo/XFwqXFwvL2dtLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAvLyBwcmVzZXJ2ZSB0aGUgbnVtYmVyIG9mIGxpbmVzIGluIHRoZSBjb21tZW50IGJsb2NrIHNvIHRoZSBsaW5lIG51bWJlcnMgd2lsbCBiZSBjb3JyZWN0IHdoZW4gZGVidWdnaW5nIHNoYWRlcnNcbiAgICB2YXIgbnVtYmVyT2ZMaW5lcyA9IG1hdGNoLm1hdGNoKC9cXG4vZ20pLmxlbmd0aDtcbiAgICB2YXIgcmVwbGFjZW1lbnQgPSBcIlwiO1xuICAgIGZvciAodmFyIGxpbmVOdW1iZXIgPSAwOyBsaW5lTnVtYmVyIDwgbnVtYmVyT2ZMaW5lczsgKytsaW5lTnVtYmVyKSB7XG4gICAgICByZXBsYWNlbWVudCArPSBcIlxcblwiO1xuICAgIH1cbiAgICByZXR1cm4gcmVwbGFjZW1lbnQ7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXREZXBlbmRlbmN5Tm9kZShuYW1lLCBnbHNsU291cmNlLCBub2Rlcykge1xuICB2YXIgZGVwZW5kZW5jeU5vZGU7XG5cbiAgLy8gY2hlY2sgaWYgYWxyZWFkeSBsb2FkZWRcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7ICsraSkge1xuICAgIGlmIChub2Rlc1tpXS5uYW1lID09PSBuYW1lKSB7XG4gICAgICBkZXBlbmRlbmN5Tm9kZSA9IG5vZGVzW2ldO1xuICAgIH1cbiAgfVxuXG4gIGlmICghZGVmaW5lZChkZXBlbmRlbmN5Tm9kZSkpIHtcbiAgICAvLyBzdHJpcCBkb2MgY29tbWVudHMgc28gd2UgZG9uJ3QgYWNjaWRlbnRhbGx5IHRyeSB0byBkZXRlcm1pbmUgYSBkZXBlbmRlbmN5IGZvciBzb21ldGhpbmcgZm91bmRcbiAgICAvLyBpbiBhIGNvbW1lbnRcbiAgICBnbHNsU291cmNlID0gcmVtb3ZlQ29tbWVudHMoZ2xzbFNvdXJjZSk7XG5cbiAgICAvLyBjcmVhdGUgbmV3IG5vZGVcbiAgICBkZXBlbmRlbmN5Tm9kZSA9IHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBnbHNsU291cmNlOiBnbHNsU291cmNlLFxuICAgICAgZGVwZW5kc09uOiBbXSxcbiAgICAgIHJlcXVpcmVkQnk6IFtdLFxuICAgICAgZXZhbHVhdGVkOiBmYWxzZSxcbiAgICB9O1xuICAgIG5vZGVzLnB1c2goZGVwZW5kZW5jeU5vZGUpO1xuICB9XG5cbiAgcmV0dXJuIGRlcGVuZGVuY3lOb2RlO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZURlcGVuZGVuY2llcyhjdXJyZW50Tm9kZSwgZGVwZW5kZW5jeU5vZGVzKSB7XG4gIGlmIChjdXJyZW50Tm9kZS5ldmFsdWF0ZWQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjdXJyZW50Tm9kZS5ldmFsdWF0ZWQgPSB0cnVlO1xuXG4gIC8vIGlkZW50aWZ5IGFsbCBkZXBlbmRlbmNpZXMgdGhhdCBhcmUgcmVmZXJlbmNlZCBmcm9tIHRoaXMgZ2xzbCBzb3VyY2UgY29kZVxuICB2YXIgY3ptTWF0Y2hlcyA9IGN1cnJlbnROb2RlLmdsc2xTb3VyY2UubWF0Y2goL1xcYmN6bV9bYS16QS1aMC05X10qL2cpO1xuICBpZiAoZGVmaW5lZChjem1NYXRjaGVzKSAmJiBjem1NYXRjaGVzICE9PSBudWxsKSB7XG4gICAgLy8gcmVtb3ZlIGR1cGxpY2F0ZXNcbiAgICBjem1NYXRjaGVzID0gY3ptTWF0Y2hlcy5maWx0ZXIoZnVuY3Rpb24gKGVsZW0sIHBvcykge1xuICAgICAgcmV0dXJuIGN6bU1hdGNoZXMuaW5kZXhPZihlbGVtKSA9PT0gcG9zO1xuICAgIH0pO1xuXG4gICAgY3ptTWF0Y2hlcy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICBpZiAoXG4gICAgICAgIGVsZW1lbnQgIT09IGN1cnJlbnROb2RlLm5hbWUgJiZcbiAgICAgICAgU2hhZGVyU291cmNlLl9jem1CdWlsdGluc0FuZFVuaWZvcm1zLmhhc093blByb3BlcnR5KGVsZW1lbnQpXG4gICAgICApIHtcbiAgICAgICAgdmFyIHJlZmVyZW5jZWROb2RlID0gZ2V0RGVwZW5kZW5jeU5vZGUoXG4gICAgICAgICAgZWxlbWVudCxcbiAgICAgICAgICBTaGFkZXJTb3VyY2UuX2N6bUJ1aWx0aW5zQW5kVW5pZm9ybXNbZWxlbWVudF0sXG4gICAgICAgICAgZGVwZW5kZW5jeU5vZGVzXG4gICAgICAgICk7XG4gICAgICAgIGN1cnJlbnROb2RlLmRlcGVuZHNPbi5wdXNoKHJlZmVyZW5jZWROb2RlKTtcbiAgICAgICAgcmVmZXJlbmNlZE5vZGUucmVxdWlyZWRCeS5wdXNoKGN1cnJlbnROb2RlKTtcblxuICAgICAgICAvLyByZWN1cnNpdmUgY2FsbCB0byBmaW5kIGFueSBkZXBlbmRlbmNpZXMgb2YgdGhlIG5ldyBub2RlXG4gICAgICAgIGdlbmVyYXRlRGVwZW5kZW5jaWVzKHJlZmVyZW5jZWROb2RlLCBkZXBlbmRlbmN5Tm9kZXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIHNvcnREZXBlbmRlbmNpZXMoZGVwZW5kZW5jeU5vZGVzKSB7XG4gIHZhciBub2Rlc1dpdGhvdXRJbmNvbWluZ0VkZ2VzID0gW107XG4gIHZhciBhbGxOb2RlcyA9IFtdO1xuXG4gIHdoaWxlIChkZXBlbmRlbmN5Tm9kZXMubGVuZ3RoID4gMCkge1xuICAgIHZhciBub2RlID0gZGVwZW5kZW5jeU5vZGVzLnBvcCgpO1xuICAgIGFsbE5vZGVzLnB1c2gobm9kZSk7XG5cbiAgICBpZiAobm9kZS5yZXF1aXJlZEJ5Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgbm9kZXNXaXRob3V0SW5jb21pbmdFZGdlcy5wdXNoKG5vZGUpO1xuICAgIH1cbiAgfVxuXG4gIHdoaWxlIChub2Rlc1dpdGhvdXRJbmNvbWluZ0VkZ2VzLmxlbmd0aCA+IDApIHtcbiAgICB2YXIgY3VycmVudE5vZGUgPSBub2Rlc1dpdGhvdXRJbmNvbWluZ0VkZ2VzLnNoaWZ0KCk7XG5cbiAgICBkZXBlbmRlbmN5Tm9kZXMucHVzaChjdXJyZW50Tm9kZSk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGN1cnJlbnROb2RlLmRlcGVuZHNPbi5sZW5ndGg7ICsraSkge1xuICAgICAgLy8gcmVtb3ZlIHRoZSBlZGdlIGZyb20gdGhlIGdyYXBoXG4gICAgICB2YXIgcmVmZXJlbmNlZE5vZGUgPSBjdXJyZW50Tm9kZS5kZXBlbmRzT25baV07XG4gICAgICB2YXIgaW5kZXggPSByZWZlcmVuY2VkTm9kZS5yZXF1aXJlZEJ5LmluZGV4T2YoY3VycmVudE5vZGUpO1xuICAgICAgcmVmZXJlbmNlZE5vZGUucmVxdWlyZWRCeS5zcGxpY2UoaW5kZXgsIDEpO1xuXG4gICAgICAvLyBpZiByZWZlcmVuY2VkIG5vZGUgaGFzIG5vIG1vcmUgaW5jb21pbmcgZWRnZXMsIGFkZCB0byBsaXN0XG4gICAgICBpZiAocmVmZXJlbmNlZE5vZGUucmVxdWlyZWRCeS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgbm9kZXNXaXRob3V0SW5jb21pbmdFZGdlcy5wdXNoKHJlZmVyZW5jZWROb2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBpZiB0aGVyZSBhcmUgYW55IG5vZGVzIGxlZnQgd2l0aCBpbmNvbWluZyBlZGdlcywgdGhlbiB0aGVyZSB3YXMgYSBjaXJjdWxhciBkZXBlbmRlbmN5IHNvbWV3aGVyZSBpbiB0aGUgZ3JhcGhcbiAgdmFyIGJhZE5vZGVzID0gW107XG4gIGZvciAodmFyIGogPSAwOyBqIDwgYWxsTm9kZXMubGVuZ3RoOyArK2opIHtcbiAgICBpZiAoYWxsTm9kZXNbal0ucmVxdWlyZWRCeS5sZW5ndGggIT09IDApIHtcbiAgICAgIGJhZE5vZGVzLnB1c2goYWxsTm9kZXNbal0pO1xuICAgIH1cbiAgfVxuXG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmIChiYWROb2Rlcy5sZW5ndGggIT09IDApIHtcbiAgICB2YXIgbWVzc2FnZSA9XG4gICAgICBcIkEgY2lyY3VsYXIgZGVwZW5kZW5jeSB3YXMgZm91bmQgaW4gdGhlIGZvbGxvd2luZyBidWlsdC1pbiBmdW5jdGlvbnMvc3RydWN0cy9jb25zdGFudHM6IFxcblwiO1xuICAgIGZvciAodmFyIGsgPSAwOyBrIDwgYmFkTm9kZXMubGVuZ3RoOyArK2spIHtcbiAgICAgIG1lc3NhZ2UgPSBtZXNzYWdlICsgYmFkTm9kZXNba10ubmFtZSArIFwiXFxuXCI7XG4gICAgfVxuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihtZXNzYWdlKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcbn1cblxuZnVuY3Rpb24gZ2V0QnVpbHRpbnNBbmRBdXRvbWF0aWNVbmlmb3JtcyhzaGFkZXJTb3VyY2UpIHtcbiAgLy8gZ2VuZXJhdGUgYSBkZXBlbmRlbmN5IGdyYXBoIGZvciBidWlsdGluIGZ1bmN0aW9uc1xuICB2YXIgZGVwZW5kZW5jeU5vZGVzID0gW107XG4gIHZhciByb290ID0gZ2V0RGVwZW5kZW5jeU5vZGUoXCJtYWluXCIsIHNoYWRlclNvdXJjZSwgZGVwZW5kZW5jeU5vZGVzKTtcbiAgZ2VuZXJhdGVEZXBlbmRlbmNpZXMocm9vdCwgZGVwZW5kZW5jeU5vZGVzKTtcbiAgc29ydERlcGVuZGVuY2llcyhkZXBlbmRlbmN5Tm9kZXMpO1xuXG4gIC8vIENvbmNhdGVuYXRlIHRoZSBzb3VyY2UgY29kZSBmb3IgdGhlIGZ1bmN0aW9uIGRlcGVuZGVuY2llcy5cbiAgLy8gSXRlcmF0ZSBpbiByZXZlcnNlIHNvIHRoYXQgZGVwZW5kZW50IGl0ZW1zIGFyZSBkZWNsYXJlZCBiZWZvcmUgdGhleSBhcmUgdXNlZC5cbiAgdmFyIGJ1aWx0aW5zU291cmNlID0gXCJcIjtcbiAgZm9yICh2YXIgaSA9IGRlcGVuZGVuY3lOb2Rlcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgIGJ1aWx0aW5zU291cmNlID0gYnVpbHRpbnNTb3VyY2UgKyBkZXBlbmRlbmN5Tm9kZXNbaV0uZ2xzbFNvdXJjZSArIFwiXFxuXCI7XG4gIH1cblxuICByZXR1cm4gYnVpbHRpbnNTb3VyY2UucmVwbGFjZShyb290Lmdsc2xTb3VyY2UsIFwiXCIpO1xufVxuXG5mdW5jdGlvbiBjb21iaW5lU2hhZGVyKHNoYWRlclNvdXJjZSwgaXNGcmFnbWVudFNoYWRlciwgY29udGV4dCkge1xuICB2YXIgaTtcbiAgdmFyIGxlbmd0aDtcblxuICAvLyBDb21iaW5lIHNoYWRlciBzb3VyY2VzLCBnZW5lcmFsbHkgZm9yIHBzZXVkby1wb2x5bW9ycGhpc20sIGUuZy4sIGN6bV9nZXRNYXRlcmlhbC5cbiAgdmFyIGNvbWJpbmVkU291cmNlcyA9IFwiXCI7XG4gIHZhciBzb3VyY2VzID0gc2hhZGVyU291cmNlLnNvdXJjZXM7XG4gIGlmIChkZWZpbmVkKHNvdXJjZXMpKSB7XG4gICAgZm9yIChpID0gMCwgbGVuZ3RoID0gc291cmNlcy5sZW5ndGg7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgICAgLy8gI2xpbmUgbmVlZHMgdG8gYmUgb24gaXRzIG93biBsaW5lLlxuICAgICAgY29tYmluZWRTb3VyY2VzICs9IFwiXFxuI2xpbmUgMFxcblwiICsgc291cmNlc1tpXTtcbiAgICB9XG4gIH1cblxuICBjb21iaW5lZFNvdXJjZXMgPSByZW1vdmVDb21tZW50cyhjb21iaW5lZFNvdXJjZXMpO1xuXG4gIC8vIEV4dHJhY3QgZXhpc3Rpbmcgc2hhZGVyIHZlcnNpb24gZnJvbSBzb3VyY2VzXG4gIHZhciB2ZXJzaW9uO1xuICBjb21iaW5lZFNvdXJjZXMgPSBjb21iaW5lZFNvdXJjZXMucmVwbGFjZSgvI3ZlcnNpb25cXHMrKC4qPylcXG4vZ20sIGZ1bmN0aW9uIChcbiAgICBtYXRjaCxcbiAgICBncm91cDFcbiAgKSB7XG4gICAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgICBpZiAoZGVmaW5lZCh2ZXJzaW9uKSAmJiB2ZXJzaW9uICE9PSBncm91cDEpIHtcbiAgICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgICAgXCJpbmNvbnNpc3RlbnQgdmVyc2lvbnMgZm91bmQ6IFwiICsgdmVyc2lvbiArIFwiIGFuZCBcIiArIGdyb3VwMVxuICAgICAgKTtcbiAgICB9XG4gICAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgICAvLyBFeHRyYWN0ICN2ZXJzaW9uIHRvIHB1dCBhdCB0aGUgdG9wXG4gICAgdmVyc2lvbiA9IGdyb3VwMTtcblxuICAgIC8vIFJlcGxhY2Ugb3JpZ2luYWwgI3ZlcnNpb24gZGlyZWN0aXZlIHdpdGggYSBuZXcgbGluZSBzbyB0aGUgbGluZSBudW1iZXJzXG4gICAgLy8gYXJlIG5vdCBvZmYgYnkgb25lLiAgVGhlcmUgY2FuIGJlIG9ubHkgb25lICN2ZXJzaW9uIGRpcmVjdGl2ZVxuICAgIC8vIGFuZCBpdCBtdXN0IGFwcGVhciBhdCB0aGUgdG9wIG9mIHRoZSBzb3VyY2UsIG9ubHkgcHJlY2VkZWQgYnlcbiAgICAvLyB3aGl0ZXNwYWNlIGFuZCBjb21tZW50cy5cbiAgICByZXR1cm4gXCJcXG5cIjtcbiAgfSk7XG5cbiAgLy8gRXh0cmFjdCBzaGFkZXIgZXh0ZW5zaW9ucyBmcm9tIHNvdXJjZXNcbiAgdmFyIGV4dGVuc2lvbnMgPSBbXTtcbiAgY29tYmluZWRTb3VyY2VzID0gY29tYmluZWRTb3VyY2VzLnJlcGxhY2UoLyNleHRlbnNpb24uKlxcbi9nbSwgZnVuY3Rpb24gKFxuICAgIG1hdGNoXG4gICkge1xuICAgIC8vIEV4dHJhY3QgZXh0ZW5zaW9uIHRvIHB1dCBhdCB0aGUgdG9wXG4gICAgZXh0ZW5zaW9ucy5wdXNoKG1hdGNoKTtcblxuICAgIC8vIFJlcGxhY2Ugb3JpZ2luYWwgI2V4dGVuc2lvbiBkaXJlY3RpdmUgd2l0aCBhIG5ldyBsaW5lIHNvIHRoZSBsaW5lIG51bWJlcnNcbiAgICAvLyBhcmUgbm90IG9mZiBieSBvbmUuXG4gICAgcmV0dXJuIFwiXFxuXCI7XG4gIH0pO1xuXG4gIC8vIFJlbW92ZSBwcmVjaXNpb24gcXVhbGlmaWVyXG4gIGNvbWJpbmVkU291cmNlcyA9IGNvbWJpbmVkU291cmNlcy5yZXBsYWNlKFxuICAgIC9wcmVjaXNpb25cXHMobG93cHxtZWRpdW1wfGhpZ2hwKVxccyhmbG9hdHxpbnQpOy8sXG4gICAgXCJcIlxuICApO1xuXG4gIC8vIFJlcGxhY2UgbWFpbigpIGZvciBwaWNrZWQgaWYgZGVzaXJlZC5cbiAgdmFyIHBpY2tDb2xvclF1YWxpZmllciA9IHNoYWRlclNvdXJjZS5waWNrQ29sb3JRdWFsaWZpZXI7XG4gIGlmIChkZWZpbmVkKHBpY2tDb2xvclF1YWxpZmllcikpIHtcbiAgICBjb21iaW5lZFNvdXJjZXMgPSBTaGFkZXJTb3VyY2UuY3JlYXRlUGlja0ZyYWdtZW50U2hhZGVyU291cmNlKFxuICAgICAgY29tYmluZWRTb3VyY2VzLFxuICAgICAgcGlja0NvbG9yUXVhbGlmaWVyXG4gICAgKTtcbiAgfVxuXG4gIC8vIGNvbWJpbmUgaW50byBzaW5nbGUgc3RyaW5nXG4gIHZhciByZXN1bHQgPSBcIlwiO1xuXG4gIC8vICN2ZXJzaW9uIG11c3QgYmUgZmlyc3RcbiAgLy8gZGVmYXVsdHMgdG8gI3ZlcnNpb24gMTAwIGlmIG5vdCBzcGVjaWZpZWRcbiAgaWYgKGRlZmluZWQodmVyc2lvbikpIHtcbiAgICByZXN1bHQgPSBcIiN2ZXJzaW9uIFwiICsgdmVyc2lvbiArIFwiXFxuXCI7XG4gIH1cblxuICB2YXIgZXh0ZW5zaW9uc0xlbmd0aCA9IGV4dGVuc2lvbnMubGVuZ3RoO1xuICBmb3IgKGkgPSAwOyBpIDwgZXh0ZW5zaW9uc0xlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0ICs9IGV4dGVuc2lvbnNbaV07XG4gIH1cblxuICBpZiAoaXNGcmFnbWVudFNoYWRlcikge1xuICAgIC8vIElmIGhpZ2ggcHJlY2lzaW9uIGlzbid0IHN1cHBvcnQgcmVwbGFjZSBvY2N1cnJlbmNlcyBvZiBoaWdocCB3aXRoIG1lZGl1bXBcbiAgICAvLyBUaGUgaGlnaHAga2V5d29yZCBpcyBub3QgYWx3YXlzIGF2YWlsYWJsZSBvbiBvbGRlciBtb2JpbGUgZGV2aWNlc1xuICAgIC8vIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2ViR0xfQVBJL1dlYkdMX2Jlc3RfcHJhY3RpY2VzI0luX1dlYkdMXzFfaGlnaHBfZmxvYXRfc3VwcG9ydF9pc19vcHRpb25hbF9pbl9mcmFnbWVudF9zaGFkZXJzXG4gICAgcmVzdWx0ICs9XG4gICAgICBcIlxcXG4jaWZkZWYgR0xfRlJBR01FTlRfUFJFQ0lTSU9OX0hJR0hcXG5cXFxuICAgIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5cXFxuI2Vsc2VcXG5cXFxuICAgIHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xcblxcXG4gICAgI2RlZmluZSBoaWdocCBtZWRpdW1wXFxuXFxcbiNlbmRpZlxcblxcblwiO1xuICB9XG5cbiAgLy8gUHJlcGVuZCAjZGVmaW5lcyBmb3IgdWJlci1zaGFkZXJzXG4gIHZhciBkZWZpbmVzID0gc2hhZGVyU291cmNlLmRlZmluZXM7XG4gIGlmIChkZWZpbmVkKGRlZmluZXMpKSB7XG4gICAgZm9yIChpID0gMCwgbGVuZ3RoID0gZGVmaW5lcy5sZW5ndGg7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGRlZmluZSA9IGRlZmluZXNbaV07XG4gICAgICBpZiAoZGVmaW5lLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICByZXN1bHQgKz0gXCIjZGVmaW5lIFwiICsgZGVmaW5lICsgXCJcXG5cIjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBHTFNMTW9kZXJuaXplciBpbnNlcnRzIGl0cyBvd24gbGF5b3V0IHF1YWxpZmllcnNcbiAgLy8gYXQgdGhpcyBwb3NpdGlvbiBpbiB0aGUgc291cmNlXG4gIGlmIChjb250ZXh0LndlYmdsMikge1xuICAgIHJlc3VsdCArPSBcIiNkZWZpbmUgT1VUUFVUX0RFQ0xBUkFUSU9OXFxuXFxuXCI7XG4gIH1cblxuICAvLyBEZWZpbmUgYSBjb25zdGFudCBmb3IgdGhlIE9FU190ZXh0dXJlX2Zsb2F0X2xpbmVhciBleHRlbnNpb24gc2luY2UgV2ViR0wgZG9lcyBub3QuXG4gIGlmIChjb250ZXh0LnRleHR1cmVGbG9hdExpbmVhcikge1xuICAgIHJlc3VsdCArPSBcIiNkZWZpbmUgT0VTX3RleHR1cmVfZmxvYXRfbGluZWFyXFxuXFxuXCI7XG4gIH1cblxuICAvLyBEZWZpbmUgYSBjb25zdGFudCBmb3IgdGhlIE9FU190ZXh0dXJlX2Zsb2F0IGV4dGVuc2lvbiBzaW5jZSBXZWJHTCBkb2VzIG5vdC5cbiAgaWYgKGNvbnRleHQuZmxvYXRpbmdQb2ludFRleHR1cmUpIHtcbiAgICByZXN1bHQgKz0gXCIjZGVmaW5lIE9FU190ZXh0dXJlX2Zsb2F0XFxuXFxuXCI7XG4gIH1cblxuICAvLyBhcHBlbmQgYnVpbHQtaW5zXG4gIGlmIChzaGFkZXJTb3VyY2UuaW5jbHVkZUJ1aWx0SW5zKSB7XG4gICAgcmVzdWx0ICs9IGdldEJ1aWx0aW5zQW5kQXV0b21hdGljVW5pZm9ybXMoY29tYmluZWRTb3VyY2VzKTtcbiAgfVxuXG4gIC8vIHJlc2V0IGxpbmUgbnVtYmVyXG4gIHJlc3VsdCArPSBcIlxcbiNsaW5lIDBcXG5cIjtcblxuICAvLyBhcHBlbmQgYWN0dWFsIHNvdXJjZVxuICByZXN1bHQgKz0gY29tYmluZWRTb3VyY2VzO1xuXG4gIC8vIG1vZGVybml6ZSB0aGUgc291cmNlXG4gIGlmIChjb250ZXh0LndlYmdsMikge1xuICAgIHJlc3VsdCA9IG1vZGVybml6ZVNoYWRlcihyZXN1bHQsIGlzRnJhZ21lbnRTaGFkZXIsIHRydWUpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBBbiBvYmplY3QgY29udGFpbmluZyB2YXJpb3VzIGlucHV0cyB0aGF0IHdpbGwgYmUgY29tYmluZWQgdG8gZm9ybSBhIGZpbmFsIEdMU0wgc2hhZGVyIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqIEBwYXJhbSB7U3RyaW5nW119IFtvcHRpb25zLnNvdXJjZXNdIEFuIGFycmF5IG9mIHN0cmluZ3MgdG8gY29tYmluZSBjb250YWluaW5nIEdMU0wgY29kZSBmb3IgdGhlIHNoYWRlci5cbiAqIEBwYXJhbSB7U3RyaW5nW119IFtvcHRpb25zLmRlZmluZXNdIEFuIGFycmF5IG9mIHN0cmluZ3MgY29udGFpbmluZyBHTFNMIGlkZW50aWZpZXJzIHRvIDxjb2RlPiNkZWZpbmU8L2NvZGU+LlxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnBpY2tDb2xvclF1YWxpZmllcl0gVGhlIEdMU0wgcXVhbGlmaWVyLCA8Y29kZT51bmlmb3JtPC9jb2RlPiBvciA8Y29kZT52YXJ5aW5nPC9jb2RlPiwgZm9yIHRoZSBpbnB1dCA8Y29kZT5jem1fcGlja0NvbG9yPC9jb2RlPi4gIFdoZW4gZGVmaW5lZCwgYSBwaWNrIGZyYWdtZW50IHNoYWRlciBpcyBnZW5lcmF0ZWQuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmluY2x1ZGVCdWlsdElucz10cnVlXSBJZiB0cnVlLCByZWZlcmVuY2VkIGJ1aWx0LWluIGZ1bmN0aW9ucyB3aWxsIGJlIGluY2x1ZGVkIHdpdGggdGhlIGNvbWJpbmVkIHNoYWRlci4gIFNldCB0byBmYWxzZSBpZiB0aGlzIHNoYWRlciB3aWxsIGJlY29tZSBhIHNvdXJjZSBpbiBhbm90aGVyIHNoYWRlciwgdG8gYXZvaWQgZHVwbGljYXRpbmcgZnVuY3Rpb25zLlxuICpcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBvcHRpb25zLnBpY2tDb2xvclF1YWxpZmllciBtdXN0IGJlICd1bmlmb3JtJyBvciAndmFyeWluZycuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIDEuIFByZXBlbmQgI2RlZmluZXMgdG8gYSBzaGFkZXJcbiAqIHZhciBzb3VyY2UgPSBuZXcgQ2VzaXVtLlNoYWRlclNvdXJjZSh7XG4gKiAgIGRlZmluZXMgOiBbJ1dISVRFJ10sXG4gKiAgIHNvdXJjZXMgOiBbJ3ZvaWQgbWFpbigpIHsgXFxuI2lmZGVmIFdISVRFXFxuIGdsX0ZyYWdDb2xvciA9IHZlYzQoMS4wKTsgXFxuI2Vsc2VcXG4gZ2xfRnJhZ0NvbG9yID0gdmVjNCgwLjApOyBcXG4jZW5kaWZcXG4gfSddXG4gKiB9KTtcbiAqXG4gKiAvLyAyLiBNb2RpZnkgYSBmcmFnbWVudCBzaGFkZXIgZm9yIHBpY2tpbmdcbiAqIHZhciBzb3VyY2UgPSBuZXcgQ2VzaXVtLlNoYWRlclNvdXJjZSh7XG4gKiAgIHNvdXJjZXMgOiBbJ3ZvaWQgbWFpbigpIHsgZ2xfRnJhZ0NvbG9yID0gdmVjNCgxLjApOyB9J10sXG4gKiAgIHBpY2tDb2xvclF1YWxpZmllciA6ICd1bmlmb3JtJ1xuICogfSk7XG4gKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gU2hhZGVyU291cmNlKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcbiAgdmFyIHBpY2tDb2xvclF1YWxpZmllciA9IG9wdGlvbnMucGlja0NvbG9yUXVhbGlmaWVyO1xuXG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIGlmIChcbiAgICBkZWZpbmVkKHBpY2tDb2xvclF1YWxpZmllcikgJiZcbiAgICBwaWNrQ29sb3JRdWFsaWZpZXIgIT09IFwidW5pZm9ybVwiICYmXG4gICAgcGlja0NvbG9yUXVhbGlmaWVyICE9PSBcInZhcnlpbmdcIlxuICApIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIm9wdGlvbnMucGlja0NvbG9yUXVhbGlmaWVyIG11c3QgYmUgJ3VuaWZvcm0nIG9yICd2YXJ5aW5nJy5cIlxuICAgICk7XG4gIH1cbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdGhpcy5kZWZpbmVzID0gZGVmaW5lZChvcHRpb25zLmRlZmluZXMpID8gb3B0aW9ucy5kZWZpbmVzLnNsaWNlKDApIDogW107XG4gIHRoaXMuc291cmNlcyA9IGRlZmluZWQob3B0aW9ucy5zb3VyY2VzKSA/IG9wdGlvbnMuc291cmNlcy5zbGljZSgwKSA6IFtdO1xuICB0aGlzLnBpY2tDb2xvclF1YWxpZmllciA9IHBpY2tDb2xvclF1YWxpZmllcjtcbiAgdGhpcy5pbmNsdWRlQnVpbHRJbnMgPSBkZWZhdWx0VmFsdWUob3B0aW9ucy5pbmNsdWRlQnVpbHRJbnMsIHRydWUpO1xufVxuXG5TaGFkZXJTb3VyY2UucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gbmV3IFNoYWRlclNvdXJjZSh7XG4gICAgc291cmNlczogdGhpcy5zb3VyY2VzLFxuICAgIGRlZmluZXM6IHRoaXMuZGVmaW5lcyxcbiAgICBwaWNrQ29sb3JRdWFsaWZpZXI6IHRoaXMucGlja0NvbG9yUXVhbGlmaWVyLFxuICAgIGluY2x1ZGVCdWlsdEluczogdGhpcy5pbmNsdWRlQnVpbHRJbnMsXG4gIH0pO1xufTtcblxuU2hhZGVyU291cmNlLnJlcGxhY2VNYWluID0gZnVuY3Rpb24gKHNvdXJjZSwgcmVuYW1lZE1haW4pIHtcbiAgcmVuYW1lZE1haW4gPSBcInZvaWQgXCIgKyByZW5hbWVkTWFpbiArIFwiKClcIjtcbiAgcmV0dXJuIHNvdXJjZS5yZXBsYWNlKC92b2lkXFxzK21haW5cXHMqXFwoXFxzKig/OnZvaWQpP1xccypcXCkvZywgcmVuYW1lZE1haW4pO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgYSBzaW5nbGUgc3RyaW5nIGNvbnRhaW5pbmcgdGhlIGZ1bGwsIGNvbWJpbmVkIHZlcnRleCBzaGFkZXIgd2l0aCBhbGwgZGVwZW5kZW5jaWVzIGFuZCBkZWZpbmVzLlxuICpcbiAqIEBwYXJhbSB7Q29udGV4dH0gY29udGV4dCBUaGUgY3VycmVudCByZW5kZXJpbmcgY29udGV4dFxuICpcbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBjb21iaW5lZCBzaGFkZXIgc3RyaW5nLlxuICovXG5TaGFkZXJTb3VyY2UucHJvdG90eXBlLmNyZWF0ZUNvbWJpbmVkVmVydGV4U2hhZGVyID0gZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgcmV0dXJuIGNvbWJpbmVTaGFkZXIodGhpcywgZmFsc2UsIGNvbnRleHQpO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgYSBzaW5nbGUgc3RyaW5nIGNvbnRhaW5pbmcgdGhlIGZ1bGwsIGNvbWJpbmVkIGZyYWdtZW50IHNoYWRlciB3aXRoIGFsbCBkZXBlbmRlbmNpZXMgYW5kIGRlZmluZXMuXG4gKlxuICogQHBhcmFtIHtDb250ZXh0fSBjb250ZXh0IFRoZSBjdXJyZW50IHJlbmRlcmluZyBjb250ZXh0XG4gKlxuICogQHJldHVybnMge1N0cmluZ30gVGhlIGNvbWJpbmVkIHNoYWRlciBzdHJpbmcuXG4gKi9cblNoYWRlclNvdXJjZS5wcm90b3R5cGUuY3JlYXRlQ29tYmluZWRGcmFnbWVudFNoYWRlciA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gIHJldHVybiBjb21iaW5lU2hhZGVyKHRoaXMsIHRydWUsIGNvbnRleHQpO1xufTtcblxuLyoqXG4gKiBGb3IgU2hhZGVyUHJvZ3JhbSB0ZXN0aW5nXG4gKiBAcHJpdmF0ZVxuICovXG5TaGFkZXJTb3VyY2UuX2N6bUJ1aWx0aW5zQW5kVW5pZm9ybXMgPSB7fTtcblxuLy8gY29tYmluZSBhdXRvbWF0aWMgdW5pZm9ybXMgYW5kIENlc2l1bSBidWlsdC1pbnNcbmZvciAodmFyIGJ1aWx0aW5OYW1lIGluIEN6bUJ1aWx0aW5zKSB7XG4gIGlmIChDem1CdWlsdGlucy5oYXNPd25Qcm9wZXJ0eShidWlsdGluTmFtZSkpIHtcbiAgICBTaGFkZXJTb3VyY2UuX2N6bUJ1aWx0aW5zQW5kVW5pZm9ybXNbYnVpbHRpbk5hbWVdID1cbiAgICAgIEN6bUJ1aWx0aW5zW2J1aWx0aW5OYW1lXTtcbiAgfVxufVxuZm9yICh2YXIgdW5pZm9ybU5hbWUgaW4gQXV0b21hdGljVW5pZm9ybXMpIHtcbiAgaWYgKEF1dG9tYXRpY1VuaWZvcm1zLmhhc093blByb3BlcnR5KHVuaWZvcm1OYW1lKSkge1xuICAgIHZhciB1bmlmb3JtID0gQXV0b21hdGljVW5pZm9ybXNbdW5pZm9ybU5hbWVdO1xuICAgIGlmICh0eXBlb2YgdW5pZm9ybS5nZXREZWNsYXJhdGlvbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBTaGFkZXJTb3VyY2UuX2N6bUJ1aWx0aW5zQW5kVW5pZm9ybXNbXG4gICAgICAgIHVuaWZvcm1OYW1lXG4gICAgICBdID0gdW5pZm9ybS5nZXREZWNsYXJhdGlvbih1bmlmb3JtTmFtZSk7XG4gICAgfVxuICB9XG59XG5cblNoYWRlclNvdXJjZS5jcmVhdGVQaWNrVmVydGV4U2hhZGVyU291cmNlID0gZnVuY3Rpb24gKHZlcnRleFNoYWRlclNvdXJjZSkge1xuICB2YXIgcmVuYW1lZFZTID0gU2hhZGVyU291cmNlLnJlcGxhY2VNYWluKHZlcnRleFNoYWRlclNvdXJjZSwgXCJjem1fb2xkX21haW5cIik7XG4gIHZhciBwaWNrTWFpbiA9XG4gICAgXCJhdHRyaWJ1dGUgdmVjNCBwaWNrQ29sb3I7IFxcblwiICtcbiAgICBcInZhcnlpbmcgdmVjNCBjem1fcGlja0NvbG9yOyBcXG5cIiArXG4gICAgXCJ2b2lkIG1haW4oKSBcXG5cIiArXG4gICAgXCJ7IFxcblwiICtcbiAgICBcIiAgICBjem1fb2xkX21haW4oKTsgXFxuXCIgK1xuICAgIFwiICAgIGN6bV9waWNrQ29sb3IgPSBwaWNrQ29sb3I7IFxcblwiICtcbiAgICBcIn1cIjtcblxuICByZXR1cm4gcmVuYW1lZFZTICsgXCJcXG5cIiArIHBpY2tNYWluO1xufTtcblxuU2hhZGVyU291cmNlLmNyZWF0ZVBpY2tGcmFnbWVudFNoYWRlclNvdXJjZSA9IGZ1bmN0aW9uIChcbiAgZnJhZ21lbnRTaGFkZXJTb3VyY2UsXG4gIHBpY2tDb2xvclF1YWxpZmllclxuKSB7XG4gIHZhciByZW5hbWVkRlMgPSBTaGFkZXJTb3VyY2UucmVwbGFjZU1haW4oXG4gICAgZnJhZ21lbnRTaGFkZXJTb3VyY2UsXG4gICAgXCJjem1fb2xkX21haW5cIlxuICApO1xuICB2YXIgcGlja01haW4gPVxuICAgIHBpY2tDb2xvclF1YWxpZmllciArXG4gICAgXCIgdmVjNCBjem1fcGlja0NvbG9yOyBcXG5cIiArXG4gICAgXCJ2b2lkIG1haW4oKSBcXG5cIiArXG4gICAgXCJ7IFxcblwiICtcbiAgICBcIiAgICBjem1fb2xkX21haW4oKTsgXFxuXCIgK1xuICAgIFwiICAgIGlmIChnbF9GcmFnQ29sb3IuYSA9PSAwLjApIHsgXFxuXCIgK1xuICAgIFwiICAgICAgIGRpc2NhcmQ7IFxcblwiICtcbiAgICBcIiAgICB9IFxcblwiICtcbiAgICBcIiAgICBnbF9GcmFnQ29sb3IgPSBjem1fcGlja0NvbG9yOyBcXG5cIiArXG4gICAgXCJ9XCI7XG5cbiAgcmV0dXJuIHJlbmFtZWRGUyArIFwiXFxuXCIgKyBwaWNrTWFpbjtcbn07XG5cblNoYWRlclNvdXJjZS5maW5kVmFyeWluZyA9IGZ1bmN0aW9uIChzaGFkZXJTb3VyY2UsIG5hbWVzKSB7XG4gIHZhciBzb3VyY2VzID0gc2hhZGVyU291cmNlLnNvdXJjZXM7XG5cbiAgdmFyIG5hbWVzTGVuZ3RoID0gbmFtZXMubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG5hbWVzTGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgbmFtZSA9IG5hbWVzW2ldO1xuXG4gICAgdmFyIHNvdXJjZXNMZW5ndGggPSBzb3VyY2VzLmxlbmd0aDtcbiAgICBmb3IgKHZhciBqID0gMDsgaiA8IHNvdXJjZXNMZW5ndGg7ICsraikge1xuICAgICAgaWYgKHNvdXJjZXNbal0uaW5kZXhPZihuYW1lKSAhPT0gLTEpIHtcbiAgICAgICAgcmV0dXJuIG5hbWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbnZhciBub3JtYWxWYXJ5aW5nTmFtZXMgPSBbXCJ2X25vcm1hbEVDXCIsIFwidl9ub3JtYWxcIl07XG5cblNoYWRlclNvdXJjZS5maW5kTm9ybWFsVmFyeWluZyA9IGZ1bmN0aW9uIChzaGFkZXJTb3VyY2UpIHtcbiAgcmV0dXJuIFNoYWRlclNvdXJjZS5maW5kVmFyeWluZyhzaGFkZXJTb3VyY2UsIG5vcm1hbFZhcnlpbmdOYW1lcyk7XG59O1xuXG52YXIgcG9zaXRpb25WYXJ5aW5nTmFtZXMgPSBbXCJ2X3Bvc2l0aW9uRUNcIl07XG5cblNoYWRlclNvdXJjZS5maW5kUG9zaXRpb25WYXJ5aW5nID0gZnVuY3Rpb24gKHNoYWRlclNvdXJjZSkge1xuICByZXR1cm4gU2hhZGVyU291cmNlLmZpbmRWYXJ5aW5nKHNoYWRlclNvdXJjZSwgcG9zaXRpb25WYXJ5aW5nTmFtZXMpO1xufTtcbmV4cG9ydCBkZWZhdWx0IFNoYWRlclNvdXJjZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///53642\n')},8743:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _Core_createGuid_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(39960);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(99417);\n/* harmony import */ var _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(38443);\n/* harmony import */ var _ContextLimits_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(20521);\n/* harmony import */ var _MipmapHint_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(45368);\n/* harmony import */ var _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(21572);\n/* harmony import */ var _Sampler_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(87721);\n/* harmony import */ var _TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(42246);\n/* harmony import */ var _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(80188);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nfunction Texture(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defined */ .Z.defined("options.context", options.context);\n  //>>includeEnd(\'debug\');\n\n  var context = options.context;\n  var width = options.width;\n  var height = options.height;\n  var source = options.source;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source)) {\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(width)) {\n      width = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(source.videoWidth, source.width);\n    }\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(height)) {\n      height = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(source.videoHeight, source.height);\n    }\n  }\n\n  var pixelFormat = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.pixelFormat, _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].RGBA */ .Z.RGBA);\n  var pixelDatatype = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.pixelDatatype,\n    _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE\n  );\n  var internalFormat = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].toInternalFormat */ .Z.toInternalFormat(\n    pixelFormat,\n    pixelDatatype,\n    context\n  );\n\n  var isCompressed = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isCompressedFormat */ .Z.isCompressedFormat(internalFormat);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(width) || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(height)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "options requires a source field to create an initialized texture or width and height fields to create a blank texture."\n    );\n  }\n\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("width", width, 0);\n\n  if (width > _ContextLimits_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].maximumTextureSize */ .Z.maximumTextureSize) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Width must be less than or equal to the maximum texture size (" +\n        _ContextLimits_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].maximumTextureSize */ .Z.maximumTextureSize +\n        ").  Check maximumTextureSize."\n    );\n  }\n\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThan */ .Z.typeOf.number.greaterThan("height", height, 0);\n\n  if (height > _ContextLimits_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].maximumTextureSize */ .Z.maximumTextureSize) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Height must be less than or equal to the maximum texture size (" +\n        _ContextLimits_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].maximumTextureSize */ .Z.maximumTextureSize +\n        ").  Check maximumTextureSize."\n    );\n  }\n\n  if (!_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].validate */ .Z.validate(pixelFormat)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Invalid options.pixelFormat.");\n  }\n\n  if (!isCompressed && !_PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].validate */ .Z.validate(pixelDatatype)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Invalid options.pixelDatatype.");\n  }\n\n  if (\n    pixelFormat === _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].DEPTH_COMPONENT */ .Z.DEPTH_COMPONENT &&\n    pixelDatatype !== _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT &&\n    pixelDatatype !== _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "When options.pixelFormat is DEPTH_COMPONENT, options.pixelDatatype must be UNSIGNED_SHORT or UNSIGNED_INT."\n    );\n  }\n\n  if (\n    pixelFormat === _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].DEPTH_STENCIL */ .Z.DEPTH_STENCIL &&\n    pixelDatatype !== _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].UNSIGNED_INT_24_8 */ .Z.UNSIGNED_INT_24_8\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "When options.pixelFormat is DEPTH_STENCIL, options.pixelDatatype must be UNSIGNED_INT_24_8."\n    );\n  }\n\n  if (pixelDatatype === _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].FLOAT */ .Z.FLOAT && !context.floatingPointTexture) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.  Check context.floatingPointTexture."\n    );\n  }\n\n  if (\n    pixelDatatype === _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].HALF_FLOAT */ .Z.HALF_FLOAT &&\n    !context.halfFloatingPointTexture\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "When options.pixelDatatype is HALF_FLOAT, this WebGL implementation must support the OES_texture_half_float extension. Check context.halfFloatingPointTexture."\n    );\n  }\n\n  if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isDepthFormat */ .Z.isDepthFormat(pixelFormat)) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source)) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, source cannot be provided."\n      );\n    }\n\n    if (!context.depthTexture) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, this WebGL implementation must support WEBGL_depth_texture.  Check context.depthTexture."\n      );\n    }\n  }\n\n  if (isCompressed) {\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source) || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source.arrayBufferView)) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is compressed, options.source.arrayBufferView must be defined."\n      );\n    }\n\n    if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isDXTFormat */ .Z.isDXTFormat(internalFormat) && !context.s3tc) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is S3TC compressed, this WebGL implementation must support the WEBGL_compressed_texture_s3tc extension. Check context.s3tc."\n      );\n    } else if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isPVRTCFormat */ .Z.isPVRTCFormat(internalFormat) && !context.pvrtc) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is PVRTC compressed, this WebGL implementation must support the WEBGL_compressed_texture_pvrtc extension. Check context.pvrtc."\n      );\n    } else if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isASTCFormat */ .Z.isASTCFormat(internalFormat) && !context.astc) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is ASTC compressed, this WebGL implementation must support the WEBGL_compressed_texture_astc extension. Check context.astc."\n      );\n    } else if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isETC2Format */ .Z.isETC2Format(internalFormat) && !context.etc) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is ETC2 compressed, this WebGL implementation must support the WEBGL_compressed_texture_etc extension. Check context.etc."\n      );\n    } else if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isETC1Format */ .Z.isETC1Format(internalFormat) && !context.etc1) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is ETC1 compressed, this WebGL implementation must support the WEBGL_compressed_texture_etc1 extension. Check context.etc1."\n      );\n    } else if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isBC7Format */ .Z.isBC7Format(internalFormat) && !context.bc7) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "When options.pixelFormat is BC7 compressed, this WebGL implementation must support the EXT_texture_compression_bptc extension. Check context.bc7."\n      );\n    }\n\n    if (\n      _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].compressedTextureSizeInBytes */ .Z.compressedTextureSizeInBytes(\n        internalFormat,\n        width,\n        height\n      ) !== source.arrayBufferView.byteLength\n    ) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "The byte length of the array buffer is invalid for the compressed texture with the given width and height."\n      );\n    }\n  }\n  //>>includeEnd(\'debug\');\n\n  // Use premultiplied alpha for opaque textures should perform better on Chrome:\n  // http://media.tojicode.com/webglCamp4/#20\n  var preMultiplyAlpha =\n    options.preMultiplyAlpha ||\n    pixelFormat === _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].RGB */ .Z.RGB ||\n    pixelFormat === _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].LUMINANCE */ .Z.LUMINANCE;\n  var flipY = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.flipY, true);\n  var skipColorSpaceConversion = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.skipColorSpaceConversion,\n    false\n  );\n\n  var initialized = true;\n\n  var gl = context._gl;\n  var textureTarget = gl.TEXTURE_2D;\n  var texture = gl.createTexture();\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(textureTarget, texture);\n\n  var unpackAlignment = 4;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source.arrayBufferView) && !isCompressed) {\n    unpackAlignment = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].alignmentInBytes */ .Z.alignmentInBytes(\n      pixelFormat,\n      pixelDatatype,\n      width\n    );\n  }\n\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n\n  if (skipColorSpaceConversion) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n  } else {\n    gl.pixelStorei(\n      gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,\n      gl.BROWSER_DEFAULT_WEBGL\n    );\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source)) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source.arrayBufferView)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      // Source: typed array\n      var arrayBufferView = source.arrayBufferView;\n      var i, mipWidth, mipHeight;\n      if (isCompressed) {\n        gl.compressedTexImage2D(\n          textureTarget,\n          0,\n          internalFormat,\n          width,\n          height,\n          0,\n          arrayBufferView\n        );\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source.mipLevels)) {\n          mipWidth = width;\n          mipHeight = height;\n          for (i = 0; i < source.mipLevels.length; ++i) {\n            mipWidth = Math.floor(mipWidth / 2) | 0;\n            if (mipWidth < 1) {\n              mipWidth = 1;\n            }\n            mipHeight = Math.floor(mipHeight / 2) | 0;\n            if (mipHeight < 1) {\n              mipHeight = 1;\n            }\n            gl.compressedTexImage2D(\n              textureTarget,\n              i + 1,\n              internalFormat,\n              mipWidth,\n              mipHeight,\n              0,\n              source.mipLevels[i]\n            );\n          }\n        }\n      } else {\n        if (flipY) {\n          arrayBufferView = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].flipY */ .Z.flipY(\n            arrayBufferView,\n            pixelFormat,\n            pixelDatatype,\n            width,\n            height\n          );\n        }\n        gl.texImage2D(\n          textureTarget,\n          0,\n          internalFormat,\n          width,\n          height,\n          0,\n          pixelFormat,\n          _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n          arrayBufferView\n        );\n\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source.mipLevels)) {\n          mipWidth = width;\n          mipHeight = height;\n          for (i = 0; i < source.mipLevels.length; ++i) {\n            mipWidth = Math.floor(mipWidth / 2) | 0;\n            if (mipWidth < 1) {\n              mipWidth = 1;\n            }\n            mipHeight = Math.floor(mipHeight / 2) | 0;\n            if (mipHeight < 1) {\n              mipHeight = 1;\n            }\n            gl.texImage2D(\n              textureTarget,\n              i + 1,\n              internalFormat,\n              mipWidth,\n              mipHeight,\n              0,\n              pixelFormat,\n              _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n              source.mipLevels[i]\n            );\n          }\n        }\n      }\n    } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(source.framebuffer)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      // Source: framebuffer\n      if (source.framebuffer !== context.defaultFramebuffer) {\n        source.framebuffer._bind();\n      }\n\n      gl.copyTexImage2D(\n        textureTarget,\n        0,\n        internalFormat,\n        source.xOffset,\n        source.yOffset,\n        width,\n        height,\n        0\n      );\n\n      if (source.framebuffer !== context.defaultFramebuffer) {\n        source.framebuffer._unBind();\n      }\n    } else {\n      // Only valid for DOM-Element uploads\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n      // Source: ImageData, HTMLImageElement, HTMLCanvasElement, or HTMLVideoElement\n      gl.texImage2D(\n        textureTarget,\n        0,\n        internalFormat,\n        pixelFormat,\n        _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n        source\n      );\n    }\n  } else {\n    gl.texImage2D(\n      textureTarget,\n      0,\n      internalFormat,\n      width,\n      height,\n      0,\n      pixelFormat,\n      _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    initialized = false;\n  }\n  gl.bindTexture(textureTarget, null);\n\n  var sizeInBytes;\n  if (isCompressed) {\n    sizeInBytes = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].compressedTextureSizeInBytes */ .Z.compressedTextureSizeInBytes(\n      pixelFormat,\n      width,\n      height\n    );\n  } else {\n    sizeInBytes = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].textureSizeInBytes */ .Z.textureSizeInBytes(\n      pixelFormat,\n      pixelDatatype,\n      width,\n      height\n    );\n  }\n\n  this._id = (0,_Core_createGuid_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)();\n  this._context = context;\n  this._textureFilterAnisotropic = context._textureFilterAnisotropic;\n  this._textureTarget = textureTarget;\n  this._texture = texture;\n  this._internalFormat = internalFormat;\n  this._pixelFormat = pixelFormat;\n  this._pixelDatatype = pixelDatatype;\n  this._width = width;\n  this._height = height;\n  this._dimensions = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(width, height);\n  this._hasMipmap = false;\n  this._sizeInBytes = sizeInBytes;\n  this._preMultiplyAlpha = preMultiplyAlpha;\n  this._flipY = flipY;\n  this._initialized = initialized;\n  this._sampler = undefined;\n\n  this.sampler = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(options.sampler) ? options.sampler : new _Sampler_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n}\n\n/**\n * This function is identical to using the Texture constructor except that it can be\n * replaced with a mock/spy in tests.\n * @private\n */\nTexture.create = function (options) {\n  return new Texture(options);\n};\n\n/**\n * Creates a texture, and copies a subimage of the framebuffer to it.  When called without arguments,\n * the texture is the same width and height as the framebuffer and contains its contents.\n *\n * @param {Object} options Object with the following properties:\n * @param {Context} options.context The context in which the Texture gets created.\n * @param {PixelFormat} [options.pixelFormat=PixelFormat.RGB] The texture\'s internal pixel format.\n * @param {Number} [options.framebufferXOffset=0] An offset in the x direction in the framebuffer where copying begins from.\n * @param {Number} [options.framebufferYOffset=0] An offset in the y direction in the framebuffer where copying begins from.\n * @param {Number} [options.width=canvas.clientWidth] The width of the texture in texels.\n * @param {Number} [options.height=canvas.clientHeight] The height of the texture in texels.\n * @param {Framebuffer} [options.framebuffer=defaultFramebuffer] The framebuffer from which to create the texture.  If this\n *        parameter is not specified, the default framebuffer is used.\n * @returns {Texture} A texture with contents from the framebuffer.\n *\n * @exception {DeveloperError} Invalid pixelFormat.\n * @exception {DeveloperError} pixelFormat cannot be DEPTH_COMPONENT, DEPTH_STENCIL or a compressed format.\n * @exception {DeveloperError} framebufferXOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferYOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferXOffset + width must be less than or equal to canvas.clientWidth.\n * @exception {DeveloperError} framebufferYOffset + height must be less than or equal to canvas.clientHeight.\n *\n *\n * @example\n * // Create a texture with the contents of the framebuffer.\n * var t = Texture.fromFramebuffer({\n *     context : context\n * });\n *\n * @see Sampler\n *\n * @private\n */\nTexture.fromFramebuffer = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defined */ .Z.defined("options.context", options.context);\n  //>>includeEnd(\'debug\');\n\n  var context = options.context;\n  var gl = context._gl;\n\n  var pixelFormat = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.pixelFormat, _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].RGB */ .Z.RGB);\n  var framebufferXOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.framebufferXOffset, 0);\n  var framebufferYOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.framebufferYOffset, 0);\n  var width = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.width, gl.drawingBufferWidth);\n  var height = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.height, gl.drawingBufferHeight);\n  var framebuffer = options.framebuffer;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].validate */ .Z.validate(pixelFormat)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Invalid pixelFormat.");\n  }\n  if (\n    _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isDepthFormat */ .Z.isDepthFormat(pixelFormat) ||\n    _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isCompressedFormat */ .Z.isCompressedFormat(pixelFormat)\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "pixelFormat cannot be DEPTH_COMPONENT, DEPTH_STENCIL or a compressed format."\n    );\n  }\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defined */ .Z.defined("options.context", options.context);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals(\n    "framebufferXOffset",\n    framebufferXOffset,\n    0\n  );\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals(\n    "framebufferYOffset",\n    framebufferYOffset,\n    0\n  );\n  if (framebufferXOffset + width > gl.drawingBufferWidth) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "framebufferXOffset + width must be less than or equal to drawingBufferWidth"\n    );\n  }\n  if (framebufferYOffset + height > gl.drawingBufferHeight) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "framebufferYOffset + height must be less than or equal to drawingBufferHeight."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var texture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: pixelFormat,\n    source: {\n      framebuffer: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(framebuffer)\n        ? framebuffer\n        : context.defaultFramebuffer,\n      xOffset: framebufferXOffset,\n      yOffset: framebufferYOffset,\n      width: width,\n      height: height,\n    },\n  });\n\n  return texture;\n};\n\nObject.defineProperties(Texture.prototype, {\n  /**\n   * A unique id for the texture\n   * @memberof Texture.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n  /**\n   * The sampler to use when sampling this texture.\n   * Create a sampler by calling {@link Sampler}.  If this\n   * parameter is not specified, a default sampler is used.  The default sampler clamps texture\n   * coordinates in both directions, uses linear filtering for both magnification and minification,\n   * and uses a maximum anisotropy of 1.0.\n   * @memberof Texture.prototype\n   * @type {Object}\n   */\n  sampler: {\n    get: function () {\n      return this._sampler;\n    },\n    set: function (sampler) {\n      var minificationFilter = sampler.minificationFilter;\n      var magnificationFilter = sampler.magnificationFilter;\n      var context = this._context;\n      var pixelFormat = this._pixelFormat;\n      var pixelDatatype = this._pixelDatatype;\n\n      var mipmap =\n        minificationFilter ===\n          _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].NEAREST_MIPMAP_NEAREST */ .Z.NEAREST_MIPMAP_NEAREST ||\n        minificationFilter ===\n          _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].NEAREST_MIPMAP_LINEAR */ .Z.NEAREST_MIPMAP_LINEAR ||\n        minificationFilter ===\n          _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].LINEAR_MIPMAP_NEAREST */ .Z.LINEAR_MIPMAP_NEAREST ||\n        minificationFilter === _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].LINEAR_MIPMAP_LINEAR */ .Z.LINEAR_MIPMAP_LINEAR;\n\n      // float textures only support nearest filtering unless the linear extensions are supported, so override the sampler\'s settings\n      if (\n        (pixelDatatype === _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].FLOAT */ .Z.FLOAT &&\n          !context.textureFloatLinear) ||\n        (pixelDatatype === _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].HALF_FLOAT */ .Z.HALF_FLOAT &&\n          !context.textureHalfFloatLinear)\n      ) {\n        minificationFilter = mipmap\n          ? _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].NEAREST_MIPMAP_NEAREST */ .Z.NEAREST_MIPMAP_NEAREST\n          : _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].NEAREST */ .Z.NEAREST;\n        magnificationFilter = _TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].NEAREST */ .Z.NEAREST;\n      }\n\n      // WebGL 2 depth texture only support nearest filtering. See section 3.8.13 OpenGL ES 3 spec\n      if (context.webgl2) {\n        if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isDepthFormat */ .Z.isDepthFormat(pixelFormat)) {\n          minificationFilter = _TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].NEAREST */ .Z.NEAREST;\n          magnificationFilter = _TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].NEAREST */ .Z.NEAREST;\n        }\n      }\n\n      var gl = context._gl;\n      var target = this._textureTarget;\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(target, this._texture);\n      gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, minificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, magnificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, sampler.wrapS);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, sampler.wrapT);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(this._textureFilterAnisotropic)) {\n        gl.texParameteri(\n          target,\n          this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,\n          sampler.maximumAnisotropy\n        );\n      }\n      gl.bindTexture(target, null);\n\n      this._sampler = sampler;\n    },\n  },\n  pixelFormat: {\n    get: function () {\n      return this._pixelFormat;\n    },\n  },\n  pixelDatatype: {\n    get: function () {\n      return this._pixelDatatype;\n    },\n  },\n  dimensions: {\n    get: function () {\n      return this._dimensions;\n    },\n  },\n  preMultiplyAlpha: {\n    get: function () {\n      return this._preMultiplyAlpha;\n    },\n  },\n  flipY: {\n    get: function () {\n      return this._flipY;\n    },\n  },\n  width: {\n    get: function () {\n      return this._width;\n    },\n  },\n  height: {\n    get: function () {\n      return this._height;\n    },\n  },\n  sizeInBytes: {\n    get: function () {\n      if (this._hasMipmap) {\n        return Math.floor((this._sizeInBytes * 4) / 3);\n      }\n      return this._sizeInBytes;\n    },\n  },\n  _target: {\n    get: function () {\n      return this._textureTarget;\n    },\n  },\n});\n\n/**\n * Copy new image data into this texture, from a source {@link ImageData}, {@link HTMLImageElement}, {@link HTMLCanvasElement}, or {@link HTMLVideoElement}.\n * or an object with width, height, and arrayBufferView properties.\n * @param {Object} options Object with the following properties:\n * @param {Object} options.source The source {@link ImageData}, {@link HTMLImageElement}, {@link HTMLCanvasElement}, or {@link HTMLVideoElement},\n *                        or an object with width, height, and arrayBufferView properties.\n * @param {Number} [options.xOffset=0] The offset in the x direction within the texture to copy into.\n * @param {Number} [options.yOffset=0] The offset in the y direction within the texture to copy into.\n * @param {Boolean} [options.skipColorSpaceConversion=false] If true, any custom gamma or color profiles in the texture will be ignored.\n *\n * @exception {DeveloperError} Cannot call copyFrom when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\n * @exception {DeveloperError} Cannot call copyFrom with a compressed texture pixel format.\n * @exception {DeveloperError} xOffset must be greater than or equal to zero.\n * @exception {DeveloperError} yOffset must be greater than or equal to zero.\n * @exception {DeveloperError} xOffset + source.width must be less than or equal to width.\n * @exception {DeveloperError} yOffset + source.height must be less than or equal to height.\n * @exception {DeveloperError} This texture was destroyed, i.e., destroy() was called.\n *\n * @example\n * texture.copyFrom({\n *  source: {\n *   width : 1,\n *   height : 1,\n *   arrayBufferView : new Uint8Array([255, 0, 0, 255])\n *  }\n * });\n */\nTexture.prototype.copyFrom = function (options) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defined */ .Z.defined("options", options);\n  //>>includeEnd(\'debug\');\n\n  var xOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.xOffset, 0);\n  var yOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.yOffset, 0);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].defined */ .Z.defined("options.source", options.source);\n  if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isDepthFormat */ .Z.isDepthFormat(this._pixelFormat)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Cannot call copyFrom when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL."\n    );\n  }\n  if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isCompressedFormat */ .Z.isCompressedFormat(this._pixelFormat)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Cannot call copyFrom with a compressed texture pixel format."\n    );\n  }\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("xOffset", xOffset, 0);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("yOffset", yOffset, 0);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n    "xOffset + options.source.width",\n    xOffset + options.source.width,\n    this._width\n  );\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n    "yOffset + options.source.height",\n    yOffset + options.source.height,\n    this._height\n  );\n  //>>includeEnd(\'debug\');\n\n  var source = options.source;\n\n  var context = this._context;\n  var gl = context._gl;\n  var target = this._textureTarget;\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n\n  var width = source.width;\n  var height = source.height;\n  var arrayBufferView = source.arrayBufferView;\n\n  var textureWidth = this._width;\n  var textureHeight = this._height;\n  var internalFormat = this._internalFormat;\n  var pixelFormat = this._pixelFormat;\n  var pixelDatatype = this._pixelDatatype;\n\n  var preMultiplyAlpha = this._preMultiplyAlpha;\n  var flipY = this._flipY;\n  var skipColorSpaceConversion = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.skipColorSpaceConversion,\n    false\n  );\n\n  var unpackAlignment = 4;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(arrayBufferView)) {\n    unpackAlignment = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].alignmentInBytes */ .Z.alignmentInBytes(\n      pixelFormat,\n      pixelDatatype,\n      width\n    );\n  }\n\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n\n  if (skipColorSpaceConversion) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n  } else {\n    gl.pixelStorei(\n      gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,\n      gl.BROWSER_DEFAULT_WEBGL\n    );\n  }\n\n  var uploaded = false;\n  if (!this._initialized) {\n    if (\n      xOffset === 0 &&\n      yOffset === 0 &&\n      width === textureWidth &&\n      height === textureHeight\n    ) {\n      // initialize the entire texture\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(arrayBufferView)) {\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        if (flipY) {\n          arrayBufferView = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].flipY */ .Z.flipY(\n            arrayBufferView,\n            pixelFormat,\n            pixelDatatype,\n            textureWidth,\n            textureHeight\n          );\n        }\n        gl.texImage2D(\n          target,\n          0,\n          internalFormat,\n          textureWidth,\n          textureHeight,\n          0,\n          pixelFormat,\n          _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n          arrayBufferView\n        );\n      } else {\n        // Only valid for DOM-Element uploads\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n        gl.texImage2D(\n          target,\n          0,\n          internalFormat,\n          pixelFormat,\n          _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n          source\n        );\n      }\n      uploaded = true;\n    } else {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      // initialize the entire texture to zero\n      var bufferView = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].createTypedArray */ .Z.createTypedArray(\n        pixelFormat,\n        pixelDatatype,\n        textureWidth,\n        textureHeight\n      );\n      gl.texImage2D(\n        target,\n        0,\n        internalFormat,\n        textureWidth,\n        textureHeight,\n        0,\n        pixelFormat,\n        _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n        bufferView\n      );\n    }\n    this._initialized = true;\n  }\n\n  if (!uploaded) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(arrayBufferView)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      if (flipY) {\n        arrayBufferView = _Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].flipY */ .Z.flipY(\n          arrayBufferView,\n          pixelFormat,\n          pixelDatatype,\n          width,\n          height\n        );\n      }\n      gl.texSubImage2D(\n        target,\n        0,\n        xOffset,\n        yOffset,\n        width,\n        height,\n        pixelFormat,\n        _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n        arrayBufferView\n      );\n    } else {\n      // Only valid for DOM-Element uploads\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n      gl.texSubImage2D(\n        target,\n        0,\n        xOffset,\n        yOffset,\n        pixelFormat,\n        _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].toWebGLConstant */ .Z.toWebGLConstant(pixelDatatype, context),\n        source\n      );\n    }\n  }\n\n  gl.bindTexture(target, null);\n};\n\n/**\n * @param {Number} [xOffset=0] The offset in the x direction within the texture to copy into.\n * @param {Number} [yOffset=0] The offset in the y direction within the texture to copy into.\n * @param {Number} [framebufferXOffset=0] optional\n * @param {Number} [framebufferYOffset=0] optional\n * @param {Number} [width=width] optional\n * @param {Number} [height=height] optional\n *\n * @exception {DeveloperError} Cannot call copyFromFramebuffer when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\n * @exception {DeveloperError} Cannot call copyFromFramebuffer when the texture pixel data type is FLOAT.\n * @exception {DeveloperError} Cannot call copyFromFramebuffer when the texture pixel data type is HALF_FLOAT.\n * @exception {DeveloperError} Cannot call copyFrom with a compressed texture pixel format.\n * @exception {DeveloperError} This texture was destroyed, i.e., destroy() was called.\n * @exception {DeveloperError} xOffset must be greater than or equal to zero.\n * @exception {DeveloperError} yOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferXOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferYOffset must be greater than or equal to zero.\n * @exception {DeveloperError} xOffset + width must be less than or equal to width.\n * @exception {DeveloperError} yOffset + height must be less than or equal to height.\n */\nTexture.prototype.copyFromFramebuffer = function (\n  xOffset,\n  yOffset,\n  framebufferXOffset,\n  framebufferYOffset,\n  width,\n  height\n) {\n  xOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(xOffset, 0);\n  yOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(yOffset, 0);\n  framebufferXOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(framebufferXOffset, 0);\n  framebufferYOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(framebufferYOffset, 0);\n  width = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(width, this._width);\n  height = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(height, this._height);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isDepthFormat */ .Z.isDepthFormat(this._pixelFormat)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Cannot call copyFromFramebuffer when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL."\n    );\n  }\n  if (this._pixelDatatype === _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].FLOAT */ .Z.FLOAT) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Cannot call copyFromFramebuffer when the texture pixel data type is FLOAT."\n    );\n  }\n  if (this._pixelDatatype === _PixelDatatype_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].HALF_FLOAT */ .Z.HALF_FLOAT) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Cannot call copyFromFramebuffer when the texture pixel data type is HALF_FLOAT."\n    );\n  }\n  if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isCompressedFormat */ .Z.isCompressedFormat(this._pixelFormat)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Cannot call copyFrom with a compressed texture pixel format."\n    );\n  }\n\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("xOffset", xOffset, 0);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("yOffset", yOffset, 0);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals(\n    "framebufferXOffset",\n    framebufferXOffset,\n    0\n  );\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals(\n    "framebufferYOffset",\n    framebufferYOffset,\n    0\n  );\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n    "xOffset + width",\n    xOffset + width,\n    this._width\n  );\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n    "yOffset + height",\n    yOffset + height,\n    this._height\n  );\n  //>>includeEnd(\'debug\');\n\n  var gl = this._context._gl;\n  var target = this._textureTarget;\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n  gl.copyTexSubImage2D(\n    target,\n    0,\n    xOffset,\n    yOffset,\n    framebufferXOffset,\n    framebufferYOffset,\n    width,\n    height\n  );\n  gl.bindTexture(target, null);\n  this._initialized = true;\n};\n\n/**\n * @param {MipmapHint} [hint=MipmapHint.DONT_CARE] optional.\n *\n * @exception {DeveloperError} Cannot call generateMipmap when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\n * @exception {DeveloperError} Cannot call generateMipmap when the texture pixel format is a compressed format.\n * @exception {DeveloperError} hint is invalid.\n * @exception {DeveloperError} This texture\'s width must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This texture\'s height must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This texture was destroyed, i.e., destroy() was called.\n */\nTexture.prototype.generateMipmap = function (hint) {\n  hint = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(hint, _MipmapHint_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].DONT_CARE */ .Z.DONT_CARE);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isDepthFormat */ .Z.isDepthFormat(this._pixelFormat)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Cannot call generateMipmap when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL."\n    );\n  }\n  if (_Core_PixelFormat_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].isCompressedFormat */ .Z.isCompressedFormat(this._pixelFormat)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "Cannot call generateMipmap with a compressed pixel format."\n    );\n  }\n  if (this._width > 1 && !_Core_Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].isPowerOfTwo */ .Z.isPowerOfTwo(this._width)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "width must be a power of two to call generateMipmap()."\n    );\n  }\n  if (this._height > 1 && !_Core_Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].isPowerOfTwo */ .Z.isPowerOfTwo(this._height)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "height must be a power of two to call generateMipmap()."\n    );\n  }\n  if (!_MipmapHint_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].validate */ .Z.validate(hint)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("hint is invalid.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this._hasMipmap = true;\n\n  var gl = this._context._gl;\n  var target = this._textureTarget;\n\n  gl.hint(gl.GENERATE_MIPMAP_HINT, hint);\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n  gl.generateMipmap(target);\n  gl.bindTexture(target, null);\n};\n\nTexture.prototype.isDestroyed = function () {\n  return false;\n};\n\nTexture.prototype.destroy = function () {\n  this._context._gl.deleteTexture(this._texture);\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Texture);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8743\n')},32158:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(86511);\n\n\n\n/**\n * @private\n */\nfunction TextureCache() {\n  this._textures = {};\n  this._numberOfTextures = 0;\n  this._texturesToRelease = {};\n}\n\nObject.defineProperties(TextureCache.prototype, {\n  numberOfTextures: {\n    get: function () {\n      return this._numberOfTextures;\n    },\n  },\n});\n\nTextureCache.prototype.getTexture = function (keyword) {\n  var cachedTexture = this._textures[keyword];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(cachedTexture)) {\n    return undefined;\n  }\n\n  // No longer want to release this if it was previously released.\n  delete this._texturesToRelease[keyword];\n\n  ++cachedTexture.count;\n  return cachedTexture.texture;\n};\n\nTextureCache.prototype.addTexture = function (keyword, texture) {\n  var cachedTexture = {\n    texture: texture,\n    count: 1,\n  };\n\n  texture.finalDestroy = texture.destroy;\n\n  var that = this;\n  texture.destroy = function () {\n    if (--cachedTexture.count === 0) {\n      that._texturesToRelease[keyword] = cachedTexture;\n    }\n  };\n\n  this._textures[keyword] = cachedTexture;\n  ++this._numberOfTextures;\n};\n\nTextureCache.prototype.destroyReleasedTextures = function () {\n  var texturesToRelease = this._texturesToRelease;\n\n  for (var keyword in texturesToRelease) {\n    if (texturesToRelease.hasOwnProperty(keyword)) {\n      var cachedTexture = texturesToRelease[keyword];\n      delete this._textures[keyword];\n      cachedTexture.texture.finalDestroy();\n      --this._numberOfTextures;\n    }\n  }\n\n  this._texturesToRelease = {};\n};\n\nTextureCache.prototype.isDestroyed = function () {\n  return false;\n};\n\nTextureCache.prototype.destroy = function () {\n  var textures = this._textures;\n  for (var keyword in textures) {\n    if (textures.hasOwnProperty(keyword)) {\n      textures[keyword].texture.finalDestroy();\n    }\n  }\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (TextureCache);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIxNTguanMiLCJtYXBwaW5ncyI6Ijs7QUFBeUM7QUFDWTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0EsT0FBTyxxRUFBTztBQUNkO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkVBQWE7QUFDdEI7QUFDQSx5REFBZSxZQUFZLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvUmVuZGVyZXIvVGV4dHVyZUNhY2hlLmpzPzdlMGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuaW1wb3J0IGRlc3Ryb3lPYmplY3QgZnJvbSBcIi4uL0NvcmUvZGVzdHJveU9iamVjdC5qc1wiO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIFRleHR1cmVDYWNoZSgpIHtcbiAgdGhpcy5fdGV4dHVyZXMgPSB7fTtcbiAgdGhpcy5fbnVtYmVyT2ZUZXh0dXJlcyA9IDA7XG4gIHRoaXMuX3RleHR1cmVzVG9SZWxlYXNlID0ge307XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFRleHR1cmVDYWNoZS5wcm90b3R5cGUsIHtcbiAgbnVtYmVyT2ZUZXh0dXJlczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX251bWJlck9mVGV4dHVyZXM7XG4gICAgfSxcbiAgfSxcbn0pO1xuXG5UZXh0dXJlQ2FjaGUucHJvdG90eXBlLmdldFRleHR1cmUgPSBmdW5jdGlvbiAoa2V5d29yZCkge1xuICB2YXIgY2FjaGVkVGV4dHVyZSA9IHRoaXMuX3RleHR1cmVzW2tleXdvcmRdO1xuICBpZiAoIWRlZmluZWQoY2FjaGVkVGV4dHVyZSkpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLy8gTm8gbG9uZ2VyIHdhbnQgdG8gcmVsZWFzZSB0aGlzIGlmIGl0IHdhcyBwcmV2aW91c2x5IHJlbGVhc2VkLlxuICBkZWxldGUgdGhpcy5fdGV4dHVyZXNUb1JlbGVhc2Vba2V5d29yZF07XG5cbiAgKytjYWNoZWRUZXh0dXJlLmNvdW50O1xuICByZXR1cm4gY2FjaGVkVGV4dHVyZS50ZXh0dXJlO1xufTtcblxuVGV4dHVyZUNhY2hlLnByb3RvdHlwZS5hZGRUZXh0dXJlID0gZnVuY3Rpb24gKGtleXdvcmQsIHRleHR1cmUpIHtcbiAgdmFyIGNhY2hlZFRleHR1cmUgPSB7XG4gICAgdGV4dHVyZTogdGV4dHVyZSxcbiAgICBjb3VudDogMSxcbiAgfTtcblxuICB0ZXh0dXJlLmZpbmFsRGVzdHJveSA9IHRleHR1cmUuZGVzdHJveTtcblxuICB2YXIgdGhhdCA9IHRoaXM7XG4gIHRleHR1cmUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoLS1jYWNoZWRUZXh0dXJlLmNvdW50ID09PSAwKSB7XG4gICAgICB0aGF0Ll90ZXh0dXJlc1RvUmVsZWFzZVtrZXl3b3JkXSA9IGNhY2hlZFRleHR1cmU7XG4gICAgfVxuICB9O1xuXG4gIHRoaXMuX3RleHR1cmVzW2tleXdvcmRdID0gY2FjaGVkVGV4dHVyZTtcbiAgKyt0aGlzLl9udW1iZXJPZlRleHR1cmVzO1xufTtcblxuVGV4dHVyZUNhY2hlLnByb3RvdHlwZS5kZXN0cm95UmVsZWFzZWRUZXh0dXJlcyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRleHR1cmVzVG9SZWxlYXNlID0gdGhpcy5fdGV4dHVyZXNUb1JlbGVhc2U7XG5cbiAgZm9yICh2YXIga2V5d29yZCBpbiB0ZXh0dXJlc1RvUmVsZWFzZSkge1xuICAgIGlmICh0ZXh0dXJlc1RvUmVsZWFzZS5oYXNPd25Qcm9wZXJ0eShrZXl3b3JkKSkge1xuICAgICAgdmFyIGNhY2hlZFRleHR1cmUgPSB0ZXh0dXJlc1RvUmVsZWFzZVtrZXl3b3JkXTtcbiAgICAgIGRlbGV0ZSB0aGlzLl90ZXh0dXJlc1trZXl3b3JkXTtcbiAgICAgIGNhY2hlZFRleHR1cmUudGV4dHVyZS5maW5hbERlc3Ryb3koKTtcbiAgICAgIC0tdGhpcy5fbnVtYmVyT2ZUZXh0dXJlcztcbiAgICB9XG4gIH1cblxuICB0aGlzLl90ZXh0dXJlc1RvUmVsZWFzZSA9IHt9O1xufTtcblxuVGV4dHVyZUNhY2hlLnByb3RvdHlwZS5pc0Rlc3Ryb3llZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuVGV4dHVyZUNhY2hlLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICB2YXIgdGV4dHVyZXMgPSB0aGlzLl90ZXh0dXJlcztcbiAgZm9yICh2YXIga2V5d29yZCBpbiB0ZXh0dXJlcykge1xuICAgIGlmICh0ZXh0dXJlcy5oYXNPd25Qcm9wZXJ0eShrZXl3b3JkKSkge1xuICAgICAgdGV4dHVyZXNba2V5d29yZF0udGV4dHVyZS5maW5hbERlc3Ryb3koKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRlc3Ryb3lPYmplY3QodGhpcyk7XG59O1xuZXhwb3J0IGRlZmF1bHQgVGV4dHVyZUNhY2hlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///32158\n')},42246:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52200);\n\n\n/**\n * Enumerates all possible filters used when magnifying WebGL textures.\n *\n * @enum {Number}\n *\n * @see TextureMinificationFilter\n */\nvar TextureMagnificationFilter = {\n  /**\n   * Samples the texture by returning the closest pixel.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEAREST: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].NEAREST */ .Z.NEAREST,\n  /**\n   * Samples the texture through bi-linear interpolation of the four nearest pixels. This produces smoother results than <code>NEAREST</code> filtering.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINEAR: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].LINEAR */ .Z.LINEAR,\n};\n\n/**\n * Validates the given <code>textureMinificationFilter</code> with respect to the possible enum values.\n * @param textureMagnificationFilter\n * @returns {Boolean} <code>true</code> if <code>textureMagnificationFilter</code> is valid.\n *\n * @private\n */\nTextureMagnificationFilter.validate = function (textureMagnificationFilter) {\n  return (\n    textureMagnificationFilter === TextureMagnificationFilter.NEAREST ||\n    textureMagnificationFilter === TextureMagnificationFilter.LINEAR\n  );\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(TextureMagnificationFilter));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIyNDYuanMiLCJtYXBwaW5ncyI6IjtBQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxXQUFXLHdGQUFzQjtBQUNqQztBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFVBQVUsc0ZBQXFCO0FBQy9COztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseURBQWUseUNBQXlDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvUmVuZGVyZXIvVGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXIuanM/NjdiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgV2ViR0xDb25zdGFudHMgZnJvbSBcIi4uL0NvcmUvV2ViR0xDb25zdGFudHMuanNcIjtcblxuLyoqXG4gKiBFbnVtZXJhdGVzIGFsbCBwb3NzaWJsZSBmaWx0ZXJzIHVzZWQgd2hlbiBtYWduaWZ5aW5nIFdlYkdMIHRleHR1cmVzLlxuICpcbiAqIEBlbnVtIHtOdW1iZXJ9XG4gKlxuICogQHNlZSBUZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyXG4gKi9cbnZhciBUZXh0dXJlTWFnbmlmaWNhdGlvbkZpbHRlciA9IHtcbiAgLyoqXG4gICAqIFNhbXBsZXMgdGhlIHRleHR1cmUgYnkgcmV0dXJuaW5nIHRoZSBjbG9zZXN0IHBpeGVsLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIE5FQVJFU1Q6IFdlYkdMQ29uc3RhbnRzLk5FQVJFU1QsXG4gIC8qKlxuICAgKiBTYW1wbGVzIHRoZSB0ZXh0dXJlIHRocm91Z2ggYmktbGluZWFyIGludGVycG9sYXRpb24gb2YgdGhlIGZvdXIgbmVhcmVzdCBwaXhlbHMuIFRoaXMgcHJvZHVjZXMgc21vb3RoZXIgcmVzdWx0cyB0aGFuIDxjb2RlPk5FQVJFU1Q8L2NvZGU+IGZpbHRlcmluZy5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBMSU5FQVI6IFdlYkdMQ29uc3RhbnRzLkxJTkVBUixcbn07XG5cbi8qKlxuICogVmFsaWRhdGVzIHRoZSBnaXZlbiA8Y29kZT50ZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyPC9jb2RlPiB3aXRoIHJlc3BlY3QgdG8gdGhlIHBvc3NpYmxlIGVudW0gdmFsdWVzLlxuICogQHBhcmFtIHRleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgPGNvZGU+dGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXI8L2NvZGU+IGlzIHZhbGlkLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cblRleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyLnZhbGlkYXRlID0gZnVuY3Rpb24gKHRleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyKSB7XG4gIHJldHVybiAoXG4gICAgdGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXIgPT09IFRleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyLk5FQVJFU1QgfHxcbiAgICB0ZXh0dXJlTWFnbmlmaWNhdGlvbkZpbHRlciA9PT0gVGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXIuTElORUFSXG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKFRleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///42246\n')},80188:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52200);\n\n\n/**\n * Enumerates all possible filters used when minifying WebGL textures.\n *\n * @enum {Number}\n *\n * @see TextureMagnificationFilter\n */\nvar TextureMinificationFilter = {\n  /**\n   * Samples the texture by returning the closest pixel.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEAREST: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].NEAREST */ .Z.NEAREST,\n  /**\n   * Samples the texture through bi-linear interpolation of the four nearest pixels. This produces smoother results than <code>NEAREST</code> filtering.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINEAR: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].LINEAR */ .Z.LINEAR,\n  /**\n   * Selects the nearest mip level and applies nearest sampling within that level.\n   * <p>\n   * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\n   * </p>\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEAREST_MIPMAP_NEAREST: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].NEAREST_MIPMAP_NEAREST */ .Z.NEAREST_MIPMAP_NEAREST,\n  /**\n   * Selects the nearest mip level and applies linear sampling within that level.\n   * <p>\n   * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\n   * </p>\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINEAR_MIPMAP_NEAREST: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].LINEAR_MIPMAP_NEAREST */ .Z.LINEAR_MIPMAP_NEAREST,\n  /**\n   * Read texture values with nearest sampling from two adjacent mip levels and linearly interpolate the results.\n   * <p>\n   * This option provides a good balance of visual quality and speed when sampling from a mipmapped texture.\n   * </p>\n   * <p>\n   * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\n   * </p>\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEAREST_MIPMAP_LINEAR: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].NEAREST_MIPMAP_LINEAR */ .Z.NEAREST_MIPMAP_LINEAR,\n  /**\n   * Read texture values with linear sampling from two adjacent mip levels and linearly interpolate the results.\n   * <p>\n   * This option provides a good balance of visual quality and speed when sampling from a mipmapped texture.\n   * </p>\n   * <p>\n   * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\n   * </p>\n   * @type {Number}\n   * @constant\n   */\n  LINEAR_MIPMAP_LINEAR: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].LINEAR_MIPMAP_LINEAR */ .Z.LINEAR_MIPMAP_LINEAR,\n};\n\n/**\n * Validates the given <code>textureMinificationFilter</code> with respect to the possible enum values.\n *\n * @private\n *\n * @param textureMinificationFilter\n * @returns {Boolean} <code>true</code> if <code>textureMinificationFilter</code> is valid.\n */\nTextureMinificationFilter.validate = function (textureMinificationFilter) {\n  return (\n    textureMinificationFilter === TextureMinificationFilter.NEAREST ||\n    textureMinificationFilter === TextureMinificationFilter.LINEAR ||\n    textureMinificationFilter ===\n      TextureMinificationFilter.NEAREST_MIPMAP_NEAREST ||\n    textureMinificationFilter ===\n      TextureMinificationFilter.LINEAR_MIPMAP_NEAREST ||\n    textureMinificationFilter ===\n      TextureMinificationFilter.NEAREST_MIPMAP_LINEAR ||\n    textureMinificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR\n  );\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(TextureMinificationFilter));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAxODguanMiLCJtYXBwaW5ncyI6IjtBQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxXQUFXLHdGQUFzQjtBQUNqQztBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFVBQVUsc0ZBQXFCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsMEJBQTBCLHNIQUFxQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLHlCQUF5QixvSEFBb0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSx5QkFBeUIsb0hBQW9DO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLHdCQUF3QixrSEFBbUM7QUFDM0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseURBQWUsd0NBQXdDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvUmVuZGVyZXIvVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlci5qcz82MjQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXZWJHTENvbnN0YW50cyBmcm9tIFwiLi4vQ29yZS9XZWJHTENvbnN0YW50cy5qc1wiO1xuXG4vKipcbiAqIEVudW1lcmF0ZXMgYWxsIHBvc3NpYmxlIGZpbHRlcnMgdXNlZCB3aGVuIG1pbmlmeWluZyBXZWJHTCB0ZXh0dXJlcy5cbiAqXG4gKiBAZW51bSB7TnVtYmVyfVxuICpcbiAqIEBzZWUgVGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXJcbiAqL1xudmFyIFRleHR1cmVNaW5pZmljYXRpb25GaWx0ZXIgPSB7XG4gIC8qKlxuICAgKiBTYW1wbGVzIHRoZSB0ZXh0dXJlIGJ5IHJldHVybmluZyB0aGUgY2xvc2VzdCBwaXhlbC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBORUFSRVNUOiBXZWJHTENvbnN0YW50cy5ORUFSRVNULFxuICAvKipcbiAgICogU2FtcGxlcyB0aGUgdGV4dHVyZSB0aHJvdWdoIGJpLWxpbmVhciBpbnRlcnBvbGF0aW9uIG9mIHRoZSBmb3VyIG5lYXJlc3QgcGl4ZWxzLiBUaGlzIHByb2R1Y2VzIHNtb290aGVyIHJlc3VsdHMgdGhhbiA8Y29kZT5ORUFSRVNUPC9jb2RlPiBmaWx0ZXJpbmcuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTElORUFSOiBXZWJHTENvbnN0YW50cy5MSU5FQVIsXG4gIC8qKlxuICAgKiBTZWxlY3RzIHRoZSBuZWFyZXN0IG1pcCBsZXZlbCBhbmQgYXBwbGllcyBuZWFyZXN0IHNhbXBsaW5nIHdpdGhpbiB0aGF0IGxldmVsLlxuICAgKiA8cD5cbiAgICogUmVxdWlyZXMgdGhhdCB0aGUgdGV4dHVyZSBoYXMgYSBtaXBtYXAuIFRoZSBtaXAgbGV2ZWwgaXMgY2hvc2VuIGJ5IHRoZSB2aWV3IGFuZ2xlIGFuZCBzY3JlZW4tc3BhY2Ugc2l6ZSBvZiB0aGUgdGV4dHVyZS5cbiAgICogPC9wPlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIE5FQVJFU1RfTUlQTUFQX05FQVJFU1Q6IFdlYkdMQ29uc3RhbnRzLk5FQVJFU1RfTUlQTUFQX05FQVJFU1QsXG4gIC8qKlxuICAgKiBTZWxlY3RzIHRoZSBuZWFyZXN0IG1pcCBsZXZlbCBhbmQgYXBwbGllcyBsaW5lYXIgc2FtcGxpbmcgd2l0aGluIHRoYXQgbGV2ZWwuXG4gICAqIDxwPlxuICAgKiBSZXF1aXJlcyB0aGF0IHRoZSB0ZXh0dXJlIGhhcyBhIG1pcG1hcC4gVGhlIG1pcCBsZXZlbCBpcyBjaG9zZW4gYnkgdGhlIHZpZXcgYW5nbGUgYW5kIHNjcmVlbi1zcGFjZSBzaXplIG9mIHRoZSB0ZXh0dXJlLlxuICAgKiA8L3A+XG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgTElORUFSX01JUE1BUF9ORUFSRVNUOiBXZWJHTENvbnN0YW50cy5MSU5FQVJfTUlQTUFQX05FQVJFU1QsXG4gIC8qKlxuICAgKiBSZWFkIHRleHR1cmUgdmFsdWVzIHdpdGggbmVhcmVzdCBzYW1wbGluZyBmcm9tIHR3byBhZGphY2VudCBtaXAgbGV2ZWxzIGFuZCBsaW5lYXJseSBpbnRlcnBvbGF0ZSB0aGUgcmVzdWx0cy5cbiAgICogPHA+XG4gICAqIFRoaXMgb3B0aW9uIHByb3ZpZGVzIGEgZ29vZCBiYWxhbmNlIG9mIHZpc3VhbCBxdWFsaXR5IGFuZCBzcGVlZCB3aGVuIHNhbXBsaW5nIGZyb20gYSBtaXBtYXBwZWQgdGV4dHVyZS5cbiAgICogPC9wPlxuICAgKiA8cD5cbiAgICogUmVxdWlyZXMgdGhhdCB0aGUgdGV4dHVyZSBoYXMgYSBtaXBtYXAuIFRoZSBtaXAgbGV2ZWwgaXMgY2hvc2VuIGJ5IHRoZSB2aWV3IGFuZ2xlIGFuZCBzY3JlZW4tc3BhY2Ugc2l6ZSBvZiB0aGUgdGV4dHVyZS5cbiAgICogPC9wPlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIE5FQVJFU1RfTUlQTUFQX0xJTkVBUjogV2ViR0xDb25zdGFudHMuTkVBUkVTVF9NSVBNQVBfTElORUFSLFxuICAvKipcbiAgICogUmVhZCB0ZXh0dXJlIHZhbHVlcyB3aXRoIGxpbmVhciBzYW1wbGluZyBmcm9tIHR3byBhZGphY2VudCBtaXAgbGV2ZWxzIGFuZCBsaW5lYXJseSBpbnRlcnBvbGF0ZSB0aGUgcmVzdWx0cy5cbiAgICogPHA+XG4gICAqIFRoaXMgb3B0aW9uIHByb3ZpZGVzIGEgZ29vZCBiYWxhbmNlIG9mIHZpc3VhbCBxdWFsaXR5IGFuZCBzcGVlZCB3aGVuIHNhbXBsaW5nIGZyb20gYSBtaXBtYXBwZWQgdGV4dHVyZS5cbiAgICogPC9wPlxuICAgKiA8cD5cbiAgICogUmVxdWlyZXMgdGhhdCB0aGUgdGV4dHVyZSBoYXMgYSBtaXBtYXAuIFRoZSBtaXAgbGV2ZWwgaXMgY2hvc2VuIGJ5IHRoZSB2aWV3IGFuZ2xlIGFuZCBzY3JlZW4tc3BhY2Ugc2l6ZSBvZiB0aGUgdGV4dHVyZS5cbiAgICogPC9wPlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIExJTkVBUl9NSVBNQVBfTElORUFSOiBXZWJHTENvbnN0YW50cy5MSU5FQVJfTUlQTUFQX0xJTkVBUixcbn07XG5cbi8qKlxuICogVmFsaWRhdGVzIHRoZSBnaXZlbiA8Y29kZT50ZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyPC9jb2RlPiB3aXRoIHJlc3BlY3QgdG8gdGhlIHBvc3NpYmxlIGVudW0gdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKlxuICogQHBhcmFtIHRleHR1cmVNaW5pZmljYXRpb25GaWx0ZXJcbiAqIEByZXR1cm5zIHtCb29sZWFufSA8Y29kZT50cnVlPC9jb2RlPiBpZiA8Y29kZT50ZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyPC9jb2RlPiBpcyB2YWxpZC5cbiAqL1xuVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlci52YWxpZGF0ZSA9IGZ1bmN0aW9uICh0ZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyKSB7XG4gIHJldHVybiAoXG4gICAgdGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlciA9PT0gVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlci5ORUFSRVNUIHx8XG4gICAgdGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlciA9PT0gVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlci5MSU5FQVIgfHxcbiAgICB0ZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyID09PVxuICAgICAgVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlci5ORUFSRVNUX01JUE1BUF9ORUFSRVNUIHx8XG4gICAgdGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlciA9PT1cbiAgICAgIFRleHR1cmVNaW5pZmljYXRpb25GaWx0ZXIuTElORUFSX01JUE1BUF9ORUFSRVNUIHx8XG4gICAgdGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlciA9PT1cbiAgICAgIFRleHR1cmVNaW5pZmljYXRpb25GaWx0ZXIuTkVBUkVTVF9NSVBNQVBfTElORUFSIHx8XG4gICAgdGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlciA9PT0gVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlci5MSU5FQVJfTUlQTUFQX0xJTkVBUlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmZyZWV6ZShUZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///80188\n')},88453:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52200);\n\n\n/**\n * @private\n */\nvar TextureWrap = {\n  CLAMP_TO_EDGE: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].CLAMP_TO_EDGE */ .Z.CLAMP_TO_EDGE,\n  REPEAT: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].REPEAT */ .Z.REPEAT,\n  MIRRORED_REPEAT: _Core_WebGLConstants_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].MIRRORED_REPEAT */ .Z.MIRRORED_REPEAT,\n\n  validate: function (textureWrap) {\n    return (\n      textureWrap === TextureWrap.CLAMP_TO_EDGE ||\n      textureWrap === TextureWrap.REPEAT ||\n      textureWrap === TextureWrap.MIRRORED_REPEAT\n    );\n  },\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(TextureWrap));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODg0NTMuanMiLCJtYXBwaW5ncyI6IjtBQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsb0dBQTRCO0FBQzdDLFVBQVUsc0ZBQXFCO0FBQy9CLG1CQUFtQix3R0FBOEI7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHlEQUFlLDBCQUEwQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1JlbmRlcmVyL1RleHR1cmVXcmFwLmpzPzlkZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdlYkdMQ29uc3RhbnRzIGZyb20gXCIuLi9Db3JlL1dlYkdMQ29uc3RhbnRzLmpzXCI7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xudmFyIFRleHR1cmVXcmFwID0ge1xuICBDTEFNUF9UT19FREdFOiBXZWJHTENvbnN0YW50cy5DTEFNUF9UT19FREdFLFxuICBSRVBFQVQ6IFdlYkdMQ29uc3RhbnRzLlJFUEVBVCxcbiAgTUlSUk9SRURfUkVQRUFUOiBXZWJHTENvbnN0YW50cy5NSVJST1JFRF9SRVBFQVQsXG5cbiAgdmFsaWRhdGU6IGZ1bmN0aW9uICh0ZXh0dXJlV3JhcCkge1xuICAgIHJldHVybiAoXG4gICAgICB0ZXh0dXJlV3JhcCA9PT0gVGV4dHVyZVdyYXAuQ0xBTVBfVE9fRURHRSB8fFxuICAgICAgdGV4dHVyZVdyYXAgPT09IFRleHR1cmVXcmFwLlJFUEVBVCB8fFxuICAgICAgdGV4dHVyZVdyYXAgPT09IFRleHR1cmVXcmFwLk1JUlJPUkVEX1JFUEVBVFxuICAgICk7XG4gIH0sXG59O1xuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmZyZWV6ZShUZXh0dXJlV3JhcCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///88453\n')},79140:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51688);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50491);\n/* harmony import */ var _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(74938);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(68201);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(72248);\n/* harmony import */ var _Core_OrthographicFrustum_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(91473);\n/* harmony import */ var _Core_Simon1994PlanetaryPositions_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(83156);\n/* harmony import */ var _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(95555);\n/* harmony import */ var _Scene_SceneMode_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(89917);\n/* harmony import */ var _Scene_SunLight_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(44747);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @private\n * @constructor\n */\nfunction UniformState() {\n  /**\n   * @type {Texture}\n   */\n  this.globeDepthTexture = undefined;\n  /**\n   * @type {Number}\n   */\n  this.gamma = undefined;\n\n  this._viewport = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  this._viewportCartesian4 = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n  this._viewportDirty = false;\n  this._viewportOrthographicMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  this._viewportTransformation = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].IDENTITY */ .Z.IDENTITY);\n\n  this._model = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  this._view = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  this._inverseView = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  this._projection = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  this._infiniteProjection = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  this._entireFrustum = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  this._currentFrustum = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  this._frustumPlanes = new _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n  this._farDepthFromNearPlusOne = undefined;\n  this._log2FarDepthFromNearPlusOne = undefined;\n  this._oneOverLog2FarDepthFromNearPlusOne = undefined;\n\n  this._frameState = undefined;\n  this._temeToPseudoFixed = _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].IDENTITY */ .Z.IDENTITY);\n\n  // Derived members\n  this._view3DDirty = true;\n  this._view3D = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._inverseView3DDirty = true;\n  this._inverseView3D = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._inverseModelDirty = true;\n  this._inverseModel = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._inverseTransposeModelDirty = true;\n  this._inverseTransposeModel = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\n  this._viewRotation = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n  this._inverseViewRotation = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\n  this._viewRotation3D = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n  this._inverseViewRotation3D = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\n  this._inverseProjectionDirty = true;\n  this._inverseProjection = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._modelViewDirty = true;\n  this._modelView = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._modelView3DDirty = true;\n  this._modelView3D = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._modelViewRelativeToEyeDirty = true;\n  this._modelViewRelativeToEye = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._inverseModelViewDirty = true;\n  this._inverseModelView = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._inverseModelView3DDirty = true;\n  this._inverseModelView3D = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._viewProjectionDirty = true;\n  this._viewProjection = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._inverseViewProjectionDirty = true;\n  this._inverseViewProjection = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._modelViewProjectionDirty = true;\n  this._modelViewProjection = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._inverseModelViewProjectionDirty = true;\n  this._inverseModelViewProjection = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._modelViewProjectionRelativeToEyeDirty = true;\n  this._modelViewProjectionRelativeToEye = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._modelViewInfiniteProjectionDirty = true;\n  this._modelViewInfiniteProjection = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\n  this._normalDirty = true;\n  this._normal = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\n  this._normal3DDirty = true;\n  this._normal3D = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\n  this._inverseNormalDirty = true;\n  this._inverseNormal = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\n  this._inverseNormal3DDirty = true;\n  this._inverseNormal3D = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\n\n  this._encodedCameraPositionMCDirty = true;\n  this._encodedCameraPositionMC = new _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z();\n  this._cameraPosition = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n  this._sunPositionWC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._sunPositionColumbusView = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._sunDirectionWC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._sunDirectionEC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._moonDirectionEC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n  this._lightDirectionWC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._lightDirectionEC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._lightColor = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._lightColorHdr = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\n  this._pass = undefined;\n  this._mode = undefined;\n  this._mapProjection = undefined;\n  this._ellipsoid = undefined;\n  this._cameraDirection = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._cameraRight = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._cameraUp = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n  this._frustum2DWidth = 0.0;\n  this._eyeHeight = 0.0;\n  this._eyeHeight2D = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  this._pixelRatio = 1.0;\n  this._orthographicIn3D = false;\n  this._backgroundColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n\n  this._brdfLut = undefined;\n  this._environmentMap = undefined;\n\n  this._sphericalHarmonicCoefficients = undefined;\n  this._specularEnvironmentMaps = undefined;\n  this._specularEnvironmentMapsDimensions = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  this._specularEnvironmentMapsMaximumLOD = undefined;\n\n  this._fogDensity = undefined;\n\n  this._invertClassificationColor = undefined;\n\n  this._imagerySplitPosition = 0.0;\n  this._pixelSizePerMeter = undefined;\n  this._geometricToleranceOverMeter = undefined;\n\n  this._minimumDisableDepthTestDistance = undefined;\n}\n\nObject.defineProperties(UniformState.prototype, {\n  /**\n   * @memberof UniformState.prototype\n   * @type {FrameState}\n   * @readonly\n   */\n  frameState: {\n    get: function () {\n      return this._frameState;\n    },\n  },\n  /**\n   * @memberof UniformState.prototype\n   * @type {BoundingRectangle}\n   */\n  viewport: {\n    get: function () {\n      return this._viewport;\n    },\n    set: function (viewport) {\n      if (!_Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].equals */ .Z.equals(viewport, this._viewport)) {\n        _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(viewport, this._viewport);\n\n        var v = this._viewport;\n        var vc = this._viewportCartesian4;\n        vc.x = v.x;\n        vc.y = v.y;\n        vc.z = v.width;\n        vc.w = v.height;\n\n        this._viewportDirty = true;\n      }\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @private\n   */\n  viewportCartesian4: {\n    get: function () {\n      return this._viewportCartesian4;\n    },\n  },\n\n  viewportOrthographic: {\n    get: function () {\n      cleanViewport(this);\n      return this._viewportOrthographicMatrix;\n    },\n  },\n\n  viewportTransformation: {\n    get: function () {\n      cleanViewport(this);\n      return this._viewportTransformation;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  model: {\n    get: function () {\n      return this._model;\n    },\n    set: function (matrix) {\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(matrix, this._model);\n\n      this._modelView3DDirty = true;\n      this._inverseModelView3DDirty = true;\n      this._inverseModelDirty = true;\n      this._inverseTransposeModelDirty = true;\n      this._modelViewDirty = true;\n      this._inverseModelViewDirty = true;\n      this._modelViewRelativeToEyeDirty = true;\n      this._inverseModelViewDirty = true;\n      this._modelViewProjectionDirty = true;\n      this._inverseModelViewProjectionDirty = true;\n      this._modelViewProjectionRelativeToEyeDirty = true;\n      this._modelViewInfiniteProjectionDirty = true;\n      this._normalDirty = true;\n      this._inverseNormalDirty = true;\n      this._normal3DDirty = true;\n      this._inverseNormal3DDirty = true;\n      this._encodedCameraPositionMCDirty = true;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseModel: {\n    get: function () {\n      if (this._inverseModelDirty) {\n        this._inverseModelDirty = false;\n\n        _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].inverse */ .Z.inverse(this._model, this._inverseModel);\n      }\n\n      return this._inverseModel;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @private\n   */\n  inverseTransposeModel: {\n    get: function () {\n      var m = this._inverseTransposeModel;\n      if (this._inverseTransposeModelDirty) {\n        this._inverseTransposeModelDirty = false;\n\n        _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(this.inverseModel, m);\n        _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].transpose */ .Z.transpose(m, m);\n      }\n\n      return m;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  view: {\n    get: function () {\n      return this._view;\n    },\n  },\n\n  /**\n   * The 3D view matrix.  In 3D mode, this is identical to {@link UniformState#view},\n   * but in 2D and Columbus View it is a synthetic matrix based on the equivalent position\n   * of the camera in the 3D world.\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  view3D: {\n    get: function () {\n      updateView3D(this);\n      return this._view3D;\n    },\n  },\n\n  /**\n   * The 3x3 rotation matrix of the current view matrix ({@link UniformState#view}).\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  viewRotation: {\n    get: function () {\n      updateView3D(this);\n      return this._viewRotation;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  viewRotation3D: {\n    get: function () {\n      updateView3D(this);\n      return this._viewRotation3D;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseView: {\n    get: function () {\n      return this._inverseView;\n    },\n  },\n\n  /**\n   * the 4x4 inverse-view matrix that transforms from eye to 3D world coordinates.  In 3D mode, this is\n   * identical to {@link UniformState#inverseView}, but in 2D and Columbus View it is a synthetic matrix\n   * based on the equivalent position of the camera in the 3D world.\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseView3D: {\n    get: function () {\n      updateInverseView3D(this);\n      return this._inverseView3D;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  inverseViewRotation: {\n    get: function () {\n      return this._inverseViewRotation;\n    },\n  },\n\n  /**\n   * The 3x3 rotation matrix of the current 3D inverse-view matrix ({@link UniformState#inverseView3D}).\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  inverseViewRotation3D: {\n    get: function () {\n      updateInverseView3D(this);\n      return this._inverseViewRotation3D;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  projection: {\n    get: function () {\n      return this._projection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseProjection: {\n    get: function () {\n      cleanInverseProjection(this);\n      return this._inverseProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  infiniteProjection: {\n    get: function () {\n      return this._infiniteProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelView: {\n    get: function () {\n      cleanModelView(this);\n      return this._modelView;\n    },\n  },\n\n  /**\n   * The 3D model-view matrix.  In 3D mode, this is equivalent to {@link UniformState#modelView}.  In 2D and\n   * Columbus View, however, it is a synthetic matrix based on the equivalent position of the camera in the 3D world.\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelView3D: {\n    get: function () {\n      cleanModelView3D(this);\n      return this._modelView3D;\n    },\n  },\n\n  /**\n   * Model-view relative to eye matrix.\n   *\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelViewRelativeToEye: {\n    get: function () {\n      cleanModelViewRelativeToEye(this);\n      return this._modelViewRelativeToEye;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseModelView: {\n    get: function () {\n      cleanInverseModelView(this);\n      return this._inverseModelView;\n    },\n  },\n\n  /**\n   * The inverse of the 3D model-view matrix.  In 3D mode, this is equivalent to {@link UniformState#inverseModelView}.\n   * In 2D and Columbus View, however, it is a synthetic matrix based on the equivalent position of the camera in the 3D world.\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseModelView3D: {\n    get: function () {\n      cleanInverseModelView3D(this);\n      return this._inverseModelView3D;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  viewProjection: {\n    get: function () {\n      cleanViewProjection(this);\n      return this._viewProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseViewProjection: {\n    get: function () {\n      cleanInverseViewProjection(this);\n      return this._inverseViewProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelViewProjection: {\n    get: function () {\n      cleanModelViewProjection(this);\n      return this._modelViewProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseModelViewProjection: {\n    get: function () {\n      cleanInverseModelViewProjection(this);\n      return this._inverseModelViewProjection;\n    },\n  },\n\n  /**\n   * Model-view-projection relative to eye matrix.\n   *\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelViewProjectionRelativeToEye: {\n    get: function () {\n      cleanModelViewProjectionRelativeToEye(this);\n      return this._modelViewProjectionRelativeToEye;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelViewInfiniteProjection: {\n    get: function () {\n      cleanModelViewInfiniteProjection(this);\n      return this._modelViewInfiniteProjection;\n    },\n  },\n\n  /**\n   * A 3x3 normal transformation matrix that transforms normal vectors in model coordinates to\n   * eye coordinates.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  normal: {\n    get: function () {\n      cleanNormal(this);\n      return this._normal;\n    },\n  },\n\n  /**\n   * A 3x3 normal transformation matrix that transforms normal vectors in 3D model\n   * coordinates to eye coordinates.  In 3D mode, this is identical to\n   * {@link UniformState#normal}, but in 2D and Columbus View it represents the normal transformation\n   * matrix as if the camera were at an equivalent location in 3D mode.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  normal3D: {\n    get: function () {\n      cleanNormal3D(this);\n      return this._normal3D;\n    },\n  },\n\n  /**\n   * An inverse 3x3 normal transformation matrix that transforms normal vectors in model coordinates\n   * to eye coordinates.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  inverseNormal: {\n    get: function () {\n      cleanInverseNormal(this);\n      return this._inverseNormal;\n    },\n  },\n\n  /**\n   * An inverse 3x3 normal transformation matrix that transforms normal vectors in eye coordinates\n   * to 3D model coordinates.  In 3D mode, this is identical to\n   * {@link UniformState#inverseNormal}, but in 2D and Columbus View it represents the normal transformation\n   * matrix as if the camera were at an equivalent location in 3D mode.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  inverseNormal3D: {\n    get: function () {\n      cleanInverseNormal3D(this);\n      return this._inverseNormal3D;\n    },\n  },\n\n  /**\n   * The near distance (<code>x</code>) and the far distance (<code>y</code>) of the frustum defined by the camera.\n   * This is the largest possible frustum, not an individual frustum used for multi-frustum rendering.\n   * @memberof UniformState.prototype\n   * @type {Cartesian2}\n   */\n  entireFrustum: {\n    get: function () {\n      return this._entireFrustum;\n    },\n  },\n\n  /**\n   * The near distance (<code>x</code>) and the far distance (<code>y</code>) of the frustum defined by the camera.\n   * This is the individual frustum used for multi-frustum rendering.\n   * @memberof UniformState.prototype\n   * @type {Cartesian2}\n   */\n  currentFrustum: {\n    get: function () {\n      return this._currentFrustum;\n    },\n  },\n\n  /**\n   * The distances to the frustum planes. The top, bottom, left and right distances are\n   * the x, y, z, and w components, respectively.\n   * @memberof UniformState.prototype\n   * @type {Cartesian4}\n   */\n  frustumPlanes: {\n    get: function () {\n      return this._frustumPlanes;\n    },\n  },\n\n  /**\n   * The far plane\'s distance from the near plane, plus 1.0.\n   *\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  farDepthFromNearPlusOne: {\n    get: function () {\n      return this._farDepthFromNearPlusOne;\n    },\n  },\n\n  /**\n   * The log2 of {@link UniformState#farDepthFromNearPlusOne}.\n   *\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  log2FarDepthFromNearPlusOne: {\n    get: function () {\n      return this._log2FarDepthFromNearPlusOne;\n    },\n  },\n\n  /**\n   * 1.0 divided by {@link UniformState#log2FarDepthFromNearPlusOne}.\n   *\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  oneOverLog2FarDepthFromNearPlusOne: {\n    get: function () {\n      return this._oneOverLog2FarDepthFromNearPlusOne;\n    },\n  },\n\n  /**\n   * The height in meters of the eye (camera) above or below the ellipsoid.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  eyeHeight: {\n    get: function () {\n      return this._eyeHeight;\n    },\n  },\n\n  /**\n   * The height (<code>x</code>) and the height squared (<code>y</code>)\n   * in meters of the eye (camera) above the 2D world plane. This uniform is only valid\n   * when the {@link SceneMode} is <code>SCENE2D</code>.\n   * @memberof UniformState.prototype\n   * @type {Cartesian2}\n   */\n  eyeHeight2D: {\n    get: function () {\n      return this._eyeHeight2D;\n    },\n  },\n\n  /**\n   * The sun position in 3D world coordinates at the current scene time.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  sunPositionWC: {\n    get: function () {\n      return this._sunPositionWC;\n    },\n  },\n\n  /**\n   * The sun position in 2D world coordinates at the current scene time.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  sunPositionColumbusView: {\n    get: function () {\n      return this._sunPositionColumbusView;\n    },\n  },\n\n  /**\n   * A normalized vector to the sun in 3D world coordinates at the current scene time.  Even in 2D or\n   * Columbus View mode, this returns the direction to the sun in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  sunDirectionWC: {\n    get: function () {\n      return this._sunDirectionWC;\n    },\n  },\n\n  /**\n   * A normalized vector to the sun in eye coordinates at the current scene time.  In 3D mode, this\n   * returns the actual vector from the camera position to the sun position.  In 2D and Columbus View, it returns\n   * the vector from the equivalent 3D camera position to the position of the sun in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  sunDirectionEC: {\n    get: function () {\n      return this._sunDirectionEC;\n    },\n  },\n\n  /**\n   * A normalized vector to the moon in eye coordinates at the current scene time.  In 3D mode, this\n   * returns the actual vector from the camera position to the moon position.  In 2D and Columbus View, it returns\n   * the vector from the equivalent 3D camera position to the position of the moon in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  moonDirectionEC: {\n    get: function () {\n      return this._moonDirectionEC;\n    },\n  },\n\n  /**\n   * A normalized vector to the scene\'s light source in 3D world coordinates.  Even in 2D or\n   * Columbus View mode, this returns the direction to the light in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  lightDirectionWC: {\n    get: function () {\n      return this._lightDirectionWC;\n    },\n  },\n\n  /**\n   * A normalized vector to the scene\'s light source in eye coordinates.  In 3D mode, this\n   * returns the actual vector from the camera position to the light.  In 2D and Columbus View, it returns\n   * the vector from the equivalent 3D camera position in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  lightDirectionEC: {\n    get: function () {\n      return this._lightDirectionEC;\n    },\n  },\n\n  /**\n   * The color of light emitted by the scene\'s light source. This is equivalent to the light\n   * color multiplied by the light intensity limited to a maximum luminance of 1.0 suitable\n   * for non-HDR lighting.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  lightColor: {\n    get: function () {\n      return this._lightColor;\n    },\n  },\n\n  /**\n   * The high dynamic range color of light emitted by the scene\'s light source. This is equivalent to\n   * the light color multiplied by the light intensity suitable for HDR lighting.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  lightColorHdr: {\n    get: function () {\n      return this._lightColorHdr;\n    },\n  },\n\n  /**\n   * The high bits of the camera position.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  encodedCameraPositionMCHigh: {\n    get: function () {\n      cleanEncodedCameraPositionMC(this);\n      return this._encodedCameraPositionMC.high;\n    },\n  },\n\n  /**\n   * The low bits of the camera position.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  encodedCameraPositionMCLow: {\n    get: function () {\n      cleanEncodedCameraPositionMC(this);\n      return this._encodedCameraPositionMC.low;\n    },\n  },\n\n  /**\n   * A 3x3 matrix that transforms from True Equator Mean Equinox (TEME) axes to the\n   * pseudo-fixed axes at the Scene\'s current time.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  temeToPseudoFixedMatrix: {\n    get: function () {\n      return this._temeToPseudoFixed;\n    },\n  },\n\n  /**\n   * Gets the scaling factor for transforming from the canvas\n   * pixel space to canvas coordinate space.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  pixelRatio: {\n    get: function () {\n      return this._pixelRatio;\n    },\n  },\n\n  /**\n   * A scalar used to mix a color with the fog color based on the distance to the camera.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  fogDensity: {\n    get: function () {\n      return this._fogDensity;\n    },\n  },\n\n  /**\n   * A scalar that represents the geometric tolerance per meter\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  geometricToleranceOverMeter: {\n    get: function () {\n      return this._geometricToleranceOverMeter;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Pass}\n   */\n  pass: {\n    get: function () {\n      return this._pass;\n    },\n  },\n\n  /**\n   * The current background color\n   * @memberof UniformState.prototype\n   * @type {Color}\n   */\n  backgroundColor: {\n    get: function () {\n      return this._backgroundColor;\n    },\n  },\n\n  /**\n   * The look up texture used to find the BRDF for a material\n   * @memberof UniformState.prototype\n   * @type {Texture}\n   */\n  brdfLut: {\n    get: function () {\n      return this._brdfLut;\n    },\n  },\n\n  /**\n   * The environment map of the scene\n   * @memberof UniformState.prototype\n   * @type {CubeMap}\n   */\n  environmentMap: {\n    get: function () {\n      return this._environmentMap;\n    },\n  },\n\n  /**\n   * The spherical harmonic coefficients of the scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3[]}\n   */\n  sphericalHarmonicCoefficients: {\n    get: function () {\n      return this._sphericalHarmonicCoefficients;\n    },\n  },\n\n  /**\n   * The specular environment map atlas of the scene.\n   * @memberof UniformState.prototype\n   * @type {Texture}\n   */\n  specularEnvironmentMaps: {\n    get: function () {\n      return this._specularEnvironmentMaps;\n    },\n  },\n\n  /**\n   * The dimensions of the specular environment map atlas of the scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian2}\n   */\n  specularEnvironmentMapsDimensions: {\n    get: function () {\n      return this._specularEnvironmentMapsDimensions;\n    },\n  },\n\n  /**\n   * The maximum level-of-detail of the specular environment map atlas of the scene.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  specularEnvironmentMapsMaximumLOD: {\n    get: function () {\n      return this._specularEnvironmentMapsMaximumLOD;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  imagerySplitPosition: {\n    get: function () {\n      return this._imagerySplitPosition;\n    },\n  },\n\n  /**\n   * The distance from the camera at which to disable the depth test of billboards, labels and points\n   * to, for example, prevent clipping against terrain. When set to zero, the depth test should always\n   * be applied. When less than zero, the depth test should never be applied.\n   *\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  minimumDisableDepthTestDistance: {\n    get: function () {\n      return this._minimumDisableDepthTestDistance;\n    },\n  },\n\n  /**\n   * The highlight color of unclassified 3D Tiles.\n   *\n   * @memberof UniformState.prototype\n   * @type {Color}\n   */\n  invertClassificationColor: {\n    get: function () {\n      return this._invertClassificationColor;\n    },\n  },\n\n  /**\n   * Whether or not the current projection is orthographic in 3D.\n   *\n   * @memberOf UniformState.prototype\n   * @type {Boolean}\n   */\n  orthographicIn3D: {\n    get: function () {\n      return this._orthographicIn3D;\n    },\n  },\n\n  /**\n   * The current ellipsoid.\n   *\n   * @memberOf UniformState.prototype\n   * @type {Ellipsoid}\n   */\n  ellipsoid: {\n    get: function () {\n      return (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(this._ellipsoid, _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].WGS84 */ .Z.WGS84);\n    },\n  },\n});\n\nfunction setView(uniformState, matrix) {\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(matrix, uniformState._view);\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(matrix, uniformState._viewRotation);\n\n  uniformState._view3DDirty = true;\n  uniformState._inverseView3DDirty = true;\n  uniformState._modelViewDirty = true;\n  uniformState._modelView3DDirty = true;\n  uniformState._modelViewRelativeToEyeDirty = true;\n  uniformState._inverseModelViewDirty = true;\n  uniformState._inverseModelView3DDirty = true;\n  uniformState._viewProjectionDirty = true;\n  uniformState._inverseViewProjectionDirty = true;\n  uniformState._modelViewProjectionDirty = true;\n  uniformState._modelViewProjectionRelativeToEyeDirty = true;\n  uniformState._modelViewInfiniteProjectionDirty = true;\n  uniformState._normalDirty = true;\n  uniformState._inverseNormalDirty = true;\n  uniformState._normal3DDirty = true;\n  uniformState._inverseNormal3DDirty = true;\n}\n\nfunction setInverseView(uniformState, matrix) {\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(matrix, uniformState._inverseView);\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(matrix, uniformState._inverseViewRotation);\n}\n\nfunction setProjection(uniformState, matrix) {\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(matrix, uniformState._projection);\n\n  uniformState._inverseProjectionDirty = true;\n  uniformState._viewProjectionDirty = true;\n  uniformState._inverseViewProjectionDirty = true;\n  uniformState._modelViewProjectionDirty = true;\n  uniformState._modelViewProjectionRelativeToEyeDirty = true;\n}\n\nfunction setInfiniteProjection(uniformState, matrix) {\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(matrix, uniformState._infiniteProjection);\n\n  uniformState._modelViewInfiniteProjectionDirty = true;\n}\n\nfunction setCamera(uniformState, camera) {\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(camera.positionWC, uniformState._cameraPosition);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(camera.directionWC, uniformState._cameraDirection);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(camera.rightWC, uniformState._cameraRight);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(camera.upWC, uniformState._cameraUp);\n\n  var positionCartographic = camera.positionCartographic;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(positionCartographic)) {\n    uniformState._eyeHeight = -uniformState._ellipsoid.maximumRadius;\n  } else {\n    uniformState._eyeHeight = positionCartographic.height;\n  }\n\n  uniformState._encodedCameraPositionMCDirty = true;\n}\n\nvar transformMatrix = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z();\nvar sunCartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nfunction setSunAndMoonDirections(uniformState, frameState) {\n  if (\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(\n      _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].computeIcrfToFixedMatrix */ .Z.computeIcrfToFixedMatrix(frameState.time, transformMatrix)\n    )\n  ) {\n    transformMatrix = _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].computeTemeToPseudoFixedMatrix */ .Z.computeTemeToPseudoFixedMatrix(\n      frameState.time,\n      transformMatrix\n    );\n  }\n\n  var position = _Core_Simon1994PlanetaryPositions_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].computeSunPositionInEarthInertialFrame */ .Z.computeSunPositionInEarthInertialFrame(\n    frameState.time,\n    uniformState._sunPositionWC\n  );\n  _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiplyByVector */ .Z.multiplyByVector(transformMatrix, position, position);\n\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].normalize */ .Z.normalize(position, uniformState._sunDirectionWC);\n\n  position = _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n    uniformState.viewRotation3D,\n    position,\n    uniformState._sunDirectionEC\n  );\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].normalize */ .Z.normalize(position, position);\n\n  position = _Core_Simon1994PlanetaryPositions_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].computeMoonPositionInEarthInertialFrame */ .Z.computeMoonPositionInEarthInertialFrame(\n    frameState.time,\n    uniformState._moonDirectionEC\n  );\n  _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiplyByVector */ .Z.multiplyByVector(transformMatrix, position, position);\n  _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiplyByVector */ .Z.multiplyByVector(uniformState.viewRotation3D, position, position);\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].normalize */ .Z.normalize(position, position);\n\n  var projection = frameState.mapProjection;\n  var ellipsoid = projection.ellipsoid;\n  var sunCartographic = ellipsoid.cartesianToCartographic(\n    uniformState._sunPositionWC,\n    sunCartographicScratch\n  );\n  projection.project(sunCartographic, uniformState._sunPositionColumbusView);\n}\n\n/**\n * Synchronizes the frustum\'s state with the camera state.  This is called\n * by the {@link Scene} when rendering to ensure that automatic GLSL uniforms\n * are set to the right value.\n *\n * @param {Object} camera The camera to synchronize with.\n */\nUniformState.prototype.updateCamera = function (camera) {\n  setView(this, camera.viewMatrix);\n  setInverseView(this, camera.inverseViewMatrix);\n  setCamera(this, camera);\n\n  this._entireFrustum.x = camera.frustum.near;\n  this._entireFrustum.y = camera.frustum.far;\n  this.updateFrustum(camera.frustum);\n\n  this._orthographicIn3D =\n    this._mode !== _Scene_SceneMode_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SCENE2D */ .Z.SCENE2D &&\n    camera.frustum instanceof _Core_OrthographicFrustum_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z;\n};\n\n/**\n * Synchronizes the frustum\'s state with the uniform state.  This is called\n * by the {@link Scene} when rendering to ensure that automatic GLSL uniforms\n * are set to the right value.\n *\n * @param {Object} frustum The frustum to synchronize with.\n */\nUniformState.prototype.updateFrustum = function (frustum) {\n  setProjection(this, frustum.projectionMatrix);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(frustum.infiniteProjectionMatrix)) {\n    setInfiniteProjection(this, frustum.infiniteProjectionMatrix);\n  }\n  this._currentFrustum.x = frustum.near;\n  this._currentFrustum.y = frustum.far;\n\n  this._farDepthFromNearPlusOne = frustum.far - frustum.near + 1.0;\n  this._log2FarDepthFromNearPlusOne = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].log2 */ .Z.log2(\n    this._farDepthFromNearPlusOne\n  );\n  this._oneOverLog2FarDepthFromNearPlusOne =\n    1.0 / this._log2FarDepthFromNearPlusOne;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(frustum._offCenterFrustum)) {\n    frustum = frustum._offCenterFrustum;\n  }\n\n  this._frustumPlanes.x = frustum.top;\n  this._frustumPlanes.y = frustum.bottom;\n  this._frustumPlanes.z = frustum.left;\n  this._frustumPlanes.w = frustum.right;\n};\n\nUniformState.prototype.updatePass = function (pass) {\n  this._pass = pass;\n};\n\nvar EMPTY_ARRAY = [];\nvar defaultLight = new _Scene_SunLight_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z();\n\n/**\n * Synchronizes frame state with the uniform state.  This is called\n * by the {@link Scene} when rendering to ensure that automatic GLSL uniforms\n * are set to the right value.\n *\n * @param {FrameState} frameState The frameState to synchronize with.\n */\nUniformState.prototype.update = function (frameState) {\n  this._mode = frameState.mode;\n  this._mapProjection = frameState.mapProjection;\n  this._ellipsoid = frameState.mapProjection.ellipsoid;\n  this._pixelRatio = frameState.pixelRatio;\n\n  var camera = frameState.camera;\n  this.updateCamera(camera);\n\n  if (frameState.mode === _Scene_SceneMode_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SCENE2D */ .Z.SCENE2D) {\n    this._frustum2DWidth = camera.frustum.right - camera.frustum.left;\n    this._eyeHeight2D.x = this._frustum2DWidth * 0.5;\n    this._eyeHeight2D.y = this._eyeHeight2D.x * this._eyeHeight2D.x;\n  } else {\n    this._frustum2DWidth = 0.0;\n    this._eyeHeight2D.x = 0.0;\n    this._eyeHeight2D.y = 0.0;\n  }\n\n  setSunAndMoonDirections(this, frameState);\n\n  var light = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(frameState.light, defaultLight);\n  if (light instanceof _Scene_SunLight_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z) {\n    this._lightDirectionWC = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(\n      this._sunDirectionWC,\n      this._lightDirectionWC\n    );\n    this._lightDirectionEC = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(\n      this._sunDirectionEC,\n      this._lightDirectionEC\n    );\n  } else {\n    this._lightDirectionWC = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].normalize */ .Z.normalize(\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].negate */ .Z.negate(light.direction, this._lightDirectionWC),\n      this._lightDirectionWC\n    );\n    this._lightDirectionEC = _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n      this.viewRotation3D,\n      this._lightDirectionWC,\n      this._lightDirectionEC\n    );\n  }\n\n  var lightColor = light.color;\n  var lightColorHdr = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromElements */ .Z.fromElements(\n    lightColor.red,\n    lightColor.green,\n    lightColor.blue,\n    this._lightColorHdr\n  );\n  lightColorHdr = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    lightColorHdr,\n    light.intensity,\n    lightColorHdr\n  );\n  var maximumComponent = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].maximumComponent */ .Z.maximumComponent(lightColorHdr);\n  if (maximumComponent > 1.0) {\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].divideByScalar */ .Z.divideByScalar(\n      lightColorHdr,\n      maximumComponent,\n      this._lightColor\n    );\n  } else {\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(lightColorHdr, this._lightColor);\n  }\n\n  var brdfLutGenerator = frameState.brdfLutGenerator;\n  var brdfLut = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(brdfLutGenerator)\n    ? brdfLutGenerator.colorTexture\n    : undefined;\n  this._brdfLut = brdfLut;\n\n  this._environmentMap = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(\n    frameState.environmentMap,\n    frameState.context.defaultCubeMap\n  );\n\n  // IE 11 doesn\'t optimize out uniforms that are #ifdef\'d out. So undefined values for the spherical harmonic\n  // coefficients and specular environment map atlas dimensions cause a crash.\n  this._sphericalHarmonicCoefficients = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(\n    frameState.sphericalHarmonicCoefficients,\n    EMPTY_ARRAY\n  );\n  this._specularEnvironmentMaps = frameState.specularEnvironmentMaps;\n  this._specularEnvironmentMapsMaximumLOD =\n    frameState.specularEnvironmentMapsMaximumLOD;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(this._specularEnvironmentMaps)) {\n    _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n      this._specularEnvironmentMaps.dimensions,\n      this._specularEnvironmentMapsDimensions\n    );\n  }\n\n  this._fogDensity = frameState.fog.density;\n\n  this._invertClassificationColor = frameState.invertClassificationColor;\n\n  this._frameState = frameState;\n  this._temeToPseudoFixed = _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].computeTemeToPseudoFixedMatrix */ .Z.computeTemeToPseudoFixedMatrix(\n    frameState.time,\n    this._temeToPseudoFixed\n  );\n\n  // Convert the relative imagerySplitPosition to absolute pixel coordinates\n  this._imagerySplitPosition =\n    frameState.imagerySplitPosition * frameState.context.drawingBufferWidth;\n  var fov = camera.frustum.fov;\n  var viewport = this._viewport;\n  var pixelSizePerMeter;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(fov)) {\n    if (viewport.height > viewport.width) {\n      pixelSizePerMeter = (Math.tan(0.5 * fov) * 2.0) / viewport.height;\n    } else {\n      pixelSizePerMeter = (Math.tan(0.5 * fov) * 2.0) / viewport.width;\n    }\n  } else {\n    pixelSizePerMeter = 1.0 / Math.max(viewport.width, viewport.height);\n  }\n\n  this._geometricToleranceOverMeter =\n    pixelSizePerMeter * frameState.maximumScreenSpaceError;\n  _Core_Color_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].clone */ .Z.clone(frameState.backgroundColor, this._backgroundColor);\n\n  this._minimumDisableDepthTestDistance =\n    frameState.minimumDisableDepthTestDistance;\n  this._minimumDisableDepthTestDistance *= this._minimumDisableDepthTestDistance;\n  if (this._minimumDisableDepthTestDistance === Number.POSITIVE_INFINITY) {\n    this._minimumDisableDepthTestDistance = -1.0;\n  }\n};\n\nfunction cleanViewport(uniformState) {\n  if (uniformState._viewportDirty) {\n    var v = uniformState._viewport;\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].computeOrthographicOffCenter */ .Z.computeOrthographicOffCenter(\n      v.x,\n      v.x + v.width,\n      v.y,\n      v.y + v.height,\n      0.0,\n      1.0,\n      uniformState._viewportOrthographicMatrix\n    );\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].computeViewportTransformation */ .Z.computeViewportTransformation(\n      v,\n      0.0,\n      1.0,\n      uniformState._viewportTransformation\n    );\n    uniformState._viewportDirty = false;\n  }\n}\n\nfunction cleanInverseProjection(uniformState) {\n  if (uniformState._inverseProjectionDirty) {\n    uniformState._inverseProjectionDirty = false;\n\n    if (\n      uniformState._mode !== _Scene_SceneMode_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SCENE2D */ .Z.SCENE2D &&\n      uniformState._mode !== _Scene_SceneMode_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].MORPHING */ .Z.MORPHING &&\n      !uniformState._orthographicIn3D\n    ) {\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].inverse */ .Z.inverse(\n        uniformState._projection,\n        uniformState._inverseProjection\n      );\n    } else {\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].ZERO */ .Z.ZERO, uniformState._inverseProjection);\n    }\n  }\n}\n\n// Derived\nfunction cleanModelView(uniformState) {\n  if (uniformState._modelViewDirty) {\n    uniformState._modelViewDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(\n      uniformState._view,\n      uniformState._model,\n      uniformState._modelView\n    );\n  }\n}\n\nfunction cleanModelView3D(uniformState) {\n  if (uniformState._modelView3DDirty) {\n    uniformState._modelView3DDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiplyTransformation */ .Z.multiplyTransformation(\n      uniformState.view3D,\n      uniformState._model,\n      uniformState._modelView3D\n    );\n  }\n}\n\nfunction cleanInverseModelView(uniformState) {\n  if (uniformState._inverseModelViewDirty) {\n    uniformState._inverseModelViewDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].inverse */ .Z.inverse(uniformState.modelView, uniformState._inverseModelView);\n  }\n}\n\nfunction cleanInverseModelView3D(uniformState) {\n  if (uniformState._inverseModelView3DDirty) {\n    uniformState._inverseModelView3DDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].inverse */ .Z.inverse(uniformState.modelView3D, uniformState._inverseModelView3D);\n  }\n}\n\nfunction cleanViewProjection(uniformState) {\n  if (uniformState._viewProjectionDirty) {\n    uniformState._viewProjectionDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiply */ .Z.multiply(\n      uniformState._projection,\n      uniformState._view,\n      uniformState._viewProjection\n    );\n  }\n}\n\nfunction cleanInverseViewProjection(uniformState) {\n  if (uniformState._inverseViewProjectionDirty) {\n    uniformState._inverseViewProjectionDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].inverse */ .Z.inverse(\n      uniformState.viewProjection,\n      uniformState._inverseViewProjection\n    );\n  }\n}\n\nfunction cleanModelViewProjection(uniformState) {\n  if (uniformState._modelViewProjectionDirty) {\n    uniformState._modelViewProjectionDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiply */ .Z.multiply(\n      uniformState._projection,\n      uniformState.modelView,\n      uniformState._modelViewProjection\n    );\n  }\n}\n\nfunction cleanModelViewRelativeToEye(uniformState) {\n  if (uniformState._modelViewRelativeToEyeDirty) {\n    uniformState._modelViewRelativeToEyeDirty = false;\n\n    var mv = uniformState.modelView;\n    var mvRte = uniformState._modelViewRelativeToEye;\n    mvRte[0] = mv[0];\n    mvRte[1] = mv[1];\n    mvRte[2] = mv[2];\n    mvRte[3] = mv[3];\n    mvRte[4] = mv[4];\n    mvRte[5] = mv[5];\n    mvRte[6] = mv[6];\n    mvRte[7] = mv[7];\n    mvRte[8] = mv[8];\n    mvRte[9] = mv[9];\n    mvRte[10] = mv[10];\n    mvRte[11] = mv[11];\n    mvRte[12] = 0.0;\n    mvRte[13] = 0.0;\n    mvRte[14] = 0.0;\n    mvRte[15] = mv[15];\n  }\n}\n\nfunction cleanInverseModelViewProjection(uniformState) {\n  if (uniformState._inverseModelViewProjectionDirty) {\n    uniformState._inverseModelViewProjectionDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].inverse */ .Z.inverse(\n      uniformState.modelViewProjection,\n      uniformState._inverseModelViewProjection\n    );\n  }\n}\n\nfunction cleanModelViewProjectionRelativeToEye(uniformState) {\n  if (uniformState._modelViewProjectionRelativeToEyeDirty) {\n    uniformState._modelViewProjectionRelativeToEyeDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiply */ .Z.multiply(\n      uniformState._projection,\n      uniformState.modelViewRelativeToEye,\n      uniformState._modelViewProjectionRelativeToEye\n    );\n  }\n}\n\nfunction cleanModelViewInfiniteProjection(uniformState) {\n  if (uniformState._modelViewInfiniteProjectionDirty) {\n    uniformState._modelViewInfiniteProjectionDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiply */ .Z.multiply(\n      uniformState._infiniteProjection,\n      uniformState.modelView,\n      uniformState._modelViewInfiniteProjection\n    );\n  }\n}\n\nfunction cleanNormal(uniformState) {\n  if (uniformState._normalDirty) {\n    uniformState._normalDirty = false;\n\n    var m = uniformState._normal;\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(uniformState.inverseModelView, m);\n    _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getRotation */ .Z.getRotation(m, m);\n    _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].transpose */ .Z.transpose(m, m);\n  }\n}\n\nfunction cleanNormal3D(uniformState) {\n  if (uniformState._normal3DDirty) {\n    uniformState._normal3DDirty = false;\n\n    var m = uniformState._normal3D;\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(uniformState.inverseModelView3D, m);\n    _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getRotation */ .Z.getRotation(m, m);\n    _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].transpose */ .Z.transpose(m, m);\n  }\n}\n\nfunction cleanInverseNormal(uniformState) {\n  if (uniformState._inverseNormalDirty) {\n    uniformState._inverseNormalDirty = false;\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(\n      uniformState.inverseModelView,\n      uniformState._inverseNormal\n    );\n    _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getRotation */ .Z.getRotation(\n      uniformState._inverseNormal,\n      uniformState._inverseNormal\n    );\n  }\n}\n\nfunction cleanInverseNormal3D(uniformState) {\n  if (uniformState._inverseNormal3DDirty) {\n    uniformState._inverseNormal3DDirty = false;\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(\n      uniformState.inverseModelView3D,\n      uniformState._inverseNormal3D\n    );\n    _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].getRotation */ .Z.getRotation(\n      uniformState._inverseNormal3D,\n      uniformState._inverseNormal3D\n    );\n  }\n}\n\nvar cameraPositionMC = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nfunction cleanEncodedCameraPositionMC(uniformState) {\n  if (uniformState._encodedCameraPositionMCDirty) {\n    uniformState._encodedCameraPositionMCDirty = false;\n\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n      uniformState.inverseModel,\n      uniformState._cameraPosition,\n      cameraPositionMC\n    );\n    _Core_EncodedCartesian3_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].fromCartesian */ .Z.fromCartesian(\n      cameraPositionMC,\n      uniformState._encodedCameraPositionMC\n    );\n  }\n}\n\nvar view2Dto3DPScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar view2Dto3DRScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar view2Dto3DUScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar view2Dto3DDScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar view2Dto3DCartographicScratch = new _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar view2Dto3DCartesian3Scratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\nvar view2Dto3DMatrix4Scratch = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n\nfunction view2Dto3D(\n  position2D,\n  direction2D,\n  right2D,\n  up2D,\n  frustum2DWidth,\n  mode,\n  projection,\n  result\n) {\n  // The camera position and directions are expressed in the 2D coordinate system where the Y axis is to the East,\n  // the Z axis is to the North, and the X axis is out of the map.  Express them instead in the ENU axes where\n  // X is to the East, Y is to the North, and Z is out of the local horizontal plane.\n  var p = view2Dto3DPScratch;\n  p.x = position2D.y;\n  p.y = position2D.z;\n  p.z = position2D.x;\n\n  var r = view2Dto3DRScratch;\n  r.x = right2D.y;\n  r.y = right2D.z;\n  r.z = right2D.x;\n\n  var u = view2Dto3DUScratch;\n  u.x = up2D.y;\n  u.y = up2D.z;\n  u.z = up2D.x;\n\n  var d = view2Dto3DDScratch;\n  d.x = direction2D.y;\n  d.y = direction2D.z;\n  d.z = direction2D.x;\n\n  // In 2D, the camera height is always 12.7 million meters.\n  // The apparent height is equal to half the frustum width.\n  if (mode === _Scene_SceneMode_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SCENE2D */ .Z.SCENE2D) {\n    p.z = frustum2DWidth * 0.5;\n  }\n\n  // Compute the equivalent camera position in the real (3D) world.\n  // In 2D and Columbus View, the camera can travel outside the projection, and when it does so\n  // there\'s not really any corresponding location in the real world.  So clamp the unprojected\n  // longitude and latitude to their valid ranges.\n  var cartographic = projection.unproject(p, view2Dto3DCartographicScratch);\n  cartographic.longitude = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clamp */ .Z.clamp(\n    cartographic.longitude,\n    -Math.PI,\n    Math.PI\n  );\n  cartographic.latitude = _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clamp */ .Z.clamp(\n    cartographic.latitude,\n    -_Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO,\n    _Core_Math_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO\n  );\n  var ellipsoid = projection.ellipsoid;\n  var position3D = ellipsoid.cartographicToCartesian(\n    cartographic,\n    view2Dto3DCartesian3Scratch\n  );\n\n  // Compute the rotation from the local ENU at the real world camera position to the fixed axes.\n  var enuToFixed = _Core_Transforms_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].eastNorthUpToFixedFrame */ .Z.eastNorthUpToFixedFrame(\n    position3D,\n    ellipsoid,\n    view2Dto3DMatrix4Scratch\n  );\n\n  // Transform each camera direction to the fixed axes.\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiplyByPointAsVector */ .Z.multiplyByPointAsVector(enuToFixed, r, r);\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiplyByPointAsVector */ .Z.multiplyByPointAsVector(enuToFixed, u, u);\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].multiplyByPointAsVector */ .Z.multiplyByPointAsVector(enuToFixed, d, d);\n\n  // Compute the view matrix based on the new fixed-frame camera position and directions.\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z)(result)) {\n    result = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z();\n  }\n\n  result[0] = r.x;\n  result[1] = u.x;\n  result[2] = -d.x;\n  result[3] = 0.0;\n  result[4] = r.y;\n  result[5] = u.y;\n  result[6] = -d.y;\n  result[7] = 0.0;\n  result[8] = r.z;\n  result[9] = u.z;\n  result[10] = -d.z;\n  result[11] = 0.0;\n  result[12] = -_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].dot */ .Z.dot(r, position3D);\n  result[13] = -_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].dot */ .Z.dot(u, position3D);\n  result[14] = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].dot */ .Z.dot(d, position3D);\n  result[15] = 1.0;\n\n  return result;\n}\n\nfunction updateView3D(that) {\n  if (that._view3DDirty) {\n    if (that._mode === _Scene_SceneMode_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].SCENE3D */ .Z.SCENE3D) {\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].clone */ .Z.clone(that._view, that._view3D);\n    } else {\n      view2Dto3D(\n        that._cameraPosition,\n        that._cameraDirection,\n        that._cameraRight,\n        that._cameraUp,\n        that._frustum2DWidth,\n        that._mode,\n        that._mapProjection,\n        that._view3D\n      );\n    }\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(that._view3D, that._viewRotation3D);\n    that._view3DDirty = false;\n  }\n}\n\nfunction updateInverseView3D(that) {\n  if (that._inverseView3DDirty) {\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].inverseTransformation */ .Z.inverseTransformation(that.view3D, that._inverseView3D);\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].getMatrix3 */ .Z.getMatrix3(that._inverseView3D, that._inverseViewRotation3D);\n    that._inverseView3DDirty = false;\n  }\n}\n/* harmony default export */ __webpack_exports__["Z"] = (UniformState);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkxNDAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTZEO0FBQ2Q7QUFDQTtBQUNBO0FBQ0k7QUFDZDtBQUNjO0FBQ1Y7QUFDSTtBQUNnQjtBQUNwQjtBQUNBO0FBQ0E7QUFDd0I7QUFDZ0I7QUFDbEM7QUFDRDtBQUNGOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUEsdUJBQXVCLDJFQUFpQjtBQUN4QyxpQ0FBaUMsb0VBQVU7QUFDM0M7QUFDQSxxQ0FBcUMsOEVBQWEsQ0FBQyxvRkFBZ0I7QUFDbkUsaUNBQWlDLDhFQUFhLENBQUMsb0ZBQWdCOztBQUUvRCxnQkFBZ0IsOEVBQWEsQ0FBQyxvRkFBZ0I7QUFDOUMsZUFBZSw4RUFBYSxDQUFDLG9GQUFnQjtBQUM3QyxzQkFBc0IsOEVBQWEsQ0FBQyxvRkFBZ0I7QUFDcEQscUJBQXFCLDhFQUFhLENBQUMsb0ZBQWdCO0FBQ25ELDZCQUE2Qiw4RUFBYSxDQUFDLG9GQUFnQjtBQUMzRCw0QkFBNEIsb0VBQVU7QUFDdEMsNkJBQTZCLG9FQUFVO0FBQ3ZDLDRCQUE0QixvRUFBVTtBQUN0QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSw0QkFBNEIsOEVBQWEsQ0FBQyxvRkFBZ0I7O0FBRTFEO0FBQ0E7QUFDQSxxQkFBcUIsa0VBQU87O0FBRTVCO0FBQ0EsNEJBQTRCLGtFQUFPOztBQUVuQztBQUNBLDJCQUEyQixrRUFBTzs7QUFFbEM7QUFDQSxvQ0FBb0Msa0VBQU87O0FBRTNDLDJCQUEyQixrRUFBTztBQUNsQyxrQ0FBa0Msa0VBQU87O0FBRXpDLDZCQUE2QixrRUFBTztBQUNwQyxvQ0FBb0Msa0VBQU87O0FBRTNDO0FBQ0EsZ0NBQWdDLGtFQUFPOztBQUV2QztBQUNBLHdCQUF3QixrRUFBTzs7QUFFL0I7QUFDQSwwQkFBMEIsa0VBQU87O0FBRWpDO0FBQ0EscUNBQXFDLGtFQUFPOztBQUU1QztBQUNBLCtCQUErQixrRUFBTzs7QUFFdEM7QUFDQSxpQ0FBaUMsa0VBQU87O0FBRXhDO0FBQ0EsNkJBQTZCLGtFQUFPOztBQUVwQztBQUNBLG9DQUFvQyxrRUFBTzs7QUFFM0M7QUFDQSxrQ0FBa0Msa0VBQU87O0FBRXpDO0FBQ0EseUNBQXlDLGtFQUFPOztBQUVoRDtBQUNBLCtDQUErQyxrRUFBTzs7QUFFdEQ7QUFDQSwwQ0FBMEMsa0VBQU87O0FBRWpEO0FBQ0EscUJBQXFCLGtFQUFPOztBQUU1QjtBQUNBLHVCQUF1QixrRUFBTzs7QUFFOUI7QUFDQSw0QkFBNEIsa0VBQU87O0FBRW5DO0FBQ0EsOEJBQThCLGtFQUFPOztBQUVyQztBQUNBLHNDQUFzQywyRUFBaUI7QUFDdkQsNkJBQTZCLG9FQUFVOztBQUV2Qyw0QkFBNEIsb0VBQVU7QUFDdEMsc0NBQXNDLG9FQUFVO0FBQ2hELDZCQUE2QixvRUFBVTtBQUN2Qyw2QkFBNkIsb0VBQVU7QUFDdkMsOEJBQThCLG9FQUFVOztBQUV4QywrQkFBK0Isb0VBQVU7QUFDekMsK0JBQStCLG9FQUFVO0FBQ3pDLHlCQUF5QixvRUFBVTtBQUNuQyw0QkFBNEIsb0VBQVU7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG9FQUFVO0FBQ3hDLDBCQUEwQixvRUFBVTtBQUNwQyx1QkFBdUIsb0VBQVU7QUFDakM7QUFDQTtBQUNBLDBCQUEwQixvRUFBVTtBQUNwQztBQUNBO0FBQ0EsOEJBQThCLCtEQUFLOztBQUVuQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxnREFBZ0Qsb0VBQVU7QUFDMUQ7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxXQUFXLHlGQUF3QjtBQUNuQyxRQUFRLHVGQUF1Qjs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsTUFBTSw4RUFBYTs7QUFFbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLGtGQUFlO0FBQ3ZCOztBQUVBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsd0ZBQWtCO0FBQzFCLFFBQVEsc0ZBQWlCO0FBQ3pCOztBQUVBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0EsNERBQTRELHdCQUF3QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0EsMERBQTBELHdCQUF3QjtBQUNsRjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSxtQkFBbUIsK0JBQStCO0FBQ2xEO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBLHFFQUFxRSxpQ0FBaUM7QUFDdEc7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQSxtRUFBbUUsNkJBQTZCO0FBQ2hHO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBLGtGQUFrRixvQ0FBb0M7QUFDdEg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxNQUFNLDBCQUEwQjtBQUNoQztBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsTUFBTSxpQ0FBaUM7QUFDdkM7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBLGtCQUFrQiwyQ0FBMkM7QUFDN0Q7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0EscUJBQXFCLCtDQUErQztBQUNwRTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpQkFBaUI7QUFDaEM7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxhQUFhLDBFQUFZLGtCQUFrQiwrRUFBZTtBQUMxRCxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQSxFQUFFLDhFQUFhO0FBQ2YsRUFBRSx3RkFBa0I7O0FBRXBCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFLDhFQUFhO0FBQ2YsRUFBRSx3RkFBa0I7QUFDcEI7O0FBRUE7QUFDQSxFQUFFLDhFQUFhOztBQUVmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUUsOEVBQWE7O0FBRWY7QUFDQTs7QUFFQTtBQUNBLEVBQUUsZ0ZBQWdCO0FBQ2xCLEVBQUUsZ0ZBQWdCO0FBQ2xCLEVBQUUsZ0ZBQWdCO0FBQ2xCLEVBQUUsZ0ZBQWdCOztBQUVsQjtBQUNBLE9BQU8sc0VBQU87QUFDZDtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsMEJBQTBCLGtFQUFPO0FBQ2pDLGlDQUFpQyxzRUFBWTtBQUM3QztBQUNBO0FBQ0EsS0FBSyxzRUFBTztBQUNaLE1BQU0sdUhBQW1DO0FBQ3pDO0FBQ0E7QUFDQSxzQkFBc0IsbUlBQXlDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixvS0FBa0U7QUFDbkY7QUFDQTtBQUNBO0FBQ0EsRUFBRSxvR0FBd0I7O0FBRTFCLEVBQUUsd0ZBQW9COztBQUV0QixhQUFhLG9HQUF3QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsd0ZBQW9COztBQUV0QixhQUFhLHNLQUFtRTtBQUNoRjtBQUNBO0FBQ0E7QUFDQSxFQUFFLG9HQUF3QjtBQUMxQixFQUFFLG9HQUF3QjtBQUMxQixFQUFFLHdGQUFvQjs7QUFFdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIscUZBQWlCO0FBQ3BDLDhCQUE4Qiw4RUFBbUI7QUFDakQ7O0FBRUE7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QjtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLE1BQU0sc0VBQU87QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNDQUFzQyx3RUFBZTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLHNFQUFPO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QixvRUFBUTs7QUFFL0I7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QjtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDBCQUEwQixxRkFBaUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGNBQWMsMEVBQVk7QUFDMUIsdUJBQXVCLG9FQUFRO0FBQy9CLDZCQUE2QixnRkFBZ0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGdGQUFnQjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osNkJBQTZCLHdGQUFvQjtBQUNqRCxNQUFNLGtGQUFpQjtBQUN2QjtBQUNBO0FBQ0EsNkJBQTZCLG9HQUF3QjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLDhGQUF1QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNHQUEyQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixzR0FBMkI7QUFDcEQ7QUFDQSxJQUFJLGtHQUF5QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixJQUFJLGdGQUFnQjtBQUNwQjs7QUFFQTtBQUNBLGdCQUFnQixzRUFBTztBQUN2QjtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLDBFQUFZO0FBQ3JDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esd0NBQXdDLDBFQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLHNFQUFPO0FBQ2IsSUFBSSxnRkFBZ0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSw0QkFBNEIsbUlBQXlDO0FBQ3JFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHNFQUFPO0FBQ2I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUUsMkVBQVc7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSSw0SEFBb0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksOEhBQXFDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCLHFGQUFpQjtBQUM5Qyw2QkFBNkIsdUZBQWtCO0FBQy9DO0FBQ0E7QUFDQSxNQUFNLGtGQUFlO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixNQUFNLDhFQUFhLENBQUMsNEVBQVk7QUFDaEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksZ0hBQThCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxnSEFBOEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGtGQUFlO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLElBQUksa0ZBQWU7QUFDbkI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxvRkFBZ0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGtGQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLElBQUksb0ZBQWdCO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxrRkFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLG9GQUFnQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLElBQUksb0ZBQWdCO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLHdGQUFrQjtBQUN0QixJQUFJLDBGQUFtQjtBQUN2QixJQUFJLHNGQUFpQjtBQUNyQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLElBQUksd0ZBQWtCO0FBQ3RCLElBQUksMEZBQW1CO0FBQ3ZCLElBQUksc0ZBQWlCO0FBQ3JCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSSx3RkFBa0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsSUFBSSwwRkFBbUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHdGQUFrQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxJQUFJLDBGQUFtQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJCQUEyQixvRUFBVTs7QUFFckM7QUFDQTtBQUNBOztBQUVBLElBQUksa0dBQXVCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1R0FBK0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkIsb0VBQVU7QUFDdkMsNkJBQTZCLG9FQUFVO0FBQ3ZDLDZCQUE2QixvRUFBVTtBQUN2Qyw2QkFBNkIsb0VBQVU7QUFDdkMsd0NBQXdDLHNFQUFZO0FBQ3BELHNDQUFzQyxvRUFBVTtBQUNoRCxtQ0FBbUMsa0VBQU87O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWUscUZBQWlCO0FBQ2hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwwRUFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsMEVBQWdCO0FBQzFDO0FBQ0EsS0FBSyxzRkFBc0I7QUFDM0IsSUFBSSxzRkFBc0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLHFIQUFrQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUUsa0hBQStCO0FBQ2pDLEVBQUUsa0hBQStCO0FBQ2pDLEVBQUUsa0hBQStCOztBQUVqQztBQUNBLE9BQU8sc0VBQU87QUFDZCxpQkFBaUIsa0VBQU87QUFDeEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDRFQUFjO0FBQzlCLGdCQUFnQiw0RUFBYztBQUM5QixlQUFlLDRFQUFjO0FBQzdCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUF1QixxRkFBaUI7QUFDeEMsTUFBTSw4RUFBYTtBQUNuQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksd0ZBQWtCO0FBQ3RCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSw4R0FBNkI7QUFDakMsSUFBSSx3RkFBa0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EseURBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1JlbmRlcmVyL1VuaWZvcm1TdGF0ZS5qcz8zOTcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCb3VuZGluZ1JlY3RhbmdsZSBmcm9tIFwiLi4vQ29yZS9Cb3VuZGluZ1JlY3RhbmdsZS5qc1wiO1xuaW1wb3J0IENhcnRlc2lhbjIgZnJvbSBcIi4uL0NvcmUvQ2FydGVzaWFuMi5qc1wiO1xuaW1wb3J0IENhcnRlc2lhbjMgZnJvbSBcIi4uL0NvcmUvQ2FydGVzaWFuMy5qc1wiO1xuaW1wb3J0IENhcnRlc2lhbjQgZnJvbSBcIi4uL0NvcmUvQ2FydGVzaWFuNC5qc1wiO1xuaW1wb3J0IENhcnRvZ3JhcGhpYyBmcm9tIFwiLi4vQ29yZS9DYXJ0b2dyYXBoaWMuanNcIjtcbmltcG9ydCBDb2xvciBmcm9tIFwiLi4vQ29yZS9Db2xvci5qc1wiO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tIFwiLi4vQ29yZS9kZWZhdWx0VmFsdWUuanNcIjtcbmltcG9ydCBkZWZpbmVkIGZyb20gXCIuLi9Db3JlL2RlZmluZWQuanNcIjtcbmltcG9ydCBFbGxpcHNvaWQgZnJvbSBcIi4uL0NvcmUvRWxsaXBzb2lkLmpzXCI7XG5pbXBvcnQgRW5jb2RlZENhcnRlc2lhbjMgZnJvbSBcIi4uL0NvcmUvRW5jb2RlZENhcnRlc2lhbjMuanNcIjtcbmltcG9ydCBDZXNpdW1NYXRoIGZyb20gXCIuLi9Db3JlL01hdGguanNcIjtcbmltcG9ydCBNYXRyaXgzIGZyb20gXCIuLi9Db3JlL01hdHJpeDMuanNcIjtcbmltcG9ydCBNYXRyaXg0IGZyb20gXCIuLi9Db3JlL01hdHJpeDQuanNcIjtcbmltcG9ydCBPcnRob2dyYXBoaWNGcnVzdHVtIGZyb20gXCIuLi9Db3JlL09ydGhvZ3JhcGhpY0ZydXN0dW0uanNcIjtcbmltcG9ydCBTaW1vbjE5OTRQbGFuZXRhcnlQb3NpdGlvbnMgZnJvbSBcIi4uL0NvcmUvU2ltb24xOTk0UGxhbmV0YXJ5UG9zaXRpb25zLmpzXCI7XG5pbXBvcnQgVHJhbnNmb3JtcyBmcm9tIFwiLi4vQ29yZS9UcmFuc2Zvcm1zLmpzXCI7XG5pbXBvcnQgU2NlbmVNb2RlIGZyb20gXCIuLi9TY2VuZS9TY2VuZU1vZGUuanNcIjtcbmltcG9ydCBTdW5MaWdodCBmcm9tIFwiLi4vU2NlbmUvU3VuTGlnaHQuanNcIjtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIFVuaWZvcm1TdGF0ZSgpIHtcbiAgLyoqXG4gICAqIEB0eXBlIHtUZXh0dXJlfVxuICAgKi9cbiAgdGhpcy5nbG9iZURlcHRoVGV4dHVyZSA9IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICB0aGlzLmdhbW1hID0gdW5kZWZpbmVkO1xuXG4gIHRoaXMuX3ZpZXdwb3J0ID0gbmV3IEJvdW5kaW5nUmVjdGFuZ2xlKCk7XG4gIHRoaXMuX3ZpZXdwb3J0Q2FydGVzaWFuNCA9IG5ldyBDYXJ0ZXNpYW40KCk7XG4gIHRoaXMuX3ZpZXdwb3J0RGlydHkgPSBmYWxzZTtcbiAgdGhpcy5fdmlld3BvcnRPcnRob2dyYXBoaWNNYXRyaXggPSBNYXRyaXg0LmNsb25lKE1hdHJpeDQuSURFTlRJVFkpO1xuICB0aGlzLl92aWV3cG9ydFRyYW5zZm9ybWF0aW9uID0gTWF0cml4NC5jbG9uZShNYXRyaXg0LklERU5USVRZKTtcblxuICB0aGlzLl9tb2RlbCA9IE1hdHJpeDQuY2xvbmUoTWF0cml4NC5JREVOVElUWSk7XG4gIHRoaXMuX3ZpZXcgPSBNYXRyaXg0LmNsb25lKE1hdHJpeDQuSURFTlRJVFkpO1xuICB0aGlzLl9pbnZlcnNlVmlldyA9IE1hdHJpeDQuY2xvbmUoTWF0cml4NC5JREVOVElUWSk7XG4gIHRoaXMuX3Byb2plY3Rpb24gPSBNYXRyaXg0LmNsb25lKE1hdHJpeDQuSURFTlRJVFkpO1xuICB0aGlzLl9pbmZpbml0ZVByb2plY3Rpb24gPSBNYXRyaXg0LmNsb25lKE1hdHJpeDQuSURFTlRJVFkpO1xuICB0aGlzLl9lbnRpcmVGcnVzdHVtID0gbmV3IENhcnRlc2lhbjIoKTtcbiAgdGhpcy5fY3VycmVudEZydXN0dW0gPSBuZXcgQ2FydGVzaWFuMigpO1xuICB0aGlzLl9mcnVzdHVtUGxhbmVzID0gbmV3IENhcnRlc2lhbjQoKTtcbiAgdGhpcy5fZmFyRGVwdGhGcm9tTmVhclBsdXNPbmUgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX2xvZzJGYXJEZXB0aEZyb21OZWFyUGx1c09uZSA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fb25lT3ZlckxvZzJGYXJEZXB0aEZyb21OZWFyUGx1c09uZSA9IHVuZGVmaW5lZDtcblxuICB0aGlzLl9mcmFtZVN0YXRlID0gdW5kZWZpbmVkO1xuICB0aGlzLl90ZW1lVG9Qc2V1ZG9GaXhlZCA9IE1hdHJpeDMuY2xvbmUoTWF0cml4NC5JREVOVElUWSk7XG5cbiAgLy8gRGVyaXZlZCBtZW1iZXJzXG4gIHRoaXMuX3ZpZXczRERpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5fdmlldzNEID0gbmV3IE1hdHJpeDQoKTtcblxuICB0aGlzLl9pbnZlcnNlVmlldzNERGlydHkgPSB0cnVlO1xuICB0aGlzLl9pbnZlcnNlVmlldzNEID0gbmV3IE1hdHJpeDQoKTtcblxuICB0aGlzLl9pbnZlcnNlTW9kZWxEaXJ0eSA9IHRydWU7XG4gIHRoaXMuX2ludmVyc2VNb2RlbCA9IG5ldyBNYXRyaXg0KCk7XG5cbiAgdGhpcy5faW52ZXJzZVRyYW5zcG9zZU1vZGVsRGlydHkgPSB0cnVlO1xuICB0aGlzLl9pbnZlcnNlVHJhbnNwb3NlTW9kZWwgPSBuZXcgTWF0cml4MygpO1xuXG4gIHRoaXMuX3ZpZXdSb3RhdGlvbiA9IG5ldyBNYXRyaXgzKCk7XG4gIHRoaXMuX2ludmVyc2VWaWV3Um90YXRpb24gPSBuZXcgTWF0cml4MygpO1xuXG4gIHRoaXMuX3ZpZXdSb3RhdGlvbjNEID0gbmV3IE1hdHJpeDMoKTtcbiAgdGhpcy5faW52ZXJzZVZpZXdSb3RhdGlvbjNEID0gbmV3IE1hdHJpeDMoKTtcblxuICB0aGlzLl9pbnZlcnNlUHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5faW52ZXJzZVByb2plY3Rpb24gPSBuZXcgTWF0cml4NCgpO1xuXG4gIHRoaXMuX21vZGVsVmlld0RpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5fbW9kZWxWaWV3ID0gbmV3IE1hdHJpeDQoKTtcblxuICB0aGlzLl9tb2RlbFZpZXczRERpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5fbW9kZWxWaWV3M0QgPSBuZXcgTWF0cml4NCgpO1xuXG4gIHRoaXMuX21vZGVsVmlld1JlbGF0aXZlVG9FeWVEaXJ0eSA9IHRydWU7XG4gIHRoaXMuX21vZGVsVmlld1JlbGF0aXZlVG9FeWUgPSBuZXcgTWF0cml4NCgpO1xuXG4gIHRoaXMuX2ludmVyc2VNb2RlbFZpZXdEaXJ0eSA9IHRydWU7XG4gIHRoaXMuX2ludmVyc2VNb2RlbFZpZXcgPSBuZXcgTWF0cml4NCgpO1xuXG4gIHRoaXMuX2ludmVyc2VNb2RlbFZpZXczRERpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5faW52ZXJzZU1vZGVsVmlldzNEID0gbmV3IE1hdHJpeDQoKTtcblxuICB0aGlzLl92aWV3UHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5fdmlld1Byb2plY3Rpb24gPSBuZXcgTWF0cml4NCgpO1xuXG4gIHRoaXMuX2ludmVyc2VWaWV3UHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5faW52ZXJzZVZpZXdQcm9qZWN0aW9uID0gbmV3IE1hdHJpeDQoKTtcblxuICB0aGlzLl9tb2RlbFZpZXdQcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xuICB0aGlzLl9tb2RlbFZpZXdQcm9qZWN0aW9uID0gbmV3IE1hdHJpeDQoKTtcblxuICB0aGlzLl9pbnZlcnNlTW9kZWxWaWV3UHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5faW52ZXJzZU1vZGVsVmlld1Byb2plY3Rpb24gPSBuZXcgTWF0cml4NCgpO1xuXG4gIHRoaXMuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllRGlydHkgPSB0cnVlO1xuICB0aGlzLl9tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZSA9IG5ldyBNYXRyaXg0KCk7XG5cbiAgdGhpcy5fbW9kZWxWaWV3SW5maW5pdGVQcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xuICB0aGlzLl9tb2RlbFZpZXdJbmZpbml0ZVByb2plY3Rpb24gPSBuZXcgTWF0cml4NCgpO1xuXG4gIHRoaXMuX25vcm1hbERpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5fbm9ybWFsID0gbmV3IE1hdHJpeDMoKTtcblxuICB0aGlzLl9ub3JtYWwzRERpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5fbm9ybWFsM0QgPSBuZXcgTWF0cml4MygpO1xuXG4gIHRoaXMuX2ludmVyc2VOb3JtYWxEaXJ0eSA9IHRydWU7XG4gIHRoaXMuX2ludmVyc2VOb3JtYWwgPSBuZXcgTWF0cml4MygpO1xuXG4gIHRoaXMuX2ludmVyc2VOb3JtYWwzRERpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5faW52ZXJzZU5vcm1hbDNEID0gbmV3IE1hdHJpeDMoKTtcblxuICB0aGlzLl9lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQ0RpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUMgPSBuZXcgRW5jb2RlZENhcnRlc2lhbjMoKTtcbiAgdGhpcy5fY2FtZXJhUG9zaXRpb24gPSBuZXcgQ2FydGVzaWFuMygpO1xuXG4gIHRoaXMuX3N1blBvc2l0aW9uV0MgPSBuZXcgQ2FydGVzaWFuMygpO1xuICB0aGlzLl9zdW5Qb3NpdGlvbkNvbHVtYnVzVmlldyA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG4gIHRoaXMuX3N1bkRpcmVjdGlvbldDID0gbmV3IENhcnRlc2lhbjMoKTtcbiAgdGhpcy5fc3VuRGlyZWN0aW9uRUMgPSBuZXcgQ2FydGVzaWFuMygpO1xuICB0aGlzLl9tb29uRGlyZWN0aW9uRUMgPSBuZXcgQ2FydGVzaWFuMygpO1xuXG4gIHRoaXMuX2xpZ2h0RGlyZWN0aW9uV0MgPSBuZXcgQ2FydGVzaWFuMygpO1xuICB0aGlzLl9saWdodERpcmVjdGlvbkVDID0gbmV3IENhcnRlc2lhbjMoKTtcbiAgdGhpcy5fbGlnaHRDb2xvciA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG4gIHRoaXMuX2xpZ2h0Q29sb3JIZHIgPSBuZXcgQ2FydGVzaWFuMygpO1xuXG4gIHRoaXMuX3Bhc3MgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX21vZGUgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX21hcFByb2plY3Rpb24gPSB1bmRlZmluZWQ7XG4gIHRoaXMuX2VsbGlwc29pZCA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fY2FtZXJhRGlyZWN0aW9uID0gbmV3IENhcnRlc2lhbjMoKTtcbiAgdGhpcy5fY2FtZXJhUmlnaHQgPSBuZXcgQ2FydGVzaWFuMygpO1xuICB0aGlzLl9jYW1lcmFVcCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG4gIHRoaXMuX2ZydXN0dW0yRFdpZHRoID0gMC4wO1xuICB0aGlzLl9leWVIZWlnaHQgPSAwLjA7XG4gIHRoaXMuX2V5ZUhlaWdodDJEID0gbmV3IENhcnRlc2lhbjIoKTtcbiAgdGhpcy5fcGl4ZWxSYXRpbyA9IDEuMDtcbiAgdGhpcy5fb3J0aG9ncmFwaGljSW4zRCA9IGZhbHNlO1xuICB0aGlzLl9iYWNrZ3JvdW5kQ29sb3IgPSBuZXcgQ29sb3IoKTtcblxuICB0aGlzLl9icmRmTHV0ID0gdW5kZWZpbmVkO1xuICB0aGlzLl9lbnZpcm9ubWVudE1hcCA9IHVuZGVmaW5lZDtcblxuICB0aGlzLl9zcGhlcmljYWxIYXJtb25pY0NvZWZmaWNpZW50cyA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fc3BlY3VsYXJFbnZpcm9ubWVudE1hcHMgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX3NwZWN1bGFyRW52aXJvbm1lbnRNYXBzRGltZW5zaW9ucyA9IG5ldyBDYXJ0ZXNpYW4yKCk7XG4gIHRoaXMuX3NwZWN1bGFyRW52aXJvbm1lbnRNYXBzTWF4aW11bUxPRCA9IHVuZGVmaW5lZDtcblxuICB0aGlzLl9mb2dEZW5zaXR5ID0gdW5kZWZpbmVkO1xuXG4gIHRoaXMuX2ludmVydENsYXNzaWZpY2F0aW9uQ29sb3IgPSB1bmRlZmluZWQ7XG5cbiAgdGhpcy5faW1hZ2VyeVNwbGl0UG9zaXRpb24gPSAwLjA7XG4gIHRoaXMuX3BpeGVsU2l6ZVBlck1ldGVyID0gdW5kZWZpbmVkO1xuICB0aGlzLl9nZW9tZXRyaWNUb2xlcmFuY2VPdmVyTWV0ZXIgPSB1bmRlZmluZWQ7XG5cbiAgdGhpcy5fbWluaW11bURpc2FibGVEZXB0aFRlc3REaXN0YW5jZSA9IHVuZGVmaW5lZDtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoVW5pZm9ybVN0YXRlLnByb3RvdHlwZSwge1xuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge0ZyYW1lU3RhdGV9XG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgZnJhbWVTdGF0ZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ZyYW1lU3RhdGU7XG4gICAgfSxcbiAgfSxcbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtCb3VuZGluZ1JlY3RhbmdsZX1cbiAgICovXG4gIHZpZXdwb3J0OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdmlld3BvcnQ7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uICh2aWV3cG9ydCkge1xuICAgICAgaWYgKCFCb3VuZGluZ1JlY3RhbmdsZS5lcXVhbHModmlld3BvcnQsIHRoaXMuX3ZpZXdwb3J0KSkge1xuICAgICAgICBCb3VuZGluZ1JlY3RhbmdsZS5jbG9uZSh2aWV3cG9ydCwgdGhpcy5fdmlld3BvcnQpO1xuXG4gICAgICAgIHZhciB2ID0gdGhpcy5fdmlld3BvcnQ7XG4gICAgICAgIHZhciB2YyA9IHRoaXMuX3ZpZXdwb3J0Q2FydGVzaWFuNDtcbiAgICAgICAgdmMueCA9IHYueDtcbiAgICAgICAgdmMueSA9IHYueTtcbiAgICAgICAgdmMueiA9IHYud2lkdGg7XG4gICAgICAgIHZjLncgPSB2LmhlaWdodDtcblxuICAgICAgICB0aGlzLl92aWV3cG9ydERpcnR5ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgdmlld3BvcnRDYXJ0ZXNpYW40OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdmlld3BvcnRDYXJ0ZXNpYW40O1xuICAgIH0sXG4gIH0sXG5cbiAgdmlld3BvcnRPcnRob2dyYXBoaWM6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNsZWFuVmlld3BvcnQodGhpcyk7XG4gICAgICByZXR1cm4gdGhpcy5fdmlld3BvcnRPcnRob2dyYXBoaWNNYXRyaXg7XG4gICAgfSxcbiAgfSxcblxuICB2aWV3cG9ydFRyYW5zZm9ybWF0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhblZpZXdwb3J0KHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX3ZpZXdwb3J0VHJhbnNmb3JtYXRpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDR9XG4gICAqL1xuICBtb2RlbDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX21vZGVsO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiAobWF0cml4KSB7XG4gICAgICBNYXRyaXg0LmNsb25lKG1hdHJpeCwgdGhpcy5fbW9kZWwpO1xuXG4gICAgICB0aGlzLl9tb2RlbFZpZXczRERpcnR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX2ludmVyc2VNb2RlbFZpZXczRERpcnR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX2ludmVyc2VNb2RlbERpcnR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX2ludmVyc2VUcmFuc3Bvc2VNb2RlbERpcnR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX21vZGVsVmlld0RpcnR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX2ludmVyc2VNb2RlbFZpZXdEaXJ0eSA9IHRydWU7XG4gICAgICB0aGlzLl9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllRGlydHkgPSB0cnVlO1xuICAgICAgdGhpcy5faW52ZXJzZU1vZGVsVmlld0RpcnR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX21vZGVsVmlld1Byb2plY3Rpb25EaXJ0eSA9IHRydWU7XG4gICAgICB0aGlzLl9pbnZlcnNlTW9kZWxWaWV3UHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllRGlydHkgPSB0cnVlO1xuICAgICAgdGhpcy5fbW9kZWxWaWV3SW5maW5pdGVQcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xuICAgICAgdGhpcy5fbm9ybWFsRGlydHkgPSB0cnVlO1xuICAgICAgdGhpcy5faW52ZXJzZU5vcm1hbERpcnR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX25vcm1hbDNERGlydHkgPSB0cnVlO1xuICAgICAgdGhpcy5faW52ZXJzZU5vcm1hbDNERGlydHkgPSB0cnVlO1xuICAgICAgdGhpcy5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNEaXJ0eSA9IHRydWU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDR9XG4gICAqL1xuICBpbnZlcnNlTW9kZWw6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICh0aGlzLl9pbnZlcnNlTW9kZWxEaXJ0eSkge1xuICAgICAgICB0aGlzLl9pbnZlcnNlTW9kZWxEaXJ0eSA9IGZhbHNlO1xuXG4gICAgICAgIE1hdHJpeDQuaW52ZXJzZSh0aGlzLl9tb2RlbCwgdGhpcy5faW52ZXJzZU1vZGVsKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuX2ludmVyc2VNb2RlbDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgaW52ZXJzZVRyYW5zcG9zZU1vZGVsOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgbSA9IHRoaXMuX2ludmVyc2VUcmFuc3Bvc2VNb2RlbDtcbiAgICAgIGlmICh0aGlzLl9pbnZlcnNlVHJhbnNwb3NlTW9kZWxEaXJ0eSkge1xuICAgICAgICB0aGlzLl9pbnZlcnNlVHJhbnNwb3NlTW9kZWxEaXJ0eSA9IGZhbHNlO1xuXG4gICAgICAgIE1hdHJpeDQuZ2V0TWF0cml4Myh0aGlzLmludmVyc2VNb2RlbCwgbSk7XG4gICAgICAgIE1hdHJpeDMudHJhbnNwb3NlKG0sIG0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbTtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TWF0cml4NH1cbiAgICovXG4gIHZpZXc6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl92aWV3O1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSAzRCB2aWV3IG1hdHJpeC4gIEluIDNEIG1vZGUsIHRoaXMgaXMgaWRlbnRpY2FsIHRvIHtAbGluayBVbmlmb3JtU3RhdGUjdmlld30sXG4gICAqIGJ1dCBpbiAyRCBhbmQgQ29sdW1idXMgVmlldyBpdCBpcyBhIHN5bnRoZXRpYyBtYXRyaXggYmFzZWQgb24gdGhlIGVxdWl2YWxlbnQgcG9zaXRpb25cbiAgICogb2YgdGhlIGNhbWVyYSBpbiB0aGUgM0Qgd29ybGQuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKi9cbiAgdmlldzNEOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB1cGRhdGVWaWV3M0QodGhpcyk7XG4gICAgICByZXR1cm4gdGhpcy5fdmlldzNEO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSAzeDMgcm90YXRpb24gbWF0cml4IG9mIHRoZSBjdXJyZW50IHZpZXcgbWF0cml4ICh7QGxpbmsgVW5pZm9ybVN0YXRlI3ZpZXd9KS5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDN9XG4gICAqL1xuICB2aWV3Um90YXRpb246IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHVwZGF0ZVZpZXczRCh0aGlzKTtcbiAgICAgIHJldHVybiB0aGlzLl92aWV3Um90YXRpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDN9XG4gICAqL1xuICB2aWV3Um90YXRpb24zRDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgdXBkYXRlVmlldzNEKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX3ZpZXdSb3RhdGlvbjNEO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKi9cbiAgaW52ZXJzZVZpZXc6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pbnZlcnNlVmlldztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiB0aGUgNHg0IGludmVyc2UtdmlldyBtYXRyaXggdGhhdCB0cmFuc2Zvcm1zIGZyb20gZXllIHRvIDNEIHdvcmxkIGNvb3JkaW5hdGVzLiAgSW4gM0QgbW9kZSwgdGhpcyBpc1xuICAgKiBpZGVudGljYWwgdG8ge0BsaW5rIFVuaWZvcm1TdGF0ZSNpbnZlcnNlVmlld30sIGJ1dCBpbiAyRCBhbmQgQ29sdW1idXMgVmlldyBpdCBpcyBhIHN5bnRoZXRpYyBtYXRyaXhcbiAgICogYmFzZWQgb24gdGhlIGVxdWl2YWxlbnQgcG9zaXRpb24gb2YgdGhlIGNhbWVyYSBpbiB0aGUgM0Qgd29ybGQuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKi9cbiAgaW52ZXJzZVZpZXczRDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgdXBkYXRlSW52ZXJzZVZpZXczRCh0aGlzKTtcbiAgICAgIHJldHVybiB0aGlzLl9pbnZlcnNlVmlldzNEO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXgzfVxuICAgKi9cbiAgaW52ZXJzZVZpZXdSb3RhdGlvbjoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ludmVyc2VWaWV3Um90YXRpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIDN4MyByb3RhdGlvbiBtYXRyaXggb2YgdGhlIGN1cnJlbnQgM0QgaW52ZXJzZS12aWV3IG1hdHJpeCAoe0BsaW5rIFVuaWZvcm1TdGF0ZSNpbnZlcnNlVmlldzNEfSkuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXgzfVxuICAgKi9cbiAgaW52ZXJzZVZpZXdSb3RhdGlvbjNEOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB1cGRhdGVJbnZlcnNlVmlldzNEKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX2ludmVyc2VWaWV3Um90YXRpb24zRDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TWF0cml4NH1cbiAgICovXG4gIHByb2plY3Rpb246IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9wcm9qZWN0aW9uO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKi9cbiAgaW52ZXJzZVByb2plY3Rpb246IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNsZWFuSW52ZXJzZVByb2plY3Rpb24odGhpcyk7XG4gICAgICByZXR1cm4gdGhpcy5faW52ZXJzZVByb2plY3Rpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDR9XG4gICAqL1xuICBpbmZpbml0ZVByb2plY3Rpb246IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pbmZpbml0ZVByb2plY3Rpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDR9XG4gICAqL1xuICBtb2RlbFZpZXc6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNsZWFuTW9kZWxWaWV3KHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX21vZGVsVmlldztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgM0QgbW9kZWwtdmlldyBtYXRyaXguICBJbiAzRCBtb2RlLCB0aGlzIGlzIGVxdWl2YWxlbnQgdG8ge0BsaW5rIFVuaWZvcm1TdGF0ZSNtb2RlbFZpZXd9LiAgSW4gMkQgYW5kXG4gICAqIENvbHVtYnVzIFZpZXcsIGhvd2V2ZXIsIGl0IGlzIGEgc3ludGhldGljIG1hdHJpeCBiYXNlZCBvbiB0aGUgZXF1aXZhbGVudCBwb3NpdGlvbiBvZiB0aGUgY2FtZXJhIGluIHRoZSAzRCB3b3JsZC5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDR9XG4gICAqL1xuICBtb2RlbFZpZXczRDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgY2xlYW5Nb2RlbFZpZXczRCh0aGlzKTtcbiAgICAgIHJldHVybiB0aGlzLl9tb2RlbFZpZXczRDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBNb2RlbC12aWV3IHJlbGF0aXZlIHRvIGV5ZSBtYXRyaXguXG4gICAqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKi9cbiAgbW9kZWxWaWV3UmVsYXRpdmVUb0V5ZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgY2xlYW5Nb2RlbFZpZXdSZWxhdGl2ZVRvRXllKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX21vZGVsVmlld1JlbGF0aXZlVG9FeWU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDR9XG4gICAqL1xuICBpbnZlcnNlTW9kZWxWaWV3OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhbkludmVyc2VNb2RlbFZpZXcodGhpcyk7XG4gICAgICByZXR1cm4gdGhpcy5faW52ZXJzZU1vZGVsVmlldztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgaW52ZXJzZSBvZiB0aGUgM0QgbW9kZWwtdmlldyBtYXRyaXguICBJbiAzRCBtb2RlLCB0aGlzIGlzIGVxdWl2YWxlbnQgdG8ge0BsaW5rIFVuaWZvcm1TdGF0ZSNpbnZlcnNlTW9kZWxWaWV3fS5cbiAgICogSW4gMkQgYW5kIENvbHVtYnVzIFZpZXcsIGhvd2V2ZXIsIGl0IGlzIGEgc3ludGhldGljIG1hdHJpeCBiYXNlZCBvbiB0aGUgZXF1aXZhbGVudCBwb3NpdGlvbiBvZiB0aGUgY2FtZXJhIGluIHRoZSAzRCB3b3JsZC5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDR9XG4gICAqL1xuICBpbnZlcnNlTW9kZWxWaWV3M0Q6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNsZWFuSW52ZXJzZU1vZGVsVmlldzNEKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX2ludmVyc2VNb2RlbFZpZXczRDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TWF0cml4NH1cbiAgICovXG4gIHZpZXdQcm9qZWN0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhblZpZXdQcm9qZWN0aW9uKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX3ZpZXdQcm9qZWN0aW9uO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKi9cbiAgaW52ZXJzZVZpZXdQcm9qZWN0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhbkludmVyc2VWaWV3UHJvamVjdGlvbih0aGlzKTtcbiAgICAgIHJldHVybiB0aGlzLl9pbnZlcnNlVmlld1Byb2plY3Rpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDR9XG4gICAqL1xuICBtb2RlbFZpZXdQcm9qZWN0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhbk1vZGVsVmlld1Byb2plY3Rpb24odGhpcyk7XG4gICAgICByZXR1cm4gdGhpcy5fbW9kZWxWaWV3UHJvamVjdGlvbjtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TWF0cml4NH1cbiAgICovXG4gIGludmVyc2VNb2RlbFZpZXdQcm9qZWN0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhbkludmVyc2VNb2RlbFZpZXdQcm9qZWN0aW9uKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX2ludmVyc2VNb2RlbFZpZXdQcm9qZWN0aW9uO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIE1vZGVsLXZpZXctcHJvamVjdGlvbiByZWxhdGl2ZSB0byBleWUgbWF0cml4LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TWF0cml4NH1cbiAgICovXG4gIG1vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhbk1vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXg0fVxuICAgKi9cbiAgbW9kZWxWaWV3SW5maW5pdGVQcm9qZWN0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhbk1vZGVsVmlld0luZmluaXRlUHJvamVjdGlvbih0aGlzKTtcbiAgICAgIHJldHVybiB0aGlzLl9tb2RlbFZpZXdJbmZpbml0ZVByb2plY3Rpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQSAzeDMgbm9ybWFsIHRyYW5zZm9ybWF0aW9uIG1hdHJpeCB0aGF0IHRyYW5zZm9ybXMgbm9ybWFsIHZlY3RvcnMgaW4gbW9kZWwgY29vcmRpbmF0ZXMgdG9cbiAgICogZXllIGNvb3JkaW5hdGVzLlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TWF0cml4M31cbiAgICovXG4gIG5vcm1hbDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgY2xlYW5Ob3JtYWwodGhpcyk7XG4gICAgICByZXR1cm4gdGhpcy5fbm9ybWFsO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEEgM3gzIG5vcm1hbCB0cmFuc2Zvcm1hdGlvbiBtYXRyaXggdGhhdCB0cmFuc2Zvcm1zIG5vcm1hbCB2ZWN0b3JzIGluIDNEIG1vZGVsXG4gICAqIGNvb3JkaW5hdGVzIHRvIGV5ZSBjb29yZGluYXRlcy4gIEluIDNEIG1vZGUsIHRoaXMgaXMgaWRlbnRpY2FsIHRvXG4gICAqIHtAbGluayBVbmlmb3JtU3RhdGUjbm9ybWFsfSwgYnV0IGluIDJEIGFuZCBDb2x1bWJ1cyBWaWV3IGl0IHJlcHJlc2VudHMgdGhlIG5vcm1hbCB0cmFuc2Zvcm1hdGlvblxuICAgKiBtYXRyaXggYXMgaWYgdGhlIGNhbWVyYSB3ZXJlIGF0IGFuIGVxdWl2YWxlbnQgbG9jYXRpb24gaW4gM0QgbW9kZS5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDN9XG4gICAqL1xuICBub3JtYWwzRDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgY2xlYW5Ob3JtYWwzRCh0aGlzKTtcbiAgICAgIHJldHVybiB0aGlzLl9ub3JtYWwzRDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBBbiBpbnZlcnNlIDN4MyBub3JtYWwgdHJhbnNmb3JtYXRpb24gbWF0cml4IHRoYXQgdHJhbnNmb3JtcyBub3JtYWwgdmVjdG9ycyBpbiBtb2RlbCBjb29yZGluYXRlc1xuICAgKiB0byBleWUgY29vcmRpbmF0ZXMuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXgzfVxuICAgKi9cbiAgaW52ZXJzZU5vcm1hbDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgY2xlYW5JbnZlcnNlTm9ybWFsKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX2ludmVyc2VOb3JtYWw7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQW4gaW52ZXJzZSAzeDMgbm9ybWFsIHRyYW5zZm9ybWF0aW9uIG1hdHJpeCB0aGF0IHRyYW5zZm9ybXMgbm9ybWFsIHZlY3RvcnMgaW4gZXllIGNvb3JkaW5hdGVzXG4gICAqIHRvIDNEIG1vZGVsIGNvb3JkaW5hdGVzLiAgSW4gM0QgbW9kZSwgdGhpcyBpcyBpZGVudGljYWwgdG9cbiAgICoge0BsaW5rIFVuaWZvcm1TdGF0ZSNpbnZlcnNlTm9ybWFsfSwgYnV0IGluIDJEIGFuZCBDb2x1bWJ1cyBWaWV3IGl0IHJlcHJlc2VudHMgdGhlIG5vcm1hbCB0cmFuc2Zvcm1hdGlvblxuICAgKiBtYXRyaXggYXMgaWYgdGhlIGNhbWVyYSB3ZXJlIGF0IGFuIGVxdWl2YWxlbnQgbG9jYXRpb24gaW4gM0QgbW9kZS5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge01hdHJpeDN9XG4gICAqL1xuICBpbnZlcnNlTm9ybWFsM0Q6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNsZWFuSW52ZXJzZU5vcm1hbDNEKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX2ludmVyc2VOb3JtYWwzRDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgbmVhciBkaXN0YW5jZSAoPGNvZGU+eDwvY29kZT4pIGFuZCB0aGUgZmFyIGRpc3RhbmNlICg8Y29kZT55PC9jb2RlPikgb2YgdGhlIGZydXN0dW0gZGVmaW5lZCBieSB0aGUgY2FtZXJhLlxuICAgKiBUaGlzIGlzIHRoZSBsYXJnZXN0IHBvc3NpYmxlIGZydXN0dW0sIG5vdCBhbiBpbmRpdmlkdWFsIGZydXN0dW0gdXNlZCBmb3IgbXVsdGktZnJ1c3R1bSByZW5kZXJpbmcuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4yfVxuICAgKi9cbiAgZW50aXJlRnJ1c3R1bToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2VudGlyZUZydXN0dW07XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIG5lYXIgZGlzdGFuY2UgKDxjb2RlPng8L2NvZGU+KSBhbmQgdGhlIGZhciBkaXN0YW5jZSAoPGNvZGU+eTwvY29kZT4pIG9mIHRoZSBmcnVzdHVtIGRlZmluZWQgYnkgdGhlIGNhbWVyYS5cbiAgICogVGhpcyBpcyB0aGUgaW5kaXZpZHVhbCBmcnVzdHVtIHVzZWQgZm9yIG11bHRpLWZydXN0dW0gcmVuZGVyaW5nLlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Q2FydGVzaWFuMn1cbiAgICovXG4gIGN1cnJlbnRGcnVzdHVtOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fY3VycmVudEZydXN0dW07XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGRpc3RhbmNlcyB0byB0aGUgZnJ1c3R1bSBwbGFuZXMuIFRoZSB0b3AsIGJvdHRvbSwgbGVmdCBhbmQgcmlnaHQgZGlzdGFuY2VzIGFyZVxuICAgKiB0aGUgeCwgeSwgeiwgYW5kIHcgY29tcG9uZW50cywgcmVzcGVjdGl2ZWx5LlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Q2FydGVzaWFuNH1cbiAgICovXG4gIGZydXN0dW1QbGFuZXM6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9mcnVzdHVtUGxhbmVzO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBmYXIgcGxhbmUncyBkaXN0YW5jZSBmcm9tIHRoZSBuZWFyIHBsYW5lLCBwbHVzIDEuMC5cbiAgICpcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIGZhckRlcHRoRnJvbU5lYXJQbHVzT25lOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZmFyRGVwdGhGcm9tTmVhclBsdXNPbmU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGxvZzIgb2Yge0BsaW5rIFVuaWZvcm1TdGF0ZSNmYXJEZXB0aEZyb21OZWFyUGx1c09uZX0uXG4gICAqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICBsb2cyRmFyRGVwdGhGcm9tTmVhclBsdXNPbmU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9sb2cyRmFyRGVwdGhGcm9tTmVhclBsdXNPbmU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogMS4wIGRpdmlkZWQgYnkge0BsaW5rIFVuaWZvcm1TdGF0ZSNsb2cyRmFyRGVwdGhGcm9tTmVhclBsdXNPbmV9LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgb25lT3ZlckxvZzJGYXJEZXB0aEZyb21OZWFyUGx1c09uZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX29uZU92ZXJMb2cyRmFyRGVwdGhGcm9tTmVhclBsdXNPbmU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGhlaWdodCBpbiBtZXRlcnMgb2YgdGhlIGV5ZSAoY2FtZXJhKSBhYm92ZSBvciBiZWxvdyB0aGUgZWxsaXBzb2lkLlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgZXllSGVpZ2h0OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZXllSGVpZ2h0O1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBoZWlnaHQgKDxjb2RlPng8L2NvZGU+KSBhbmQgdGhlIGhlaWdodCBzcXVhcmVkICg8Y29kZT55PC9jb2RlPilcbiAgICogaW4gbWV0ZXJzIG9mIHRoZSBleWUgKGNhbWVyYSkgYWJvdmUgdGhlIDJEIHdvcmxkIHBsYW5lLiBUaGlzIHVuaWZvcm0gaXMgb25seSB2YWxpZFxuICAgKiB3aGVuIHRoZSB7QGxpbmsgU2NlbmVNb2RlfSBpcyA8Y29kZT5TQ0VORTJEPC9jb2RlPi5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge0NhcnRlc2lhbjJ9XG4gICAqL1xuICBleWVIZWlnaHQyRDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2V5ZUhlaWdodDJEO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBzdW4gcG9zaXRpb24gaW4gM0Qgd29ybGQgY29vcmRpbmF0ZXMgYXQgdGhlIGN1cnJlbnQgc2NlbmUgdGltZS5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge0NhcnRlc2lhbjN9XG4gICAqL1xuICBzdW5Qb3NpdGlvbldDOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc3VuUG9zaXRpb25XQztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgc3VuIHBvc2l0aW9uIGluIDJEIHdvcmxkIGNvb3JkaW5hdGVzIGF0IHRoZSBjdXJyZW50IHNjZW5lIHRpbWUuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4zfVxuICAgKi9cbiAgc3VuUG9zaXRpb25Db2x1bWJ1c1ZpZXc6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9zdW5Qb3NpdGlvbkNvbHVtYnVzVmlldztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBBIG5vcm1hbGl6ZWQgdmVjdG9yIHRvIHRoZSBzdW4gaW4gM0Qgd29ybGQgY29vcmRpbmF0ZXMgYXQgdGhlIGN1cnJlbnQgc2NlbmUgdGltZS4gIEV2ZW4gaW4gMkQgb3JcbiAgICogQ29sdW1idXMgVmlldyBtb2RlLCB0aGlzIHJldHVybnMgdGhlIGRpcmVjdGlvbiB0byB0aGUgc3VuIGluIHRoZSAzRCBzY2VuZS5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge0NhcnRlc2lhbjN9XG4gICAqL1xuICBzdW5EaXJlY3Rpb25XQzoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3N1bkRpcmVjdGlvbldDO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEEgbm9ybWFsaXplZCB2ZWN0b3IgdG8gdGhlIHN1biBpbiBleWUgY29vcmRpbmF0ZXMgYXQgdGhlIGN1cnJlbnQgc2NlbmUgdGltZS4gIEluIDNEIG1vZGUsIHRoaXNcbiAgICogcmV0dXJucyB0aGUgYWN0dWFsIHZlY3RvciBmcm9tIHRoZSBjYW1lcmEgcG9zaXRpb24gdG8gdGhlIHN1biBwb3NpdGlvbi4gIEluIDJEIGFuZCBDb2x1bWJ1cyBWaWV3LCBpdCByZXR1cm5zXG4gICAqIHRoZSB2ZWN0b3IgZnJvbSB0aGUgZXF1aXZhbGVudCAzRCBjYW1lcmEgcG9zaXRpb24gdG8gdGhlIHBvc2l0aW9uIG9mIHRoZSBzdW4gaW4gdGhlIDNEIHNjZW5lLlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Q2FydGVzaWFuM31cbiAgICovXG4gIHN1bkRpcmVjdGlvbkVDOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc3VuRGlyZWN0aW9uRUM7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQSBub3JtYWxpemVkIHZlY3RvciB0byB0aGUgbW9vbiBpbiBleWUgY29vcmRpbmF0ZXMgYXQgdGhlIGN1cnJlbnQgc2NlbmUgdGltZS4gIEluIDNEIG1vZGUsIHRoaXNcbiAgICogcmV0dXJucyB0aGUgYWN0dWFsIHZlY3RvciBmcm9tIHRoZSBjYW1lcmEgcG9zaXRpb24gdG8gdGhlIG1vb24gcG9zaXRpb24uICBJbiAyRCBhbmQgQ29sdW1idXMgVmlldywgaXQgcmV0dXJuc1xuICAgKiB0aGUgdmVjdG9yIGZyb20gdGhlIGVxdWl2YWxlbnQgM0QgY2FtZXJhIHBvc2l0aW9uIHRvIHRoZSBwb3NpdGlvbiBvZiB0aGUgbW9vbiBpbiB0aGUgM0Qgc2NlbmUuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4zfVxuICAgKi9cbiAgbW9vbkRpcmVjdGlvbkVDOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbW9vbkRpcmVjdGlvbkVDO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEEgbm9ybWFsaXplZCB2ZWN0b3IgdG8gdGhlIHNjZW5lJ3MgbGlnaHQgc291cmNlIGluIDNEIHdvcmxkIGNvb3JkaW5hdGVzLiAgRXZlbiBpbiAyRCBvclxuICAgKiBDb2x1bWJ1cyBWaWV3IG1vZGUsIHRoaXMgcmV0dXJucyB0aGUgZGlyZWN0aW9uIHRvIHRoZSBsaWdodCBpbiB0aGUgM0Qgc2NlbmUuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4zfVxuICAgKi9cbiAgbGlnaHREaXJlY3Rpb25XQzoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2xpZ2h0RGlyZWN0aW9uV0M7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQSBub3JtYWxpemVkIHZlY3RvciB0byB0aGUgc2NlbmUncyBsaWdodCBzb3VyY2UgaW4gZXllIGNvb3JkaW5hdGVzLiAgSW4gM0QgbW9kZSwgdGhpc1xuICAgKiByZXR1cm5zIHRoZSBhY3R1YWwgdmVjdG9yIGZyb20gdGhlIGNhbWVyYSBwb3NpdGlvbiB0byB0aGUgbGlnaHQuICBJbiAyRCBhbmQgQ29sdW1idXMgVmlldywgaXQgcmV0dXJuc1xuICAgKiB0aGUgdmVjdG9yIGZyb20gdGhlIGVxdWl2YWxlbnQgM0QgY2FtZXJhIHBvc2l0aW9uIGluIHRoZSAzRCBzY2VuZS5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge0NhcnRlc2lhbjN9XG4gICAqL1xuICBsaWdodERpcmVjdGlvbkVDOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbGlnaHREaXJlY3Rpb25FQztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgbGlnaHQgZW1pdHRlZCBieSB0aGUgc2NlbmUncyBsaWdodCBzb3VyY2UuIFRoaXMgaXMgZXF1aXZhbGVudCB0byB0aGUgbGlnaHRcbiAgICogY29sb3IgbXVsdGlwbGllZCBieSB0aGUgbGlnaHQgaW50ZW5zaXR5IGxpbWl0ZWQgdG8gYSBtYXhpbXVtIGx1bWluYW5jZSBvZiAxLjAgc3VpdGFibGVcbiAgICogZm9yIG5vbi1IRFIgbGlnaHRpbmcuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4zfVxuICAgKi9cbiAgbGlnaHRDb2xvcjoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2xpZ2h0Q29sb3I7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGhpZ2ggZHluYW1pYyByYW5nZSBjb2xvciBvZiBsaWdodCBlbWl0dGVkIGJ5IHRoZSBzY2VuZSdzIGxpZ2h0IHNvdXJjZS4gVGhpcyBpcyBlcXVpdmFsZW50IHRvXG4gICAqIHRoZSBsaWdodCBjb2xvciBtdWx0aXBsaWVkIGJ5IHRoZSBsaWdodCBpbnRlbnNpdHkgc3VpdGFibGUgZm9yIEhEUiBsaWdodGluZy5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge0NhcnRlc2lhbjN9XG4gICAqL1xuICBsaWdodENvbG9ySGRyOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbGlnaHRDb2xvckhkcjtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgaGlnaCBiaXRzIG9mIHRoZSBjYW1lcmEgcG9zaXRpb24uXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4zfVxuICAgKi9cbiAgZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNIaWdoOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhbkVuY29kZWRDYW1lcmFQb3NpdGlvbk1DKHRoaXMpO1xuICAgICAgcmV0dXJuIHRoaXMuX2VuY29kZWRDYW1lcmFQb3NpdGlvbk1DLmhpZ2g7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGxvdyBiaXRzIG9mIHRoZSBjYW1lcmEgcG9zaXRpb24uXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtDYXJ0ZXNpYW4zfVxuICAgKi9cbiAgZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNMb3c6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNsZWFuRW5jb2RlZENhbWVyYVBvc2l0aW9uTUModGhpcyk7XG4gICAgICByZXR1cm4gdGhpcy5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUMubG93O1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEEgM3gzIG1hdHJpeCB0aGF0IHRyYW5zZm9ybXMgZnJvbSBUcnVlIEVxdWF0b3IgTWVhbiBFcXVpbm94IChURU1FKSBheGVzIHRvIHRoZVxuICAgKiBwc2V1ZG8tZml4ZWQgYXhlcyBhdCB0aGUgU2NlbmUncyBjdXJyZW50IHRpbWUuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtNYXRyaXgzfVxuICAgKi9cbiAgdGVtZVRvUHNldWRvRml4ZWRNYXRyaXg6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90ZW1lVG9Qc2V1ZG9GaXhlZDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBzY2FsaW5nIGZhY3RvciBmb3IgdHJhbnNmb3JtaW5nIGZyb20gdGhlIGNhbnZhc1xuICAgKiBwaXhlbCBzcGFjZSB0byBjYW52YXMgY29vcmRpbmF0ZSBzcGFjZS5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIHBpeGVsUmF0aW86IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9waXhlbFJhdGlvO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEEgc2NhbGFyIHVzZWQgdG8gbWl4IGEgY29sb3Igd2l0aCB0aGUgZm9nIGNvbG9yIGJhc2VkIG9uIHRoZSBkaXN0YW5jZSB0byB0aGUgY2FtZXJhLlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgZm9nRGVuc2l0eToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ZvZ0RlbnNpdHk7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQSBzY2FsYXIgdGhhdCByZXByZXNlbnRzIHRoZSBnZW9tZXRyaWMgdG9sZXJhbmNlIHBlciBtZXRlclxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgZ2VvbWV0cmljVG9sZXJhbmNlT3Zlck1ldGVyOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZ2VvbWV0cmljVG9sZXJhbmNlT3Zlck1ldGVyO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtQYXNzfVxuICAgKi9cbiAgcGFzczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3Bhc3M7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGN1cnJlbnQgYmFja2dyb3VuZCBjb2xvclxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Q29sb3J9XG4gICAqL1xuICBiYWNrZ3JvdW5kQ29sb3I6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9iYWNrZ3JvdW5kQ29sb3I7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGxvb2sgdXAgdGV4dHVyZSB1c2VkIHRvIGZpbmQgdGhlIEJSREYgZm9yIGEgbWF0ZXJpYWxcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge1RleHR1cmV9XG4gICAqL1xuICBicmRmTHV0OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fYnJkZkx1dDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgZW52aXJvbm1lbnQgbWFwIG9mIHRoZSBzY2VuZVxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Q3ViZU1hcH1cbiAgICovXG4gIGVudmlyb25tZW50TWFwOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZW52aXJvbm1lbnRNYXA7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIHNwaGVyaWNhbCBoYXJtb25pYyBjb2VmZmljaWVudHMgb2YgdGhlIHNjZW5lLlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Q2FydGVzaWFuM1tdfVxuICAgKi9cbiAgc3BoZXJpY2FsSGFybW9uaWNDb2VmZmljaWVudHM6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9zcGhlcmljYWxIYXJtb25pY0NvZWZmaWNpZW50cztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgc3BlY3VsYXIgZW52aXJvbm1lbnQgbWFwIGF0bGFzIG9mIHRoZSBzY2VuZS5cbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge1RleHR1cmV9XG4gICAqL1xuICBzcGVjdWxhckVudmlyb25tZW50TWFwczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3NwZWN1bGFyRW52aXJvbm1lbnRNYXBzO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBkaW1lbnNpb25zIG9mIHRoZSBzcGVjdWxhciBlbnZpcm9ubWVudCBtYXAgYXRsYXMgb2YgdGhlIHNjZW5lLlxuICAgKiBAbWVtYmVyb2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7Q2FydGVzaWFuMn1cbiAgICovXG4gIHNwZWN1bGFyRW52aXJvbm1lbnRNYXBzRGltZW5zaW9uczoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3NwZWN1bGFyRW52aXJvbm1lbnRNYXBzRGltZW5zaW9ucztcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgbWF4aW11bSBsZXZlbC1vZi1kZXRhaWwgb2YgdGhlIHNwZWN1bGFyIGVudmlyb25tZW50IG1hcCBhdGxhcyBvZiB0aGUgc2NlbmUuXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICBzcGVjdWxhckVudmlyb25tZW50TWFwc01heGltdW1MT0Q6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9zcGVjdWxhckVudmlyb25tZW50TWFwc01heGltdW1MT0Q7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIGltYWdlcnlTcGxpdFBvc2l0aW9uOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5faW1hZ2VyeVNwbGl0UG9zaXRpb247XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGRpc3RhbmNlIGZyb20gdGhlIGNhbWVyYSBhdCB3aGljaCB0byBkaXNhYmxlIHRoZSBkZXB0aCB0ZXN0IG9mIGJpbGxib2FyZHMsIGxhYmVscyBhbmQgcG9pbnRzXG4gICAqIHRvLCBmb3IgZXhhbXBsZSwgcHJldmVudCBjbGlwcGluZyBhZ2FpbnN0IHRlcnJhaW4uIFdoZW4gc2V0IHRvIHplcm8sIHRoZSBkZXB0aCB0ZXN0IHNob3VsZCBhbHdheXNcbiAgICogYmUgYXBwbGllZC4gV2hlbiBsZXNzIHRoYW4gemVybywgdGhlIGRlcHRoIHRlc3Qgc2hvdWxkIG5ldmVyIGJlIGFwcGxpZWQuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICBtaW5pbXVtRGlzYWJsZURlcHRoVGVzdERpc3RhbmNlOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbWluaW11bURpc2FibGVEZXB0aFRlc3REaXN0YW5jZTtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgaGlnaGxpZ2h0IGNvbG9yIG9mIHVuY2xhc3NpZmllZCAzRCBUaWxlcy5cbiAgICpcbiAgICogQG1lbWJlcm9mIFVuaWZvcm1TdGF0ZS5wcm90b3R5cGVcbiAgICogQHR5cGUge0NvbG9yfVxuICAgKi9cbiAgaW52ZXJ0Q2xhc3NpZmljYXRpb25Db2xvcjoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ludmVydENsYXNzaWZpY2F0aW9uQ29sb3I7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdGhlIGN1cnJlbnQgcHJvamVjdGlvbiBpcyBvcnRob2dyYXBoaWMgaW4gM0QuXG4gICAqXG4gICAqIEBtZW1iZXJPZiBVbmlmb3JtU3RhdGUucHJvdG90eXBlXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKi9cbiAgb3J0aG9ncmFwaGljSW4zRDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX29ydGhvZ3JhcGhpY0luM0Q7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogVGhlIGN1cnJlbnQgZWxsaXBzb2lkLlxuICAgKlxuICAgKiBAbWVtYmVyT2YgVW5pZm9ybVN0YXRlLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7RWxsaXBzb2lkfVxuICAgKi9cbiAgZWxsaXBzb2lkOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdFZhbHVlKHRoaXMuX2VsbGlwc29pZCwgRWxsaXBzb2lkLldHUzg0KTtcbiAgICB9LFxuICB9LFxufSk7XG5cbmZ1bmN0aW9uIHNldFZpZXcodW5pZm9ybVN0YXRlLCBtYXRyaXgpIHtcbiAgTWF0cml4NC5jbG9uZShtYXRyaXgsIHVuaWZvcm1TdGF0ZS5fdmlldyk7XG4gIE1hdHJpeDQuZ2V0TWF0cml4MyhtYXRyaXgsIHVuaWZvcm1TdGF0ZS5fdmlld1JvdGF0aW9uKTtcblxuICB1bmlmb3JtU3RhdGUuX3ZpZXczRERpcnR5ID0gdHJ1ZTtcbiAgdW5pZm9ybVN0YXRlLl9pbnZlcnNlVmlldzNERGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld0RpcnR5ID0gdHJ1ZTtcbiAgdW5pZm9ybVN0YXRlLl9tb2RlbFZpZXczRERpcnR5ID0gdHJ1ZTtcbiAgdW5pZm9ybVN0YXRlLl9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllRGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX2ludmVyc2VNb2RlbFZpZXdEaXJ0eSA9IHRydWU7XG4gIHVuaWZvcm1TdGF0ZS5faW52ZXJzZU1vZGVsVmlldzNERGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX3ZpZXdQcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX2ludmVyc2VWaWV3UHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbiAgdW5pZm9ybVN0YXRlLl9tb2RlbFZpZXdQcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllRGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld0luZmluaXRlUHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbiAgdW5pZm9ybVN0YXRlLl9ub3JtYWxEaXJ0eSA9IHRydWU7XG4gIHVuaWZvcm1TdGF0ZS5faW52ZXJzZU5vcm1hbERpcnR5ID0gdHJ1ZTtcbiAgdW5pZm9ybVN0YXRlLl9ub3JtYWwzRERpcnR5ID0gdHJ1ZTtcbiAgdW5pZm9ybVN0YXRlLl9pbnZlcnNlTm9ybWFsM0REaXJ0eSA9IHRydWU7XG59XG5cbmZ1bmN0aW9uIHNldEludmVyc2VWaWV3KHVuaWZvcm1TdGF0ZSwgbWF0cml4KSB7XG4gIE1hdHJpeDQuY2xvbmUobWF0cml4LCB1bmlmb3JtU3RhdGUuX2ludmVyc2VWaWV3KTtcbiAgTWF0cml4NC5nZXRNYXRyaXgzKG1hdHJpeCwgdW5pZm9ybVN0YXRlLl9pbnZlcnNlVmlld1JvdGF0aW9uKTtcbn1cblxuZnVuY3Rpb24gc2V0UHJvamVjdGlvbih1bmlmb3JtU3RhdGUsIG1hdHJpeCkge1xuICBNYXRyaXg0LmNsb25lKG1hdHJpeCwgdW5pZm9ybVN0YXRlLl9wcm9qZWN0aW9uKTtcblxuICB1bmlmb3JtU3RhdGUuX2ludmVyc2VQcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX3ZpZXdQcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX2ludmVyc2VWaWV3UHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbiAgdW5pZm9ybVN0YXRlLl9tb2RlbFZpZXdQcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xuICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllRGlydHkgPSB0cnVlO1xufVxuXG5mdW5jdGlvbiBzZXRJbmZpbml0ZVByb2plY3Rpb24odW5pZm9ybVN0YXRlLCBtYXRyaXgpIHtcbiAgTWF0cml4NC5jbG9uZShtYXRyaXgsIHVuaWZvcm1TdGF0ZS5faW5maW5pdGVQcm9qZWN0aW9uKTtcblxuICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld0luZmluaXRlUHJvamVjdGlvbkRpcnR5ID0gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gc2V0Q2FtZXJhKHVuaWZvcm1TdGF0ZSwgY2FtZXJhKSB7XG4gIENhcnRlc2lhbjMuY2xvbmUoY2FtZXJhLnBvc2l0aW9uV0MsIHVuaWZvcm1TdGF0ZS5fY2FtZXJhUG9zaXRpb24pO1xuICBDYXJ0ZXNpYW4zLmNsb25lKGNhbWVyYS5kaXJlY3Rpb25XQywgdW5pZm9ybVN0YXRlLl9jYW1lcmFEaXJlY3Rpb24pO1xuICBDYXJ0ZXNpYW4zLmNsb25lKGNhbWVyYS5yaWdodFdDLCB1bmlmb3JtU3RhdGUuX2NhbWVyYVJpZ2h0KTtcbiAgQ2FydGVzaWFuMy5jbG9uZShjYW1lcmEudXBXQywgdW5pZm9ybVN0YXRlLl9jYW1lcmFVcCk7XG5cbiAgdmFyIHBvc2l0aW9uQ2FydG9ncmFwaGljID0gY2FtZXJhLnBvc2l0aW9uQ2FydG9ncmFwaGljO1xuICBpZiAoIWRlZmluZWQocG9zaXRpb25DYXJ0b2dyYXBoaWMpKSB7XG4gICAgdW5pZm9ybVN0YXRlLl9leWVIZWlnaHQgPSAtdW5pZm9ybVN0YXRlLl9lbGxpcHNvaWQubWF4aW11bVJhZGl1cztcbiAgfSBlbHNlIHtcbiAgICB1bmlmb3JtU3RhdGUuX2V5ZUhlaWdodCA9IHBvc2l0aW9uQ2FydG9ncmFwaGljLmhlaWdodDtcbiAgfVxuXG4gIHVuaWZvcm1TdGF0ZS5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNEaXJ0eSA9IHRydWU7XG59XG5cbnZhciB0cmFuc2Zvcm1NYXRyaXggPSBuZXcgTWF0cml4MygpO1xudmFyIHN1bkNhcnRvZ3JhcGhpY1NjcmF0Y2ggPSBuZXcgQ2FydG9ncmFwaGljKCk7XG5mdW5jdGlvbiBzZXRTdW5BbmRNb29uRGlyZWN0aW9ucyh1bmlmb3JtU3RhdGUsIGZyYW1lU3RhdGUpIHtcbiAgaWYgKFxuICAgICFkZWZpbmVkKFxuICAgICAgVHJhbnNmb3Jtcy5jb21wdXRlSWNyZlRvRml4ZWRNYXRyaXgoZnJhbWVTdGF0ZS50aW1lLCB0cmFuc2Zvcm1NYXRyaXgpXG4gICAgKVxuICApIHtcbiAgICB0cmFuc2Zvcm1NYXRyaXggPSBUcmFuc2Zvcm1zLmNvbXB1dGVUZW1lVG9Qc2V1ZG9GaXhlZE1hdHJpeChcbiAgICAgIGZyYW1lU3RhdGUudGltZSxcbiAgICAgIHRyYW5zZm9ybU1hdHJpeFxuICAgICk7XG4gIH1cblxuICB2YXIgcG9zaXRpb24gPSBTaW1vbjE5OTRQbGFuZXRhcnlQb3NpdGlvbnMuY29tcHV0ZVN1blBvc2l0aW9uSW5FYXJ0aEluZXJ0aWFsRnJhbWUoXG4gICAgZnJhbWVTdGF0ZS50aW1lLFxuICAgIHVuaWZvcm1TdGF0ZS5fc3VuUG9zaXRpb25XQ1xuICApO1xuICBNYXRyaXgzLm11bHRpcGx5QnlWZWN0b3IodHJhbnNmb3JtTWF0cml4LCBwb3NpdGlvbiwgcG9zaXRpb24pO1xuXG4gIENhcnRlc2lhbjMubm9ybWFsaXplKHBvc2l0aW9uLCB1bmlmb3JtU3RhdGUuX3N1bkRpcmVjdGlvbldDKTtcblxuICBwb3NpdGlvbiA9IE1hdHJpeDMubXVsdGlwbHlCeVZlY3RvcihcbiAgICB1bmlmb3JtU3RhdGUudmlld1JvdGF0aW9uM0QsXG4gICAgcG9zaXRpb24sXG4gICAgdW5pZm9ybVN0YXRlLl9zdW5EaXJlY3Rpb25FQ1xuICApO1xuICBDYXJ0ZXNpYW4zLm5vcm1hbGl6ZShwb3NpdGlvbiwgcG9zaXRpb24pO1xuXG4gIHBvc2l0aW9uID0gU2ltb24xOTk0UGxhbmV0YXJ5UG9zaXRpb25zLmNvbXB1dGVNb29uUG9zaXRpb25JbkVhcnRoSW5lcnRpYWxGcmFtZShcbiAgICBmcmFtZVN0YXRlLnRpbWUsXG4gICAgdW5pZm9ybVN0YXRlLl9tb29uRGlyZWN0aW9uRUNcbiAgKTtcbiAgTWF0cml4My5tdWx0aXBseUJ5VmVjdG9yKHRyYW5zZm9ybU1hdHJpeCwgcG9zaXRpb24sIHBvc2l0aW9uKTtcbiAgTWF0cml4My5tdWx0aXBseUJ5VmVjdG9yKHVuaWZvcm1TdGF0ZS52aWV3Um90YXRpb24zRCwgcG9zaXRpb24sIHBvc2l0aW9uKTtcbiAgQ2FydGVzaWFuMy5ub3JtYWxpemUocG9zaXRpb24sIHBvc2l0aW9uKTtcblxuICB2YXIgcHJvamVjdGlvbiA9IGZyYW1lU3RhdGUubWFwUHJvamVjdGlvbjtcbiAgdmFyIGVsbGlwc29pZCA9IHByb2plY3Rpb24uZWxsaXBzb2lkO1xuICB2YXIgc3VuQ2FydG9ncmFwaGljID0gZWxsaXBzb2lkLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKFxuICAgIHVuaWZvcm1TdGF0ZS5fc3VuUG9zaXRpb25XQyxcbiAgICBzdW5DYXJ0b2dyYXBoaWNTY3JhdGNoXG4gICk7XG4gIHByb2plY3Rpb24ucHJvamVjdChzdW5DYXJ0b2dyYXBoaWMsIHVuaWZvcm1TdGF0ZS5fc3VuUG9zaXRpb25Db2x1bWJ1c1ZpZXcpO1xufVxuXG4vKipcbiAqIFN5bmNocm9uaXplcyB0aGUgZnJ1c3R1bSdzIHN0YXRlIHdpdGggdGhlIGNhbWVyYSBzdGF0ZS4gIFRoaXMgaXMgY2FsbGVkXG4gKiBieSB0aGUge0BsaW5rIFNjZW5lfSB3aGVuIHJlbmRlcmluZyB0byBlbnN1cmUgdGhhdCBhdXRvbWF0aWMgR0xTTCB1bmlmb3Jtc1xuICogYXJlIHNldCB0byB0aGUgcmlnaHQgdmFsdWUuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNhbWVyYSBUaGUgY2FtZXJhIHRvIHN5bmNocm9uaXplIHdpdGguXG4gKi9cblVuaWZvcm1TdGF0ZS5wcm90b3R5cGUudXBkYXRlQ2FtZXJhID0gZnVuY3Rpb24gKGNhbWVyYSkge1xuICBzZXRWaWV3KHRoaXMsIGNhbWVyYS52aWV3TWF0cml4KTtcbiAgc2V0SW52ZXJzZVZpZXcodGhpcywgY2FtZXJhLmludmVyc2VWaWV3TWF0cml4KTtcbiAgc2V0Q2FtZXJhKHRoaXMsIGNhbWVyYSk7XG5cbiAgdGhpcy5fZW50aXJlRnJ1c3R1bS54ID0gY2FtZXJhLmZydXN0dW0ubmVhcjtcbiAgdGhpcy5fZW50aXJlRnJ1c3R1bS55ID0gY2FtZXJhLmZydXN0dW0uZmFyO1xuICB0aGlzLnVwZGF0ZUZydXN0dW0oY2FtZXJhLmZydXN0dW0pO1xuXG4gIHRoaXMuX29ydGhvZ3JhcGhpY0luM0QgPVxuICAgIHRoaXMuX21vZGUgIT09IFNjZW5lTW9kZS5TQ0VORTJEICYmXG4gICAgY2FtZXJhLmZydXN0dW0gaW5zdGFuY2VvZiBPcnRob2dyYXBoaWNGcnVzdHVtO1xufTtcblxuLyoqXG4gKiBTeW5jaHJvbml6ZXMgdGhlIGZydXN0dW0ncyBzdGF0ZSB3aXRoIHRoZSB1bmlmb3JtIHN0YXRlLiAgVGhpcyBpcyBjYWxsZWRcbiAqIGJ5IHRoZSB7QGxpbmsgU2NlbmV9IHdoZW4gcmVuZGVyaW5nIHRvIGVuc3VyZSB0aGF0IGF1dG9tYXRpYyBHTFNMIHVuaWZvcm1zXG4gKiBhcmUgc2V0IHRvIHRoZSByaWdodCB2YWx1ZS5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZnJ1c3R1bSBUaGUgZnJ1c3R1bSB0byBzeW5jaHJvbml6ZSB3aXRoLlxuICovXG5Vbmlmb3JtU3RhdGUucHJvdG90eXBlLnVwZGF0ZUZydXN0dW0gPSBmdW5jdGlvbiAoZnJ1c3R1bSkge1xuICBzZXRQcm9qZWN0aW9uKHRoaXMsIGZydXN0dW0ucHJvamVjdGlvbk1hdHJpeCk7XG4gIGlmIChkZWZpbmVkKGZydXN0dW0uaW5maW5pdGVQcm9qZWN0aW9uTWF0cml4KSkge1xuICAgIHNldEluZmluaXRlUHJvamVjdGlvbih0aGlzLCBmcnVzdHVtLmluZmluaXRlUHJvamVjdGlvbk1hdHJpeCk7XG4gIH1cbiAgdGhpcy5fY3VycmVudEZydXN0dW0ueCA9IGZydXN0dW0ubmVhcjtcbiAgdGhpcy5fY3VycmVudEZydXN0dW0ueSA9IGZydXN0dW0uZmFyO1xuXG4gIHRoaXMuX2ZhckRlcHRoRnJvbU5lYXJQbHVzT25lID0gZnJ1c3R1bS5mYXIgLSBmcnVzdHVtLm5lYXIgKyAxLjA7XG4gIHRoaXMuX2xvZzJGYXJEZXB0aEZyb21OZWFyUGx1c09uZSA9IENlc2l1bU1hdGgubG9nMihcbiAgICB0aGlzLl9mYXJEZXB0aEZyb21OZWFyUGx1c09uZVxuICApO1xuICB0aGlzLl9vbmVPdmVyTG9nMkZhckRlcHRoRnJvbU5lYXJQbHVzT25lID1cbiAgICAxLjAgLyB0aGlzLl9sb2cyRmFyRGVwdGhGcm9tTmVhclBsdXNPbmU7XG5cbiAgaWYgKGRlZmluZWQoZnJ1c3R1bS5fb2ZmQ2VudGVyRnJ1c3R1bSkpIHtcbiAgICBmcnVzdHVtID0gZnJ1c3R1bS5fb2ZmQ2VudGVyRnJ1c3R1bTtcbiAgfVxuXG4gIHRoaXMuX2ZydXN0dW1QbGFuZXMueCA9IGZydXN0dW0udG9wO1xuICB0aGlzLl9mcnVzdHVtUGxhbmVzLnkgPSBmcnVzdHVtLmJvdHRvbTtcbiAgdGhpcy5fZnJ1c3R1bVBsYW5lcy56ID0gZnJ1c3R1bS5sZWZ0O1xuICB0aGlzLl9mcnVzdHVtUGxhbmVzLncgPSBmcnVzdHVtLnJpZ2h0O1xufTtcblxuVW5pZm9ybVN0YXRlLnByb3RvdHlwZS51cGRhdGVQYXNzID0gZnVuY3Rpb24gKHBhc3MpIHtcbiAgdGhpcy5fcGFzcyA9IHBhc3M7XG59O1xuXG52YXIgRU1QVFlfQVJSQVkgPSBbXTtcbnZhciBkZWZhdWx0TGlnaHQgPSBuZXcgU3VuTGlnaHQoKTtcblxuLyoqXG4gKiBTeW5jaHJvbml6ZXMgZnJhbWUgc3RhdGUgd2l0aCB0aGUgdW5pZm9ybSBzdGF0ZS4gIFRoaXMgaXMgY2FsbGVkXG4gKiBieSB0aGUge0BsaW5rIFNjZW5lfSB3aGVuIHJlbmRlcmluZyB0byBlbnN1cmUgdGhhdCBhdXRvbWF0aWMgR0xTTCB1bmlmb3Jtc1xuICogYXJlIHNldCB0byB0aGUgcmlnaHQgdmFsdWUuXG4gKlxuICogQHBhcmFtIHtGcmFtZVN0YXRlfSBmcmFtZVN0YXRlIFRoZSBmcmFtZVN0YXRlIHRvIHN5bmNocm9uaXplIHdpdGguXG4gKi9cblVuaWZvcm1TdGF0ZS5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGZyYW1lU3RhdGUpIHtcbiAgdGhpcy5fbW9kZSA9IGZyYW1lU3RhdGUubW9kZTtcbiAgdGhpcy5fbWFwUHJvamVjdGlvbiA9IGZyYW1lU3RhdGUubWFwUHJvamVjdGlvbjtcbiAgdGhpcy5fZWxsaXBzb2lkID0gZnJhbWVTdGF0ZS5tYXBQcm9qZWN0aW9uLmVsbGlwc29pZDtcbiAgdGhpcy5fcGl4ZWxSYXRpbyA9IGZyYW1lU3RhdGUucGl4ZWxSYXRpbztcblxuICB2YXIgY2FtZXJhID0gZnJhbWVTdGF0ZS5jYW1lcmE7XG4gIHRoaXMudXBkYXRlQ2FtZXJhKGNhbWVyYSk7XG5cbiAgaWYgKGZyYW1lU3RhdGUubW9kZSA9PT0gU2NlbmVNb2RlLlNDRU5FMkQpIHtcbiAgICB0aGlzLl9mcnVzdHVtMkRXaWR0aCA9IGNhbWVyYS5mcnVzdHVtLnJpZ2h0IC0gY2FtZXJhLmZydXN0dW0ubGVmdDtcbiAgICB0aGlzLl9leWVIZWlnaHQyRC54ID0gdGhpcy5fZnJ1c3R1bTJEV2lkdGggKiAwLjU7XG4gICAgdGhpcy5fZXllSGVpZ2h0MkQueSA9IHRoaXMuX2V5ZUhlaWdodDJELnggKiB0aGlzLl9leWVIZWlnaHQyRC54O1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2ZydXN0dW0yRFdpZHRoID0gMC4wO1xuICAgIHRoaXMuX2V5ZUhlaWdodDJELnggPSAwLjA7XG4gICAgdGhpcy5fZXllSGVpZ2h0MkQueSA9IDAuMDtcbiAgfVxuXG4gIHNldFN1bkFuZE1vb25EaXJlY3Rpb25zKHRoaXMsIGZyYW1lU3RhdGUpO1xuXG4gIHZhciBsaWdodCA9IGRlZmF1bHRWYWx1ZShmcmFtZVN0YXRlLmxpZ2h0LCBkZWZhdWx0TGlnaHQpO1xuICBpZiAobGlnaHQgaW5zdGFuY2VvZiBTdW5MaWdodCkge1xuICAgIHRoaXMuX2xpZ2h0RGlyZWN0aW9uV0MgPSBDYXJ0ZXNpYW4zLmNsb25lKFxuICAgICAgdGhpcy5fc3VuRGlyZWN0aW9uV0MsXG4gICAgICB0aGlzLl9saWdodERpcmVjdGlvbldDXG4gICAgKTtcbiAgICB0aGlzLl9saWdodERpcmVjdGlvbkVDID0gQ2FydGVzaWFuMy5jbG9uZShcbiAgICAgIHRoaXMuX3N1bkRpcmVjdGlvbkVDLFxuICAgICAgdGhpcy5fbGlnaHREaXJlY3Rpb25FQ1xuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fbGlnaHREaXJlY3Rpb25XQyA9IENhcnRlc2lhbjMubm9ybWFsaXplKFxuICAgICAgQ2FydGVzaWFuMy5uZWdhdGUobGlnaHQuZGlyZWN0aW9uLCB0aGlzLl9saWdodERpcmVjdGlvbldDKSxcbiAgICAgIHRoaXMuX2xpZ2h0RGlyZWN0aW9uV0NcbiAgICApO1xuICAgIHRoaXMuX2xpZ2h0RGlyZWN0aW9uRUMgPSBNYXRyaXgzLm11bHRpcGx5QnlWZWN0b3IoXG4gICAgICB0aGlzLnZpZXdSb3RhdGlvbjNELFxuICAgICAgdGhpcy5fbGlnaHREaXJlY3Rpb25XQyxcbiAgICAgIHRoaXMuX2xpZ2h0RGlyZWN0aW9uRUNcbiAgICApO1xuICB9XG5cbiAgdmFyIGxpZ2h0Q29sb3IgPSBsaWdodC5jb2xvcjtcbiAgdmFyIGxpZ2h0Q29sb3JIZHIgPSBDYXJ0ZXNpYW4zLmZyb21FbGVtZW50cyhcbiAgICBsaWdodENvbG9yLnJlZCxcbiAgICBsaWdodENvbG9yLmdyZWVuLFxuICAgIGxpZ2h0Q29sb3IuYmx1ZSxcbiAgICB0aGlzLl9saWdodENvbG9ySGRyXG4gICk7XG4gIGxpZ2h0Q29sb3JIZHIgPSBDYXJ0ZXNpYW4zLm11bHRpcGx5QnlTY2FsYXIoXG4gICAgbGlnaHRDb2xvckhkcixcbiAgICBsaWdodC5pbnRlbnNpdHksXG4gICAgbGlnaHRDb2xvckhkclxuICApO1xuICB2YXIgbWF4aW11bUNvbXBvbmVudCA9IENhcnRlc2lhbjMubWF4aW11bUNvbXBvbmVudChsaWdodENvbG9ySGRyKTtcbiAgaWYgKG1heGltdW1Db21wb25lbnQgPiAxLjApIHtcbiAgICBDYXJ0ZXNpYW4zLmRpdmlkZUJ5U2NhbGFyKFxuICAgICAgbGlnaHRDb2xvckhkcixcbiAgICAgIG1heGltdW1Db21wb25lbnQsXG4gICAgICB0aGlzLl9saWdodENvbG9yXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBDYXJ0ZXNpYW4zLmNsb25lKGxpZ2h0Q29sb3JIZHIsIHRoaXMuX2xpZ2h0Q29sb3IpO1xuICB9XG5cbiAgdmFyIGJyZGZMdXRHZW5lcmF0b3IgPSBmcmFtZVN0YXRlLmJyZGZMdXRHZW5lcmF0b3I7XG4gIHZhciBicmRmTHV0ID0gZGVmaW5lZChicmRmTHV0R2VuZXJhdG9yKVxuICAgID8gYnJkZkx1dEdlbmVyYXRvci5jb2xvclRleHR1cmVcbiAgICA6IHVuZGVmaW5lZDtcbiAgdGhpcy5fYnJkZkx1dCA9IGJyZGZMdXQ7XG5cbiAgdGhpcy5fZW52aXJvbm1lbnRNYXAgPSBkZWZhdWx0VmFsdWUoXG4gICAgZnJhbWVTdGF0ZS5lbnZpcm9ubWVudE1hcCxcbiAgICBmcmFtZVN0YXRlLmNvbnRleHQuZGVmYXVsdEN1YmVNYXBcbiAgKTtcblxuICAvLyBJRSAxMSBkb2Vzbid0IG9wdGltaXplIG91dCB1bmlmb3JtcyB0aGF0IGFyZSAjaWZkZWYnZCBvdXQuIFNvIHVuZGVmaW5lZCB2YWx1ZXMgZm9yIHRoZSBzcGhlcmljYWwgaGFybW9uaWNcbiAgLy8gY29lZmZpY2llbnRzIGFuZCBzcGVjdWxhciBlbnZpcm9ubWVudCBtYXAgYXRsYXMgZGltZW5zaW9ucyBjYXVzZSBhIGNyYXNoLlxuICB0aGlzLl9zcGhlcmljYWxIYXJtb25pY0NvZWZmaWNpZW50cyA9IGRlZmF1bHRWYWx1ZShcbiAgICBmcmFtZVN0YXRlLnNwaGVyaWNhbEhhcm1vbmljQ29lZmZpY2llbnRzLFxuICAgIEVNUFRZX0FSUkFZXG4gICk7XG4gIHRoaXMuX3NwZWN1bGFyRW52aXJvbm1lbnRNYXBzID0gZnJhbWVTdGF0ZS5zcGVjdWxhckVudmlyb25tZW50TWFwcztcbiAgdGhpcy5fc3BlY3VsYXJFbnZpcm9ubWVudE1hcHNNYXhpbXVtTE9EID1cbiAgICBmcmFtZVN0YXRlLnNwZWN1bGFyRW52aXJvbm1lbnRNYXBzTWF4aW11bUxPRDtcblxuICBpZiAoZGVmaW5lZCh0aGlzLl9zcGVjdWxhckVudmlyb25tZW50TWFwcykpIHtcbiAgICBDYXJ0ZXNpYW4yLmNsb25lKFxuICAgICAgdGhpcy5fc3BlY3VsYXJFbnZpcm9ubWVudE1hcHMuZGltZW5zaW9ucyxcbiAgICAgIHRoaXMuX3NwZWN1bGFyRW52aXJvbm1lbnRNYXBzRGltZW5zaW9uc1xuICAgICk7XG4gIH1cblxuICB0aGlzLl9mb2dEZW5zaXR5ID0gZnJhbWVTdGF0ZS5mb2cuZGVuc2l0eTtcblxuICB0aGlzLl9pbnZlcnRDbGFzc2lmaWNhdGlvbkNvbG9yID0gZnJhbWVTdGF0ZS5pbnZlcnRDbGFzc2lmaWNhdGlvbkNvbG9yO1xuXG4gIHRoaXMuX2ZyYW1lU3RhdGUgPSBmcmFtZVN0YXRlO1xuICB0aGlzLl90ZW1lVG9Qc2V1ZG9GaXhlZCA9IFRyYW5zZm9ybXMuY29tcHV0ZVRlbWVUb1BzZXVkb0ZpeGVkTWF0cml4KFxuICAgIGZyYW1lU3RhdGUudGltZSxcbiAgICB0aGlzLl90ZW1lVG9Qc2V1ZG9GaXhlZFxuICApO1xuXG4gIC8vIENvbnZlcnQgdGhlIHJlbGF0aXZlIGltYWdlcnlTcGxpdFBvc2l0aW9uIHRvIGFic29sdXRlIHBpeGVsIGNvb3JkaW5hdGVzXG4gIHRoaXMuX2ltYWdlcnlTcGxpdFBvc2l0aW9uID1cbiAgICBmcmFtZVN0YXRlLmltYWdlcnlTcGxpdFBvc2l0aW9uICogZnJhbWVTdGF0ZS5jb250ZXh0LmRyYXdpbmdCdWZmZXJXaWR0aDtcbiAgdmFyIGZvdiA9IGNhbWVyYS5mcnVzdHVtLmZvdjtcbiAgdmFyIHZpZXdwb3J0ID0gdGhpcy5fdmlld3BvcnQ7XG4gIHZhciBwaXhlbFNpemVQZXJNZXRlcjtcbiAgaWYgKGRlZmluZWQoZm92KSkge1xuICAgIGlmICh2aWV3cG9ydC5oZWlnaHQgPiB2aWV3cG9ydC53aWR0aCkge1xuICAgICAgcGl4ZWxTaXplUGVyTWV0ZXIgPSAoTWF0aC50YW4oMC41ICogZm92KSAqIDIuMCkgLyB2aWV3cG9ydC5oZWlnaHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBpeGVsU2l6ZVBlck1ldGVyID0gKE1hdGgudGFuKDAuNSAqIGZvdikgKiAyLjApIC8gdmlld3BvcnQud2lkdGg7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHBpeGVsU2l6ZVBlck1ldGVyID0gMS4wIC8gTWF0aC5tYXgodmlld3BvcnQud2lkdGgsIHZpZXdwb3J0LmhlaWdodCk7XG4gIH1cblxuICB0aGlzLl9nZW9tZXRyaWNUb2xlcmFuY2VPdmVyTWV0ZXIgPVxuICAgIHBpeGVsU2l6ZVBlck1ldGVyICogZnJhbWVTdGF0ZS5tYXhpbXVtU2NyZWVuU3BhY2VFcnJvcjtcbiAgQ29sb3IuY2xvbmUoZnJhbWVTdGF0ZS5iYWNrZ3JvdW5kQ29sb3IsIHRoaXMuX2JhY2tncm91bmRDb2xvcik7XG5cbiAgdGhpcy5fbWluaW11bURpc2FibGVEZXB0aFRlc3REaXN0YW5jZSA9XG4gICAgZnJhbWVTdGF0ZS5taW5pbXVtRGlzYWJsZURlcHRoVGVzdERpc3RhbmNlO1xuICB0aGlzLl9taW5pbXVtRGlzYWJsZURlcHRoVGVzdERpc3RhbmNlICo9IHRoaXMuX21pbmltdW1EaXNhYmxlRGVwdGhUZXN0RGlzdGFuY2U7XG4gIGlmICh0aGlzLl9taW5pbXVtRGlzYWJsZURlcHRoVGVzdERpc3RhbmNlID09PSBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkpIHtcbiAgICB0aGlzLl9taW5pbXVtRGlzYWJsZURlcHRoVGVzdERpc3RhbmNlID0gLTEuMDtcbiAgfVxufTtcblxuZnVuY3Rpb24gY2xlYW5WaWV3cG9ydCh1bmlmb3JtU3RhdGUpIHtcbiAgaWYgKHVuaWZvcm1TdGF0ZS5fdmlld3BvcnREaXJ0eSkge1xuICAgIHZhciB2ID0gdW5pZm9ybVN0YXRlLl92aWV3cG9ydDtcbiAgICBNYXRyaXg0LmNvbXB1dGVPcnRob2dyYXBoaWNPZmZDZW50ZXIoXG4gICAgICB2LngsXG4gICAgICB2LnggKyB2LndpZHRoLFxuICAgICAgdi55LFxuICAgICAgdi55ICsgdi5oZWlnaHQsXG4gICAgICAwLjAsXG4gICAgICAxLjAsXG4gICAgICB1bmlmb3JtU3RhdGUuX3ZpZXdwb3J0T3J0aG9ncmFwaGljTWF0cml4XG4gICAgKTtcbiAgICBNYXRyaXg0LmNvbXB1dGVWaWV3cG9ydFRyYW5zZm9ybWF0aW9uKFxuICAgICAgdixcbiAgICAgIDAuMCxcbiAgICAgIDEuMCxcbiAgICAgIHVuaWZvcm1TdGF0ZS5fdmlld3BvcnRUcmFuc2Zvcm1hdGlvblxuICAgICk7XG4gICAgdW5pZm9ybVN0YXRlLl92aWV3cG9ydERpcnR5ID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYW5JbnZlcnNlUHJvamVjdGlvbih1bmlmb3JtU3RhdGUpIHtcbiAgaWYgKHVuaWZvcm1TdGF0ZS5faW52ZXJzZVByb2plY3Rpb25EaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZVByb2plY3Rpb25EaXJ0eSA9IGZhbHNlO1xuXG4gICAgaWYgKFxuICAgICAgdW5pZm9ybVN0YXRlLl9tb2RlICE9PSBTY2VuZU1vZGUuU0NFTkUyRCAmJlxuICAgICAgdW5pZm9ybVN0YXRlLl9tb2RlICE9PSBTY2VuZU1vZGUuTU9SUEhJTkcgJiZcbiAgICAgICF1bmlmb3JtU3RhdGUuX29ydGhvZ3JhcGhpY0luM0RcbiAgICApIHtcbiAgICAgIE1hdHJpeDQuaW52ZXJzZShcbiAgICAgICAgdW5pZm9ybVN0YXRlLl9wcm9qZWN0aW9uLFxuICAgICAgICB1bmlmb3JtU3RhdGUuX2ludmVyc2VQcm9qZWN0aW9uXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBNYXRyaXg0LmNsb25lKE1hdHJpeDQuWkVSTywgdW5pZm9ybVN0YXRlLl9pbnZlcnNlUHJvamVjdGlvbik7XG4gICAgfVxuICB9XG59XG5cbi8vIERlcml2ZWRcbmZ1bmN0aW9uIGNsZWFuTW9kZWxWaWV3KHVuaWZvcm1TdGF0ZSkge1xuICBpZiAodW5pZm9ybVN0YXRlLl9tb2RlbFZpZXdEaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5fbW9kZWxWaWV3RGlydHkgPSBmYWxzZTtcblxuICAgIE1hdHJpeDQubXVsdGlwbHlUcmFuc2Zvcm1hdGlvbihcbiAgICAgIHVuaWZvcm1TdGF0ZS5fdmlldyxcbiAgICAgIHVuaWZvcm1TdGF0ZS5fbW9kZWwsXG4gICAgICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld1xuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYW5Nb2RlbFZpZXczRCh1bmlmb3JtU3RhdGUpIHtcbiAgaWYgKHVuaWZvcm1TdGF0ZS5fbW9kZWxWaWV3M0REaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5fbW9kZWxWaWV3M0REaXJ0eSA9IGZhbHNlO1xuXG4gICAgTWF0cml4NC5tdWx0aXBseVRyYW5zZm9ybWF0aW9uKFxuICAgICAgdW5pZm9ybVN0YXRlLnZpZXczRCxcbiAgICAgIHVuaWZvcm1TdGF0ZS5fbW9kZWwsXG4gICAgICB1bmlmb3JtU3RhdGUuX21vZGVsVmlldzNEXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjbGVhbkludmVyc2VNb2RlbFZpZXcodW5pZm9ybVN0YXRlKSB7XG4gIGlmICh1bmlmb3JtU3RhdGUuX2ludmVyc2VNb2RlbFZpZXdEaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZU1vZGVsVmlld0RpcnR5ID0gZmFsc2U7XG5cbiAgICBNYXRyaXg0LmludmVyc2UodW5pZm9ybVN0YXRlLm1vZGVsVmlldywgdW5pZm9ybVN0YXRlLl9pbnZlcnNlTW9kZWxWaWV3KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjbGVhbkludmVyc2VNb2RlbFZpZXczRCh1bmlmb3JtU3RhdGUpIHtcbiAgaWYgKHVuaWZvcm1TdGF0ZS5faW52ZXJzZU1vZGVsVmlldzNERGlydHkpIHtcbiAgICB1bmlmb3JtU3RhdGUuX2ludmVyc2VNb2RlbFZpZXczRERpcnR5ID0gZmFsc2U7XG5cbiAgICBNYXRyaXg0LmludmVyc2UodW5pZm9ybVN0YXRlLm1vZGVsVmlldzNELCB1bmlmb3JtU3RhdGUuX2ludmVyc2VNb2RlbFZpZXczRCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYW5WaWV3UHJvamVjdGlvbih1bmlmb3JtU3RhdGUpIHtcbiAgaWYgKHVuaWZvcm1TdGF0ZS5fdmlld1Byb2plY3Rpb25EaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5fdmlld1Byb2plY3Rpb25EaXJ0eSA9IGZhbHNlO1xuXG4gICAgTWF0cml4NC5tdWx0aXBseShcbiAgICAgIHVuaWZvcm1TdGF0ZS5fcHJvamVjdGlvbixcbiAgICAgIHVuaWZvcm1TdGF0ZS5fdmlldyxcbiAgICAgIHVuaWZvcm1TdGF0ZS5fdmlld1Byb2plY3Rpb25cbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsZWFuSW52ZXJzZVZpZXdQcm9qZWN0aW9uKHVuaWZvcm1TdGF0ZSkge1xuICBpZiAodW5pZm9ybVN0YXRlLl9pbnZlcnNlVmlld1Byb2plY3Rpb25EaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZVZpZXdQcm9qZWN0aW9uRGlydHkgPSBmYWxzZTtcblxuICAgIE1hdHJpeDQuaW52ZXJzZShcbiAgICAgIHVuaWZvcm1TdGF0ZS52aWV3UHJvamVjdGlvbixcbiAgICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZVZpZXdQcm9qZWN0aW9uXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjbGVhbk1vZGVsVmlld1Byb2plY3Rpb24odW5pZm9ybVN0YXRlKSB7XG4gIGlmICh1bmlmb3JtU3RhdGUuX21vZGVsVmlld1Byb2plY3Rpb25EaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5fbW9kZWxWaWV3UHJvamVjdGlvbkRpcnR5ID0gZmFsc2U7XG5cbiAgICBNYXRyaXg0Lm11bHRpcGx5KFxuICAgICAgdW5pZm9ybVN0YXRlLl9wcm9qZWN0aW9uLFxuICAgICAgdW5pZm9ybVN0YXRlLm1vZGVsVmlldyxcbiAgICAgIHVuaWZvcm1TdGF0ZS5fbW9kZWxWaWV3UHJvamVjdGlvblxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYW5Nb2RlbFZpZXdSZWxhdGl2ZVRvRXllKHVuaWZvcm1TdGF0ZSkge1xuICBpZiAodW5pZm9ybVN0YXRlLl9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllRGlydHkpIHtcbiAgICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld1JlbGF0aXZlVG9FeWVEaXJ0eSA9IGZhbHNlO1xuXG4gICAgdmFyIG12ID0gdW5pZm9ybVN0YXRlLm1vZGVsVmlldztcbiAgICB2YXIgbXZSdGUgPSB1bmlmb3JtU3RhdGUuX21vZGVsVmlld1JlbGF0aXZlVG9FeWU7XG4gICAgbXZSdGVbMF0gPSBtdlswXTtcbiAgICBtdlJ0ZVsxXSA9IG12WzFdO1xuICAgIG12UnRlWzJdID0gbXZbMl07XG4gICAgbXZSdGVbM10gPSBtdlszXTtcbiAgICBtdlJ0ZVs0XSA9IG12WzRdO1xuICAgIG12UnRlWzVdID0gbXZbNV07XG4gICAgbXZSdGVbNl0gPSBtdls2XTtcbiAgICBtdlJ0ZVs3XSA9IG12WzddO1xuICAgIG12UnRlWzhdID0gbXZbOF07XG4gICAgbXZSdGVbOV0gPSBtdls5XTtcbiAgICBtdlJ0ZVsxMF0gPSBtdlsxMF07XG4gICAgbXZSdGVbMTFdID0gbXZbMTFdO1xuICAgIG12UnRlWzEyXSA9IDAuMDtcbiAgICBtdlJ0ZVsxM10gPSAwLjA7XG4gICAgbXZSdGVbMTRdID0gMC4wO1xuICAgIG12UnRlWzE1XSA9IG12WzE1XTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjbGVhbkludmVyc2VNb2RlbFZpZXdQcm9qZWN0aW9uKHVuaWZvcm1TdGF0ZSkge1xuICBpZiAodW5pZm9ybVN0YXRlLl9pbnZlcnNlTW9kZWxWaWV3UHJvamVjdGlvbkRpcnR5KSB7XG4gICAgdW5pZm9ybVN0YXRlLl9pbnZlcnNlTW9kZWxWaWV3UHJvamVjdGlvbkRpcnR5ID0gZmFsc2U7XG5cbiAgICBNYXRyaXg0LmludmVyc2UoXG4gICAgICB1bmlmb3JtU3RhdGUubW9kZWxWaWV3UHJvamVjdGlvbixcbiAgICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZU1vZGVsVmlld1Byb2plY3Rpb25cbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsZWFuTW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWUodW5pZm9ybVN0YXRlKSB7XG4gIGlmICh1bmlmb3JtU3RhdGUuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllRGlydHkpIHtcbiAgICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllRGlydHkgPSBmYWxzZTtcblxuICAgIE1hdHJpeDQubXVsdGlwbHkoXG4gICAgICB1bmlmb3JtU3RhdGUuX3Byb2plY3Rpb24sXG4gICAgICB1bmlmb3JtU3RhdGUubW9kZWxWaWV3UmVsYXRpdmVUb0V5ZSxcbiAgICAgIHVuaWZvcm1TdGF0ZS5fbW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWVcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsZWFuTW9kZWxWaWV3SW5maW5pdGVQcm9qZWN0aW9uKHVuaWZvcm1TdGF0ZSkge1xuICBpZiAodW5pZm9ybVN0YXRlLl9tb2RlbFZpZXdJbmZpbml0ZVByb2plY3Rpb25EaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5fbW9kZWxWaWV3SW5maW5pdGVQcm9qZWN0aW9uRGlydHkgPSBmYWxzZTtcblxuICAgIE1hdHJpeDQubXVsdGlwbHkoXG4gICAgICB1bmlmb3JtU3RhdGUuX2luZmluaXRlUHJvamVjdGlvbixcbiAgICAgIHVuaWZvcm1TdGF0ZS5tb2RlbFZpZXcsXG4gICAgICB1bmlmb3JtU3RhdGUuX21vZGVsVmlld0luZmluaXRlUHJvamVjdGlvblxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYW5Ob3JtYWwodW5pZm9ybVN0YXRlKSB7XG4gIGlmICh1bmlmb3JtU3RhdGUuX25vcm1hbERpcnR5KSB7XG4gICAgdW5pZm9ybVN0YXRlLl9ub3JtYWxEaXJ0eSA9IGZhbHNlO1xuXG4gICAgdmFyIG0gPSB1bmlmb3JtU3RhdGUuX25vcm1hbDtcbiAgICBNYXRyaXg0LmdldE1hdHJpeDModW5pZm9ybVN0YXRlLmludmVyc2VNb2RlbFZpZXcsIG0pO1xuICAgIE1hdHJpeDMuZ2V0Um90YXRpb24obSwgbSk7XG4gICAgTWF0cml4My50cmFuc3Bvc2UobSwgbSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYW5Ob3JtYWwzRCh1bmlmb3JtU3RhdGUpIHtcbiAgaWYgKHVuaWZvcm1TdGF0ZS5fbm9ybWFsM0REaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5fbm9ybWFsM0REaXJ0eSA9IGZhbHNlO1xuXG4gICAgdmFyIG0gPSB1bmlmb3JtU3RhdGUuX25vcm1hbDNEO1xuICAgIE1hdHJpeDQuZ2V0TWF0cml4Myh1bmlmb3JtU3RhdGUuaW52ZXJzZU1vZGVsVmlldzNELCBtKTtcbiAgICBNYXRyaXgzLmdldFJvdGF0aW9uKG0sIG0pO1xuICAgIE1hdHJpeDMudHJhbnNwb3NlKG0sIG0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsZWFuSW52ZXJzZU5vcm1hbCh1bmlmb3JtU3RhdGUpIHtcbiAgaWYgKHVuaWZvcm1TdGF0ZS5faW52ZXJzZU5vcm1hbERpcnR5KSB7XG4gICAgdW5pZm9ybVN0YXRlLl9pbnZlcnNlTm9ybWFsRGlydHkgPSBmYWxzZTtcbiAgICBNYXRyaXg0LmdldE1hdHJpeDMoXG4gICAgICB1bmlmb3JtU3RhdGUuaW52ZXJzZU1vZGVsVmlldyxcbiAgICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZU5vcm1hbFxuICAgICk7XG4gICAgTWF0cml4My5nZXRSb3RhdGlvbihcbiAgICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZU5vcm1hbCxcbiAgICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZU5vcm1hbFxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYW5JbnZlcnNlTm9ybWFsM0QodW5pZm9ybVN0YXRlKSB7XG4gIGlmICh1bmlmb3JtU3RhdGUuX2ludmVyc2VOb3JtYWwzRERpcnR5KSB7XG4gICAgdW5pZm9ybVN0YXRlLl9pbnZlcnNlTm9ybWFsM0REaXJ0eSA9IGZhbHNlO1xuICAgIE1hdHJpeDQuZ2V0TWF0cml4MyhcbiAgICAgIHVuaWZvcm1TdGF0ZS5pbnZlcnNlTW9kZWxWaWV3M0QsXG4gICAgICB1bmlmb3JtU3RhdGUuX2ludmVyc2VOb3JtYWwzRFxuICAgICk7XG4gICAgTWF0cml4My5nZXRSb3RhdGlvbihcbiAgICAgIHVuaWZvcm1TdGF0ZS5faW52ZXJzZU5vcm1hbDNELFxuICAgICAgdW5pZm9ybVN0YXRlLl9pbnZlcnNlTm9ybWFsM0RcbiAgICApO1xuICB9XG59XG5cbnZhciBjYW1lcmFQb3NpdGlvbk1DID0gbmV3IENhcnRlc2lhbjMoKTtcblxuZnVuY3Rpb24gY2xlYW5FbmNvZGVkQ2FtZXJhUG9zaXRpb25NQyh1bmlmb3JtU3RhdGUpIHtcbiAgaWYgKHVuaWZvcm1TdGF0ZS5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNEaXJ0eSkge1xuICAgIHVuaWZvcm1TdGF0ZS5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNEaXJ0eSA9IGZhbHNlO1xuXG4gICAgTWF0cml4NC5tdWx0aXBseUJ5UG9pbnQoXG4gICAgICB1bmlmb3JtU3RhdGUuaW52ZXJzZU1vZGVsLFxuICAgICAgdW5pZm9ybVN0YXRlLl9jYW1lcmFQb3NpdGlvbixcbiAgICAgIGNhbWVyYVBvc2l0aW9uTUNcbiAgICApO1xuICAgIEVuY29kZWRDYXJ0ZXNpYW4zLmZyb21DYXJ0ZXNpYW4oXG4gICAgICBjYW1lcmFQb3NpdGlvbk1DLFxuICAgICAgdW5pZm9ybVN0YXRlLl9lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQ1xuICAgICk7XG4gIH1cbn1cblxudmFyIHZpZXcyRHRvM0RQU2NyYXRjaCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG52YXIgdmlldzJEdG8zRFJTY3JhdGNoID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciB2aWV3MkR0bzNEVVNjcmF0Y2ggPSBuZXcgQ2FydGVzaWFuMygpO1xudmFyIHZpZXcyRHRvM0REU2NyYXRjaCA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG52YXIgdmlldzJEdG8zRENhcnRvZ3JhcGhpY1NjcmF0Y2ggPSBuZXcgQ2FydG9ncmFwaGljKCk7XG52YXIgdmlldzJEdG8zRENhcnRlc2lhbjNTY3JhdGNoID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciB2aWV3MkR0bzNETWF0cml4NFNjcmF0Y2ggPSBuZXcgTWF0cml4NCgpO1xuXG5mdW5jdGlvbiB2aWV3MkR0bzNEKFxuICBwb3NpdGlvbjJELFxuICBkaXJlY3Rpb24yRCxcbiAgcmlnaHQyRCxcbiAgdXAyRCxcbiAgZnJ1c3R1bTJEV2lkdGgsXG4gIG1vZGUsXG4gIHByb2plY3Rpb24sXG4gIHJlc3VsdFxuKSB7XG4gIC8vIFRoZSBjYW1lcmEgcG9zaXRpb24gYW5kIGRpcmVjdGlvbnMgYXJlIGV4cHJlc3NlZCBpbiB0aGUgMkQgY29vcmRpbmF0ZSBzeXN0ZW0gd2hlcmUgdGhlIFkgYXhpcyBpcyB0byB0aGUgRWFzdCxcbiAgLy8gdGhlIFogYXhpcyBpcyB0byB0aGUgTm9ydGgsIGFuZCB0aGUgWCBheGlzIGlzIG91dCBvZiB0aGUgbWFwLiAgRXhwcmVzcyB0aGVtIGluc3RlYWQgaW4gdGhlIEVOVSBheGVzIHdoZXJlXG4gIC8vIFggaXMgdG8gdGhlIEVhc3QsIFkgaXMgdG8gdGhlIE5vcnRoLCBhbmQgWiBpcyBvdXQgb2YgdGhlIGxvY2FsIGhvcml6b250YWwgcGxhbmUuXG4gIHZhciBwID0gdmlldzJEdG8zRFBTY3JhdGNoO1xuICBwLnggPSBwb3NpdGlvbjJELnk7XG4gIHAueSA9IHBvc2l0aW9uMkQuejtcbiAgcC56ID0gcG9zaXRpb24yRC54O1xuXG4gIHZhciByID0gdmlldzJEdG8zRFJTY3JhdGNoO1xuICByLnggPSByaWdodDJELnk7XG4gIHIueSA9IHJpZ2h0MkQuejtcbiAgci56ID0gcmlnaHQyRC54O1xuXG4gIHZhciB1ID0gdmlldzJEdG8zRFVTY3JhdGNoO1xuICB1LnggPSB1cDJELnk7XG4gIHUueSA9IHVwMkQuejtcbiAgdS56ID0gdXAyRC54O1xuXG4gIHZhciBkID0gdmlldzJEdG8zRERTY3JhdGNoO1xuICBkLnggPSBkaXJlY3Rpb24yRC55O1xuICBkLnkgPSBkaXJlY3Rpb24yRC56O1xuICBkLnogPSBkaXJlY3Rpb24yRC54O1xuXG4gIC8vIEluIDJELCB0aGUgY2FtZXJhIGhlaWdodCBpcyBhbHdheXMgMTIuNyBtaWxsaW9uIG1ldGVycy5cbiAgLy8gVGhlIGFwcGFyZW50IGhlaWdodCBpcyBlcXVhbCB0byBoYWxmIHRoZSBmcnVzdHVtIHdpZHRoLlxuICBpZiAobW9kZSA9PT0gU2NlbmVNb2RlLlNDRU5FMkQpIHtcbiAgICBwLnogPSBmcnVzdHVtMkRXaWR0aCAqIDAuNTtcbiAgfVxuXG4gIC8vIENvbXB1dGUgdGhlIGVxdWl2YWxlbnQgY2FtZXJhIHBvc2l0aW9uIGluIHRoZSByZWFsICgzRCkgd29ybGQuXG4gIC8vIEluIDJEIGFuZCBDb2x1bWJ1cyBWaWV3LCB0aGUgY2FtZXJhIGNhbiB0cmF2ZWwgb3V0c2lkZSB0aGUgcHJvamVjdGlvbiwgYW5kIHdoZW4gaXQgZG9lcyBzb1xuICAvLyB0aGVyZSdzIG5vdCByZWFsbHkgYW55IGNvcnJlc3BvbmRpbmcgbG9jYXRpb24gaW4gdGhlIHJlYWwgd29ybGQuICBTbyBjbGFtcCB0aGUgdW5wcm9qZWN0ZWRcbiAgLy8gbG9uZ2l0dWRlIGFuZCBsYXRpdHVkZSB0byB0aGVpciB2YWxpZCByYW5nZXMuXG4gIHZhciBjYXJ0b2dyYXBoaWMgPSBwcm9qZWN0aW9uLnVucHJvamVjdChwLCB2aWV3MkR0bzNEQ2FydG9ncmFwaGljU2NyYXRjaCk7XG4gIGNhcnRvZ3JhcGhpYy5sb25naXR1ZGUgPSBDZXNpdW1NYXRoLmNsYW1wKFxuICAgIGNhcnRvZ3JhcGhpYy5sb25naXR1ZGUsXG4gICAgLU1hdGguUEksXG4gICAgTWF0aC5QSVxuICApO1xuICBjYXJ0b2dyYXBoaWMubGF0aXR1ZGUgPSBDZXNpdW1NYXRoLmNsYW1wKFxuICAgIGNhcnRvZ3JhcGhpYy5sYXRpdHVkZSxcbiAgICAtQ2VzaXVtTWF0aC5QSV9PVkVSX1RXTyxcbiAgICBDZXNpdW1NYXRoLlBJX09WRVJfVFdPXG4gICk7XG4gIHZhciBlbGxpcHNvaWQgPSBwcm9qZWN0aW9uLmVsbGlwc29pZDtcbiAgdmFyIHBvc2l0aW9uM0QgPSBlbGxpcHNvaWQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oXG4gICAgY2FydG9ncmFwaGljLFxuICAgIHZpZXcyRHRvM0RDYXJ0ZXNpYW4zU2NyYXRjaFxuICApO1xuXG4gIC8vIENvbXB1dGUgdGhlIHJvdGF0aW9uIGZyb20gdGhlIGxvY2FsIEVOVSBhdCB0aGUgcmVhbCB3b3JsZCBjYW1lcmEgcG9zaXRpb24gdG8gdGhlIGZpeGVkIGF4ZXMuXG4gIHZhciBlbnVUb0ZpeGVkID0gVHJhbnNmb3Jtcy5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZShcbiAgICBwb3NpdGlvbjNELFxuICAgIGVsbGlwc29pZCxcbiAgICB2aWV3MkR0bzNETWF0cml4NFNjcmF0Y2hcbiAgKTtcblxuICAvLyBUcmFuc2Zvcm0gZWFjaCBjYW1lcmEgZGlyZWN0aW9uIHRvIHRoZSBmaXhlZCBheGVzLlxuICBNYXRyaXg0Lm11bHRpcGx5QnlQb2ludEFzVmVjdG9yKGVudVRvRml4ZWQsIHIsIHIpO1xuICBNYXRyaXg0Lm11bHRpcGx5QnlQb2ludEFzVmVjdG9yKGVudVRvRml4ZWQsIHUsIHUpO1xuICBNYXRyaXg0Lm11bHRpcGx5QnlQb2ludEFzVmVjdG9yKGVudVRvRml4ZWQsIGQsIGQpO1xuXG4gIC8vIENvbXB1dGUgdGhlIHZpZXcgbWF0cml4IGJhc2VkIG9uIHRoZSBuZXcgZml4ZWQtZnJhbWUgY2FtZXJhIHBvc2l0aW9uIGFuZCBkaXJlY3Rpb25zLlxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHJlc3VsdCA9IG5ldyBNYXRyaXg0KCk7XG4gIH1cblxuICByZXN1bHRbMF0gPSByLng7XG4gIHJlc3VsdFsxXSA9IHUueDtcbiAgcmVzdWx0WzJdID0gLWQueDtcbiAgcmVzdWx0WzNdID0gMC4wO1xuICByZXN1bHRbNF0gPSByLnk7XG4gIHJlc3VsdFs1XSA9IHUueTtcbiAgcmVzdWx0WzZdID0gLWQueTtcbiAgcmVzdWx0WzddID0gMC4wO1xuICByZXN1bHRbOF0gPSByLno7XG4gIHJlc3VsdFs5XSA9IHUuejtcbiAgcmVzdWx0WzEwXSA9IC1kLno7XG4gIHJlc3VsdFsxMV0gPSAwLjA7XG4gIHJlc3VsdFsxMl0gPSAtQ2FydGVzaWFuMy5kb3QociwgcG9zaXRpb24zRCk7XG4gIHJlc3VsdFsxM10gPSAtQ2FydGVzaWFuMy5kb3QodSwgcG9zaXRpb24zRCk7XG4gIHJlc3VsdFsxNF0gPSBDYXJ0ZXNpYW4zLmRvdChkLCBwb3NpdGlvbjNEKTtcbiAgcmVzdWx0WzE1XSA9IDEuMDtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiB1cGRhdGVWaWV3M0QodGhhdCkge1xuICBpZiAodGhhdC5fdmlldzNERGlydHkpIHtcbiAgICBpZiAodGhhdC5fbW9kZSA9PT0gU2NlbmVNb2RlLlNDRU5FM0QpIHtcbiAgICAgIE1hdHJpeDQuY2xvbmUodGhhdC5fdmlldywgdGhhdC5fdmlldzNEKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmlldzJEdG8zRChcbiAgICAgICAgdGhhdC5fY2FtZXJhUG9zaXRpb24sXG4gICAgICAgIHRoYXQuX2NhbWVyYURpcmVjdGlvbixcbiAgICAgICAgdGhhdC5fY2FtZXJhUmlnaHQsXG4gICAgICAgIHRoYXQuX2NhbWVyYVVwLFxuICAgICAgICB0aGF0Ll9mcnVzdHVtMkRXaWR0aCxcbiAgICAgICAgdGhhdC5fbW9kZSxcbiAgICAgICAgdGhhdC5fbWFwUHJvamVjdGlvbixcbiAgICAgICAgdGhhdC5fdmlldzNEXG4gICAgICApO1xuICAgIH1cbiAgICBNYXRyaXg0LmdldE1hdHJpeDModGhhdC5fdmlldzNELCB0aGF0Ll92aWV3Um90YXRpb24zRCk7XG4gICAgdGhhdC5fdmlldzNERGlydHkgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiB1cGRhdGVJbnZlcnNlVmlldzNEKHRoYXQpIHtcbiAgaWYgKHRoYXQuX2ludmVyc2VWaWV3M0REaXJ0eSkge1xuICAgIE1hdHJpeDQuaW52ZXJzZVRyYW5zZm9ybWF0aW9uKHRoYXQudmlldzNELCB0aGF0Ll9pbnZlcnNlVmlldzNEKTtcbiAgICBNYXRyaXg0LmdldE1hdHJpeDModGhhdC5faW52ZXJzZVZpZXczRCwgdGhhdC5faW52ZXJzZVZpZXdSb3RhdGlvbjNEKTtcbiAgICB0aGF0Ll9pbnZlcnNlVmlldzNERGlydHkgPSBmYWxzZTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgVW5pZm9ybVN0YXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///79140\n')},18192:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Geometry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82408);\n/* harmony import */ var _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22832);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(99417);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(9407);\n/* harmony import */ var _Buffer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(99095);\n/* harmony import */ var _BufferUsage_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(58597);\n/* harmony import */ var _ContextLimits_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(20521);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction addAttribute(attributes, attribute, index, context) {\n  var hasVertexBuffer = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.vertexBuffer);\n  var hasValue = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.value);\n  var componentsPerAttribute = attribute.value\n    ? attribute.value.length\n    : attribute.componentsPerAttribute;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!hasVertexBuffer && !hasValue) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("attribute must have a vertexBuffer or a value.");\n  }\n  if (hasVertexBuffer && hasValue) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "attribute cannot have both a vertexBuffer and a value.  It must have either a vertexBuffer property defining per-vertex data or a value property defining data for all vertices."\n    );\n  }\n  if (\n    componentsPerAttribute !== 1 &&\n    componentsPerAttribute !== 2 &&\n    componentsPerAttribute !== 3 &&\n    componentsPerAttribute !== 4\n  ) {\n    if (hasValue) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "attribute.value.length must be in the range [1, 4]."\n      );\n    }\n\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "attribute.componentsPerAttribute must be in the range [1, 4]."\n    );\n  }\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.componentDatatype) &&\n    !_Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].validate */ .Z.validate(attribute.componentDatatype)\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "attribute must have a valid componentDatatype or not specify it."\n    );\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.strideInBytes) && attribute.strideInBytes > 255) {\n    // WebGL limit.  Not in GL ES.\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "attribute must have a strideInBytes less than or equal to 255 or not specify it."\n    );\n  }\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.instanceDivisor) &&\n    attribute.instanceDivisor > 0 &&\n    !context.instancedArrays\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("instanced arrays is not supported");\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.instanceDivisor) && attribute.instanceDivisor < 0) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "attribute must have an instanceDivisor greater than or equal to zero"\n    );\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.instanceDivisor) && hasValue) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "attribute cannot have have an instanceDivisor if it is not backed by a buffer"\n    );\n  }\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.instanceDivisor) &&\n    attribute.instanceDivisor > 0 &&\n    attribute.index === 0\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "attribute zero cannot have an instanceDivisor greater than 0"\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  // Shallow copy the attribute; we do not want to copy the vertex buffer.\n  var attr = {\n    index: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.index, index),\n    enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.enabled, true),\n    vertexBuffer: attribute.vertexBuffer,\n    value: hasValue ? attribute.value.slice(0) : undefined,\n    componentsPerAttribute: componentsPerAttribute,\n    componentDatatype: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n      attribute.componentDatatype,\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT\n    ),\n    normalize: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.normalize, false),\n    offsetInBytes: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.offsetInBytes, 0),\n    strideInBytes: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.strideInBytes, 0),\n    instanceDivisor: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.instanceDivisor, 0),\n  };\n\n  if (hasVertexBuffer) {\n    // Common case: vertex buffer for per-vertex data\n    attr.vertexAttrib = function (gl) {\n      var index = this.index;\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer._getBuffer());\n      gl.vertexAttribPointer(\n        index,\n        this.componentsPerAttribute,\n        this.componentDatatype,\n        this.normalize,\n        this.strideInBytes,\n        this.offsetInBytes\n      );\n      gl.enableVertexAttribArray(index);\n      if (this.instanceDivisor > 0) {\n        context.glVertexAttribDivisor(index, this.instanceDivisor);\n        context._vertexAttribDivisors[index] = this.instanceDivisor;\n        context._previousDrawInstanced = true;\n      }\n    };\n\n    attr.disableVertexAttribArray = function (gl) {\n      gl.disableVertexAttribArray(this.index);\n      if (this.instanceDivisor > 0) {\n        context.glVertexAttribDivisor(index, 0);\n      }\n    };\n  } else {\n    // Less common case: value array for the same data for each vertex\n    switch (attr.componentsPerAttribute) {\n      case 1:\n        attr.vertexAttrib = function (gl) {\n          gl.vertexAttrib1fv(this.index, this.value);\n        };\n        break;\n      case 2:\n        attr.vertexAttrib = function (gl) {\n          gl.vertexAttrib2fv(this.index, this.value);\n        };\n        break;\n      case 3:\n        attr.vertexAttrib = function (gl) {\n          gl.vertexAttrib3fv(this.index, this.value);\n        };\n        break;\n      case 4:\n        attr.vertexAttrib = function (gl) {\n          gl.vertexAttrib4fv(this.index, this.value);\n        };\n        break;\n    }\n\n    attr.disableVertexAttribArray = function (gl) {};\n  }\n\n  attributes.push(attr);\n}\n\nfunction bind(gl, attributes, indexBuffer) {\n  for (var i = 0; i < attributes.length; ++i) {\n    var attribute = attributes[i];\n    if (attribute.enabled) {\n      attribute.vertexAttrib(gl);\n    }\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(indexBuffer)) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer._getBuffer());\n  }\n}\n\n/**\n * Creates a vertex array, which defines the attributes making up a vertex, and contains an optional index buffer\n * to select vertices for rendering.  Attributes are defined using object literals as shown in Example 1 below.\n *\n * @param {Object} options Object with the following properties:\n * @param {Context} options.context The context in which the VertexArray gets created.\n * @param {Object[]} options.attributes An array of attributes.\n * @param {IndexBuffer} [options.indexBuffer] An optional index buffer.\n *\n * @returns {VertexArray} The vertex array, ready for use with drawing.\n *\n * @exception {DeveloperError} Attribute must have a <code>vertexBuffer</code>.\n * @exception {DeveloperError} Attribute must have a <code>componentsPerAttribute</code>.\n * @exception {DeveloperError} Attribute must have a valid <code>componentDatatype</code> or not specify it.\n * @exception {DeveloperError} Attribute must have a <code>strideInBytes</code> less than or equal to 255 or not specify it.\n * @exception {DeveloperError} Index n is used by more than one attribute.\n *\n *\n * @example\n * // Example 1. Create a vertex array with vertices made up of three floating point\n * // values, e.g., a position, from a single vertex buffer.  No index buffer is used.\n * var positionBuffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 12,\n *     usage : BufferUsage.STATIC_DRAW\n * });\n * var attributes = [\n *     {\n *         index                  : 0,\n *         enabled                : true,\n *         vertexBuffer           : positionBuffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT,\n *         normalize              : false,\n *         offsetInBytes          : 0,\n *         strideInBytes          : 0 // tightly packed\n *         instanceDivisor        : 0 // not instanced\n *     }\n * ];\n * var va = new VertexArray({\n *     context : context,\n *     attributes : attributes\n * });\n *\n * @example\n * // Example 2. Create a vertex array with vertices from two different vertex buffers.\n * // Each vertex has a three-component position and three-component normal.\n * var positionBuffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 12,\n *     usage : BufferUsage.STATIC_DRAW\n * });\n * var normalBuffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 12,\n *     usage : BufferUsage.STATIC_DRAW\n * });\n * var attributes = [\n *     {\n *         index                  : 0,\n *         vertexBuffer           : positionBuffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT\n *     },\n *     {\n *         index                  : 1,\n *         vertexBuffer           : normalBuffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT\n *     }\n * ];\n * var va = new VertexArray({\n *     context : context,\n *     attributes : attributes\n * });\n *\n * @example\n * // Example 3. Creates the same vertex layout as Example 2 using a single\n * // vertex buffer, instead of two.\n * var buffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 24,\n *     usage : BufferUsage.STATIC_DRAW\n * });\n * var attributes = [\n *     {\n *         vertexBuffer           : buffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT,\n *         offsetInBytes          : 0,\n *         strideInBytes          : 24\n *     },\n *     {\n *         vertexBuffer           : buffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT,\n *         normalize              : true,\n *         offsetInBytes          : 12,\n *         strideInBytes          : 24\n *     }\n * ];\n * var va = new VertexArray({\n *     context : context,\n *     attributes : attributes\n * });\n *\n * @see Buffer#createVertexBuffer\n * @see Buffer#createIndexBuffer\n * @see Context#draw\n *\n * @private\n */\nfunction VertexArray(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("options.context", options.context);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("options.attributes", options.attributes);\n  //>>includeEnd(\'debug\');\n\n  var context = options.context;\n  var gl = context._gl;\n  var attributes = options.attributes;\n  var indexBuffer = options.indexBuffer;\n\n  var i;\n  var vaAttributes = [];\n  var numberOfVertices = 1; // if every attribute is backed by a single value\n  var hasInstancedAttributes = false;\n  var hasConstantAttributes = false;\n\n  var length = attributes.length;\n  for (i = 0; i < length; ++i) {\n    addAttribute(vaAttributes, attributes[i], i, context);\n  }\n\n  length = vaAttributes.length;\n  for (i = 0; i < length; ++i) {\n    var attribute = vaAttributes[i];\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.vertexBuffer) && attribute.instanceDivisor === 0) {\n      // This assumes that each vertex buffer in the vertex array has the same number of vertices.\n      var bytes =\n        attribute.strideInBytes ||\n        attribute.componentsPerAttribute *\n          _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(attribute.componentDatatype);\n      numberOfVertices = attribute.vertexBuffer.sizeInBytes / bytes;\n      break;\n    }\n  }\n\n  for (i = 0; i < length; ++i) {\n    if (vaAttributes[i].instanceDivisor > 0) {\n      hasInstancedAttributes = true;\n    }\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(vaAttributes[i].value)) {\n      hasConstantAttributes = true;\n    }\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  // Verify all attribute names are unique\n  var uniqueIndices = {};\n  for (i = 0; i < length; ++i) {\n    var index = vaAttributes[i].index;\n    if (uniqueIndices[index]) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "Index " + index + " is used by more than one attribute."\n      );\n    }\n    uniqueIndices[index] = true;\n  }\n  //>>includeEnd(\'debug\');\n\n  var vao;\n\n  // Setup VAO if supported\n  if (context.vertexArrayObject) {\n    vao = context.glCreateVertexArray();\n    context.glBindVertexArray(vao);\n    bind(gl, vaAttributes, indexBuffer);\n    context.glBindVertexArray(null);\n  }\n\n  this._numberOfVertices = numberOfVertices;\n  this._hasInstancedAttributes = hasInstancedAttributes;\n  this._hasConstantAttributes = hasConstantAttributes;\n  this._context = context;\n  this._gl = gl;\n  this._vao = vao;\n  this._attributes = vaAttributes;\n  this._indexBuffer = indexBuffer;\n}\n\nfunction computeNumberOfVertices(attribute) {\n  return attribute.values.length / attribute.componentsPerAttribute;\n}\n\nfunction computeAttributeSizeInBytes(attribute) {\n  return (\n    _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(attribute.componentDatatype) *\n    attribute.componentsPerAttribute\n  );\n}\n\nfunction interleaveAttributes(attributes) {\n  var j;\n  var name;\n  var attribute;\n\n  // Extract attribute names.\n  var names = [];\n  for (name in attributes) {\n    // Attribute needs to have per-vertex values; not a constant value for all vertices.\n    if (\n      attributes.hasOwnProperty(name) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attributes[name]) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attributes[name].values)\n    ) {\n      names.push(name);\n\n      if (attributes[name].componentDatatype === _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].DOUBLE */ .Z.DOUBLE) {\n        attributes[name].componentDatatype = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT;\n        attributes[name].values = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].createTypedArray */ .Z.createTypedArray(\n          _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT,\n          attributes[name].values\n        );\n      }\n    }\n  }\n\n  // Validation.  Compute number of vertices.\n  var numberOfVertices;\n  var namesLength = names.length;\n\n  if (namesLength > 0) {\n    numberOfVertices = computeNumberOfVertices(attributes[names[0]]);\n\n    for (j = 1; j < namesLength; ++j) {\n      var currentNumberOfVertices = computeNumberOfVertices(\n        attributes[names[j]]\n      );\n\n      if (currentNumberOfVertices !== numberOfVertices) {\n        throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(\n          "Each attribute list must have the same number of vertices.  " +\n            "Attribute " +\n            names[j] +\n            " has a different number of vertices " +\n            "(" +\n            currentNumberOfVertices.toString() +\n            ")" +\n            " than attribute " +\n            names[0] +\n            " (" +\n            numberOfVertices.toString() +\n            ")."\n        );\n      }\n    }\n  }\n\n  // Sort attributes by the size of their components.  From left to right, a vertex stores floats, shorts, and then bytes.\n  names.sort(function (left, right) {\n    return (\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(attributes[right].componentDatatype) -\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(attributes[left].componentDatatype)\n    );\n  });\n\n  // Compute sizes and strides.\n  var vertexSizeInBytes = 0;\n  var offsetsInBytes = {};\n\n  for (j = 0; j < namesLength; ++j) {\n    name = names[j];\n    attribute = attributes[name];\n\n    offsetsInBytes[name] = vertexSizeInBytes;\n    vertexSizeInBytes += computeAttributeSizeInBytes(attribute);\n  }\n\n  if (vertexSizeInBytes > 0) {\n    // Pad each vertex to be a multiple of the largest component datatype so each\n    // attribute can be addressed using typed arrays.\n    var maxComponentSizeInBytes = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(\n      attributes[names[0]].componentDatatype\n    ); // Sorted large to small\n    var remainder = vertexSizeInBytes % maxComponentSizeInBytes;\n    if (remainder !== 0) {\n      vertexSizeInBytes += maxComponentSizeInBytes - remainder;\n    }\n\n    // Total vertex buffer size in bytes, including per-vertex padding.\n    var vertexBufferSizeInBytes = numberOfVertices * vertexSizeInBytes;\n\n    // Create array for interleaved vertices.  Each attribute has a different view (pointer) into the array.\n    var buffer = new ArrayBuffer(vertexBufferSizeInBytes);\n    var views = {};\n\n    for (j = 0; j < namesLength; ++j) {\n      name = names[j];\n      var sizeInBytes = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(\n        attributes[name].componentDatatype\n      );\n\n      views[name] = {\n        pointer: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].createTypedArray */ .Z.createTypedArray(\n          attributes[name].componentDatatype,\n          buffer\n        ),\n        index: offsetsInBytes[name] / sizeInBytes, // Offset in ComponentType\n        strideInComponentType: vertexSizeInBytes / sizeInBytes,\n      };\n    }\n\n    // Copy attributes into one interleaved array.\n    // PERFORMANCE_IDEA:  Can we optimize these loops?\n    for (j = 0; j < numberOfVertices; ++j) {\n      for (var n = 0; n < namesLength; ++n) {\n        name = names[n];\n        attribute = attributes[name];\n        var values = attribute.values;\n        var view = views[name];\n        var pointer = view.pointer;\n\n        var numberOfComponents = attribute.componentsPerAttribute;\n        for (var k = 0; k < numberOfComponents; ++k) {\n          pointer[view.index + k] = values[j * numberOfComponents + k];\n        }\n\n        view.index += view.strideInComponentType;\n      }\n    }\n\n    return {\n      buffer: buffer,\n      offsetsInBytes: offsetsInBytes,\n      vertexSizeInBytes: vertexSizeInBytes,\n    };\n  }\n\n  // No attributes to interleave.\n  return undefined;\n}\n\n/**\n * Creates a vertex array from a geometry.  A geometry contains vertex attributes and optional index data\n * in system memory, whereas a vertex array contains vertex buffers and an optional index buffer in WebGL\n * memory for use with rendering.\n * <br /><br />\n * The <code>geometry</code> argument should use the standard layout like the geometry returned by {@link BoxGeometry}.\n * <br /><br />\n * <code>options</code> can have four properties:\n * <ul>\n *   <li><code>geometry</code>:  The source geometry containing data used to create the vertex array.</li>\n *   <li><code>attributeLocations</code>:  An object that maps geometry attribute names to vertex shader attribute locations.</li>\n *   <li><code>bufferUsage</code>:  The expected usage pattern of the vertex array\'s buffers.  On some WebGL implementations, this can significantly affect performance.  See {@link BufferUsage}.  Default: <code>BufferUsage.DYNAMIC_DRAW</code>.</li>\n *   <li><code>interleave</code>:  Determines if all attributes are interleaved in a single vertex buffer or if each attribute is stored in a separate vertex buffer.  Default: <code>false</code>.</li>\n * </ul>\n * <br />\n * If <code>options</code> is not specified or the <code>geometry</code> contains no data, the returned vertex array is empty.\n *\n * @param {Object} options An object defining the geometry, attribute indices, buffer usage, and vertex layout used to create the vertex array.\n *\n * @exception {RuntimeError} Each attribute list must have the same number of vertices.\n * @exception {DeveloperError} The geometry must have zero or one index lists.\n * @exception {DeveloperError} Index n is used by more than one attribute.\n *\n *\n * @example\n * // Example 1. Creates a vertex array for rendering a box.  The default dynamic draw\n * // usage is used for the created vertex and index buffer.  The attributes are not\n * // interleaved by default.\n * var geometry = new BoxGeometry();\n * var va = VertexArray.fromGeometry({\n *     context            : context,\n *     geometry           : geometry,\n *     attributeLocations : GeometryPipeline.createAttributeLocations(geometry),\n * });\n *\n * @example\n * // Example 2. Creates a vertex array with interleaved attributes in a\n * // single vertex buffer.  The vertex and index buffer have static draw usage.\n * var va = VertexArray.fromGeometry({\n *     context            : context,\n *     geometry           : geometry,\n *     attributeLocations : GeometryPipeline.createAttributeLocations(geometry),\n *     bufferUsage        : BufferUsage.STATIC_DRAW,\n *     interleave         : true\n * });\n *\n * @example\n * // Example 3.  When the caller destroys the vertex array, it also destroys the\n * // attached vertex buffer(s) and index buffer.\n * va = va.destroy();\n *\n * @see Buffer#createVertexBuffer\n * @see Buffer#createIndexBuffer\n * @see GeometryPipeline.createAttributeLocations\n * @see ShaderProgram\n */\nVertexArray.fromGeometry = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("options.context", options.context);\n  //>>includeEnd(\'debug\');\n\n  var context = options.context;\n  var geometry = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.geometry, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var bufferUsage = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.bufferUsage, _BufferUsage_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].DYNAMIC_DRAW */ .Z.DYNAMIC_DRAW);\n\n  var attributeLocations = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.attributeLocations,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  );\n  var interleave = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.interleave, false);\n  var createdVAAttributes = options.vertexArrayAttributes;\n\n  var name;\n  var attribute;\n  var vertexBuffer;\n  var vaAttributes = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(createdVAAttributes) ? createdVAAttributes : [];\n  var attributes = geometry.attributes;\n\n  if (interleave) {\n    // Use a single vertex buffer with interleaved vertices.\n    var interleavedAttributes = interleaveAttributes(attributes);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(interleavedAttributes)) {\n      vertexBuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n        context: context,\n        typedArray: interleavedAttributes.buffer,\n        usage: bufferUsage,\n      });\n      var offsetsInBytes = interleavedAttributes.offsetsInBytes;\n      var strideInBytes = interleavedAttributes.vertexSizeInBytes;\n\n      for (name in attributes) {\n        if (attributes.hasOwnProperty(name) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attributes[name])) {\n          attribute = attributes[name];\n\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.values)) {\n            // Common case: per-vertex attributes\n            vaAttributes.push({\n              index: attributeLocations[name],\n              vertexBuffer: vertexBuffer,\n              componentDatatype: attribute.componentDatatype,\n              componentsPerAttribute: attribute.componentsPerAttribute,\n              normalize: attribute.normalize,\n              offsetInBytes: offsetsInBytes[name],\n              strideInBytes: strideInBytes,\n            });\n          } else {\n            // Constant attribute for all vertices\n            vaAttributes.push({\n              index: attributeLocations[name],\n              value: attribute.value,\n              componentDatatype: attribute.componentDatatype,\n              normalize: attribute.normalize,\n            });\n          }\n        }\n      }\n    }\n  } else {\n    // One vertex buffer per attribute.\n    for (name in attributes) {\n      if (attributes.hasOwnProperty(name) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attributes[name])) {\n        attribute = attributes[name];\n\n        var componentDatatype = attribute.componentDatatype;\n        if (componentDatatype === _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].DOUBLE */ .Z.DOUBLE) {\n          componentDatatype = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT;\n        }\n\n        vertexBuffer = undefined;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.values)) {\n          vertexBuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n            context: context,\n            typedArray: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].createTypedArray */ .Z.createTypedArray(\n              componentDatatype,\n              attribute.values\n            ),\n            usage: bufferUsage,\n          });\n        }\n\n        vaAttributes.push({\n          index: attributeLocations[name],\n          vertexBuffer: vertexBuffer,\n          value: attribute.value,\n          componentDatatype: componentDatatype,\n          componentsPerAttribute: attribute.componentsPerAttribute,\n          normalize: attribute.normalize,\n        });\n      }\n    }\n  }\n\n  var indexBuffer;\n  var indices = geometry.indices;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(indices)) {\n    if (\n      _Core_Geometry_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].computeNumberOfVertices */ .Z.computeNumberOfVertices(geometry) >=\n        _Core_Math_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].SIXTY_FOUR_KILOBYTES */ .Z.SIXTY_FOUR_KILOBYTES &&\n      context.elementIndexUint\n    ) {\n      indexBuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].createIndexBuffer */ .Z.createIndexBuffer({\n        context: context,\n        typedArray: new Uint32Array(indices),\n        usage: bufferUsage,\n        indexDatatype: _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n      });\n    } else {\n      indexBuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].createIndexBuffer */ .Z.createIndexBuffer({\n        context: context,\n        typedArray: new Uint16Array(indices),\n        usage: bufferUsage,\n        indexDatatype: _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n      });\n    }\n  }\n\n  return new VertexArray({\n    context: context,\n    attributes: vaAttributes,\n    indexBuffer: indexBuffer,\n  });\n};\n\nObject.defineProperties(VertexArray.prototype, {\n  numberOfAttributes: {\n    get: function () {\n      return this._attributes.length;\n    },\n  },\n  numberOfVertices: {\n    get: function () {\n      return this._numberOfVertices;\n    },\n  },\n  indexBuffer: {\n    get: function () {\n      return this._indexBuffer;\n    },\n  },\n});\n\n/**\n * index is the location in the array of attributes, not the index property of an attribute.\n */\nVertexArray.prototype.getAttribute = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("index", index);\n  //>>includeEnd(\'debug\');\n\n  return this._attributes[index];\n};\n\n// Workaround for ANGLE, where the attribute divisor seems to be part of the global state instead\n// of the VAO state. This function is called when the vao is bound, and should be removed\n// once the ANGLE issue is resolved. Setting the divisor should normally happen in vertexAttrib and\n// disableVertexAttribArray.\nfunction setVertexAttribDivisor(vertexArray) {\n  var context = vertexArray._context;\n  var hasInstancedAttributes = vertexArray._hasInstancedAttributes;\n  if (!hasInstancedAttributes && !context._previousDrawInstanced) {\n    return;\n  }\n  context._previousDrawInstanced = hasInstancedAttributes;\n\n  var divisors = context._vertexAttribDivisors;\n  var attributes = vertexArray._attributes;\n  var maxAttributes = _ContextLimits_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].maximumVertexAttributes */ .Z.maximumVertexAttributes;\n  var i;\n\n  if (hasInstancedAttributes) {\n    var length = attributes.length;\n    for (i = 0; i < length; ++i) {\n      var attribute = attributes[i];\n      if (attribute.enabled) {\n        var divisor = attribute.instanceDivisor;\n        var index = attribute.index;\n        if (divisor !== divisors[index]) {\n          context.glVertexAttribDivisor(index, divisor);\n          divisors[index] = divisor;\n        }\n      }\n    }\n  } else {\n    for (i = 0; i < maxAttributes; ++i) {\n      if (divisors[i] > 0) {\n        context.glVertexAttribDivisor(i, 0);\n        divisors[i] = 0;\n      }\n    }\n  }\n}\n\n// Vertex attributes backed by a constant value go through vertexAttrib[1234]f[v]\n// which is part of context state rather than VAO state.\nfunction setConstantAttributes(vertexArray, gl) {\n  var attributes = vertexArray._attributes;\n  var length = attributes.length;\n  for (var i = 0; i < length; ++i) {\n    var attribute = attributes[i];\n    if (attribute.enabled && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(attribute.value)) {\n      attribute.vertexAttrib(gl);\n    }\n  }\n}\n\nVertexArray.prototype._bind = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(this._vao)) {\n    this._context.glBindVertexArray(this._vao);\n    if (this._context.instancedArrays) {\n      setVertexAttribDivisor(this);\n    }\n    if (this._hasConstantAttributes) {\n      setConstantAttributes(this, this._gl);\n    }\n  } else {\n    bind(this._gl, this._attributes, this._indexBuffer);\n  }\n};\n\nVertexArray.prototype._unBind = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(this._vao)) {\n    this._context.glBindVertexArray(null);\n  } else {\n    var attributes = this._attributes;\n    var gl = this._gl;\n\n    for (var i = 0; i < attributes.length; ++i) {\n      var attribute = attributes[i];\n      if (attribute.enabled) {\n        attribute.disableVertexAttribArray(gl);\n      }\n    }\n    if (this._indexBuffer) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n  }\n};\n\nVertexArray.prototype.isDestroyed = function () {\n  return false;\n};\n\nVertexArray.prototype.destroy = function () {\n  var attributes = this._attributes;\n  for (var i = 0; i < attributes.length; ++i) {\n    var vertexBuffer = attributes[i].vertexBuffer;\n    if (\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(vertexBuffer) &&\n      !vertexBuffer.isDestroyed() &&\n      vertexBuffer.vertexArrayDestroyable\n    ) {\n      vertexBuffer.destroy();\n    }\n  }\n\n  var indexBuffer = this._indexBuffer;\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(indexBuffer) &&\n    !indexBuffer.isDestroyed() &&\n    indexBuffer.vertexArrayDestroyable\n  ) {\n    indexBuffer.destroy();\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(this._vao)) {\n    this._context.glDeleteVertexArray(this._vao);\n  }\n\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (VertexArray);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///18192\n')},52851:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(99417);\n/* harmony import */ var _Buffer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(99095);\n/* harmony import */ var _BufferUsage_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(58597);\n/* harmony import */ var _VertexArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18192);\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nfunction VertexArrayFacade(context, attributes, sizeInVertices, instanced) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("context", context);\n  if (!attributes || attributes.length === 0) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("At least one attribute is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  var attrs = VertexArrayFacade._verifyAttributes(attributes);\n  sizeInVertices = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(sizeInVertices, 0);\n  var precreatedAttributes = [];\n  var attributesByUsage = {};\n  var attributesForUsage;\n  var usage;\n\n  // Bucket the attributes by usage.\n  var length = attrs.length;\n  for (var i = 0; i < length; ++i) {\n    var attribute = attrs[i];\n\n    // If the attribute already has a vertex buffer, we do not need\n    // to manage a vertex buffer or typed array for it.\n    if (attribute.vertexBuffer) {\n      precreatedAttributes.push(attribute);\n      continue;\n    }\n\n    usage = attribute.usage;\n    attributesForUsage = attributesByUsage[usage];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(attributesForUsage)) {\n      attributesForUsage = attributesByUsage[usage] = [];\n    }\n\n    attributesForUsage.push(attribute);\n  }\n\n  // A function to sort attributes by the size of their components.  From left to right, a vertex\n  // stores floats, shorts, and then bytes.\n  function compare(left, right) {\n    return (\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(right.componentDatatype) -\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(left.componentDatatype)\n    );\n  }\n\n  this._allBuffers = [];\n\n  for (usage in attributesByUsage) {\n    if (attributesByUsage.hasOwnProperty(usage)) {\n      attributesForUsage = attributesByUsage[usage];\n\n      attributesForUsage.sort(compare);\n      var vertexSizeInBytes = VertexArrayFacade._vertexSizeInBytes(\n        attributesForUsage\n      );\n\n      var bufferUsage = attributesForUsage[0].usage;\n\n      var buffer = {\n        vertexSizeInBytes: vertexSizeInBytes,\n        vertexBuffer: undefined,\n        usage: bufferUsage,\n        needsCommit: false,\n        arrayBuffer: undefined,\n        arrayViews: VertexArrayFacade._createArrayViews(\n          attributesForUsage,\n          vertexSizeInBytes\n        ),\n      };\n\n      this._allBuffers.push(buffer);\n    }\n  }\n\n  this._size = 0;\n  this._instanced = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(instanced, false);\n\n  this._precreated = precreatedAttributes;\n  this._context = context;\n\n  this.writers = undefined;\n  this.va = undefined;\n\n  this.resize(sizeInVertices);\n}\nVertexArrayFacade._verifyAttributes = function (attributes) {\n  var attrs = [];\n\n  for (var i = 0; i < attributes.length; ++i) {\n    var attribute = attributes[i];\n\n    var attr = {\n      index: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.index, i),\n      enabled: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.enabled, true),\n      componentsPerAttribute: attribute.componentsPerAttribute,\n      componentDatatype: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n        attribute.componentDatatype,\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].FLOAT */ .Z.FLOAT\n      ),\n      normalize: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.normalize, false),\n\n      // There will be either a vertexBuffer or an [optional] usage.\n      vertexBuffer: attribute.vertexBuffer,\n      usage: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(attribute.usage, _BufferUsage_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW),\n    };\n    attrs.push(attr);\n\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (\n      attr.componentsPerAttribute !== 1 &&\n      attr.componentsPerAttribute !== 2 &&\n      attr.componentsPerAttribute !== 3 &&\n      attr.componentsPerAttribute !== 4\n    ) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "attribute.componentsPerAttribute must be in the range [1, 4]."\n      );\n    }\n\n    var datatype = attr.componentDatatype;\n    if (!_Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].validate */ .Z.validate(datatype)) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "Attribute must have a valid componentDatatype or not specify it."\n      );\n    }\n\n    if (!_BufferUsage_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].validate */ .Z.validate(attr.usage)) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "Attribute must have a valid usage or not specify it."\n      );\n    }\n    //>>includeEnd(\'debug\');\n  }\n\n  // Verify all attribute names are unique.\n  var uniqueIndices = new Array(attrs.length);\n  for (var j = 0; j < attrs.length; ++j) {\n    var currentAttr = attrs[j];\n    var index = currentAttr.index;\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (uniqueIndices[index]) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n        "Index " + index + " is used by more than one attribute."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    uniqueIndices[index] = true;\n  }\n\n  return attrs;\n};\n\nVertexArrayFacade._vertexSizeInBytes = function (attributes) {\n  var sizeInBytes = 0;\n\n  var length = attributes.length;\n  for (var i = 0; i < length; ++i) {\n    var attribute = attributes[i];\n    sizeInBytes +=\n      attribute.componentsPerAttribute *\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(attribute.componentDatatype);\n  }\n\n  var maxComponentSizeInBytes =\n    length > 0\n      ? _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(attributes[0].componentDatatype)\n      : 0; // Sorted by size\n  var remainder =\n    maxComponentSizeInBytes > 0 ? sizeInBytes % maxComponentSizeInBytes : 0;\n  var padding = remainder === 0 ? 0 : maxComponentSizeInBytes - remainder;\n  sizeInBytes += padding;\n\n  return sizeInBytes;\n};\n\nVertexArrayFacade._createArrayViews = function (attributes, vertexSizeInBytes) {\n  var views = [];\n  var offsetInBytes = 0;\n\n  var length = attributes.length;\n  for (var i = 0; i < length; ++i) {\n    var attribute = attributes[i];\n    var componentDatatype = attribute.componentDatatype;\n\n    views.push({\n      index: attribute.index,\n      enabled: attribute.enabled,\n      componentsPerAttribute: attribute.componentsPerAttribute,\n      componentDatatype: componentDatatype,\n      normalize: attribute.normalize,\n\n      offsetInBytes: offsetInBytes,\n      vertexSizeInComponentType:\n        vertexSizeInBytes / _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(componentDatatype),\n\n      view: undefined,\n    });\n\n    offsetInBytes +=\n      attribute.componentsPerAttribute *\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(componentDatatype);\n  }\n\n  return views;\n};\n\n/**\n * Invalidates writers.  Can\'t render again until commit is called.\n */\nVertexArrayFacade.prototype.resize = function (sizeInVertices) {\n  this._size = sizeInVertices;\n\n  var allBuffers = this._allBuffers;\n  this.writers = [];\n\n  for (var i = 0, len = allBuffers.length; i < len; ++i) {\n    var buffer = allBuffers[i];\n\n    VertexArrayFacade._resize(buffer, this._size);\n\n    // Reserving invalidates the writers, so if client\'s cache them, they need to invalidate their cache.\n    VertexArrayFacade._appendWriters(this.writers, buffer);\n  }\n\n  // VAs are recreated next time commit is called.\n  destroyVA(this);\n};\n\nVertexArrayFacade._resize = function (buffer, size) {\n  if (buffer.vertexSizeInBytes > 0) {\n    // Create larger array buffer\n    var arrayBuffer = new ArrayBuffer(size * buffer.vertexSizeInBytes);\n\n    // Copy contents from previous array buffer\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(buffer.arrayBuffer)) {\n      var destView = new Uint8Array(arrayBuffer);\n      var sourceView = new Uint8Array(buffer.arrayBuffer);\n      var sourceLength = sourceView.length;\n      for (var j = 0; j < sourceLength; ++j) {\n        destView[j] = sourceView[j];\n      }\n    }\n\n    // Create typed views into the new array buffer\n    var views = buffer.arrayViews;\n    var length = views.length;\n    for (var i = 0; i < length; ++i) {\n      var view = views[i];\n      view.view = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].createArrayBufferView */ .Z.createArrayBufferView(\n        view.componentDatatype,\n        arrayBuffer,\n        view.offsetInBytes\n      );\n    }\n\n    buffer.arrayBuffer = arrayBuffer;\n  }\n};\n\nvar createWriters = [\n  // 1 component per attribute\n  function (buffer, view, vertexSizeInComponentType) {\n    return function (index, attribute) {\n      view[index * vertexSizeInComponentType] = attribute;\n      buffer.needsCommit = true;\n    };\n  },\n\n  // 2 component per attribute\n  function (buffer, view, vertexSizeInComponentType) {\n    return function (index, component0, component1) {\n      var i = index * vertexSizeInComponentType;\n      view[i] = component0;\n      view[i + 1] = component1;\n      buffer.needsCommit = true;\n    };\n  },\n\n  // 3 component per attribute\n  function (buffer, view, vertexSizeInComponentType) {\n    return function (index, component0, component1, component2) {\n      var i = index * vertexSizeInComponentType;\n      view[i] = component0;\n      view[i + 1] = component1;\n      view[i + 2] = component2;\n      buffer.needsCommit = true;\n    };\n  },\n\n  // 4 component per attribute\n  function (buffer, view, vertexSizeInComponentType) {\n    return function (index, component0, component1, component2, component3) {\n      var i = index * vertexSizeInComponentType;\n      view[i] = component0;\n      view[i + 1] = component1;\n      view[i + 2] = component2;\n      view[i + 3] = component3;\n      buffer.needsCommit = true;\n    };\n  },\n];\n\nVertexArrayFacade._appendWriters = function (writers, buffer) {\n  var arrayViews = buffer.arrayViews;\n  var length = arrayViews.length;\n  for (var i = 0; i < length; ++i) {\n    var arrayView = arrayViews[i];\n    writers[arrayView.index] = createWriters[\n      arrayView.componentsPerAttribute - 1\n    ](buffer, arrayView.view, arrayView.vertexSizeInComponentType);\n  }\n};\n\nVertexArrayFacade.prototype.commit = function (indexBuffer) {\n  var recreateVA = false;\n\n  var allBuffers = this._allBuffers;\n  var buffer;\n  var i;\n  var length;\n\n  for (i = 0, length = allBuffers.length; i < length; ++i) {\n    buffer = allBuffers[i];\n    recreateVA = commit(this, buffer) || recreateVA;\n  }\n\n  ///////////////////////////////////////////////////////////////////////\n\n  if (recreateVA || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this.va)) {\n    destroyVA(this);\n    var va = (this.va = []);\n\n    var chunkSize = _Core_Math_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].SIXTY_FOUR_KILOBYTES */ .Z.SIXTY_FOUR_KILOBYTES - 4; // The 65535 index is reserved for primitive restart. Reserve the last 4 indices so that billboard quads are not broken up.\n    var numberOfVertexArrays =\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(indexBuffer) && !this._instanced\n        ? Math.ceil(this._size / chunkSize)\n        : 1;\n    for (var k = 0; k < numberOfVertexArrays; ++k) {\n      var attributes = [];\n      for (i = 0, length = allBuffers.length; i < length; ++i) {\n        buffer = allBuffers[i];\n        var offset = k * (buffer.vertexSizeInBytes * chunkSize);\n        VertexArrayFacade._appendAttributes(\n          attributes,\n          buffer,\n          offset,\n          this._instanced\n        );\n      }\n\n      attributes = attributes.concat(this._precreated);\n\n      va.push({\n        va: new _VertexArray_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n          context: this._context,\n          attributes: attributes,\n          indexBuffer: indexBuffer,\n        }),\n        indicesCount:\n          1.5 *\n          (k !== numberOfVertexArrays - 1 ? chunkSize : this._size % chunkSize),\n        // TODO: not hardcode 1.5, this assumes 6 indices per 4 vertices (as for Billboard quads).\n      });\n    }\n  }\n};\n\nfunction commit(vertexArrayFacade, buffer) {\n  if (buffer.needsCommit && buffer.vertexSizeInBytes > 0) {\n    buffer.needsCommit = false;\n\n    var vertexBuffer = buffer.vertexBuffer;\n    var vertexBufferSizeInBytes =\n      vertexArrayFacade._size * buffer.vertexSizeInBytes;\n    var vertexBufferDefined = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(vertexBuffer);\n    if (\n      !vertexBufferDefined ||\n      vertexBuffer.sizeInBytes < vertexBufferSizeInBytes\n    ) {\n      if (vertexBufferDefined) {\n        vertexBuffer.destroy();\n      }\n      buffer.vertexBuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n        context: vertexArrayFacade._context,\n        typedArray: buffer.arrayBuffer,\n        usage: buffer.usage,\n      });\n      buffer.vertexBuffer.vertexArrayDestroyable = false;\n\n      return true; // Created new vertex buffer\n    }\n\n    buffer.vertexBuffer.copyFromArrayView(buffer.arrayBuffer);\n  }\n\n  return false; // Did not create new vertex buffer\n}\n\nVertexArrayFacade._appendAttributes = function (\n  attributes,\n  buffer,\n  vertexBufferOffset,\n  instanced\n) {\n  var arrayViews = buffer.arrayViews;\n  var length = arrayViews.length;\n  for (var i = 0; i < length; ++i) {\n    var view = arrayViews[i];\n\n    attributes.push({\n      index: view.index,\n      enabled: view.enabled,\n      componentsPerAttribute: view.componentsPerAttribute,\n      componentDatatype: view.componentDatatype,\n      normalize: view.normalize,\n      vertexBuffer: buffer.vertexBuffer,\n      offsetInBytes: vertexBufferOffset + view.offsetInBytes,\n      strideInBytes: buffer.vertexSizeInBytes,\n      instanceDivisor: instanced ? 1 : 0,\n    });\n  }\n};\n\nVertexArrayFacade.prototype.subCommit = function (\n  offsetInVertices,\n  lengthInVertices\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (offsetInVertices < 0 || offsetInVertices >= this._size) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "offsetInVertices must be greater than or equal to zero and less than the vertex array size."\n    );\n  }\n  if (offsetInVertices + lengthInVertices > this._size) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z(\n      "offsetInVertices + lengthInVertices cannot exceed the vertex array size."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var allBuffers = this._allBuffers;\n  for (var i = 0, len = allBuffers.length; i < len; ++i) {\n    subCommit(allBuffers[i], offsetInVertices, lengthInVertices);\n  }\n};\n\nfunction subCommit(buffer, offsetInVertices, lengthInVertices) {\n  if (buffer.needsCommit && buffer.vertexSizeInBytes > 0) {\n    var byteOffset = buffer.vertexSizeInBytes * offsetInVertices;\n    var byteLength = buffer.vertexSizeInBytes * lengthInVertices;\n\n    // PERFORMANCE_IDEA: If we want to get really crazy, we could consider updating\n    // individual attributes instead of the entire (sub-)vertex.\n    //\n    // PERFORMANCE_IDEA: Does creating the typed view add too much GC overhead?\n    buffer.vertexBuffer.copyFromArrayView(\n      new Uint8Array(buffer.arrayBuffer, byteOffset, byteLength),\n      byteOffset\n    );\n  }\n}\n\nVertexArrayFacade.prototype.endSubCommits = function () {\n  var allBuffers = this._allBuffers;\n\n  for (var i = 0, len = allBuffers.length; i < len; ++i) {\n    allBuffers[i].needsCommit = false;\n  }\n};\n\nfunction destroyVA(vertexArrayFacade) {\n  var va = vertexArrayFacade.va;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(va)) {\n    return;\n  }\n\n  var length = va.length;\n  for (var i = 0; i < length; ++i) {\n    va[i].va.destroy();\n  }\n\n  vertexArrayFacade.va = undefined;\n}\n\nVertexArrayFacade.prototype.isDestroyed = function () {\n  return false;\n};\n\nVertexArrayFacade.prototype.destroy = function () {\n  var allBuffers = this._allBuffers;\n  for (var i = 0, len = allBuffers.length; i < len; ++i) {\n    var buffer = allBuffers[i];\n    buffer.vertexBuffer = buffer.vertexBuffer && buffer.vertexBuffer.destroy();\n  }\n\n  destroyVA(this);\n\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (VertexArrayFacade);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///52851\n')}}]);