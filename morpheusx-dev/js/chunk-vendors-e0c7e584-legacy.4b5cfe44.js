"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[1282],{51867:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Describes a renderable batch of geometry.\n *\n * @alias Vector3DTileBatch\n * @constructor\n *\n * @param {Object} options An object with the following properties:\n * @param {Number} options.offset The offset of the batch into the indices buffer.\n * @param {Number} options.count The number of indices in the batch.\n * @param {Color} options.color The color of the geometry in the batch.\n * @param {Number[]} options.batchIds An array where each element is the batch id of the geometry in the batch.\n *\n * @private\n */\nfunction Vector3DTileBatch(options) {\n  /**\n   * The offset of the batch into the indices buffer.\n   * @type {Number}\n   */\n  this.offset = options.offset;\n  /**\n   * The number of indices in the batch.\n   * @type {Number}\n   */\n  this.count = options.count;\n  /**\n   * The color of the geometry in the batch.\n   * @type {Color}\n   */\n  this.color = options.color;\n  /**\n   * An array where each element is the batch id of the geometry in the batch.\n   * @type {Number[]}\n   */\n  this.batchIds = options.batchIds;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (Vector3DTileBatch);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTE4NjcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EseURBQWUsaUJBQWlCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvU2NlbmUvVmVjdG9yM0RUaWxlQmF0Y2guanM/NmU5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlc2NyaWJlcyBhIHJlbmRlcmFibGUgYmF0Y2ggb2YgZ2VvbWV0cnkuXG4gKlxuICogQGFsaWFzIFZlY3RvcjNEVGlsZUJhdGNoXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBBbiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5vZmZzZXQgVGhlIG9mZnNldCBvZiB0aGUgYmF0Y2ggaW50byB0aGUgaW5kaWNlcyBidWZmZXIuXG4gKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5jb3VudCBUaGUgbnVtYmVyIG9mIGluZGljZXMgaW4gdGhlIGJhdGNoLlxuICogQHBhcmFtIHtDb2xvcn0gb3B0aW9ucy5jb2xvciBUaGUgY29sb3Igb2YgdGhlIGdlb21ldHJ5IGluIHRoZSBiYXRjaC5cbiAqIEBwYXJhbSB7TnVtYmVyW119IG9wdGlvbnMuYmF0Y2hJZHMgQW4gYXJyYXkgd2hlcmUgZWFjaCBlbGVtZW50IGlzIHRoZSBiYXRjaCBpZCBvZiB0aGUgZ2VvbWV0cnkgaW4gdGhlIGJhdGNoLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIFZlY3RvcjNEVGlsZUJhdGNoKG9wdGlvbnMpIHtcbiAgLyoqXG4gICAqIFRoZSBvZmZzZXQgb2YgdGhlIGJhdGNoIGludG8gdGhlIGluZGljZXMgYnVmZmVyLlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgdGhpcy5vZmZzZXQgPSBvcHRpb25zLm9mZnNldDtcbiAgLyoqXG4gICAqIFRoZSBudW1iZXIgb2YgaW5kaWNlcyBpbiB0aGUgYmF0Y2guXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICB0aGlzLmNvdW50ID0gb3B0aW9ucy5jb3VudDtcbiAgLyoqXG4gICAqIFRoZSBjb2xvciBvZiB0aGUgZ2VvbWV0cnkgaW4gdGhlIGJhdGNoLlxuICAgKiBAdHlwZSB7Q29sb3J9XG4gICAqL1xuICB0aGlzLmNvbG9yID0gb3B0aW9ucy5jb2xvcjtcbiAgLyoqXG4gICAqIEFuIGFycmF5IHdoZXJlIGVhY2ggZWxlbWVudCBpcyB0aGUgYmF0Y2ggaWQgb2YgdGhlIGdlb21ldHJ5IGluIHRoZSBiYXRjaC5cbiAgICogQHR5cGUge051bWJlcltdfVxuICAgKi9cbiAgdGhpcy5iYXRjaElkcyA9IG9wdGlvbnMuYmF0Y2hJZHM7XG59XG5leHBvcnQgZGVmYXVsdCBWZWN0b3IzRFRpbGVCYXRjaDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///51867\n')},42261:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_ApproximateTerrainHeights_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(53773);\n/* harmony import */ var _Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68591);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(59947);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(86511);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(50491);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(96037);\n/* harmony import */ var _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(22832);\n/* harmony import */ var _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(25405);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(96190);\n/* harmony import */ var _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(2819);\n/* harmony import */ var _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(99095);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(46588);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(18192);\n/* harmony import */ var _Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(94373);\n/* harmony import */ var _Shaders_Vector3DTileClampedPolylinesVS_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(65493);\n/* harmony import */ var _Shaders_Vector3DTileClampedPolylinesFS_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(74532);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(13222);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(13633);\n/* harmony import */ var _Cesium3DTileFeature_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(52381);\n/* harmony import */ var _ClassificationType_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(73001);\n/* harmony import */ var _CullFace_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(71593);\n/* harmony import */ var _StencilConstants_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(87233);\n/* harmony import */ var _StencilFunction_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(77053);\n/* harmony import */ var _StencilOperation_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(81255);\n/* harmony import */ var _Vector3DTilePolylines_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(6220);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Creates a batch of polylines as volumes with shader-adjustable width.\n *\n * @alias Vector3DTileClampedPolylines\n * @constructor\n *\n * @param {Object} options An object with following properties:\n * @param {Uint16Array} options.positions The positions of the polylines\n * @param {Uint32Array} options.counts The number or positions in the each polyline.\n * @param {Uint16Array} options.widths The width of each polyline.\n * @param {Number} options.minimumHeight The minimum height of the tile\'s region.\n * @param {Number} options.maximumHeight The maximum height of the tile\'s region.\n * @param {Rectangle} options.rectangle The rectangle containing the tile.\n * @param {Cartesian3} [options.center=Cartesian3.ZERO] The RTC center.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched polylines.\n * @param {Uint16Array} options.batchIds The batch ids for each polyline.\n * @param {ClassificationType} options.classificationType The classification type.\n * @param {Boolean} options.keepDecodedPositions Whether to keep decoded positions in memory.\n *\n * @private\n */\nfunction Vector3DTileClampedPolylines(options) {\n  // these arrays hold data from the tile payload\n  // and are all released after the first update.\n  this._positions = options.positions;\n  this._widths = options.widths;\n  this._counts = options.counts;\n  this._batchIds = options.batchIds;\n\n  this._ellipsoid = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options.ellipsoid, _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].WGS84 */ .Z.WGS84);\n  this._minimumHeight = options.minimumHeight;\n  this._maximumHeight = options.maximumHeight;\n  this._center = options.center;\n  this._rectangle = options.rectangle;\n\n  this._batchTable = options.batchTable;\n\n  this._va = undefined;\n  this._sp = undefined;\n  this._rs = undefined;\n  this._uniformMap = undefined;\n  this._command = undefined;\n\n  this._transferrableBatchIds = undefined;\n  this._packedBuffer = undefined;\n  this._minimumMaximumVectorHeights = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n    _Core_ApproximateTerrainHeights_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"]._defaultMinTerrainHeight */ .Z._defaultMinTerrainHeight,\n    _Core_ApproximateTerrainHeights_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"]._defaultMaxTerrainHeight */ .Z._defaultMaxTerrainHeight\n  );\n  this._boundingVolume = _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].fromRectangle */ .Z.fromRectangle(\n    options.rectangle,\n    _Core_ApproximateTerrainHeights_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"]._defaultMinTerrainHeight */ .Z._defaultMinTerrainHeight,\n    _Core_ApproximateTerrainHeights_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"]._defaultMaxTerrainHeight */ .Z._defaultMaxTerrainHeight,\n    this._ellipsoid\n  );\n  this._classificationType = options.classificationType;\n\n  this._keepDecodedPositions = options.keepDecodedPositions;\n  this._decodedPositions = undefined;\n  this._decodedPositionOffsets = undefined;\n\n  // Fat vertices - all information for each volume packed to a vec3 and 5 vec4s\n  this._startEllipsoidNormals = undefined;\n  this._endEllipsoidNormals = undefined;\n  this._startPositionAndHeights = undefined;\n  this._startFaceNormalAndVertexCornerIds = undefined;\n  this._endPositionAndHeights = undefined;\n  this._endFaceNormalAndHalfWidths = undefined;\n  this._vertexBatchIds = undefined;\n\n  this._indices = undefined;\n\n  this._constantColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WHITE */ .Z.WHITE);\n  this._highlightColor = this._constantColor;\n\n  this._trianglesLength = 0;\n  this._geometryByteLength = 0;\n\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].defer */ .Z.defer();\n\n  this._verticesPromise = undefined;\n\n  var that = this;\n  _Core_ApproximateTerrainHeights_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].initialize */ .Z.initialize()\n    .then(function () {\n      updateMinimumMaximumHeights(that, that._rectangle, that._ellipsoid);\n    })\n    .otherwise(function (error) {\n      this._readyPromise.reject(error);\n    });\n}\n\nObject.defineProperties(Vector3DTileClampedPolylines.prototype, {\n  /**\n   * Gets the number of triangles.\n   *\n   * @memberof Vector3DTileClampedPolylines.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  trianglesLength: {\n    get: function () {\n      return this._trianglesLength;\n    },\n  },\n\n  /**\n   * Gets the geometry memory in bytes.\n   *\n   * @memberof Vector3DTileClampedPolylines.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  geometryByteLength: {\n    get: function () {\n      return this._geometryByteLength;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves when the primitive is ready to render.\n   * @memberof Vector3DTileClampedPolylines.prototype\n   * @type {Promise}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n});\n\nfunction updateMinimumMaximumHeights(polylines, rectangle, ellipsoid) {\n  var result = _Core_ApproximateTerrainHeights_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].getMinimumMaximumHeights */ .Z.getMinimumMaximumHeights(\n    rectangle,\n    ellipsoid\n  );\n  var min = result.minimumTerrainHeight;\n  var max = result.maximumTerrainHeight;\n  var minimumMaximumVectorHeights = polylines._minimumMaximumVectorHeights;\n  minimumMaximumVectorHeights.x = min;\n  minimumMaximumVectorHeights.y = max;\n\n  var obb = polylines._boundingVolume;\n  var rect = polylines._rectangle;\n  _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].fromRectangle */ .Z.fromRectangle(rect, min, max, ellipsoid, obb);\n}\n\nfunction packBuffer(polylines) {\n  var rectangle = polylines._rectangle;\n  var minimumHeight = polylines._minimumHeight;\n  var maximumHeight = polylines._maximumHeight;\n  var ellipsoid = polylines._ellipsoid;\n  var center = polylines._center;\n\n  var packedLength =\n    2 +\n    _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].packedLength */ .Z.packedLength +\n    _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].packedLength */ .Z.packedLength +\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n  var packedBuffer = new Float64Array(packedLength);\n\n  var offset = 0;\n  packedBuffer[offset++] = minimumHeight;\n  packedBuffer[offset++] = maximumHeight;\n\n  _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].pack */ .Z.pack(rectangle, packedBuffer, offset);\n  offset += _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].packedLength */ .Z.packedLength;\n\n  _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].pack */ .Z.pack(ellipsoid, packedBuffer, offset);\n  offset += _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].packedLength */ .Z.packedLength;\n\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(center, packedBuffer, offset);\n\n  return packedBuffer;\n}\n\nvar createVerticesTaskProcessor = new _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z(\n  "createVectorTileClampedPolylines"\n);\nvar attributeLocations = {\n  startEllipsoidNormal: 0,\n  endEllipsoidNormal: 1,\n  startPositionAndHeight: 2,\n  endPositionAndHeight: 3,\n  startFaceNormalAndVertexCorner: 4,\n  endFaceNormalAndHalfWidth: 5,\n  a_batchId: 6,\n};\n\nfunction createVertexArray(polylines, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(polylines._va)) {\n    return;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(polylines._verticesPromise)) {\n    var positions = polylines._positions;\n    var widths = polylines._widths;\n    var counts = polylines._counts;\n    var batchIds = polylines._transferrableBatchIds;\n\n    var packedBuffer = polylines._packedBuffer;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(packedBuffer)) {\n      // Copy because they may be the views on the same buffer.\n      positions = polylines._positions = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(positions);\n      widths = polylines._widths = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(widths);\n      counts = polylines._counts = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(counts);\n\n      batchIds = polylines._transferrableBatchIds = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n        polylines._batchIds\n      );\n\n      packedBuffer = polylines._packedBuffer = packBuffer(polylines);\n    }\n\n    var transferrableObjects = [\n      positions.buffer,\n      widths.buffer,\n      counts.buffer,\n      batchIds.buffer,\n      packedBuffer.buffer,\n    ];\n    var parameters = {\n      positions: positions.buffer,\n      widths: widths.buffer,\n      counts: counts.buffer,\n      batchIds: batchIds.buffer,\n      packedBuffer: packedBuffer.buffer,\n      keepDecodedPositions: polylines._keepDecodedPositions,\n    };\n\n    var verticesPromise = (polylines._verticesPromise = createVerticesTaskProcessor.scheduleTask(\n      parameters,\n      transferrableObjects\n    ));\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(verticesPromise)) {\n      // Postponed\n      return;\n    }\n\n    (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(verticesPromise, function (result) {\n      if (polylines._keepDecodedPositions) {\n        polylines._decodedPositions = new Float64Array(result.decodedPositions);\n        polylines._decodedPositionOffsets = new Uint32Array(\n          result.decodedPositionOffsets\n        );\n      }\n\n      polylines._startEllipsoidNormals = new Float32Array(\n        result.startEllipsoidNormals\n      );\n      polylines._endEllipsoidNormals = new Float32Array(\n        result.endEllipsoidNormals\n      );\n      polylines._startPositionAndHeights = new Float32Array(\n        result.startPositionAndHeights\n      );\n      polylines._startFaceNormalAndVertexCornerIds = new Float32Array(\n        result.startFaceNormalAndVertexCornerIds\n      );\n      polylines._endPositionAndHeights = new Float32Array(\n        result.endPositionAndHeights\n      );\n      polylines._endFaceNormalAndHalfWidths = new Float32Array(\n        result.endFaceNormalAndHalfWidths\n      );\n      polylines._vertexBatchIds = new Uint16Array(result.vertexBatchIds);\n\n      var indexDatatype = result.indexDatatype;\n      polylines._indices =\n        indexDatatype === _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT\n          ? new Uint16Array(result.indices)\n          : new Uint32Array(result.indices);\n\n      polylines._ready = true;\n    }).otherwise(function (error) {\n      polylines._readyPromise.reject(error);\n    });\n  }\n\n  if (polylines._ready && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(polylines._va)) {\n    var startEllipsoidNormals = polylines._startEllipsoidNormals;\n    var endEllipsoidNormals = polylines._endEllipsoidNormals;\n    var startPositionAndHeights = polylines._startPositionAndHeights;\n    var endPositionAndHeights = polylines._endPositionAndHeights;\n    var startFaceNormalAndVertexCornerIds =\n      polylines._startFaceNormalAndVertexCornerIds;\n    var endFaceNormalAndHalfWidths = polylines._endFaceNormalAndHalfWidths;\n    var batchIdAttribute = polylines._vertexBatchIds;\n\n    var indices = polylines._indices;\n\n    var byteLength =\n      startEllipsoidNormals.byteLength + endEllipsoidNormals.byteLength;\n    byteLength +=\n      startPositionAndHeights.byteLength + endPositionAndHeights.byteLength;\n    byteLength +=\n      startFaceNormalAndVertexCornerIds.byteLength +\n      endFaceNormalAndHalfWidths.byteLength;\n    byteLength += batchIdAttribute.byteLength + indices.byteLength;\n\n    polylines._trianglesLength = indices.length / 3;\n    polylines._geometryByteLength = byteLength;\n\n    var startEllipsoidNormalsBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: startEllipsoidNormals,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var endEllipsoidNormalsBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: endEllipsoidNormals,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var startPositionAndHeightsBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: startPositionAndHeights,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var endPositionAndHeightsBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: endPositionAndHeights,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var startFaceNormalAndVertexCornerIdsBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: startFaceNormalAndVertexCornerIds,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var endFaceNormalAndHalfWidthsBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: endFaceNormalAndHalfWidths,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var batchIdAttributeBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: batchIdAttribute,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n\n    var indexBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createIndexBuffer */ .Z.createIndexBuffer({\n      context: context,\n      typedArray: indices,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n      indexDatatype:\n        indices.BYTES_PER_ELEMENT === 2\n          ? _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT\n          : _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n    });\n\n    var vertexAttributes = [\n      {\n        index: attributeLocations.startEllipsoidNormal,\n        vertexBuffer: startEllipsoidNormalsBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        index: attributeLocations.endEllipsoidNormal,\n        vertexBuffer: endEllipsoidNormalsBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        index: attributeLocations.startPositionAndHeight,\n        vertexBuffer: startPositionAndHeightsBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 4,\n      },\n      {\n        index: attributeLocations.endPositionAndHeight,\n        vertexBuffer: endPositionAndHeightsBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 4,\n      },\n      {\n        index: attributeLocations.startFaceNormalAndVertexCorner,\n        vertexBuffer: startFaceNormalAndVertexCornerIdsBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 4,\n      },\n      {\n        index: attributeLocations.endFaceNormalAndHalfWidth,\n        vertexBuffer: endFaceNormalAndHalfWidthsBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 4,\n      },\n      {\n        index: attributeLocations.a_batchId,\n        vertexBuffer: batchIdAttributeBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n        componentsPerAttribute: 1,\n      },\n    ];\n\n    polylines._va = new _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z({\n      context: context,\n      attributes: vertexAttributes,\n      indexBuffer: indexBuffer,\n    });\n\n    polylines._positions = undefined;\n    polylines._widths = undefined;\n    polylines._counts = undefined;\n\n    polylines._ellipsoid = undefined;\n    polylines._minimumHeight = undefined;\n    polylines._maximumHeight = undefined;\n    polylines._rectangle = undefined;\n\n    polylines._transferrableBatchIds = undefined;\n    polylines._packedBuffer = undefined;\n\n    polylines._startEllipsoidNormals = undefined;\n    polylines._endEllipsoidNormals = undefined;\n    polylines._startPositionAndHeights = undefined;\n    polylines._startFaceNormalAndVertexCornerIds = undefined;\n    polylines._endPositionAndHeights = undefined;\n    polylines._endFaceNormalAndHalfWidths = undefined;\n    polylines._vertexBatchIds = undefined;\n\n    polylines._indices = undefined;\n\n    polylines._readyPromise.resolve();\n  }\n}\n\nvar modifiedModelViewScratch = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\nvar rtcScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nfunction createUniformMap(primitive, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(primitive._uniformMap)) {\n    return;\n  }\n\n  primitive._uniformMap = {\n    u_modifiedModelView: function () {\n      var viewMatrix = context.uniformState.view;\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].clone */ .Z.clone(viewMatrix, modifiedModelViewScratch);\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n        modifiedModelViewScratch,\n        primitive._center,\n        rtcScratch\n      );\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].setTranslation */ .Z.setTranslation(\n        modifiedModelViewScratch,\n        rtcScratch,\n        modifiedModelViewScratch\n      );\n      return modifiedModelViewScratch;\n    },\n    u_highlightColor: function () {\n      return primitive._highlightColor;\n    },\n    u_minimumMaximumVectorHeights: function () {\n      return primitive._minimumMaximumVectorHeights;\n    },\n  };\n}\n\nfunction getRenderState(mask3DTiles) {\n  /**\n   * Cull front faces of each volume (relative to camera) to prevent\n   * classification drawing from both the front and back faces, double-draw.\n   * The geometry is "inverted" (inside-out winding order for the indices) but\n   * the vertex shader seems to re-invert so that the triangles face "out" again.\n   * So cull FRONT faces.\n   */\n  return _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].fromCache */ .Z.fromCache({\n    cull: {\n      enabled: true,\n      face: _CullFace_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"].FRONT */ .Z.FRONT,\n    },\n    blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"].PRE_MULTIPLIED_ALPHA_BLEND */ .Z.PRE_MULTIPLIED_ALPHA_BLEND,\n    depthMask: false,\n    stencilTest: {\n      enabled: mask3DTiles,\n      frontFunction: _StencilFunction_js__WEBPACK_IMPORTED_MODULE_29__/* ["default"].EQUAL */ .Z.EQUAL,\n      frontOperation: {\n        fail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].KEEP */ .Z.KEEP,\n        zFail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].KEEP */ .Z.KEEP,\n        zPass: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].KEEP */ .Z.KEEP,\n      },\n      backFunction: _StencilFunction_js__WEBPACK_IMPORTED_MODULE_29__/* ["default"].EQUAL */ .Z.EQUAL,\n      backOperation: {\n        fail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].KEEP */ .Z.KEEP,\n        zFail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].KEEP */ .Z.KEEP,\n        zPass: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_30__/* ["default"].KEEP */ .Z.KEEP,\n      },\n      reference: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK,\n      mask: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_28__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK,\n    },\n  });\n}\n\nfunction createRenderStates(primitive) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(primitive._rs)) {\n    return;\n  }\n\n  primitive._rs = getRenderState(false);\n  primitive._rs3DTiles = getRenderState(true);\n}\n\nfunction createShaders(primitive, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(primitive._sp)) {\n    return;\n  }\n\n  var batchTable = primitive._batchTable;\n\n  var vsSource = batchTable.getVertexShaderCallback(\n    false,\n    "a_batchId",\n    undefined\n  )(_Shaders_Vector3DTileClampedPolylinesVS_js__WEBPACK_IMPORTED_MODULE_33__/* ["default"] */ .Z);\n  var fsSource = batchTable.getFragmentShaderCallback(\n    false,\n    undefined,\n    true\n  )(_Shaders_Vector3DTileClampedPolylinesFS_js__WEBPACK_IMPORTED_MODULE_34__/* ["default"] */ .Z);\n\n  var vs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z({\n    defines: [\n      "VECTOR_TILE",\n      !_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].isInternetExplorer */ .Z.isInternetExplorer() ? "CLIP_POLYLINE" : "",\n    ],\n    sources: [_Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_35__/* ["default"] */ .Z, vsSource],\n  });\n  var fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z({\n    defines: ["VECTOR_TILE"],\n    sources: [fsSource],\n  });\n\n  primitive._sp = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].fromCache */ .Z.fromCache({\n    context: context,\n    vertexShaderSource: vs,\n    fragmentShaderSource: fs,\n    attributeLocations: attributeLocations,\n  });\n}\n\nfunction queueCommands(primitive, frameState) {\n  var command = primitive._command;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(primitive._command)) {\n    var uniformMap = primitive._batchTable.getUniformMapCallback()(\n      primitive._uniformMap\n    );\n    command = primitive._command = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z({\n      owner: primitive,\n      vertexArray: primitive._va,\n      renderState: primitive._rs,\n      shaderProgram: primitive._sp,\n      uniformMap: uniformMap,\n      boundingVolume: primitive._boundingVolume,\n      pass: _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].TERRAIN_CLASSIFICATION */ .Z.TERRAIN_CLASSIFICATION,\n      pickId: primitive._batchTable.getPickId(),\n    });\n\n    var derivedTilesetCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].shallowClone */ .Z.shallowClone(\n      command,\n      command.derivedCommands.tileset\n    );\n    derivedTilesetCommand.renderState = primitive._rs3DTiles;\n    derivedTilesetCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION;\n    command.derivedCommands.tileset = derivedTilesetCommand;\n  }\n\n  var classificationType = primitive._classificationType;\n  if (\n    classificationType === _ClassificationType_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].TERRAIN */ .Z.TERRAIN ||\n    classificationType === _ClassificationType_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].BOTH */ .Z.BOTH\n  ) {\n    frameState.commandList.push(command);\n  }\n  if (\n    classificationType === _ClassificationType_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].CESIUM_3D_TILE */ .Z.CESIUM_3D_TILE ||\n    classificationType === _ClassificationType_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"].BOTH */ .Z.BOTH\n  ) {\n    frameState.commandList.push(command.derivedCommands.tileset);\n  }\n}\n\n/**\n * Get the polyline positions for the given feature.\n *\n * @param {Number} batchId The batch ID of the feature.\n */\nVector3DTileClampedPolylines.prototype.getPositions = function (batchId) {\n  return _Vector3DTilePolylines_js__WEBPACK_IMPORTED_MODULE_31__/* ["default"].getPolylinePositions */ .Z.getPolylinePositions(this, batchId);\n};\n\n/**\n * Creates features for each polyline and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the polygon features will be placed.\n */\nVector3DTileClampedPolylines.prototype.createFeatures = function (\n  content,\n  features\n) {\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    features[batchId] = new _Cesium3DTileFeature_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z(content, batchId);\n  }\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (polyline batch table color * color).\n *\n * @param {Boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTileClampedPolylines.prototype.applyDebugSettings = function (\n  enabled,\n  color\n) {\n  this._highlightColor = enabled ? color : this._constantColor;\n};\n\nfunction clearStyle(polygons, features) {\n  var batchIds = polygons._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    feature.show = true;\n    feature.color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WHITE */ .Z.WHITE;\n  }\n}\n\nvar scratchColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nvar DEFAULT_COLOR_VALUE = _Core_Color_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WHITE */ .Z.WHITE;\nvar DEFAULT_SHOW_VALUE = true;\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The dictionary of features.\n */\nVector3DTileClampedPolylines.prototype.applyStyle = function (style, features) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(style)) {\n    clearStyle(this, features);\n    return;\n  }\n\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    feature.color = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(style.color)\n      ? style.color.evaluateColor(feature, scratchColor)\n      : DEFAULT_COLOR_VALUE;\n    feature.show = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_32__/* ["default"] */ .Z)(style.show)\n      ? style.show.evaluate(feature)\n      : DEFAULT_SHOW_VALUE;\n  }\n};\n\n/**\n * Updates the batches and queues the commands for rendering.\n *\n * @param {FrameState} frameState The current frame state.\n */\nVector3DTileClampedPolylines.prototype.update = function (frameState) {\n  var context = frameState.context;\n\n  createVertexArray(this, context);\n  createUniformMap(this, context);\n  createShaders(this, context);\n  createRenderStates(this);\n\n  if (!this._ready) {\n    return;\n  }\n\n  var passes = frameState.passes;\n  if (passes.render || passes.pick) {\n    queueCommands(this, frameState);\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTileClampedPolylines.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTileClampedPolylines.prototype.destroy = function () {\n  this._va = this._va && this._va.destroy();\n  this._sp = this._sp && this._sp.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Vector3DTileClampedPolylines);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42261\n')},41023:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50491);\n/* harmony import */ var _Core_getJsonFromTypedArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12540);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84828);\n/* harmony import */ var _Core_Math_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(99417);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(96190);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(9407);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(13222);\n/* harmony import */ var _Cesium3DTileBatchTable_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(84020);\n/* harmony import */ var _Cesium3DTileFeatureTable_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(79553);\n/* harmony import */ var _Vector3DTilePoints_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(71898);\n/* harmony import */ var _Vector3DTilePolygons_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(62942);\n/* harmony import */ var _Vector3DTilePolylines_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(6220);\n/* harmony import */ var _Vector3DTileClampedPolylines_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(42261);\n/* harmony import */ var _Core_decodeVectorPolylinePositions_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(22577);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Represents the contents of a\n * {@link https://github.com/CesiumGS/3d-tiles/tree/vctr/TileFormats/VectorData|Vector}\n * tile in a {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification|3D Tiles} tileset.\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Vector3DTileContent\n * @constructor\n *\n * @private\n */\nfunction Vector3DTileContent(tileset, tile, resource, arrayBuffer, byteOffset) {\n  this._tileset = tileset;\n  this._tile = tile;\n  this._resource = resource;\n\n  this._polygons = undefined;\n  this._polylines = undefined;\n  this._points = undefined;\n\n  this._contentReadyPromise = undefined;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].defer */ .Z.defer();\n\n  this._batchTable = undefined;\n  this._features = undefined;\n\n  /**\n   * Part of the {@link Cesium3DTileContent} interface.\n   */\n  this.featurePropertiesDirty = false;\n  this._groupMetadata = undefined;\n\n  initialize(this, arrayBuffer, byteOffset);\n}\n\nObject.defineProperties(Vector3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._batchTable) ? this._batchTable.featuresLength : 0;\n    },\n  },\n\n  pointsLength: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._points)) {\n        return this._points.pointsLength;\n      }\n      return 0;\n    },\n  },\n\n  trianglesLength: {\n    get: function () {\n      var trianglesLength = 0;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polygons)) {\n        trianglesLength += this._polygons.trianglesLength;\n      }\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polylines)) {\n        trianglesLength += this._polylines.trianglesLength;\n      }\n      return trianglesLength;\n    },\n  },\n\n  geometryByteLength: {\n    get: function () {\n      var geometryByteLength = 0;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polygons)) {\n        geometryByteLength += this._polygons.geometryByteLength;\n      }\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polylines)) {\n        geometryByteLength += this._polylines.geometryByteLength;\n      }\n      return geometryByteLength;\n    },\n  },\n\n  texturesByteLength: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._points)) {\n        return this._points.texturesByteLength;\n      }\n      return 0;\n    },\n  },\n\n  batchTableByteLength: {\n    get: function () {\n      return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._batchTable) ? this._batchTable.memorySizeInBytes : 0;\n    },\n  },\n\n  innerContents: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n  },\n\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n  },\n\n  url: {\n    get: function () {\n      return this._resource.getUrlComponent(true);\n    },\n  },\n\n  batchTable: {\n    get: function () {\n      return this._batchTable;\n    },\n  },\n\n  groupMetadata: {\n    get: function () {\n      return this._groupMetadata;\n    },\n    set: function (value) {\n      this._groupMetadata = value;\n    },\n  },\n});\n\nfunction createColorChangedCallback(content) {\n  return function (batchId, color) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(content._polygons)) {\n      content._polygons.updateCommands(batchId, color);\n    }\n  };\n}\n\nfunction getBatchIds(featureTableJson, featureTableBinary) {\n  var polygonBatchIds;\n  var polylineBatchIds;\n  var pointBatchIds;\n  var i;\n\n  var numberOfPolygons = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.POLYGONS_LENGTH, 0);\n  var numberOfPolylines = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.POLYLINES_LENGTH, 0);\n  var numberOfPoints = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.POINTS_LENGTH, 0);\n\n  if (numberOfPolygons > 0 && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(featureTableJson.POLYGON_BATCH_IDS)) {\n    var polygonBatchIdsByteOffset =\n      featureTableBinary.byteOffset +\n      featureTableJson.POLYGON_BATCH_IDS.byteOffset;\n    polygonBatchIds = new Uint16Array(\n      featureTableBinary.buffer,\n      polygonBatchIdsByteOffset,\n      numberOfPolygons\n    );\n  }\n\n  if (numberOfPolylines > 0 && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(featureTableJson.POLYLINE_BATCH_IDS)) {\n    var polylineBatchIdsByteOffset =\n      featureTableBinary.byteOffset +\n      featureTableJson.POLYLINE_BATCH_IDS.byteOffset;\n    polylineBatchIds = new Uint16Array(\n      featureTableBinary.buffer,\n      polylineBatchIdsByteOffset,\n      numberOfPolylines\n    );\n  }\n\n  if (numberOfPoints > 0 && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(featureTableJson.POINT_BATCH_IDS)) {\n    var pointBatchIdsByteOffset =\n      featureTableBinary.byteOffset +\n      featureTableJson.POINT_BATCH_IDS.byteOffset;\n    pointBatchIds = new Uint16Array(\n      featureTableBinary.buffer,\n      pointBatchIdsByteOffset,\n      numberOfPoints\n    );\n  }\n\n  var atLeastOneDefined =\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polygonBatchIds) ||\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polylineBatchIds) ||\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(pointBatchIds);\n  var atLeastOneUndefined =\n    (numberOfPolygons > 0 && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polygonBatchIds)) ||\n    (numberOfPolylines > 0 && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polylineBatchIds)) ||\n    (numberOfPoints > 0 && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(pointBatchIds));\n\n  if (atLeastOneDefined && atLeastOneUndefined) {\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n      "If one group of batch ids is defined, then all batch ids must be defined."\n    );\n  }\n\n  var allUndefinedBatchIds =\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polygonBatchIds) &&\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polylineBatchIds) &&\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(pointBatchIds);\n  if (allUndefinedBatchIds) {\n    var id = 0;\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polygonBatchIds) && numberOfPolygons > 0) {\n      polygonBatchIds = new Uint16Array(numberOfPolygons);\n      for (i = 0; i < numberOfPolygons; ++i) {\n        polygonBatchIds[i] = id++;\n      }\n    }\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polylineBatchIds) && numberOfPolylines > 0) {\n      polylineBatchIds = new Uint16Array(numberOfPolylines);\n      for (i = 0; i < numberOfPolylines; ++i) {\n        polylineBatchIds[i] = id++;\n      }\n    }\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(pointBatchIds) && numberOfPoints > 0) {\n      pointBatchIds = new Uint16Array(numberOfPoints);\n      for (i = 0; i < numberOfPoints; ++i) {\n        pointBatchIds[i] = id++;\n      }\n    }\n  }\n\n  return {\n    polygons: polygonBatchIds,\n    polylines: polylineBatchIds,\n    points: pointBatchIds,\n  };\n}\n\nvar sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT;\n\nfunction createFloatingPolylines(options) {\n  return new _Vector3DTilePolylines_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z(options);\n}\n\nfunction createClampedPolylines(options) {\n  return new _Vector3DTileClampedPolylines_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z(options);\n}\n\nfunction initialize(content, arrayBuffer, byteOffset) {\n  byteOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(byteOffset, 0);\n\n  var uint8Array = new Uint8Array(arrayBuffer);\n  var view = new DataView(arrayBuffer);\n  byteOffset += sizeOfUint32; // Skip magic number\n\n  var version = view.getUint32(byteOffset, true);\n  if (version !== 1) {\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n      "Only Vector tile version 1 is supported.  Version " +\n        version +\n        " is not."\n    );\n  }\n  byteOffset += sizeOfUint32;\n\n  var byteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  if (byteLength === 0) {\n    content._readyPromise.resolve(content);\n    return;\n  }\n\n  var featureTableJSONByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  if (featureTableJSONByteLength === 0) {\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n      "Feature table must have a byte length greater than zero"\n    );\n  }\n\n  var featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var batchTableJSONByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var indicesByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var positionByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var polylinePositionByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var pointsPositionByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  var featureTableJson = (0,_Core_getJsonFromTypedArray_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    uint8Array,\n    byteOffset,\n    featureTableJSONByteLength\n  );\n  byteOffset += featureTableJSONByteLength;\n\n  var featureTableBinary = new Uint8Array(\n    arrayBuffer,\n    byteOffset,\n    featureTableBinaryByteLength\n  );\n  byteOffset += featureTableBinaryByteLength;\n\n  var batchTableJson;\n  var batchTableBinary;\n  if (batchTableJSONByteLength > 0) {\n    // PERFORMANCE_IDEA: is it possible to allocate this on-demand?  Perhaps keep the\n    // arraybuffer/string compressed in memory and then decompress it when it is first accessed.\n    //\n    // We could also make another request for it, but that would make the property set/get\n    // API async, and would double the number of numbers in some cases.\n    batchTableJson = (0,_Core_getJsonFromTypedArray_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n      uint8Array,\n      byteOffset,\n      batchTableJSONByteLength\n    );\n    byteOffset += batchTableJSONByteLength;\n\n    if (batchTableBinaryByteLength > 0) {\n      // Has a batch table binary\n      batchTableBinary = new Uint8Array(\n        arrayBuffer,\n        byteOffset,\n        batchTableBinaryByteLength\n      );\n      // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n      batchTableBinary = new Uint8Array(batchTableBinary);\n      byteOffset += batchTableBinaryByteLength;\n    }\n  }\n\n  var numberOfPolygons = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.POLYGONS_LENGTH, 0);\n  var numberOfPolylines = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.POLYLINES_LENGTH, 0);\n  var numberOfPoints = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.POINTS_LENGTH, 0);\n  var totalPrimitives = numberOfPolygons + numberOfPolylines + numberOfPoints;\n\n  var batchTable = new _Cesium3DTileBatchTable_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z(\n    content,\n    totalPrimitives,\n    batchTableJson,\n    batchTableBinary,\n    createColorChangedCallback(content)\n  );\n  content._batchTable = batchTable;\n\n  if (totalPrimitives === 0) {\n    return;\n  }\n\n  var featureTable = new _Cesium3DTileFeatureTable_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z(\n    featureTableJson,\n    featureTableBinary\n  );\n  var region = featureTable.getGlobalProperty("REGION");\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(region)) {\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n      "Feature table global property: REGION must be defined"\n    );\n  }\n  var rectangle = _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].unpack */ .Z.unpack(region);\n  var minHeight = region[4];\n  var maxHeight = region[5];\n\n  var modelMatrix = content._tile.computedTransform;\n\n  var center = featureTable.getGlobalProperty(\n    "RTC_CENTER",\n    _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n    3\n  );\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(center)) {\n    center = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(center);\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(modelMatrix, center, center);\n  } else {\n    center = _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].center */ .Z.center(rectangle);\n    center.height = _Core_Math_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].lerp */ .Z.lerp(minHeight, maxHeight, 0.5);\n    center = _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WGS84.cartographicToCartesian */ .Z.WGS84.cartographicToCartesian(center);\n  }\n\n  var batchIds = getBatchIds(featureTableJson, featureTableBinary);\n  byteOffset += byteOffset % 4;\n\n  if (numberOfPolygons > 0) {\n    featureTable.featuresLength = numberOfPolygons;\n\n    var polygonCounts = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n      featureTable.getPropertyArray(\n        "POLYGON_COUNTS",\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n        1\n      ),\n      featureTable.getPropertyArray(\n        "POLYGON_COUNT",\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n        1\n      ) // Workaround for old vector tilesets using the non-plural name\n    );\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polygonCounts)) {\n      throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n        "Feature table property: POLYGON_COUNTS must be defined when POLYGONS_LENGTH is greater than 0"\n      );\n    }\n\n    var polygonIndexCounts = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n      featureTable.getPropertyArray(\n        "POLYGON_INDEX_COUNTS",\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n        1\n      ),\n      featureTable.getPropertyArray(\n        "POLYGON_INDEX_COUNT",\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n        1\n      ) // Workaround for old vector tilesets using the non-plural name\n    );\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polygonIndexCounts)) {\n      throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n        "Feature table property: POLYGON_INDEX_COUNTS must be defined when POLYGONS_LENGTH is greater than 0"\n      );\n    }\n\n    // Use the counts array to determine how many position values we want. If we used the byte length then\n    // zero padding values would be included and cause the delta zig-zag decoding to fail\n    var numPolygonPositions = polygonCounts.reduce(function (total, count) {\n      return total + count * 2;\n    }, 0);\n\n    var numPolygonIndices = polygonIndexCounts.reduce(function (total, count) {\n      return total + count;\n    }, 0);\n\n    var indices = new Uint32Array(arrayBuffer, byteOffset, numPolygonIndices);\n    byteOffset += indicesByteLength;\n\n    var polygonPositions = new Uint16Array(\n      arrayBuffer,\n      byteOffset,\n      numPolygonPositions\n    );\n    byteOffset += positionByteLength;\n\n    var polygonMinimumHeights;\n    var polygonMaximumHeights;\n    if (\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(featureTableJson.POLYGON_MINIMUM_HEIGHTS) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(featureTableJson.POLYGON_MAXIMUM_HEIGHTS)\n    ) {\n      polygonMinimumHeights = featureTable.getPropertyArray(\n        "POLYGON_MINIMUM_HEIGHTS",\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n        1\n      );\n      polygonMaximumHeights = featureTable.getPropertyArray(\n        "POLYGON_MAXIMUM_HEIGHTS",\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n        1\n      );\n    }\n\n    content._polygons = new _Vector3DTilePolygons_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n      positions: polygonPositions,\n      counts: polygonCounts,\n      indexCounts: polygonIndexCounts,\n      indices: indices,\n      minimumHeight: minHeight,\n      maximumHeight: maxHeight,\n      polygonMinimumHeights: polygonMinimumHeights,\n      polygonMaximumHeights: polygonMaximumHeights,\n      center: center,\n      rectangle: rectangle,\n      boundingVolume: content.tile.boundingVolume.boundingVolume,\n      batchTable: batchTable,\n      batchIds: batchIds.polygons,\n      modelMatrix: modelMatrix,\n    });\n  }\n\n  if (numberOfPolylines > 0) {\n    featureTable.featuresLength = numberOfPolylines;\n\n    var polylineCounts = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n      featureTable.getPropertyArray(\n        "POLYLINE_COUNTS",\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n        1\n      ),\n      featureTable.getPropertyArray(\n        "POLYLINE_COUNT",\n        _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n        1\n      ) // Workaround for old vector tilesets using the non-plural name\n    );\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polylineCounts)) {\n      throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z(\n        "Feature table property: POLYLINE_COUNTS must be defined when POLYLINES_LENGTH is greater than 0"\n      );\n    }\n\n    var widths = featureTable.getPropertyArray(\n      "POLYLINE_WIDTHS",\n      _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n      1\n    );\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(widths)) {\n      widths = new Uint16Array(numberOfPolylines);\n      for (var i = 0; i < numberOfPolylines; ++i) {\n        widths[i] = 2.0;\n      }\n    }\n\n    // Use the counts array to determine how many position values we want. If we used the byte length then\n    // zero padding values would be included and cause the delta zig-zag decoding to fail\n    var numPolylinePositions = polylineCounts.reduce(function (total, count) {\n      return total + count * 3;\n    }, 0);\n    var polylinePositions = new Uint16Array(\n      arrayBuffer,\n      byteOffset,\n      numPolylinePositions\n    );\n    byteOffset += polylinePositionByteLength;\n\n    var tileset = content._tileset;\n    var examineVectorLinesFunction = tileset.examineVectorLinesFunction;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(examineVectorLinesFunction)) {\n      var decodedPositions = (0,_Core_decodeVectorPolylinePositions_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(\n        new Uint16Array(polylinePositions),\n        rectangle,\n        minHeight,\n        maxHeight,\n        _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].WGS84 */ .Z.WGS84\n      );\n      examineVectorLines(\n        decodedPositions,\n        polylineCounts,\n        batchIds.polylines,\n        batchTable,\n        content.url,\n        examineVectorLinesFunction\n      );\n    }\n\n    var createPolylines = createFloatingPolylines;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(tileset.classificationType)) {\n      createPolylines = createClampedPolylines;\n    }\n\n    content._polylines = createPolylines({\n      positions: polylinePositions,\n      widths: widths,\n      counts: polylineCounts,\n      batchIds: batchIds.polylines,\n      minimumHeight: minHeight,\n      maximumHeight: maxHeight,\n      center: center,\n      rectangle: rectangle,\n      boundingVolume: content.tile.boundingVolume.boundingVolume,\n      batchTable: batchTable,\n      classificationType: tileset.classificationType,\n      keepDecodedPositions: tileset.vectorKeepDecodedPositions,\n    });\n  }\n\n  if (numberOfPoints > 0) {\n    var pointPositions = new Uint16Array(\n      arrayBuffer,\n      byteOffset,\n      numberOfPoints * 3\n    );\n    byteOffset += pointsPositionByteLength;\n    content._points = new _Vector3DTilePoints_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n      positions: pointPositions,\n      batchIds: batchIds.points,\n      minimumHeight: minHeight,\n      maximumHeight: maxHeight,\n      rectangle: rectangle,\n      batchTable: batchTable,\n    });\n  }\n}\n\nfunction createFeatures(content) {\n  var featuresLength = content.featuresLength;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(content._features) && featuresLength > 0) {\n    var features = new Array(featuresLength);\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(content._polygons)) {\n      content._polygons.createFeatures(content, features);\n    }\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(content._polylines)) {\n      content._polylines.createFeatures(content, features);\n    }\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(content._points)) {\n      content._points.createFeatures(content, features);\n    }\n    content._features = features;\n  }\n}\n\nVector3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return this._batchTable.hasProperty(batchId, name);\n};\n\nVector3DTileContent.prototype.getFeature = function (batchId) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  var featuresLength = this.featuresLength;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(batchId) || batchId < 0 || batchId >= featuresLength) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "batchId is required and between zero and featuresLength - 1 (" +\n        (featuresLength - 1) +\n        ")."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  createFeatures(this);\n  return this._features[batchId];\n};\n\nVector3DTileContent.prototype.applyDebugSettings = function (enabled, color) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polygons)) {\n    this._polygons.applyDebugSettings(enabled, color);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polylines)) {\n    this._polylines.applyDebugSettings(enabled, color);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._points)) {\n    this._points.applyDebugSettings(enabled, color);\n  }\n};\n\nVector3DTileContent.prototype.applyStyle = function (style) {\n  createFeatures(this);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polygons)) {\n    this._polygons.applyStyle(style, this._features);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polylines)) {\n    this._polylines.applyStyle(style, this._features);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._points)) {\n    this._points.applyStyle(style, this._features);\n  }\n};\n\nVector3DTileContent.prototype.update = function (tileset, frameState) {\n  var ready = true;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polygons)) {\n    this._polygons.classificationType = this._tileset.classificationType;\n    this._polygons.debugWireframe = this._tileset.debugWireframe;\n    this._polygons.update(frameState);\n    ready = ready && this._polygons._ready;\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polylines)) {\n    this._polylines.update(frameState);\n    ready = ready && this._polylines._ready;\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._points)) {\n    this._points.update(frameState);\n    ready = ready && this._points._ready;\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._batchTable) && ready) {\n    this._batchTable.update(tileset, frameState);\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._contentReadyPromise)) {\n    var pointsPromise = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._points)\n      ? this._points.readyPromise\n      : undefined;\n    var polygonPromise = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polygons)\n      ? this._polygons.readyPromise\n      : undefined;\n    var polylinePromise = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(this._polylines)\n      ? this._polylines.readyPromise\n      : undefined;\n\n    var that = this;\n    this._contentReadyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].all */ .Z.all([pointsPromise, polygonPromise, polylinePromise])\n      .then(function () {\n        that._readyPromise.resolve(that);\n      })\n      .otherwise(function (error) {\n        that._readyPromise.reject(error);\n      });\n  }\n};\n\nVector3DTileContent.prototype.getPolylinePositions = function (batchId) {\n  var polylines = this._polylines;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(polylines)) {\n    return undefined;\n  }\n\n  return polylines.getPositions(batchId);\n};\n\nVector3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nVector3DTileContent.prototype.destroy = function () {\n  this._polygons = this._polygons && this._polygons.destroy();\n  this._polylines = this._polylines && this._polylines.destroy();\n  this._points = this._points && this._points.destroy();\n  this._batchTable = this._batchTable && this._batchTable.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this);\n};\n\nfunction examineVectorLines(\n  positions,\n  counts,\n  batchIds,\n  batchTable,\n  url,\n  callback\n) {\n  var countsLength = counts.length;\n  var polylineStart = 0;\n  for (var i = 0; i < countsLength; i++) {\n    var count = counts[i] * 3;\n    var linePositions = positions.slice(polylineStart, polylineStart + count);\n    polylineStart += count;\n\n    callback(linePositions, batchIds[i], url, batchTable);\n  }\n}\n\n/* harmony default export */ __webpack_exports__["Z"] = (Vector3DTileContent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41023\n')},7847:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68591);\n/* harmony import */ var _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(86511);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72248);\n/* harmony import */ var _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(2819);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13222);\n/* harmony import */ var _ClassificationType_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(73001);\n/* harmony import */ var _Vector3DTileBatch_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(51867);\n/* harmony import */ var _Vector3DTilePrimitive_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(90082);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Creates a batch of box, cylinder, ellipsoid and/or sphere geometries intersecting terrain or 3D Tiles.\n *\n * @alias Vector3DTileGeometry\n * @constructor\n *\n * @param {Object} options An object with following properties:\n * @param {Float32Array} [options.boxes] The boxes in the tile.\n * @param {Uint16Array} [options.boxBatchIds] The batch ids for each box.\n * @param {Float32Array} [options.cylinders] The cylinders in the tile.\n * @param {Uint16Array} [options.cylinderBatchIds] The batch ids for each cylinder.\n * @param {Float32Array} [options.ellipsoids] The ellipsoids in the tile.\n * @param {Uint16Array} [options.ellipsoidBatchIds] The batch ids for each ellipsoid.\n * @param {Float32Array} [options.spheres] The spheres in the tile.\n * @param {Uint16Array} [options.sphereBatchIds] The batch ids for each sphere.\n * @param {Cartesian3} options.center The RTC center of all geometries.\n * @param {Matrix4} options.modelMatrix The model matrix of all geometries. Applied after the individual geometry model matrices.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table.\n * @param {BoundingSphere} options.boundingVolume The bounding volume containing all of the geometry in the tile.\n *\n * @private\n */\nfunction Vector3DTileGeometry(options) {\n  // these will all be released after the primitive is created\n  this._boxes = options.boxes;\n  this._boxBatchIds = options.boxBatchIds;\n  this._cylinders = options.cylinders;\n  this._cylinderBatchIds = options.cylinderBatchIds;\n  this._ellipsoids = options.ellipsoids;\n  this._ellipsoidBatchIds = options.ellipsoidBatchIds;\n  this._spheres = options.spheres;\n  this._sphereBatchIds = options.sphereBatchIds;\n  this._modelMatrix = options.modelMatrix;\n  this._batchTable = options.batchTable;\n  this._boundingVolume = options.boundingVolume;\n\n  this._center = options.center;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(this._center)) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(this._boundingVolume)) {\n      this._center = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(this._boundingVolume.center);\n    } else {\n      this._center = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO);\n    }\n  }\n\n  this._boundingVolumes = undefined;\n  this._batchedIndices = undefined;\n\n  this._indices = undefined;\n  this._indexOffsets = undefined;\n  this._indexCounts = undefined;\n\n  this._positions = undefined;\n  this._vertexBatchIds = undefined;\n\n  this._batchIds = undefined;\n\n  this._batchTableColors = undefined;\n  this._packedBuffer = undefined;\n\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].defer */ .Z.defer();\n\n  this._verticesPromise = undefined;\n\n  this._primitive = undefined;\n\n  /**\n   * Draws the wireframe of the classification geometries.\n   * @type {Boolean}\n   * @default false\n   */\n  this.debugWireframe = false;\n\n  /**\n   * Forces a re-batch instead of waiting after a number of frames have been rendered. For testing only.\n   * @type {Boolean}\n   * @default false\n   */\n  this.forceRebatch = false;\n\n  /**\n   * What this tile will classify.\n   * @type {ClassificationType}\n   * @default ClassificationType.BOTH\n   */\n  this.classificationType = _ClassificationType_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].BOTH */ .Z.BOTH;\n}\n\nObject.defineProperties(Vector3DTileGeometry.prototype, {\n  /**\n   * Gets the number of triangles.\n   *\n   * @memberof Vector3DTileGeometry.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  trianglesLength: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(this._primitive)) {\n        return this._primitive.trianglesLength;\n      }\n      return 0;\n    },\n  },\n\n  /**\n   * Gets the geometry memory in bytes.\n   *\n   * @memberof Vector3DTileGeometry.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  geometryByteLength: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(this._primitive)) {\n        return this._primitive.geometryByteLength;\n      }\n      return 0;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves when the primitive is ready to render.\n   * @memberof Vector3DTileGeometry.prototype\n   * @type {Promise<void>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n});\n\nVector3DTileGeometry.packedBoxLength =\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].packedLength */ .Z.packedLength + _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength;\nVector3DTileGeometry.packedCylinderLength = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].packedLength */ .Z.packedLength + 2;\nVector3DTileGeometry.packedEllipsoidLength =\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].packedLength */ .Z.packedLength + _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength;\nVector3DTileGeometry.packedSphereLength = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength + 1;\n\nfunction packBuffer(geometries) {\n  var packedBuffer = new Float64Array(\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].packedLength */ .Z.packedLength + _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength\n  );\n\n  var offset = 0;\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].pack */ .Z.pack(geometries._center, packedBuffer, offset);\n  offset += _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength;\n  _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].pack */ .Z.pack(geometries._modelMatrix, packedBuffer, offset);\n\n  return packedBuffer;\n}\n\nfunction unpackBuffer(geometries, packedBuffer) {\n  var offset = 0;\n\n  var indicesBytesPerElement = packedBuffer[offset++];\n  var numBVS = packedBuffer[offset++];\n  var bvs = (geometries._boundingVolumes = new Array(numBVS));\n\n  for (var i = 0; i < numBVS; ++i) {\n    bvs[i] = _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].unpack */ .Z.unpack(packedBuffer, offset);\n    offset += _Core_BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].packedLength */ .Z.packedLength;\n  }\n\n  var numBatchedIndices = packedBuffer[offset++];\n  var bis = (geometries._batchedIndices = new Array(numBatchedIndices));\n\n  for (var j = 0; j < numBatchedIndices; ++j) {\n    var color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(packedBuffer, offset);\n    offset += _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n\n    var indexOffset = packedBuffer[offset++];\n    var count = packedBuffer[offset++];\n\n    var length = packedBuffer[offset++];\n    var batchIds = new Array(length);\n\n    for (var k = 0; k < length; ++k) {\n      batchIds[k] = packedBuffer[offset++];\n    }\n\n    bis[j] = new _Vector3DTileBatch_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n      color: color,\n      offset: indexOffset,\n      count: count,\n      batchIds: batchIds,\n    });\n  }\n\n  return indicesBytesPerElement;\n}\n\nvar createVerticesTaskProcessor = new _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z(\n  "createVectorTileGeometries",\n  5\n);\nvar scratchColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nfunction createPrimitive(geometries) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(geometries._primitive)) {\n    return;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(geometries._verticesPromise)) {\n    var boxes = geometries._boxes;\n    var boxBatchIds = geometries._boxBatchIds;\n    var cylinders = geometries._cylinders;\n    var cylinderBatchIds = geometries._cylinderBatchIds;\n    var ellipsoids = geometries._ellipsoids;\n    var ellipsoidBatchIds = geometries._ellipsoidBatchIds;\n    var spheres = geometries._spheres;\n    var sphereBatchIds = geometries._sphereBatchIds;\n\n    var batchTableColors = geometries._batchTableColors;\n    var packedBuffer = geometries._packedBuffer;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(batchTableColors)) {\n      // Copy because they may be the views on the same buffer.\n      var length = 0;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(geometries._boxes)) {\n        boxes = geometries._boxes = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(boxes);\n        boxBatchIds = geometries._boxBatchIds = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(boxBatchIds);\n        length += boxBatchIds.length;\n      }\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(geometries._cylinders)) {\n        cylinders = geometries._cylinders = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(cylinders);\n        cylinderBatchIds = geometries._cylinderBatchIds = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n          cylinderBatchIds\n        );\n        length += cylinderBatchIds.length;\n      }\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(geometries._ellipsoids)) {\n        ellipsoids = geometries._ellipsoids = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(ellipsoids);\n        ellipsoidBatchIds = geometries._ellipsoidBatchIds = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n          ellipsoidBatchIds\n        );\n        length += ellipsoidBatchIds.length;\n      }\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(geometries._spheres)) {\n        spheres = geometries._sphere = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(spheres);\n        sphereBatchIds = geometries._sphereBatchIds = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n          sphereBatchIds\n        );\n        length += sphereBatchIds.length;\n      }\n\n      batchTableColors = geometries._batchTableColors = new Uint32Array(length);\n      var batchTable = geometries._batchTable;\n\n      for (var i = 0; i < length; ++i) {\n        var color = batchTable.getColor(i, scratchColor);\n        batchTableColors[i] = color.toRgba();\n      }\n\n      packedBuffer = geometries._packedBuffer = packBuffer(geometries);\n    }\n\n    var transferrableObjects = [];\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(boxes)) {\n      transferrableObjects.push(boxes.buffer, boxBatchIds.buffer);\n    }\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(cylinders)) {\n      transferrableObjects.push(cylinders.buffer, cylinderBatchIds.buffer);\n    }\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(ellipsoids)) {\n      transferrableObjects.push(ellipsoids.buffer, ellipsoidBatchIds.buffer);\n    }\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(spheres)) {\n      transferrableObjects.push(spheres.buffer, sphereBatchIds.buffer);\n    }\n    transferrableObjects.push(batchTableColors.buffer, packedBuffer.buffer);\n\n    var parameters = {\n      boxes: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(boxes) ? boxes.buffer : undefined,\n      boxBatchIds: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(boxes) ? boxBatchIds.buffer : undefined,\n      cylinders: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(cylinders) ? cylinders.buffer : undefined,\n      cylinderBatchIds: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(cylinders)\n        ? cylinderBatchIds.buffer\n        : undefined,\n      ellipsoids: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(ellipsoids) ? ellipsoids.buffer : undefined,\n      ellipsoidBatchIds: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(ellipsoids)\n        ? ellipsoidBatchIds.buffer\n        : undefined,\n      spheres: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(spheres) ? spheres.buffer : undefined,\n      sphereBatchIds: (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(spheres) ? sphereBatchIds.buffer : undefined,\n      batchTableColors: batchTableColors.buffer,\n      packedBuffer: packedBuffer.buffer,\n    };\n\n    var verticesPromise = (geometries._verticesPromise = createVerticesTaskProcessor.scheduleTask(\n      parameters,\n      transferrableObjects\n    ));\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(verticesPromise)) {\n      // Postponed\n      return;\n    }\n\n    verticesPromise.then(function (result) {\n      var packedBuffer = new Float64Array(result.packedBuffer);\n      var indicesBytesPerElement = unpackBuffer(geometries, packedBuffer);\n\n      if (indicesBytesPerElement === 2) {\n        geometries._indices = new Uint16Array(result.indices);\n      } else {\n        geometries._indices = new Uint32Array(result.indices);\n      }\n\n      geometries._indexOffsets = new Uint32Array(result.indexOffsets);\n      geometries._indexCounts = new Uint32Array(result.indexCounts);\n\n      geometries._positions = new Float32Array(result.positions);\n      geometries._vertexBatchIds = new Uint16Array(result.vertexBatchIds);\n\n      geometries._batchIds = new Uint16Array(result.batchIds);\n\n      geometries._ready = true;\n    });\n  }\n\n  if (geometries._ready && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(geometries._primitive)) {\n    geometries._primitive = new _Vector3DTilePrimitive_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n      batchTable: geometries._batchTable,\n      positions: geometries._positions,\n      batchIds: geometries._batchIds,\n      vertexBatchIds: geometries._vertexBatchIds,\n      indices: geometries._indices,\n      indexOffsets: geometries._indexOffsets,\n      indexCounts: geometries._indexCounts,\n      batchedIndices: geometries._batchedIndices,\n      boundingVolume: geometries._boundingVolume,\n      boundingVolumes: geometries._boundingVolumes,\n      center: geometries._center,\n      pickObject: (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(geometries._pickObject, geometries),\n    });\n\n    geometries._boxes = undefined;\n    geometries._boxBatchIds = undefined;\n    geometries._cylinders = undefined;\n    geometries._cylinderBatchIds = undefined;\n    geometries._ellipsoids = undefined;\n    geometries._ellipsoidBatchIds = undefined;\n    geometries._spheres = undefined;\n    geometries._sphereBatchIds = undefined;\n    geometries._center = undefined;\n    geometries._modelMatrix = undefined;\n    geometries._batchTable = undefined;\n    geometries._boundingVolume = undefined;\n\n    geometries._boundingVolumes = undefined;\n    geometries._batchedIndices = undefined;\n\n    geometries._indices = undefined;\n    geometries._indexOffsets = undefined;\n    geometries._indexCounts = undefined;\n\n    geometries._positions = undefined;\n    geometries._vertexBatchIds = undefined;\n\n    geometries._batchIds = undefined;\n\n    geometries._batchTableColors = undefined;\n    geometries._packedBuffer = undefined;\n\n    geometries._verticesPromise = undefined;\n\n    geometries._readyPromise.resolve();\n  }\n}\n\n/**\n * Creates features for each geometry and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the polygon features will be placed.\n */\nVector3DTileGeometry.prototype.createFeatures = function (content, features) {\n  this._primitive.createFeatures(content, features);\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (geometry batch table color * color).\n *\n * @param {Boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTileGeometry.prototype.applyDebugSettings = function (enabled, color) {\n  this._primitive.applyDebugSettings(enabled, color);\n};\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\nVector3DTileGeometry.prototype.applyStyle = function (style, features) {\n  this._primitive.applyStyle(style, features);\n};\n\n/**\n * Call when updating the color of a geometry with batchId changes color. The geometries will need to be re-batched\n * on the next update.\n *\n * @param {Number} batchId The batch id of the geometries whose color has changed.\n * @param {Color} color The new polygon color.\n */\nVector3DTileGeometry.prototype.updateCommands = function (batchId, color) {\n  this._primitive.updateCommands(batchId, color);\n};\n\n/**\n * Updates the batches and queues the commands for rendering.\n *\n * @param {FrameState} frameState The current frame state.\n */\nVector3DTileGeometry.prototype.update = function (frameState) {\n  createPrimitive(this);\n\n  if (!this._ready) {\n    return;\n  }\n\n  this._primitive.debugWireframe = this.debugWireframe;\n  this._primitive.forceRebatch = this.forceRebatch;\n  this._primitive.classificationType = this.classificationType;\n  this._primitive.update(frameState);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTileGeometry.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTileGeometry.prototype.destroy = function () {\n  this._primitive = this._primitive && this._primitive.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Vector3DTileGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7847\n')},71898:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68591);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(47861);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(50491);\n/* harmony import */ var _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(15720);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(96190);\n/* harmony import */ var _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(2819);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(13222);\n/* harmony import */ var _BillboardCollection_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(8044);\n/* harmony import */ var _Cesium3DTilePointFeature_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(81066);\n/* harmony import */ var _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(62919);\n/* harmony import */ var _LabelCollection_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(7017);\n/* harmony import */ var _LabelStyle_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(81208);\n/* harmony import */ var _PolylineCollection_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(56764);\n/* harmony import */ var _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(60473);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Creates a batch of points or billboards and labels.\n *\n * @alias Vector3DTilePoints\n * @constructor\n *\n * @param {Object} options An object with following properties:\n * @param {Uint16Array} options.positions The positions of the polygons.\n * @param {Number} options.minimumHeight The minimum height of the terrain covered by the tile.\n * @param {Number} options.maximumHeight The maximum height of the terrain covered by the tile.\n * @param {Rectangle} options.rectangle The rectangle containing the tile.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched polygons.\n * @param {Uint16Array} options.batchIds The batch ids for each polygon.\n *\n * @private\n */\nfunction Vector3DTilePoints(options) {\n  // released after the first update\n  this._positions = options.positions;\n\n  this._batchTable = options.batchTable;\n  this._batchIds = options.batchIds;\n\n  this._rectangle = options.rectangle;\n  this._minHeight = options.minimumHeight;\n  this._maxHeight = options.maximumHeight;\n\n  this._billboardCollection = undefined;\n  this._labelCollection = undefined;\n  this._polylineCollection = undefined;\n\n  this._verticesPromise = undefined;\n  this._packedBuffer = undefined;\n\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].defer */ .Z.defer();\n  this._resolvedPromise = false;\n}\n\nObject.defineProperties(Vector3DTilePoints.prototype, {\n  /**\n   * Gets the number of points.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  pointsLength: {\n    get: function () {\n      return this._billboardCollection.length;\n    },\n  },\n\n  /**\n   * Gets the texture atlas memory in bytes.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  texturesByteLength: {\n    get: function () {\n      var billboardSize = this._billboardCollection.textureAtlas.texture\n        .sizeInBytes;\n      var labelSize = this._labelCollection._textureAtlas.texture.sizeInBytes;\n      return billboardSize + labelSize;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves when the primitive is ready to render.\n   * @memberof Vector3DTilePoints.prototype\n   * @type {Promise<void>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n});\n\nfunction packBuffer(points, ellipsoid) {\n  var rectangle = points._rectangle;\n  var minimumHeight = points._minHeight;\n  var maximumHeight = points._maxHeight;\n\n  var packedLength = 2 + _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].packedLength */ .Z.packedLength + _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].packedLength */ .Z.packedLength;\n  var packedBuffer = new Float64Array(packedLength);\n\n  var offset = 0;\n  packedBuffer[offset++] = minimumHeight;\n  packedBuffer[offset++] = maximumHeight;\n\n  _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].pack */ .Z.pack(rectangle, packedBuffer, offset);\n  offset += _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].packedLength */ .Z.packedLength;\n\n  _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].pack */ .Z.pack(ellipsoid, packedBuffer, offset);\n\n  return packedBuffer;\n}\n\nvar createVerticesTaskProcessor = new _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z(\n  "createVectorTilePoints",\n  5\n);\nvar scratchPosition = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nfunction createPoints(points, ellipsoid) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(points._billboardCollection)) {\n    return;\n  }\n\n  var positions;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(points._verticesPromise)) {\n    positions = points._positions;\n    var packedBuffer = points._packedBuffer;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(packedBuffer)) {\n      // Copy because they may be the views on the same buffer.\n      positions = points._positions = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(positions);\n      points._batchIds = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(points._batchIds);\n\n      packedBuffer = points._packedBuffer = packBuffer(points, ellipsoid);\n    }\n\n    var transferrableObjects = [positions.buffer, packedBuffer.buffer];\n    var parameters = {\n      positions: positions.buffer,\n      packedBuffer: packedBuffer.buffer,\n    };\n\n    var verticesPromise = (points._verticesPromise = createVerticesTaskProcessor.scheduleTask(\n      parameters,\n      transferrableObjects\n    ));\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(verticesPromise)) {\n      // Postponed\n      return;\n    }\n\n    verticesPromise.then(function (result) {\n      points._positions = new Float64Array(result.positions);\n      points._ready = true;\n    });\n  }\n\n  if (points._ready && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(points._billboardCollection)) {\n    positions = points._positions;\n    var batchTable = points._batchTable;\n    var batchIds = points._batchIds;\n\n    var billboardCollection = (points._billboardCollection = new _BillboardCollection_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n      { batchTable: batchTable }\n    ));\n    var labelCollection = (points._labelCollection = new _LabelCollection_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n      batchTable: batchTable,\n    }));\n    var polylineCollection = (points._polylineCollection = new _PolylineCollection_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"] */ .Z());\n    polylineCollection._useHighlightColor = true;\n\n    var numberOfPoints = positions.length / 3;\n    for (var i = 0; i < numberOfPoints; ++i) {\n      var id = batchIds[i];\n\n      var position = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(positions, i * 3, scratchPosition);\n\n      var b = billboardCollection.add();\n      b.position = position;\n      b._batchIndex = id;\n\n      var l = labelCollection.add();\n      l.text = " ";\n      l.position = position;\n      l._batchIndex = id;\n\n      var p = polylineCollection.add();\n      p.positions = [_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(position), _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(position)];\n    }\n\n    points._positions = undefined;\n    points._packedBuffer = undefined;\n  }\n}\n\n/**\n * Creates features for each point and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the point features will be placed.\n */\nVector3DTilePoints.prototype.createFeatures = function (content, features) {\n  var billboardCollection = this._billboardCollection;\n  var labelCollection = this._labelCollection;\n  var polylineCollection = this._polylineCollection;\n\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n\n    var billboard = billboardCollection.get(i);\n    var label = labelCollection.get(i);\n    var polyline = polylineCollection.get(i);\n\n    features[batchId] = new _Cesium3DTilePointFeature_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z(\n      content,\n      batchId,\n      billboard,\n      label,\n      polyline\n    );\n  }\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (batch table color * color).\n *\n * @param {Boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTilePoints.prototype.applyDebugSettings = function (enabled, color) {\n  if (enabled) {\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(color, this._billboardCollection._highlightColor);\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(color, this._labelCollection._highlightColor);\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(color, this._polylineCollection._highlightColor);\n  } else {\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].WHITE */ .Z.WHITE, this._billboardCollection._highlightColor);\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].WHITE */ .Z.WHITE, this._labelCollection._highlightColor);\n    _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].WHITE */ .Z.WHITE, this._polylineCollection._highlightColor);\n  }\n};\n\nfunction clearStyle(polygons, features) {\n  var batchIds = polygons._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    feature.show = true;\n    feature.pointSize = _Cesium3DTilePointFeature_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].defaultPointSize */ .Z.defaultPointSize;\n    feature.color = _Cesium3DTilePointFeature_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].defaultColor */ .Z.defaultColor;\n    feature.pointOutlineColor =\n      _Cesium3DTilePointFeature_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].defaultPointOutlineColor */ .Z.defaultPointOutlineColor;\n    feature.pointOutlineWidth =\n      _Cesium3DTilePointFeature_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].defaultPointOutlineWidth */ .Z.defaultPointOutlineWidth;\n    feature.labelColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].WHITE */ .Z.WHITE;\n    feature.labelOutlineColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].WHITE */ .Z.WHITE;\n    feature.labelOutlineWidth = 1.0;\n    feature.font = "30px sans-serif";\n    feature.labelStyle = _LabelStyle_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].FILL */ .Z.FILL;\n    feature.labelText = undefined;\n    feature.backgroundColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(0.165, 0.165, 0.165, 0.8);\n    feature.backgroundPadding = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(7, 5);\n    feature.backgroundEnabled = false;\n    feature.scaleByDistance = undefined;\n    feature.translucencyByDistance = undefined;\n    feature.distanceDisplayCondition = undefined;\n    feature.heightOffset = 0.0;\n    feature.anchorLineEnabled = false;\n    feature.anchorLineColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].WHITE */ .Z.WHITE;\n    feature.image = undefined;\n    feature.disableDepthTestDistance = 0.0;\n    feature.horizontalOrigin = _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].CENTER */ .Z.CENTER;\n    feature.verticalOrigin = _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].CENTER */ .Z.CENTER;\n    feature.labelHorizontalOrigin = _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].RIGHT */ .Z.RIGHT;\n    feature.labelVerticalOrigin = _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].BASELINE */ .Z.BASELINE;\n  }\n}\n\nvar scratchColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchColor2 = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchColor3 = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchColor4 = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchColor5 = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchColor6 = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchScaleByDistance = new _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\nvar scratchTranslucencyByDistance = new _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();\nvar scratchDistanceDisplayCondition = new _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z();\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\nVector3DTilePoints.prototype.applyStyle = function (style, features) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style)) {\n    clearStyle(this, features);\n    return;\n  }\n\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.show)) {\n      feature.show = style.show.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.pointSize)) {\n      feature.pointSize = style.pointSize.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.color)) {\n      feature.color = style.color.evaluateColor(feature, scratchColor);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.pointOutlineColor)) {\n      feature.pointOutlineColor = style.pointOutlineColor.evaluateColor(\n        feature,\n        scratchColor2\n      );\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.pointOutlineWidth)) {\n      feature.pointOutlineWidth = style.pointOutlineWidth.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.labelColor)) {\n      feature.labelColor = style.labelColor.evaluateColor(\n        feature,\n        scratchColor3\n      );\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.labelOutlineColor)) {\n      feature.labelOutlineColor = style.labelOutlineColor.evaluateColor(\n        feature,\n        scratchColor4\n      );\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.labelOutlineWidth)) {\n      feature.labelOutlineWidth = style.labelOutlineWidth.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.font)) {\n      feature.font = style.font.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.labelStyle)) {\n      feature.labelStyle = style.labelStyle.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.labelText)) {\n      feature.labelText = style.labelText.evaluate(feature);\n    } else {\n      feature.labelText = undefined;\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.backgroundColor)) {\n      feature.backgroundColor = style.backgroundColor.evaluateColor(\n        feature,\n        scratchColor5\n      );\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.backgroundPadding)) {\n      feature.backgroundPadding = style.backgroundPadding.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.backgroundEnabled)) {\n      feature.backgroundEnabled = style.backgroundEnabled.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.scaleByDistance)) {\n      var scaleByDistanceCart4 = style.scaleByDistance.evaluate(feature);\n      scratchScaleByDistance.near = scaleByDistanceCart4.x;\n      scratchScaleByDistance.nearValue = scaleByDistanceCart4.y;\n      scratchScaleByDistance.far = scaleByDistanceCart4.z;\n      scratchScaleByDistance.farValue = scaleByDistanceCart4.w;\n      feature.scaleByDistance = scratchScaleByDistance;\n    } else {\n      feature.scaleByDistance = undefined;\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.translucencyByDistance)) {\n      var translucencyByDistanceCart4 = style.translucencyByDistance.evaluate(\n        feature\n      );\n      scratchTranslucencyByDistance.near = translucencyByDistanceCart4.x;\n      scratchTranslucencyByDistance.nearValue = translucencyByDistanceCart4.y;\n      scratchTranslucencyByDistance.far = translucencyByDistanceCart4.z;\n      scratchTranslucencyByDistance.farValue = translucencyByDistanceCart4.w;\n      feature.translucencyByDistance = scratchTranslucencyByDistance;\n    } else {\n      feature.translucencyByDistance = undefined;\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.distanceDisplayCondition)) {\n      var distanceDisplayConditionCart2 = style.distanceDisplayCondition.evaluate(\n        feature\n      );\n      scratchDistanceDisplayCondition.near = distanceDisplayConditionCart2.x;\n      scratchDistanceDisplayCondition.far = distanceDisplayConditionCart2.y;\n      feature.distanceDisplayCondition = scratchDistanceDisplayCondition;\n    } else {\n      feature.distanceDisplayCondition = undefined;\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.heightOffset)) {\n      feature.heightOffset = style.heightOffset.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.anchorLineEnabled)) {\n      feature.anchorLineEnabled = style.anchorLineEnabled.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.anchorLineColor)) {\n      feature.anchorLineColor = style.anchorLineColor.evaluateColor(\n        feature,\n        scratchColor6\n      );\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.image)) {\n      feature.image = style.image.evaluate(feature);\n    } else {\n      feature.image = undefined;\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.disableDepthTestDistance)) {\n      feature.disableDepthTestDistance = style.disableDepthTestDistance.evaluate(\n        feature\n      );\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.horizontalOrigin)) {\n      feature.horizontalOrigin = style.horizontalOrigin.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.verticalOrigin)) {\n      feature.verticalOrigin = style.verticalOrigin.evaluate(feature);\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.labelHorizontalOrigin)) {\n      feature.labelHorizontalOrigin = style.labelHorizontalOrigin.evaluate(\n        feature\n      );\n    }\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(style.labelVerticalOrigin)) {\n      feature.labelVerticalOrigin = style.labelVerticalOrigin.evaluate(feature);\n    }\n  }\n};\n\n/**\n * @private\n */\nVector3DTilePoints.prototype.update = function (frameState) {\n  createPoints(this, frameState.mapProjection.ellipsoid);\n\n  if (!this._ready) {\n    return;\n  }\n\n  this._polylineCollection.update(frameState);\n  this._billboardCollection.update(frameState);\n  this._labelCollection.update(frameState);\n\n  if (!this._resolvedPromise) {\n    this._readyPromise.resolve();\n    this._resolvedPromise = true;\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTilePoints.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTilePoints.prototype.destroy = function () {\n  this._billboardCollection =\n    this._billboardCollection && this._billboardCollection.destroy();\n  this._labelCollection =\n    this._labelCollection && this._labelCollection.destroy();\n  this._polylineCollection =\n    this._polylineCollection && this._polylineCollection.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Vector3DTilePoints);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNBO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBLFFBQVEsc0VBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBLFFBQVEsc0VBQU87QUFDZjtBQUNBOztBQUVBLFFBQVEsc0VBQU87QUFDZjtBQUNBOztBQUVBLFFBQVEsc0VBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsc0VBQU87QUFDZjtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBLFFBQVEsc0VBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQTs7QUFFQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQTs7QUFFQSxRQUFRLHNFQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxzRUFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0Esd0RBQXdEO0FBQ3hELDhDQUE4QyxzQkFBc0I7QUFDcEU7QUFDQTtBQUNBLGFBQWEsU0FBUyxnREFBZ0Q7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQsOENBQThDLHNCQUFzQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyRUFBYTtBQUN0QjtBQUNBLHlEQUFlLGtCQUFrQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL1ZlY3RvcjNEVGlsZVBvaW50cy5qcz81NTQ2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVNsaWNlIGZyb20gXCIuLi9Db3JlL2FycmF5U2xpY2UuanNcIjtcbmltcG9ydCBDYXJ0ZXNpYW4yIGZyb20gXCIuLi9Db3JlL0NhcnRlc2lhbjIuanNcIjtcbmltcG9ydCBDYXJ0ZXNpYW4zIGZyb20gXCIuLi9Db3JlL0NhcnRlc2lhbjMuanNcIjtcbmltcG9ydCBDb2xvciBmcm9tIFwiLi4vQ29yZS9Db2xvci5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuaW1wb3J0IGRlc3Ryb3lPYmplY3QgZnJvbSBcIi4uL0NvcmUvZGVzdHJveU9iamVjdC5qc1wiO1xuaW1wb3J0IERpc3RhbmNlRGlzcGxheUNvbmRpdGlvbiBmcm9tIFwiLi4vQ29yZS9EaXN0YW5jZURpc3BsYXlDb25kaXRpb24uanNcIjtcbmltcG9ydCBFbGxpcHNvaWQgZnJvbSBcIi4uL0NvcmUvRWxsaXBzb2lkLmpzXCI7XG5pbXBvcnQgTmVhckZhclNjYWxhciBmcm9tIFwiLi4vQ29yZS9OZWFyRmFyU2NhbGFyLmpzXCI7XG5pbXBvcnQgUmVjdGFuZ2xlIGZyb20gXCIuLi9Db3JlL1JlY3RhbmdsZS5qc1wiO1xuaW1wb3J0IFRhc2tQcm9jZXNzb3IgZnJvbSBcIi4uL0NvcmUvVGFza1Byb2Nlc3Nvci5qc1wiO1xuaW1wb3J0IHdoZW4gZnJvbSBcIi4uL1RoaXJkUGFydHkvd2hlbi5qc1wiO1xuaW1wb3J0IEJpbGxib2FyZENvbGxlY3Rpb24gZnJvbSBcIi4vQmlsbGJvYXJkQ29sbGVjdGlvbi5qc1wiO1xuaW1wb3J0IENlc2l1bTNEVGlsZVBvaW50RmVhdHVyZSBmcm9tIFwiLi9DZXNpdW0zRFRpbGVQb2ludEZlYXR1cmUuanNcIjtcbmltcG9ydCBIb3Jpem9udGFsT3JpZ2luIGZyb20gXCIuL0hvcml6b250YWxPcmlnaW4uanNcIjtcbmltcG9ydCBMYWJlbENvbGxlY3Rpb24gZnJvbSBcIi4vTGFiZWxDb2xsZWN0aW9uLmpzXCI7XG5pbXBvcnQgTGFiZWxTdHlsZSBmcm9tIFwiLi9MYWJlbFN0eWxlLmpzXCI7XG5pbXBvcnQgUG9seWxpbmVDb2xsZWN0aW9uIGZyb20gXCIuL1BvbHlsaW5lQ29sbGVjdGlvbi5qc1wiO1xuaW1wb3J0IFZlcnRpY2FsT3JpZ2luIGZyb20gXCIuL1ZlcnRpY2FsT3JpZ2luLmpzXCI7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGJhdGNoIG9mIHBvaW50cyBvciBiaWxsYm9hcmRzIGFuZCBsYWJlbHMuXG4gKlxuICogQGFsaWFzIFZlY3RvcjNEVGlsZVBvaW50c1xuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgQW4gb2JqZWN0IHdpdGggZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiBAcGFyYW0ge1VpbnQxNkFycmF5fSBvcHRpb25zLnBvc2l0aW9ucyBUaGUgcG9zaXRpb25zIG9mIHRoZSBwb2x5Z29ucy5cbiAqIEBwYXJhbSB7TnVtYmVyfSBvcHRpb25zLm1pbmltdW1IZWlnaHQgVGhlIG1pbmltdW0gaGVpZ2h0IG9mIHRoZSB0ZXJyYWluIGNvdmVyZWQgYnkgdGhlIHRpbGUuXG4gKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5tYXhpbXVtSGVpZ2h0IFRoZSBtYXhpbXVtIGhlaWdodCBvZiB0aGUgdGVycmFpbiBjb3ZlcmVkIGJ5IHRoZSB0aWxlLlxuICogQHBhcmFtIHtSZWN0YW5nbGV9IG9wdGlvbnMucmVjdGFuZ2xlIFRoZSByZWN0YW5nbGUgY29udGFpbmluZyB0aGUgdGlsZS5cbiAqIEBwYXJhbSB7Q2VzaXVtM0RUaWxlQmF0Y2hUYWJsZX0gb3B0aW9ucy5iYXRjaFRhYmxlIFRoZSBiYXRjaCB0YWJsZSBmb3IgdGhlIHRpbGUgY29udGFpbmluZyB0aGUgYmF0Y2hlZCBwb2x5Z29ucy5cbiAqIEBwYXJhbSB7VWludDE2QXJyYXl9IG9wdGlvbnMuYmF0Y2hJZHMgVGhlIGJhdGNoIGlkcyBmb3IgZWFjaCBwb2x5Z29uLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIFZlY3RvcjNEVGlsZVBvaW50cyhvcHRpb25zKSB7XG4gIC8vIHJlbGVhc2VkIGFmdGVyIHRoZSBmaXJzdCB1cGRhdGVcbiAgdGhpcy5fcG9zaXRpb25zID0gb3B0aW9ucy5wb3NpdGlvbnM7XG5cbiAgdGhpcy5fYmF0Y2hUYWJsZSA9IG9wdGlvbnMuYmF0Y2hUYWJsZTtcbiAgdGhpcy5fYmF0Y2hJZHMgPSBvcHRpb25zLmJhdGNoSWRzO1xuXG4gIHRoaXMuX3JlY3RhbmdsZSA9IG9wdGlvbnMucmVjdGFuZ2xlO1xuICB0aGlzLl9taW5IZWlnaHQgPSBvcHRpb25zLm1pbmltdW1IZWlnaHQ7XG4gIHRoaXMuX21heEhlaWdodCA9IG9wdGlvbnMubWF4aW11bUhlaWdodDtcblxuICB0aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uID0gdW5kZWZpbmVkO1xuICB0aGlzLl9sYWJlbENvbGxlY3Rpb24gPSB1bmRlZmluZWQ7XG4gIHRoaXMuX3BvbHlsaW5lQ29sbGVjdGlvbiA9IHVuZGVmaW5lZDtcblxuICB0aGlzLl92ZXJ0aWNlc1Byb21pc2UgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX3BhY2tlZEJ1ZmZlciA9IHVuZGVmaW5lZDtcblxuICB0aGlzLl9yZWFkeSA9IGZhbHNlO1xuICB0aGlzLl9yZWFkeVByb21pc2UgPSB3aGVuLmRlZmVyKCk7XG4gIHRoaXMuX3Jlc29sdmVkUHJvbWlzZSA9IGZhbHNlO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhWZWN0b3IzRFRpbGVQb2ludHMucHJvdG90eXBlLCB7XG4gIC8qKlxuICAgKiBHZXRzIHRoZSBudW1iZXIgb2YgcG9pbnRzLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgVmVjdG9yM0RUaWxlUG9pbnRzLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIHBvaW50c0xlbmd0aDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb24ubGVuZ3RoO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIHRleHR1cmUgYXRsYXMgbWVtb3J5IGluIGJ5dGVzLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgVmVjdG9yM0RUaWxlUG9pbnRzLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIHRleHR1cmVzQnl0ZUxlbmd0aDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGJpbGxib2FyZFNpemUgPSB0aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uLnRleHR1cmVBdGxhcy50ZXh0dXJlXG4gICAgICAgIC5zaXplSW5CeXRlcztcbiAgICAgIHZhciBsYWJlbFNpemUgPSB0aGlzLl9sYWJlbENvbGxlY3Rpb24uX3RleHR1cmVBdGxhcy50ZXh0dXJlLnNpemVJbkJ5dGVzO1xuICAgICAgcmV0dXJuIGJpbGxib2FyZFNpemUgKyBsYWJlbFNpemU7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogR2V0cyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBwcmltaXRpdmUgaXMgcmVhZHkgdG8gcmVuZGVyLlxuICAgKiBAbWVtYmVyb2YgVmVjdG9yM0RUaWxlUG9pbnRzLnByb3RvdHlwZVxuICAgKiBAdHlwZSB7UHJvbWlzZTx2b2lkPn1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICByZWFkeVByb21pc2U6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yZWFkeVByb21pc2UucHJvbWlzZTtcbiAgICB9LFxuICB9LFxufSk7XG5cbmZ1bmN0aW9uIHBhY2tCdWZmZXIocG9pbnRzLCBlbGxpcHNvaWQpIHtcbiAgdmFyIHJlY3RhbmdsZSA9IHBvaW50cy5fcmVjdGFuZ2xlO1xuICB2YXIgbWluaW11bUhlaWdodCA9IHBvaW50cy5fbWluSGVpZ2h0O1xuICB2YXIgbWF4aW11bUhlaWdodCA9IHBvaW50cy5fbWF4SGVpZ2h0O1xuXG4gIHZhciBwYWNrZWRMZW5ndGggPSAyICsgUmVjdGFuZ2xlLnBhY2tlZExlbmd0aCArIEVsbGlwc29pZC5wYWNrZWRMZW5ndGg7XG4gIHZhciBwYWNrZWRCdWZmZXIgPSBuZXcgRmxvYXQ2NEFycmF5KHBhY2tlZExlbmd0aCk7XG5cbiAgdmFyIG9mZnNldCA9IDA7XG4gIHBhY2tlZEJ1ZmZlcltvZmZzZXQrK10gPSBtaW5pbXVtSGVpZ2h0O1xuICBwYWNrZWRCdWZmZXJbb2Zmc2V0KytdID0gbWF4aW11bUhlaWdodDtcblxuICBSZWN0YW5nbGUucGFjayhyZWN0YW5nbGUsIHBhY2tlZEJ1ZmZlciwgb2Zmc2V0KTtcbiAgb2Zmc2V0ICs9IFJlY3RhbmdsZS5wYWNrZWRMZW5ndGg7XG5cbiAgRWxsaXBzb2lkLnBhY2soZWxsaXBzb2lkLCBwYWNrZWRCdWZmZXIsIG9mZnNldCk7XG5cbiAgcmV0dXJuIHBhY2tlZEJ1ZmZlcjtcbn1cblxudmFyIGNyZWF0ZVZlcnRpY2VzVGFza1Byb2Nlc3NvciA9IG5ldyBUYXNrUHJvY2Vzc29yKFxuICBcImNyZWF0ZVZlY3RvclRpbGVQb2ludHNcIixcbiAgNVxuKTtcbnZhciBzY3JhdGNoUG9zaXRpb24gPSBuZXcgQ2FydGVzaWFuMygpO1xuXG5mdW5jdGlvbiBjcmVhdGVQb2ludHMocG9pbnRzLCBlbGxpcHNvaWQpIHtcbiAgaWYgKGRlZmluZWQocG9pbnRzLl9iaWxsYm9hcmRDb2xsZWN0aW9uKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBwb3NpdGlvbnM7XG4gIGlmICghZGVmaW5lZChwb2ludHMuX3ZlcnRpY2VzUHJvbWlzZSkpIHtcbiAgICBwb3NpdGlvbnMgPSBwb2ludHMuX3Bvc2l0aW9ucztcbiAgICB2YXIgcGFja2VkQnVmZmVyID0gcG9pbnRzLl9wYWNrZWRCdWZmZXI7XG5cbiAgICBpZiAoIWRlZmluZWQocGFja2VkQnVmZmVyKSkge1xuICAgICAgLy8gQ29weSBiZWNhdXNlIHRoZXkgbWF5IGJlIHRoZSB2aWV3cyBvbiB0aGUgc2FtZSBidWZmZXIuXG4gICAgICBwb3NpdGlvbnMgPSBwb2ludHMuX3Bvc2l0aW9ucyA9IGFycmF5U2xpY2UocG9zaXRpb25zKTtcbiAgICAgIHBvaW50cy5fYmF0Y2hJZHMgPSBhcnJheVNsaWNlKHBvaW50cy5fYmF0Y2hJZHMpO1xuXG4gICAgICBwYWNrZWRCdWZmZXIgPSBwb2ludHMuX3BhY2tlZEJ1ZmZlciA9IHBhY2tCdWZmZXIocG9pbnRzLCBlbGxpcHNvaWQpO1xuICAgIH1cblxuICAgIHZhciB0cmFuc2ZlcnJhYmxlT2JqZWN0cyA9IFtwb3NpdGlvbnMuYnVmZmVyLCBwYWNrZWRCdWZmZXIuYnVmZmVyXTtcbiAgICB2YXIgcGFyYW1ldGVycyA9IHtcbiAgICAgIHBvc2l0aW9uczogcG9zaXRpb25zLmJ1ZmZlcixcbiAgICAgIHBhY2tlZEJ1ZmZlcjogcGFja2VkQnVmZmVyLmJ1ZmZlcixcbiAgICB9O1xuXG4gICAgdmFyIHZlcnRpY2VzUHJvbWlzZSA9IChwb2ludHMuX3ZlcnRpY2VzUHJvbWlzZSA9IGNyZWF0ZVZlcnRpY2VzVGFza1Byb2Nlc3Nvci5zY2hlZHVsZVRhc2soXG4gICAgICBwYXJhbWV0ZXJzLFxuICAgICAgdHJhbnNmZXJyYWJsZU9iamVjdHNcbiAgICApKTtcbiAgICBpZiAoIWRlZmluZWQodmVydGljZXNQcm9taXNlKSkge1xuICAgICAgLy8gUG9zdHBvbmVkXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmVydGljZXNQcm9taXNlLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgcG9pbnRzLl9wb3NpdGlvbnMgPSBuZXcgRmxvYXQ2NEFycmF5KHJlc3VsdC5wb3NpdGlvbnMpO1xuICAgICAgcG9pbnRzLl9yZWFkeSA9IHRydWU7XG4gICAgfSk7XG4gIH1cblxuICBpZiAocG9pbnRzLl9yZWFkeSAmJiAhZGVmaW5lZChwb2ludHMuX2JpbGxib2FyZENvbGxlY3Rpb24pKSB7XG4gICAgcG9zaXRpb25zID0gcG9pbnRzLl9wb3NpdGlvbnM7XG4gICAgdmFyIGJhdGNoVGFibGUgPSBwb2ludHMuX2JhdGNoVGFibGU7XG4gICAgdmFyIGJhdGNoSWRzID0gcG9pbnRzLl9iYXRjaElkcztcblxuICAgIHZhciBiaWxsYm9hcmRDb2xsZWN0aW9uID0gKHBvaW50cy5fYmlsbGJvYXJkQ29sbGVjdGlvbiA9IG5ldyBCaWxsYm9hcmRDb2xsZWN0aW9uKFxuICAgICAgeyBiYXRjaFRhYmxlOiBiYXRjaFRhYmxlIH1cbiAgICApKTtcbiAgICB2YXIgbGFiZWxDb2xsZWN0aW9uID0gKHBvaW50cy5fbGFiZWxDb2xsZWN0aW9uID0gbmV3IExhYmVsQ29sbGVjdGlvbih7XG4gICAgICBiYXRjaFRhYmxlOiBiYXRjaFRhYmxlLFxuICAgIH0pKTtcbiAgICB2YXIgcG9seWxpbmVDb2xsZWN0aW9uID0gKHBvaW50cy5fcG9seWxpbmVDb2xsZWN0aW9uID0gbmV3IFBvbHlsaW5lQ29sbGVjdGlvbigpKTtcbiAgICBwb2x5bGluZUNvbGxlY3Rpb24uX3VzZUhpZ2hsaWdodENvbG9yID0gdHJ1ZTtcblxuICAgIHZhciBudW1iZXJPZlBvaW50cyA9IHBvc2l0aW9ucy5sZW5ndGggLyAzO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtYmVyT2ZQb2ludHM7ICsraSkge1xuICAgICAgdmFyIGlkID0gYmF0Y2hJZHNbaV07XG5cbiAgICAgIHZhciBwb3NpdGlvbiA9IENhcnRlc2lhbjMudW5wYWNrKHBvc2l0aW9ucywgaSAqIDMsIHNjcmF0Y2hQb3NpdGlvbik7XG5cbiAgICAgIHZhciBiID0gYmlsbGJvYXJkQ29sbGVjdGlvbi5hZGQoKTtcbiAgICAgIGIucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgIGIuX2JhdGNoSW5kZXggPSBpZDtcblxuICAgICAgdmFyIGwgPSBsYWJlbENvbGxlY3Rpb24uYWRkKCk7XG4gICAgICBsLnRleHQgPSBcIiBcIjtcbiAgICAgIGwucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgIGwuX2JhdGNoSW5kZXggPSBpZDtcblxuICAgICAgdmFyIHAgPSBwb2x5bGluZUNvbGxlY3Rpb24uYWRkKCk7XG4gICAgICBwLnBvc2l0aW9ucyA9IFtDYXJ0ZXNpYW4zLmNsb25lKHBvc2l0aW9uKSwgQ2FydGVzaWFuMy5jbG9uZShwb3NpdGlvbildO1xuICAgIH1cblxuICAgIHBvaW50cy5fcG9zaXRpb25zID0gdW5kZWZpbmVkO1xuICAgIHBvaW50cy5fcGFja2VkQnVmZmVyID0gdW5kZWZpbmVkO1xuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlcyBmZWF0dXJlcyBmb3IgZWFjaCBwb2ludCBhbmQgcGxhY2VzIGl0IGF0IHRoZSBiYXRjaCBpZCBpbmRleCBvZiBmZWF0dXJlcy5cbiAqXG4gKiBAcGFyYW0ge1ZlY3RvcjNEVGlsZUNvbnRlbnR9IGNvbnRlbnQgVGhlIHZlY3RvciB0aWxlIGNvbnRlbnQuXG4gKiBAcGFyYW0ge0Nlc2l1bTNEVGlsZUZlYXR1cmVbXX0gZmVhdHVyZXMgQW4gYXJyYXkgb2YgZmVhdHVyZXMgd2hlcmUgdGhlIHBvaW50IGZlYXR1cmVzIHdpbGwgYmUgcGxhY2VkLlxuICovXG5WZWN0b3IzRFRpbGVQb2ludHMucHJvdG90eXBlLmNyZWF0ZUZlYXR1cmVzID0gZnVuY3Rpb24gKGNvbnRlbnQsIGZlYXR1cmVzKSB7XG4gIHZhciBiaWxsYm9hcmRDb2xsZWN0aW9uID0gdGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbjtcbiAgdmFyIGxhYmVsQ29sbGVjdGlvbiA9IHRoaXMuX2xhYmVsQ29sbGVjdGlvbjtcbiAgdmFyIHBvbHlsaW5lQ29sbGVjdGlvbiA9IHRoaXMuX3BvbHlsaW5lQ29sbGVjdGlvbjtcblxuICB2YXIgYmF0Y2hJZHMgPSB0aGlzLl9iYXRjaElkcztcbiAgdmFyIGxlbmd0aCA9IGJhdGNoSWRzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBiYXRjaElkID0gYmF0Y2hJZHNbaV07XG5cbiAgICB2YXIgYmlsbGJvYXJkID0gYmlsbGJvYXJkQ29sbGVjdGlvbi5nZXQoaSk7XG4gICAgdmFyIGxhYmVsID0gbGFiZWxDb2xsZWN0aW9uLmdldChpKTtcbiAgICB2YXIgcG9seWxpbmUgPSBwb2x5bGluZUNvbGxlY3Rpb24uZ2V0KGkpO1xuXG4gICAgZmVhdHVyZXNbYmF0Y2hJZF0gPSBuZXcgQ2VzaXVtM0RUaWxlUG9pbnRGZWF0dXJlKFxuICAgICAgY29udGVudCxcbiAgICAgIGJhdGNoSWQsXG4gICAgICBiaWxsYm9hcmQsXG4gICAgICBsYWJlbCxcbiAgICAgIHBvbHlsaW5lXG4gICAgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBDb2xvcnMgdGhlIGVudGlyZSB0aWxlIHdoZW4gZW5hYmxlZCBpcyB0cnVlLiBUaGUgcmVzdWx0aW5nIGNvbG9yIHdpbGwgYmUgKGJhdGNoIHRhYmxlIGNvbG9yICogY29sb3IpLlxuICpcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gZW5hYmxlZCBXaGV0aGVyIHRvIGVuYWJsZSBkZWJ1ZyBjb2xvcmluZy5cbiAqIEBwYXJhbSB7Q29sb3J9IGNvbG9yIFRoZSBkZWJ1ZyBjb2xvci5cbiAqL1xuVmVjdG9yM0RUaWxlUG9pbnRzLnByb3RvdHlwZS5hcHBseURlYnVnU2V0dGluZ3MgPSBmdW5jdGlvbiAoZW5hYmxlZCwgY29sb3IpIHtcbiAgaWYgKGVuYWJsZWQpIHtcbiAgICBDb2xvci5jbG9uZShjb2xvciwgdGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbi5faGlnaGxpZ2h0Q29sb3IpO1xuICAgIENvbG9yLmNsb25lKGNvbG9yLCB0aGlzLl9sYWJlbENvbGxlY3Rpb24uX2hpZ2hsaWdodENvbG9yKTtcbiAgICBDb2xvci5jbG9uZShjb2xvciwgdGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uLl9oaWdobGlnaHRDb2xvcik7XG4gIH0gZWxzZSB7XG4gICAgQ29sb3IuY2xvbmUoQ29sb3IuV0hJVEUsIHRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb24uX2hpZ2hsaWdodENvbG9yKTtcbiAgICBDb2xvci5jbG9uZShDb2xvci5XSElURSwgdGhpcy5fbGFiZWxDb2xsZWN0aW9uLl9oaWdobGlnaHRDb2xvcik7XG4gICAgQ29sb3IuY2xvbmUoQ29sb3IuV0hJVEUsIHRoaXMuX3BvbHlsaW5lQ29sbGVjdGlvbi5faGlnaGxpZ2h0Q29sb3IpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBjbGVhclN0eWxlKHBvbHlnb25zLCBmZWF0dXJlcykge1xuICB2YXIgYmF0Y2hJZHMgPSBwb2x5Z29ucy5fYmF0Y2hJZHM7XG4gIHZhciBsZW5ndGggPSBiYXRjaElkcy5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgYmF0Y2hJZCA9IGJhdGNoSWRzW2ldO1xuICAgIHZhciBmZWF0dXJlID0gZmVhdHVyZXNbYmF0Y2hJZF07XG5cbiAgICBmZWF0dXJlLnNob3cgPSB0cnVlO1xuICAgIGZlYXR1cmUucG9pbnRTaXplID0gQ2VzaXVtM0RUaWxlUG9pbnRGZWF0dXJlLmRlZmF1bHRQb2ludFNpemU7XG4gICAgZmVhdHVyZS5jb2xvciA9IENlc2l1bTNEVGlsZVBvaW50RmVhdHVyZS5kZWZhdWx0Q29sb3I7XG4gICAgZmVhdHVyZS5wb2ludE91dGxpbmVDb2xvciA9XG4gICAgICBDZXNpdW0zRFRpbGVQb2ludEZlYXR1cmUuZGVmYXVsdFBvaW50T3V0bGluZUNvbG9yO1xuICAgIGZlYXR1cmUucG9pbnRPdXRsaW5lV2lkdGggPVxuICAgICAgQ2VzaXVtM0RUaWxlUG9pbnRGZWF0dXJlLmRlZmF1bHRQb2ludE91dGxpbmVXaWR0aDtcbiAgICBmZWF0dXJlLmxhYmVsQ29sb3IgPSBDb2xvci5XSElURTtcbiAgICBmZWF0dXJlLmxhYmVsT3V0bGluZUNvbG9yID0gQ29sb3IuV0hJVEU7XG4gICAgZmVhdHVyZS5sYWJlbE91dGxpbmVXaWR0aCA9IDEuMDtcbiAgICBmZWF0dXJlLmZvbnQgPSBcIjMwcHggc2Fucy1zZXJpZlwiO1xuICAgIGZlYXR1cmUubGFiZWxTdHlsZSA9IExhYmVsU3R5bGUuRklMTDtcbiAgICBmZWF0dXJlLmxhYmVsVGV4dCA9IHVuZGVmaW5lZDtcbiAgICBmZWF0dXJlLmJhY2tncm91bmRDb2xvciA9IG5ldyBDb2xvcigwLjE2NSwgMC4xNjUsIDAuMTY1LCAwLjgpO1xuICAgIGZlYXR1cmUuYmFja2dyb3VuZFBhZGRpbmcgPSBuZXcgQ2FydGVzaWFuMig3LCA1KTtcbiAgICBmZWF0dXJlLmJhY2tncm91bmRFbmFibGVkID0gZmFsc2U7XG4gICAgZmVhdHVyZS5zY2FsZUJ5RGlzdGFuY2UgPSB1bmRlZmluZWQ7XG4gICAgZmVhdHVyZS50cmFuc2x1Y2VuY3lCeURpc3RhbmNlID0gdW5kZWZpbmVkO1xuICAgIGZlYXR1cmUuZGlzdGFuY2VEaXNwbGF5Q29uZGl0aW9uID0gdW5kZWZpbmVkO1xuICAgIGZlYXR1cmUuaGVpZ2h0T2Zmc2V0ID0gMC4wO1xuICAgIGZlYXR1cmUuYW5jaG9yTGluZUVuYWJsZWQgPSBmYWxzZTtcbiAgICBmZWF0dXJlLmFuY2hvckxpbmVDb2xvciA9IENvbG9yLldISVRFO1xuICAgIGZlYXR1cmUuaW1hZ2UgPSB1bmRlZmluZWQ7XG4gICAgZmVhdHVyZS5kaXNhYmxlRGVwdGhUZXN0RGlzdGFuY2UgPSAwLjA7XG4gICAgZmVhdHVyZS5ob3Jpem9udGFsT3JpZ2luID0gSG9yaXpvbnRhbE9yaWdpbi5DRU5URVI7XG4gICAgZmVhdHVyZS52ZXJ0aWNhbE9yaWdpbiA9IFZlcnRpY2FsT3JpZ2luLkNFTlRFUjtcbiAgICBmZWF0dXJlLmxhYmVsSG9yaXpvbnRhbE9yaWdpbiA9IEhvcml6b250YWxPcmlnaW4uUklHSFQ7XG4gICAgZmVhdHVyZS5sYWJlbFZlcnRpY2FsT3JpZ2luID0gVmVydGljYWxPcmlnaW4uQkFTRUxJTkU7XG4gIH1cbn1cblxudmFyIHNjcmF0Y2hDb2xvciA9IG5ldyBDb2xvcigpO1xudmFyIHNjcmF0Y2hDb2xvcjIgPSBuZXcgQ29sb3IoKTtcbnZhciBzY3JhdGNoQ29sb3IzID0gbmV3IENvbG9yKCk7XG52YXIgc2NyYXRjaENvbG9yNCA9IG5ldyBDb2xvcigpO1xudmFyIHNjcmF0Y2hDb2xvcjUgPSBuZXcgQ29sb3IoKTtcbnZhciBzY3JhdGNoQ29sb3I2ID0gbmV3IENvbG9yKCk7XG52YXIgc2NyYXRjaFNjYWxlQnlEaXN0YW5jZSA9IG5ldyBOZWFyRmFyU2NhbGFyKCk7XG52YXIgc2NyYXRjaFRyYW5zbHVjZW5jeUJ5RGlzdGFuY2UgPSBuZXcgTmVhckZhclNjYWxhcigpO1xudmFyIHNjcmF0Y2hEaXN0YW5jZURpc3BsYXlDb25kaXRpb24gPSBuZXcgRGlzdGFuY2VEaXNwbGF5Q29uZGl0aW9uKCk7XG5cbi8qKlxuICogQXBwbHkgYSBzdHlsZSB0byB0aGUgY29udGVudC5cbiAqXG4gKiBAcGFyYW0ge0Nlc2l1bTNEVGlsZVN0eWxlfSBzdHlsZSBUaGUgc3R5bGUuXG4gKiBAcGFyYW0ge0Nlc2l1bTNEVGlsZUZlYXR1cmVbXX0gZmVhdHVyZXMgVGhlIGFycmF5IG9mIGZlYXR1cmVzLlxuICovXG5WZWN0b3IzRFRpbGVQb2ludHMucHJvdG90eXBlLmFwcGx5U3R5bGUgPSBmdW5jdGlvbiAoc3R5bGUsIGZlYXR1cmVzKSB7XG4gIGlmICghZGVmaW5lZChzdHlsZSkpIHtcbiAgICBjbGVhclN0eWxlKHRoaXMsIGZlYXR1cmVzKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgYmF0Y2hJZHMgPSB0aGlzLl9iYXRjaElkcztcbiAgdmFyIGxlbmd0aCA9IGJhdGNoSWRzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBiYXRjaElkID0gYmF0Y2hJZHNbaV07XG4gICAgdmFyIGZlYXR1cmUgPSBmZWF0dXJlc1tiYXRjaElkXTtcblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLnNob3cpKSB7XG4gICAgICBmZWF0dXJlLnNob3cgPSBzdHlsZS5zaG93LmV2YWx1YXRlKGZlYXR1cmUpO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLnBvaW50U2l6ZSkpIHtcbiAgICAgIGZlYXR1cmUucG9pbnRTaXplID0gc3R5bGUucG9pbnRTaXplLmV2YWx1YXRlKGZlYXR1cmUpO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLmNvbG9yKSkge1xuICAgICAgZmVhdHVyZS5jb2xvciA9IHN0eWxlLmNvbG9yLmV2YWx1YXRlQ29sb3IoZmVhdHVyZSwgc2NyYXRjaENvbG9yKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5wb2ludE91dGxpbmVDb2xvcikpIHtcbiAgICAgIGZlYXR1cmUucG9pbnRPdXRsaW5lQ29sb3IgPSBzdHlsZS5wb2ludE91dGxpbmVDb2xvci5ldmFsdWF0ZUNvbG9yKFxuICAgICAgICBmZWF0dXJlLFxuICAgICAgICBzY3JhdGNoQ29sb3IyXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLnBvaW50T3V0bGluZVdpZHRoKSkge1xuICAgICAgZmVhdHVyZS5wb2ludE91dGxpbmVXaWR0aCA9IHN0eWxlLnBvaW50T3V0bGluZVdpZHRoLmV2YWx1YXRlKGZlYXR1cmUpO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLmxhYmVsQ29sb3IpKSB7XG4gICAgICBmZWF0dXJlLmxhYmVsQ29sb3IgPSBzdHlsZS5sYWJlbENvbG9yLmV2YWx1YXRlQ29sb3IoXG4gICAgICAgIGZlYXR1cmUsXG4gICAgICAgIHNjcmF0Y2hDb2xvcjNcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGRlZmluZWQoc3R5bGUubGFiZWxPdXRsaW5lQ29sb3IpKSB7XG4gICAgICBmZWF0dXJlLmxhYmVsT3V0bGluZUNvbG9yID0gc3R5bGUubGFiZWxPdXRsaW5lQ29sb3IuZXZhbHVhdGVDb2xvcihcbiAgICAgICAgZmVhdHVyZSxcbiAgICAgICAgc2NyYXRjaENvbG9yNFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5sYWJlbE91dGxpbmVXaWR0aCkpIHtcbiAgICAgIGZlYXR1cmUubGFiZWxPdXRsaW5lV2lkdGggPSBzdHlsZS5sYWJlbE91dGxpbmVXaWR0aC5ldmFsdWF0ZShmZWF0dXJlKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5mb250KSkge1xuICAgICAgZmVhdHVyZS5mb250ID0gc3R5bGUuZm9udC5ldmFsdWF0ZShmZWF0dXJlKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5sYWJlbFN0eWxlKSkge1xuICAgICAgZmVhdHVyZS5sYWJlbFN0eWxlID0gc3R5bGUubGFiZWxTdHlsZS5ldmFsdWF0ZShmZWF0dXJlKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5sYWJlbFRleHQpKSB7XG4gICAgICBmZWF0dXJlLmxhYmVsVGV4dCA9IHN0eWxlLmxhYmVsVGV4dC5ldmFsdWF0ZShmZWF0dXJlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmVhdHVyZS5sYWJlbFRleHQgPSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKGRlZmluZWQoc3R5bGUuYmFja2dyb3VuZENvbG9yKSkge1xuICAgICAgZmVhdHVyZS5iYWNrZ3JvdW5kQ29sb3IgPSBzdHlsZS5iYWNrZ3JvdW5kQ29sb3IuZXZhbHVhdGVDb2xvcihcbiAgICAgICAgZmVhdHVyZSxcbiAgICAgICAgc2NyYXRjaENvbG9yNVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5iYWNrZ3JvdW5kUGFkZGluZykpIHtcbiAgICAgIGZlYXR1cmUuYmFja2dyb3VuZFBhZGRpbmcgPSBzdHlsZS5iYWNrZ3JvdW5kUGFkZGluZy5ldmFsdWF0ZShmZWF0dXJlKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5iYWNrZ3JvdW5kRW5hYmxlZCkpIHtcbiAgICAgIGZlYXR1cmUuYmFja2dyb3VuZEVuYWJsZWQgPSBzdHlsZS5iYWNrZ3JvdW5kRW5hYmxlZC5ldmFsdWF0ZShmZWF0dXJlKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5zY2FsZUJ5RGlzdGFuY2UpKSB7XG4gICAgICB2YXIgc2NhbGVCeURpc3RhbmNlQ2FydDQgPSBzdHlsZS5zY2FsZUJ5RGlzdGFuY2UuZXZhbHVhdGUoZmVhdHVyZSk7XG4gICAgICBzY3JhdGNoU2NhbGVCeURpc3RhbmNlLm5lYXIgPSBzY2FsZUJ5RGlzdGFuY2VDYXJ0NC54O1xuICAgICAgc2NyYXRjaFNjYWxlQnlEaXN0YW5jZS5uZWFyVmFsdWUgPSBzY2FsZUJ5RGlzdGFuY2VDYXJ0NC55O1xuICAgICAgc2NyYXRjaFNjYWxlQnlEaXN0YW5jZS5mYXIgPSBzY2FsZUJ5RGlzdGFuY2VDYXJ0NC56O1xuICAgICAgc2NyYXRjaFNjYWxlQnlEaXN0YW5jZS5mYXJWYWx1ZSA9IHNjYWxlQnlEaXN0YW5jZUNhcnQ0Lnc7XG4gICAgICBmZWF0dXJlLnNjYWxlQnlEaXN0YW5jZSA9IHNjcmF0Y2hTY2FsZUJ5RGlzdGFuY2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZlYXR1cmUuc2NhbGVCeURpc3RhbmNlID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLnRyYW5zbHVjZW5jeUJ5RGlzdGFuY2UpKSB7XG4gICAgICB2YXIgdHJhbnNsdWNlbmN5QnlEaXN0YW5jZUNhcnQ0ID0gc3R5bGUudHJhbnNsdWNlbmN5QnlEaXN0YW5jZS5ldmFsdWF0ZShcbiAgICAgICAgZmVhdHVyZVxuICAgICAgKTtcbiAgICAgIHNjcmF0Y2hUcmFuc2x1Y2VuY3lCeURpc3RhbmNlLm5lYXIgPSB0cmFuc2x1Y2VuY3lCeURpc3RhbmNlQ2FydDQueDtcbiAgICAgIHNjcmF0Y2hUcmFuc2x1Y2VuY3lCeURpc3RhbmNlLm5lYXJWYWx1ZSA9IHRyYW5zbHVjZW5jeUJ5RGlzdGFuY2VDYXJ0NC55O1xuICAgICAgc2NyYXRjaFRyYW5zbHVjZW5jeUJ5RGlzdGFuY2UuZmFyID0gdHJhbnNsdWNlbmN5QnlEaXN0YW5jZUNhcnQ0Lno7XG4gICAgICBzY3JhdGNoVHJhbnNsdWNlbmN5QnlEaXN0YW5jZS5mYXJWYWx1ZSA9IHRyYW5zbHVjZW5jeUJ5RGlzdGFuY2VDYXJ0NC53O1xuICAgICAgZmVhdHVyZS50cmFuc2x1Y2VuY3lCeURpc3RhbmNlID0gc2NyYXRjaFRyYW5zbHVjZW5jeUJ5RGlzdGFuY2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZlYXR1cmUudHJhbnNsdWNlbmN5QnlEaXN0YW5jZSA9IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5kaXN0YW5jZURpc3BsYXlDb25kaXRpb24pKSB7XG4gICAgICB2YXIgZGlzdGFuY2VEaXNwbGF5Q29uZGl0aW9uQ2FydDIgPSBzdHlsZS5kaXN0YW5jZURpc3BsYXlDb25kaXRpb24uZXZhbHVhdGUoXG4gICAgICAgIGZlYXR1cmVcbiAgICAgICk7XG4gICAgICBzY3JhdGNoRGlzdGFuY2VEaXNwbGF5Q29uZGl0aW9uLm5lYXIgPSBkaXN0YW5jZURpc3BsYXlDb25kaXRpb25DYXJ0Mi54O1xuICAgICAgc2NyYXRjaERpc3RhbmNlRGlzcGxheUNvbmRpdGlvbi5mYXIgPSBkaXN0YW5jZURpc3BsYXlDb25kaXRpb25DYXJ0Mi55O1xuICAgICAgZmVhdHVyZS5kaXN0YW5jZURpc3BsYXlDb25kaXRpb24gPSBzY3JhdGNoRGlzdGFuY2VEaXNwbGF5Q29uZGl0aW9uO1xuICAgIH0gZWxzZSB7XG4gICAgICBmZWF0dXJlLmRpc3RhbmNlRGlzcGxheUNvbmRpdGlvbiA9IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5oZWlnaHRPZmZzZXQpKSB7XG4gICAgICBmZWF0dXJlLmhlaWdodE9mZnNldCA9IHN0eWxlLmhlaWdodE9mZnNldC5ldmFsdWF0ZShmZWF0dXJlKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5hbmNob3JMaW5lRW5hYmxlZCkpIHtcbiAgICAgIGZlYXR1cmUuYW5jaG9yTGluZUVuYWJsZWQgPSBzdHlsZS5hbmNob3JMaW5lRW5hYmxlZC5ldmFsdWF0ZShmZWF0dXJlKTtcbiAgICB9XG5cbiAgICBpZiAoZGVmaW5lZChzdHlsZS5hbmNob3JMaW5lQ29sb3IpKSB7XG4gICAgICBmZWF0dXJlLmFuY2hvckxpbmVDb2xvciA9IHN0eWxlLmFuY2hvckxpbmVDb2xvci5ldmFsdWF0ZUNvbG9yKFxuICAgICAgICBmZWF0dXJlLFxuICAgICAgICBzY3JhdGNoQ29sb3I2XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLmltYWdlKSkge1xuICAgICAgZmVhdHVyZS5pbWFnZSA9IHN0eWxlLmltYWdlLmV2YWx1YXRlKGZlYXR1cmUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmZWF0dXJlLmltYWdlID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLmRpc2FibGVEZXB0aFRlc3REaXN0YW5jZSkpIHtcbiAgICAgIGZlYXR1cmUuZGlzYWJsZURlcHRoVGVzdERpc3RhbmNlID0gc3R5bGUuZGlzYWJsZURlcHRoVGVzdERpc3RhbmNlLmV2YWx1YXRlKFxuICAgICAgICBmZWF0dXJlXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLmhvcml6b250YWxPcmlnaW4pKSB7XG4gICAgICBmZWF0dXJlLmhvcml6b250YWxPcmlnaW4gPSBzdHlsZS5ob3Jpem9udGFsT3JpZ2luLmV2YWx1YXRlKGZlYXR1cmUpO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLnZlcnRpY2FsT3JpZ2luKSkge1xuICAgICAgZmVhdHVyZS52ZXJ0aWNhbE9yaWdpbiA9IHN0eWxlLnZlcnRpY2FsT3JpZ2luLmV2YWx1YXRlKGZlYXR1cmUpO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLmxhYmVsSG9yaXpvbnRhbE9yaWdpbikpIHtcbiAgICAgIGZlYXR1cmUubGFiZWxIb3Jpem9udGFsT3JpZ2luID0gc3R5bGUubGFiZWxIb3Jpem9udGFsT3JpZ2luLmV2YWx1YXRlKFxuICAgICAgICBmZWF0dXJlXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChkZWZpbmVkKHN0eWxlLmxhYmVsVmVydGljYWxPcmlnaW4pKSB7XG4gICAgICBmZWF0dXJlLmxhYmVsVmVydGljYWxPcmlnaW4gPSBzdHlsZS5sYWJlbFZlcnRpY2FsT3JpZ2luLmV2YWx1YXRlKGZlYXR1cmUpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5WZWN0b3IzRFRpbGVQb2ludHMucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChmcmFtZVN0YXRlKSB7XG4gIGNyZWF0ZVBvaW50cyh0aGlzLCBmcmFtZVN0YXRlLm1hcFByb2plY3Rpb24uZWxsaXBzb2lkKTtcblxuICBpZiAoIXRoaXMuX3JlYWR5KSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uLnVwZGF0ZShmcmFtZVN0YXRlKTtcbiAgdGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbi51cGRhdGUoZnJhbWVTdGF0ZSk7XG4gIHRoaXMuX2xhYmVsQ29sbGVjdGlvbi51cGRhdGUoZnJhbWVTdGF0ZSk7XG5cbiAgaWYgKCF0aGlzLl9yZXNvbHZlZFByb21pc2UpIHtcbiAgICB0aGlzLl9yZWFkeVByb21pc2UucmVzb2x2ZSgpO1xuICAgIHRoaXMuX3Jlc29sdmVkUHJvbWlzZSA9IHRydWU7XG4gIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQ7IG90aGVyd2lzZSwgZmFsc2UuXG4gKiA8cD5cbiAqIElmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQsIGl0IHNob3VsZCBub3QgYmUgdXNlZDsgY2FsbGluZyBhbnkgZnVuY3Rpb24gb3RoZXIgdGhhblxuICogPGNvZGU+aXNEZXN0cm95ZWQ8L2NvZGU+IHdpbGwgcmVzdWx0IGluIGEge0BsaW5rIERldmVsb3BlckVycm9yfSBleGNlcHRpb24uXG4gKiA8L3A+XG4gKlxuICogQHJldHVybnMge0Jvb2xlYW59IDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQ7IG90aGVyd2lzZSwgPGNvZGU+ZmFsc2U8L2NvZGU+LlxuICovXG5WZWN0b3IzRFRpbGVQb2ludHMucHJvdG90eXBlLmlzRGVzdHJveWVkID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZmFsc2U7XG59O1xuXG4vKipcbiAqIERlc3Ryb3lzIHRoZSBXZWJHTCByZXNvdXJjZXMgaGVsZCBieSB0aGlzIG9iamVjdC4gIERlc3Ryb3lpbmcgYW4gb2JqZWN0IGFsbG93cyBmb3IgZGV0ZXJtaW5pc3RpY1xuICogcmVsZWFzZSBvZiBXZWJHTCByZXNvdXJjZXMsIGluc3RlYWQgb2YgcmVseWluZyBvbiB0aGUgZ2FyYmFnZSBjb2xsZWN0b3IgdG8gZGVzdHJveSB0aGlzIG9iamVjdC5cbiAqIDxwPlxuICogT25jZSBhbiBvYmplY3QgaXMgZGVzdHJveWVkLCBpdCBzaG91bGQgbm90IGJlIHVzZWQ7IGNhbGxpbmcgYW55IGZ1bmN0aW9uIG90aGVyIHRoYW5cbiAqIDxjb2RlPmlzRGVzdHJveWVkPC9jb2RlPiB3aWxsIHJlc3VsdCBpbiBhIHtAbGluayBEZXZlbG9wZXJFcnJvcn0gZXhjZXB0aW9uLiAgVGhlcmVmb3JlLFxuICogYXNzaWduIHRoZSByZXR1cm4gdmFsdWUgKDxjb2RlPnVuZGVmaW5lZDwvY29kZT4pIHRvIHRoZSBvYmplY3QgYXMgZG9uZSBpbiB0aGUgZXhhbXBsZS5cbiAqIDwvcD5cbiAqXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gVGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZCwgaS5lLiwgZGVzdHJveSgpIHdhcyBjYWxsZWQuXG4gKi9cblZlY3RvcjNEVGlsZVBvaW50cy5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbiA9XG4gICAgdGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbiAmJiB0aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uLmRlc3Ryb3koKTtcbiAgdGhpcy5fbGFiZWxDb2xsZWN0aW9uID1cbiAgICB0aGlzLl9sYWJlbENvbGxlY3Rpb24gJiYgdGhpcy5fbGFiZWxDb2xsZWN0aW9uLmRlc3Ryb3koKTtcbiAgdGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uID1cbiAgICB0aGlzLl9wb2x5bGluZUNvbGxlY3Rpb24gJiYgdGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uLmRlc3Ryb3koKTtcbiAgcmV0dXJuIGRlc3Ryb3lPYmplY3QodGhpcyk7XG59O1xuZXhwb3J0IGRlZmF1bHQgVmVjdG9yM0RUaWxlUG9pbnRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///71898\n')},62942:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68591);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86511);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50491);\n/* harmony import */ var _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22832);\n/* harmony import */ var _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(25405);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(96190);\n/* harmony import */ var _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(2819);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(13222);\n/* harmony import */ var _ClassificationType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(73001);\n/* harmony import */ var _Vector3DTileBatch_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(51867);\n/* harmony import */ var _Vector3DTilePrimitive_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(90082);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Creates a batch of pre-triangulated polygons draped on terrain and/or 3D Tiles.\n *\n * @alias Vector3DTilePolygons\n * @constructor\n *\n * @param {Object} options An object with following properties:\n * @param {Float32Array|Uint16Array} options.positions The positions of the polygons. The positions must be contiguous\n * so that the positions for polygon n are in [c, c + counts[n]] where c = sum{counts[0], counts[n - 1]} and they are the outer ring of\n * the polygon in counter-clockwise order.\n * @param {Uint32Array} options.counts The number of positions in the each polygon.\n * @param {Uint32Array} options.indices The indices of the triangulated polygons. The indices must be contiguous so that\n * the indices for polygon n are in [i, i + indexCounts[n]] where i = sum{indexCounts[0], indexCounts[n - 1]}.\n * @param {Uint32Array} options.indexCounts The number of indices for each polygon.\n * @param {Number} options.minimumHeight The minimum height of the terrain covered by the tile.\n * @param {Number} options.maximumHeight The maximum height of the terrain covered by the tile.\n * @param {Float32Array} [options.polygonMinimumHeights] An array containing the minimum heights for each polygon.\n * @param {Float32Array} [options.polygonMaximumHeights] An array containing the maximum heights for each polygon.\n * @param {Rectangle} options.rectangle The rectangle containing the tile.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid.\n * @param {Cartesian3} [options.center=Cartesian3.ZERO] The RTC center.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched polygons.\n * @param {Uint16Array} options.batchIds The batch ids for each polygon.\n * @param {BoundingSphere} options.boundingVolume The bounding volume for the entire batch of polygons.\n *\n * @private\n */\nfunction Vector3DTilePolygons(options) {\n  // All of the private properties will be released except _readyPromise\n  // and _primitive after the Vector3DTilePrimitive is created.\n  this._batchTable = options.batchTable;\n\n  this._batchIds = options.batchIds;\n  this._positions = options.positions;\n  this._counts = options.counts;\n\n  this._indices = options.indices;\n  this._indexCounts = options.indexCounts;\n  this._indexOffsets = undefined;\n\n  this._batchTableColors = undefined;\n  this._packedBuffer = undefined;\n\n  this._batchedPositions = undefined;\n  this._transferrableBatchIds = undefined;\n  this._vertexBatchIds = undefined;\n\n  this._ellipsoid = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.ellipsoid, _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].WGS84 */ .Z.WGS84);\n  this._minimumHeight = options.minimumHeight;\n  this._maximumHeight = options.maximumHeight;\n  this._polygonMinimumHeights = options.polygonMinimumHeights;\n  this._polygonMaximumHeights = options.polygonMaximumHeights;\n  this._center = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.center, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ZERO */ .Z.ZERO);\n  this._rectangle = options.rectangle;\n\n  this._center = undefined;\n\n  this._boundingVolume = options.boundingVolume;\n  this._boundingVolumes = undefined;\n\n  this._batchedIndices = undefined;\n\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].defer */ .Z.defer();\n\n  this._verticesPromise = undefined;\n\n  this._primitive = undefined;\n\n  /**\n   * Draws the wireframe of the classification meshes.\n   * @type {Boolean}\n   * @default false\n   */\n  this.debugWireframe = false;\n\n  /**\n   * Forces a re-batch instead of waiting after a number of frames have been rendered. For testing only.\n   * @type {Boolean}\n   * @default false\n   */\n  this.forceRebatch = false;\n\n  /**\n   * What this tile will classify.\n   * @type {ClassificationType}\n   * @default ClassificationType.BOTH\n   */\n  this.classificationType = _ClassificationType_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].BOTH */ .Z.BOTH;\n}\n\nObject.defineProperties(Vector3DTilePolygons.prototype, {\n  /**\n   * Gets the number of triangles.\n   *\n   * @memberof Vector3DTilePolygons.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  trianglesLength: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(this._primitive)) {\n        return this._primitive.trianglesLength;\n      }\n      return 0;\n    },\n  },\n\n  /**\n   * Gets the geometry memory in bytes.\n   *\n   * @memberof Vector3DTilePolygons.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  geometryByteLength: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(this._primitive)) {\n        return this._primitive.geometryByteLength;\n      }\n      return 0;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves when the primitive is ready to render.\n   * @memberof Vector3DTilePolygons.prototype\n   * @type {Promise<void>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n});\n\nfunction packBuffer(polygons) {\n  var packedBuffer = new Float64Array(\n    3 +\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].packedLength */ .Z.packedLength +\n      _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].packedLength */ .Z.packedLength +\n      _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].packedLength */ .Z.packedLength\n  );\n\n  var offset = 0;\n  packedBuffer[offset++] = polygons._indices.BYTES_PER_ELEMENT;\n\n  packedBuffer[offset++] = polygons._minimumHeight;\n  packedBuffer[offset++] = polygons._maximumHeight;\n\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].pack */ .Z.pack(polygons._center, packedBuffer, offset);\n  offset += _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].packedLength */ .Z.packedLength;\n\n  _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].pack */ .Z.pack(polygons._ellipsoid, packedBuffer, offset);\n  offset += _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].packedLength */ .Z.packedLength;\n\n  _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].pack */ .Z.pack(polygons._rectangle, packedBuffer, offset);\n\n  return packedBuffer;\n}\n\nfunction unpackBuffer(polygons, packedBuffer) {\n  var offset = 1;\n\n  var numBVS = packedBuffer[offset++];\n  var bvs = (polygons._boundingVolumes = new Array(numBVS));\n\n  for (var i = 0; i < numBVS; ++i) {\n    bvs[i] = _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].unpack */ .Z.unpack(packedBuffer, offset);\n    offset += _Core_OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].packedLength */ .Z.packedLength;\n  }\n\n  var numBatchedIndices = packedBuffer[offset++];\n  var bis = (polygons._batchedIndices = new Array(numBatchedIndices));\n\n  for (var j = 0; j < numBatchedIndices; ++j) {\n    var color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].unpack */ .Z.unpack(packedBuffer, offset);\n    offset += _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].packedLength */ .Z.packedLength;\n\n    var indexOffset = packedBuffer[offset++];\n    var count = packedBuffer[offset++];\n\n    var length = packedBuffer[offset++];\n    var batchIds = new Array(length);\n\n    for (var k = 0; k < length; ++k) {\n      batchIds[k] = packedBuffer[offset++];\n    }\n\n    bis[j] = new _Vector3DTileBatch_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n      color: color,\n      offset: indexOffset,\n      count: count,\n      batchIds: batchIds,\n    });\n  }\n}\n\nvar createVerticesTaskProcessor = new _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z(\n  "createVectorTilePolygons",\n  5\n);\nvar scratchColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nfunction createPrimitive(polygons) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(polygons._primitive)) {\n    return;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(polygons._verticesPromise)) {\n    var positions = polygons._positions;\n    var counts = polygons._counts;\n    var indexCounts = polygons._indexCounts;\n    var indices = polygons._indices;\n\n    var batchIds = polygons._transferrableBatchIds;\n    var batchTableColors = polygons._batchTableColors;\n\n    var packedBuffer = polygons._packedBuffer;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(batchTableColors)) {\n      // Copy because they may be the views on the same buffer.\n      positions = polygons._positions = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(polygons._positions);\n      counts = polygons._counts = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(polygons._counts);\n      indexCounts = polygons._indexCounts = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(polygons._indexCounts);\n      indices = polygons._indices = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(polygons._indices);\n\n      polygons._center = polygons._ellipsoid.cartographicToCartesian(\n        _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].center */ .Z.center(polygons._rectangle)\n      );\n\n      batchIds = polygons._transferrableBatchIds = new Uint32Array(\n        polygons._batchIds\n      );\n      batchTableColors = polygons._batchTableColors = new Uint32Array(\n        batchIds.length\n      );\n      var batchTable = polygons._batchTable;\n\n      var length = batchTableColors.length;\n      for (var i = 0; i < length; ++i) {\n        var color = batchTable.getColor(i, scratchColor);\n        batchTableColors[i] = color.toRgba();\n      }\n\n      packedBuffer = polygons._packedBuffer = packBuffer(polygons);\n    }\n\n    var transferrableObjects = [\n      positions.buffer,\n      counts.buffer,\n      indexCounts.buffer,\n      indices.buffer,\n      batchIds.buffer,\n      batchTableColors.buffer,\n      packedBuffer.buffer,\n    ];\n    var parameters = {\n      packedBuffer: packedBuffer.buffer,\n      positions: positions.buffer,\n      counts: counts.buffer,\n      indexCounts: indexCounts.buffer,\n      indices: indices.buffer,\n      batchIds: batchIds.buffer,\n      batchTableColors: batchTableColors.buffer,\n    };\n\n    var minimumHeights = polygons._polygonMinimumHeights;\n    var maximumHeights = polygons._polygonMaximumHeights;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(minimumHeights) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(maximumHeights)) {\n      minimumHeights = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(minimumHeights);\n      maximumHeights = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(maximumHeights);\n\n      transferrableObjects.push(minimumHeights.buffer, maximumHeights.buffer);\n      parameters.minimumHeights = minimumHeights;\n      parameters.maximumHeights = maximumHeights;\n    }\n\n    var verticesPromise = (polygons._verticesPromise = createVerticesTaskProcessor.scheduleTask(\n      parameters,\n      transferrableObjects\n    ));\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(verticesPromise)) {\n      // Postponed\n      return;\n    }\n\n    (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(verticesPromise, function (result) {\n      polygons._positions = undefined;\n      polygons._counts = undefined;\n      polygons._polygonMinimumHeights = undefined;\n      polygons._polygonMaximumHeights = undefined;\n\n      var packedBuffer = new Float64Array(result.packedBuffer);\n      var indexDatatype = packedBuffer[0];\n      unpackBuffer(polygons, packedBuffer);\n\n      polygons._indices =\n        _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(indexDatatype) === 2\n          ? new Uint16Array(result.indices)\n          : new Uint32Array(result.indices);\n      polygons._indexOffsets = new Uint32Array(result.indexOffsets);\n      polygons._indexCounts = new Uint32Array(result.indexCounts);\n\n      // will be released\n      polygons._batchedPositions = new Float32Array(result.positions);\n      polygons._vertexBatchIds = new Uint16Array(result.batchIds);\n\n      polygons._ready = true;\n    });\n  }\n\n  if (polygons._ready && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(polygons._primitive)) {\n    polygons._primitive = new _Vector3DTilePrimitive_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n      batchTable: polygons._batchTable,\n      positions: polygons._batchedPositions,\n      batchIds: polygons._batchIds,\n      vertexBatchIds: polygons._vertexBatchIds,\n      indices: polygons._indices,\n      indexOffsets: polygons._indexOffsets,\n      indexCounts: polygons._indexCounts,\n      batchedIndices: polygons._batchedIndices,\n      boundingVolume: polygons._boundingVolume,\n      boundingVolumes: polygons._boundingVolumes,\n      center: polygons._center,\n    });\n\n    polygons._batchTable = undefined;\n    polygons._batchIds = undefined;\n    polygons._positions = undefined;\n    polygons._counts = undefined;\n    polygons._indices = undefined;\n    polygons._indexCounts = undefined;\n    polygons._indexOffsets = undefined;\n    polygons._batchTableColors = undefined;\n    polygons._packedBuffer = undefined;\n    polygons._batchedPositions = undefined;\n    polygons._transferrableBatchIds = undefined;\n    polygons._vertexBatchIds = undefined;\n    polygons._ellipsoid = undefined;\n    polygons._minimumHeight = undefined;\n    polygons._maximumHeight = undefined;\n    polygons._polygonMinimumHeights = undefined;\n    polygons._polygonMaximumHeights = undefined;\n    polygons._center = undefined;\n    polygons._rectangle = undefined;\n    polygons._boundingVolume = undefined;\n    polygons._boundingVolumes = undefined;\n    polygons._batchedIndices = undefined;\n    polygons._verticesPromise = undefined;\n\n    polygons._readyPromise.resolve();\n  }\n}\n\n/**\n * Creates features for each polygon and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the polygon features will be placed.\n */\nVector3DTilePolygons.prototype.createFeatures = function (content, features) {\n  this._primitive.createFeatures(content, features);\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (polygon batch table color * color).\n *\n * @param {Boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTilePolygons.prototype.applyDebugSettings = function (enabled, color) {\n  this._primitive.applyDebugSettings(enabled, color);\n};\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\nVector3DTilePolygons.prototype.applyStyle = function (style, features) {\n  this._primitive.applyStyle(style, features);\n};\n\n/**\n * Call when updating the color of a polygon with batchId changes color. The polygons will need to be re-batched\n * on the next update.\n *\n * @param {Number} batchId The batch id of the polygon whose color has changed.\n * @param {Color} color The new polygon color.\n */\nVector3DTilePolygons.prototype.updateCommands = function (batchId, color) {\n  this._primitive.updateCommands(batchId, color);\n};\n\n/**\n * Updates the batches and queues the commands for rendering.\n *\n * @param {FrameState} frameState The current frame state.\n */\nVector3DTilePolygons.prototype.update = function (frameState) {\n  createPrimitive(this);\n\n  if (!this._ready) {\n    return;\n  }\n\n  this._primitive.debugWireframe = this.debugWireframe;\n  this._primitive.forceRebatch = this.forceRebatch;\n  this._primitive.classificationType = this.classificationType;\n  this._primitive.update(frameState);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTilePolygons.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTilePolygons.prototype.destroy = function () {\n  this._primitive = this._primitive && this._primitive.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Vector3DTilePolygons);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///62942\n')},6220:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68591);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59947);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(86511);\n/* harmony import */ var _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(50491);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(96037);\n/* harmony import */ var _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(22832);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(96190);\n/* harmony import */ var _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(2819);\n/* harmony import */ var _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(99095);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(46588);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(18192);\n/* harmony import */ var _Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(94373);\n/* harmony import */ var _Shaders_Vector3DTilePolylinesVS_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(58678);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(13222);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(13633);\n/* harmony import */ var _Cesium3DTileFeature_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(52381);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Creates a batch of polylines that have been subdivided to be draped on terrain.\n *\n * @alias Vector3DTilePolylines\n * @constructor\n *\n * @param {Object} options An object with following properties:\n * @param {Uint16Array} options.positions The positions of the polylines\n * @param {Uint32Array} options.counts The number or positions in the each polyline.\n * @param {Uint16Array} options.widths The width of each polyline.\n * @param {Number} options.minimumHeight The minimum height of the terrain covered by the tile.\n * @param {Number} options.maximumHeight The maximum height of the terrain covered by the tile.\n * @param {Rectangle} options.rectangle The rectangle containing the tile.\n * @param {Cartesian3} [options.center=Cartesian3.ZERO] The RTC center.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched polylines.\n * @param {Uint16Array} options.batchIds The batch ids for each polyline.\n * @param {BoundingSphere} options.boundingVolume The bounding volume for the entire batch of polylines.\n * @param {Boolean} options.keepDecodedPositions Whether to keep decoded positions in memory.\n *\n * @private\n */\nfunction Vector3DTilePolylines(options) {\n  // these arrays are all released after the first update.\n  this._positions = options.positions;\n  this._widths = options.widths;\n  this._counts = options.counts;\n  this._batchIds = options.batchIds;\n\n  this._ellipsoid = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.ellipsoid, _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].WGS84 */ .Z.WGS84);\n  this._minimumHeight = options.minimumHeight;\n  this._maximumHeight = options.maximumHeight;\n  this._center = options.center;\n  this._rectangle = options.rectangle;\n\n  this._boundingVolume = options.boundingVolume;\n  this._batchTable = options.batchTable;\n\n  this._va = undefined;\n  this._sp = undefined;\n  this._rs = undefined;\n  this._uniformMap = undefined;\n  this._command = undefined;\n\n  this._transferrableBatchIds = undefined;\n  this._packedBuffer = undefined;\n\n  this._keepDecodedPositions = options.keepDecodedPositions;\n  this._decodedPositions = undefined;\n  this._decodedPositionOffsets = undefined;\n\n  this._currentPositions = undefined;\n  this._previousPositions = undefined;\n  this._nextPositions = undefined;\n  this._expandAndWidth = undefined;\n  this._vertexBatchIds = undefined;\n  this._indices = undefined;\n\n  this._constantColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].WHITE */ .Z.WHITE);\n  this._highlightColor = this._constantColor;\n\n  this._trianglesLength = 0;\n  this._geometryByteLength = 0;\n\n  this._ready = false;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].defer */ .Z.defer();\n\n  this._verticesPromise = undefined;\n}\n\nObject.defineProperties(Vector3DTilePolylines.prototype, {\n  /**\n   * Gets the number of triangles.\n   *\n   * @memberof Vector3DTilePolylines.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  trianglesLength: {\n    get: function () {\n      return this._trianglesLength;\n    },\n  },\n\n  /**\n   * Gets the geometry memory in bytes.\n   *\n   * @memberof Vector3DTilePolylines.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  geometryByteLength: {\n    get: function () {\n      return this._geometryByteLength;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves when the primitive is ready to render.\n   * @memberof Vector3DTilePolylines.prototype\n   * @type {Promise<void>}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n});\n\nfunction packBuffer(polylines) {\n  var rectangle = polylines._rectangle;\n  var minimumHeight = polylines._minimumHeight;\n  var maximumHeight = polylines._maximumHeight;\n  var ellipsoid = polylines._ellipsoid;\n  var center = polylines._center;\n\n  var packedLength =\n    2 +\n    _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].packedLength */ .Z.packedLength +\n    _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].packedLength */ .Z.packedLength +\n    _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].packedLength */ .Z.packedLength;\n  var packedBuffer = new Float64Array(packedLength);\n\n  var offset = 0;\n  packedBuffer[offset++] = minimumHeight;\n  packedBuffer[offset++] = maximumHeight;\n\n  _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].pack */ .Z.pack(rectangle, packedBuffer, offset);\n  offset += _Core_Rectangle_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].packedLength */ .Z.packedLength;\n\n  _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].pack */ .Z.pack(ellipsoid, packedBuffer, offset);\n  offset += _Core_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].packedLength */ .Z.packedLength;\n\n  _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].pack */ .Z.pack(center, packedBuffer, offset);\n\n  return packedBuffer;\n}\n\nvar createVerticesTaskProcessor = new _Core_TaskProcessor_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z(\n  "createVectorTilePolylines",\n  5\n);\nvar attributeLocations = {\n  previousPosition: 0,\n  currentPosition: 1,\n  nextPosition: 2,\n  expandAndWidth: 3,\n  a_batchId: 4,\n};\n\nfunction createVertexArray(polylines, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(polylines._va)) {\n    return;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(polylines._verticesPromise)) {\n    var positions = polylines._positions;\n    var widths = polylines._widths;\n    var counts = polylines._counts;\n    var batchIds = polylines._transferrableBatchIds;\n\n    var packedBuffer = polylines._packedBuffer;\n\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(packedBuffer)) {\n      // Copy because they may be the views on the same buffer.\n      positions = polylines._positions = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(positions);\n      widths = polylines._widths = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(widths);\n      counts = polylines._counts = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(counts);\n\n      batchIds = polylines._transferrableBatchIds = (0,_Core_arraySlice_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n        polylines._batchIds\n      );\n\n      packedBuffer = polylines._packedBuffer = packBuffer(polylines);\n    }\n\n    var transferrableObjects = [\n      positions.buffer,\n      widths.buffer,\n      counts.buffer,\n      batchIds.buffer,\n      packedBuffer.buffer,\n    ];\n    var parameters = {\n      positions: positions.buffer,\n      widths: widths.buffer,\n      counts: counts.buffer,\n      batchIds: batchIds.buffer,\n      packedBuffer: packedBuffer.buffer,\n      keepDecodedPositions: polylines._keepDecodedPositions,\n    };\n\n    var verticesPromise = (polylines._verticesPromise = createVerticesTaskProcessor.scheduleTask(\n      parameters,\n      transferrableObjects\n    ));\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(verticesPromise)) {\n      // Postponed\n      return;\n    }\n\n    (0,_ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z)(verticesPromise)\n      .then(function (result) {\n        if (polylines._keepDecodedPositions) {\n          polylines._decodedPositions = new Float64Array(\n            result.decodedPositions\n          );\n          polylines._decodedPositionOffsets = new Uint32Array(\n            result.decodedPositionOffsets\n          );\n        }\n\n        polylines._currentPositions = new Float32Array(result.currentPositions);\n        polylines._previousPositions = new Float32Array(\n          result.previousPositions\n        );\n        polylines._nextPositions = new Float32Array(result.nextPositions);\n        polylines._expandAndWidth = new Float32Array(result.expandAndWidth);\n        polylines._vertexBatchIds = new Uint16Array(result.batchIds);\n\n        var indexDatatype = result.indexDatatype;\n        polylines._indices =\n          indexDatatype === _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT\n            ? new Uint16Array(result.indices)\n            : new Uint32Array(result.indices);\n\n        polylines._ready = true;\n      })\n      .otherwise(function (error) {\n        polylines._readyPromise.reject(error);\n      });\n  }\n\n  if (polylines._ready && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(polylines._va)) {\n    var curPositions = polylines._currentPositions;\n    var prevPositions = polylines._previousPositions;\n    var nextPositions = polylines._nextPositions;\n    var expandAndWidth = polylines._expandAndWidth;\n    var vertexBatchIds = polylines._vertexBatchIds;\n    var indices = polylines._indices;\n\n    var byteLength =\n      prevPositions.byteLength +\n      curPositions.byteLength +\n      nextPositions.byteLength;\n    byteLength +=\n      expandAndWidth.byteLength +\n      vertexBatchIds.byteLength +\n      indices.byteLength;\n    polylines._trianglesLength = indices.length / 3;\n    polylines._geometryByteLength = byteLength;\n\n    var prevPositionBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: prevPositions,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var curPositionBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: curPositions,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var nextPositionBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: nextPositions,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var expandAndWidthBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: expandAndWidth,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n    var idBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n      context: context,\n      typedArray: vertexBatchIds,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    });\n\n    var indexBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createIndexBuffer */ .Z.createIndexBuffer({\n      context: context,\n      typedArray: indices,\n      usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n      indexDatatype:\n        indices.BYTES_PER_ELEMENT === 2\n          ? _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT\n          : _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n    });\n\n    var vertexAttributes = [\n      {\n        index: attributeLocations.previousPosition,\n        vertexBuffer: prevPositionBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        index: attributeLocations.currentPosition,\n        vertexBuffer: curPositionBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        index: attributeLocations.nextPosition,\n        vertexBuffer: nextPositionBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 3,\n      },\n      {\n        index: attributeLocations.expandAndWidth,\n        vertexBuffer: expandAndWidthBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].FLOAT */ .Z.FLOAT,\n        componentsPerAttribute: 2,\n      },\n      {\n        index: attributeLocations.a_batchId,\n        vertexBuffer: idBuffer,\n        componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n        componentsPerAttribute: 1,\n      },\n    ];\n\n    polylines._va = new _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z({\n      context: context,\n      attributes: vertexAttributes,\n      indexBuffer: indexBuffer,\n    });\n\n    polylines._positions = undefined;\n    polylines._widths = undefined;\n    polylines._counts = undefined;\n\n    polylines._ellipsoid = undefined;\n    polylines._minimumHeight = undefined;\n    polylines._maximumHeight = undefined;\n    polylines._rectangle = undefined;\n\n    polylines._transferrableBatchIds = undefined;\n    polylines._packedBuffer = undefined;\n\n    polylines._currentPositions = undefined;\n    polylines._previousPositions = undefined;\n    polylines._nextPositions = undefined;\n    polylines._expandAndWidth = undefined;\n    polylines._vertexBatchIds = undefined;\n    polylines._indices = undefined;\n\n    polylines._readyPromise.resolve();\n  }\n}\n\nvar modifiedModelViewScratch = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z();\nvar rtcScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nfunction createUniformMap(primitive, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(primitive._uniformMap)) {\n    return;\n  }\n\n  primitive._uniformMap = {\n    u_modifiedModelView: function () {\n      var viewMatrix = context.uniformState.view;\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(viewMatrix, modifiedModelViewScratch);\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n        modifiedModelViewScratch,\n        primitive._center,\n        rtcScratch\n      );\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].setTranslation */ .Z.setTranslation(\n        modifiedModelViewScratch,\n        rtcScratch,\n        modifiedModelViewScratch\n      );\n      return modifiedModelViewScratch;\n    },\n    u_highlightColor: function () {\n      return primitive._highlightColor;\n    },\n  };\n}\n\nfunction createRenderStates(primitive) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(primitive._rs)) {\n    return;\n  }\n\n  var polygonOffset = {\n    enabled: true,\n    factor: -5.0,\n    units: -5.0,\n  };\n\n  primitive._rs = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].fromCache */ .Z.fromCache({\n    blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].ALPHA_BLEND */ .Z.ALPHA_BLEND,\n    depthMask: false,\n    depthTest: {\n      enabled: true,\n    },\n    polygonOffset: polygonOffset,\n  });\n}\n\nvar PolylineFS =\n  "uniform vec4 u_highlightColor; \\n" +\n  "void main()\\n" +\n  "{\\n" +\n  "    gl_FragColor = u_highlightColor;\\n" +\n  "}\\n";\n\nfunction createShaders(primitive, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(primitive._sp)) {\n    return;\n  }\n\n  var batchTable = primitive._batchTable;\n\n  var vsSource = batchTable.getVertexShaderCallback(\n    false,\n    "a_batchId",\n    undefined\n  )(_Shaders_Vector3DTilePolylinesVS_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z);\n  var fsSource = batchTable.getFragmentShaderCallback(\n    false,\n    undefined,\n    false\n  )(PolylineFS);\n\n  var vs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z({\n    defines: [\n      "VECTOR_TILE",\n      !_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].isInternetExplorer */ .Z.isInternetExplorer() ? "CLIP_POLYLINE" : "",\n    ],\n    sources: [_Shaders_PolylineCommon_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z, vsSource],\n  });\n  var fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z({\n    defines: ["VECTOR_TILE"],\n    sources: [fsSource],\n  });\n\n  primitive._sp = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].fromCache */ .Z.fromCache({\n    context: context,\n    vertexShaderSource: vs,\n    fragmentShaderSource: fs,\n    attributeLocations: attributeLocations,\n  });\n}\n\nfunction queueCommands(primitive, frameState) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(primitive._command)) {\n    var uniformMap = primitive._batchTable.getUniformMapCallback()(\n      primitive._uniformMap\n    );\n    primitive._command = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n      owner: primitive,\n      vertexArray: primitive._va,\n      renderState: primitive._rs,\n      shaderProgram: primitive._sp,\n      uniformMap: uniformMap,\n      boundingVolume: primitive._boundingVolume,\n      pass: _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT,\n      pickId: primitive._batchTable.getPickId(),\n    });\n  }\n\n  frameState.commandList.push(primitive._command);\n}\n\nVector3DTilePolylines.getPolylinePositions = function (polylines, batchId) {\n  var batchIds = polylines._batchIds;\n  var positions = polylines._decodedPositions;\n  var offsets = polylines._decodedPositionOffsets;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(batchIds) || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(positions)) {\n    return undefined;\n  }\n\n  var i;\n  var j;\n  var polylinesLength = batchIds.length;\n  var positionsLength = 0;\n  var resultCounter = 0;\n\n  for (i = 0; i < polylinesLength; ++i) {\n    if (batchIds[i] === batchId) {\n      positionsLength += offsets[i + 1] - offsets[i];\n    }\n  }\n\n  if (positionsLength === 0) {\n    return undefined;\n  }\n\n  var results = new Float64Array(positionsLength * 3);\n\n  for (i = 0; i < polylinesLength; ++i) {\n    if (batchIds[i] === batchId) {\n      var offset = offsets[i];\n      var count = offsets[i + 1] - offset;\n      for (j = 0; j < count; ++j) {\n        var decodedOffset = (offset + j) * 3;\n        results[resultCounter++] = positions[decodedOffset];\n        results[resultCounter++] = positions[decodedOffset + 1];\n        results[resultCounter++] = positions[decodedOffset + 2];\n      }\n    }\n  }\n\n  return results;\n};\n\n/**\n * Get the polyline positions for the given feature.\n *\n * @param {Number} batchId The batch ID of the feature.\n */\nVector3DTilePolylines.prototype.getPositions = function (batchId) {\n  return Vector3DTilePolylines.getPolylinePositions(this, batchId);\n};\n\n/**\n * Creates features for each polyline and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the polygon features will be placed.\n */\nVector3DTilePolylines.prototype.createFeatures = function (content, features) {\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    features[batchId] = new _Cesium3DTileFeature_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z(content, batchId);\n  }\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (polyline batch table color * color).\n *\n * @param {Boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTilePolylines.prototype.applyDebugSettings = function (enabled, color) {\n  this._highlightColor = enabled ? color : this._constantColor;\n};\n\nfunction clearStyle(polygons, features) {\n  var batchIds = polygons._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    feature.show = true;\n    feature.color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].WHITE */ .Z.WHITE;\n  }\n}\n\nvar scratchColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z();\n\nvar DEFAULT_COLOR_VALUE = _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].WHITE */ .Z.WHITE;\nvar DEFAULT_SHOW_VALUE = true;\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\nVector3DTilePolylines.prototype.applyStyle = function (style, features) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(style)) {\n    clearStyle(this, features);\n    return;\n  }\n\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    feature.color = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(style.color)\n      ? style.color.evaluateColor(feature, scratchColor)\n      : DEFAULT_COLOR_VALUE;\n    feature.show = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(style.show)\n      ? style.show.evaluate(feature)\n      : DEFAULT_SHOW_VALUE;\n  }\n};\n\n/**\n * Updates the batches and queues the commands for rendering.\n *\n * @param {FrameState} frameState The current frame state.\n */\nVector3DTilePolylines.prototype.update = function (frameState) {\n  var context = frameState.context;\n\n  createVertexArray(this, context);\n  createUniformMap(this, context);\n  createShaders(this, context);\n  createRenderStates(this);\n\n  if (!this._ready) {\n    return;\n  }\n\n  var passes = frameState.passes;\n  if (passes.render || passes.pick) {\n    queueCommands(this, frameState);\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTilePolylines.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTilePolylines.prototype.destroy = function () {\n  this._va = this._va && this._va.destroy();\n  this._sp = this._sp && this._sp.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Vector3DTilePolylines);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6220\n')},90082:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59947);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86511);\n/* harmony import */ var _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22832);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72248);\n/* harmony import */ var _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(97264);\n/* harmony import */ var _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(99095);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(58597);\n/* harmony import */ var _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(60072);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(8379);\n/* harmony import */ var _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(10667);\n/* harmony import */ var _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(46588);\n/* harmony import */ var _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(53642);\n/* harmony import */ var _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(18192);\n/* harmony import */ var _Shaders_ShadowVolumeFS_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(79863);\n/* harmony import */ var _Shaders_VectorTileVS_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(54867);\n/* harmony import */ var _BlendingState_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(13633);\n/* harmony import */ var _Cesium3DTileFeature_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(52381);\n/* harmony import */ var _ClassificationType_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(73001);\n/* harmony import */ var _DepthFunction_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(7976);\n/* harmony import */ var _Expression_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(19427);\n/* harmony import */ var _StencilConstants_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(87233);\n/* harmony import */ var _StencilFunction_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(77053);\n/* harmony import */ var _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(81255);\n/* harmony import */ var _Vector3DTileBatch_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(51867);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Creates a batch of classification meshes.\n *\n * @alias Vector3DTilePrimitive\n * @constructor\n *\n * @param {Object} options An object with following properties:\n * @param {Float32Array} options.positions The positions of the meshes.\n * @param {Uint16Array|Uint32Array} options.indices The indices of the triangulated meshes. The indices must be contiguous so that\n * the indices for mesh n are in [i, i + indexCounts[n]] where i = sum{indexCounts[0], indexCounts[n - 1]}.\n * @param {Uint32Array} options.indexCounts The number of indices for each mesh.\n * @param {Uint32Array} options.indexOffsets The offset into the index buffer for each mesh.\n * @param {Vector3DTileBatch[]} options.batchedIndices The index offset and count for each batch with the same color.\n * @param {Cartesian3} [options.center=Cartesian3.ZERO] The RTC center.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched meshes.\n * @param {Uint16Array} options.batchIds The batch ids for each mesh.\n * @param {Uint16Array} options.vertexBatchIds The batch id for each vertex.\n * @param {BoundingSphere} options.boundingVolume The bounding volume for the entire batch of meshes.\n * @param {BoundingSphere[]} options.boundingVolumes The bounding volume for each mesh.\n * @param {ClassificationType} [options.classificationType] What this tile will classify.\n *\n * @private\n */\nfunction Vector3DTilePrimitive(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  this._batchTable = options.batchTable;\n  this._batchIds = options.batchIds;\n\n  // These arrays are released after VAO creation.\n  this._positions = options.positions;\n  this._vertexBatchIds = options.vertexBatchIds;\n\n  // These arrays are kept for re-batching indices based on colors.\n  // If WebGL 2 is supported, indices will be released and re-batching uses buffer-to-buffer copies.\n  this._indices = options.indices;\n  this._indexCounts = options.indexCounts;\n  this._indexOffsets = options.indexOffsets;\n  this._batchedIndices = options.batchedIndices;\n\n  this._boundingVolume = options.boundingVolume;\n  this._boundingVolumes = options.boundingVolumes;\n\n  this._center = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.center, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO);\n\n  this._va = undefined;\n  this._sp = undefined;\n  this._spStencil = undefined;\n  this._spPick = undefined;\n  this._uniformMap = undefined;\n\n  // Only used with WebGL 2 to ping-pong ibos after copy.\n  this._vaSwap = undefined;\n\n  this._rsStencilDepthPass = undefined;\n  this._rsStencilDepthPass3DTiles = undefined;\n  this._rsColorPass = undefined;\n  this._rsPickPass = undefined;\n  this._rsWireframe = undefined;\n\n  this._commands = [];\n  this._commandsIgnoreShow = [];\n  this._pickCommands = [];\n\n  this._constantColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].WHITE */ .Z.WHITE);\n  this._highlightColor = this._constantColor;\n\n  this._batchDirty = true;\n  this._pickCommandsDirty = true;\n  this._framesSinceLastRebatch = 0;\n\n  this._updatingAllCommands = false;\n\n  this._trianglesLength = this._indices.length / 3;\n  this._geometryByteLength =\n    this._indices.byteLength +\n    this._positions.byteLength +\n    this._vertexBatchIds.byteLength;\n\n  /**\n   * Draw the wireframe of the classification meshes.\n   * @type {Boolean}\n   * @default false\n   */\n  this.debugWireframe = false;\n  this._debugWireframe = this.debugWireframe;\n  this._wireframeDirty = false;\n\n  /**\n   * Forces a re-batch instead of waiting after a number of frames have been rendered. For testing only.\n   * @type {Boolean}\n   * @default false\n   */\n  this.forceRebatch = false;\n\n  /**\n   * What this tile will classify.\n   * @type {ClassificationType}\n   * @default ClassificationType.BOTH\n   */\n  this.classificationType = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(\n    options.classificationType,\n    _ClassificationType_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].BOTH */ .Z.BOTH\n  );\n\n  // Hidden options\n  this._vertexShaderSource = options._vertexShaderSource;\n  this._fragmentShaderSource = options._fragmentShaderSource;\n  this._attributeLocations = options._attributeLocations;\n  this._uniformMap = options._uniformMap;\n  this._pickId = options._pickId;\n  this._modelMatrix = options._modelMatrix;\n  this._boundingSphere = options._boundingSphere;\n\n  this._batchIdLookUp = {};\n\n  var length = this._batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = this._batchIds[i];\n    this._batchIdLookUp[batchId] = i;\n  }\n}\n\nObject.defineProperties(Vector3DTilePrimitive.prototype, {\n  /**\n   * Gets the number of triangles.\n   *\n   * @memberof Vector3DTilePrimitive.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  trianglesLength: {\n    get: function () {\n      return this._trianglesLength;\n    },\n  },\n\n  /**\n   * Gets the geometry memory in bytes.\n   *\n   * @memberof Vector3DTilePrimitive.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  geometryByteLength: {\n    get: function () {\n      return this._geometryByteLength;\n    },\n  },\n});\n\nvar defaultAttributeLocations = {\n  position: 0,\n  a_batchId: 1,\n};\n\nfunction createVertexArray(primitive, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(primitive._va)) {\n    return;\n  }\n\n  var positionBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n    context: context,\n    typedArray: primitive._positions,\n    usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n  });\n  var idBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].createVertexBuffer */ .Z.createVertexBuffer({\n    context: context,\n    typedArray: primitive._vertexBatchIds,\n    usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n  });\n  var indexBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].createIndexBuffer */ .Z.createIndexBuffer({\n    context: context,\n    typedArray: primitive._indices,\n    usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].DYNAMIC_DRAW */ .Z.DYNAMIC_DRAW,\n    indexDatatype:\n      primitive._indices.BYTES_PER_ELEMENT === 2\n        ? _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT\n        : _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n  });\n\n  var vertexAttributes = [\n    {\n      index: 0,\n      vertexBuffer: positionBuffer,\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromTypedArray */ .Z.fromTypedArray(primitive._positions),\n      componentsPerAttribute: 3,\n    },\n    {\n      index: 1,\n      vertexBuffer: idBuffer,\n      componentDatatype: _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromTypedArray */ .Z.fromTypedArray(\n        primitive._vertexBatchIds\n      ),\n      componentsPerAttribute: 1,\n    },\n  ];\n\n  primitive._va = new _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n    context: context,\n    attributes: vertexAttributes,\n    indexBuffer: indexBuffer,\n  });\n\n  if (context.webgl2) {\n    primitive._vaSwap = new _Renderer_VertexArray_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n      context: context,\n      attributes: vertexAttributes,\n      indexBuffer: _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].createIndexBuffer */ .Z.createIndexBuffer({\n        context: context,\n        sizeInBytes: indexBuffer.sizeInBytes,\n        usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].DYNAMIC_DRAW */ .Z.DYNAMIC_DRAW,\n        indexDatatype: indexBuffer.indexDatatype,\n      }),\n    });\n  }\n\n  primitive._batchedPositions = undefined;\n  primitive._transferrableBatchIds = undefined;\n  primitive._vertexBatchIds = undefined;\n  primitive._verticesPromise = undefined;\n}\n\nfunction createShaders(primitive, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(primitive._sp)) {\n    return;\n  }\n\n  var batchTable = primitive._batchTable;\n  var attributeLocations = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(\n    primitive._attributeLocations,\n    defaultAttributeLocations\n  );\n\n  var pickId = primitive._pickId;\n  var vertexShaderSource = primitive._vertexShaderSource;\n  var fragmentShaderSource = primitive._fragmentShaderSource;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(vertexShaderSource)) {\n    primitive._sp = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromCache */ .Z.fromCache({\n      context: context,\n      vertexShaderSource: vertexShaderSource,\n      fragmentShaderSource: fragmentShaderSource,\n      attributeLocations: attributeLocations,\n    });\n    primitive._spStencil = primitive._sp;\n\n    fragmentShaderSource = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].replaceMain */ .Z.replaceMain(\n      fragmentShaderSource,\n      "czm_non_pick_main"\n    );\n    fragmentShaderSource =\n      fragmentShaderSource +\n      "void main() \\n" +\n      "{ \\n" +\n      "    czm_non_pick_main(); \\n" +\n      "    gl_FragColor = " +\n      pickId +\n      "; \\n" +\n      "} \\n";\n    primitive._spPick = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromCache */ .Z.fromCache({\n      context: context,\n      vertexShaderSource: vertexShaderSource,\n      fragmentShaderSource: fragmentShaderSource,\n      attributeLocations: attributeLocations,\n    });\n    return;\n  }\n\n  var vsSource = batchTable.getVertexShaderCallback(\n    false,\n    "a_batchId",\n    undefined\n  )(_Shaders_VectorTileVS_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z);\n  var fsSource = batchTable.getFragmentShaderCallback(\n    false,\n    undefined,\n    true\n  )(_Shaders_ShadowVolumeFS_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z);\n\n  pickId = batchTable.getPickId();\n\n  var vs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    sources: [vsSource],\n  });\n  var fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    defines: ["VECTOR_TILE"],\n    sources: [fsSource],\n  });\n\n  primitive._sp = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromCache */ .Z.fromCache({\n    context: context,\n    vertexShaderSource: vs,\n    fragmentShaderSource: fs,\n    attributeLocations: attributeLocations,\n  });\n\n  vs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    sources: [_Shaders_VectorTileVS_js__WEBPACK_IMPORTED_MODULE_25__/* ["default"] */ .Z],\n  });\n  fs = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    defines: ["VECTOR_TILE"],\n    sources: [_Shaders_ShadowVolumeFS_js__WEBPACK_IMPORTED_MODULE_26__/* ["default"] */ .Z],\n  });\n\n  primitive._spStencil = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromCache */ .Z.fromCache({\n    context: context,\n    vertexShaderSource: vs,\n    fragmentShaderSource: fs,\n    attributeLocations: attributeLocations,\n  });\n\n  fsSource = _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].replaceMain */ .Z.replaceMain(fsSource, "czm_non_pick_main");\n  fsSource =\n    fsSource +\n    "\\n" +\n    "void main() \\n" +\n    "{ \\n" +\n    "    czm_non_pick_main(); \\n" +\n    "    gl_FragColor = " +\n    pickId +\n    "; \\n" +\n    "} \\n";\n\n  var pickVS = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    sources: [vsSource],\n  });\n  var pickFS = new _Renderer_ShaderSource_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z({\n    defines: ["VECTOR_TILE"],\n    sources: [fsSource],\n  });\n  primitive._spPick = _Renderer_ShaderProgram_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].fromCache */ .Z.fromCache({\n    context: context,\n    vertexShaderSource: pickVS,\n    fragmentShaderSource: pickFS,\n    attributeLocations: attributeLocations,\n  });\n}\n\nfunction getStencilDepthRenderState(mask3DTiles) {\n  var stencilFunction = mask3DTiles\n    ? _StencilFunction_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].EQUAL */ .Z.EQUAL\n    : _StencilFunction_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].ALWAYS */ .Z.ALWAYS;\n  return {\n    colorMask: {\n      red: false,\n      green: false,\n      blue: false,\n      alpha: false,\n    },\n    stencilTest: {\n      enabled: true,\n      frontFunction: stencilFunction,\n      frontOperation: {\n        fail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].KEEP */ .Z.KEEP,\n        zFail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].DECREMENT_WRAP */ .Z.DECREMENT_WRAP,\n        zPass: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].KEEP */ .Z.KEEP,\n      },\n      backFunction: stencilFunction,\n      backOperation: {\n        fail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].KEEP */ .Z.KEEP,\n        zFail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].INCREMENT_WRAP */ .Z.INCREMENT_WRAP,\n        zPass: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].KEEP */ .Z.KEEP,\n      },\n      reference: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK,\n      mask: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].CESIUM_3D_TILE_MASK */ .Z.CESIUM_3D_TILE_MASK,\n    },\n    stencilMask: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].CLASSIFICATION_MASK */ .Z.CLASSIFICATION_MASK,\n    depthTest: {\n      enabled: true,\n      func: _DepthFunction_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].LESS_OR_EQUAL */ .Z.LESS_OR_EQUAL,\n    },\n    depthMask: false,\n  };\n}\n\nvar colorRenderState = {\n  stencilTest: {\n    enabled: true,\n    frontFunction: _StencilFunction_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].NOT_EQUAL */ .Z.NOT_EQUAL,\n    frontOperation: {\n      fail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n      zFail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n      zPass: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n    },\n    backFunction: _StencilFunction_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].NOT_EQUAL */ .Z.NOT_EQUAL,\n    backOperation: {\n      fail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n      zFail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n      zPass: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n    },\n    reference: 0,\n    mask: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].CLASSIFICATION_MASK */ .Z.CLASSIFICATION_MASK,\n  },\n  stencilMask: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].CLASSIFICATION_MASK */ .Z.CLASSIFICATION_MASK,\n  depthTest: {\n    enabled: false,\n  },\n  depthMask: false,\n  blending: _BlendingState_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].PRE_MULTIPLIED_ALPHA_BLEND */ .Z.PRE_MULTIPLIED_ALPHA_BLEND,\n};\n\nvar pickRenderState = {\n  stencilTest: {\n    enabled: true,\n    frontFunction: _StencilFunction_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].NOT_EQUAL */ .Z.NOT_EQUAL,\n    frontOperation: {\n      fail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n      zFail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n      zPass: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n    },\n    backFunction: _StencilFunction_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].NOT_EQUAL */ .Z.NOT_EQUAL,\n    backOperation: {\n      fail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n      zFail: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n      zPass: _StencilOperation_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"].ZERO */ .Z.ZERO,\n    },\n    reference: 0,\n    mask: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].CLASSIFICATION_MASK */ .Z.CLASSIFICATION_MASK,\n  },\n  stencilMask: _StencilConstants_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].CLASSIFICATION_MASK */ .Z.CLASSIFICATION_MASK,\n  depthTest: {\n    enabled: false,\n  },\n  depthMask: false,\n};\n\nfunction createRenderStates(primitive) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(primitive._rsStencilDepthPass)) {\n    return;\n  }\n\n  primitive._rsStencilDepthPass = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCache */ .Z.fromCache(\n    getStencilDepthRenderState(false)\n  );\n  primitive._rsStencilDepthPass3DTiles = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCache */ .Z.fromCache(\n    getStencilDepthRenderState(true)\n  );\n  primitive._rsColorPass = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCache */ .Z.fromCache(colorRenderState);\n  primitive._rsPickPass = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCache */ .Z.fromCache(pickRenderState);\n}\n\nvar modifiedModelViewScratch = new _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar rtcScratch = new _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nfunction createUniformMap(primitive, context) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(primitive._uniformMap)) {\n    return;\n  }\n\n  var uniformMap = {\n    u_modifiedModelViewProjection: function () {\n      var viewMatrix = context.uniformState.view;\n      var projectionMatrix = context.uniformState.projection;\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(viewMatrix, modifiedModelViewScratch);\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(\n        modifiedModelViewScratch,\n        primitive._center,\n        rtcScratch\n      );\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].setTranslation */ .Z.setTranslation(\n        modifiedModelViewScratch,\n        rtcScratch,\n        modifiedModelViewScratch\n      );\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].multiply */ .Z.multiply(\n        projectionMatrix,\n        modifiedModelViewScratch,\n        modifiedModelViewScratch\n      );\n      return modifiedModelViewScratch;\n    },\n    u_highlightColor: function () {\n      return primitive._highlightColor;\n    },\n  };\n\n  primitive._uniformMap = primitive._batchTable.getUniformMapCallback()(\n    uniformMap\n  );\n}\n\nfunction copyIndicesCPU(\n  indices,\n  newIndices,\n  currentOffset,\n  offsets,\n  counts,\n  batchIds,\n  batchIdLookUp\n) {\n  var sizeInBytes = indices.constructor.BYTES_PER_ELEMENT;\n\n  var batchedIdsLength = batchIds.length;\n  for (var j = 0; j < batchedIdsLength; ++j) {\n    var batchedId = batchIds[j];\n    var index = batchIdLookUp[batchedId];\n    var offset = offsets[index];\n    var count = counts[index];\n\n    var subarray = new indices.constructor(\n      indices.buffer,\n      sizeInBytes * offset,\n      count\n    );\n    newIndices.set(subarray, currentOffset);\n\n    offsets[index] = currentOffset;\n    currentOffset += count;\n  }\n\n  return currentOffset;\n}\n\nfunction rebatchCPU(primitive, batchedIndices) {\n  var indices = primitive._indices;\n  var indexOffsets = primitive._indexOffsets;\n  var indexCounts = primitive._indexCounts;\n  var batchIdLookUp = primitive._batchIdLookUp;\n\n  var newIndices = new indices.constructor(indices.length);\n\n  var current = batchedIndices.pop();\n  var newBatchedIndices = [current];\n\n  var currentOffset = copyIndicesCPU(\n    indices,\n    newIndices,\n    0,\n    indexOffsets,\n    indexCounts,\n    current.batchIds,\n    batchIdLookUp\n  );\n\n  current.offset = 0;\n  current.count = currentOffset;\n\n  while (batchedIndices.length > 0) {\n    var next = batchedIndices.pop();\n    if (_Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equals */ .Z.equals(next.color, current.color)) {\n      currentOffset = copyIndicesCPU(\n        indices,\n        newIndices,\n        currentOffset,\n        indexOffsets,\n        indexCounts,\n        next.batchIds,\n        batchIdLookUp\n      );\n      current.batchIds = current.batchIds.concat(next.batchIds);\n      current.count = currentOffset - current.offset;\n    } else {\n      var offset = currentOffset;\n      currentOffset = copyIndicesCPU(\n        indices,\n        newIndices,\n        currentOffset,\n        indexOffsets,\n        indexCounts,\n        next.batchIds,\n        batchIdLookUp\n      );\n\n      next.offset = offset;\n      next.count = currentOffset - offset;\n      newBatchedIndices.push(next);\n      current = next;\n    }\n  }\n\n  primitive._va.indexBuffer.copyFromArrayView(newIndices);\n\n  primitive._indices = newIndices;\n  primitive._batchedIndices = newBatchedIndices;\n}\n\nfunction copyIndicesGPU(\n  readBuffer,\n  writeBuffer,\n  currentOffset,\n  offsets,\n  counts,\n  batchIds,\n  batchIdLookUp\n) {\n  var sizeInBytes = readBuffer.bytesPerIndex;\n\n  var batchedIdsLength = batchIds.length;\n  for (var j = 0; j < batchedIdsLength; ++j) {\n    var batchedId = batchIds[j];\n    var index = batchIdLookUp[batchedId];\n    var offset = offsets[index];\n    var count = counts[index];\n\n    writeBuffer.copyFromBuffer(\n      readBuffer,\n      offset * sizeInBytes,\n      currentOffset * sizeInBytes,\n      count * sizeInBytes\n    );\n\n    offsets[index] = currentOffset;\n    currentOffset += count;\n  }\n\n  return currentOffset;\n}\n\nfunction rebatchGPU(primitive, batchedIndices) {\n  var indexOffsets = primitive._indexOffsets;\n  var indexCounts = primitive._indexCounts;\n  var batchIdLookUp = primitive._batchIdLookUp;\n\n  var current = batchedIndices.pop();\n  var newBatchedIndices = [current];\n\n  var readBuffer = primitive._va.indexBuffer;\n  var writeBuffer = primitive._vaSwap.indexBuffer;\n\n  var currentOffset = copyIndicesGPU(\n    readBuffer,\n    writeBuffer,\n    0,\n    indexOffsets,\n    indexCounts,\n    current.batchIds,\n    batchIdLookUp\n  );\n\n  current.offset = 0;\n  current.count = currentOffset;\n\n  while (batchedIndices.length > 0) {\n    var next = batchedIndices.pop();\n    if (_Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equals */ .Z.equals(next.color, current.color)) {\n      currentOffset = copyIndicesGPU(\n        readBuffer,\n        writeBuffer,\n        currentOffset,\n        indexOffsets,\n        indexCounts,\n        next.batchIds,\n        batchIdLookUp\n      );\n      current.batchIds = current.batchIds.concat(next.batchIds);\n      current.count = currentOffset - current.offset;\n    } else {\n      var offset = currentOffset;\n      currentOffset = copyIndicesGPU(\n        readBuffer,\n        writeBuffer,\n        currentOffset,\n        indexOffsets,\n        indexCounts,\n        next.batchIds,\n        batchIdLookUp\n      );\n      next.offset = offset;\n      next.count = currentOffset - offset;\n      newBatchedIndices.push(next);\n      current = next;\n    }\n  }\n\n  var temp = primitive._va;\n  primitive._va = primitive._vaSwap;\n  primitive._vaSwap = temp;\n\n  primitive._batchedIndices = newBatchedIndices;\n}\n\nfunction compareColors(a, b) {\n  return b.color.toRgba() - a.color.toRgba();\n}\n\n// PERFORMANCE_IDEA: For WebGL 2, we can use copyBufferSubData for buffer-to-buffer copies.\n// PERFORMANCE_IDEA: Not supported, but we could use glMultiDrawElements here.\nfunction rebatchCommands(primitive, context) {\n  if (!primitive._batchDirty) {\n    return false;\n  }\n\n  var batchedIndices = primitive._batchedIndices;\n  var length = batchedIndices.length;\n\n  var needToRebatch = false;\n  var colorCounts = {};\n\n  for (var i = 0; i < length; ++i) {\n    var color = batchedIndices[i].color;\n    var rgba = color.toRgba();\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(colorCounts[rgba])) {\n      needToRebatch = true;\n      break;\n    } else {\n      colorCounts[rgba] = true;\n    }\n  }\n\n  if (!needToRebatch) {\n    primitive._batchDirty = false;\n    return false;\n  }\n\n  if (\n    needToRebatch &&\n    !primitive.forceRebatch &&\n    primitive._framesSinceLastRebatch < 120\n  ) {\n    ++primitive._framesSinceLastRebatch;\n    return;\n  }\n\n  batchedIndices.sort(compareColors);\n\n  if (context.webgl2) {\n    rebatchGPU(primitive, batchedIndices);\n  } else {\n    rebatchCPU(primitive, batchedIndices);\n  }\n\n  primitive._framesSinceLastRebatch = 0;\n  primitive._batchDirty = false;\n  primitive._pickCommandsDirty = true;\n  primitive._wireframeDirty = true;\n  return true;\n}\n\nfunction createColorCommands(primitive, context) {\n  var needsRebatch = rebatchCommands(primitive, context);\n\n  var commands = primitive._commands;\n  var batchedIndices = primitive._batchedIndices;\n  var length = batchedIndices.length;\n  var commandsLength = length * 2;\n\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(commands) &&\n    !needsRebatch &&\n    commands.length === commandsLength\n  ) {\n    return;\n  }\n\n  commands.length = commandsLength;\n\n  var vertexArray = primitive._va;\n  var sp = primitive._sp;\n  var modelMatrix = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(primitive._modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  var uniformMap = primitive._uniformMap;\n  var bv = primitive._boundingVolume;\n\n  for (var j = 0; j < length; ++j) {\n    var offset = batchedIndices[j].offset;\n    var count = batchedIndices[j].count;\n\n    var stencilDepthCommand = commands[j * 2];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(stencilDepthCommand)) {\n      stencilDepthCommand = commands[j * 2] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n        owner: primitive,\n      });\n    }\n\n    stencilDepthCommand.vertexArray = vertexArray;\n    stencilDepthCommand.modelMatrix = modelMatrix;\n    stencilDepthCommand.offset = offset;\n    stencilDepthCommand.count = count;\n    stencilDepthCommand.renderState = primitive._rsStencilDepthPass;\n    stencilDepthCommand.shaderProgram = sp;\n    stencilDepthCommand.uniformMap = uniformMap;\n    stencilDepthCommand.boundingVolume = bv;\n    stencilDepthCommand.cull = false;\n    stencilDepthCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].TERRAIN_CLASSIFICATION */ .Z.TERRAIN_CLASSIFICATION;\n\n    var stencilDepthDerivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].shallowClone */ .Z.shallowClone(\n      stencilDepthCommand,\n      stencilDepthCommand.derivedCommands.tileset\n    );\n    stencilDepthDerivedCommand.renderState =\n      primitive._rsStencilDepthPass3DTiles;\n    stencilDepthDerivedCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION;\n    stencilDepthCommand.derivedCommands.tileset = stencilDepthDerivedCommand;\n\n    var colorCommand = commands[j * 2 + 1];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(colorCommand)) {\n      colorCommand = commands[j * 2 + 1] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n        owner: primitive,\n      });\n    }\n\n    colorCommand.vertexArray = vertexArray;\n    colorCommand.modelMatrix = modelMatrix;\n    colorCommand.offset = offset;\n    colorCommand.count = count;\n    colorCommand.renderState = primitive._rsColorPass;\n    colorCommand.shaderProgram = sp;\n    colorCommand.uniformMap = uniformMap;\n    colorCommand.boundingVolume = bv;\n    colorCommand.cull = false;\n    colorCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].TERRAIN_CLASSIFICATION */ .Z.TERRAIN_CLASSIFICATION;\n\n    var colorDerivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].shallowClone */ .Z.shallowClone(\n      colorCommand,\n      colorCommand.derivedCommands.tileset\n    );\n    colorDerivedCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION;\n    colorCommand.derivedCommands.tileset = colorDerivedCommand;\n  }\n\n  primitive._commandsDirty = true;\n}\n\nfunction createColorCommandsIgnoreShow(primitive, frameState) {\n  if (\n    primitive.classificationType === _ClassificationType_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].TERRAIN */ .Z.TERRAIN ||\n    !frameState.invertClassification ||\n    ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(primitive._commandsIgnoreShow) && !primitive._commandsDirty)\n  ) {\n    return;\n  }\n\n  var commands = primitive._commands;\n  var commandsIgnoreShow = primitive._commandsIgnoreShow;\n  var spStencil = primitive._spStencil;\n\n  var commandsLength = commands.length;\n  var length = (commandsIgnoreShow.length = commandsLength / 2);\n\n  var commandIndex = 0;\n  for (var j = 0; j < length; ++j) {\n    var commandIgnoreShow = (commandsIgnoreShow[j] = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].shallowClone */ .Z.shallowClone(\n      commands[commandIndex],\n      commandsIgnoreShow[j]\n    ));\n    commandIgnoreShow.shaderProgram = spStencil;\n    commandIgnoreShow.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW */ .Z.CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW;\n\n    commandIndex += 2;\n  }\n\n  primitive._commandsDirty = false;\n}\n\nfunction createPickCommands(primitive) {\n  if (!primitive._pickCommandsDirty) {\n    return;\n  }\n\n  var length = primitive._indexOffsets.length;\n  var pickCommands = primitive._pickCommands;\n  pickCommands.length = length * 2;\n\n  var vertexArray = primitive._va;\n  var spStencil = primitive._spStencil;\n  var spPick = primitive._spPick;\n  var modelMatrix = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(primitive._modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].IDENTITY */ .Z.IDENTITY);\n  var uniformMap = primitive._uniformMap;\n\n  for (var j = 0; j < length; ++j) {\n    var offset = primitive._indexOffsets[j];\n    var count = primitive._indexCounts[j];\n    var bv = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(primitive._boundingVolumes)\n      ? primitive._boundingVolumes[j]\n      : primitive.boundingVolume;\n\n    var stencilDepthCommand = pickCommands[j * 2];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(stencilDepthCommand)) {\n      stencilDepthCommand = pickCommands[j * 2] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n        owner: primitive,\n        pickOnly: true,\n      });\n    }\n\n    stencilDepthCommand.vertexArray = vertexArray;\n    stencilDepthCommand.modelMatrix = modelMatrix;\n    stencilDepthCommand.offset = offset;\n    stencilDepthCommand.count = count;\n    stencilDepthCommand.renderState = primitive._rsStencilDepthPass;\n    stencilDepthCommand.shaderProgram = spStencil;\n    stencilDepthCommand.uniformMap = uniformMap;\n    stencilDepthCommand.boundingVolume = bv;\n    stencilDepthCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].TERRAIN_CLASSIFICATION */ .Z.TERRAIN_CLASSIFICATION;\n\n    var stencilDepthDerivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].shallowClone */ .Z.shallowClone(\n      stencilDepthCommand,\n      stencilDepthCommand.derivedCommands.tileset\n    );\n    stencilDepthDerivedCommand.renderState =\n      primitive._rsStencilDepthPass3DTiles;\n    stencilDepthDerivedCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION;\n    stencilDepthCommand.derivedCommands.tileset = stencilDepthDerivedCommand;\n\n    var colorCommand = pickCommands[j * 2 + 1];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(colorCommand)) {\n      colorCommand = pickCommands[j * 2 + 1] = new _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n        owner: primitive,\n        pickOnly: true,\n      });\n    }\n\n    colorCommand.vertexArray = vertexArray;\n    colorCommand.modelMatrix = modelMatrix;\n    colorCommand.offset = offset;\n    colorCommand.count = count;\n    colorCommand.renderState = primitive._rsPickPass;\n    colorCommand.shaderProgram = spPick;\n    colorCommand.uniformMap = uniformMap;\n    colorCommand.boundingVolume = bv;\n    colorCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].TERRAIN_CLASSIFICATION */ .Z.TERRAIN_CLASSIFICATION;\n\n    var colorDerivedCommand = _Renderer_DrawCommand_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].shallowClone */ .Z.shallowClone(\n      colorCommand,\n      colorCommand.derivedCommands.tileset\n    );\n    colorDerivedCommand.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION;\n    colorCommand.derivedCommands.tileset = colorDerivedCommand;\n  }\n\n  primitive._pickCommandsDirty = false;\n}\n\n/**\n * Creates features for each mesh and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the polygon features will be placed.\n */\nVector3DTilePrimitive.prototype.createFeatures = function (content, features) {\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    features[batchId] = new _Cesium3DTileFeature_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z(content, batchId);\n  }\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (mesh batch table color * color).\n *\n * @param {Boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTilePrimitive.prototype.applyDebugSettings = function (enabled, color) {\n  this._highlightColor = enabled ? color : this._constantColor;\n};\n\nfunction clearStyle(polygons, features) {\n  polygons._updatingAllCommands = true;\n\n  var batchIds = polygons._batchIds;\n  var length = batchIds.length;\n  var i;\n\n  for (i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    feature.show = true;\n    feature.color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].WHITE */ .Z.WHITE;\n  }\n\n  var batchedIndices = polygons._batchedIndices;\n  length = batchedIndices.length;\n\n  for (i = 0; i < length; ++i) {\n    batchedIndices[i].color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].WHITE */ .Z.WHITE);\n  }\n\n  polygons._updatingAllCommands = false;\n  polygons._batchDirty = true;\n}\n\nvar scratchColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nvar DEFAULT_COLOR_VALUE = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].WHITE */ .Z.WHITE;\nvar DEFAULT_SHOW_VALUE = true;\n\nvar complexExpressionReg = /\\$/;\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\nVector3DTilePrimitive.prototype.applyStyle = function (style, features) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(style)) {\n    clearStyle(this, features);\n    return;\n  }\n\n  var colorExpression = style.color;\n  var isSimpleStyle =\n    colorExpression instanceof _Expression_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z &&\n    !complexExpressionReg.test(colorExpression.expression);\n  this._updatingAllCommands = isSimpleStyle;\n\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  var i;\n\n  for (i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    feature.color = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(style.color)\n      ? style.color.evaluateColor(feature, scratchColor)\n      : DEFAULT_COLOR_VALUE;\n    feature.show = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(style.show)\n      ? style.show.evaluate(feature)\n      : DEFAULT_SHOW_VALUE;\n  }\n\n  if (isSimpleStyle) {\n    var batchedIndices = this._batchedIndices;\n    length = batchedIndices.length;\n\n    for (i = 0; i < length; ++i) {\n      batchedIndices[i].color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].WHITE */ .Z.WHITE);\n    }\n\n    this._updatingAllCommands = false;\n    this._batchDirty = true;\n  }\n};\n\n/**\n * Call when updating the color of a mesh with batchId changes color. The meshes will need to be re-batched\n * on the next update.\n *\n * @param {Number} batchId The batch id of the meshes whose color has changed.\n * @param {Color} color The new polygon color.\n */\nVector3DTilePrimitive.prototype.updateCommands = function (batchId, color) {\n  if (this._updatingAllCommands) {\n    return;\n  }\n\n  var batchIdLookUp = this._batchIdLookUp;\n  var index = batchIdLookUp[batchId];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(index)) {\n    return;\n  }\n\n  var indexOffsets = this._indexOffsets;\n  var indexCounts = this._indexCounts;\n\n  var offset = indexOffsets[index];\n  var count = indexCounts[index];\n\n  var batchedIndices = this._batchedIndices;\n  var length = batchedIndices.length;\n\n  var i;\n  for (i = 0; i < length; ++i) {\n    var batchedOffset = batchedIndices[i].offset;\n    var batchedCount = batchedIndices[i].count;\n\n    if (offset >= batchedOffset && offset < batchedOffset + batchedCount) {\n      break;\n    }\n  }\n\n  batchedIndices.push(\n    new _Vector3DTileBatch_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"] */ .Z({\n      color: _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(color),\n      offset: offset,\n      count: count,\n      batchIds: [batchId],\n    })\n  );\n\n  var startIds = [];\n  var endIds = [];\n\n  var batchIds = batchedIndices[i].batchIds;\n  var batchIdsLength = batchIds.length;\n\n  for (var j = 0; j < batchIdsLength; ++j) {\n    var id = batchIds[j];\n    if (id === batchId) {\n      continue;\n    }\n\n    var offsetIndex = batchIdLookUp[id];\n    if (indexOffsets[offsetIndex] < offset) {\n      startIds.push(id);\n    } else {\n      endIds.push(id);\n    }\n  }\n\n  if (endIds.length !== 0) {\n    batchedIndices.push(\n      new _Vector3DTileBatch_js__WEBPACK_IMPORTED_MODULE_27__/* ["default"] */ .Z({\n        color: _Core_Color_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(batchedIndices[i].color),\n        offset: offset + count,\n        count:\n          batchedIndices[i].offset + batchedIndices[i].count - (offset + count),\n        batchIds: endIds,\n      })\n    );\n  }\n\n  if (startIds.length !== 0) {\n    batchedIndices[i].count = offset - batchedIndices[i].offset;\n    batchedIndices[i].batchIds = startIds;\n  } else {\n    batchedIndices.splice(i, 1);\n  }\n\n  this._batchDirty = true;\n};\n\nfunction queueCommands(primitive, frameState, commands, commandsIgnoreShow) {\n  var classificationType = primitive.classificationType;\n  var queueTerrainCommands =\n    classificationType !== _ClassificationType_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].CESIUM_3D_TILE */ .Z.CESIUM_3D_TILE;\n  var queue3DTilesCommands = classificationType !== _ClassificationType_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].TERRAIN */ .Z.TERRAIN;\n\n  var commandList = frameState.commandList;\n  var commandLength = commands.length;\n  var command;\n  var i;\n  for (i = 0; i < commandLength; ++i) {\n    if (queueTerrainCommands) {\n      command = commands[i];\n      command.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].TERRAIN_CLASSIFICATION */ .Z.TERRAIN_CLASSIFICATION;\n      commandList.push(command);\n    }\n    if (queue3DTilesCommands) {\n      command = commands[i].derivedCommands.tileset;\n      command.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].CESIUM_3D_TILE_CLASSIFICATION */ .Z.CESIUM_3D_TILE_CLASSIFICATION;\n      commandList.push(command);\n    }\n  }\n\n  if (!frameState.invertClassification || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(commandsIgnoreShow)) {\n    return;\n  }\n\n  commandLength = commandsIgnoreShow.length;\n  for (i = 0; i < commandLength; ++i) {\n    commandList.push(commandsIgnoreShow[i]);\n  }\n}\n\nfunction queueWireframeCommands(frameState, commands) {\n  var commandList = frameState.commandList;\n  var commandLength = commands.length;\n  for (var i = 0; i < commandLength; i += 2) {\n    var command = commands[i + 1];\n    command.pass = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].OPAQUE */ .Z.OPAQUE;\n    commandList.push(command);\n  }\n}\n\nfunction updateWireframe(primitive) {\n  var earlyExit = primitive.debugWireframe === primitive._debugWireframe;\n  earlyExit =\n    earlyExit && !(primitive.debugWireframe && primitive._wireframeDirty);\n  if (earlyExit) {\n    return;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(primitive._rsWireframe)) {\n    primitive._rsWireframe = _Renderer_RenderState_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].fromCache */ .Z.fromCache({});\n  }\n\n  var rs;\n  var type;\n\n  if (primitive.debugWireframe) {\n    rs = primitive._rsWireframe;\n    type = _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].LINES */ .Z.LINES;\n  } else {\n    rs = primitive._rsColorPass;\n    type = _Core_PrimitiveType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].TRIANGLES */ .Z.TRIANGLES;\n  }\n\n  var commands = primitive._commands;\n  var commandLength = commands.length;\n  for (var i = 0; i < commandLength; i += 2) {\n    var command = commands[i + 1];\n    command.renderState = rs;\n    command.primitiveType = type;\n  }\n\n  primitive._debugWireframe = primitive.debugWireframe;\n  primitive._wireframeDirty = false;\n}\n\n/**\n * Updates the batches and queues the commands for rendering.\n *\n * @param {FrameState} frameState The current frame state.\n */\nVector3DTilePrimitive.prototype.update = function (frameState) {\n  var context = frameState.context;\n\n  createVertexArray(this, context);\n  createShaders(this, context);\n  createRenderStates(this);\n  createUniformMap(this, context);\n\n  var passes = frameState.passes;\n  if (passes.render) {\n    createColorCommands(this, context);\n    createColorCommandsIgnoreShow(this, frameState);\n    updateWireframe(this);\n\n    if (this._debugWireframe) {\n      queueWireframeCommands(frameState, this._commands);\n    } else {\n      queueCommands(this, frameState, this._commands, this._commandsIgnoreShow);\n    }\n  }\n\n  if (passes.pick) {\n    createPickCommands(this);\n    queueCommands(this, frameState, this._pickCommands);\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTilePrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTilePrimitive.prototype.destroy = function () {\n  this._va = this._va && this._va.destroy();\n  this._sp = this._sp && this._sp.destroy();\n  this._spPick = this._spPick && this._spPick.destroy();\n  this._vaSwap = this._vaSwap && this._vaSwap.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Vector3DTilePrimitive);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0EsbUJBQW1CLGlGQUFXO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPLHNFQUFPO0FBQ2QsNkJBQTZCLDhGQUFxQixHQUFHO0FBQ3JEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsbUZBQW1CO0FBQzlCLElBQUk7QUFDSjtBQUNBLFdBQVcsMkZBQXVCO0FBQ2xDOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBLHdEQUF3RDtBQUN4RCw4Q0FBOEMsc0JBQXNCO0FBQ3BFO0FBQ0E7QUFDQSxhQUFhLFNBQVMsZ0RBQWdEO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELDhDQUE4QyxzQkFBc0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyRUFBYTtBQUN0QjtBQUNBLHlEQUFlLHFCQUFxQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL1ZlY3RvcjNEVGlsZVByaW1pdGl2ZS5qcz80MDUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDYXJ0ZXNpYW4zIGZyb20gXCIuLi9Db3JlL0NhcnRlc2lhbjMuanNcIjtcbmltcG9ydCBDb2xvciBmcm9tIFwiLi4vQ29yZS9Db2xvci5qc1wiO1xuaW1wb3J0IENvbXBvbmVudERhdGF0eXBlIGZyb20gXCIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlLmpzXCI7XG5pbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuLi9Db3JlL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4uL0NvcmUvZGVmaW5lZC5qc1wiO1xuaW1wb3J0IGRlc3Ryb3lPYmplY3QgZnJvbSBcIi4uL0NvcmUvZGVzdHJveU9iamVjdC5qc1wiO1xuaW1wb3J0IEluZGV4RGF0YXR5cGUgZnJvbSBcIi4uL0NvcmUvSW5kZXhEYXRhdHlwZS5qc1wiO1xuaW1wb3J0IE1hdHJpeDQgZnJvbSBcIi4uL0NvcmUvTWF0cml4NC5qc1wiO1xuaW1wb3J0IFByaW1pdGl2ZVR5cGUgZnJvbSBcIi4uL0NvcmUvUHJpbWl0aXZlVHlwZS5qc1wiO1xuaW1wb3J0IEJ1ZmZlciBmcm9tIFwiLi4vUmVuZGVyZXIvQnVmZmVyLmpzXCI7XG5pbXBvcnQgQnVmZmVyVXNhZ2UgZnJvbSBcIi4uL1JlbmRlcmVyL0J1ZmZlclVzYWdlLmpzXCI7XG5pbXBvcnQgRHJhd0NvbW1hbmQgZnJvbSBcIi4uL1JlbmRlcmVyL0RyYXdDb21tYW5kLmpzXCI7XG5pbXBvcnQgUGFzcyBmcm9tIFwiLi4vUmVuZGVyZXIvUGFzcy5qc1wiO1xuaW1wb3J0IFJlbmRlclN0YXRlIGZyb20gXCIuLi9SZW5kZXJlci9SZW5kZXJTdGF0ZS5qc1wiO1xuaW1wb3J0IFNoYWRlclByb2dyYW0gZnJvbSBcIi4uL1JlbmRlcmVyL1NoYWRlclByb2dyYW0uanNcIjtcbmltcG9ydCBTaGFkZXJTb3VyY2UgZnJvbSBcIi4uL1JlbmRlcmVyL1NoYWRlclNvdXJjZS5qc1wiO1xuaW1wb3J0IFZlcnRleEFycmF5IGZyb20gXCIuLi9SZW5kZXJlci9WZXJ0ZXhBcnJheS5qc1wiO1xuaW1wb3J0IFNoYWRvd1ZvbHVtZUZTIGZyb20gXCIuLi9TaGFkZXJzL1NoYWRvd1ZvbHVtZUZTLmpzXCI7XG5pbXBvcnQgVmVjdG9yVGlsZVZTIGZyb20gXCIuLi9TaGFkZXJzL1ZlY3RvclRpbGVWUy5qc1wiO1xuaW1wb3J0IEJsZW5kaW5nU3RhdGUgZnJvbSBcIi4vQmxlbmRpbmdTdGF0ZS5qc1wiO1xuaW1wb3J0IENlc2l1bTNEVGlsZUZlYXR1cmUgZnJvbSBcIi4vQ2VzaXVtM0RUaWxlRmVhdHVyZS5qc1wiO1xuaW1wb3J0IENsYXNzaWZpY2F0aW9uVHlwZSBmcm9tIFwiLi9DbGFzc2lmaWNhdGlvblR5cGUuanNcIjtcbmltcG9ydCBEZXB0aEZ1bmN0aW9uIGZyb20gXCIuL0RlcHRoRnVuY3Rpb24uanNcIjtcbmltcG9ydCBFeHByZXNzaW9uIGZyb20gXCIuL0V4cHJlc3Npb24uanNcIjtcbmltcG9ydCBTdGVuY2lsQ29uc3RhbnRzIGZyb20gXCIuL1N0ZW5jaWxDb25zdGFudHMuanNcIjtcbmltcG9ydCBTdGVuY2lsRnVuY3Rpb24gZnJvbSBcIi4vU3RlbmNpbEZ1bmN0aW9uLmpzXCI7XG5pbXBvcnQgU3RlbmNpbE9wZXJhdGlvbiBmcm9tIFwiLi9TdGVuY2lsT3BlcmF0aW9uLmpzXCI7XG5pbXBvcnQgVmVjdG9yM0RUaWxlQmF0Y2ggZnJvbSBcIi4vVmVjdG9yM0RUaWxlQmF0Y2guanNcIjtcblxuLyoqXG4gKiBDcmVhdGVzIGEgYmF0Y2ggb2YgY2xhc3NpZmljYXRpb24gbWVzaGVzLlxuICpcbiAqIEBhbGlhcyBWZWN0b3IzRFRpbGVQcmltaXRpdmVcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIEFuIG9iamVjdCB3aXRoIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICogQHBhcmFtIHtGbG9hdDMyQXJyYXl9IG9wdGlvbnMucG9zaXRpb25zIFRoZSBwb3NpdGlvbnMgb2YgdGhlIG1lc2hlcy5cbiAqIEBwYXJhbSB7VWludDE2QXJyYXl8VWludDMyQXJyYXl9IG9wdGlvbnMuaW5kaWNlcyBUaGUgaW5kaWNlcyBvZiB0aGUgdHJpYW5ndWxhdGVkIG1lc2hlcy4gVGhlIGluZGljZXMgbXVzdCBiZSBjb250aWd1b3VzIHNvIHRoYXRcbiAqIHRoZSBpbmRpY2VzIGZvciBtZXNoIG4gYXJlIGluIFtpLCBpICsgaW5kZXhDb3VudHNbbl1dIHdoZXJlIGkgPSBzdW17aW5kZXhDb3VudHNbMF0sIGluZGV4Q291bnRzW24gLSAxXX0uXG4gKiBAcGFyYW0ge1VpbnQzMkFycmF5fSBvcHRpb25zLmluZGV4Q291bnRzIFRoZSBudW1iZXIgb2YgaW5kaWNlcyBmb3IgZWFjaCBtZXNoLlxuICogQHBhcmFtIHtVaW50MzJBcnJheX0gb3B0aW9ucy5pbmRleE9mZnNldHMgVGhlIG9mZnNldCBpbnRvIHRoZSBpbmRleCBidWZmZXIgZm9yIGVhY2ggbWVzaC5cbiAqIEBwYXJhbSB7VmVjdG9yM0RUaWxlQmF0Y2hbXX0gb3B0aW9ucy5iYXRjaGVkSW5kaWNlcyBUaGUgaW5kZXggb2Zmc2V0IGFuZCBjb3VudCBmb3IgZWFjaCBiYXRjaCB3aXRoIHRoZSBzYW1lIGNvbG9yLlxuICogQHBhcmFtIHtDYXJ0ZXNpYW4zfSBbb3B0aW9ucy5jZW50ZXI9Q2FydGVzaWFuMy5aRVJPXSBUaGUgUlRDIGNlbnRlci5cbiAqIEBwYXJhbSB7Q2VzaXVtM0RUaWxlQmF0Y2hUYWJsZX0gb3B0aW9ucy5iYXRjaFRhYmxlIFRoZSBiYXRjaCB0YWJsZSBmb3IgdGhlIHRpbGUgY29udGFpbmluZyB0aGUgYmF0Y2hlZCBtZXNoZXMuXG4gKiBAcGFyYW0ge1VpbnQxNkFycmF5fSBvcHRpb25zLmJhdGNoSWRzIFRoZSBiYXRjaCBpZHMgZm9yIGVhY2ggbWVzaC5cbiAqIEBwYXJhbSB7VWludDE2QXJyYXl9IG9wdGlvbnMudmVydGV4QmF0Y2hJZHMgVGhlIGJhdGNoIGlkIGZvciBlYWNoIHZlcnRleC5cbiAqIEBwYXJhbSB7Qm91bmRpbmdTcGhlcmV9IG9wdGlvbnMuYm91bmRpbmdWb2x1bWUgVGhlIGJvdW5kaW5nIHZvbHVtZSBmb3IgdGhlIGVudGlyZSBiYXRjaCBvZiBtZXNoZXMuXG4gKiBAcGFyYW0ge0JvdW5kaW5nU3BoZXJlW119IG9wdGlvbnMuYm91bmRpbmdWb2x1bWVzIFRoZSBib3VuZGluZyB2b2x1bWUgZm9yIGVhY2ggbWVzaC5cbiAqIEBwYXJhbSB7Q2xhc3NpZmljYXRpb25UeXBlfSBbb3B0aW9ucy5jbGFzc2lmaWNhdGlvblR5cGVdIFdoYXQgdGhpcyB0aWxlIHdpbGwgY2xhc3NpZnkuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gVmVjdG9yM0RUaWxlUHJpbWl0aXZlKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IGRlZmF1bHRWYWx1ZShvcHRpb25zLCBkZWZhdWx0VmFsdWUuRU1QVFlfT0JKRUNUKTtcblxuICB0aGlzLl9iYXRjaFRhYmxlID0gb3B0aW9ucy5iYXRjaFRhYmxlO1xuICB0aGlzLl9iYXRjaElkcyA9IG9wdGlvbnMuYmF0Y2hJZHM7XG5cbiAgLy8gVGhlc2UgYXJyYXlzIGFyZSByZWxlYXNlZCBhZnRlciBWQU8gY3JlYXRpb24uXG4gIHRoaXMuX3Bvc2l0aW9ucyA9IG9wdGlvbnMucG9zaXRpb25zO1xuICB0aGlzLl92ZXJ0ZXhCYXRjaElkcyA9IG9wdGlvbnMudmVydGV4QmF0Y2hJZHM7XG5cbiAgLy8gVGhlc2UgYXJyYXlzIGFyZSBrZXB0IGZvciByZS1iYXRjaGluZyBpbmRpY2VzIGJhc2VkIG9uIGNvbG9ycy5cbiAgLy8gSWYgV2ViR0wgMiBpcyBzdXBwb3J0ZWQsIGluZGljZXMgd2lsbCBiZSByZWxlYXNlZCBhbmQgcmUtYmF0Y2hpbmcgdXNlcyBidWZmZXItdG8tYnVmZmVyIGNvcGllcy5cbiAgdGhpcy5faW5kaWNlcyA9IG9wdGlvbnMuaW5kaWNlcztcbiAgdGhpcy5faW5kZXhDb3VudHMgPSBvcHRpb25zLmluZGV4Q291bnRzO1xuICB0aGlzLl9pbmRleE9mZnNldHMgPSBvcHRpb25zLmluZGV4T2Zmc2V0cztcbiAgdGhpcy5fYmF0Y2hlZEluZGljZXMgPSBvcHRpb25zLmJhdGNoZWRJbmRpY2VzO1xuXG4gIHRoaXMuX2JvdW5kaW5nVm9sdW1lID0gb3B0aW9ucy5ib3VuZGluZ1ZvbHVtZTtcbiAgdGhpcy5fYm91bmRpbmdWb2x1bWVzID0gb3B0aW9ucy5ib3VuZGluZ1ZvbHVtZXM7XG5cbiAgdGhpcy5fY2VudGVyID0gZGVmYXVsdFZhbHVlKG9wdGlvbnMuY2VudGVyLCBDYXJ0ZXNpYW4zLlpFUk8pO1xuXG4gIHRoaXMuX3ZhID0gdW5kZWZpbmVkO1xuICB0aGlzLl9zcCA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fc3BTdGVuY2lsID0gdW5kZWZpbmVkO1xuICB0aGlzLl9zcFBpY2sgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX3VuaWZvcm1NYXAgPSB1bmRlZmluZWQ7XG5cbiAgLy8gT25seSB1c2VkIHdpdGggV2ViR0wgMiB0byBwaW5nLXBvbmcgaWJvcyBhZnRlciBjb3B5LlxuICB0aGlzLl92YVN3YXAgPSB1bmRlZmluZWQ7XG5cbiAgdGhpcy5fcnNTdGVuY2lsRGVwdGhQYXNzID0gdW5kZWZpbmVkO1xuICB0aGlzLl9yc1N0ZW5jaWxEZXB0aFBhc3MzRFRpbGVzID0gdW5kZWZpbmVkO1xuICB0aGlzLl9yc0NvbG9yUGFzcyA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fcnNQaWNrUGFzcyA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fcnNXaXJlZnJhbWUgPSB1bmRlZmluZWQ7XG5cbiAgdGhpcy5fY29tbWFuZHMgPSBbXTtcbiAgdGhpcy5fY29tbWFuZHNJZ25vcmVTaG93ID0gW107XG4gIHRoaXMuX3BpY2tDb21tYW5kcyA9IFtdO1xuXG4gIHRoaXMuX2NvbnN0YW50Q29sb3IgPSBDb2xvci5jbG9uZShDb2xvci5XSElURSk7XG4gIHRoaXMuX2hpZ2hsaWdodENvbG9yID0gdGhpcy5fY29uc3RhbnRDb2xvcjtcblxuICB0aGlzLl9iYXRjaERpcnR5ID0gdHJ1ZTtcbiAgdGhpcy5fcGlja0NvbW1hbmRzRGlydHkgPSB0cnVlO1xuICB0aGlzLl9mcmFtZXNTaW5jZUxhc3RSZWJhdGNoID0gMDtcblxuICB0aGlzLl91cGRhdGluZ0FsbENvbW1hbmRzID0gZmFsc2U7XG5cbiAgdGhpcy5fdHJpYW5nbGVzTGVuZ3RoID0gdGhpcy5faW5kaWNlcy5sZW5ndGggLyAzO1xuICB0aGlzLl9nZW9tZXRyeUJ5dGVMZW5ndGggPVxuICAgIHRoaXMuX2luZGljZXMuYnl0ZUxlbmd0aCArXG4gICAgdGhpcy5fcG9zaXRpb25zLmJ5dGVMZW5ndGggK1xuICAgIHRoaXMuX3ZlcnRleEJhdGNoSWRzLmJ5dGVMZW5ndGg7XG5cbiAgLyoqXG4gICAqIERyYXcgdGhlIHdpcmVmcmFtZSBvZiB0aGUgY2xhc3NpZmljYXRpb24gbWVzaGVzLlxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIHRoaXMuZGVidWdXaXJlZnJhbWUgPSBmYWxzZTtcbiAgdGhpcy5fZGVidWdXaXJlZnJhbWUgPSB0aGlzLmRlYnVnV2lyZWZyYW1lO1xuICB0aGlzLl93aXJlZnJhbWVEaXJ0eSA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBGb3JjZXMgYSByZS1iYXRjaCBpbnN0ZWFkIG9mIHdhaXRpbmcgYWZ0ZXIgYSBudW1iZXIgb2YgZnJhbWVzIGhhdmUgYmVlbiByZW5kZXJlZC4gRm9yIHRlc3Rpbmcgb25seS5cbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICB0aGlzLmZvcmNlUmViYXRjaCA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBXaGF0IHRoaXMgdGlsZSB3aWxsIGNsYXNzaWZ5LlxuICAgKiBAdHlwZSB7Q2xhc3NpZmljYXRpb25UeXBlfVxuICAgKiBAZGVmYXVsdCBDbGFzc2lmaWNhdGlvblR5cGUuQk9USFxuICAgKi9cbiAgdGhpcy5jbGFzc2lmaWNhdGlvblR5cGUgPSBkZWZhdWx0VmFsdWUoXG4gICAgb3B0aW9ucy5jbGFzc2lmaWNhdGlvblR5cGUsXG4gICAgQ2xhc3NpZmljYXRpb25UeXBlLkJPVEhcbiAgKTtcblxuICAvLyBIaWRkZW4gb3B0aW9uc1xuICB0aGlzLl92ZXJ0ZXhTaGFkZXJTb3VyY2UgPSBvcHRpb25zLl92ZXJ0ZXhTaGFkZXJTb3VyY2U7XG4gIHRoaXMuX2ZyYWdtZW50U2hhZGVyU291cmNlID0gb3B0aW9ucy5fZnJhZ21lbnRTaGFkZXJTb3VyY2U7XG4gIHRoaXMuX2F0dHJpYnV0ZUxvY2F0aW9ucyA9IG9wdGlvbnMuX2F0dHJpYnV0ZUxvY2F0aW9ucztcbiAgdGhpcy5fdW5pZm9ybU1hcCA9IG9wdGlvbnMuX3VuaWZvcm1NYXA7XG4gIHRoaXMuX3BpY2tJZCA9IG9wdGlvbnMuX3BpY2tJZDtcbiAgdGhpcy5fbW9kZWxNYXRyaXggPSBvcHRpb25zLl9tb2RlbE1hdHJpeDtcbiAgdGhpcy5fYm91bmRpbmdTcGhlcmUgPSBvcHRpb25zLl9ib3VuZGluZ1NwaGVyZTtcblxuICB0aGlzLl9iYXRjaElkTG9va1VwID0ge307XG5cbiAgdmFyIGxlbmd0aCA9IHRoaXMuX2JhdGNoSWRzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBiYXRjaElkID0gdGhpcy5fYmF0Y2hJZHNbaV07XG4gICAgdGhpcy5fYmF0Y2hJZExvb2tVcFtiYXRjaElkXSA9IGk7XG4gIH1cbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoVmVjdG9yM0RUaWxlUHJpbWl0aXZlLnByb3RvdHlwZSwge1xuICAvKipcbiAgICogR2V0cyB0aGUgbnVtYmVyIG9mIHRyaWFuZ2xlcy5cbiAgICpcbiAgICogQG1lbWJlcm9mIFZlY3RvcjNEVGlsZVByaW1pdGl2ZS5wcm90b3R5cGVcbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQHJlYWRvbmx5XG4gICAqL1xuICB0cmlhbmdsZXNMZW5ndGg6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl90cmlhbmdsZXNMZW5ndGg7XG4gICAgfSxcbiAgfSxcblxuICAvKipcbiAgICogR2V0cyB0aGUgZ2VvbWV0cnkgbWVtb3J5IGluIGJ5dGVzLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgVmVjdG9yM0RUaWxlUHJpbWl0aXZlLnByb3RvdHlwZVxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAcmVhZG9ubHlcbiAgICovXG4gIGdlb21ldHJ5Qnl0ZUxlbmd0aDoge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2dlb21ldHJ5Qnl0ZUxlbmd0aDtcbiAgICB9LFxuICB9LFxufSk7XG5cbnZhciBkZWZhdWx0QXR0cmlidXRlTG9jYXRpb25zID0ge1xuICBwb3NpdGlvbjogMCxcbiAgYV9iYXRjaElkOiAxLFxufTtcblxuZnVuY3Rpb24gY3JlYXRlVmVydGV4QXJyYXkocHJpbWl0aXZlLCBjb250ZXh0KSB7XG4gIGlmIChkZWZpbmVkKHByaW1pdGl2ZS5fdmEpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHBvc2l0aW9uQnVmZmVyID0gQnVmZmVyLmNyZWF0ZVZlcnRleEJ1ZmZlcih7XG4gICAgY29udGV4dDogY29udGV4dCxcbiAgICB0eXBlZEFycmF5OiBwcmltaXRpdmUuX3Bvc2l0aW9ucyxcbiAgICB1c2FnZTogQnVmZmVyVXNhZ2UuU1RBVElDX0RSQVcsXG4gIH0pO1xuICB2YXIgaWRCdWZmZXIgPSBCdWZmZXIuY3JlYXRlVmVydGV4QnVmZmVyKHtcbiAgICBjb250ZXh0OiBjb250ZXh0LFxuICAgIHR5cGVkQXJyYXk6IHByaW1pdGl2ZS5fdmVydGV4QmF0Y2hJZHMsXG4gICAgdXNhZ2U6IEJ1ZmZlclVzYWdlLlNUQVRJQ19EUkFXLFxuICB9KTtcbiAgdmFyIGluZGV4QnVmZmVyID0gQnVmZmVyLmNyZWF0ZUluZGV4QnVmZmVyKHtcbiAgICBjb250ZXh0OiBjb250ZXh0LFxuICAgIHR5cGVkQXJyYXk6IHByaW1pdGl2ZS5faW5kaWNlcyxcbiAgICB1c2FnZTogQnVmZmVyVXNhZ2UuRFlOQU1JQ19EUkFXLFxuICAgIGluZGV4RGF0YXR5cGU6XG4gICAgICBwcmltaXRpdmUuX2luZGljZXMuQllURVNfUEVSX0VMRU1FTlQgPT09IDJcbiAgICAgICAgPyBJbmRleERhdGF0eXBlLlVOU0lHTkVEX1NIT1JUXG4gICAgICAgIDogSW5kZXhEYXRhdHlwZS5VTlNJR05FRF9JTlQsXG4gIH0pO1xuXG4gIHZhciB2ZXJ0ZXhBdHRyaWJ1dGVzID0gW1xuICAgIHtcbiAgICAgIGluZGV4OiAwLFxuICAgICAgdmVydGV4QnVmZmVyOiBwb3NpdGlvbkJ1ZmZlcixcbiAgICAgIGNvbXBvbmVudERhdGF0eXBlOiBDb21wb25lbnREYXRhdHlwZS5mcm9tVHlwZWRBcnJheShwcmltaXRpdmUuX3Bvc2l0aW9ucyksXG4gICAgICBjb21wb25lbnRzUGVyQXR0cmlidXRlOiAzLFxuICAgIH0sXG4gICAge1xuICAgICAgaW5kZXg6IDEsXG4gICAgICB2ZXJ0ZXhCdWZmZXI6IGlkQnVmZmVyLFxuICAgICAgY29tcG9uZW50RGF0YXR5cGU6IENvbXBvbmVudERhdGF0eXBlLmZyb21UeXBlZEFycmF5KFxuICAgICAgICBwcmltaXRpdmUuX3ZlcnRleEJhdGNoSWRzXG4gICAgICApLFxuICAgICAgY29tcG9uZW50c1BlckF0dHJpYnV0ZTogMSxcbiAgICB9LFxuICBdO1xuXG4gIHByaW1pdGl2ZS5fdmEgPSBuZXcgVmVydGV4QXJyYXkoe1xuICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgYXR0cmlidXRlczogdmVydGV4QXR0cmlidXRlcyxcbiAgICBpbmRleEJ1ZmZlcjogaW5kZXhCdWZmZXIsXG4gIH0pO1xuXG4gIGlmIChjb250ZXh0LndlYmdsMikge1xuICAgIHByaW1pdGl2ZS5fdmFTd2FwID0gbmV3IFZlcnRleEFycmF5KHtcbiAgICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgICBhdHRyaWJ1dGVzOiB2ZXJ0ZXhBdHRyaWJ1dGVzLFxuICAgICAgaW5kZXhCdWZmZXI6IEJ1ZmZlci5jcmVhdGVJbmRleEJ1ZmZlcih7XG4gICAgICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgICAgIHNpemVJbkJ5dGVzOiBpbmRleEJ1ZmZlci5zaXplSW5CeXRlcyxcbiAgICAgICAgdXNhZ2U6IEJ1ZmZlclVzYWdlLkRZTkFNSUNfRFJBVyxcbiAgICAgICAgaW5kZXhEYXRhdHlwZTogaW5kZXhCdWZmZXIuaW5kZXhEYXRhdHlwZSxcbiAgICAgIH0pLFxuICAgIH0pO1xuICB9XG5cbiAgcHJpbWl0aXZlLl9iYXRjaGVkUG9zaXRpb25zID0gdW5kZWZpbmVkO1xuICBwcmltaXRpdmUuX3RyYW5zZmVycmFibGVCYXRjaElkcyA9IHVuZGVmaW5lZDtcbiAgcHJpbWl0aXZlLl92ZXJ0ZXhCYXRjaElkcyA9IHVuZGVmaW5lZDtcbiAgcHJpbWl0aXZlLl92ZXJ0aWNlc1Byb21pc2UgPSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVNoYWRlcnMocHJpbWl0aXZlLCBjb250ZXh0KSB7XG4gIGlmIChkZWZpbmVkKHByaW1pdGl2ZS5fc3ApKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGJhdGNoVGFibGUgPSBwcmltaXRpdmUuX2JhdGNoVGFibGU7XG4gIHZhciBhdHRyaWJ1dGVMb2NhdGlvbnMgPSBkZWZhdWx0VmFsdWUoXG4gICAgcHJpbWl0aXZlLl9hdHRyaWJ1dGVMb2NhdGlvbnMsXG4gICAgZGVmYXVsdEF0dHJpYnV0ZUxvY2F0aW9uc1xuICApO1xuXG4gIHZhciBwaWNrSWQgPSBwcmltaXRpdmUuX3BpY2tJZDtcbiAgdmFyIHZlcnRleFNoYWRlclNvdXJjZSA9IHByaW1pdGl2ZS5fdmVydGV4U2hhZGVyU291cmNlO1xuICB2YXIgZnJhZ21lbnRTaGFkZXJTb3VyY2UgPSBwcmltaXRpdmUuX2ZyYWdtZW50U2hhZGVyU291cmNlO1xuICBpZiAoZGVmaW5lZCh2ZXJ0ZXhTaGFkZXJTb3VyY2UpKSB7XG4gICAgcHJpbWl0aXZlLl9zcCA9IFNoYWRlclByb2dyYW0uZnJvbUNhY2hlKHtcbiAgICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgICB2ZXJ0ZXhTaGFkZXJTb3VyY2U6IHZlcnRleFNoYWRlclNvdXJjZSxcbiAgICAgIGZyYWdtZW50U2hhZGVyU291cmNlOiBmcmFnbWVudFNoYWRlclNvdXJjZSxcbiAgICAgIGF0dHJpYnV0ZUxvY2F0aW9uczogYXR0cmlidXRlTG9jYXRpb25zLFxuICAgIH0pO1xuICAgIHByaW1pdGl2ZS5fc3BTdGVuY2lsID0gcHJpbWl0aXZlLl9zcDtcblxuICAgIGZyYWdtZW50U2hhZGVyU291cmNlID0gU2hhZGVyU291cmNlLnJlcGxhY2VNYWluKFxuICAgICAgZnJhZ21lbnRTaGFkZXJTb3VyY2UsXG4gICAgICBcImN6bV9ub25fcGlja19tYWluXCJcbiAgICApO1xuICAgIGZyYWdtZW50U2hhZGVyU291cmNlID1cbiAgICAgIGZyYWdtZW50U2hhZGVyU291cmNlICtcbiAgICAgIFwidm9pZCBtYWluKCkgXFxuXCIgK1xuICAgICAgXCJ7IFxcblwiICtcbiAgICAgIFwiICAgIGN6bV9ub25fcGlja19tYWluKCk7IFxcblwiICtcbiAgICAgIFwiICAgIGdsX0ZyYWdDb2xvciA9IFwiICtcbiAgICAgIHBpY2tJZCArXG4gICAgICBcIjsgXFxuXCIgK1xuICAgICAgXCJ9IFxcblwiO1xuICAgIHByaW1pdGl2ZS5fc3BQaWNrID0gU2hhZGVyUHJvZ3JhbS5mcm9tQ2FjaGUoe1xuICAgICAgY29udGV4dDogY29udGV4dCxcbiAgICAgIHZlcnRleFNoYWRlclNvdXJjZTogdmVydGV4U2hhZGVyU291cmNlLFxuICAgICAgZnJhZ21lbnRTaGFkZXJTb3VyY2U6IGZyYWdtZW50U2hhZGVyU291cmNlLFxuICAgICAgYXR0cmlidXRlTG9jYXRpb25zOiBhdHRyaWJ1dGVMb2NhdGlvbnMsXG4gICAgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHZzU291cmNlID0gYmF0Y2hUYWJsZS5nZXRWZXJ0ZXhTaGFkZXJDYWxsYmFjayhcbiAgICBmYWxzZSxcbiAgICBcImFfYmF0Y2hJZFwiLFxuICAgIHVuZGVmaW5lZFxuICApKFZlY3RvclRpbGVWUyk7XG4gIHZhciBmc1NvdXJjZSA9IGJhdGNoVGFibGUuZ2V0RnJhZ21lbnRTaGFkZXJDYWxsYmFjayhcbiAgICBmYWxzZSxcbiAgICB1bmRlZmluZWQsXG4gICAgdHJ1ZVxuICApKFNoYWRvd1ZvbHVtZUZTKTtcblxuICBwaWNrSWQgPSBiYXRjaFRhYmxlLmdldFBpY2tJZCgpO1xuXG4gIHZhciB2cyA9IG5ldyBTaGFkZXJTb3VyY2Uoe1xuICAgIHNvdXJjZXM6IFt2c1NvdXJjZV0sXG4gIH0pO1xuICB2YXIgZnMgPSBuZXcgU2hhZGVyU291cmNlKHtcbiAgICBkZWZpbmVzOiBbXCJWRUNUT1JfVElMRVwiXSxcbiAgICBzb3VyY2VzOiBbZnNTb3VyY2VdLFxuICB9KTtcblxuICBwcmltaXRpdmUuX3NwID0gU2hhZGVyUHJvZ3JhbS5mcm9tQ2FjaGUoe1xuICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgdmVydGV4U2hhZGVyU291cmNlOiB2cyxcbiAgICBmcmFnbWVudFNoYWRlclNvdXJjZTogZnMsXG4gICAgYXR0cmlidXRlTG9jYXRpb25zOiBhdHRyaWJ1dGVMb2NhdGlvbnMsXG4gIH0pO1xuXG4gIHZzID0gbmV3IFNoYWRlclNvdXJjZSh7XG4gICAgc291cmNlczogW1ZlY3RvclRpbGVWU10sXG4gIH0pO1xuICBmcyA9IG5ldyBTaGFkZXJTb3VyY2Uoe1xuICAgIGRlZmluZXM6IFtcIlZFQ1RPUl9USUxFXCJdLFxuICAgIHNvdXJjZXM6IFtTaGFkb3dWb2x1bWVGU10sXG4gIH0pO1xuXG4gIHByaW1pdGl2ZS5fc3BTdGVuY2lsID0gU2hhZGVyUHJvZ3JhbS5mcm9tQ2FjaGUoe1xuICAgIGNvbnRleHQ6IGNvbnRleHQsXG4gICAgdmVydGV4U2hhZGVyU291cmNlOiB2cyxcbiAgICBmcmFnbWVudFNoYWRlclNvdXJjZTogZnMsXG4gICAgYXR0cmlidXRlTG9jYXRpb25zOiBhdHRyaWJ1dGVMb2NhdGlvbnMsXG4gIH0pO1xuXG4gIGZzU291cmNlID0gU2hhZGVyU291cmNlLnJlcGxhY2VNYWluKGZzU291cmNlLCBcImN6bV9ub25fcGlja19tYWluXCIpO1xuICBmc1NvdXJjZSA9XG4gICAgZnNTb3VyY2UgK1xuICAgIFwiXFxuXCIgK1xuICAgIFwidm9pZCBtYWluKCkgXFxuXCIgK1xuICAgIFwieyBcXG5cIiArXG4gICAgXCIgICAgY3ptX25vbl9waWNrX21haW4oKTsgXFxuXCIgK1xuICAgIFwiICAgIGdsX0ZyYWdDb2xvciA9IFwiICtcbiAgICBwaWNrSWQgK1xuICAgIFwiOyBcXG5cIiArXG4gICAgXCJ9IFxcblwiO1xuXG4gIHZhciBwaWNrVlMgPSBuZXcgU2hhZGVyU291cmNlKHtcbiAgICBzb3VyY2VzOiBbdnNTb3VyY2VdLFxuICB9KTtcbiAgdmFyIHBpY2tGUyA9IG5ldyBTaGFkZXJTb3VyY2Uoe1xuICAgIGRlZmluZXM6IFtcIlZFQ1RPUl9USUxFXCJdLFxuICAgIHNvdXJjZXM6IFtmc1NvdXJjZV0sXG4gIH0pO1xuICBwcmltaXRpdmUuX3NwUGljayA9IFNoYWRlclByb2dyYW0uZnJvbUNhY2hlKHtcbiAgICBjb250ZXh0OiBjb250ZXh0LFxuICAgIHZlcnRleFNoYWRlclNvdXJjZTogcGlja1ZTLFxuICAgIGZyYWdtZW50U2hhZGVyU291cmNlOiBwaWNrRlMsXG4gICAgYXR0cmlidXRlTG9jYXRpb25zOiBhdHRyaWJ1dGVMb2NhdGlvbnMsXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRTdGVuY2lsRGVwdGhSZW5kZXJTdGF0ZShtYXNrM0RUaWxlcykge1xuICB2YXIgc3RlbmNpbEZ1bmN0aW9uID0gbWFzazNEVGlsZXNcbiAgICA/IFN0ZW5jaWxGdW5jdGlvbi5FUVVBTFxuICAgIDogU3RlbmNpbEZ1bmN0aW9uLkFMV0FZUztcbiAgcmV0dXJuIHtcbiAgICBjb2xvck1hc2s6IHtcbiAgICAgIHJlZDogZmFsc2UsXG4gICAgICBncmVlbjogZmFsc2UsXG4gICAgICBibHVlOiBmYWxzZSxcbiAgICAgIGFscGhhOiBmYWxzZSxcbiAgICB9LFxuICAgIHN0ZW5jaWxUZXN0OiB7XG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgZnJvbnRGdW5jdGlvbjogc3RlbmNpbEZ1bmN0aW9uLFxuICAgICAgZnJvbnRPcGVyYXRpb246IHtcbiAgICAgICAgZmFpbDogU3RlbmNpbE9wZXJhdGlvbi5LRUVQLFxuICAgICAgICB6RmFpbDogU3RlbmNpbE9wZXJhdGlvbi5ERUNSRU1FTlRfV1JBUCxcbiAgICAgICAgelBhc3M6IFN0ZW5jaWxPcGVyYXRpb24uS0VFUCxcbiAgICAgIH0sXG4gICAgICBiYWNrRnVuY3Rpb246IHN0ZW5jaWxGdW5jdGlvbixcbiAgICAgIGJhY2tPcGVyYXRpb246IHtcbiAgICAgICAgZmFpbDogU3RlbmNpbE9wZXJhdGlvbi5LRUVQLFxuICAgICAgICB6RmFpbDogU3RlbmNpbE9wZXJhdGlvbi5JTkNSRU1FTlRfV1JBUCxcbiAgICAgICAgelBhc3M6IFN0ZW5jaWxPcGVyYXRpb24uS0VFUCxcbiAgICAgIH0sXG4gICAgICByZWZlcmVuY2U6IFN0ZW5jaWxDb25zdGFudHMuQ0VTSVVNXzNEX1RJTEVfTUFTSyxcbiAgICAgIG1hc2s6IFN0ZW5jaWxDb25zdGFudHMuQ0VTSVVNXzNEX1RJTEVfTUFTSyxcbiAgICB9LFxuICAgIHN0ZW5jaWxNYXNrOiBTdGVuY2lsQ29uc3RhbnRzLkNMQVNTSUZJQ0FUSU9OX01BU0ssXG4gICAgZGVwdGhUZXN0OiB7XG4gICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgZnVuYzogRGVwdGhGdW5jdGlvbi5MRVNTX09SX0VRVUFMLFxuICAgIH0sXG4gICAgZGVwdGhNYXNrOiBmYWxzZSxcbiAgfTtcbn1cblxudmFyIGNvbG9yUmVuZGVyU3RhdGUgPSB7XG4gIHN0ZW5jaWxUZXN0OiB7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBmcm9udEZ1bmN0aW9uOiBTdGVuY2lsRnVuY3Rpb24uTk9UX0VRVUFMLFxuICAgIGZyb250T3BlcmF0aW9uOiB7XG4gICAgICBmYWlsOiBTdGVuY2lsT3BlcmF0aW9uLlpFUk8sXG4gICAgICB6RmFpbDogU3RlbmNpbE9wZXJhdGlvbi5aRVJPLFxuICAgICAgelBhc3M6IFN0ZW5jaWxPcGVyYXRpb24uWkVSTyxcbiAgICB9LFxuICAgIGJhY2tGdW5jdGlvbjogU3RlbmNpbEZ1bmN0aW9uLk5PVF9FUVVBTCxcbiAgICBiYWNrT3BlcmF0aW9uOiB7XG4gICAgICBmYWlsOiBTdGVuY2lsT3BlcmF0aW9uLlpFUk8sXG4gICAgICB6RmFpbDogU3RlbmNpbE9wZXJhdGlvbi5aRVJPLFxuICAgICAgelBhc3M6IFN0ZW5jaWxPcGVyYXRpb24uWkVSTyxcbiAgICB9LFxuICAgIHJlZmVyZW5jZTogMCxcbiAgICBtYXNrOiBTdGVuY2lsQ29uc3RhbnRzLkNMQVNTSUZJQ0FUSU9OX01BU0ssXG4gIH0sXG4gIHN0ZW5jaWxNYXNrOiBTdGVuY2lsQ29uc3RhbnRzLkNMQVNTSUZJQ0FUSU9OX01BU0ssXG4gIGRlcHRoVGVzdDoge1xuICAgIGVuYWJsZWQ6IGZhbHNlLFxuICB9LFxuICBkZXB0aE1hc2s6IGZhbHNlLFxuICBibGVuZGluZzogQmxlbmRpbmdTdGF0ZS5QUkVfTVVMVElQTElFRF9BTFBIQV9CTEVORCxcbn07XG5cbnZhciBwaWNrUmVuZGVyU3RhdGUgPSB7XG4gIHN0ZW5jaWxUZXN0OiB7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBmcm9udEZ1bmN0aW9uOiBTdGVuY2lsRnVuY3Rpb24uTk9UX0VRVUFMLFxuICAgIGZyb250T3BlcmF0aW9uOiB7XG4gICAgICBmYWlsOiBTdGVuY2lsT3BlcmF0aW9uLlpFUk8sXG4gICAgICB6RmFpbDogU3RlbmNpbE9wZXJhdGlvbi5aRVJPLFxuICAgICAgelBhc3M6IFN0ZW5jaWxPcGVyYXRpb24uWkVSTyxcbiAgICB9LFxuICAgIGJhY2tGdW5jdGlvbjogU3RlbmNpbEZ1bmN0aW9uLk5PVF9FUVVBTCxcbiAgICBiYWNrT3BlcmF0aW9uOiB7XG4gICAgICBmYWlsOiBTdGVuY2lsT3BlcmF0aW9uLlpFUk8sXG4gICAgICB6RmFpbDogU3RlbmNpbE9wZXJhdGlvbi5aRVJPLFxuICAgICAgelBhc3M6IFN0ZW5jaWxPcGVyYXRpb24uWkVSTyxcbiAgICB9LFxuICAgIHJlZmVyZW5jZTogMCxcbiAgICBtYXNrOiBTdGVuY2lsQ29uc3RhbnRzLkNMQVNTSUZJQ0FUSU9OX01BU0ssXG4gIH0sXG4gIHN0ZW5jaWxNYXNrOiBTdGVuY2lsQ29uc3RhbnRzLkNMQVNTSUZJQ0FUSU9OX01BU0ssXG4gIGRlcHRoVGVzdDoge1xuICAgIGVuYWJsZWQ6IGZhbHNlLFxuICB9LFxuICBkZXB0aE1hc2s6IGZhbHNlLFxufTtcblxuZnVuY3Rpb24gY3JlYXRlUmVuZGVyU3RhdGVzKHByaW1pdGl2ZSkge1xuICBpZiAoZGVmaW5lZChwcmltaXRpdmUuX3JzU3RlbmNpbERlcHRoUGFzcykpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBwcmltaXRpdmUuX3JzU3RlbmNpbERlcHRoUGFzcyA9IFJlbmRlclN0YXRlLmZyb21DYWNoZShcbiAgICBnZXRTdGVuY2lsRGVwdGhSZW5kZXJTdGF0ZShmYWxzZSlcbiAgKTtcbiAgcHJpbWl0aXZlLl9yc1N0ZW5jaWxEZXB0aFBhc3MzRFRpbGVzID0gUmVuZGVyU3RhdGUuZnJvbUNhY2hlKFxuICAgIGdldFN0ZW5jaWxEZXB0aFJlbmRlclN0YXRlKHRydWUpXG4gICk7XG4gIHByaW1pdGl2ZS5fcnNDb2xvclBhc3MgPSBSZW5kZXJTdGF0ZS5mcm9tQ2FjaGUoY29sb3JSZW5kZXJTdGF0ZSk7XG4gIHByaW1pdGl2ZS5fcnNQaWNrUGFzcyA9IFJlbmRlclN0YXRlLmZyb21DYWNoZShwaWNrUmVuZGVyU3RhdGUpO1xufVxuXG52YXIgbW9kaWZpZWRNb2RlbFZpZXdTY3JhdGNoID0gbmV3IE1hdHJpeDQoKTtcbnZhciBydGNTY3JhdGNoID0gbmV3IENhcnRlc2lhbjMoKTtcblxuZnVuY3Rpb24gY3JlYXRlVW5pZm9ybU1hcChwcmltaXRpdmUsIGNvbnRleHQpIHtcbiAgaWYgKGRlZmluZWQocHJpbWl0aXZlLl91bmlmb3JtTWFwKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciB1bmlmb3JtTWFwID0ge1xuICAgIHVfbW9kaWZpZWRNb2RlbFZpZXdQcm9qZWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmlld01hdHJpeCA9IGNvbnRleHQudW5pZm9ybVN0YXRlLnZpZXc7XG4gICAgICB2YXIgcHJvamVjdGlvbk1hdHJpeCA9IGNvbnRleHQudW5pZm9ybVN0YXRlLnByb2plY3Rpb247XG4gICAgICBNYXRyaXg0LmNsb25lKHZpZXdNYXRyaXgsIG1vZGlmaWVkTW9kZWxWaWV3U2NyYXRjaCk7XG4gICAgICBNYXRyaXg0Lm11bHRpcGx5QnlQb2ludChcbiAgICAgICAgbW9kaWZpZWRNb2RlbFZpZXdTY3JhdGNoLFxuICAgICAgICBwcmltaXRpdmUuX2NlbnRlcixcbiAgICAgICAgcnRjU2NyYXRjaFxuICAgICAgKTtcbiAgICAgIE1hdHJpeDQuc2V0VHJhbnNsYXRpb24oXG4gICAgICAgIG1vZGlmaWVkTW9kZWxWaWV3U2NyYXRjaCxcbiAgICAgICAgcnRjU2NyYXRjaCxcbiAgICAgICAgbW9kaWZpZWRNb2RlbFZpZXdTY3JhdGNoXG4gICAgICApO1xuICAgICAgTWF0cml4NC5tdWx0aXBseShcbiAgICAgICAgcHJvamVjdGlvbk1hdHJpeCxcbiAgICAgICAgbW9kaWZpZWRNb2RlbFZpZXdTY3JhdGNoLFxuICAgICAgICBtb2RpZmllZE1vZGVsVmlld1NjcmF0Y2hcbiAgICAgICk7XG4gICAgICByZXR1cm4gbW9kaWZpZWRNb2RlbFZpZXdTY3JhdGNoO1xuICAgIH0sXG4gICAgdV9oaWdobGlnaHRDb2xvcjogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHByaW1pdGl2ZS5faGlnaGxpZ2h0Q29sb3I7XG4gICAgfSxcbiAgfTtcblxuICBwcmltaXRpdmUuX3VuaWZvcm1NYXAgPSBwcmltaXRpdmUuX2JhdGNoVGFibGUuZ2V0VW5pZm9ybU1hcENhbGxiYWNrKCkoXG4gICAgdW5pZm9ybU1hcFxuICApO1xufVxuXG5mdW5jdGlvbiBjb3B5SW5kaWNlc0NQVShcbiAgaW5kaWNlcyxcbiAgbmV3SW5kaWNlcyxcbiAgY3VycmVudE9mZnNldCxcbiAgb2Zmc2V0cyxcbiAgY291bnRzLFxuICBiYXRjaElkcyxcbiAgYmF0Y2hJZExvb2tVcFxuKSB7XG4gIHZhciBzaXplSW5CeXRlcyA9IGluZGljZXMuY29uc3RydWN0b3IuQllURVNfUEVSX0VMRU1FTlQ7XG5cbiAgdmFyIGJhdGNoZWRJZHNMZW5ndGggPSBiYXRjaElkcy5sZW5ndGg7XG4gIGZvciAodmFyIGogPSAwOyBqIDwgYmF0Y2hlZElkc0xlbmd0aDsgKytqKSB7XG4gICAgdmFyIGJhdGNoZWRJZCA9IGJhdGNoSWRzW2pdO1xuICAgIHZhciBpbmRleCA9IGJhdGNoSWRMb29rVXBbYmF0Y2hlZElkXTtcbiAgICB2YXIgb2Zmc2V0ID0gb2Zmc2V0c1tpbmRleF07XG4gICAgdmFyIGNvdW50ID0gY291bnRzW2luZGV4XTtcblxuICAgIHZhciBzdWJhcnJheSA9IG5ldyBpbmRpY2VzLmNvbnN0cnVjdG9yKFxuICAgICAgaW5kaWNlcy5idWZmZXIsXG4gICAgICBzaXplSW5CeXRlcyAqIG9mZnNldCxcbiAgICAgIGNvdW50XG4gICAgKTtcbiAgICBuZXdJbmRpY2VzLnNldChzdWJhcnJheSwgY3VycmVudE9mZnNldCk7XG5cbiAgICBvZmZzZXRzW2luZGV4XSA9IGN1cnJlbnRPZmZzZXQ7XG4gICAgY3VycmVudE9mZnNldCArPSBjb3VudDtcbiAgfVxuXG4gIHJldHVybiBjdXJyZW50T2Zmc2V0O1xufVxuXG5mdW5jdGlvbiByZWJhdGNoQ1BVKHByaW1pdGl2ZSwgYmF0Y2hlZEluZGljZXMpIHtcbiAgdmFyIGluZGljZXMgPSBwcmltaXRpdmUuX2luZGljZXM7XG4gIHZhciBpbmRleE9mZnNldHMgPSBwcmltaXRpdmUuX2luZGV4T2Zmc2V0cztcbiAgdmFyIGluZGV4Q291bnRzID0gcHJpbWl0aXZlLl9pbmRleENvdW50cztcbiAgdmFyIGJhdGNoSWRMb29rVXAgPSBwcmltaXRpdmUuX2JhdGNoSWRMb29rVXA7XG5cbiAgdmFyIG5ld0luZGljZXMgPSBuZXcgaW5kaWNlcy5jb25zdHJ1Y3RvcihpbmRpY2VzLmxlbmd0aCk7XG5cbiAgdmFyIGN1cnJlbnQgPSBiYXRjaGVkSW5kaWNlcy5wb3AoKTtcbiAgdmFyIG5ld0JhdGNoZWRJbmRpY2VzID0gW2N1cnJlbnRdO1xuXG4gIHZhciBjdXJyZW50T2Zmc2V0ID0gY29weUluZGljZXNDUFUoXG4gICAgaW5kaWNlcyxcbiAgICBuZXdJbmRpY2VzLFxuICAgIDAsXG4gICAgaW5kZXhPZmZzZXRzLFxuICAgIGluZGV4Q291bnRzLFxuICAgIGN1cnJlbnQuYmF0Y2hJZHMsXG4gICAgYmF0Y2hJZExvb2tVcFxuICApO1xuXG4gIGN1cnJlbnQub2Zmc2V0ID0gMDtcbiAgY3VycmVudC5jb3VudCA9IGN1cnJlbnRPZmZzZXQ7XG5cbiAgd2hpbGUgKGJhdGNoZWRJbmRpY2VzLmxlbmd0aCA+IDApIHtcbiAgICB2YXIgbmV4dCA9IGJhdGNoZWRJbmRpY2VzLnBvcCgpO1xuICAgIGlmIChDb2xvci5lcXVhbHMobmV4dC5jb2xvciwgY3VycmVudC5jb2xvcikpIHtcbiAgICAgIGN1cnJlbnRPZmZzZXQgPSBjb3B5SW5kaWNlc0NQVShcbiAgICAgICAgaW5kaWNlcyxcbiAgICAgICAgbmV3SW5kaWNlcyxcbiAgICAgICAgY3VycmVudE9mZnNldCxcbiAgICAgICAgaW5kZXhPZmZzZXRzLFxuICAgICAgICBpbmRleENvdW50cyxcbiAgICAgICAgbmV4dC5iYXRjaElkcyxcbiAgICAgICAgYmF0Y2hJZExvb2tVcFxuICAgICAgKTtcbiAgICAgIGN1cnJlbnQuYmF0Y2hJZHMgPSBjdXJyZW50LmJhdGNoSWRzLmNvbmNhdChuZXh0LmJhdGNoSWRzKTtcbiAgICAgIGN1cnJlbnQuY291bnQgPSBjdXJyZW50T2Zmc2V0IC0gY3VycmVudC5vZmZzZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBvZmZzZXQgPSBjdXJyZW50T2Zmc2V0O1xuICAgICAgY3VycmVudE9mZnNldCA9IGNvcHlJbmRpY2VzQ1BVKFxuICAgICAgICBpbmRpY2VzLFxuICAgICAgICBuZXdJbmRpY2VzLFxuICAgICAgICBjdXJyZW50T2Zmc2V0LFxuICAgICAgICBpbmRleE9mZnNldHMsXG4gICAgICAgIGluZGV4Q291bnRzLFxuICAgICAgICBuZXh0LmJhdGNoSWRzLFxuICAgICAgICBiYXRjaElkTG9va1VwXG4gICAgICApO1xuXG4gICAgICBuZXh0Lm9mZnNldCA9IG9mZnNldDtcbiAgICAgIG5leHQuY291bnQgPSBjdXJyZW50T2Zmc2V0IC0gb2Zmc2V0O1xuICAgICAgbmV3QmF0Y2hlZEluZGljZXMucHVzaChuZXh0KTtcbiAgICAgIGN1cnJlbnQgPSBuZXh0O1xuICAgIH1cbiAgfVxuXG4gIHByaW1pdGl2ZS5fdmEuaW5kZXhCdWZmZXIuY29weUZyb21BcnJheVZpZXcobmV3SW5kaWNlcyk7XG5cbiAgcHJpbWl0aXZlLl9pbmRpY2VzID0gbmV3SW5kaWNlcztcbiAgcHJpbWl0aXZlLl9iYXRjaGVkSW5kaWNlcyA9IG5ld0JhdGNoZWRJbmRpY2VzO1xufVxuXG5mdW5jdGlvbiBjb3B5SW5kaWNlc0dQVShcbiAgcmVhZEJ1ZmZlcixcbiAgd3JpdGVCdWZmZXIsXG4gIGN1cnJlbnRPZmZzZXQsXG4gIG9mZnNldHMsXG4gIGNvdW50cyxcbiAgYmF0Y2hJZHMsXG4gIGJhdGNoSWRMb29rVXBcbikge1xuICB2YXIgc2l6ZUluQnl0ZXMgPSByZWFkQnVmZmVyLmJ5dGVzUGVySW5kZXg7XG5cbiAgdmFyIGJhdGNoZWRJZHNMZW5ndGggPSBiYXRjaElkcy5sZW5ndGg7XG4gIGZvciAodmFyIGogPSAwOyBqIDwgYmF0Y2hlZElkc0xlbmd0aDsgKytqKSB7XG4gICAgdmFyIGJhdGNoZWRJZCA9IGJhdGNoSWRzW2pdO1xuICAgIHZhciBpbmRleCA9IGJhdGNoSWRMb29rVXBbYmF0Y2hlZElkXTtcbiAgICB2YXIgb2Zmc2V0ID0gb2Zmc2V0c1tpbmRleF07XG4gICAgdmFyIGNvdW50ID0gY291bnRzW2luZGV4XTtcblxuICAgIHdyaXRlQnVmZmVyLmNvcHlGcm9tQnVmZmVyKFxuICAgICAgcmVhZEJ1ZmZlcixcbiAgICAgIG9mZnNldCAqIHNpemVJbkJ5dGVzLFxuICAgICAgY3VycmVudE9mZnNldCAqIHNpemVJbkJ5dGVzLFxuICAgICAgY291bnQgKiBzaXplSW5CeXRlc1xuICAgICk7XG5cbiAgICBvZmZzZXRzW2luZGV4XSA9IGN1cnJlbnRPZmZzZXQ7XG4gICAgY3VycmVudE9mZnNldCArPSBjb3VudDtcbiAgfVxuXG4gIHJldHVybiBjdXJyZW50T2Zmc2V0O1xufVxuXG5mdW5jdGlvbiByZWJhdGNoR1BVKHByaW1pdGl2ZSwgYmF0Y2hlZEluZGljZXMpIHtcbiAgdmFyIGluZGV4T2Zmc2V0cyA9IHByaW1pdGl2ZS5faW5kZXhPZmZzZXRzO1xuICB2YXIgaW5kZXhDb3VudHMgPSBwcmltaXRpdmUuX2luZGV4Q291bnRzO1xuICB2YXIgYmF0Y2hJZExvb2tVcCA9IHByaW1pdGl2ZS5fYmF0Y2hJZExvb2tVcDtcblxuICB2YXIgY3VycmVudCA9IGJhdGNoZWRJbmRpY2VzLnBvcCgpO1xuICB2YXIgbmV3QmF0Y2hlZEluZGljZXMgPSBbY3VycmVudF07XG5cbiAgdmFyIHJlYWRCdWZmZXIgPSBwcmltaXRpdmUuX3ZhLmluZGV4QnVmZmVyO1xuICB2YXIgd3JpdGVCdWZmZXIgPSBwcmltaXRpdmUuX3ZhU3dhcC5pbmRleEJ1ZmZlcjtcblxuICB2YXIgY3VycmVudE9mZnNldCA9IGNvcHlJbmRpY2VzR1BVKFxuICAgIHJlYWRCdWZmZXIsXG4gICAgd3JpdGVCdWZmZXIsXG4gICAgMCxcbiAgICBpbmRleE9mZnNldHMsXG4gICAgaW5kZXhDb3VudHMsXG4gICAgY3VycmVudC5iYXRjaElkcyxcbiAgICBiYXRjaElkTG9va1VwXG4gICk7XG5cbiAgY3VycmVudC5vZmZzZXQgPSAwO1xuICBjdXJyZW50LmNvdW50ID0gY3VycmVudE9mZnNldDtcblxuICB3aGlsZSAoYmF0Y2hlZEluZGljZXMubGVuZ3RoID4gMCkge1xuICAgIHZhciBuZXh0ID0gYmF0Y2hlZEluZGljZXMucG9wKCk7XG4gICAgaWYgKENvbG9yLmVxdWFscyhuZXh0LmNvbG9yLCBjdXJyZW50LmNvbG9yKSkge1xuICAgICAgY3VycmVudE9mZnNldCA9IGNvcHlJbmRpY2VzR1BVKFxuICAgICAgICByZWFkQnVmZmVyLFxuICAgICAgICB3cml0ZUJ1ZmZlcixcbiAgICAgICAgY3VycmVudE9mZnNldCxcbiAgICAgICAgaW5kZXhPZmZzZXRzLFxuICAgICAgICBpbmRleENvdW50cyxcbiAgICAgICAgbmV4dC5iYXRjaElkcyxcbiAgICAgICAgYmF0Y2hJZExvb2tVcFxuICAgICAgKTtcbiAgICAgIGN1cnJlbnQuYmF0Y2hJZHMgPSBjdXJyZW50LmJhdGNoSWRzLmNvbmNhdChuZXh0LmJhdGNoSWRzKTtcbiAgICAgIGN1cnJlbnQuY291bnQgPSBjdXJyZW50T2Zmc2V0IC0gY3VycmVudC5vZmZzZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBvZmZzZXQgPSBjdXJyZW50T2Zmc2V0O1xuICAgICAgY3VycmVudE9mZnNldCA9IGNvcHlJbmRpY2VzR1BVKFxuICAgICAgICByZWFkQnVmZmVyLFxuICAgICAgICB3cml0ZUJ1ZmZlcixcbiAgICAgICAgY3VycmVudE9mZnNldCxcbiAgICAgICAgaW5kZXhPZmZzZXRzLFxuICAgICAgICBpbmRleENvdW50cyxcbiAgICAgICAgbmV4dC5iYXRjaElkcyxcbiAgICAgICAgYmF0Y2hJZExvb2tVcFxuICAgICAgKTtcbiAgICAgIG5leHQub2Zmc2V0ID0gb2Zmc2V0O1xuICAgICAgbmV4dC5jb3VudCA9IGN1cnJlbnRPZmZzZXQgLSBvZmZzZXQ7XG4gICAgICBuZXdCYXRjaGVkSW5kaWNlcy5wdXNoKG5leHQpO1xuICAgICAgY3VycmVudCA9IG5leHQ7XG4gICAgfVxuICB9XG5cbiAgdmFyIHRlbXAgPSBwcmltaXRpdmUuX3ZhO1xuICBwcmltaXRpdmUuX3ZhID0gcHJpbWl0aXZlLl92YVN3YXA7XG4gIHByaW1pdGl2ZS5fdmFTd2FwID0gdGVtcDtcblxuICBwcmltaXRpdmUuX2JhdGNoZWRJbmRpY2VzID0gbmV3QmF0Y2hlZEluZGljZXM7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVDb2xvcnMoYSwgYikge1xuICByZXR1cm4gYi5jb2xvci50b1JnYmEoKSAtIGEuY29sb3IudG9SZ2JhKCk7XG59XG5cbi8vIFBFUkZPUk1BTkNFX0lERUE6IEZvciBXZWJHTCAyLCB3ZSBjYW4gdXNlIGNvcHlCdWZmZXJTdWJEYXRhIGZvciBidWZmZXItdG8tYnVmZmVyIGNvcGllcy5cbi8vIFBFUkZPUk1BTkNFX0lERUE6IE5vdCBzdXBwb3J0ZWQsIGJ1dCB3ZSBjb3VsZCB1c2UgZ2xNdWx0aURyYXdFbGVtZW50cyBoZXJlLlxuZnVuY3Rpb24gcmViYXRjaENvbW1hbmRzKHByaW1pdGl2ZSwgY29udGV4dCkge1xuICBpZiAoIXByaW1pdGl2ZS5fYmF0Y2hEaXJ0eSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBiYXRjaGVkSW5kaWNlcyA9IHByaW1pdGl2ZS5fYmF0Y2hlZEluZGljZXM7XG4gIHZhciBsZW5ndGggPSBiYXRjaGVkSW5kaWNlcy5sZW5ndGg7XG5cbiAgdmFyIG5lZWRUb1JlYmF0Y2ggPSBmYWxzZTtcbiAgdmFyIGNvbG9yQ291bnRzID0ge307XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBjb2xvciA9IGJhdGNoZWRJbmRpY2VzW2ldLmNvbG9yO1xuICAgIHZhciByZ2JhID0gY29sb3IudG9SZ2JhKCk7XG4gICAgaWYgKGRlZmluZWQoY29sb3JDb3VudHNbcmdiYV0pKSB7XG4gICAgICBuZWVkVG9SZWJhdGNoID0gdHJ1ZTtcbiAgICAgIGJyZWFrO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb2xvckNvdW50c1tyZ2JhXSA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFuZWVkVG9SZWJhdGNoKSB7XG4gICAgcHJpbWl0aXZlLl9iYXRjaERpcnR5ID0gZmFsc2U7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKFxuICAgIG5lZWRUb1JlYmF0Y2ggJiZcbiAgICAhcHJpbWl0aXZlLmZvcmNlUmViYXRjaCAmJlxuICAgIHByaW1pdGl2ZS5fZnJhbWVzU2luY2VMYXN0UmViYXRjaCA8IDEyMFxuICApIHtcbiAgICArK3ByaW1pdGl2ZS5fZnJhbWVzU2luY2VMYXN0UmViYXRjaDtcbiAgICByZXR1cm47XG4gIH1cblxuICBiYXRjaGVkSW5kaWNlcy5zb3J0KGNvbXBhcmVDb2xvcnMpO1xuXG4gIGlmIChjb250ZXh0LndlYmdsMikge1xuICAgIHJlYmF0Y2hHUFUocHJpbWl0aXZlLCBiYXRjaGVkSW5kaWNlcyk7XG4gIH0gZWxzZSB7XG4gICAgcmViYXRjaENQVShwcmltaXRpdmUsIGJhdGNoZWRJbmRpY2VzKTtcbiAgfVxuXG4gIHByaW1pdGl2ZS5fZnJhbWVzU2luY2VMYXN0UmViYXRjaCA9IDA7XG4gIHByaW1pdGl2ZS5fYmF0Y2hEaXJ0eSA9IGZhbHNlO1xuICBwcmltaXRpdmUuX3BpY2tDb21tYW5kc0RpcnR5ID0gdHJ1ZTtcbiAgcHJpbWl0aXZlLl93aXJlZnJhbWVEaXJ0eSA9IHRydWU7XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVDb2xvckNvbW1hbmRzKHByaW1pdGl2ZSwgY29udGV4dCkge1xuICB2YXIgbmVlZHNSZWJhdGNoID0gcmViYXRjaENvbW1hbmRzKHByaW1pdGl2ZSwgY29udGV4dCk7XG5cbiAgdmFyIGNvbW1hbmRzID0gcHJpbWl0aXZlLl9jb21tYW5kcztcbiAgdmFyIGJhdGNoZWRJbmRpY2VzID0gcHJpbWl0aXZlLl9iYXRjaGVkSW5kaWNlcztcbiAgdmFyIGxlbmd0aCA9IGJhdGNoZWRJbmRpY2VzLmxlbmd0aDtcbiAgdmFyIGNvbW1hbmRzTGVuZ3RoID0gbGVuZ3RoICogMjtcblxuICBpZiAoXG4gICAgZGVmaW5lZChjb21tYW5kcykgJiZcbiAgICAhbmVlZHNSZWJhdGNoICYmXG4gICAgY29tbWFuZHMubGVuZ3RoID09PSBjb21tYW5kc0xlbmd0aFxuICApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb21tYW5kcy5sZW5ndGggPSBjb21tYW5kc0xlbmd0aDtcblxuICB2YXIgdmVydGV4QXJyYXkgPSBwcmltaXRpdmUuX3ZhO1xuICB2YXIgc3AgPSBwcmltaXRpdmUuX3NwO1xuICB2YXIgbW9kZWxNYXRyaXggPSBkZWZhdWx0VmFsdWUocHJpbWl0aXZlLl9tb2RlbE1hdHJpeCwgTWF0cml4NC5JREVOVElUWSk7XG4gIHZhciB1bmlmb3JtTWFwID0gcHJpbWl0aXZlLl91bmlmb3JtTWFwO1xuICB2YXIgYnYgPSBwcmltaXRpdmUuX2JvdW5kaW5nVm9sdW1lO1xuXG4gIGZvciAodmFyIGogPSAwOyBqIDwgbGVuZ3RoOyArK2opIHtcbiAgICB2YXIgb2Zmc2V0ID0gYmF0Y2hlZEluZGljZXNbal0ub2Zmc2V0O1xuICAgIHZhciBjb3VudCA9IGJhdGNoZWRJbmRpY2VzW2pdLmNvdW50O1xuXG4gICAgdmFyIHN0ZW5jaWxEZXB0aENvbW1hbmQgPSBjb21tYW5kc1tqICogMl07XG4gICAgaWYgKCFkZWZpbmVkKHN0ZW5jaWxEZXB0aENvbW1hbmQpKSB7XG4gICAgICBzdGVuY2lsRGVwdGhDb21tYW5kID0gY29tbWFuZHNbaiAqIDJdID0gbmV3IERyYXdDb21tYW5kKHtcbiAgICAgICAgb3duZXI6IHByaW1pdGl2ZSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQudmVydGV4QXJyYXkgPSB2ZXJ0ZXhBcnJheTtcbiAgICBzdGVuY2lsRGVwdGhDb21tYW5kLm1vZGVsTWF0cml4ID0gbW9kZWxNYXRyaXg7XG4gICAgc3RlbmNpbERlcHRoQ29tbWFuZC5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgc3RlbmNpbERlcHRoQ29tbWFuZC5jb3VudCA9IGNvdW50O1xuICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQucmVuZGVyU3RhdGUgPSBwcmltaXRpdmUuX3JzU3RlbmNpbERlcHRoUGFzcztcbiAgICBzdGVuY2lsRGVwdGhDb21tYW5kLnNoYWRlclByb2dyYW0gPSBzcDtcbiAgICBzdGVuY2lsRGVwdGhDb21tYW5kLnVuaWZvcm1NYXAgPSB1bmlmb3JtTWFwO1xuICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQuYm91bmRpbmdWb2x1bWUgPSBidjtcbiAgICBzdGVuY2lsRGVwdGhDb21tYW5kLmN1bGwgPSBmYWxzZTtcbiAgICBzdGVuY2lsRGVwdGhDb21tYW5kLnBhc3MgPSBQYXNzLlRFUlJBSU5fQ0xBU1NJRklDQVRJT047XG5cbiAgICB2YXIgc3RlbmNpbERlcHRoRGVyaXZlZENvbW1hbmQgPSBEcmF3Q29tbWFuZC5zaGFsbG93Q2xvbmUoXG4gICAgICBzdGVuY2lsRGVwdGhDb21tYW5kLFxuICAgICAgc3RlbmNpbERlcHRoQ29tbWFuZC5kZXJpdmVkQ29tbWFuZHMudGlsZXNldFxuICAgICk7XG4gICAgc3RlbmNpbERlcHRoRGVyaXZlZENvbW1hbmQucmVuZGVyU3RhdGUgPVxuICAgICAgcHJpbWl0aXZlLl9yc1N0ZW5jaWxEZXB0aFBhc3MzRFRpbGVzO1xuICAgIHN0ZW5jaWxEZXB0aERlcml2ZWRDb21tYW5kLnBhc3MgPSBQYXNzLkNFU0lVTV8zRF9USUxFX0NMQVNTSUZJQ0FUSU9OO1xuICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQuZGVyaXZlZENvbW1hbmRzLnRpbGVzZXQgPSBzdGVuY2lsRGVwdGhEZXJpdmVkQ29tbWFuZDtcblxuICAgIHZhciBjb2xvckNvbW1hbmQgPSBjb21tYW5kc1tqICogMiArIDFdO1xuICAgIGlmICghZGVmaW5lZChjb2xvckNvbW1hbmQpKSB7XG4gICAgICBjb2xvckNvbW1hbmQgPSBjb21tYW5kc1tqICogMiArIDFdID0gbmV3IERyYXdDb21tYW5kKHtcbiAgICAgICAgb3duZXI6IHByaW1pdGl2ZSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbG9yQ29tbWFuZC52ZXJ0ZXhBcnJheSA9IHZlcnRleEFycmF5O1xuICAgIGNvbG9yQ29tbWFuZC5tb2RlbE1hdHJpeCA9IG1vZGVsTWF0cml4O1xuICAgIGNvbG9yQ29tbWFuZC5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgY29sb3JDb21tYW5kLmNvdW50ID0gY291bnQ7XG4gICAgY29sb3JDb21tYW5kLnJlbmRlclN0YXRlID0gcHJpbWl0aXZlLl9yc0NvbG9yUGFzcztcbiAgICBjb2xvckNvbW1hbmQuc2hhZGVyUHJvZ3JhbSA9IHNwO1xuICAgIGNvbG9yQ29tbWFuZC51bmlmb3JtTWFwID0gdW5pZm9ybU1hcDtcbiAgICBjb2xvckNvbW1hbmQuYm91bmRpbmdWb2x1bWUgPSBidjtcbiAgICBjb2xvckNvbW1hbmQuY3VsbCA9IGZhbHNlO1xuICAgIGNvbG9yQ29tbWFuZC5wYXNzID0gUGFzcy5URVJSQUlOX0NMQVNTSUZJQ0FUSU9OO1xuXG4gICAgdmFyIGNvbG9yRGVyaXZlZENvbW1hbmQgPSBEcmF3Q29tbWFuZC5zaGFsbG93Q2xvbmUoXG4gICAgICBjb2xvckNvbW1hbmQsXG4gICAgICBjb2xvckNvbW1hbmQuZGVyaXZlZENvbW1hbmRzLnRpbGVzZXRcbiAgICApO1xuICAgIGNvbG9yRGVyaXZlZENvbW1hbmQucGFzcyA9IFBhc3MuQ0VTSVVNXzNEX1RJTEVfQ0xBU1NJRklDQVRJT047XG4gICAgY29sb3JDb21tYW5kLmRlcml2ZWRDb21tYW5kcy50aWxlc2V0ID0gY29sb3JEZXJpdmVkQ29tbWFuZDtcbiAgfVxuXG4gIHByaW1pdGl2ZS5fY29tbWFuZHNEaXJ0eSA9IHRydWU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbG9yQ29tbWFuZHNJZ25vcmVTaG93KHByaW1pdGl2ZSwgZnJhbWVTdGF0ZSkge1xuICBpZiAoXG4gICAgcHJpbWl0aXZlLmNsYXNzaWZpY2F0aW9uVHlwZSA9PT0gQ2xhc3NpZmljYXRpb25UeXBlLlRFUlJBSU4gfHxcbiAgICAhZnJhbWVTdGF0ZS5pbnZlcnRDbGFzc2lmaWNhdGlvbiB8fFxuICAgIChkZWZpbmVkKHByaW1pdGl2ZS5fY29tbWFuZHNJZ25vcmVTaG93KSAmJiAhcHJpbWl0aXZlLl9jb21tYW5kc0RpcnR5KVxuICApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgY29tbWFuZHMgPSBwcmltaXRpdmUuX2NvbW1hbmRzO1xuICB2YXIgY29tbWFuZHNJZ25vcmVTaG93ID0gcHJpbWl0aXZlLl9jb21tYW5kc0lnbm9yZVNob3c7XG4gIHZhciBzcFN0ZW5jaWwgPSBwcmltaXRpdmUuX3NwU3RlbmNpbDtcblxuICB2YXIgY29tbWFuZHNMZW5ndGggPSBjb21tYW5kcy5sZW5ndGg7XG4gIHZhciBsZW5ndGggPSAoY29tbWFuZHNJZ25vcmVTaG93Lmxlbmd0aCA9IGNvbW1hbmRzTGVuZ3RoIC8gMik7XG5cbiAgdmFyIGNvbW1hbmRJbmRleCA9IDA7XG4gIGZvciAodmFyIGogPSAwOyBqIDwgbGVuZ3RoOyArK2opIHtcbiAgICB2YXIgY29tbWFuZElnbm9yZVNob3cgPSAoY29tbWFuZHNJZ25vcmVTaG93W2pdID0gRHJhd0NvbW1hbmQuc2hhbGxvd0Nsb25lKFxuICAgICAgY29tbWFuZHNbY29tbWFuZEluZGV4XSxcbiAgICAgIGNvbW1hbmRzSWdub3JlU2hvd1tqXVxuICAgICkpO1xuICAgIGNvbW1hbmRJZ25vcmVTaG93LnNoYWRlclByb2dyYW0gPSBzcFN0ZW5jaWw7XG4gICAgY29tbWFuZElnbm9yZVNob3cucGFzcyA9IFBhc3MuQ0VTSVVNXzNEX1RJTEVfQ0xBU1NJRklDQVRJT05fSUdOT1JFX1NIT1c7XG5cbiAgICBjb21tYW5kSW5kZXggKz0gMjtcbiAgfVxuXG4gIHByaW1pdGl2ZS5fY29tbWFuZHNEaXJ0eSA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVQaWNrQ29tbWFuZHMocHJpbWl0aXZlKSB7XG4gIGlmICghcHJpbWl0aXZlLl9waWNrQ29tbWFuZHNEaXJ0eSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBsZW5ndGggPSBwcmltaXRpdmUuX2luZGV4T2Zmc2V0cy5sZW5ndGg7XG4gIHZhciBwaWNrQ29tbWFuZHMgPSBwcmltaXRpdmUuX3BpY2tDb21tYW5kcztcbiAgcGlja0NvbW1hbmRzLmxlbmd0aCA9IGxlbmd0aCAqIDI7XG5cbiAgdmFyIHZlcnRleEFycmF5ID0gcHJpbWl0aXZlLl92YTtcbiAgdmFyIHNwU3RlbmNpbCA9IHByaW1pdGl2ZS5fc3BTdGVuY2lsO1xuICB2YXIgc3BQaWNrID0gcHJpbWl0aXZlLl9zcFBpY2s7XG4gIHZhciBtb2RlbE1hdHJpeCA9IGRlZmF1bHRWYWx1ZShwcmltaXRpdmUuX21vZGVsTWF0cml4LCBNYXRyaXg0LklERU5USVRZKTtcbiAgdmFyIHVuaWZvcm1NYXAgPSBwcmltaXRpdmUuX3VuaWZvcm1NYXA7XG5cbiAgZm9yICh2YXIgaiA9IDA7IGogPCBsZW5ndGg7ICsraikge1xuICAgIHZhciBvZmZzZXQgPSBwcmltaXRpdmUuX2luZGV4T2Zmc2V0c1tqXTtcbiAgICB2YXIgY291bnQgPSBwcmltaXRpdmUuX2luZGV4Q291bnRzW2pdO1xuICAgIHZhciBidiA9IGRlZmluZWQocHJpbWl0aXZlLl9ib3VuZGluZ1ZvbHVtZXMpXG4gICAgICA/IHByaW1pdGl2ZS5fYm91bmRpbmdWb2x1bWVzW2pdXG4gICAgICA6IHByaW1pdGl2ZS5ib3VuZGluZ1ZvbHVtZTtcblxuICAgIHZhciBzdGVuY2lsRGVwdGhDb21tYW5kID0gcGlja0NvbW1hbmRzW2ogKiAyXTtcbiAgICBpZiAoIWRlZmluZWQoc3RlbmNpbERlcHRoQ29tbWFuZCkpIHtcbiAgICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQgPSBwaWNrQ29tbWFuZHNbaiAqIDJdID0gbmV3IERyYXdDb21tYW5kKHtcbiAgICAgICAgb3duZXI6IHByaW1pdGl2ZSxcbiAgICAgICAgcGlja09ubHk6IHRydWUsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBzdGVuY2lsRGVwdGhDb21tYW5kLnZlcnRleEFycmF5ID0gdmVydGV4QXJyYXk7XG4gICAgc3RlbmNpbERlcHRoQ29tbWFuZC5tb2RlbE1hdHJpeCA9IG1vZGVsTWF0cml4O1xuICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQub2Zmc2V0ID0gb2Zmc2V0O1xuICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQuY291bnQgPSBjb3VudDtcbiAgICBzdGVuY2lsRGVwdGhDb21tYW5kLnJlbmRlclN0YXRlID0gcHJpbWl0aXZlLl9yc1N0ZW5jaWxEZXB0aFBhc3M7XG4gICAgc3RlbmNpbERlcHRoQ29tbWFuZC5zaGFkZXJQcm9ncmFtID0gc3BTdGVuY2lsO1xuICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQudW5pZm9ybU1hcCA9IHVuaWZvcm1NYXA7XG4gICAgc3RlbmNpbERlcHRoQ29tbWFuZC5ib3VuZGluZ1ZvbHVtZSA9IGJ2O1xuICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQucGFzcyA9IFBhc3MuVEVSUkFJTl9DTEFTU0lGSUNBVElPTjtcblxuICAgIHZhciBzdGVuY2lsRGVwdGhEZXJpdmVkQ29tbWFuZCA9IERyYXdDb21tYW5kLnNoYWxsb3dDbG9uZShcbiAgICAgIHN0ZW5jaWxEZXB0aENvbW1hbmQsXG4gICAgICBzdGVuY2lsRGVwdGhDb21tYW5kLmRlcml2ZWRDb21tYW5kcy50aWxlc2V0XG4gICAgKTtcbiAgICBzdGVuY2lsRGVwdGhEZXJpdmVkQ29tbWFuZC5yZW5kZXJTdGF0ZSA9XG4gICAgICBwcmltaXRpdmUuX3JzU3RlbmNpbERlcHRoUGFzczNEVGlsZXM7XG4gICAgc3RlbmNpbERlcHRoRGVyaXZlZENvbW1hbmQucGFzcyA9IFBhc3MuQ0VTSVVNXzNEX1RJTEVfQ0xBU1NJRklDQVRJT047XG4gICAgc3RlbmNpbERlcHRoQ29tbWFuZC5kZXJpdmVkQ29tbWFuZHMudGlsZXNldCA9IHN0ZW5jaWxEZXB0aERlcml2ZWRDb21tYW5kO1xuXG4gICAgdmFyIGNvbG9yQ29tbWFuZCA9IHBpY2tDb21tYW5kc1tqICogMiArIDFdO1xuICAgIGlmICghZGVmaW5lZChjb2xvckNvbW1hbmQpKSB7XG4gICAgICBjb2xvckNvbW1hbmQgPSBwaWNrQ29tbWFuZHNbaiAqIDIgKyAxXSA9IG5ldyBEcmF3Q29tbWFuZCh7XG4gICAgICAgIG93bmVyOiBwcmltaXRpdmUsXG4gICAgICAgIHBpY2tPbmx5OiB0cnVlLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29sb3JDb21tYW5kLnZlcnRleEFycmF5ID0gdmVydGV4QXJyYXk7XG4gICAgY29sb3JDb21tYW5kLm1vZGVsTWF0cml4ID0gbW9kZWxNYXRyaXg7XG4gICAgY29sb3JDb21tYW5kLm9mZnNldCA9IG9mZnNldDtcbiAgICBjb2xvckNvbW1hbmQuY291bnQgPSBjb3VudDtcbiAgICBjb2xvckNvbW1hbmQucmVuZGVyU3RhdGUgPSBwcmltaXRpdmUuX3JzUGlja1Bhc3M7XG4gICAgY29sb3JDb21tYW5kLnNoYWRlclByb2dyYW0gPSBzcFBpY2s7XG4gICAgY29sb3JDb21tYW5kLnVuaWZvcm1NYXAgPSB1bmlmb3JtTWFwO1xuICAgIGNvbG9yQ29tbWFuZC5ib3VuZGluZ1ZvbHVtZSA9IGJ2O1xuICAgIGNvbG9yQ29tbWFuZC5wYXNzID0gUGFzcy5URVJSQUlOX0NMQVNTSUZJQ0FUSU9OO1xuXG4gICAgdmFyIGNvbG9yRGVyaXZlZENvbW1hbmQgPSBEcmF3Q29tbWFuZC5zaGFsbG93Q2xvbmUoXG4gICAgICBjb2xvckNvbW1hbmQsXG4gICAgICBjb2xvckNvbW1hbmQuZGVyaXZlZENvbW1hbmRzLnRpbGVzZXRcbiAgICApO1xuICAgIGNvbG9yRGVyaXZlZENvbW1hbmQucGFzcyA9IFBhc3MuQ0VTSVVNXzNEX1RJTEVfQ0xBU1NJRklDQVRJT047XG4gICAgY29sb3JDb21tYW5kLmRlcml2ZWRDb21tYW5kcy50aWxlc2V0ID0gY29sb3JEZXJpdmVkQ29tbWFuZDtcbiAgfVxuXG4gIHByaW1pdGl2ZS5fcGlja0NvbW1hbmRzRGlydHkgPSBmYWxzZTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGZlYXR1cmVzIGZvciBlYWNoIG1lc2ggYW5kIHBsYWNlcyBpdCBhdCB0aGUgYmF0Y2ggaWQgaW5kZXggb2YgZmVhdHVyZXMuXG4gKlxuICogQHBhcmFtIHtWZWN0b3IzRFRpbGVDb250ZW50fSBjb250ZW50IFRoZSB2ZWN0b3IgdGlsZSBjb250ZW50LlxuICogQHBhcmFtIHtDZXNpdW0zRFRpbGVGZWF0dXJlW119IGZlYXR1cmVzIEFuIGFycmF5IG9mIGZlYXR1cmVzIHdoZXJlIHRoZSBwb2x5Z29uIGZlYXR1cmVzIHdpbGwgYmUgcGxhY2VkLlxuICovXG5WZWN0b3IzRFRpbGVQcmltaXRpdmUucHJvdG90eXBlLmNyZWF0ZUZlYXR1cmVzID0gZnVuY3Rpb24gKGNvbnRlbnQsIGZlYXR1cmVzKSB7XG4gIHZhciBiYXRjaElkcyA9IHRoaXMuX2JhdGNoSWRzO1xuICB2YXIgbGVuZ3RoID0gYmF0Y2hJZHMubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgdmFyIGJhdGNoSWQgPSBiYXRjaElkc1tpXTtcbiAgICBmZWF0dXJlc1tiYXRjaElkXSA9IG5ldyBDZXNpdW0zRFRpbGVGZWF0dXJlKGNvbnRlbnQsIGJhdGNoSWQpO1xuICB9XG59O1xuXG4vKipcbiAqIENvbG9ycyB0aGUgZW50aXJlIHRpbGUgd2hlbiBlbmFibGVkIGlzIHRydWUuIFRoZSByZXN1bHRpbmcgY29sb3Igd2lsbCBiZSAobWVzaCBiYXRjaCB0YWJsZSBjb2xvciAqIGNvbG9yKS5cbiAqXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGVuYWJsZWQgV2hldGhlciB0byBlbmFibGUgZGVidWcgY29sb3JpbmcuXG4gKiBAcGFyYW0ge0NvbG9yfSBjb2xvciBUaGUgZGVidWcgY29sb3IuXG4gKi9cblZlY3RvcjNEVGlsZVByaW1pdGl2ZS5wcm90b3R5cGUuYXBwbHlEZWJ1Z1NldHRpbmdzID0gZnVuY3Rpb24gKGVuYWJsZWQsIGNvbG9yKSB7XG4gIHRoaXMuX2hpZ2hsaWdodENvbG9yID0gZW5hYmxlZCA/IGNvbG9yIDogdGhpcy5fY29uc3RhbnRDb2xvcjtcbn07XG5cbmZ1bmN0aW9uIGNsZWFyU3R5bGUocG9seWdvbnMsIGZlYXR1cmVzKSB7XG4gIHBvbHlnb25zLl91cGRhdGluZ0FsbENvbW1hbmRzID0gdHJ1ZTtcblxuICB2YXIgYmF0Y2hJZHMgPSBwb2x5Z29ucy5fYmF0Y2hJZHM7XG4gIHZhciBsZW5ndGggPSBiYXRjaElkcy5sZW5ndGg7XG4gIHZhciBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBiYXRjaElkID0gYmF0Y2hJZHNbaV07XG4gICAgdmFyIGZlYXR1cmUgPSBmZWF0dXJlc1tiYXRjaElkXTtcblxuICAgIGZlYXR1cmUuc2hvdyA9IHRydWU7XG4gICAgZmVhdHVyZS5jb2xvciA9IENvbG9yLldISVRFO1xuICB9XG5cbiAgdmFyIGJhdGNoZWRJbmRpY2VzID0gcG9seWdvbnMuX2JhdGNoZWRJbmRpY2VzO1xuICBsZW5ndGggPSBiYXRjaGVkSW5kaWNlcy5sZW5ndGg7XG5cbiAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgYmF0Y2hlZEluZGljZXNbaV0uY29sb3IgPSBDb2xvci5jbG9uZShDb2xvci5XSElURSk7XG4gIH1cblxuICBwb2x5Z29ucy5fdXBkYXRpbmdBbGxDb21tYW5kcyA9IGZhbHNlO1xuICBwb2x5Z29ucy5fYmF0Y2hEaXJ0eSA9IHRydWU7XG59XG5cbnZhciBzY3JhdGNoQ29sb3IgPSBuZXcgQ29sb3IoKTtcblxudmFyIERFRkFVTFRfQ09MT1JfVkFMVUUgPSBDb2xvci5XSElURTtcbnZhciBERUZBVUxUX1NIT1dfVkFMVUUgPSB0cnVlO1xuXG52YXIgY29tcGxleEV4cHJlc3Npb25SZWcgPSAvXFwkLztcblxuLyoqXG4gKiBBcHBseSBhIHN0eWxlIHRvIHRoZSBjb250ZW50LlxuICpcbiAqIEBwYXJhbSB7Q2VzaXVtM0RUaWxlU3R5bGV9IHN0eWxlIFRoZSBzdHlsZS5cbiAqIEBwYXJhbSB7Q2VzaXVtM0RUaWxlRmVhdHVyZVtdfSBmZWF0dXJlcyBUaGUgYXJyYXkgb2YgZmVhdHVyZXMuXG4gKi9cblZlY3RvcjNEVGlsZVByaW1pdGl2ZS5wcm90b3R5cGUuYXBwbHlTdHlsZSA9IGZ1bmN0aW9uIChzdHlsZSwgZmVhdHVyZXMpIHtcbiAgaWYgKCFkZWZpbmVkKHN0eWxlKSkge1xuICAgIGNsZWFyU3R5bGUodGhpcywgZmVhdHVyZXMpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBjb2xvckV4cHJlc3Npb24gPSBzdHlsZS5jb2xvcjtcbiAgdmFyIGlzU2ltcGxlU3R5bGUgPVxuICAgIGNvbG9yRXhwcmVzc2lvbiBpbnN0YW5jZW9mIEV4cHJlc3Npb24gJiZcbiAgICAhY29tcGxleEV4cHJlc3Npb25SZWcudGVzdChjb2xvckV4cHJlc3Npb24uZXhwcmVzc2lvbik7XG4gIHRoaXMuX3VwZGF0aW5nQWxsQ29tbWFuZHMgPSBpc1NpbXBsZVN0eWxlO1xuXG4gIHZhciBiYXRjaElkcyA9IHRoaXMuX2JhdGNoSWRzO1xuICB2YXIgbGVuZ3RoID0gYmF0Y2hJZHMubGVuZ3RoO1xuICB2YXIgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgYmF0Y2hJZCA9IGJhdGNoSWRzW2ldO1xuICAgIHZhciBmZWF0dXJlID0gZmVhdHVyZXNbYmF0Y2hJZF07XG5cbiAgICBmZWF0dXJlLmNvbG9yID0gZGVmaW5lZChzdHlsZS5jb2xvcilcbiAgICAgID8gc3R5bGUuY29sb3IuZXZhbHVhdGVDb2xvcihmZWF0dXJlLCBzY3JhdGNoQ29sb3IpXG4gICAgICA6IERFRkFVTFRfQ09MT1JfVkFMVUU7XG4gICAgZmVhdHVyZS5zaG93ID0gZGVmaW5lZChzdHlsZS5zaG93KVxuICAgICAgPyBzdHlsZS5zaG93LmV2YWx1YXRlKGZlYXR1cmUpXG4gICAgICA6IERFRkFVTFRfU0hPV19WQUxVRTtcbiAgfVxuXG4gIGlmIChpc1NpbXBsZVN0eWxlKSB7XG4gICAgdmFyIGJhdGNoZWRJbmRpY2VzID0gdGhpcy5fYmF0Y2hlZEluZGljZXM7XG4gICAgbGVuZ3RoID0gYmF0Y2hlZEluZGljZXMubGVuZ3RoO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgICBiYXRjaGVkSW5kaWNlc1tpXS5jb2xvciA9IENvbG9yLmNsb25lKENvbG9yLldISVRFKTtcbiAgICB9XG5cbiAgICB0aGlzLl91cGRhdGluZ0FsbENvbW1hbmRzID0gZmFsc2U7XG4gICAgdGhpcy5fYmF0Y2hEaXJ0eSA9IHRydWU7XG4gIH1cbn07XG5cbi8qKlxuICogQ2FsbCB3aGVuIHVwZGF0aW5nIHRoZSBjb2xvciBvZiBhIG1lc2ggd2l0aCBiYXRjaElkIGNoYW5nZXMgY29sb3IuIFRoZSBtZXNoZXMgd2lsbCBuZWVkIHRvIGJlIHJlLWJhdGNoZWRcbiAqIG9uIHRoZSBuZXh0IHVwZGF0ZS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gYmF0Y2hJZCBUaGUgYmF0Y2ggaWQgb2YgdGhlIG1lc2hlcyB3aG9zZSBjb2xvciBoYXMgY2hhbmdlZC5cbiAqIEBwYXJhbSB7Q29sb3J9IGNvbG9yIFRoZSBuZXcgcG9seWdvbiBjb2xvci5cbiAqL1xuVmVjdG9yM0RUaWxlUHJpbWl0aXZlLnByb3RvdHlwZS51cGRhdGVDb21tYW5kcyA9IGZ1bmN0aW9uIChiYXRjaElkLCBjb2xvcikge1xuICBpZiAodGhpcy5fdXBkYXRpbmdBbGxDb21tYW5kcykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBiYXRjaElkTG9va1VwID0gdGhpcy5fYmF0Y2hJZExvb2tVcDtcbiAgdmFyIGluZGV4ID0gYmF0Y2hJZExvb2tVcFtiYXRjaElkXTtcbiAgaWYgKCFkZWZpbmVkKGluZGV4KSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBpbmRleE9mZnNldHMgPSB0aGlzLl9pbmRleE9mZnNldHM7XG4gIHZhciBpbmRleENvdW50cyA9IHRoaXMuX2luZGV4Q291bnRzO1xuXG4gIHZhciBvZmZzZXQgPSBpbmRleE9mZnNldHNbaW5kZXhdO1xuICB2YXIgY291bnQgPSBpbmRleENvdW50c1tpbmRleF07XG5cbiAgdmFyIGJhdGNoZWRJbmRpY2VzID0gdGhpcy5fYmF0Y2hlZEluZGljZXM7XG4gIHZhciBsZW5ndGggPSBiYXRjaGVkSW5kaWNlcy5sZW5ndGg7XG5cbiAgdmFyIGk7XG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHZhciBiYXRjaGVkT2Zmc2V0ID0gYmF0Y2hlZEluZGljZXNbaV0ub2Zmc2V0O1xuICAgIHZhciBiYXRjaGVkQ291bnQgPSBiYXRjaGVkSW5kaWNlc1tpXS5jb3VudDtcblxuICAgIGlmIChvZmZzZXQgPj0gYmF0Y2hlZE9mZnNldCAmJiBvZmZzZXQgPCBiYXRjaGVkT2Zmc2V0ICsgYmF0Y2hlZENvdW50KSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBiYXRjaGVkSW5kaWNlcy5wdXNoKFxuICAgIG5ldyBWZWN0b3IzRFRpbGVCYXRjaCh7XG4gICAgICBjb2xvcjogQ29sb3IuY2xvbmUoY29sb3IpLFxuICAgICAgb2Zmc2V0OiBvZmZzZXQsXG4gICAgICBjb3VudDogY291bnQsXG4gICAgICBiYXRjaElkczogW2JhdGNoSWRdLFxuICAgIH0pXG4gICk7XG5cbiAgdmFyIHN0YXJ0SWRzID0gW107XG4gIHZhciBlbmRJZHMgPSBbXTtcblxuICB2YXIgYmF0Y2hJZHMgPSBiYXRjaGVkSW5kaWNlc1tpXS5iYXRjaElkcztcbiAgdmFyIGJhdGNoSWRzTGVuZ3RoID0gYmF0Y2hJZHMubGVuZ3RoO1xuXG4gIGZvciAodmFyIGogPSAwOyBqIDwgYmF0Y2hJZHNMZW5ndGg7ICsraikge1xuICAgIHZhciBpZCA9IGJhdGNoSWRzW2pdO1xuICAgIGlmIChpZCA9PT0gYmF0Y2hJZCkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgdmFyIG9mZnNldEluZGV4ID0gYmF0Y2hJZExvb2tVcFtpZF07XG4gICAgaWYgKGluZGV4T2Zmc2V0c1tvZmZzZXRJbmRleF0gPCBvZmZzZXQpIHtcbiAgICAgIHN0YXJ0SWRzLnB1c2goaWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbmRJZHMucHVzaChpZCk7XG4gICAgfVxuICB9XG5cbiAgaWYgKGVuZElkcy5sZW5ndGggIT09IDApIHtcbiAgICBiYXRjaGVkSW5kaWNlcy5wdXNoKFxuICAgICAgbmV3IFZlY3RvcjNEVGlsZUJhdGNoKHtcbiAgICAgICAgY29sb3I6IENvbG9yLmNsb25lKGJhdGNoZWRJbmRpY2VzW2ldLmNvbG9yKSxcbiAgICAgICAgb2Zmc2V0OiBvZmZzZXQgKyBjb3VudCxcbiAgICAgICAgY291bnQ6XG4gICAgICAgICAgYmF0Y2hlZEluZGljZXNbaV0ub2Zmc2V0ICsgYmF0Y2hlZEluZGljZXNbaV0uY291bnQgLSAob2Zmc2V0ICsgY291bnQpLFxuICAgICAgICBiYXRjaElkczogZW5kSWRzLFxuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgaWYgKHN0YXJ0SWRzLmxlbmd0aCAhPT0gMCkge1xuICAgIGJhdGNoZWRJbmRpY2VzW2ldLmNvdW50ID0gb2Zmc2V0IC0gYmF0Y2hlZEluZGljZXNbaV0ub2Zmc2V0O1xuICAgIGJhdGNoZWRJbmRpY2VzW2ldLmJhdGNoSWRzID0gc3RhcnRJZHM7XG4gIH0gZWxzZSB7XG4gICAgYmF0Y2hlZEluZGljZXMuc3BsaWNlKGksIDEpO1xuICB9XG5cbiAgdGhpcy5fYmF0Y2hEaXJ0eSA9IHRydWU7XG59O1xuXG5mdW5jdGlvbiBxdWV1ZUNvbW1hbmRzKHByaW1pdGl2ZSwgZnJhbWVTdGF0ZSwgY29tbWFuZHMsIGNvbW1hbmRzSWdub3JlU2hvdykge1xuICB2YXIgY2xhc3NpZmljYXRpb25UeXBlID0gcHJpbWl0aXZlLmNsYXNzaWZpY2F0aW9uVHlwZTtcbiAgdmFyIHF1ZXVlVGVycmFpbkNvbW1hbmRzID1cbiAgICBjbGFzc2lmaWNhdGlvblR5cGUgIT09IENsYXNzaWZpY2F0aW9uVHlwZS5DRVNJVU1fM0RfVElMRTtcbiAgdmFyIHF1ZXVlM0RUaWxlc0NvbW1hbmRzID0gY2xhc3NpZmljYXRpb25UeXBlICE9PSBDbGFzc2lmaWNhdGlvblR5cGUuVEVSUkFJTjtcblxuICB2YXIgY29tbWFuZExpc3QgPSBmcmFtZVN0YXRlLmNvbW1hbmRMaXN0O1xuICB2YXIgY29tbWFuZExlbmd0aCA9IGNvbW1hbmRzLmxlbmd0aDtcbiAgdmFyIGNvbW1hbmQ7XG4gIHZhciBpO1xuICBmb3IgKGkgPSAwOyBpIDwgY29tbWFuZExlbmd0aDsgKytpKSB7XG4gICAgaWYgKHF1ZXVlVGVycmFpbkNvbW1hbmRzKSB7XG4gICAgICBjb21tYW5kID0gY29tbWFuZHNbaV07XG4gICAgICBjb21tYW5kLnBhc3MgPSBQYXNzLlRFUlJBSU5fQ0xBU1NJRklDQVRJT047XG4gICAgICBjb21tYW5kTGlzdC5wdXNoKGNvbW1hbmQpO1xuICAgIH1cbiAgICBpZiAocXVldWUzRFRpbGVzQ29tbWFuZHMpIHtcbiAgICAgIGNvbW1hbmQgPSBjb21tYW5kc1tpXS5kZXJpdmVkQ29tbWFuZHMudGlsZXNldDtcbiAgICAgIGNvbW1hbmQucGFzcyA9IFBhc3MuQ0VTSVVNXzNEX1RJTEVfQ0xBU1NJRklDQVRJT047XG4gICAgICBjb21tYW5kTGlzdC5wdXNoKGNvbW1hbmQpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghZnJhbWVTdGF0ZS5pbnZlcnRDbGFzc2lmaWNhdGlvbiB8fCAhZGVmaW5lZChjb21tYW5kc0lnbm9yZVNob3cpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29tbWFuZExlbmd0aCA9IGNvbW1hbmRzSWdub3JlU2hvdy5sZW5ndGg7XG4gIGZvciAoaSA9IDA7IGkgPCBjb21tYW5kTGVuZ3RoOyArK2kpIHtcbiAgICBjb21tYW5kTGlzdC5wdXNoKGNvbW1hbmRzSWdub3JlU2hvd1tpXSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcXVldWVXaXJlZnJhbWVDb21tYW5kcyhmcmFtZVN0YXRlLCBjb21tYW5kcykge1xuICB2YXIgY29tbWFuZExpc3QgPSBmcmFtZVN0YXRlLmNvbW1hbmRMaXN0O1xuICB2YXIgY29tbWFuZExlbmd0aCA9IGNvbW1hbmRzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb21tYW5kTGVuZ3RoOyBpICs9IDIpIHtcbiAgICB2YXIgY29tbWFuZCA9IGNvbW1hbmRzW2kgKyAxXTtcbiAgICBjb21tYW5kLnBhc3MgPSBQYXNzLk9QQVFVRTtcbiAgICBjb21tYW5kTGlzdC5wdXNoKGNvbW1hbmQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVdpcmVmcmFtZShwcmltaXRpdmUpIHtcbiAgdmFyIGVhcmx5RXhpdCA9IHByaW1pdGl2ZS5kZWJ1Z1dpcmVmcmFtZSA9PT0gcHJpbWl0aXZlLl9kZWJ1Z1dpcmVmcmFtZTtcbiAgZWFybHlFeGl0ID1cbiAgICBlYXJseUV4aXQgJiYgIShwcmltaXRpdmUuZGVidWdXaXJlZnJhbWUgJiYgcHJpbWl0aXZlLl93aXJlZnJhbWVEaXJ0eSk7XG4gIGlmIChlYXJseUV4aXQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIWRlZmluZWQocHJpbWl0aXZlLl9yc1dpcmVmcmFtZSkpIHtcbiAgICBwcmltaXRpdmUuX3JzV2lyZWZyYW1lID0gUmVuZGVyU3RhdGUuZnJvbUNhY2hlKHt9KTtcbiAgfVxuXG4gIHZhciBycztcbiAgdmFyIHR5cGU7XG5cbiAgaWYgKHByaW1pdGl2ZS5kZWJ1Z1dpcmVmcmFtZSkge1xuICAgIHJzID0gcHJpbWl0aXZlLl9yc1dpcmVmcmFtZTtcbiAgICB0eXBlID0gUHJpbWl0aXZlVHlwZS5MSU5FUztcbiAgfSBlbHNlIHtcbiAgICBycyA9IHByaW1pdGl2ZS5fcnNDb2xvclBhc3M7XG4gICAgdHlwZSA9IFByaW1pdGl2ZVR5cGUuVFJJQU5HTEVTO1xuICB9XG5cbiAgdmFyIGNvbW1hbmRzID0gcHJpbWl0aXZlLl9jb21tYW5kcztcbiAgdmFyIGNvbW1hbmRMZW5ndGggPSBjb21tYW5kcy5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY29tbWFuZExlbmd0aDsgaSArPSAyKSB7XG4gICAgdmFyIGNvbW1hbmQgPSBjb21tYW5kc1tpICsgMV07XG4gICAgY29tbWFuZC5yZW5kZXJTdGF0ZSA9IHJzO1xuICAgIGNvbW1hbmQucHJpbWl0aXZlVHlwZSA9IHR5cGU7XG4gIH1cblxuICBwcmltaXRpdmUuX2RlYnVnV2lyZWZyYW1lID0gcHJpbWl0aXZlLmRlYnVnV2lyZWZyYW1lO1xuICBwcmltaXRpdmUuX3dpcmVmcmFtZURpcnR5ID0gZmFsc2U7XG59XG5cbi8qKlxuICogVXBkYXRlcyB0aGUgYmF0Y2hlcyBhbmQgcXVldWVzIHRoZSBjb21tYW5kcyBmb3IgcmVuZGVyaW5nLlxuICpcbiAqIEBwYXJhbSB7RnJhbWVTdGF0ZX0gZnJhbWVTdGF0ZSBUaGUgY3VycmVudCBmcmFtZSBzdGF0ZS5cbiAqL1xuVmVjdG9yM0RUaWxlUHJpbWl0aXZlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoZnJhbWVTdGF0ZSkge1xuICB2YXIgY29udGV4dCA9IGZyYW1lU3RhdGUuY29udGV4dDtcblxuICBjcmVhdGVWZXJ0ZXhBcnJheSh0aGlzLCBjb250ZXh0KTtcbiAgY3JlYXRlU2hhZGVycyh0aGlzLCBjb250ZXh0KTtcbiAgY3JlYXRlUmVuZGVyU3RhdGVzKHRoaXMpO1xuICBjcmVhdGVVbmlmb3JtTWFwKHRoaXMsIGNvbnRleHQpO1xuXG4gIHZhciBwYXNzZXMgPSBmcmFtZVN0YXRlLnBhc3NlcztcbiAgaWYgKHBhc3Nlcy5yZW5kZXIpIHtcbiAgICBjcmVhdGVDb2xvckNvbW1hbmRzKHRoaXMsIGNvbnRleHQpO1xuICAgIGNyZWF0ZUNvbG9yQ29tbWFuZHNJZ25vcmVTaG93KHRoaXMsIGZyYW1lU3RhdGUpO1xuICAgIHVwZGF0ZVdpcmVmcmFtZSh0aGlzKTtcblxuICAgIGlmICh0aGlzLl9kZWJ1Z1dpcmVmcmFtZSkge1xuICAgICAgcXVldWVXaXJlZnJhbWVDb21tYW5kcyhmcmFtZVN0YXRlLCB0aGlzLl9jb21tYW5kcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHF1ZXVlQ29tbWFuZHModGhpcywgZnJhbWVTdGF0ZSwgdGhpcy5fY29tbWFuZHMsIHRoaXMuX2NvbW1hbmRzSWdub3JlU2hvdyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHBhc3Nlcy5waWNrKSB7XG4gICAgY3JlYXRlUGlja0NvbW1hbmRzKHRoaXMpO1xuICAgIHF1ZXVlQ29tbWFuZHModGhpcywgZnJhbWVTdGF0ZSwgdGhpcy5fcGlja0NvbW1hbmRzKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZDsgb3RoZXJ3aXNlLCBmYWxzZS5cbiAqIDxwPlxuICogSWYgdGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZCwgaXQgc2hvdWxkIG5vdCBiZSB1c2VkOyBjYWxsaW5nIGFueSBmdW5jdGlvbiBvdGhlciB0aGFuXG4gKiA8Y29kZT5pc0Rlc3Ryb3llZDwvY29kZT4gd2lsbCByZXN1bHQgaW4gYSB7QGxpbmsgRGV2ZWxvcGVyRXJyb3J9IGV4Y2VwdGlvbi5cbiAqIDwvcD5cbiAqXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhpcyBvYmplY3Qgd2FzIGRlc3Ryb3llZDsgb3RoZXJ3aXNlLCA8Y29kZT5mYWxzZTwvY29kZT4uXG4gKi9cblZlY3RvcjNEVGlsZVByaW1pdGl2ZS5wcm90b3R5cGUuaXNEZXN0cm95ZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8qKlxuICogRGVzdHJveXMgdGhlIFdlYkdMIHJlc291cmNlcyBoZWxkIGJ5IHRoaXMgb2JqZWN0LiAgRGVzdHJveWluZyBhbiBvYmplY3QgYWxsb3dzIGZvciBkZXRlcm1pbmlzdGljXG4gKiByZWxlYXNlIG9mIFdlYkdMIHJlc291cmNlcywgaW5zdGVhZCBvZiByZWx5aW5nIG9uIHRoZSBnYXJiYWdlIGNvbGxlY3RvciB0byBkZXN0cm95IHRoaXMgb2JqZWN0LlxuICogPHA+XG4gKiBPbmNlIGFuIG9iamVjdCBpcyBkZXN0cm95ZWQsIGl0IHNob3VsZCBub3QgYmUgdXNlZDsgY2FsbGluZyBhbnkgZnVuY3Rpb24gb3RoZXIgdGhhblxuICogPGNvZGU+aXNEZXN0cm95ZWQ8L2NvZGU+IHdpbGwgcmVzdWx0IGluIGEge0BsaW5rIERldmVsb3BlckVycm9yfSBleGNlcHRpb24uICBUaGVyZWZvcmUsXG4gKiBhc3NpZ24gdGhlIHJldHVybiB2YWx1ZSAoPGNvZGU+dW5kZWZpbmVkPC9jb2RlPikgdG8gdGhlIG9iamVjdCBhcyBkb25lIGluIHRoZSBleGFtcGxlLlxuICogPC9wPlxuICpcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSBUaGlzIG9iamVjdCB3YXMgZGVzdHJveWVkLCBpLmUuLCBkZXN0cm95KCkgd2FzIGNhbGxlZC5cbiAqL1xuVmVjdG9yM0RUaWxlUHJpbWl0aXZlLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl92YSA9IHRoaXMuX3ZhICYmIHRoaXMuX3ZhLmRlc3Ryb3koKTtcbiAgdGhpcy5fc3AgPSB0aGlzLl9zcCAmJiB0aGlzLl9zcC5kZXN0cm95KCk7XG4gIHRoaXMuX3NwUGljayA9IHRoaXMuX3NwUGljayAmJiB0aGlzLl9zcFBpY2suZGVzdHJveSgpO1xuICB0aGlzLl92YVN3YXAgPSB0aGlzLl92YVN3YXAgJiYgdGhpcy5fdmFTd2FwLmRlc3Ryb3koKTtcbiAgcmV0dXJuIGRlc3Ryb3lPYmplY3QodGhpcyk7XG59O1xuZXhwb3J0IGRlZmF1bHQgVmVjdG9yM0RUaWxlUHJpbWl0aXZlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///90082\n')},26998:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n\n\n\n\n/**\n * An enum describing the built-in vertex attribute semantics.\n *\n * @enum {String}\n *\n * @private\n */\nvar VertexAttributeSemantic = {\n  /**\n   * Per-vertex position.\n   *\n   * @type {String}\n   * @constant\n   */\n  POSITION: "POSITION",\n\n  /**\n   * Per-vertex normal.\n   *\n   * @type {String}\n   * @constant\n   */\n  NORMAL: "NORMAL",\n\n  /**\n   * Per-vertex tangent.\n   *\n   * @type {String}\n   * @constant\n   */\n  TANGENT: "TANGENT",\n\n  /**\n   * Per-vertex texture coordinates.\n   *\n   * @type {String}\n   * @constant\n   */\n  TEXCOORD: "TEXCOORD",\n\n  /**\n   * Per-vertex color.\n   *\n   * @type {String}\n   * @constant\n   */\n  COLOR: "COLOR",\n\n  /**\n   * Per-vertex joint IDs for skinning.\n   *\n   * @type {String}\n   * @constant\n   */\n  JOINTS: "JOINTS",\n\n  /**\n   * Per-vertex joint weights for skinning.\n   *\n   * @type {String}\n   * @constant\n   */\n  WEIGHTS: "WEIGHTS",\n\n  /**\n   * Per-vertex feature ID.\n   *\n   * @type {String}\n   * @constant\n   */\n  FEATURE_ID: "FEATURE_ID",\n};\n\nfunction semanticToVariableName(semantic) {\n  switch (semantic) {\n    case VertexAttributeSemantic.POSITION:\n      return "position";\n    case VertexAttributeSemantic.NORMAL:\n      return "normal";\n    case VertexAttributeSemantic.TANGENT:\n      return "tangent";\n    case VertexAttributeSemantic.TEXCOORD:\n      return "texCoord";\n    case VertexAttributeSemantic.COLOR:\n      return "color";\n    case VertexAttributeSemantic.JOINTS:\n      return "joints";\n    case VertexAttributeSemantic.WEIGHTS:\n      return "weights";\n    case VertexAttributeSemantic.FEATURE_ID:\n      return "featureId";\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("semantic is not a valid value.");\n    //>>includeEnd(\'debug\');\n  }\n}\n\n/**\n * Returns whether the vertex attribute semantic can have a set index.\n *\n * @param {VertexAttributeSemantic} semantic The semantic.\n *\n * @returns {Boolean} Whether the semantic can have a set index.\n *\n * @private\n */\nVertexAttributeSemantic.hasSetIndex = function (semantic) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  //>>includeEnd(\'debug\');\n\n  switch (semantic) {\n    case VertexAttributeSemantic.POSITION:\n    case VertexAttributeSemantic.NORMAL:\n    case VertexAttributeSemantic.TANGENT:\n      return false;\n    case VertexAttributeSemantic.TEXCOORD:\n    case VertexAttributeSemantic.COLOR:\n    case VertexAttributeSemantic.JOINTS:\n    case VertexAttributeSemantic.WEIGHTS:\n    case VertexAttributeSemantic.FEATURE_ID:\n      return true;\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("semantic is not a valid value.");\n    //>>includeEnd(\'debug\');\n  }\n};\n\n/**\n * Gets the vertex attribute semantic matching the glTF semantic.\n *\n * @param {String} gltfSemantic The glTF semantic.\n *\n * @returns {VertexAttributeSemantic|undefined} The vertex attribute semantic, or undefined if there is no match.\n *\n * @private\n */\nVertexAttributeSemantic.fromGltfSemantic = function (gltfSemantic) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("gltfSemantic", gltfSemantic);\n  //>>includeEnd(\'debug\');\n\n  var semantic = gltfSemantic;\n\n  // Strip the set index from the semantic\n  var setIndexRegex = /^(\\w+)_\\d+$/;\n  var setIndexMatch = setIndexRegex.exec(gltfSemantic);\n  if (setIndexMatch !== null) {\n    semantic = setIndexMatch[1];\n  }\n\n  switch (semantic) {\n    case "POSITION":\n      return VertexAttributeSemantic.POSITION;\n    case "NORMAL":\n      return VertexAttributeSemantic.NORMAL;\n    case "TANGENT":\n      return VertexAttributeSemantic.TANGENT;\n    case "TEXCOORD":\n      return VertexAttributeSemantic.TEXCOORD;\n    case "COLOR":\n      return VertexAttributeSemantic.COLOR;\n    case "JOINTS":\n      return VertexAttributeSemantic.JOINTS;\n    case "WEIGHTS":\n      return VertexAttributeSemantic.WEIGHTS;\n    case "_FEATURE_ID":\n    case "_BATCHID": // for b3dm compatibility\n    case "BATCHID": // for legacy b3dm compatibility\n      return VertexAttributeSemantic.FEATURE_ID;\n  }\n\n  return undefined;\n};\n\n/**\n * Gets the vertex attribute semantic matching the pnts semantic.\n *\n * @param {String} pntsSemantic The pnts semantic.\n *\n * @returns {VertexAttributeSemantic|undefined} The vertex attribute semantic, or undefined if there is no match.\n *\n * @private\n */\nVertexAttributeSemantic.fromPntsSemantic = function (pntsSemantic) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("pntsSemantic", pntsSemantic);\n  //>>includeEnd(\'debug\');\n\n  switch (pntsSemantic) {\n    case "POSITION":\n    case "POSITION_QUANTIZED":\n      return VertexAttributeSemantic.POSITION;\n    case "RGBA":\n    case "RGB":\n    case "RGB565":\n      return VertexAttributeSemantic.COLOR;\n    case "NORMAL":\n    case "NORMAL_OCT16P":\n      return VertexAttributeSemantic.NORMAL;\n    case "BATCH_ID":\n      return VertexAttributeSemantic.FEATURE_ID;\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("pntsSemantic is not a valid value.");\n    //>>includeEnd(\'debug\');\n  }\n};\n\n/**\n * Gets the GLSL type (such as <code>vec3</code> or <code>int</code>) for the\n * given vertex attribute.\n *\n * @param {VertexAttributeSemantic} semantic The semantic.\n *\n * @returns {String} The shader type.\n *\n * @private\n */\nVertexAttributeSemantic.getGlslType = function (semantic) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  //>>includeEnd(\'debug\');\n\n  switch (semantic) {\n    case VertexAttributeSemantic.POSITION:\n    case VertexAttributeSemantic.NORMAL:\n    case VertexAttributeSemantic.TANGENT:\n      return "vec3";\n    case VertexAttributeSemantic.TEXCOORD:\n      return "vec2";\n    case VertexAttributeSemantic.COLOR:\n      return "vec4";\n    case VertexAttributeSemantic.JOINTS:\n      return "ivec4";\n    case VertexAttributeSemantic.WEIGHTS:\n      return "vec4";\n    case VertexAttributeSemantic.FEATURE_ID:\n      return "int";\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("semantic is not a valid value.");\n    //>>includeEnd(\'debug\');\n  }\n};\n\n/**\n * Gets the variable name for the given semantic and set index.\n *\n * @param {VertexAttributeSemantic} semantic The semantic.\n * @param {Number} [setIndex] The set index.\n *\n * @returns {String} The variable name.\n *\n * @private\n */\nVertexAttributeSemantic.getVariableName = function (semantic, setIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("semantic", semantic);\n  //>>includeEnd(\'debug\');\n\n  var variableName = semanticToVariableName(semantic);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(setIndex)) {\n    variableName += "_" + setIndex;\n  }\n  return variableName;\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(VertexAttributeSemantic));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjY5OTguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXFDO0FBQ0k7QUFDYzs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3RUFBYztBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyx5QkFBeUI7QUFDcEM7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkZBQW1CO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdFQUFjO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLG1DQUFtQztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwyRkFBbUI7QUFDckI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLG1DQUFtQztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwyRkFBbUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdFQUFjO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUJBQXlCO0FBQ3BDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDJGQUFtQjtBQUNyQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdFQUFjO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQyxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkZBQW1CO0FBQ3JCOztBQUVBO0FBQ0EsTUFBTSxxRUFBTztBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlEQUFlLHNDQUFzQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL1ZlcnRleEF0dHJpYnV0ZVNlbWFudGljLmpzPzEzYWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENoZWNrIGZyb20gXCIuLi9Db3JlL0NoZWNrLmpzXCI7XG5pbXBvcnQgZGVmaW5lZCBmcm9tIFwiLi4vQ29yZS9kZWZpbmVkLmpzXCI7XG5pbXBvcnQgRGV2ZWxvcGVyRXJyb3IgZnJvbSBcIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IuanNcIjtcblxuLyoqXG4gKiBBbiBlbnVtIGRlc2NyaWJpbmcgdGhlIGJ1aWx0LWluIHZlcnRleCBhdHRyaWJ1dGUgc2VtYW50aWNzLlxuICpcbiAqIEBlbnVtIHtTdHJpbmd9XG4gKlxuICogQHByaXZhdGVcbiAqL1xudmFyIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljID0ge1xuICAvKipcbiAgICogUGVyLXZlcnRleCBwb3NpdGlvbi5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBQT1NJVElPTjogXCJQT1NJVElPTlwiLFxuXG4gIC8qKlxuICAgKiBQZXItdmVydGV4IG5vcm1hbC5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBOT1JNQUw6IFwiTk9STUFMXCIsXG5cbiAgLyoqXG4gICAqIFBlci12ZXJ0ZXggdGFuZ2VudC5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBUQU5HRU5UOiBcIlRBTkdFTlRcIixcblxuICAvKipcbiAgICogUGVyLXZlcnRleCB0ZXh0dXJlIGNvb3JkaW5hdGVzLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFRFWENPT1JEOiBcIlRFWENPT1JEXCIsXG5cbiAgLyoqXG4gICAqIFBlci12ZXJ0ZXggY29sb3IuXG4gICAqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgQ09MT1I6IFwiQ09MT1JcIixcblxuICAvKipcbiAgICogUGVyLXZlcnRleCBqb2ludCBJRHMgZm9yIHNraW5uaW5nLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIEpPSU5UUzogXCJKT0lOVFNcIixcblxuICAvKipcbiAgICogUGVyLXZlcnRleCBqb2ludCB3ZWlnaHRzIGZvciBza2lubmluZy5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBXRUlHSFRTOiBcIldFSUdIVFNcIixcblxuICAvKipcbiAgICogUGVyLXZlcnRleCBmZWF0dXJlIElELlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIEZFQVRVUkVfSUQ6IFwiRkVBVFVSRV9JRFwiLFxufTtcblxuZnVuY3Rpb24gc2VtYW50aWNUb1ZhcmlhYmxlTmFtZShzZW1hbnRpYykge1xuICBzd2l0Y2ggKHNlbWFudGljKSB7XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5QT1NJVElPTjpcbiAgICAgIHJldHVybiBcInBvc2l0aW9uXCI7XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5OT1JNQUw6XG4gICAgICByZXR1cm4gXCJub3JtYWxcIjtcbiAgICBjYXNlIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLlRBTkdFTlQ6XG4gICAgICByZXR1cm4gXCJ0YW5nZW50XCI7XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5URVhDT09SRDpcbiAgICAgIHJldHVybiBcInRleENvb3JkXCI7XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5DT0xPUjpcbiAgICAgIHJldHVybiBcImNvbG9yXCI7XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5KT0lOVFM6XG4gICAgICByZXR1cm4gXCJqb2ludHNcIjtcbiAgICBjYXNlIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLldFSUdIVFM6XG4gICAgICByZXR1cm4gXCJ3ZWlnaHRzXCI7XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5GRUFUVVJFX0lEOlxuICAgICAgcmV0dXJuIFwiZmVhdHVyZUlkXCI7XG4gICAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwic2VtYW50aWMgaXMgbm90IGEgdmFsaWQgdmFsdWUuXCIpO1xuICAgIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuICB9XG59XG5cbi8qKlxuICogUmV0dXJucyB3aGV0aGVyIHRoZSB2ZXJ0ZXggYXR0cmlidXRlIHNlbWFudGljIGNhbiBoYXZlIGEgc2V0IGluZGV4LlxuICpcbiAqIEBwYXJhbSB7VmVydGV4QXR0cmlidXRlU2VtYW50aWN9IHNlbWFudGljIFRoZSBzZW1hbnRpYy5cbiAqXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gV2hldGhlciB0aGUgc2VtYW50aWMgY2FuIGhhdmUgYSBzZXQgaW5kZXguXG4gKlxuICogQHByaXZhdGVcbiAqL1xuVmVydGV4QXR0cmlidXRlU2VtYW50aWMuaGFzU2V0SW5kZXggPSBmdW5jdGlvbiAoc2VtYW50aWMpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLnN0cmluZyhcInNlbWFudGljXCIsIHNlbWFudGljKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgc3dpdGNoIChzZW1hbnRpYykge1xuICAgIGNhc2UgVmVydGV4QXR0cmlidXRlU2VtYW50aWMuUE9TSVRJT046XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5OT1JNQUw6XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5UQU5HRU5UOlxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGNhc2UgVmVydGV4QXR0cmlidXRlU2VtYW50aWMuVEVYQ09PUkQ6XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5DT0xPUjpcbiAgICBjYXNlIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLkpPSU5UUzpcbiAgICBjYXNlIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLldFSUdIVFM6XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5GRUFUVVJFX0lEOlxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwic2VtYW50aWMgaXMgbm90IGEgdmFsaWQgdmFsdWUuXCIpO1xuICAgIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuICB9XG59O1xuXG4vKipcbiAqIEdldHMgdGhlIHZlcnRleCBhdHRyaWJ1dGUgc2VtYW50aWMgbWF0Y2hpbmcgdGhlIGdsVEYgc2VtYW50aWMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGdsdGZTZW1hbnRpYyBUaGUgZ2xURiBzZW1hbnRpYy5cbiAqXG4gKiBAcmV0dXJucyB7VmVydGV4QXR0cmlidXRlU2VtYW50aWN8dW5kZWZpbmVkfSBUaGUgdmVydGV4IGF0dHJpYnV0ZSBzZW1hbnRpYywgb3IgdW5kZWZpbmVkIGlmIHRoZXJlIGlzIG5vIG1hdGNoLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cblZlcnRleEF0dHJpYnV0ZVNlbWFudGljLmZyb21HbHRmU2VtYW50aWMgPSBmdW5jdGlvbiAoZ2x0ZlNlbWFudGljKSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5zdHJpbmcoXCJnbHRmU2VtYW50aWNcIiwgZ2x0ZlNlbWFudGljKTtcbiAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG5cbiAgdmFyIHNlbWFudGljID0gZ2x0ZlNlbWFudGljO1xuXG4gIC8vIFN0cmlwIHRoZSBzZXQgaW5kZXggZnJvbSB0aGUgc2VtYW50aWNcbiAgdmFyIHNldEluZGV4UmVnZXggPSAvXihcXHcrKV9cXGQrJC87XG4gIHZhciBzZXRJbmRleE1hdGNoID0gc2V0SW5kZXhSZWdleC5leGVjKGdsdGZTZW1hbnRpYyk7XG4gIGlmIChzZXRJbmRleE1hdGNoICE9PSBudWxsKSB7XG4gICAgc2VtYW50aWMgPSBzZXRJbmRleE1hdGNoWzFdO1xuICB9XG5cbiAgc3dpdGNoIChzZW1hbnRpYykge1xuICAgIGNhc2UgXCJQT1NJVElPTlwiOlxuICAgICAgcmV0dXJuIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLlBPU0lUSU9OO1xuICAgIGNhc2UgXCJOT1JNQUxcIjpcbiAgICAgIHJldHVybiBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5OT1JNQUw7XG4gICAgY2FzZSBcIlRBTkdFTlRcIjpcbiAgICAgIHJldHVybiBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5UQU5HRU5UO1xuICAgIGNhc2UgXCJURVhDT09SRFwiOlxuICAgICAgcmV0dXJuIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLlRFWENPT1JEO1xuICAgIGNhc2UgXCJDT0xPUlwiOlxuICAgICAgcmV0dXJuIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLkNPTE9SO1xuICAgIGNhc2UgXCJKT0lOVFNcIjpcbiAgICAgIHJldHVybiBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5KT0lOVFM7XG4gICAgY2FzZSBcIldFSUdIVFNcIjpcbiAgICAgIHJldHVybiBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5XRUlHSFRTO1xuICAgIGNhc2UgXCJfRkVBVFVSRV9JRFwiOlxuICAgIGNhc2UgXCJfQkFUQ0hJRFwiOiAvLyBmb3IgYjNkbSBjb21wYXRpYmlsaXR5XG4gICAgY2FzZSBcIkJBVENISURcIjogLy8gZm9yIGxlZ2FjeSBiM2RtIGNvbXBhdGliaWxpdHlcbiAgICAgIHJldHVybiBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5GRUFUVVJFX0lEO1xuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbi8qKlxuICogR2V0cyB0aGUgdmVydGV4IGF0dHJpYnV0ZSBzZW1hbnRpYyBtYXRjaGluZyB0aGUgcG50cyBzZW1hbnRpYy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcG50c1NlbWFudGljIFRoZSBwbnRzIHNlbWFudGljLlxuICpcbiAqIEByZXR1cm5zIHtWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpY3x1bmRlZmluZWR9IFRoZSB2ZXJ0ZXggYXR0cmlidXRlIHNlbWFudGljLCBvciB1bmRlZmluZWQgaWYgdGhlcmUgaXMgbm8gbWF0Y2guXG4gKlxuICogQHByaXZhdGVcbiAqL1xuVmVydGV4QXR0cmlidXRlU2VtYW50aWMuZnJvbVBudHNTZW1hbnRpYyA9IGZ1bmN0aW9uIChwbnRzU2VtYW50aWMpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgQ2hlY2sudHlwZU9mLnN0cmluZyhcInBudHNTZW1hbnRpY1wiLCBwbnRzU2VtYW50aWMpO1xuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICBzd2l0Y2ggKHBudHNTZW1hbnRpYykge1xuICAgIGNhc2UgXCJQT1NJVElPTlwiOlxuICAgIGNhc2UgXCJQT1NJVElPTl9RVUFOVElaRURcIjpcbiAgICAgIHJldHVybiBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5QT1NJVElPTjtcbiAgICBjYXNlIFwiUkdCQVwiOlxuICAgIGNhc2UgXCJSR0JcIjpcbiAgICBjYXNlIFwiUkdCNTY1XCI6XG4gICAgICByZXR1cm4gVmVydGV4QXR0cmlidXRlU2VtYW50aWMuQ09MT1I7XG4gICAgY2FzZSBcIk5PUk1BTFwiOlxuICAgIGNhc2UgXCJOT1JNQUxfT0NUMTZQXCI6XG4gICAgICByZXR1cm4gVmVydGV4QXR0cmlidXRlU2VtYW50aWMuTk9STUFMO1xuICAgIGNhc2UgXCJCQVRDSF9JRFwiOlxuICAgICAgcmV0dXJuIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLkZFQVRVUkVfSUQ7XG4gICAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFwicG50c1NlbWFudGljIGlzIG5vdCBhIHZhbGlkIHZhbHVlLlwiKTtcbiAgICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcbiAgfVxufTtcblxuLyoqXG4gKiBHZXRzIHRoZSBHTFNMIHR5cGUgKHN1Y2ggYXMgPGNvZGU+dmVjMzwvY29kZT4gb3IgPGNvZGU+aW50PC9jb2RlPikgZm9yIHRoZVxuICogZ2l2ZW4gdmVydGV4IGF0dHJpYnV0ZS5cbiAqXG4gKiBAcGFyYW0ge1ZlcnRleEF0dHJpYnV0ZVNlbWFudGljfSBzZW1hbnRpYyBUaGUgc2VtYW50aWMuXG4gKlxuICogQHJldHVybnMge1N0cmluZ30gVGhlIHNoYWRlciB0eXBlLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cblZlcnRleEF0dHJpYnV0ZVNlbWFudGljLmdldEdsc2xUeXBlID0gZnVuY3Rpb24gKHNlbWFudGljKSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5zdHJpbmcoXCJzZW1hbnRpY1wiLCBzZW1hbnRpYyk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHN3aXRjaCAoc2VtYW50aWMpIHtcbiAgICBjYXNlIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLlBPU0lUSU9OOlxuICAgIGNhc2UgVmVydGV4QXR0cmlidXRlU2VtYW50aWMuTk9STUFMOlxuICAgIGNhc2UgVmVydGV4QXR0cmlidXRlU2VtYW50aWMuVEFOR0VOVDpcbiAgICAgIHJldHVybiBcInZlYzNcIjtcbiAgICBjYXNlIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLlRFWENPT1JEOlxuICAgICAgcmV0dXJuIFwidmVjMlwiO1xuICAgIGNhc2UgVmVydGV4QXR0cmlidXRlU2VtYW50aWMuQ09MT1I6XG4gICAgICByZXR1cm4gXCJ2ZWM0XCI7XG4gICAgY2FzZSBWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5KT0lOVFM6XG4gICAgICByZXR1cm4gXCJpdmVjNFwiO1xuICAgIGNhc2UgVmVydGV4QXR0cmlidXRlU2VtYW50aWMuV0VJR0hUUzpcbiAgICAgIHJldHVybiBcInZlYzRcIjtcbiAgICBjYXNlIFZlcnRleEF0dHJpYnV0ZVNlbWFudGljLkZFQVRVUkVfSUQ6XG4gICAgICByZXR1cm4gXCJpbnRcIjtcbiAgICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXCJzZW1hbnRpYyBpcyBub3QgYSB2YWxpZCB2YWx1ZS5cIik7XG4gICAgLy8+PmluY2x1ZGVFbmQoJ2RlYnVnJyk7XG4gIH1cbn07XG5cbi8qKlxuICogR2V0cyB0aGUgdmFyaWFibGUgbmFtZSBmb3IgdGhlIGdpdmVuIHNlbWFudGljIGFuZCBzZXQgaW5kZXguXG4gKlxuICogQHBhcmFtIHtWZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpY30gc2VtYW50aWMgVGhlIHNlbWFudGljLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtzZXRJbmRleF0gVGhlIHNldCBpbmRleC5cbiAqXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgdmFyaWFibGUgbmFtZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5WZXJ0ZXhBdHRyaWJ1dGVTZW1hbnRpYy5nZXRWYXJpYWJsZU5hbWUgPSBmdW5jdGlvbiAoc2VtYW50aWMsIHNldEluZGV4KSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLnR5cGVPZi5zdHJpbmcoXCJzZW1hbnRpY1wiLCBzZW1hbnRpYyk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciB2YXJpYWJsZU5hbWUgPSBzZW1hbnRpY1RvVmFyaWFibGVOYW1lKHNlbWFudGljKTtcbiAgaWYgKGRlZmluZWQoc2V0SW5kZXgpKSB7XG4gICAgdmFyaWFibGVOYW1lICs9IFwiX1wiICsgc2V0SW5kZXg7XG4gIH1cbiAgcmV0dXJuIHZhcmlhYmxlTmFtZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoVmVydGV4QXR0cmlidXRlU2VtYW50aWMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26998\n')},60473:function(__unused_webpack___webpack_module__,__webpack_exports__){eval("/**\n * The vertical location of an origin relative to an object, e.g., a {@link Billboard}\n * or {@link Label}.  For example, setting the vertical origin to <code>TOP</code>\n * or <code>BOTTOM</code> will display a billboard above or below (in screen space)\n * the anchor position.\n * <br /><br />\n * <div align='center'>\n * <img src='Images/Billboard.setVerticalOrigin.png' width='695' height='175' /><br />\n * </div>\n *\n * @enum {Number}\n *\n * @see Billboard#verticalOrigin\n * @see Label#verticalOrigin\n */\nvar VerticalOrigin = {\n  /**\n   * The origin is at the vertical center between <code>BASELINE</code> and <code>TOP</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  CENTER: 0,\n\n  /**\n   * The origin is at the bottom of the object.\n   *\n   * @type {Number}\n   * @constant\n   */\n  BOTTOM: 1,\n\n  /**\n   * If the object contains text, the origin is at the baseline of the text, else the origin is at the bottom of the object.\n   *\n   * @type {Number}\n   * @constant\n   */\n  BASELINE: 2,\n\n  /**\n   * The origin is at the top of the object.\n   *\n   * @type {Number}\n   * @constant\n   */\n  TOP: -1,\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Object.freeze(VerticalOrigin));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjA0NzMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxzRUFBc0U7QUFDdEUsT0FBTyxZQUFZO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBZSw2QkFBNkIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9TY2VuZS9WZXJ0aWNhbE9yaWdpbi5qcz80NTRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIHZlcnRpY2FsIGxvY2F0aW9uIG9mIGFuIG9yaWdpbiByZWxhdGl2ZSB0byBhbiBvYmplY3QsIGUuZy4sIGEge0BsaW5rIEJpbGxib2FyZH1cbiAqIG9yIHtAbGluayBMYWJlbH0uICBGb3IgZXhhbXBsZSwgc2V0dGluZyB0aGUgdmVydGljYWwgb3JpZ2luIHRvIDxjb2RlPlRPUDwvY29kZT5cbiAqIG9yIDxjb2RlPkJPVFRPTTwvY29kZT4gd2lsbCBkaXNwbGF5IGEgYmlsbGJvYXJkIGFib3ZlIG9yIGJlbG93IChpbiBzY3JlZW4gc3BhY2UpXG4gKiB0aGUgYW5jaG9yIHBvc2l0aW9uLlxuICogPGJyIC8+PGJyIC8+XG4gKiA8ZGl2IGFsaWduPSdjZW50ZXInPlxuICogPGltZyBzcmM9J0ltYWdlcy9CaWxsYm9hcmQuc2V0VmVydGljYWxPcmlnaW4ucG5nJyB3aWR0aD0nNjk1JyBoZWlnaHQ9JzE3NScgLz48YnIgLz5cbiAqIDwvZGl2PlxuICpcbiAqIEBlbnVtIHtOdW1iZXJ9XG4gKlxuICogQHNlZSBCaWxsYm9hcmQjdmVydGljYWxPcmlnaW5cbiAqIEBzZWUgTGFiZWwjdmVydGljYWxPcmlnaW5cbiAqL1xudmFyIFZlcnRpY2FsT3JpZ2luID0ge1xuICAvKipcbiAgICogVGhlIG9yaWdpbiBpcyBhdCB0aGUgdmVydGljYWwgY2VudGVyIGJldHdlZW4gPGNvZGU+QkFTRUxJTkU8L2NvZGU+IGFuZCA8Y29kZT5UT1A8L2NvZGU+LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIENFTlRFUjogMCxcblxuICAvKipcbiAgICogVGhlIG9yaWdpbiBpcyBhdCB0aGUgYm90dG9tIG9mIHRoZSBvYmplY3QuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgQk9UVE9NOiAxLFxuXG4gIC8qKlxuICAgKiBJZiB0aGUgb2JqZWN0IGNvbnRhaW5zIHRleHQsIHRoZSBvcmlnaW4gaXMgYXQgdGhlIGJhc2VsaW5lIG9mIHRoZSB0ZXh0LCBlbHNlIHRoZSBvcmlnaW4gaXMgYXQgdGhlIGJvdHRvbSBvZiB0aGUgb2JqZWN0LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIEJBU0VMSU5FOiAyLFxuXG4gIC8qKlxuICAgKiBUaGUgb3JpZ2luIGlzIGF0IHRoZSB0b3Agb2YgdGhlIG9iamVjdC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBUT1A6IC0xLFxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoVmVydGljYWxPcmlnaW4pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///60473\n")}}]);