"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[7580],{30413:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86511);\n/* harmony import */ var _Core_RequestType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82968);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8379);\n/* harmony import */ var _Axis_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(66577);\n/* harmony import */ var _Model_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16626);\n/* harmony import */ var _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(61841);\n/* harmony import */ var _Core_ExperimentalFeatures_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(54862);\n/* harmony import */ var _ModelExperimental_ModelExperimental_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(46521);\n/* harmony import */ var _Core_combine_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(8182);\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Represents the contents of a glTF or glb tile in a {@link https://github.com/CesiumGS/3d-tiles/tree/main/specification|3D Tiles} tileset using the {@link https://github.com/CesiumGS/3d-tiles/tree/3d-tiles-next/extensions/3DTILES_content_gltf|3DTILES_content_gltf} extension.\n * <p>\n * This class does not yet support the {@link https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_feature_metadata|EXT_feature_metadata Extension}.\n * </p>\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Gltf3DTileContent\n * @constructor\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction Gltf3DTileContent(tileset, tile, resource, gltf) {\n  this._tileset = tileset;\n  this._tile = tile;\n  this._resource = resource;\n  this._model = undefined;\n\n  this.featurePropertiesDirty = false;\n  this._groupMetadata = undefined;\n\n  initialize(this, gltf);\n}\n\nObject.defineProperties(Gltf3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  pointsLength: {\n    get: function () {\n      return this._model.pointsLength;\n    },\n  },\n\n  trianglesLength: {\n    get: function () {\n      return this._model.trianglesLength;\n    },\n  },\n\n  geometryByteLength: {\n    get: function () {\n      return this._model.geometryByteLength;\n    },\n  },\n\n  texturesByteLength: {\n    get: function () {\n      return this._model.texturesByteLength;\n    },\n  },\n\n  batchTableByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  innerContents: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  readyPromise: {\n    get: function () {\n      return this._model.readyPromise;\n    },\n  },\n\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n  },\n\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n  },\n\n  url: {\n    get: function () {\n      return this._resource.getUrlComponent(true);\n    },\n  },\n\n  batchTable: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  groupMetadata: {\n    get: function () {\n      return this._groupMetadata;\n    },\n    set: function (value) {\n      this._groupMetadata = value;\n    },\n  },\n});\n\nfunction initialize(content, gltf) {\n  var tileset = content._tileset;\n  var tile = content._tile;\n  var resource = content._resource;\n\n  var pickObject = {\n    content: content,\n    primitive: tileset,\n  };\n\n  var modelOptions = {\n    gltf: gltf,\n    cull: false, // The model is already culled by 3D Tiles\n    releaseGltfJson: true, // Models are unique and will not benefit from caching so save memory\n    opaquePass: _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].CESIUM_3D_TILE */ .Z.CESIUM_3D_TILE, // Draw opaque portions of the model during the 3D Tiles pass\n    basePath: resource,\n    modelMatrix: tile.computedTransform,\n    upAxis: tileset._gltfUpAxis,\n    forwardAxis: _Axis_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].X */ .Z.X,\n    incrementallyLoadTextures: false,\n  };\n\n  if (_Core_ExperimentalFeatures_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].enableModelExperimental */ .Z.enableModelExperimental) {\n    modelOptions.customShader = tileset.customShader;\n    content._model = _ModelExperimental_ModelExperimental_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].fromGltf */ .Z.fromGltf(modelOptions);\n  } else {\n    modelOptions = (0,_Core_combine_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(modelOptions, {\n      requestType: _Core_RequestType_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].TILES3D */ .Z.TILES3D,\n      shadows: tileset.shadows,\n      debugWireframe: tileset.debugWireframe,\n      addBatchIdToGeneratedShaders: false,\n      pickObject: pickObject,\n      imageBasedLightingFactor: tileset.imageBasedLightingFactor,\n      lightColor: tileset.lightColor,\n      luminanceAtZenith: tileset.luminanceAtZenith,\n      sphericalHarmonicCoefficients: tileset.sphericalHarmonicCoefficients,\n      specularEnvironmentMaps: tileset.specularEnvironmentMaps,\n      backFaceCulling: tileset.backFaceCulling,\n      showOutline: tileset.showOutline,\n    });\n    content._model = new _Model_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(modelOptions);\n  }\n\n  content._model.readyPromise.then(function (model) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(model.activeAnimations)) {\n      model.activeAnimations.addAll({\n        loop: _ModelAnimationLoop_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].REPEAT */ .Z.REPEAT,\n      });\n    }\n  });\n}\n\nGltf3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return false;\n};\n\nGltf3DTileContent.prototype.getFeature = function (batchId) {\n  return undefined;\n};\n\nGltf3DTileContent.prototype.applyDebugSettings = function (enabled, color) {\n  color = enabled ? color : _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].WHITE */ .Z.WHITE;\n  this._model.color = color;\n};\n\nGltf3DTileContent.prototype.applyStyle = function (style) {\n  var hasColorStyle = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(style) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(style.color);\n  var hasShowStyle = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(style) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(style.show);\n  this._model.color = hasColorStyle\n    ? style.color.evaluateColor(undefined, this._model.color)\n    : _Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].WHITE */ .Z.WHITE, this._model.color);\n  this._model.show = hasShowStyle ? style.show.evaluate(undefined) : true;\n};\n\nGltf3DTileContent.prototype.update = function (tileset, frameState) {\n  var model = this._model;\n  var tile = this._tile;\n\n  model.modelMatrix = tile.computedTransform;\n  model.shadows = tileset.shadows;\n  model.imageBasedLightingFactor = tileset.imageBasedLightingFactor;\n  model.lightColor = tileset.lightColor;\n  model.luminanceAtZenith = tileset.luminanceAtZenith;\n  model.sphericalHarmonicCoefficients = tileset.sphericalHarmonicCoefficients;\n  model.specularEnvironmentMaps = tileset.specularEnvironmentMaps;\n  model.backFaceCulling = tileset.backFaceCulling;\n  model.debugWireframe = tileset.debugWireframe;\n\n  // Update clipping planes\n  var tilesetClippingPlanes = tileset.clippingPlanes;\n  model.referenceMatrix = tileset.clippingPlanesOriginMatrix;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(tilesetClippingPlanes) && tile.clippingPlanesDirty) {\n    // Dereference the clipping planes from the model if they are irrelevant.\n    // Link/Dereference directly to avoid ownership checks.\n    // This will also trigger synchronous shader regeneration to remove or add the clipping plane and color blending code.\n    model._clippingPlanes =\n      tilesetClippingPlanes.enabled && tile._isClipped\n        ? tilesetClippingPlanes\n        : undefined;\n  }\n\n  // If the model references a different ClippingPlaneCollection due to the tileset\'s collection being replaced with a\n  // ClippingPlaneCollection that gives this tile the same clipping status, update the model to use the new ClippingPlaneCollection.\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(tilesetClippingPlanes) &&\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(model._clippingPlanes) &&\n    model._clippingPlanes !== tilesetClippingPlanes\n  ) {\n    model._clippingPlanes = tilesetClippingPlanes;\n  }\n\n  model.update(frameState);\n};\n\nGltf3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nGltf3DTileContent.prototype.destroy = function () {\n  this._model = this._model && this._model.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this);\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (Gltf3DTileContent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30413\n')},42306:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ GltfBufferViewLoader; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _hasExtension_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(81326);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13222);\n/* harmony import */ var _ThirdParty_meshoptimizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60176);\n/* harmony import */ var _ResourceLoader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(29789);\n/* harmony import */ var _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89356);\n\n\n\n\n\n\n\n\n\n/**\n * Loads a glTF buffer view.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfBufferViewLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {Object} options Object with the following properties:\n * @param {ResourceCache} options.resourceCache The {@link ResourceCache} (to avoid circular dependencies).\n * @param {Object} options.gltf The glTF JSON.\n * @param {Number} options.bufferViewId The buffer view ID.\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF.\n * @param {Resource} options.baseResource The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {String} [options.cacheKey] The cache key of the resource.\n *\n * @private\n */\nfunction GltfBufferViewLoader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var resourceCache = options.resourceCache;\n  var gltf = options.gltf;\n  var bufferViewId = options.bufferViewId;\n  var gltfResource = options.gltfResource;\n  var baseResource = options.baseResource;\n  var cacheKey = options.cacheKey;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.func */ .Z.typeOf.func("options.resourceCache", resourceCache);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltf", gltf);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("options.bufferViewId", bufferViewId);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltfResource", gltfResource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.baseResource", baseResource);\n  //>>includeEnd(\'debug\');\n\n  var bufferView = gltf.bufferViews[bufferViewId];\n  var bufferId = bufferView.buffer;\n  var byteOffset = bufferView.byteOffset;\n  var byteLength = bufferView.byteLength;\n\n  var hasMeshopt = false;\n  var meshoptByteStride;\n  var meshoptCount;\n  var meshoptMode;\n  var meshoptFilter;\n\n  if ((0,_hasExtension_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(bufferView, "EXT_meshopt_compression")) {\n    var meshopt = bufferView.extensions.EXT_meshopt_compression;\n    bufferId = meshopt.buffer;\n    byteOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(meshopt.byteOffset, 0);\n    byteLength = meshopt.byteLength;\n\n    hasMeshopt = true;\n    meshoptByteStride = meshopt.byteStride;\n    meshoptCount = meshopt.count;\n    meshoptMode = meshopt.mode;\n    meshoptFilter = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(meshopt.filter, "NONE");\n  }\n\n  var buffer = gltf.buffers[bufferId];\n\n  this._hasMeshopt = hasMeshopt;\n  this._meshoptByteStride = meshoptByteStride;\n  this._meshoptCount = meshoptCount;\n  this._meshoptMode = meshoptMode;\n  this._meshoptFilter = meshoptFilter;\n\n  this._resourceCache = resourceCache;\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._buffer = buffer;\n  this._bufferId = bufferId;\n  this._byteOffset = byteOffset;\n  this._byteLength = byteLength;\n  this._cacheKey = cacheKey;\n  this._bufferLoader = undefined;\n  this._typedArray = undefined;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNLOADED */ .Z.UNLOADED;\n  this._promise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defer */ .Z.defer();\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(Object.create)) {\n  GltfBufferViewLoader.prototype = Object.create(_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].prototype */ .Z.prototype);\n  GltfBufferViewLoader.prototype.constructor = GltfBufferViewLoader;\n}\n\nObject.defineProperties(GltfBufferViewLoader.prototype, {\n  /**\n   * A promise that resolves to the resource when the resource is ready.\n   *\n   * @memberof GltfBufferViewLoader.prototype\n   *\n   * @type {Promise.<GltfBufferViewLoader>}\n   * @readonly\n   * @private\n   */\n  promise: {\n    get: function () {\n      return this._promise.promise;\n    },\n  },\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfBufferViewLoader.prototype\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    },\n  },\n  /**\n   * The typed array containing buffer view data.\n   *\n   * @memberof GltfBufferViewLoader.prototype\n   *\n   * @type {Uint8Array}\n   * @readonly\n   * @private\n   */\n  typedArray: {\n    get: function () {\n      return this._typedArray;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @private\n */\nGltfBufferViewLoader.prototype.load = function () {\n  var bufferLoader = getBufferLoader(this);\n  this._bufferLoader = bufferLoader;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].LOADING */ .Z.LOADING;\n\n  var that = this;\n\n  bufferLoader.promise\n    .then(function () {\n      if (that.isDestroyed()) {\n        return;\n      }\n      var bufferTypedArray = bufferLoader.typedArray;\n      var bufferViewTypedArray = new Uint8Array(\n        bufferTypedArray.buffer,\n        bufferTypedArray.byteOffset + that._byteOffset,\n        that._byteLength\n      );\n\n      // Unload the buffer\n      that.unload();\n\n      that._typedArray = bufferViewTypedArray;\n      if (that._hasMeshopt) {\n        that._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].PROCESSING */ .Z.PROCESSING;\n      } else {\n        that._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].READY */ .Z.READY;\n        that._promise.resolve(that);\n      }\n    })\n    .otherwise(function (error) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      that.unload();\n      that._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FAILED */ .Z.FAILED;\n      var errorMessage = "Failed to load buffer view";\n      that._promise.reject(that.getError(errorMessage, error));\n    });\n};\n\nfunction getBufferLoader(bufferViewLoader) {\n  var resourceCache = bufferViewLoader._resourceCache;\n  var buffer = bufferViewLoader._buffer;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(buffer.uri)) {\n    var baseResource = bufferViewLoader._baseResource;\n    var resource = baseResource.getDerivedResource({\n      url: buffer.uri,\n    });\n    return resourceCache.loadExternalBuffer({\n      resource: resource,\n    });\n  }\n  return resourceCache.loadEmbeddedBuffer({\n    parentResource: bufferViewLoader._gltfResource,\n    bufferId: bufferViewLoader._bufferId,\n  });\n}\n\n/**\n * Processes the resources. For a BufferView that does not have the EXT_meshopt_compression extension, there\n * is no processing that needs to happen, so this function returns immediately.\n *\n * @param {FrameState} frameState The frame state.\n */\nGltfBufferViewLoader.prototype.process = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("frameState", frameState);\n  //>>includeEnd(\'debug\');\n\n  if (!this._hasMeshopt) {\n    return;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this._typedArray)) {\n    return;\n  }\n\n  if (this._state !== _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].PROCESSING */ .Z.PROCESSING) {\n    return;\n  }\n\n  var count = this._meshoptCount;\n  var byteStride = this._meshoptByteStride;\n  var result = new Uint8Array(count * byteStride);\n  _ThirdParty_meshoptimizer_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].decodeGltfBuffer */ .Z.decodeGltfBuffer(\n    result,\n    count,\n    byteStride,\n    this._typedArray,\n    this._meshoptMode,\n    this._meshoptFilter\n  );\n\n  this._typedArray = result;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].READY */ .Z.READY;\n  this._promise.resolve(this);\n};\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfBufferViewLoader.prototype.unload = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this._bufferLoader)) {\n    this._resourceCache.unload(this._bufferLoader);\n  }\n\n  this._bufferLoader = undefined;\n  this._typedArray = undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42306\n')},69179:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ GltfDracoLoader; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13222);\n/* harmony import */ var _DracoLoader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8056);\n/* harmony import */ var _ResourceLoader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(29789);\n/* harmony import */ var _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(89356);\n\n\n\n\n\n\n\n\n/**\n * Load a draco buffer from a glTF.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfDracoLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {Object} options Object with the following properties:\n * @param {ResourceCache} options.resourceCache The {@link ResourceCache} (to avoid circular dependencies).\n * @param {Object} options.gltf The glTF JSON.\n * @param {Object} options.draco The Draco extension object.\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF.\n * @param {Resource} options.baseResource The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {String} [options.cacheKey] The cache key of the resource.\n *\n * @private\n */\nfunction GltfDracoLoader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var resourceCache = options.resourceCache;\n  var gltf = options.gltf;\n  var draco = options.draco;\n  var gltfResource = options.gltfResource;\n  var baseResource = options.baseResource;\n  var cacheKey = options.cacheKey;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.func */ .Z.typeOf.func("options.resourceCache", resourceCache);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltf", gltf);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.draco", draco);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltfResource", gltfResource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.baseResource", baseResource);\n  //>>includeEnd(\'debug\');\n\n  this._resourceCache = resourceCache;\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._gltf = gltf;\n  this._draco = draco;\n  this._cacheKey = cacheKey;\n  this._bufferViewLoader = undefined;\n  this._bufferViewTypedArray = undefined;\n  this._decodePromise = undefined;\n  this._decodedData = undefined;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNLOADED */ .Z.UNLOADED;\n  this._promise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defer */ .Z.defer();\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(Object.create)) {\n  GltfDracoLoader.prototype = Object.create(_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].prototype */ .Z.prototype);\n  GltfDracoLoader.prototype.constructor = GltfDracoLoader;\n}\n\nObject.defineProperties(GltfDracoLoader.prototype, {\n  /**\n   * A promise that resolves to the resource when the resource is ready.\n   *\n   * @memberof GltfDracoLoader.prototype\n   *\n   * @type {Promise.<GltfDracoLoader>}\n   * @readonly\n   * @private\n   */\n  promise: {\n    get: function () {\n      return this._promise.promise;\n    },\n  },\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfDracoLoader.prototype\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    },\n  },\n  /**\n   * The decoded data.\n   *\n   * @memberof GltfDracoLoader.prototype\n   *\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  decodedData: {\n    get: function () {\n      return this._decodedData;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @private\n */\nGltfDracoLoader.prototype.load = function () {\n  var resourceCache = this._resourceCache;\n  var bufferViewLoader = resourceCache.loadBufferView({\n    gltf: this._gltf,\n    bufferViewId: this._draco.bufferView,\n    gltfResource: this._gltfResource,\n    baseResource: this._baseResource,\n  });\n\n  this._bufferViewLoader = bufferViewLoader;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].LOADING */ .Z.LOADING;\n\n  var that = this;\n\n  bufferViewLoader.promise\n    .then(function () {\n      if (that.isDestroyed()) {\n        return;\n      }\n      // Now wait for process() to run to finish loading\n      that._bufferViewTypedArray = bufferViewLoader.typedArray;\n      that._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].PROCESSING */ .Z.PROCESSING;\n    })\n    .otherwise(function (error) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      handleError(that, error);\n    });\n};\n\nfunction handleError(dracoLoader, error) {\n  dracoLoader.unload();\n  dracoLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].FAILED */ .Z.FAILED;\n  var errorMessage = "Failed to load Draco";\n  dracoLoader._promise.reject(dracoLoader.getError(errorMessage, error));\n}\n\n/**\n * Processes the resource until it becomes ready.\n *\n * @param {FrameState} frameState The frame state.\n * @private\n */\nGltfDracoLoader.prototype.process = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("frameState", frameState);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(this._bufferViewTypedArray)) {\n    // Not ready to decode the Draco buffer\n    return;\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(this._decodePromise)) {\n    // Currently decoding\n    return;\n  }\n\n  var draco = this._draco;\n  var gltf = this._gltf;\n  var bufferViews = gltf.bufferViews;\n  var bufferViewId = draco.bufferView;\n  var bufferView = bufferViews[bufferViewId];\n  var compressedAttributes = draco.attributes;\n\n  var decodeOptions = {\n    array: this._bufferViewTypedArray,\n    bufferView: bufferView,\n    compressedAttributes: compressedAttributes,\n    dequantizeInShader: true,\n  };\n\n  var decodePromise = _DracoLoader_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].decodeBufferView */ .Z.decodeBufferView(decodeOptions);\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(decodePromise)) {\n    // Cannot schedule task this frame\n    return;\n  }\n\n  var that = this;\n  this._decodePromise = decodePromise\n    .then(function (results) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      // Unload everything except the decoded data\n      that.unload();\n\n      that._decodedData = {\n        indices: results.indexArray,\n        vertexAttributes: results.attributeData,\n      };\n      that._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].READY */ .Z.READY;\n      that._promise.resolve(that);\n    })\n    .otherwise(function (error) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      handleError(that, error);\n    });\n};\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfDracoLoader.prototype.unload = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(this._bufferViewLoader)) {\n    this._resourceCache.unload(this._bufferViewLoader);\n  }\n\n  this._bufferViewLoader = undefined;\n  this._bufferViewTypedArray = undefined;\n  this._decodedData = undefined;\n  this._gltf = undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///69179\n')},42670:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ GltfFeatureMetadataLoader; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13222);\n/* harmony import */ var _parseFeatureMetadata_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(25821);\n/* harmony import */ var _ResourceCache_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(38956);\n/* harmony import */ var _ResourceLoader_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(29789);\n/* harmony import */ var _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(89356);\n\n\n\n\n\n\n\n\n\n/**\n * Loads glTF feature metadata.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfFeatureMetadataLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} options.gltf The glTF JSON.\n * @param {String} options.extension The feature metadata extension object.\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF.\n * @param {Resource} options.baseResource The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {SupportedImageFormats} options.supportedImageFormats The supported image formats.\n * @param {String} [options.cacheKey] The cache key of the resource.\n * @param {Boolean} [options.asynchronous=true] Determines if WebGL resource creation will be spread out over several frames or block until all WebGL resources are created.\n *\n * @private\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium\'s standard deprecation policy.\n */\nfunction GltfFeatureMetadataLoader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var gltf = options.gltf;\n  var extension = options.extension;\n  var gltfResource = options.gltfResource;\n  var baseResource = options.baseResource;\n  var supportedImageFormats = options.supportedImageFormats;\n  var cacheKey = options.cacheKey;\n  var asynchronous = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.asynchronous, true);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltf", gltf);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.extension", extension);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltfResource", gltfResource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.baseResource", baseResource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.supportedImageFormats", supportedImageFormats);\n  //>>includeEnd(\'debug\');\n\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._gltf = gltf;\n  this._extension = extension;\n  this._supportedImageFormats = supportedImageFormats;\n  this._cacheKey = cacheKey;\n  this._asynchronous = asynchronous;\n  this._bufferViewLoaders = [];\n  this._textureLoaders = [];\n  this._schemaLoader = undefined;\n  this._featureMetadata = undefined;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNLOADED */ .Z.UNLOADED;\n  this._promise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defer */ .Z.defer();\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(Object.create)) {\n  GltfFeatureMetadataLoader.prototype = Object.create(_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].prototype */ .Z.prototype);\n  GltfFeatureMetadataLoader.prototype.constructor = GltfFeatureMetadataLoader;\n}\n\nObject.defineProperties(GltfFeatureMetadataLoader.prototype, {\n  /**\n   * A promise that resolves to the resource when the resource is ready.\n   *\n   * @memberof GltfFeatureMetadataLoader.prototype\n   *\n   * @type {Promise.<GltfFeatureMetadataLoader>}\n   * @readonly\n   * @private\n   */\n  promise: {\n    get: function () {\n      return this._promise.promise;\n    },\n  },\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfFeatureMetadataLoader.prototype\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    },\n  },\n  /**\n   * Feature metadata.\n   *\n   * @memberof GltfFeatureMetadataLoader.prototype\n   *\n   * @type {FeatureMetadata}\n   * @readonly\n   * @private\n   */\n  featureMetadata: {\n    get: function () {\n      return this._featureMetadata;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @private\n */\nGltfFeatureMetadataLoader.prototype.load = function () {\n  var bufferViewsPromise = loadBufferViews(this);\n  var texturesPromise = loadTextures(this);\n  var schemaPromise = loadSchema(this);\n\n  this._gltf = undefined; // No longer need to hold onto the glTF\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].LOADING */ .Z.LOADING;\n\n  var that = this;\n\n  _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].all */ .Z.all([bufferViewsPromise, texturesPromise, schemaPromise])\n    .then(function (results) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      var bufferViews = results[0];\n      var textures = results[1];\n      var schema = results[2];\n\n      that._featureMetadata = (0,_parseFeatureMetadata_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({\n        extension: that._extension,\n        schema: schema,\n        bufferViews: bufferViews,\n        textures: textures,\n      });\n      that._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].READY */ .Z.READY;\n      that._promise.resolve(that);\n    })\n    .otherwise(function (error) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      that.unload();\n      that._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FAILED */ .Z.FAILED;\n      var errorMessage = "Failed to load feature metadata";\n      that._promise.reject(that.getError(errorMessage, error));\n    });\n};\n\nfunction loadBufferViews(featureMetadataLoader) {\n  var extension = featureMetadataLoader._extension;\n  var featureTables = extension.featureTables;\n\n  // Gather the used buffer views\n  var bufferViewIds = {};\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(featureTables)) {\n    for (var featureTableId in featureTables) {\n      if (featureTables.hasOwnProperty(featureTableId)) {\n        var featureTable = featureTables[featureTableId];\n        var properties = featureTable.properties;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(properties)) {\n          for (var propertyId in properties) {\n            if (properties.hasOwnProperty(propertyId)) {\n              var property = properties[propertyId];\n              var bufferView = property.bufferView;\n              var arrayOffsetBufferView = property.arrayOffsetBufferView;\n              var stringOffsetBufferView = property.stringOffsetBufferView;\n              if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(bufferView)) {\n                bufferViewIds[bufferView] = true;\n              }\n              if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(arrayOffsetBufferView)) {\n                bufferViewIds[arrayOffsetBufferView] = true;\n              }\n              if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(stringOffsetBufferView)) {\n                bufferViewIds[stringOffsetBufferView] = true;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Load the buffer views\n  var bufferViewPromises = [];\n  var bufferViewLoaders = {};\n  for (var bufferViewId in bufferViewIds) {\n    if (bufferViewIds.hasOwnProperty(bufferViewId)) {\n      var bufferViewLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].loadBufferView */ .Z.loadBufferView({\n        gltf: featureMetadataLoader._gltf,\n        bufferViewId: parseInt(bufferViewId),\n        gltfResource: featureMetadataLoader._gltfResource,\n        baseResource: featureMetadataLoader._baseResource,\n      });\n      bufferViewPromises.push(bufferViewLoader.promise);\n      featureMetadataLoader._bufferViewLoaders.push(bufferViewLoader);\n      bufferViewLoaders[bufferViewId] = bufferViewLoader;\n    }\n  }\n\n  // Return a promise to a map of buffer view IDs to typed arrays\n  return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].all */ .Z.all(bufferViewPromises).then(function () {\n    var bufferViews = {};\n    for (var bufferViewId in bufferViewLoaders) {\n      if (bufferViewLoaders.hasOwnProperty(bufferViewId)) {\n        var bufferViewLoader = bufferViewLoaders[bufferViewId];\n        // Copy the typed array and let the underlying ArrayBuffer be freed\n        var bufferViewTypedArray = new Uint8Array(bufferViewLoader.typedArray);\n        bufferViews[bufferViewId] = bufferViewTypedArray;\n      }\n    }\n\n    // Buffer views can be unloaded after the data has been copied\n    unloadBufferViews(featureMetadataLoader);\n\n    return bufferViews;\n  });\n}\n\nfunction loadTextures(featureMetadataLoader) {\n  var extension = featureMetadataLoader._extension;\n  var featureTextures = extension.featureTextures;\n\n  var gltf = featureMetadataLoader._gltf;\n  var gltfResource = featureMetadataLoader._gltfResource;\n  var baseResource = featureMetadataLoader._baseResource;\n  var supportedImageFormats = featureMetadataLoader._supportedImageFormats;\n  var asynchronous = featureMetadataLoader._asynchronous;\n\n  // Gather the used textures\n  var textureIds = {};\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(featureTextures)) {\n    for (var featureTextureId in featureTextures) {\n      if (featureTextures.hasOwnProperty(featureTextureId)) {\n        var featureTexture = featureTextures[featureTextureId];\n        var properties = featureTexture.properties;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(properties)) {\n          for (var propertyId in properties) {\n            if (properties.hasOwnProperty(propertyId)) {\n              var property = properties[propertyId];\n              var textureInfo = property.texture;\n              textureIds[textureInfo.index] = textureInfo;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Load the textures\n  var texturePromises = [];\n  var textureLoaders = {};\n  for (var textureId in textureIds) {\n    if (textureIds.hasOwnProperty(textureId)) {\n      var textureLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].loadTexture */ .Z.loadTexture({\n        gltf: gltf,\n        textureInfo: textureIds[textureId],\n        gltfResource: gltfResource,\n        baseResource: baseResource,\n        supportedImageFormats: supportedImageFormats,\n        asynchronous: asynchronous,\n      });\n      texturePromises.push(textureLoader.promise);\n      featureMetadataLoader._textureLoaders.push(textureLoader);\n      textureLoaders[textureId] = textureLoader;\n    }\n  }\n\n  // Return a promise to a map of texture IDs to Texture objects\n  return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].all */ .Z.all(texturePromises).then(function () {\n    var textures = {};\n    for (var textureId in textureLoaders) {\n      if (textureLoaders.hasOwnProperty(textureId)) {\n        var textureLoader = textureLoaders[textureId];\n        textures[textureId] = textureLoader.texture;\n      }\n    }\n    return textures;\n  });\n}\n\nfunction loadSchema(featureMetadataLoader) {\n  var extension = featureMetadataLoader._extension;\n\n  var schemaLoader;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(extension.schemaUri)) {\n    var resource = featureMetadataLoader._baseResource.getDerivedResource({\n      url: extension.schemaUri,\n    });\n    schemaLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].loadSchema */ .Z.loadSchema({\n      resource: resource,\n    });\n  } else {\n    schemaLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].loadSchema */ .Z.loadSchema({\n      schema: extension.schema,\n    });\n  }\n\n  featureMetadataLoader._schemaLoader = schemaLoader;\n\n  return schemaLoader.promise.then(function (schemaLoader) {\n    return schemaLoader.schema;\n  });\n}\n\n/**\n * Processes the resource until it becomes ready.\n *\n * @param {FrameState} frameState The frame state.\n * @private\n */\nGltfFeatureMetadataLoader.prototype.process = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("frameState", frameState);\n  //>>includeEnd(\'debug\');\n\n  if (this._state !== _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].LOADING */ .Z.LOADING) {\n    return;\n  }\n\n  var textureLoaders = this._textureLoaders;\n  var textureLoadersLength = textureLoaders.length;\n\n  for (var i = 0; i < textureLoadersLength; ++i) {\n    var textureLoader = textureLoaders[i];\n    textureLoader.process(frameState);\n  }\n};\n\nfunction unloadBufferViews(featureMetadataLoader) {\n  var bufferViewLoaders = featureMetadataLoader._bufferViewLoaders;\n  var bufferViewLoadersLength = bufferViewLoaders.length;\n  for (var i = 0; i < bufferViewLoadersLength; ++i) {\n    _ResourceCache_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].unload */ .Z.unload(bufferViewLoaders[i]);\n  }\n  featureMetadataLoader._bufferViewLoaders.length = 0;\n}\n\nfunction unloadTextures(featureMetadataLoader) {\n  var textureLoaders = featureMetadataLoader._textureLoaders;\n  var textureLoadersLength = textureLoaders.length;\n  for (var i = 0; i < textureLoadersLength; ++i) {\n    _ResourceCache_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].unload */ .Z.unload(textureLoaders[i]);\n  }\n  featureMetadataLoader._textureLoaders.length = 0;\n}\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfFeatureMetadataLoader.prototype.unload = function () {\n  unloadBufferViews(this);\n  unloadTextures(this);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(this._schemaLoader)) {\n    _ResourceCache_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].unload */ .Z.unload(this._schemaLoader);\n  }\n  this._schemaLoader = undefined;\n\n  this._featureMetadata = undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42670\n')},24351:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ GltfImageLoader; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82982);\n/* harmony import */ var _Core_loadImageFromTypedArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(10945);\n/* harmony import */ var _Core_loadKTX2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(54973);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9407);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13222);\n/* harmony import */ var _ResourceLoader_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(29789);\n/* harmony import */ var _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(89356);\n\n\n\n\n\n\n\n\n\n\n/**\n * Loads a glTF image.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfImageLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {Object} options Object with the following properties:\n * @param {ResourceCache} options.resourceCache The {@link ResourceCache} (to avoid circular dependencies).\n * @param {Object} options.gltf The glTF JSON.\n * @param {Number} options.imageId The image ID.\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF.\n * @param {Resource} options.baseResource The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {String} [options.cacheKey] The cache key of the resource.\n *\n * @private\n */\nfunction GltfImageLoader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var resourceCache = options.resourceCache;\n  var gltf = options.gltf;\n  var imageId = options.imageId;\n  var gltfResource = options.gltfResource;\n  var baseResource = options.baseResource;\n  var cacheKey = options.cacheKey;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.func */ .Z.typeOf.func("options.resourceCache", resourceCache);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltf", gltf);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("options.imageId", imageId);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltfResource", gltfResource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.baseResource", baseResource);\n  //>>includeEnd(\'debug\');\n\n  var image = gltf.images[imageId];\n  var bufferViewId = image.bufferView;\n  var uri = image.uri;\n\n  this._resourceCache = resourceCache;\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._gltf = gltf;\n  this._bufferViewId = bufferViewId;\n  this._uri = uri;\n  this._cacheKey = cacheKey;\n  this._bufferViewLoader = undefined;\n  this._image = undefined;\n  this._mipLevels = undefined;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].UNLOADED */ .Z.UNLOADED;\n  this._promise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defer */ .Z.defer();\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(Object.create)) {\n  GltfImageLoader.prototype = Object.create(_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].prototype */ .Z.prototype);\n  GltfImageLoader.prototype.constructor = GltfImageLoader;\n}\n\nObject.defineProperties(GltfImageLoader.prototype, {\n  /**\n   * A promise that resolves to the resource when the resource is ready.\n   *\n   * @memberof GltfImageLoader.prototype\n   *\n   * @type {Promise.<GltfImageLoader>}\n   * @readonly\n   * @private\n   */\n  promise: {\n    get: function () {\n      return this._promise.promise;\n    },\n  },\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfImageLoader.prototype\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    },\n  },\n  /**\n   * The image.\n   *\n   * @memberof GltfImageLoader.prototype\n   *\n   * @type {Image|ImageBitmap|CompressedTextureBuffer}\n   * @readonly\n   * @private\n   */\n  image: {\n    get: function () {\n      return this._image;\n    },\n  },\n  /**\n   * The mip levels. Only defined for KTX2 files containing mip levels.\n   *\n   * @memberof GltfImageLoader.prototype\n   *\n   * @type {Uint8Array[]}\n   * @readonly\n   * @private\n   */\n  mipLevels: {\n    get: function () {\n      return this._mipLevels;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @private\n */\nGltfImageLoader.prototype.load = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(this._bufferViewId)) {\n    loadFromBufferView(this);\n  } else {\n    loadFromUri(this);\n  }\n};\n\nfunction getImageAndMipLevels(image) {\n  // Images transcoded from KTX2 can contain multiple mip levels:\n  // https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n  var mipLevels;\n  if (Array.isArray(image)) {\n    // highest detail mip should be level 0\n    mipLevels = image.slice(1, image.length).map(function (mipLevel) {\n      return mipLevel.bufferView;\n    });\n    image = image[0];\n  }\n  return {\n    image: image,\n    mipLevels: mipLevels,\n  };\n}\n\nfunction loadFromBufferView(imageLoader) {\n  var resourceCache = imageLoader._resourceCache;\n  var bufferViewLoader = resourceCache.loadBufferView({\n    gltf: imageLoader._gltf,\n    bufferViewId: imageLoader._bufferViewId,\n    gltfResource: imageLoader._gltfResource,\n    baseResource: imageLoader._baseResource,\n  });\n\n  imageLoader._bufferViewLoader = bufferViewLoader;\n  imageLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].LOADING */ .Z.LOADING;\n\n  bufferViewLoader.promise\n    .then(function () {\n      if (imageLoader.isDestroyed()) {\n        return;\n      }\n\n      var typedArray = bufferViewLoader.typedArray;\n      return loadImageFromBufferTypedArray(typedArray).then(function (image) {\n        if (imageLoader.isDestroyed()) {\n          return;\n        }\n\n        var imageAndMipLevels = getImageAndMipLevels(image);\n\n        // Unload everything except the image\n        imageLoader.unload();\n\n        imageLoader._image = imageAndMipLevels.image;\n        imageLoader._mipLevels = imageAndMipLevels.mipLevels;\n        imageLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].READY */ .Z.READY;\n        imageLoader._promise.resolve(imageLoader);\n      });\n    })\n    .otherwise(function (error) {\n      if (imageLoader.isDestroyed()) {\n        return;\n      }\n      handleError(imageLoader, error, "Failed to load embedded image");\n    });\n}\n\nfunction loadFromUri(imageLoader) {\n  var baseResource = imageLoader._baseResource;\n  var uri = imageLoader._uri;\n  var resource = baseResource.getDerivedResource({\n    url: uri,\n  });\n  imageLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].LOADING */ .Z.LOADING;\n  loadImageFromUri(resource)\n    .then(function (image) {\n      if (imageLoader.isDestroyed()) {\n        return;\n      }\n\n      var imageAndMipLevels = getImageAndMipLevels(image);\n\n      // Unload everything except the image\n      imageLoader.unload();\n\n      imageLoader._image = imageAndMipLevels.image;\n      imageLoader._mipLevels = imageAndMipLevels.mipLevels;\n      imageLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].READY */ .Z.READY;\n      imageLoader._promise.resolve(imageLoader);\n    })\n    .otherwise(function (error) {\n      if (imageLoader.isDestroyed()) {\n        return;\n      }\n      handleError(imageLoader, error, "Failed to load image: " + uri);\n    });\n}\n\nfunction handleError(imageLoader, error, errorMessage) {\n  imageLoader.unload();\n  imageLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].FAILED */ .Z.FAILED;\n  imageLoader._promise.reject(imageLoader.getError(errorMessage, error));\n}\n\nfunction getMimeTypeFromTypedArray(typedArray) {\n  var header = typedArray.subarray(0, 2);\n  var webpHeaderRIFFChars = typedArray.subarray(0, 4);\n  var webpHeaderWEBPChars = typedArray.subarray(8, 12);\n\n  if (header[0] === 0xff && header[1] === 0xd8) {\n    // See https://en.wikipedia.org/wiki/JPEG_File_Interchange_Format\n    return "image/jpeg";\n  } else if (header[0] === 0x89 && header[1] === 0x50) {\n    // See http://www.libpng.org/pub/png/spec/1.2/PNG-Structure.html\n    return "image/png";\n  } else if (header[0] === 0xab && header[1] === 0x4b) {\n    // See http://github.khronos.org/KTX-Specification/#_identifier\n    return "image/ktx2";\n  } else if (\n    // See https://developers.google.com/speed/webp/docs/riff_container#webp_file_header\n    webpHeaderRIFFChars[0] === 0x52 &&\n    webpHeaderRIFFChars[1] === 0x49 &&\n    webpHeaderRIFFChars[2] === 0x46 &&\n    webpHeaderRIFFChars[3] === 0x46 &&\n    webpHeaderWEBPChars[0] === 0x57 &&\n    webpHeaderWEBPChars[1] === 0x45 &&\n    webpHeaderWEBPChars[2] === 0x42 &&\n    webpHeaderWEBPChars[3] === 0x50\n  ) {\n    return "image/webp";\n  }\n\n  throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Image format is not recognized");\n}\n\nfunction loadImageFromBufferTypedArray(typedArray) {\n  var mimeType = getMimeTypeFromTypedArray(typedArray);\n  if (mimeType === "image/ktx2") {\n    // Need to make a copy of the embedded KTX2 buffer otherwise the underlying\n    // ArrayBuffer may be accessed on both the worker and the main thread and\n    // throw an error like "Cannot perform Construct on a detached ArrayBuffer".\n    // Look into SharedArrayBuffer at some point to get around this.\n    var ktxBuffer = new Uint8Array(typedArray);\n\n    // Resolves to a CompressedTextureBuffer\n    return (0,_Core_loadKTX2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(ktxBuffer);\n  }\n  // Resolves to an Image or ImageBitmap\n  return GltfImageLoader._loadImageFromTypedArray({\n    uint8Array: typedArray,\n    format: mimeType,\n    flipY: false,\n    skipColorSpaceConversion: true,\n  });\n}\n\nvar ktx2Regex = /(^data:image\\/ktx2)|(\\.ktx2$)/i;\n\nfunction loadImageFromUri(resource) {\n  var uri = resource.url;\n  if (ktx2Regex.test(uri)) {\n    // Resolves to a CompressedTextureBuffer\n    return (0,_Core_loadKTX2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(resource);\n  }\n  // Resolves to an ImageBitmap or Image\n  return resource.fetchImage({\n    skipColorSpaceConversion: true,\n    preferImageBitmap: true,\n  });\n}\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfImageLoader.prototype.unload = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(this._bufferViewLoader)) {\n    this._resourceCache.unload(this._bufferViewLoader);\n  }\n\n  this._bufferViewLoader = undefined;\n  this._uri = undefined; // Free in case the uri is a data uri\n  this._image = undefined;\n  this._mipLevels = undefined;\n  this._gltf = undefined;\n};\n\n// Exposed for testing\nGltfImageLoader._loadImageFromTypedArray = _Core_loadImageFromTypedArray_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///24351\n')},28096:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ GltfIndexBufferLoader; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22832);\n/* harmony import */ var _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(99095);\n/* harmony import */ var _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(58597);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13222);\n/* harmony import */ var _JobType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(92454);\n/* harmony import */ var _ResourceLoader_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29789);\n/* harmony import */ var _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(89356);\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Loads an index buffer from a glTF accessor.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfIndexBufferLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {Object} options Object with the following properties:\n * @param {ResourceCache} options.resourceCache The {@link ResourceCache} (to avoid circular dependencies).\n * @param {Object} options.gltf The glTF JSON.\n * @param {Number} options.accessorId The accessor ID corresponding to the index buffer.\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF.\n * @param {Resource} options.baseResource The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {Object} [options.draco] The Draco extension object.\n * @param {String} [options.cacheKey] The cache key of the resource.\n * @param {Boolean} [options.asynchronous=true] Determines if WebGL resource creation will be spread out over several frames or block until all WebGL resources are created.\n *\n * @private\n */\nfunction GltfIndexBufferLoader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var resourceCache = options.resourceCache;\n  var gltf = options.gltf;\n  var accessorId = options.accessorId;\n  var gltfResource = options.gltfResource;\n  var baseResource = options.baseResource;\n  var draco = options.draco;\n  var cacheKey = options.cacheKey;\n  var asynchronous = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.asynchronous, true);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.func */ .Z.typeOf.func("options.resourceCache", resourceCache);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltf", gltf);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("options.accessorId", accessorId);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltfResource", gltfResource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.baseResource", baseResource);\n  //>>includeEnd(\'debug\');\n\n  var indexDatatype = gltf.accessors[accessorId].componentType;\n\n  this._resourceCache = resourceCache;\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._gltf = gltf;\n  this._accessorId = accessorId;\n  this._indexDatatype = indexDatatype;\n  this._draco = draco;\n  this._cacheKey = cacheKey;\n  this._asynchronous = asynchronous;\n  this._bufferViewLoader = undefined;\n  this._dracoLoader = undefined;\n  this._typedArray = undefined;\n  this._indexBuffer = undefined;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].UNLOADED */ .Z.UNLOADED;\n  this._promise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defer */ .Z.defer();\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(Object.create)) {\n  GltfIndexBufferLoader.prototype = Object.create(_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].prototype */ .Z.prototype);\n  GltfIndexBufferLoader.prototype.constructor = GltfIndexBufferLoader;\n}\n\nObject.defineProperties(GltfIndexBufferLoader.prototype, {\n  /**\n   * A promise that resolves to the resource when the resource is ready.\n   *\n   * @memberof GltfIndexBufferLoader.prototype\n   *\n   * @type {Promise.<GltfIndexBufferLoader>}\n   * @readonly\n   * @private\n   */\n  promise: {\n    get: function () {\n      return this._promise.promise;\n    },\n  },\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfIndexBufferLoader.prototype\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    },\n  },\n  /**\n   * The index buffer.\n   *\n   * @memberof GltfIndexBufferLoader.prototype\n   *\n   * @type {Buffer}\n   * @readonly\n   * @private\n   */\n  indexBuffer: {\n    get: function () {\n      return this._indexBuffer;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @private\n */\nGltfIndexBufferLoader.prototype.load = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._draco)) {\n    loadFromDraco(this);\n  } else {\n    loadFromBufferView(this);\n  }\n};\n\nfunction loadFromDraco(indexBufferLoader) {\n  var resourceCache = indexBufferLoader._resourceCache;\n  var dracoLoader = resourceCache.loadDraco({\n    gltf: indexBufferLoader._gltf,\n    draco: indexBufferLoader._draco,\n    gltfResource: indexBufferLoader._gltfResource,\n    baseResource: indexBufferLoader._baseResource,\n  });\n\n  indexBufferLoader._dracoLoader = dracoLoader;\n  indexBufferLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LOADING */ .Z.LOADING;\n\n  dracoLoader.promise\n    .then(function () {\n      if (indexBufferLoader.isDestroyed()) {\n        return;\n      }\n      // Now wait for process() to run to finish loading\n      indexBufferLoader._typedArray =\n        dracoLoader.decodedData.indices.typedArray;\n      indexBufferLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PROCESSING */ .Z.PROCESSING;\n    })\n    .otherwise(function (error) {\n      if (indexBufferLoader.isDestroyed()) {\n        return;\n      }\n      handleError(indexBufferLoader, error);\n    });\n}\n\nfunction loadFromBufferView(indexBufferLoader) {\n  var gltf = indexBufferLoader._gltf;\n  var accessorId = indexBufferLoader._accessorId;\n  var accessor = gltf.accessors[accessorId];\n  var bufferViewId = accessor.bufferView;\n\n  var resourceCache = indexBufferLoader._resourceCache;\n  var bufferViewLoader = resourceCache.loadBufferView({\n    gltf: gltf,\n    bufferViewId: bufferViewId,\n    gltfResource: indexBufferLoader._gltfResource,\n    baseResource: indexBufferLoader._baseResource,\n  });\n  indexBufferLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].LOADING */ .Z.LOADING;\n  indexBufferLoader._bufferViewLoader = bufferViewLoader;\n\n  bufferViewLoader.promise\n    .then(function () {\n      if (indexBufferLoader.isDestroyed()) {\n        return;\n      }\n      // Now wait for process() to run to finish loading\n      var bufferViewTypedArray = bufferViewLoader.typedArray;\n      indexBufferLoader._typedArray = createIndicesTypedArray(\n        indexBufferLoader,\n        bufferViewTypedArray\n      );\n      indexBufferLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].PROCESSING */ .Z.PROCESSING;\n    })\n    .otherwise(function (error) {\n      if (indexBufferLoader.isDestroyed()) {\n        return;\n      }\n      handleError(indexBufferLoader, error);\n    });\n}\n\nfunction createIndicesTypedArray(indexBufferLoader, bufferViewTypedArray) {\n  var gltf = indexBufferLoader._gltf;\n  var accessorId = indexBufferLoader._accessorId;\n  var accessor = gltf.accessors[accessorId];\n  var count = accessor.count;\n  var indexDatatype = accessor.componentType;\n\n  var arrayBuffer = bufferViewTypedArray.buffer;\n  var byteOffset = bufferViewTypedArray.byteOffset + accessor.byteOffset;\n\n  var typedArray;\n  if (indexDatatype === _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE) {\n    typedArray = new Uint8Array(arrayBuffer, byteOffset, count);\n  } else if (indexDatatype === _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT) {\n    typedArray = new Uint16Array(arrayBuffer, byteOffset, count);\n  } else if (indexDatatype === _Core_IndexDatatype_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT) {\n    typedArray = new Uint32Array(arrayBuffer, byteOffset, count);\n  }\n\n  return typedArray;\n}\n\nfunction handleError(indexBufferLoader, error) {\n  indexBufferLoader.unload();\n  indexBufferLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].FAILED */ .Z.FAILED;\n  var errorMessage = "Failed to load index buffer";\n  error = indexBufferLoader.getError(errorMessage, error);\n  indexBufferLoader._promise.reject(error);\n}\n\nfunction CreateIndexBufferJob() {\n  this.typedArray = undefined;\n  this.indexDatatype = undefined;\n  this.context = undefined;\n  this.indexBuffer = undefined;\n}\n\nCreateIndexBufferJob.prototype.set = function (\n  typedArray,\n  indexDatatype,\n  context\n) {\n  this.typedArray = typedArray;\n  this.indexDatatype = indexDatatype;\n  this.context = context;\n};\n\nCreateIndexBufferJob.prototype.execute = function () {\n  this.indexBuffer = createIndexBuffer(\n    this.typedArray,\n    this.indexDatatype,\n    this.context\n  );\n};\n\nfunction createIndexBuffer(typedArray, indexDatatype, context) {\n  var indexBuffer = _Renderer_Buffer_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].createIndexBuffer */ .Z.createIndexBuffer({\n    typedArray: typedArray,\n    context: context,\n    usage: _Renderer_BufferUsage_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].STATIC_DRAW */ .Z.STATIC_DRAW,\n    indexDatatype: indexDatatype,\n  });\n  indexBuffer.vertexArrayDestroyable = false;\n  return indexBuffer;\n}\n\nvar scratchIndexBufferJob = new CreateIndexBufferJob();\n\n/**\n * Processes the resource until it becomes ready.\n *\n * @param {FrameState} frameState The frame state.\n * @private\n */\nGltfIndexBufferLoader.prototype.process = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("frameState", frameState);\n  //>>includeEnd(\'debug\');\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._dracoLoader)) {\n    this._dracoLoader.process(frameState);\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._bufferViewLoader)) {\n    this._bufferViewLoader.process(frameState);\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._indexBuffer)) {\n    // Already created index buffer\n    return;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._typedArray)) {\n    // Not ready to create index buffer\n    return;\n  }\n\n  var indexBuffer;\n\n  if (this._asynchronous) {\n    var indexBufferJob = scratchIndexBufferJob;\n    indexBufferJob.set(\n      this._typedArray,\n      this._indexDatatype,\n      frameState.context\n    );\n    var jobScheduler = frameState.jobScheduler;\n    if (!jobScheduler.execute(indexBufferJob, _JobType_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].BUFFER */ .Z.BUFFER)) {\n      // Job scheduler is full. Try again next frame.\n      return;\n    }\n    indexBuffer = indexBufferJob.indexBuffer;\n  } else {\n    indexBuffer = createIndexBuffer(\n      this._typedArray,\n      this._indexDatatype,\n      frameState.context\n    );\n  }\n\n  // Unload everything except the index buffer\n  this.unload();\n\n  this._indexBuffer = indexBuffer;\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].READY */ .Z.READY;\n  this._promise.resolve(this);\n};\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfIndexBufferLoader.prototype.unload = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._indexBuffer)) {\n    this._indexBuffer.destroy();\n  }\n\n  var resourceCache = this._resourceCache;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._bufferViewLoader)) {\n    resourceCache.unload(this._bufferViewLoader);\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(this._dracoLoader)) {\n    resourceCache.unload(this._dracoLoader);\n  }\n\n  this._bufferViewLoader = undefined;\n  this._dracoLoader = undefined;\n  this._typedArray = undefined;\n  this._indexBuffer = undefined;\n  this._gltf = undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28096\n')},60785:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ GltfJsonLoader; }\n/* harmony export */ });\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82982);\n/* harmony import */ var _Core_getJsonFromTypedArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12540);\n/* harmony import */ var _Core_getMagic_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3020);\n/* harmony import */ var _Core_isDataUri_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46138);\n/* harmony import */ var _Core_Resource_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(68985);\n/* harmony import */ var _GltfPipeline_addDefaults_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(32550);\n/* harmony import */ var _GltfPipeline_addPipelineExtras_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(93410);\n/* harmony import */ var _GltfPipeline_ForEach_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(56629);\n/* harmony import */ var _GltfPipeline_parseGlb_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(52655);\n/* harmony import */ var _GltfPipeline_removePipelineExtras_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(23537);\n/* harmony import */ var _GltfPipeline_updateVersion_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(6186);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(13222);\n/* harmony import */ var _ResourceLoader_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(29789);\n/* harmony import */ var _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(89356);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Loads a glTF JSON from a glTF or glb.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfJsonLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {Object} options Object with the following properties:\n * @param {ResourceCache} options.resourceCache The {@link ResourceCache} (to avoid circular dependencies).\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF.\n * @param {Resource} options.baseResource The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {Uint8Array} [options.typedArray] The typed array containing the glTF contents.\n * @param {Object} [options.gltfJson] The parsed glTF JSON contents.\n * @param {String} [options.cacheKey] The cache key of the resource.\n *\n * @private\n */\nfunction GltfJsonLoader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var resourceCache = options.resourceCache;\n  var gltfResource = options.gltfResource;\n  var baseResource = options.baseResource;\n  var typedArray = options.typedArray;\n  var gltfJson = options.gltfJson;\n  var cacheKey = options.cacheKey;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.func */ .Z.typeOf.func("options.resourceCache", resourceCache);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltfResource", gltfResource);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("options.baseResource", baseResource);\n  //>>includeEnd(\'debug\');\n\n  this._resourceCache = resourceCache;\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._typedArray = typedArray;\n  this._gltfJson = gltfJson;\n  this._cacheKey = cacheKey;\n  this._gltf = undefined;\n  this._bufferLoaders = [];\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].UNLOADED */ .Z.UNLOADED;\n  this._promise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].defer */ .Z.defer();\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(Object.create)) {\n  GltfJsonLoader.prototype = Object.create(_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].prototype */ .Z.prototype);\n  GltfJsonLoader.prototype.constructor = GltfJsonLoader;\n}\n\nObject.defineProperties(GltfJsonLoader.prototype, {\n  /**\n   * A promise that resolves to the resource when the resource is ready.\n   *\n   * @memberof GltfJsonLoader.prototype\n   *\n   * @type {Promise.<GltfJsonLoader>}\n   * @readonly\n   * @private\n   */\n  promise: {\n    get: function () {\n      return this._promise.promise;\n    },\n  },\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfJsonLoader.prototype\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return this._cacheKey;\n    },\n  },\n  /**\n   * The glTF JSON.\n   *\n   * @memberof GltfJsonLoader.prototype\n   *\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  gltf: {\n    get: function () {\n      return this._gltf;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @private\n */\nGltfJsonLoader.prototype.load = function () {\n  this._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].LOADING */ .Z.LOADING;\n\n  var processPromise;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(this._gltfJson)) {\n    processPromise = processGltfJson(this, this._gltfJson);\n  } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(this._typedArray)) {\n    processPromise = processGltfTypedArray(this, this._typedArray);\n  } else {\n    processPromise = loadFromUri(this);\n  }\n\n  var that = this;\n\n  return processPromise\n    .then(function (gltf) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      that._gltf = gltf;\n      that._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].READY */ .Z.READY;\n      that._promise.resolve(that);\n    })\n    .otherwise(function (error) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      handleError(that, error);\n    });\n};\n\nfunction loadFromUri(gltfJsonLoader) {\n  return gltfJsonLoader._fetchGltf().then(function (arrayBuffer) {\n    if (gltfJsonLoader.isDestroyed()) {\n      return;\n    }\n    var typedArray = new Uint8Array(arrayBuffer);\n    return processGltfTypedArray(gltfJsonLoader, typedArray);\n  });\n}\n\nfunction handleError(gltfJsonLoader, error) {\n  gltfJsonLoader.unload();\n  gltfJsonLoader._state = _ResourceLoaderState_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].FAILED */ .Z.FAILED;\n  var errorMessage = "Failed to load glTF: " + gltfJsonLoader._gltfResource.url;\n  gltfJsonLoader._promise.reject(gltfJsonLoader.getError(errorMessage, error));\n}\n\nfunction upgradeVersion(gltfJsonLoader, gltf) {\n  if (gltf.asset.version === "2.0") {\n    return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].resolve */ .Z.resolve();\n  }\n\n  // Load all buffers into memory. updateVersion will read and in some cases modify\n  // the buffer data, which it accesses from buffer.extras._pipeline.source\n  var promises = [];\n  _GltfPipeline_ForEach_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].buffer */ .Z.buffer(gltf, function (buffer) {\n    if (\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(buffer.extras._pipeline.source) && // Ignore uri if this buffer uses the glTF 1.0 KHR_binary_glTF extension\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(buffer.uri)\n    ) {\n      var resource = gltfJsonLoader._baseResource.getDerivedResource({\n        url: buffer.uri,\n      });\n      var resourceCache = gltfJsonLoader._resourceCache;\n      var bufferLoader = resourceCache.loadExternalBuffer({\n        resource: resource,\n      });\n\n      gltfJsonLoader._bufferLoaders.push(bufferLoader);\n\n      promises.push(\n        bufferLoader.promise.then(function (bufferLoader) {\n          buffer.extras._pipeline.source = bufferLoader.typedArray;\n        })\n      );\n    }\n  });\n\n  return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].all */ .Z.all(promises).then(function () {\n    (0,_GltfPipeline_updateVersion_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(gltf);\n  });\n}\n\nfunction decodeDataUris(gltf) {\n  var promises = [];\n  _GltfPipeline_ForEach_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].buffer */ .Z.buffer(gltf, function (buffer) {\n    var bufferUri = buffer.uri;\n    if (\n      !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(buffer.extras._pipeline.source) && // Ignore uri if this buffer uses the glTF 1.0 KHR_binary_glTF extension\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(bufferUri) &&\n      (0,_Core_isDataUri_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(bufferUri)\n    ) {\n      delete buffer.uri; // Delete the data URI to keep the cached glTF JSON small\n      promises.push(\n        _Core_Resource_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].fetchArrayBuffer */ .Z.fetchArrayBuffer(bufferUri).then(function (arrayBuffer) {\n          buffer.extras._pipeline.source = new Uint8Array(arrayBuffer);\n        })\n      );\n    }\n  });\n  return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].all */ .Z.all(promises);\n}\n\nfunction loadEmbeddedBuffers(gltfJsonLoader, gltf) {\n  var promises = [];\n  _GltfPipeline_ForEach_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].buffer */ .Z.buffer(gltf, function (buffer, bufferId) {\n    var source = buffer.extras._pipeline.source;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(source) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(buffer.uri)) {\n      var resourceCache = gltfJsonLoader._resourceCache;\n      var bufferLoader = resourceCache.loadEmbeddedBuffer({\n        parentResource: gltfJsonLoader._gltfResource,\n        bufferId: bufferId,\n        typedArray: source,\n      });\n\n      gltfJsonLoader._bufferLoaders.push(bufferLoader);\n      promises.push(bufferLoader.promise);\n    }\n  });\n  return _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].all */ .Z.all(promises);\n}\n\nfunction processGltfJson(gltfJsonLoader, gltf) {\n  (0,_GltfPipeline_addPipelineExtras_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(gltf);\n\n  return decodeDataUris(gltf).then(function () {\n    return upgradeVersion(gltfJsonLoader, gltf).then(function () {\n      (0,_GltfPipeline_addDefaults_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(gltf);\n      return loadEmbeddedBuffers(gltfJsonLoader, gltf).then(function () {\n        (0,_GltfPipeline_removePipelineExtras_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(gltf);\n        return gltf;\n      });\n    });\n  });\n}\n\nfunction processGltfTypedArray(gltfJsonLoader, typedArray) {\n  var gltf;\n  if ((0,_Core_getMagic_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(typedArray) === "glTF") {\n    gltf = (0,_GltfPipeline_parseGlb_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(typedArray);\n  } else {\n    gltf = (0,_Core_getJsonFromTypedArray_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(typedArray);\n  }\n\n  return processGltfJson(gltfJsonLoader, gltf);\n}\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfJsonLoader.prototype.unload = function () {\n  var bufferLoaders = this._bufferLoaders;\n  var bufferLoadersLength = bufferLoaders.length;\n  for (var i = 0; i < bufferLoadersLength; ++i) {\n    this._resourceCache.unload(bufferLoaders[i]);\n  }\n  this._bufferLoaders.length = 0;\n\n  this._gltf = undefined;\n};\n\n/**\n * Exposed for testing\n *\n * @private\n */\nGltfJsonLoader.prototype._fetchGltf = function () {\n  return this._gltfResource.fetchArrayBuffer();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///60785\n')},6366:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ GltfLoader; }\n/* harmony export */ });\n/* harmony import */ var _Core_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23401);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(63367);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84828);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(82982);\n/* harmony import */ var _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(96037);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(72248);\n/* harmony import */ var _Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(87811);\n/* harmony import */ var _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(87721);\n/* harmony import */ var _GltfPipeline_getAccessorByteStride_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(93224);\n/* harmony import */ var _GltfPipeline_getComponentReader_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(2378);\n/* harmony import */ var _GltfPipeline_numberOfComponentsForType_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(26806);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(13222);\n/* harmony import */ var _AttributeType_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(77072);\n/* harmony import */ var _Axis_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(66577);\n/* harmony import */ var _GltfFeatureMetadataLoader_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(42670);\n/* harmony import */ var _GltfLoaderUtil_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(61120);\n/* harmony import */ var _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(57325);\n/* harmony import */ var _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(7896);\n/* harmony import */ var _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(38956);\n/* harmony import */ var _ResourceLoader_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(29789);\n/* harmony import */ var _SupportedImageFormats_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(70922);\n/* harmony import */ var _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(26998);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Attribute = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Attribute */ .Z.Attribute;\nvar Indices = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Indices */ .Z.Indices;\nvar FeatureIdAttribute = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].FeatureIdAttribute */ .Z.FeatureIdAttribute;\nvar FeatureIdTexture = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].FeatureIdTexture */ .Z.FeatureIdTexture;\nvar MorphTarget = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].MorphTarget */ .Z.MorphTarget;\nvar Primitive = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Primitive */ .Z.Primitive;\nvar Instances = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Instances */ .Z.Instances;\nvar Skin = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Skin */ .Z.Skin;\nvar Node = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Node */ .Z.Node;\nvar Scene = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Scene */ .Z.Scene;\nvar Components = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Components */ .Z.Components;\nvar MetallicRoughness = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].MetallicRoughness */ .Z.MetallicRoughness;\nvar SpecularGlossiness = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].SpecularGlossiness */ .Z.SpecularGlossiness;\nvar Material = _ModelComponents_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].Material */ .Z.Material;\n\nvar GltfLoaderState = {\n  UNLOADED: 0,\n  LOADING: 1,\n  LOADED: 2,\n  PROCESSING: 3,\n  PROCESSED: 4,\n  READY: 4,\n  FAILED: 5,\n};\n\n/**\n * Loads a glTF model.\n * <p>\n * Implements the {@link ResourceLoader} interface.\n * </p>\n *\n * @alias GltfLoader\n * @constructor\n * @augments ResourceLoader\n *\n * @param {Object} options Object with the following properties:\n * @param {Resource} options.gltfResource The {@link Resource} containing the glTF. This is often the path of the .gltf or .glb file, but may also be the path of the .b3dm, .i3dm, or .cmpt file containing the embedded glb. .cmpt resources should have a URI fragment indicating the index of the inner content to which the glb belongs in order to individually identify the glb in the cache, e.g. http://example.com/tile.cmpt#index=2.\n * @param {Resource} [options.baseResource] The {@link Resource} that paths in the glTF JSON are relative to.\n * @param {Uint8Array} [options.typedArray] The typed array containing the glTF contents, e.g. from a .b3dm, .i3dm, or .cmpt file.\n * @param {Object} [options.gltfJson] A parsed glTF JSON file instead of passing it in as a typed array.\n * @param {Boolean} [options.releaseGltfJson=false] When true, the glTF JSON is released once the glTF is loaded. This is is especially useful for cases like 3D Tiles, where each .gltf model is unique and caching the glTF JSON is not effective.\n * @param {Boolean} [options.asynchronous=true] Determines if WebGL resource creation will be spread out over several frames or block until all WebGL resources are created.\n * @param {Boolean} [options.incrementallyLoadTextures=true] Determine if textures may continue to stream in after the glTF is loaded.\n * @param {Axis} [options.upAxis=Axis.Y] The up-axis of the glTF model.\n * @param {Axis} [options.forwardAxis=Axis.Z] The forward-axis of the glTF model.\n *\n * @private\n */\nfunction GltfLoader(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var gltfResource = options.gltfResource;\n  var baseResource = options.baseResource;\n  var typedArray = options.typedArray;\n  var releaseGltfJson = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.releaseGltfJson, false);\n  var asynchronous = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.asynchronous, true);\n  var incrementallyLoadTextures = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    options.incrementallyLoadTextures,\n    true\n  );\n  var upAxis = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.upAxis, _Axis_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].Y */ .Z.Y);\n  var forwardAxis = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(options.forwardAxis, _Axis_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].Z */ .Z.Z);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltfResource", gltfResource);\n  //>>includeEnd(\'debug\');\n\n  baseResource = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(baseResource) ? baseResource : gltfResource.clone();\n\n  this._gltfJson = options.gltfJson;\n  this._gltfResource = gltfResource;\n  this._baseResource = baseResource;\n  this._typedArray = typedArray;\n  this._releaseGltfJson = releaseGltfJson;\n  this._asynchronous = asynchronous;\n  this._incrementallyLoadTextures = incrementallyLoadTextures;\n  this._upAxis = upAxis;\n  this._forwardAxis = forwardAxis;\n\n  this._gltfJsonLoader = undefined;\n  this._state = GltfLoaderState.UNLOADED;\n  this._textureState = GltfLoaderState.UNLOADED;\n  this._promise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].defer */ .Z.defer();\n  this._texturesLoadedPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].defer */ .Z.defer();\n\n  // Loaders that need to be processed before the glTF becomes ready\n  this._textureLoaders = [];\n  this._bufferViewLoaders = [];\n  this._geometryLoaders = [];\n  this._featureMetadataLoader = undefined;\n\n  // Loaded results\n  this._components = undefined;\n}\n\nif ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(Object.create)) {\n  GltfLoader.prototype = Object.create(_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].prototype */ .Z.prototype);\n  GltfLoader.prototype.constructor = GltfLoader;\n}\n\nObject.defineProperties(GltfLoader.prototype, {\n  /**\n   * A promise that resolves to the resource when the resource is ready.\n   *\n   * @memberof GltfLoader.prototype\n   *\n   * @type {Promise.<GltfLoader>}\n   * @readonly\n   * @private\n   */\n  promise: {\n    get: function () {\n      return this._promise.promise;\n    },\n  },\n  /**\n   * The cache key of the resource.\n   *\n   * @memberof GltfLoader.prototype\n   *\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  cacheKey: {\n    get: function () {\n      return undefined;\n    },\n  },\n  /**\n   * The loaded components.\n   *\n   * @memberof GltfLoader.prototype\n   *\n   * @type {ModelComponents.Components}\n   * @readonly\n   * @private\n   */\n  components: {\n    get: function () {\n      return this._components;\n    },\n  },\n\n  /**\n   * A promise that resolves when all textures are loaded.\n   * When <code>incrementallyLoadTextures</code> is true this may resolve after\n   * <code>promise</code> resolves.\n   *\n   * @memberof GltfLoader.prototype\n   *\n   * @type {Promise}\n   * @readonly\n   * @private\n   */\n  texturesLoadedPromise: {\n    get: function () {\n      return this._texturesLoadedPromise.promise;\n    },\n  },\n});\n\n/**\n * Loads the resource.\n * @private\n */\nGltfLoader.prototype.load = function () {\n  var gltfJsonLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].loadGltfJson */ .Z.loadGltfJson({\n    gltfResource: this._gltfResource,\n    baseResource: this._baseResource,\n    typedArray: this._typedArray,\n    gltfJson: this._gltfJson,\n  });\n\n  this._gltfJsonLoader = gltfJsonLoader;\n  this._state = GltfLoaderState.LOADING;\n  this._textureState = GltfLoaderState.LOADING;\n\n  var that = this;\n  gltfJsonLoader.promise\n    .then(function () {\n      if (that.isDestroyed()) {\n        return;\n      }\n      that._state = GltfLoaderState.LOADED;\n      that._textureState = GltfLoaderState.LOADED;\n    })\n    .otherwise(function (error) {\n      if (that.isDestroyed()) {\n        return;\n      }\n      handleError(that, error);\n    });\n};\n\nfunction handleError(gltfLoader, error) {\n  gltfLoader.unload();\n  gltfLoader._state = GltfLoaderState.FAILED;\n  gltfLoader._textureState = GltfLoaderState.FAILED;\n  var errorMessage = "Failed to load glTF";\n  error = gltfLoader.getError(errorMessage, error);\n  gltfLoader._promise.reject(error);\n  gltfLoader._texturesLoadedPromise.reject(error);\n}\n\nfunction process(loader, frameState) {\n  var i;\n  var textureLoaders = loader._textureLoaders;\n  var textureLoadersLength = textureLoaders.length;\n  for (i = 0; i < textureLoadersLength; ++i) {\n    textureLoaders[i].process(frameState);\n  }\n\n  var bufferViewLoaders = loader._bufferViewLoaders;\n  var bufferViewLoadersLength = bufferViewLoaders.length;\n  for (i = 0; i < bufferViewLoadersLength; ++i) {\n    bufferViewLoaders[i].process(frameState);\n  }\n\n  var geometryLoaders = loader._geometryLoaders;\n  var geometryLoadersLength = geometryLoaders.length;\n  for (i = 0; i < geometryLoadersLength; ++i) {\n    geometryLoaders[i].process(frameState);\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(loader._featureMetadataLoader)) {\n    loader._featureMetadataLoader.process(frameState);\n  }\n}\n\n/**\n * Processes the resource until it becomes ready.\n *\n * @param {FrameState} frameState The frame state.\n * @private\n */\nGltfLoader.prototype.process = function (frameState) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("frameState", frameState);\n  //>>includeEnd(\'debug\');\n\n  if (!_Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].supportsWebP.initialized */ .Z.supportsWebP.initialized) {\n    _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].supportsWebP.initialize */ .Z.supportsWebP.initialize();\n    return;\n  }\n\n  if (this._state === GltfLoaderState.LOADED) {\n    this._state = GltfLoaderState.PROCESSING;\n\n    var supportedImageFormats = new _SupportedImageFormats_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z({\n      webp: _Core_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].supportsWebP */ .Z.supportsWebP(),\n      basis: frameState.context.supportsBasis,\n    });\n\n    var gltf;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(this._gltfJsonLoader)) {\n      gltf = this._gltfJsonLoader.gltf;\n    } else {\n      gltf = this._gltfJson;\n    }\n\n    // Parse the glTF which populates the loaders arrays. The ready promise\n    // resolves once all the loaders are ready (i.e. all external resources\n    // have been fetched and all GPU resources have been created). Loaders that\n    // create GPU resources need to be processed every frame until they become\n    // ready since the JobScheduler is not able to execute all jobs in a single\n    // frame. Also note that it\'s fine to call process before a loader is ready\n    // to process; nothing will happen.\n    parse(this, gltf, supportedImageFormats, frameState);\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(this._gltfJsonLoader) && this._releaseGltfJson) {\n      // Check that the glTF JSON loader is still defined before trying to unload it.\n      // It may be undefined if the ready promise rejects immediately (which can happen in unit tests)\n      _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].unload */ .Z.unload(this._gltfJsonLoader);\n      this._gltfJsonLoader = undefined;\n    }\n  }\n\n  if (this._textureState === GltfLoaderState.LOADED) {\n    this._textureState = GltfLoaderState.PROCESSING;\n  }\n\n  if (\n    this._state === GltfLoaderState.PROCESSING ||\n    this._textureState === GltfLoaderState.PROCESSING\n  ) {\n    process(this, frameState);\n  }\n\n  if (this._state === GltfLoaderState.PROCESSED) {\n    unloadBufferViews(this); // Buffer views can be unloaded after the data has been copied\n    this._state = GltfLoaderState.READY;\n    this._promise.resolve(this);\n  }\n\n  if (this._textureState === GltfLoaderState.PROCESSED) {\n    this._textureState = GltfLoaderState.READY;\n    this._texturesLoadedPromise.resolve(this);\n  }\n};\n\nfunction loadVertexBuffer(\n  loader,\n  gltf,\n  accessorId,\n  semantic,\n  draco,\n  dequantize\n) {\n  var accessor = gltf.accessors[accessorId];\n  var bufferViewId = accessor.bufferView;\n\n  var vertexBufferLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].loadVertexBuffer */ .Z.loadVertexBuffer({\n    gltf: gltf,\n    gltfResource: loader._gltfResource,\n    baseResource: loader._baseResource,\n    bufferViewId: bufferViewId,\n    draco: draco,\n    attributeSemantic: semantic,\n    accessorId: accessorId,\n    asynchronous: loader._asynchronous,\n    dequantize: dequantize,\n  });\n\n  loader._geometryLoaders.push(vertexBufferLoader);\n\n  return vertexBufferLoader;\n}\n\nfunction loadIndexBuffer(loader, gltf, accessorId, draco) {\n  var indexBufferLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].loadIndexBuffer */ .Z.loadIndexBuffer({\n    gltf: gltf,\n    accessorId: accessorId,\n    gltfResource: loader._gltfResource,\n    baseResource: loader._baseResource,\n    draco: draco,\n    asynchronous: loader._asynchronous,\n  });\n\n  loader._geometryLoaders.push(indexBufferLoader);\n\n  return indexBufferLoader;\n}\n\nfunction loadBufferView(loader, gltf, bufferViewId) {\n  var bufferViewLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].loadBufferView */ .Z.loadBufferView({\n    gltf: gltf,\n    bufferViewId: bufferViewId,\n    gltfResource: loader._gltfResource,\n    baseResource: loader._baseResource,\n  });\n\n  loader._bufferViewLoaders.push(bufferViewLoader);\n\n  return bufferViewLoader;\n}\n\nfunction getAccessorTypedArray(gltf, accessor, bufferViewTypedArray) {\n  var byteOffset = accessor.byteOffset;\n  var byteStride = (0,_GltfPipeline_getAccessorByteStride_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(gltf, accessor);\n  var count = accessor.count;\n  var componentCount = (0,_GltfPipeline_numberOfComponentsForType_js__WEBPACK_IMPORTED_MODULE_24__/* ["default"] */ .Z)(accessor.type);\n  var componentType = accessor.componentType;\n  var componentByteLength = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].getSizeInBytes */ .Z.getSizeInBytes(componentType);\n  var defaultByteStride = componentByteLength * componentCount;\n  var componentsLength = count * componentCount;\n\n  if (byteStride === defaultByteStride) {\n    // Copy the typed array and let the underlying ArrayBuffer be freed\n    bufferViewTypedArray = new Uint8Array(bufferViewTypedArray);\n    return _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].createArrayBufferView */ .Z.createArrayBufferView(\n      componentType,\n      bufferViewTypedArray.buffer,\n      bufferViewTypedArray.byteOffset + byteOffset,\n      componentsLength\n    );\n  }\n\n  var accessorTypedArray = _Core_ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    componentType,\n    componentsLength\n  );\n\n  var dataView = new DataView(bufferViewTypedArray.buffer);\n  var components = new Array(componentCount);\n  var componentReader = (0,_GltfPipeline_getComponentReader_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(accessor.componentType);\n  byteOffset = bufferViewTypedArray.byteOffset + byteOffset;\n\n  for (var i = 0; i < count; ++i) {\n    componentReader(\n      dataView,\n      byteOffset,\n      componentCount,\n      componentByteLength,\n      components\n    );\n    for (var j = 0; j < componentCount; ++j) {\n      accessorTypedArray[i * componentCount + j] = components[j];\n    }\n    byteOffset += byteStride;\n  }\n\n  return accessorTypedArray;\n}\n\nfunction fromArray(MathType, values) {\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(values)) {\n    return undefined;\n  }\n\n  if (MathType === Number) {\n    return values[0];\n  }\n\n  return MathType.unpack(values);\n}\n\nfunction getDefault(MathType) {\n  if (MathType === Number) {\n    return 0.0;\n  }\n\n  return new MathType(); // defaults to 0.0 for all types\n}\n\nfunction createAttribute(gltf, accessorId, name, semantic, setIndex) {\n  var accessor = gltf.accessors[accessorId];\n  var MathType = _AttributeType_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].getMathType */ .Z.getMathType(accessor.type);\n\n  var attribute = new Attribute();\n  attribute.name = name;\n  attribute.semantic = semantic;\n  attribute.setIndex = setIndex;\n  attribute.constant = getDefault(MathType);\n  attribute.componentDatatype = accessor.componentType;\n  attribute.normalized = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(accessor.normalized, false);\n  attribute.count = accessor.count;\n  attribute.type = accessor.type;\n  attribute.min = fromArray(MathType, accessor.min);\n  attribute.max = fromArray(MathType, accessor.max);\n  attribute.byteOffset = accessor.byteOffset;\n  attribute.byteStride = (0,_GltfPipeline_getAccessorByteStride_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(gltf, accessor);\n\n  return attribute;\n}\n\nfunction getSetIndex(gltfSemantic) {\n  var setIndexRegex = /^\\w+_(\\d+)$/;\n  var setIndexMatch = setIndexRegex.exec(gltfSemantic);\n  if (setIndexMatch !== null) {\n    return parseInt(setIndexMatch[1]);\n  }\n  return undefined;\n}\n\nfunction loadVertexAttribute(loader, gltf, accessorId, gltfSemantic, draco) {\n  var accessor = gltf.accessors[accessorId];\n  var bufferViewId = accessor.bufferView;\n\n  var name = gltfSemantic;\n  var semantic = _VertexAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].fromGltfSemantic */ .Z.fromGltfSemantic(gltfSemantic);\n  var setIndex = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(semantic) ? getSetIndex(gltfSemantic) : undefined;\n\n  var attribute = createAttribute(gltf, accessorId, name, semantic, setIndex);\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(draco) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(bufferViewId)) {\n    return attribute;\n  }\n\n  var vertexBufferLoader = loadVertexBuffer(\n    loader,\n    gltf,\n    accessorId,\n    gltfSemantic,\n    draco,\n    false\n  );\n  vertexBufferLoader.promise.then(function (vertexBufferLoader) {\n    if (loader.isDestroyed()) {\n      return;\n    }\n\n    attribute.buffer = vertexBufferLoader.vertexBuffer;\n\n    if (\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(draco) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(draco.attributes) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(draco.attributes[gltfSemantic])\n    ) {\n      // The accessor\'s byteOffset and byteStride should be ignored for draco.\n      // Each attribute is tightly packed in its own buffer after decode.\n      attribute.byteOffset = 0;\n      attribute.byteStride = undefined;\n      attribute.quantization = vertexBufferLoader.quantization;\n    }\n  });\n\n  return attribute;\n}\n\nfunction loadInstancedAttribute(\n  loader,\n  gltf,\n  accessorId,\n  gltfSemantic,\n  loadAsTypedArray,\n  frameState\n) {\n  var accessor = gltf.accessors[accessorId];\n  var bufferViewId = accessor.bufferView;\n\n  var name = gltfSemantic;\n  var semantic = _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].fromGltfSemantic */ .Z.fromGltfSemantic(gltfSemantic);\n  var setIndex = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(semantic) ? getSetIndex(gltfSemantic) : undefined;\n\n  var attribute = createAttribute(gltf, accessorId, name, semantic, setIndex);\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(bufferViewId)) {\n    return attribute;\n  }\n\n  if (!loadAsTypedArray && frameState.context.instancedArrays) {\n    // Only create a GPU buffer if the browser supports WebGL instancing\n    // Don\'t pass in draco object since instanced attributes can\'t be draco compressed\n    var vertexBufferLoader = loadVertexBuffer(\n      loader,\n      gltf,\n      accessorId,\n      gltfSemantic,\n      undefined,\n      true\n    );\n    vertexBufferLoader.promise.then(function (vertexBufferLoader) {\n      if (loader.isDestroyed()) {\n        return;\n      }\n      attribute.buffer = vertexBufferLoader.vertexBuffer;\n    });\n    return attribute;\n  }\n\n  var bufferViewLoader = loadBufferView(loader, gltf, bufferViewId);\n  bufferViewLoader.promise.then(function (bufferViewLoader) {\n    if (loader.isDestroyed()) {\n      return;\n    }\n    var bufferViewTypedArray = bufferViewLoader.typedArray;\n    var accessorTypedArray = getAccessorTypedArray(\n      gltf,\n      accessor,\n      bufferViewTypedArray\n    );\n    attribute.typedArray = accessorTypedArray;\n\n    // The accessor\'s byteOffset and byteStride should be ignored since values\n    // are tightly packed in a typed array\n    attribute.byteOffset = 0;\n    attribute.byteStride = undefined;\n  });\n\n  return attribute;\n}\n\nfunction loadIndices(loader, gltf, accessorId, draco) {\n  var accessor = gltf.accessors[accessorId];\n  var bufferViewId = accessor.bufferView;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(draco) && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(bufferViewId)) {\n    return undefined;\n  }\n\n  var indices = new Indices();\n  indices.indexDatatype = accessor.componentType;\n  indices.count = accessor.count;\n\n  var indexBufferLoader = loadIndexBuffer(loader, gltf, accessorId, draco);\n  indexBufferLoader.promise.then(function (indexBufferLoader) {\n    if (loader.isDestroyed()) {\n      return;\n    }\n    indices.buffer = indexBufferLoader.indexBuffer;\n  });\n\n  return indices;\n}\n\nfunction loadTexture(\n  loader,\n  gltf,\n  textureInfo,\n  supportedImageFormats,\n  samplerOverride\n) {\n  var imageId = _GltfLoaderUtil_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].getImageIdFromTexture */ .Z.getImageIdFromTexture({\n    gltf: gltf,\n    textureId: textureInfo.index,\n    supportedImageFormats: supportedImageFormats,\n  });\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(imageId)) {\n    return undefined;\n  }\n\n  var textureLoader = _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].loadTexture */ .Z.loadTexture({\n    gltf: gltf,\n    textureInfo: textureInfo,\n    gltfResource: loader._gltfResource,\n    baseResource: loader._baseResource,\n    supportedImageFormats: supportedImageFormats,\n    asynchronous: loader._asynchronous,\n  });\n\n  loader._textureLoaders.push(textureLoader);\n\n  var textureReader = _GltfLoaderUtil_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].createModelTextureReader */ .Z.createModelTextureReader({\n    textureInfo: textureInfo,\n  });\n\n  textureLoader.promise.then(function (textureLoader) {\n    if (loader.isDestroyed()) {\n      return;\n    }\n    textureReader.texture = textureLoader.texture;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(samplerOverride)) {\n      textureReader.texture.sampler = samplerOverride;\n    }\n  });\n\n  return textureReader;\n}\n\nfunction loadMaterial(loader, gltf, gltfMaterial, supportedImageFormats) {\n  var material = new Material();\n\n  var extensions = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    gltfMaterial.extensions,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  );\n  var pbrSpecularGlossiness = extensions.KHR_materials_pbrSpecularGlossiness;\n  var pbrMetallicRoughness = gltfMaterial.pbrMetallicRoughness;\n\n  material.unlit = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(extensions.KHR_materials_unlit);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(pbrSpecularGlossiness)) {\n    var specularGlossiness = new SpecularGlossiness();\n    material.specularGlossiness = specularGlossiness;\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(pbrSpecularGlossiness.diffuseTexture)) {\n      specularGlossiness.diffuseTexture = loadTexture(\n        loader,\n        gltf,\n        pbrSpecularGlossiness.diffuseTexture,\n        supportedImageFormats\n      );\n    }\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(pbrSpecularGlossiness.specularGlossinessTexture)) {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(pbrSpecularGlossiness.specularGlossinessTexture)) {\n        specularGlossiness.specularGlossinessTexture = loadTexture(\n          loader,\n          gltf,\n          pbrSpecularGlossiness.specularGlossinessTexture,\n          supportedImageFormats\n        );\n      }\n    }\n    specularGlossiness.diffuseFactor = fromArray(\n      _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z,\n      pbrSpecularGlossiness.diffuseFactor\n    );\n    specularGlossiness.specularFactor = fromArray(\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z,\n      pbrSpecularGlossiness.specularFactor\n    );\n    specularGlossiness.glossinessFactor =\n      pbrSpecularGlossiness.glossinessFactor;\n    material.pbrSpecularGlossiness = pbrSpecularGlossiness;\n  } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(pbrMetallicRoughness)) {\n    var metallicRoughness = new MetallicRoughness();\n    material.metallicRoughness = metallicRoughness;\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(pbrMetallicRoughness.baseColorTexture)) {\n      metallicRoughness.baseColorTexture = loadTexture(\n        loader,\n        gltf,\n        pbrMetallicRoughness.baseColorTexture,\n        supportedImageFormats\n      );\n    }\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(pbrMetallicRoughness.metallicRoughnessTexture)) {\n      metallicRoughness.metallicRoughnessTexture = loadTexture(\n        loader,\n        gltf,\n        pbrMetallicRoughness.metallicRoughnessTexture,\n        supportedImageFormats\n      );\n    }\n    metallicRoughness.baseColorFactor = fromArray(\n      _Core_Cartesian4_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z,\n      pbrMetallicRoughness.baseColorFactor\n    );\n    metallicRoughness.metallicFactor = pbrMetallicRoughness.metallicFactor;\n    metallicRoughness.roughnessFactor = pbrMetallicRoughness.roughnessFactor;\n    material.pbrMetallicRoughness = pbrMetallicRoughness;\n  }\n\n  // Top level textures\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(gltfMaterial.emissiveTexture)) {\n    material.emissiveTexture = loadTexture(\n      loader,\n      gltf,\n      gltfMaterial.emissiveTexture,\n      supportedImageFormats\n    );\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(gltfMaterial.normalTexture)) {\n    material.normalTexture = loadTexture(\n      loader,\n      gltf,\n      gltfMaterial.normalTexture,\n      supportedImageFormats\n    );\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(gltfMaterial.occlusionTexture)) {\n    material.occlusionTexture = loadTexture(\n      loader,\n      gltf,\n      gltfMaterial.occlusionTexture,\n      supportedImageFormats\n    );\n  }\n  material.emissiveFactor = fromArray(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, gltfMaterial.emissiveFactor);\n  material.alphaMode = gltfMaterial.alphaMode;\n  material.alphaCutoff = gltfMaterial.alphaCutoff;\n  material.doubleSided = gltfMaterial.doubleSided;\n\n  return material;\n}\n\nfunction loadFeatureIdAttribute(gltfFeatureIdAttribute) {\n  var featureIdAttribute = new FeatureIdAttribute();\n  var featureIds = gltfFeatureIdAttribute.featureIds;\n  featureIdAttribute.featureTableId = gltfFeatureIdAttribute.featureTable;\n  featureIdAttribute.setIndex = getSetIndex(featureIds.attribute);\n  featureIdAttribute.constant = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(featureIds.constant, 0);\n  featureIdAttribute.divisor = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(featureIds.divisor, 0);\n  return featureIdAttribute;\n}\n\nfunction loadFeatureIdTexture(\n  loader,\n  gltf,\n  gltfFeatureIdTexture,\n  supportedImageFormats\n) {\n  var featureIdTexture = new FeatureIdTexture();\n  var featureIds = gltfFeatureIdTexture.featureIds;\n  var textureInfo = featureIds.texture;\n\n  featureIdTexture.featureTableId = gltfFeatureIdTexture.featureTable;\n  featureIdTexture.textureReader = loadTexture(\n    loader,\n    gltf,\n    textureInfo,\n    supportedImageFormats,\n    _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].NEAREST */ .Z.NEAREST // Feature ID textures require nearest sampling\n  );\n\n  featureIdTexture.textureReader.channels = featureIds.channels;\n\n  return featureIdTexture;\n}\n\nfunction loadMorphTarget(loader, gltf, target) {\n  var morphTarget = new MorphTarget();\n\n  for (var semantic in target) {\n    if (target.hasOwnProperty(semantic)) {\n      var accessorId = target[semantic];\n      morphTarget.attributes.push(\n        // Don\'t pass in draco object since morph targets can\'t be draco compressed\n        loadVertexAttribute(loader, gltf, accessorId, semantic, undefined)\n      );\n    }\n  }\n\n  return morphTarget;\n}\n\nfunction loadPrimitive(\n  loader,\n  gltf,\n  gltfPrimitive,\n  morphWeights,\n  supportedImageFormats\n) {\n  var i;\n\n  var primitive = new Primitive();\n\n  var materialId = gltfPrimitive.material;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(materialId)) {\n    primitive.material = loadMaterial(\n      loader,\n      gltf,\n      gltf.materials[materialId],\n      supportedImageFormats\n    );\n  }\n\n  var extensions = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    gltfPrimitive.extensions,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  );\n  var draco = extensions.KHR_draco_mesh_compression;\n  var featureMetadata = extensions.EXT_feature_metadata;\n\n  var attributes = gltfPrimitive.attributes;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(attributes)) {\n    for (var semantic in attributes) {\n      if (attributes.hasOwnProperty(semantic)) {\n        var accessorId = attributes[semantic];\n        primitive.attributes.push(\n          loadVertexAttribute(loader, gltf, accessorId, semantic, draco)\n        );\n      }\n    }\n  }\n\n  var targets = gltfPrimitive.targets;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(targets)) {\n    var targetsLength = targets.length;\n    for (i = 0; i < targetsLength; ++i) {\n      primitive.morphTargets.push(loadMorphTarget(loader, gltf, targets[i]));\n    }\n    primitive.morphWeights = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(morphWeights)\n      ? morphWeights.slice()\n      : (0,_Core_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(new Array(targetsLength), 0.0);\n  }\n\n  var indices = gltfPrimitive.indices;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(indices)) {\n    primitive.indices = loadIndices(loader, gltf, indices, draco);\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(featureMetadata)) {\n    // Feature ID Attributes\n    var featureIdAttributes = featureMetadata.featureIdAttributes;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(featureIdAttributes)) {\n      var featureIdAttributesLength = featureIdAttributes.length;\n      for (i = 0; i < featureIdAttributesLength; ++i) {\n        primitive.featureIdAttributes.push(\n          loadFeatureIdAttribute(featureIdAttributes[i])\n        );\n      }\n    }\n\n    // Feature ID Textures\n    var featureIdTextures = featureMetadata.featureIdTextures;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(featureIdTextures)) {\n      var featureIdTexturesLength = featureIdTextures.length;\n      for (i = 0; i < featureIdTexturesLength; ++i) {\n        primitive.featureIdTextures.push(\n          loadFeatureIdTexture(\n            loader,\n            gltf,\n            featureIdTextures[i],\n            supportedImageFormats\n          )\n        );\n      }\n    }\n\n    // Feature Textures\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(featureMetadata.featureTextures)) {\n      primitive.featureTextureIds = featureMetadata.featureTextures;\n    }\n  }\n\n  primitive.primitiveType = gltfPrimitive.mode;\n\n  return primitive;\n}\n\nfunction loadInstances(loader, gltf, instancingExtension, frameState) {\n  var instances = new Instances();\n  var attributes = instancingExtension.attributes;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(attributes)) {\n    var hasRotation = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(attributes.ROTATION);\n    var hasTranslationMinMax =\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(attributes.TRANSLATION) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(gltf.accessors[attributes.TRANSLATION].min) &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(gltf.accessors[attributes.TRANSLATION].max);\n    for (var semantic in attributes) {\n      if (attributes.hasOwnProperty(semantic)) {\n        // If the instances have rotations load the attributes as typed arrays\n        // so that instance matrices are computed on the CPU. This avoids the\n        // expensive quaternion -> rotation matrix conversion in the shader.\n        // If the translation accessor does not have a min and max, load the\n        // attributes as typed arrays, so the values can be used for computing\n        // an accurate bounding volume.\n        var loadAsTypedArray =\n          (hasRotation || !hasTranslationMinMax) &&\n          (semantic === _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].TRANSLATION */ .Z.TRANSLATION ||\n            semantic === _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].ROTATION */ .Z.ROTATION ||\n            semantic === _InstanceAttributeSemantic_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].SCALE */ .Z.SCALE);\n\n        var accessorId = attributes[semantic];\n        instances.attributes.push(\n          loadInstancedAttribute(\n            loader,\n            gltf,\n            accessorId,\n            semantic,\n            loadAsTypedArray,\n            frameState\n          )\n        );\n      }\n    }\n  }\n\n  var extensions = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(\n    instancingExtension.extensions,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  );\n  var featureMetadata = extensions.EXT_feature_metadata;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(featureMetadata)) {\n    var featureIdAttributes = featureMetadata.featureIdAttributes;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(featureIdAttributes)) {\n      var featureIdAttributesLength = featureIdAttributes.length;\n      for (var i = 0; i < featureIdAttributesLength; ++i) {\n        instances.featureIdAttributes.push(\n          loadFeatureIdAttribute(featureIdAttributes[i])\n        );\n      }\n    }\n  }\n  return instances;\n}\n\nfunction loadSkin(loader, gltf, gltfSkin, nodes) {\n  var skin = new Skin();\n\n  var jointIds = gltfSkin.joints;\n  var jointsLength = jointIds.length;\n  var joints = new Array(jointsLength);\n  for (var i = 0; i < jointsLength; ++i) {\n    joints[i] = nodes[jointIds[i]];\n  }\n  skin.joints = joints;\n\n  var inverseBindMatricesAccessorId = gltfSkin.inverseBindMatrices;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(inverseBindMatricesAccessorId)) {\n    var accessor = gltf.accessors[inverseBindMatricesAccessorId];\n    var bufferViewId = accessor.bufferView;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(bufferViewId)) {\n      var bufferViewLoader = loadBufferView(loader, gltf, bufferViewId);\n      bufferViewLoader.promise.then(function (bufferViewLoader) {\n        if (loader.isDestroyed()) {\n          return;\n        }\n        var bufferViewTypedArray = bufferViewLoader.typedArray;\n        var accessorTypedArray = getAccessorTypedArray(\n          gltf,\n          accessor,\n          bufferViewTypedArray\n        );\n        var inverseBindMatrices = new Array(jointsLength);\n        for (var i = 0; i < jointsLength; ++i) {\n          inverseBindMatrices[i] = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].unpack */ .Z.unpack(accessorTypedArray, i * 16);\n        }\n        skin.inverseBindMatrices = inverseBindMatrices;\n      });\n    }\n  } else {\n    skin.inverseBindMatrices = (0,_Core_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n      new Array(jointsLength),\n      _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].IDENTITY */ .Z.IDENTITY\n    );\n  }\n\n  return skin;\n}\n\nfunction loadNode(loader, gltf, gltfNode, supportedImageFormats, frameState) {\n  var node = new Node();\n\n  node.matrix = fromArray(_Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, gltfNode.matrix);\n  node.translation = fromArray(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, gltfNode.translation);\n  node.rotation = fromArray(_Core_Quaternion_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, gltfNode.rotation);\n  node.scale = fromArray(_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, gltfNode.scale);\n\n  var meshId = gltfNode.mesh;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(meshId)) {\n    var mesh = gltf.meshes[meshId];\n    var morphWeights = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(gltfNode.weights, mesh.weights);\n    var primitives = mesh.primitives;\n    var primitivesLength = primitives.length;\n    for (var i = 0; i < primitivesLength; ++i) {\n      node.primitives.push(\n        loadPrimitive(\n          loader,\n          gltf,\n          primitives[i],\n          morphWeights,\n          supportedImageFormats\n        )\n      );\n    }\n  }\n\n  var extensions = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(gltfNode.extensions, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var instancingExtension = extensions.EXT_mesh_gpu_instancing;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(instancingExtension)) {\n    node.instances = loadInstances(\n      loader,\n      gltf,\n      instancingExtension,\n      frameState\n    );\n  }\n\n  return node;\n}\n\nfunction loadNodes(loader, gltf, supportedImageFormats, frameState) {\n  var i;\n  var j;\n\n  var nodesLength = gltf.nodes.length;\n  var nodes = new Array(nodesLength);\n  for (i = 0; i < nodesLength; ++i) {\n    nodes[i] = loadNode(\n      loader,\n      gltf,\n      gltf.nodes[i],\n      supportedImageFormats,\n      frameState\n    );\n  }\n\n  for (i = 0; i < nodesLength; ++i) {\n    var childrenNodeIds = gltf.nodes[i].children;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(childrenNodeIds)) {\n      var childrenLength = childrenNodeIds.length;\n      for (j = 0; j < childrenLength; ++j) {\n        nodes[i].children.push(nodes[childrenNodeIds[j]]);\n      }\n    }\n  }\n\n  for (i = 0; i < nodesLength; ++i) {\n    var skinId = gltf.nodes[i].skin;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(skinId)) {\n      nodes[i].skin = loadSkin(loader, gltf, gltf.skins[skinId], nodes);\n    }\n  }\n\n  return nodes;\n}\n\nfunction loadFeatureMetadata(loader, gltf, extension, supportedImageFormats) {\n  var featureMetadataLoader = new _GltfFeatureMetadataLoader_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n    gltf: gltf,\n    extension: extension,\n    gltfResource: loader._gltfResource,\n    baseResource: loader._baseResource,\n    supportedImageFormats: supportedImageFormats,\n    asynchronous: loader._asynchronous,\n  });\n  featureMetadataLoader.load();\n\n  loader._featureMetadataLoader = featureMetadataLoader;\n\n  return featureMetadataLoader;\n}\n\nfunction getSceneNodeIds(gltf) {\n  var nodesIds;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(gltf.scenes) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(gltf.scene)) {\n    nodesIds = gltf.scenes[gltf.scene].nodes;\n  }\n  nodesIds = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(nodesIds, gltf.nodes);\n  nodesIds = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(nodesIds) ? nodesIds : [];\n  return nodesIds;\n}\n\nfunction loadScene(gltf, nodes, upAxis, forwardAxis) {\n  var scene = new Scene();\n  scene.upAxis = upAxis;\n  scene.forwardAxis = forwardAxis;\n  var sceneNodeIds = getSceneNodeIds(gltf);\n  scene.nodes = sceneNodeIds.map(function (sceneNodeId) {\n    return nodes[sceneNodeId];\n  });\n  return scene;\n}\n\nfunction parse(loader, gltf, supportedImageFormats, frameState) {\n  var nodes = loadNodes(loader, gltf, supportedImageFormats, frameState);\n  var upAxis = loader._upAxis;\n  var forwardAxis = loader._forwardAxis;\n  var scene = loadScene(gltf, nodes, upAxis, forwardAxis);\n\n  var components = new Components();\n  components.scene = scene;\n  components.nodes = nodes;\n\n  loader._components = components;\n\n  // Load feature metadata (feature tables and feature textures)\n  var extensions = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(gltf.extensions, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var featureMetadataExtension = extensions.EXT_feature_metadata;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(featureMetadataExtension)) {\n    var featureMetadataLoader = loadFeatureMetadata(\n      loader,\n      gltf,\n      featureMetadataExtension,\n      supportedImageFormats\n    );\n    featureMetadataLoader.promise.then(function (featureMetadataLoader) {\n      if (loader.isDestroyed()) {\n        return;\n      }\n      components.featureMetadata = featureMetadataLoader.featureMetadata;\n    });\n  }\n\n  // Gather promises and reject if any promises fail.\n  var loaders = [];\n  loaders.push.apply(loaders, loader._bufferViewLoaders);\n  loaders.push.apply(loaders, loader._geometryLoaders);\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(loader._featureMetadataLoader)) {\n    loaders.push(loader._featureMetadataLoader);\n  }\n\n  if (!loader._incrementallyLoadTextures) {\n    loaders.push.apply(loaders, loader._textureLoaders);\n  }\n\n  var readyPromises = loaders.map(function (loader) {\n    return loader.promise;\n  });\n\n  // Separate promise will resolve once textures are loaded.\n  var texturePromises = loader._textureLoaders.map(function (loader) {\n    return loader.promise;\n  });\n\n  _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].all */ .Z.all(readyPromises)\n    .then(function () {\n      if (loader.isDestroyed()) {\n        return;\n      }\n      loader._state = GltfLoaderState.PROCESSED;\n    })\n    .otherwise(function (error) {\n      if (loader.isDestroyed()) {\n        return;\n      }\n      handleError(loader, error);\n    });\n\n  _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].all */ .Z.all(texturePromises).then(function () {\n    if (loader.isDestroyed()) {\n      return;\n    }\n    loader._textureState = GltfLoaderState.PROCESSED;\n  });\n}\n\nfunction unloadTextures(loader) {\n  var textureLoaders = loader._textureLoaders;\n  var textureLoadersLength = textureLoaders.length;\n  for (var i = 0; i < textureLoadersLength; ++i) {\n    _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].unload */ .Z.unload(textureLoaders[i]);\n  }\n  loader._textureLoaders.length = 0;\n}\n\nfunction unloadBufferViews(loader) {\n  var bufferViewLoaders = loader._bufferViewLoaders;\n  var bufferViewLoadersLength = bufferViewLoaders.length;\n  for (var i = 0; i < bufferViewLoadersLength; ++i) {\n    _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].unload */ .Z.unload(bufferViewLoaders[i]);\n  }\n  loader._bufferViewLoaders.length = 0;\n}\n\nfunction unloadGeometry(loader) {\n  var geometryLoaders = loader._geometryLoaders;\n  var geometryLoadersLength = geometryLoaders.length;\n  for (var i = 0; i < geometryLoadersLength; ++i) {\n    _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].unload */ .Z.unload(geometryLoaders[i]);\n  }\n  loader._geometryLoaders.length = 0;\n}\n\nfunction unloadFeatureMetadata(loader) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(loader._featureMetadataLoader)) {\n    loader._featureMetadataLoader.destroy();\n    loader._featureMetadataLoader = undefined;\n  }\n}\n\n/**\n * Unloads the resource.\n * @private\n */\nGltfLoader.prototype.unload = function () {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(this._gltfJsonLoader)) {\n    _ResourceCache_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].unload */ .Z.unload(this._gltfJsonLoader);\n  }\n  this._gltfJsonLoader = undefined;\n\n  unloadTextures(this);\n  unloadBufferViews(this);\n  unloadGeometry(this);\n  unloadFeatureMetadata(this);\n\n  this._components = undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6366\n')},61120:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(82982);\n/* harmony import */ var _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(68201);\n/* harmony import */ var _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(87721);\n/* harmony import */ var _Renderer_TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(42246);\n/* harmony import */ var _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(80188);\n/* harmony import */ var _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(88453);\n/* harmony import */ var _ModelComponents_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7896);\n\n\n\n\n\n\n\n\n\n\n\n/**\n * glTF loading utilities.\n *\n * @namespace GltfLoaderUtil\n *\n * @private\n */\nvar GltfLoaderUtil = {};\n\n/**\n * Get the image ID referenced by a texture.\n * <p>\n * When the texture has the EXT_texture_webp extension and the browser supports\n * WebP images the WebP image ID is returned.\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} options.gltf The glTF JSON.\n * @param {Number} options.textureId The texture ID.\n * @param {SupportedImageFormats} options.supportedImageFormats The supported image formats.\n *\n * @returns {Number} The image ID.\n * @private\n */\nGltfLoaderUtil.getImageIdFromTexture = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var gltf = options.gltf;\n  var textureId = options.textureId;\n  var supportedImageFormats = options.supportedImageFormats;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltf", gltf);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number */ .Z.typeOf.number("options.textureId", textureId);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("options.supportedImageFormats", supportedImageFormats);\n  //>>includeEnd(\'debug\');\n\n  var texture = gltf.textures[textureId];\n  var extensions = texture.extensions;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(extensions)) {\n    if (supportedImageFormats.webp && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(extensions.EXT_texture_webp)) {\n      return extensions.EXT_texture_webp.source;\n    } else if (\n      supportedImageFormats.basis &&\n      (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(extensions.KHR_texture_basisu)\n    ) {\n      return extensions.KHR_texture_basisu.source;\n    }\n  }\n  return texture.source;\n};\n\n/**\n * Create a sampler for a texture.\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} options.gltf The glTF JSON.\n * @param {Object} options.textureInfo The texture info object.\n * @param {Boolean} [options.compressedTextureNoMipmap=false] True when the texture is compressed and does not have an embedded mipmap.\n *\n * @returns {Sampler} The sampler.\n * @private\n */\nGltfLoaderUtil.createSampler = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var gltf = options.gltf;\n  var textureInfo = options.textureInfo;\n  var compressedTextureNoMipmap = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.compressedTextureNoMipmap,\n    false\n  );\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("options.gltf", gltf);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("options.textureInfo", textureInfo);\n  //>>includeEnd(\'debug\');\n\n  // Default sampler properties\n  var wrapS = _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].REPEAT */ .Z.REPEAT;\n  var wrapT = _Renderer_TextureWrap_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].REPEAT */ .Z.REPEAT;\n  var minFilter = _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].LINEAR */ .Z.LINEAR;\n  var magFilter = _Renderer_TextureMagnificationFilter_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].LINEAR */ .Z.LINEAR;\n\n  var textureId = textureInfo.index;\n  var texture = gltf.textures[textureId];\n  var samplerId = texture.sampler;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(samplerId)) {\n    var sampler = gltf.samplers[samplerId];\n    wrapS = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(sampler.wrapS, wrapS);\n    wrapT = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(sampler.wrapT, wrapT);\n    minFilter = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(sampler.minFilter, minFilter);\n    magFilter = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(sampler.magFilter, magFilter);\n  }\n\n  var usesTextureTransform = false;\n  var extensions = textureInfo.extensions;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(extensions) && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(extensions.KHR_texture_transform)) {\n    usesTextureTransform = true;\n  }\n\n  if (\n    (compressedTextureNoMipmap || usesTextureTransform) &&\n    minFilter !== _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].LINEAR */ .Z.LINEAR &&\n    minFilter !== _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].NEAREST */ .Z.NEAREST\n  ) {\n    if (\n      minFilter === _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].NEAREST_MIPMAP_NEAREST */ .Z.NEAREST_MIPMAP_NEAREST ||\n      minFilter === _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].NEAREST_MIPMAP_LINEAR */ .Z.NEAREST_MIPMAP_LINEAR\n    ) {\n      minFilter = _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].NEAREST */ .Z.NEAREST;\n    } else {\n      minFilter = _Renderer_TextureMinificationFilter_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].LINEAR */ .Z.LINEAR;\n    }\n  }\n\n  return new _Renderer_Sampler_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z({\n    wrapS: wrapS,\n    wrapT: wrapT,\n    minificationFilter: minFilter,\n    magnificationFilter: magFilter,\n  });\n};\n\nvar defaultScale = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(1.0, 1.0);\n\n/**\n * Create a model texture reader.\n *\n * @param {Object} options Object with the following properties:\n * @param {Object} options.textureInfo The texture info JSON.\n * @param {String} [options.channels] The texture channels to read from.\n * @param {Texture} [options.texture] The texture object.\n *\n * @returns {ModelComponents.TextureReader} The texture reader for this model.\n */\nGltfLoaderUtil.createModelTextureReader = function (options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var textureInfo = options.textureInfo;\n  var channels = options.channels;\n  var texture = options.texture;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Core_Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("options.textureInfo", textureInfo);\n  //>>includeEnd(\'debug\');\n\n  var texCoord = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(textureInfo.texCoord, 0);\n  var transform;\n\n  var textureTransform = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    textureInfo.extensions,\n    _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT\n  ).KHR_texture_transform;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(textureTransform)) {\n    texCoord = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(textureTransform.texCoord, texCoord);\n\n    var offset = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(textureTransform.offset)\n      ? _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(textureTransform.offset)\n      : _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].ZERO */ .Z.ZERO;\n    var rotation = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(textureTransform.rotation, 0.0);\n    var scale = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(textureTransform.scale)\n      ? _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(textureTransform.scale)\n      : defaultScale;\n\n    // glTF assumes UV coordinates start with (0, 0) in the top left corner\n    // (y-down) unlike WebGL which puts (0, 0) in the bottom left corner (y-up).\n    // This means rotations are reversed since the angle from x to y is now\n    // clockwise instead of CCW. Translations and scales are not impacted by\n    // this.\n    rotation = -rotation;\n\n    // prettier-ignore\n    transform = new _Core_Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n        Math.cos(rotation) * scale.x, -Math.sin(rotation) * scale.y, offset.x,\n        Math.sin(rotation) * scale.x, Math.cos(rotation) * scale.y, offset.y,\n        0.0, 0.0, 1.0\n      );\n  }\n\n  var modelTextureReader = new _ModelComponents_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].TextureReader */ .Z.TextureReader();\n  modelTextureReader.texture = texture;\n  modelTextureReader.texCoord = texCoord;\n  modelTextureReader.transform = transform;\n  modelTextureReader.channels = channels;\n\n  return modelTextureReader;\n};\n\n/* harmony default export */ __webpack_exports__["Z"] = (GltfLoaderUtil);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///61120\n')}}]);