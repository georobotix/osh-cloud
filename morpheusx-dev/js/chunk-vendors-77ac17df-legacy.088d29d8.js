"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[8530],{37577:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8379);\n\n\n\n/**\n * Defines a list of commands whose geometry are bound by near and far distances from the camera.\n * @alias FrustumCommands\n * @constructor\n *\n * @param {Number} [near=0.0] The lower bound or closest distance from the camera.\n * @param {Number} [far=0.0] The upper bound or farthest distance from the camera.\n *\n * @private\n */\nfunction FrustumCommands(near, far) {\n  this.near = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(near, 0.0);\n  this.far = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(far, 0.0);\n\n  var numPasses = _Renderer_Pass_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].NUMBER_OF_PASSES */ .Z.NUMBER_OF_PASSES;\n  var commands = new Array(numPasses);\n  var indices = new Array(numPasses);\n\n  for (var i = 0; i < numPasses; ++i) {\n    commands[i] = [];\n    indices[i] = 0;\n  }\n\n  this.commands = commands;\n  this.indices = indices;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (FrustumCommands);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc1NzcuanMiLCJtYXBwaW5ncyI6Ijs7QUFBbUQ7QUFDWjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDBFQUFZO0FBQzFCLGFBQWEsMEVBQVk7O0FBRXpCLGtCQUFrQixvR0FBcUI7QUFDdkM7QUFDQTs7QUFFQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseURBQWUsZUFBZSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL0ZydXN0dW1Db21tYW5kcy5qcz83ZGJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSBcIi4uL0NvcmUvZGVmYXVsdFZhbHVlLmpzXCI7XG5pbXBvcnQgUGFzcyBmcm9tIFwiLi4vUmVuZGVyZXIvUGFzcy5qc1wiO1xuXG4vKipcbiAqIERlZmluZXMgYSBsaXN0IG9mIGNvbW1hbmRzIHdob3NlIGdlb21ldHJ5IGFyZSBib3VuZCBieSBuZWFyIGFuZCBmYXIgZGlzdGFuY2VzIGZyb20gdGhlIGNhbWVyYS5cbiAqIEBhbGlhcyBGcnVzdHVtQ29tbWFuZHNcbiAqIEBjb25zdHJ1Y3RvclxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBbbmVhcj0wLjBdIFRoZSBsb3dlciBib3VuZCBvciBjbG9zZXN0IGRpc3RhbmNlIGZyb20gdGhlIGNhbWVyYS5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbZmFyPTAuMF0gVGhlIHVwcGVyIGJvdW5kIG9yIGZhcnRoZXN0IGRpc3RhbmNlIGZyb20gdGhlIGNhbWVyYS5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBGcnVzdHVtQ29tbWFuZHMobmVhciwgZmFyKSB7XG4gIHRoaXMubmVhciA9IGRlZmF1bHRWYWx1ZShuZWFyLCAwLjApO1xuICB0aGlzLmZhciA9IGRlZmF1bHRWYWx1ZShmYXIsIDAuMCk7XG5cbiAgdmFyIG51bVBhc3NlcyA9IFBhc3MuTlVNQkVSX09GX1BBU1NFUztcbiAgdmFyIGNvbW1hbmRzID0gbmV3IEFycmF5KG51bVBhc3Nlcyk7XG4gIHZhciBpbmRpY2VzID0gbmV3IEFycmF5KG51bVBhc3Nlcyk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1QYXNzZXM7ICsraSkge1xuICAgIGNvbW1hbmRzW2ldID0gW107XG4gICAgaW5kaWNlc1tpXSA9IDA7XG4gIH1cblxuICB0aGlzLmNvbW1hbmRzID0gY29tbWFuZHM7XG4gIHRoaXMuaW5kaWNlcyA9IGluZGljZXM7XG59XG5leHBvcnQgZGVmYXVsdCBGcnVzdHVtQ29tbWFuZHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///37577\n')},16962:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Core_getJsonFromTypedArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12540);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(72248);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9407);\n/* harmony import */ var _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(13222);\n/* harmony import */ var _Cesium3DTileBatchTable_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(84020);\n/* harmony import */ var _Vector3DTileGeometry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(7847);\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Geometry3DTileContent\n * @constructor\n *\n * @private\n */\nfunction Geometry3DTileContent(\n  tileset,\n  tile,\n  resource,\n  arrayBuffer,\n  byteOffset\n) {\n  this._tileset = tileset;\n  this._tile = tile;\n  this._resource = resource;\n  this._geometries = undefined;\n\n  this._contentReadyPromise = undefined;\n  this._readyPromise = _ThirdParty_when_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].defer */ .Z.defer();\n\n  this._batchTable = undefined;\n  this._features = undefined;\n\n  /**\n   * Part of the {@link Cesium3DTileContent} interface.\n   */\n  this.featurePropertiesDirty = false;\n  this._groupMetadata = undefined;\n\n  initialize(this, arrayBuffer, byteOffset);\n}\n\nObject.defineProperties(Geometry3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._batchTable) ? this._batchTable.featuresLength : 0;\n    },\n  },\n\n  pointsLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  trianglesLength: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._geometries)) {\n        return this._geometries.trianglesLength;\n      }\n      return 0;\n    },\n  },\n\n  geometryByteLength: {\n    get: function () {\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._geometries)) {\n        return this._geometries.geometryByteLength;\n      }\n      return 0;\n    },\n  },\n\n  texturesByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  batchTableByteLength: {\n    get: function () {\n      return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._batchTable) ? this._batchTable.memorySizeInBytes : 0;\n    },\n  },\n\n  innerContents: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n  },\n\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n  },\n\n  url: {\n    get: function () {\n      return this._resource.getUrlComponent(true);\n    },\n  },\n\n  batchTable: {\n    get: function () {\n      return this._batchTable;\n    },\n  },\n\n  groupMetadata: {\n    get: function () {\n      return this._groupMetadata;\n    },\n    set: function (value) {\n      this._groupMetadata = value;\n    },\n  },\n});\n\nfunction createColorChangedCallback(content) {\n  return function (batchId, color) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(content._geometries)) {\n      content._geometries.updateCommands(batchId, color);\n    }\n  };\n}\n\nfunction getBatchIds(featureTableJson, featureTableBinary) {\n  var boxBatchIds;\n  var cylinderBatchIds;\n  var ellipsoidBatchIds;\n  var sphereBatchIds;\n  var i;\n\n  var numberOfBoxes = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.BOXES_LENGTH, 0);\n  var numberOfCylinders = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.CYLINDERS_LENGTH, 0);\n  var numberOfEllipsoids = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.ELLIPSOIDS_LENGTH, 0);\n  var numberOfSpheres = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.SPHERES_LENGTH, 0);\n\n  if (numberOfBoxes > 0 && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(featureTableJson.BOX_BATCH_IDS)) {\n    var boxBatchIdsByteOffset =\n      featureTableBinary.byteOffset + featureTableJson.BOX_BATCH_IDS.byteOffset;\n    boxBatchIds = new Uint16Array(\n      featureTableBinary.buffer,\n      boxBatchIdsByteOffset,\n      numberOfBoxes\n    );\n  }\n\n  if (numberOfCylinders > 0 && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(featureTableJson.CYLINDER_BATCH_IDS)) {\n    var cylinderBatchIdsByteOffset =\n      featureTableBinary.byteOffset +\n      featureTableJson.CYLINDER_BATCH_IDS.byteOffset;\n    cylinderBatchIds = new Uint16Array(\n      featureTableBinary.buffer,\n      cylinderBatchIdsByteOffset,\n      numberOfCylinders\n    );\n  }\n\n  if (numberOfEllipsoids > 0 && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(featureTableJson.ELLIPSOID_BATCH_IDS)) {\n    var ellipsoidBatchIdsByteOffset =\n      featureTableBinary.byteOffset +\n      featureTableJson.ELLIPSOID_BATCH_IDS.byteOffset;\n    ellipsoidBatchIds = new Uint16Array(\n      featureTableBinary.buffer,\n      ellipsoidBatchIdsByteOffset,\n      numberOfEllipsoids\n    );\n  }\n\n  if (numberOfSpheres > 0 && (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(featureTableJson.SPHERE_BATCH_IDS)) {\n    var sphereBatchIdsByteOffset =\n      featureTableBinary.byteOffset +\n      featureTableJson.SPHERE_BATCH_IDS.byteOffset;\n    sphereBatchIds = new Uint16Array(\n      featureTableBinary.buffer,\n      sphereBatchIdsByteOffset,\n      numberOfSpheres\n    );\n  }\n\n  var atLeastOneDefined =\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(boxBatchIds) ||\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(cylinderBatchIds) ||\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ellipsoidBatchIds) ||\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(sphereBatchIds);\n  var atLeastOneUndefined =\n    (numberOfBoxes > 0 && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(boxBatchIds)) ||\n    (numberOfCylinders > 0 && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(cylinderBatchIds)) ||\n    (numberOfEllipsoids > 0 && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ellipsoidBatchIds)) ||\n    (numberOfSpheres > 0 && !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(sphereBatchIds));\n\n  if (atLeastOneDefined && atLeastOneUndefined) {\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "If one group of batch ids is defined, then all batch ids must be defined."\n    );\n  }\n\n  var allUndefinedBatchIds =\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(boxBatchIds) &&\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(cylinderBatchIds) &&\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ellipsoidBatchIds) &&\n    !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(sphereBatchIds);\n  if (allUndefinedBatchIds) {\n    var id = 0;\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(boxBatchIds) && numberOfBoxes > 0) {\n      boxBatchIds = new Uint16Array(numberOfBoxes);\n      for (i = 0; i < numberOfBoxes; ++i) {\n        boxBatchIds[i] = id++;\n      }\n    }\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(cylinderBatchIds) && numberOfCylinders > 0) {\n      cylinderBatchIds = new Uint16Array(numberOfCylinders);\n      for (i = 0; i < numberOfCylinders; ++i) {\n        cylinderBatchIds[i] = id++;\n      }\n    }\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(ellipsoidBatchIds) && numberOfEllipsoids > 0) {\n      ellipsoidBatchIds = new Uint16Array(numberOfEllipsoids);\n      for (i = 0; i < numberOfEllipsoids; ++i) {\n        ellipsoidBatchIds[i] = id++;\n      }\n    }\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(sphereBatchIds) && numberOfSpheres > 0) {\n      sphereBatchIds = new Uint16Array(numberOfSpheres);\n      for (i = 0; i < numberOfSpheres; ++i) {\n        sphereBatchIds[i] = id++;\n      }\n    }\n  }\n\n  return {\n    boxes: boxBatchIds,\n    cylinders: cylinderBatchIds,\n    ellipsoids: ellipsoidBatchIds,\n    spheres: sphereBatchIds,\n  };\n}\n\nvar sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT;\n\nfunction initialize(content, arrayBuffer, byteOffset) {\n  byteOffset = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(byteOffset, 0);\n\n  var uint8Array = new Uint8Array(arrayBuffer);\n  var view = new DataView(arrayBuffer);\n  byteOffset += sizeOfUint32; // Skip magic number\n\n  var version = view.getUint32(byteOffset, true);\n  if (version !== 1) {\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "Only Geometry tile version 1 is supported.  Version " +\n        version +\n        " is not."\n    );\n  }\n  byteOffset += sizeOfUint32;\n\n  var byteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  if (byteLength === 0) {\n    content._readyPromise.resolve(content);\n    return;\n  }\n\n  var featureTableJSONByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  if (featureTableJSONByteLength === 0) {\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z(\n      "Feature table must have a byte length greater than zero"\n    );\n  }\n\n  var featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var batchTableJSONByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  var featureTableJson = (0,_Core_getJsonFromTypedArray_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    uint8Array,\n    byteOffset,\n    featureTableJSONByteLength\n  );\n  byteOffset += featureTableJSONByteLength;\n\n  var featureTableBinary = new Uint8Array(\n    arrayBuffer,\n    byteOffset,\n    featureTableBinaryByteLength\n  );\n  byteOffset += featureTableBinaryByteLength;\n\n  var batchTableJson;\n  var batchTableBinary;\n  if (batchTableJSONByteLength > 0) {\n    // PERFORMANCE_IDEA: is it possible to allocate this on-demand?  Perhaps keep the\n    // arraybuffer/string compressed in memory and then decompress it when it is first accessed.\n    //\n    // We could also make another request for it, but that would make the property set/get\n    // API async, and would double the number of numbers in some cases.\n    batchTableJson = (0,_Core_getJsonFromTypedArray_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n      uint8Array,\n      byteOffset,\n      batchTableJSONByteLength\n    );\n    byteOffset += batchTableJSONByteLength;\n\n    if (batchTableBinaryByteLength > 0) {\n      // Has a batch table binary\n      batchTableBinary = new Uint8Array(\n        arrayBuffer,\n        byteOffset,\n        batchTableBinaryByteLength\n      );\n      // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n      batchTableBinary = new Uint8Array(batchTableBinary);\n    }\n  }\n\n  var numberOfBoxes = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.BOXES_LENGTH, 0);\n  var numberOfCylinders = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.CYLINDERS_LENGTH, 0);\n  var numberOfEllipsoids = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.ELLIPSOIDS_LENGTH, 0);\n  var numberOfSpheres = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(featureTableJson.SPHERES_LENGTH, 0);\n\n  var totalPrimitives =\n    numberOfBoxes + numberOfCylinders + numberOfEllipsoids + numberOfSpheres;\n\n  var batchTable = new _Cesium3DTileBatchTable_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z(\n    content,\n    totalPrimitives,\n    batchTableJson,\n    batchTableBinary,\n    createColorChangedCallback(content)\n  );\n  content._batchTable = batchTable;\n\n  if (totalPrimitives === 0) {\n    return;\n  }\n\n  var modelMatrix = content.tile.computedTransform;\n\n  var center;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(featureTableJson.RTC_CENTER)) {\n    center = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].unpack */ .Z.unpack(featureTableJson.RTC_CENTER);\n    _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].multiplyByPoint */ .Z.multiplyByPoint(modelMatrix, center, center);\n  }\n\n  var batchIds = getBatchIds(featureTableJson, featureTableBinary);\n\n  if (\n    numberOfBoxes > 0 ||\n    numberOfCylinders > 0 ||\n    numberOfEllipsoids > 0 ||\n    numberOfSpheres > 0\n  ) {\n    var boxes;\n    var cylinders;\n    var ellipsoids;\n    var spheres;\n\n    if (numberOfBoxes > 0) {\n      var boxesByteOffset =\n        featureTableBinary.byteOffset + featureTableJson.BOXES.byteOffset;\n      boxes = new Float32Array(\n        featureTableBinary.buffer,\n        boxesByteOffset,\n        _Vector3DTileGeometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedBoxLength */ .Z.packedBoxLength * numberOfBoxes\n      );\n    }\n\n    if (numberOfCylinders > 0) {\n      var cylindersByteOffset =\n        featureTableBinary.byteOffset + featureTableJson.CYLINDERS.byteOffset;\n      cylinders = new Float32Array(\n        featureTableBinary.buffer,\n        cylindersByteOffset,\n        _Vector3DTileGeometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedCylinderLength */ .Z.packedCylinderLength * numberOfCylinders\n      );\n    }\n\n    if (numberOfEllipsoids > 0) {\n      var ellipsoidsByteOffset =\n        featureTableBinary.byteOffset + featureTableJson.ELLIPSOIDS.byteOffset;\n      ellipsoids = new Float32Array(\n        featureTableBinary.buffer,\n        ellipsoidsByteOffset,\n        _Vector3DTileGeometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedEllipsoidLength */ .Z.packedEllipsoidLength * numberOfEllipsoids\n      );\n    }\n\n    if (numberOfSpheres > 0) {\n      var spheresByteOffset =\n        featureTableBinary.byteOffset + featureTableJson.SPHERES.byteOffset;\n      spheres = new Float32Array(\n        featureTableBinary.buffer,\n        spheresByteOffset,\n        _Vector3DTileGeometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedSphereLength */ .Z.packedSphereLength * numberOfSpheres\n      );\n    }\n\n    content._geometries = new _Vector3DTileGeometry_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n      boxes: boxes,\n      boxBatchIds: batchIds.boxes,\n      cylinders: cylinders,\n      cylinderBatchIds: batchIds.cylinders,\n      ellipsoids: ellipsoids,\n      ellipsoidBatchIds: batchIds.ellipsoids,\n      spheres: spheres,\n      sphereBatchIds: batchIds.spheres,\n      center: center,\n      modelMatrix: modelMatrix,\n      batchTable: batchTable,\n      boundingVolume: content.tile.boundingVolume.boundingVolume,\n    });\n  }\n}\n\nfunction createFeatures(content) {\n  var featuresLength = content.featuresLength;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(content._features) && featuresLength > 0) {\n    var features = new Array(featuresLength);\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(content._geometries)) {\n      content._geometries.createFeatures(content, features);\n    }\n    content._features = features;\n  }\n}\n\nGeometry3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return this._batchTable.hasProperty(batchId, name);\n};\n\nGeometry3DTileContent.prototype.getFeature = function (batchId) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  var featuresLength = this.featuresLength;\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(batchId) || batchId < 0 || batchId >= featuresLength) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(\n      "batchId is required and between zero and featuresLength - 1 (" +\n        (featuresLength - 1) +\n        ")."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  createFeatures(this);\n  return this._features[batchId];\n};\n\nGeometry3DTileContent.prototype.applyDebugSettings = function (enabled, color) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._geometries)) {\n    this._geometries.applyDebugSettings(enabled, color);\n  }\n};\n\nGeometry3DTileContent.prototype.applyStyle = function (style) {\n  createFeatures(this);\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._geometries)) {\n    this._geometries.applyStyle(style, this._features);\n  }\n};\n\nGeometry3DTileContent.prototype.update = function (tileset, frameState) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._geometries)) {\n    this._geometries.classificationType = this._tileset.classificationType;\n    this._geometries.debugWireframe = this._tileset.debugWireframe;\n    this._geometries.update(frameState);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._batchTable) && this._geometries._ready) {\n    this._batchTable.update(tileset, frameState);\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(this._contentReadyPromise)) {\n    var that = this;\n    this._contentReadyPromise = this._geometries.readyPromise.then(function () {\n      that._readyPromise.resolve(that);\n    });\n  }\n};\n\nGeometry3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nGeometry3DTileContent.prototype.destroy = function () {\n  this._geometries = this._geometries && this._geometries.destroy();\n  this._batchTable = this._batchTable && this._batchTable.destroy();\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Geometry3DTileContent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16962\n')},46867:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51688);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9407);\n/* harmony import */ var _ImageryLayerFeatureInfo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(93855);\n\n\n\n\n\n\n/**\n * Describes the format in which to request GetFeatureInfo from a Web Map Service (WMS) server.\n *\n * @alias GetFeatureInfoFormat\n * @constructor\n *\n * @param {String} type The type of response to expect from a GetFeatureInfo request.  Valid\n *        values are \'json\', \'xml\', \'html\', or \'text\'.\n * @param {String} [format] The info format to request from the WMS server.  This is usually a\n *        MIME type such as \'application/json\' or text/xml\'.  If this parameter is not specified, the provider will request \'json\'\n *        using \'application/json\', \'xml\' using \'text/xml\', \'html\' using \'text/html\', and \'text\' using \'text/plain\'.\n * @param {Function} [callback] A function to invoke with the GetFeatureInfo response from the WMS server\n *        in order to produce an array of picked {@link ImageryLayerFeatureInfo} instances.  If this parameter is not specified,\n *        a default function for the type of response is used.\n */\nfunction GetFeatureInfoFormat(type, format, callback) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(type)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("type is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  this.type = type;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(format)) {\n    if (type === "json") {\n      format = "application/json";\n    } else if (type === "xml") {\n      format = "text/xml";\n    } else if (type === "html") {\n      format = "text/html";\n    } else if (type === "text") {\n      format = "text/plain";\n    }\n    //>>includeStart(\'debug\', pragmas.debug);\n    else {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n        \'format is required when type is not "json", "xml", "html", or "text".\'\n      );\n    }\n    //>>includeEnd(\'debug\');\n  }\n\n  this.format = format;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(callback)) {\n    if (type === "json") {\n      callback = geoJsonToFeatureInfo;\n    } else if (type === "xml") {\n      callback = xmlToFeatureInfo;\n    } else if (type === "html") {\n      callback = textToFeatureInfo;\n    } else if (type === "text") {\n      callback = textToFeatureInfo;\n    }\n    //>>includeStart(\'debug\', pragmas.debug);\n    else {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(\n        \'callback is required when type is not "json", "xml", "html", or "text".\'\n      );\n    }\n    //>>includeEnd(\'debug\');\n  }\n\n  this.callback = callback;\n}\n\nfunction geoJsonToFeatureInfo(json) {\n  var result = [];\n\n  var features = json.features;\n  for (var i = 0; i < features.length; ++i) {\n    var feature = features[i];\n\n    var featureInfo = new _ImageryLayerFeatureInfo_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n    featureInfo.data = feature;\n    featureInfo.properties = feature.properties;\n    featureInfo.configureNameFromProperties(feature.properties);\n    featureInfo.configureDescriptionFromProperties(feature.properties);\n\n    // If this is a point feature, use the coordinates of the point.\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(feature.geometry) && feature.geometry.type === "Point") {\n      var longitude = feature.geometry.coordinates[0];\n      var latitude = feature.geometry.coordinates[1];\n      featureInfo.position = _Core_Cartographic_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromDegrees */ .Z.fromDegrees(longitude, latitude);\n    }\n\n    result.push(featureInfo);\n  }\n\n  return result;\n}\n\nvar mapInfoMxpNamespace = "http://www.mapinfo.com/mxp";\nvar esriWmsNamespace = "http://www.esri.com/wms";\nvar wfsNamespace = "http://www.opengis.net/wfs";\nvar gmlNamespace = "http://www.opengis.net/gml";\n\nfunction xmlToFeatureInfo(xml) {\n  var documentElement = xml.documentElement;\n  if (\n    documentElement.localName === "MultiFeatureCollection" &&\n    documentElement.namespaceURI === mapInfoMxpNamespace\n  ) {\n    // This looks like a MapInfo MXP response\n    return mapInfoXmlToFeatureInfo(xml);\n  } else if (\n    documentElement.localName === "FeatureInfoResponse" &&\n    documentElement.namespaceURI === esriWmsNamespace\n  ) {\n    // This looks like an Esri WMS response\n    return esriXmlToFeatureInfo(xml);\n  } else if (\n    documentElement.localName === "FeatureCollection" &&\n    documentElement.namespaceURI === wfsNamespace\n  ) {\n    // This looks like a WFS/GML response.\n    return gmlToFeatureInfo(xml);\n  } else if (documentElement.localName === "ServiceExceptionReport") {\n    // This looks like a WMS server error, so no features picked.\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      new XMLSerializer().serializeToString(documentElement)\n    );\n  } else if (documentElement.localName === "msGMLOutput") {\n    return msGmlToFeatureInfo(xml);\n  } else {\n    // Unknown response type, so just dump the XML itself into the description.\n    return unknownXmlToFeatureInfo(xml);\n  }\n}\n\nfunction mapInfoXmlToFeatureInfo(xml) {\n  var result = [];\n\n  var multiFeatureCollection = xml.documentElement;\n\n  var features = multiFeatureCollection.getElementsByTagNameNS(\n    mapInfoMxpNamespace,\n    "Feature"\n  );\n  for (var featureIndex = 0; featureIndex < features.length; ++featureIndex) {\n    var feature = features[featureIndex];\n\n    var properties = {};\n\n    var propertyElements = feature.getElementsByTagNameNS(\n      mapInfoMxpNamespace,\n      "Val"\n    );\n    for (\n      var propertyIndex = 0;\n      propertyIndex < propertyElements.length;\n      ++propertyIndex\n    ) {\n      var propertyElement = propertyElements[propertyIndex];\n      if (propertyElement.hasAttribute("ref")) {\n        var name = propertyElement.getAttribute("ref");\n        var value = propertyElement.textContent.trim();\n        properties[name] = value;\n      }\n    }\n\n    var featureInfo = new _ImageryLayerFeatureInfo_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n    featureInfo.data = feature;\n    featureInfo.properties = properties;\n    featureInfo.configureNameFromProperties(properties);\n    featureInfo.configureDescriptionFromProperties(properties);\n    result.push(featureInfo);\n  }\n\n  return result;\n}\n\nfunction esriXmlToFeatureInfo(xml) {\n  var featureInfoResponse = xml.documentElement;\n  var result = [];\n  var properties;\n\n  var features = featureInfoResponse.getElementsByTagNameNS("*", "FIELDS");\n  if (features.length > 0) {\n    // Standard esri format\n    for (var featureIndex = 0; featureIndex < features.length; ++featureIndex) {\n      var feature = features[featureIndex];\n\n      properties = {};\n\n      var propertyAttributes = feature.attributes;\n      for (\n        var attributeIndex = 0;\n        attributeIndex < propertyAttributes.length;\n        ++attributeIndex\n      ) {\n        var attribute = propertyAttributes[attributeIndex];\n        properties[attribute.name] = attribute.value;\n      }\n\n      result.push(\n        imageryLayerFeatureInfoFromDataAndProperties(feature, properties)\n      );\n    }\n  } else {\n    // Thredds format -- looks like esri, but instead of containing FIELDS, contains FeatureInfo element\n    var featureInfoElements = featureInfoResponse.getElementsByTagNameNS(\n      "*",\n      "FeatureInfo"\n    );\n    for (\n      var featureInfoElementIndex = 0;\n      featureInfoElementIndex < featureInfoElements.length;\n      ++featureInfoElementIndex\n    ) {\n      var featureInfoElement = featureInfoElements[featureInfoElementIndex];\n\n      properties = {};\n\n      // node.children is not supported in IE9-11, so use childNodes and check that child.nodeType is an element\n      var featureInfoChildren = featureInfoElement.childNodes;\n      for (\n        var childIndex = 0;\n        childIndex < featureInfoChildren.length;\n        ++childIndex\n      ) {\n        var child = featureInfoChildren[childIndex];\n        if (child.nodeType === Node.ELEMENT_NODE) {\n          properties[child.localName] = child.textContent;\n        }\n      }\n\n      result.push(\n        imageryLayerFeatureInfoFromDataAndProperties(\n          featureInfoElement,\n          properties\n        )\n      );\n    }\n  }\n\n  return result;\n}\n\nfunction gmlToFeatureInfo(xml) {\n  var result = [];\n\n  var featureCollection = xml.documentElement;\n\n  var featureMembers = featureCollection.getElementsByTagNameNS(\n    gmlNamespace,\n    "featureMember"\n  );\n  for (\n    var featureIndex = 0;\n    featureIndex < featureMembers.length;\n    ++featureIndex\n  ) {\n    var featureMember = featureMembers[featureIndex];\n\n    var properties = {};\n    getGmlPropertiesRecursively(featureMember, properties);\n    result.push(\n      imageryLayerFeatureInfoFromDataAndProperties(featureMember, properties)\n    );\n  }\n\n  return result;\n}\n\n// msGmlToFeatureInfo is similar to gmlToFeatureInfo, but assumes different XML structure\n// eg. <msGMLOutput> <ABC_layer> <ABC_feature> <foo>bar</foo> ... </ABC_feature> </ABC_layer> </msGMLOutput>\n\nfunction msGmlToFeatureInfo(xml) {\n  var result = [];\n\n  // Find the first child. Except for IE, this would work:\n  // var layer = xml.documentElement.children[0];\n  var layer;\n  var children = xml.documentElement.childNodes;\n  for (var i = 0; i < children.length; i++) {\n    if (children[i].nodeType === Node.ELEMENT_NODE) {\n      layer = children[i];\n      break;\n    }\n  }\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(layer)) {\n    throw new _Core_RuntimeError_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z(\n      "Unable to find first child of the feature info xml document"\n    );\n  }\n  var featureMembers = layer.childNodes;\n  for (\n    var featureIndex = 0;\n    featureIndex < featureMembers.length;\n    ++featureIndex\n  ) {\n    var featureMember = featureMembers[featureIndex];\n    if (featureMember.nodeType === Node.ELEMENT_NODE) {\n      var properties = {};\n      getGmlPropertiesRecursively(featureMember, properties);\n      result.push(\n        imageryLayerFeatureInfoFromDataAndProperties(featureMember, properties)\n      );\n    }\n  }\n\n  return result;\n}\n\nfunction getGmlPropertiesRecursively(gmlNode, properties) {\n  var isSingleValue = true;\n\n  for (var i = 0; i < gmlNode.childNodes.length; ++i) {\n    var child = gmlNode.childNodes[i];\n\n    if (child.nodeType === Node.ELEMENT_NODE) {\n      isSingleValue = false;\n    }\n\n    if (\n      child.localName === "Point" ||\n      child.localName === "LineString" ||\n      child.localName === "Polygon" ||\n      child.localName === "boundedBy"\n    ) {\n      continue;\n    }\n\n    if (\n      child.hasChildNodes() &&\n      getGmlPropertiesRecursively(child, properties)\n    ) {\n      properties[child.localName] = child.textContent;\n    }\n  }\n\n  return isSingleValue;\n}\n\nfunction imageryLayerFeatureInfoFromDataAndProperties(data, properties) {\n  var featureInfo = new _ImageryLayerFeatureInfo_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n  featureInfo.data = data;\n  featureInfo.properties = properties;\n  featureInfo.configureNameFromProperties(properties);\n  featureInfo.configureDescriptionFromProperties(properties);\n  return featureInfo;\n}\n\nfunction unknownXmlToFeatureInfo(xml) {\n  var xmlText = new XMLSerializer().serializeToString(xml);\n\n  var element = document.createElement("div");\n  var pre = document.createElement("pre");\n  pre.textContent = xmlText;\n  element.appendChild(pre);\n\n  var featureInfo = new _ImageryLayerFeatureInfo_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n  featureInfo.data = xml;\n  featureInfo.description = element.innerHTML;\n  return [featureInfo];\n}\n\nvar emptyBodyRegex = /<body>\\s*<\\/body>/im;\nvar wmsServiceExceptionReportRegex = /<ServiceExceptionReport([\\s\\S]*)<\\/ServiceExceptionReport>/im;\nvar titleRegex = /<title>([\\s\\S]*)<\\/title>/im;\n\nfunction textToFeatureInfo(text) {\n  // If the text is HTML and it has an empty body tag, assume it means no features were found.\n  if (emptyBodyRegex.test(text)) {\n    return undefined;\n  }\n\n  // If this is a WMS exception report, treat it as "no features found" rather than showing\n  // bogus feature info.\n  if (wmsServiceExceptionReportRegex.test(text)) {\n    return undefined;\n  }\n\n  // If the text has a <title> element, use it as the name.\n  var name;\n  var title = titleRegex.exec(text);\n  if (title && title.length > 1) {\n    name = title[1];\n  }\n\n  var featureInfo = new _ImageryLayerFeatureInfo_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n  featureInfo.name = name;\n  featureInfo.description = text;\n  featureInfo.data = text;\n  return [featureInfo];\n}\n/* harmony default export */ __webpack_exports__["Z"] = (GetFeatureInfoFormat);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///46867\n')}}]);