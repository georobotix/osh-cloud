"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[846],{66553:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n\n\n\n/**\n * Contains functions for checking that supplied arguments are of a specified type\n * or meet specified conditions\n * @private\n */\nvar Check = {};\n\n/**\n * Contains type checking functions, all using the typeof operator\n */\nCheck.typeOf = {};\n\nfunction getUndefinedErrorMessage(name) {\n  return name + " is required, actual value was undefined";\n}\n\nfunction getFailedTypeErrorMessage(actual, expected, name) {\n  return (\n    "Expected " +\n    name +\n    " to be typeof " +\n    expected +\n    ", actual typeof was " +\n    actual\n  );\n}\n\n/**\n * Throws if test is not defined\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value that is to be checked\n * @exception {DeveloperError} test must be defined\n */\nCheck.defined = function (name, test) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(test)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(getUndefinedErrorMessage(name));\n  }\n};\n\n/**\n * Throws if test is not typeof \'function\'\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @exception {DeveloperError} test must be typeof \'function\'\n */\nCheck.typeOf.func = function (name, test) {\n  if (typeof test !== "function") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      getFailedTypeErrorMessage(typeof test, "function", name)\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'string\'\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @exception {DeveloperError} test must be typeof \'string\'\n */\nCheck.typeOf.string = function (name, test) {\n  if (typeof test !== "string") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      getFailedTypeErrorMessage(typeof test, "string", name)\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'number\'\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @exception {DeveloperError} test must be typeof \'number\'\n */\nCheck.typeOf.number = function (name, test) {\n  if (typeof test !== "number") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      getFailedTypeErrorMessage(typeof test, "number", name)\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'number\' and less than limit\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @param {Number} limit The limit value to compare against\n * @exception {DeveloperError} test must be typeof \'number\' and less than limit\n */\nCheck.typeOf.number.lessThan = function (name, test, limit) {\n  Check.typeOf.number(name, test);\n  if (test >= limit) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      "Expected " +\n        name +\n        " to be less than " +\n        limit +\n        ", actual value was " +\n        test\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'number\' and less than or equal to limit\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @param {Number} limit The limit value to compare against\n * @exception {DeveloperError} test must be typeof \'number\' and less than or equal to limit\n */\nCheck.typeOf.number.lessThanOrEquals = function (name, test, limit) {\n  Check.typeOf.number(name, test);\n  if (test > limit) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      "Expected " +\n        name +\n        " to be less than or equal to " +\n        limit +\n        ", actual value was " +\n        test\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'number\' and greater than limit\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @param {Number} limit The limit value to compare against\n * @exception {DeveloperError} test must be typeof \'number\' and greater than limit\n */\nCheck.typeOf.number.greaterThan = function (name, test, limit) {\n  Check.typeOf.number(name, test);\n  if (test <= limit) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      "Expected " +\n        name +\n        " to be greater than " +\n        limit +\n        ", actual value was " +\n        test\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'number\' and greater than or equal to limit\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @param {Number} limit The limit value to compare against\n * @exception {DeveloperError} test must be typeof \'number\' and greater than or equal to limit\n */\nCheck.typeOf.number.greaterThanOrEquals = function (name, test, limit) {\n  Check.typeOf.number(name, test);\n  if (test < limit) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      "Expected " +\n        name +\n        " to be greater than or equal to " +\n        limit +\n        ", actual value was " +\n        test\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'object\'\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @exception {DeveloperError} test must be typeof \'object\'\n */\nCheck.typeOf.object = function (name, test) {\n  if (typeof test !== "object") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      getFailedTypeErrorMessage(typeof test, "object", name)\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'boolean\'\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @exception {DeveloperError} test must be typeof \'boolean\'\n */\nCheck.typeOf.bool = function (name, test) {\n  if (typeof test !== "boolean") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      getFailedTypeErrorMessage(typeof test, "boolean", name)\n    );\n  }\n};\n\n/**\n * Throws if test is not typeof \'bigint\'\n *\n * @param {String} name The name of the variable being tested\n * @param {*} test The value to test\n * @exception {DeveloperError} test must be typeof \'bigint\'\n */\nCheck.typeOf.bigint = function (name, test) {\n  if (typeof test !== "bigint") {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      getFailedTypeErrorMessage(typeof test, "bigint", name)\n    );\n  }\n};\n\n/**\n * Throws if test1 and test2 is not typeof \'number\' and not equal in value\n *\n * @param {String} name1 The name of the first variable being tested\n * @param {String} name2 The name of the second variable being tested against\n * @param {*} test1 The value to test\n * @param {*} test2 The value to test against\n * @exception {DeveloperError} test1 and test2 should be type of \'number\' and be equal in value\n */\nCheck.typeOf.number.equals = function (name1, name2, test1, test2) {\n  Check.typeOf.number(name1, test1);\n  Check.typeOf.number(name2, test2);\n  if (test1 !== test2) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(\n      name1 +\n        " must be equal to " +\n        name2 +\n        ", the actual values are " +\n        test1 +\n        " and " +\n        test2\n    );\n  }\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Check);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjY1NTMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBbUM7QUFDYzs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxHQUFHO0FBQ2QsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLFdBQVcsUUFBUTtBQUNuQixlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxXQUFXLFFBQVE7QUFDbkIsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxHQUFHO0FBQ2QsV0FBVyxRQUFRO0FBQ25CLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtRUFBYztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkLFdBQVcsUUFBUTtBQUNuQixlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZCxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUVBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBZSxLQUFLLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9DaGVjay5qcz9mZjk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcbmltcG9ydCBEZXZlbG9wZXJFcnJvciBmcm9tIFwiLi9EZXZlbG9wZXJFcnJvci5qc1wiO1xuXG4vKipcbiAqIENvbnRhaW5zIGZ1bmN0aW9ucyBmb3IgY2hlY2tpbmcgdGhhdCBzdXBwbGllZCBhcmd1bWVudHMgYXJlIG9mIGEgc3BlY2lmaWVkIHR5cGVcbiAqIG9yIG1lZXQgc3BlY2lmaWVkIGNvbmRpdGlvbnNcbiAqIEBwcml2YXRlXG4gKi9cbnZhciBDaGVjayA9IHt9O1xuXG4vKipcbiAqIENvbnRhaW5zIHR5cGUgY2hlY2tpbmcgZnVuY3Rpb25zLCBhbGwgdXNpbmcgdGhlIHR5cGVvZiBvcGVyYXRvclxuICovXG5DaGVjay50eXBlT2YgPSB7fTtcblxuZnVuY3Rpb24gZ2V0VW5kZWZpbmVkRXJyb3JNZXNzYWdlKG5hbWUpIHtcbiAgcmV0dXJuIG5hbWUgKyBcIiBpcyByZXF1aXJlZCwgYWN0dWFsIHZhbHVlIHdhcyB1bmRlZmluZWRcIjtcbn1cblxuZnVuY3Rpb24gZ2V0RmFpbGVkVHlwZUVycm9yTWVzc2FnZShhY3R1YWwsIGV4cGVjdGVkLCBuYW1lKSB7XG4gIHJldHVybiAoXG4gICAgXCJFeHBlY3RlZCBcIiArXG4gICAgbmFtZSArXG4gICAgXCIgdG8gYmUgdHlwZW9mIFwiICtcbiAgICBleHBlY3RlZCArXG4gICAgXCIsIGFjdHVhbCB0eXBlb2Ygd2FzIFwiICtcbiAgICBhY3R1YWxcbiAgKTtcbn1cblxuLyoqXG4gKiBUaHJvd3MgaWYgdGVzdCBpcyBub3QgZGVmaW5lZFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSB2YXJpYWJsZSBiZWluZyB0ZXN0ZWRcbiAqIEBwYXJhbSB7Kn0gdGVzdCBUaGUgdmFsdWUgdGhhdCBpcyB0byBiZSBjaGVja2VkXG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gdGVzdCBtdXN0IGJlIGRlZmluZWRcbiAqL1xuQ2hlY2suZGVmaW5lZCA9IGZ1bmN0aW9uIChuYW1lLCB0ZXN0KSB7XG4gIGlmICghZGVmaW5lZCh0ZXN0KSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihnZXRVbmRlZmluZWRFcnJvck1lc3NhZ2UobmFtZSkpO1xuICB9XG59O1xuXG4vKipcbiAqIFRocm93cyBpZiB0ZXN0IGlzIG5vdCB0eXBlb2YgJ2Z1bmN0aW9uJ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSB2YXJpYWJsZSBiZWluZyB0ZXN0ZWRcbiAqIEBwYXJhbSB7Kn0gdGVzdCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IHRlc3QgbXVzdCBiZSB0eXBlb2YgJ2Z1bmN0aW9uJ1xuICovXG5DaGVjay50eXBlT2YuZnVuYyA9IGZ1bmN0aW9uIChuYW1lLCB0ZXN0KSB7XG4gIGlmICh0eXBlb2YgdGVzdCAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFxuICAgICAgZ2V0RmFpbGVkVHlwZUVycm9yTWVzc2FnZSh0eXBlb2YgdGVzdCwgXCJmdW5jdGlvblwiLCBuYW1lKVxuICAgICk7XG4gIH1cbn07XG5cbi8qKlxuICogVGhyb3dzIGlmIHRlc3QgaXMgbm90IHR5cGVvZiAnc3RyaW5nJ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSB2YXJpYWJsZSBiZWluZyB0ZXN0ZWRcbiAqIEBwYXJhbSB7Kn0gdGVzdCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IHRlc3QgbXVzdCBiZSB0eXBlb2YgJ3N0cmluZydcbiAqL1xuQ2hlY2sudHlwZU9mLnN0cmluZyA9IGZ1bmN0aW9uIChuYW1lLCB0ZXN0KSB7XG4gIGlmICh0eXBlb2YgdGVzdCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIGdldEZhaWxlZFR5cGVFcnJvck1lc3NhZ2UodHlwZW9mIHRlc3QsIFwic3RyaW5nXCIsIG5hbWUpXG4gICAgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBUaHJvd3MgaWYgdGVzdCBpcyBub3QgdHlwZW9mICdudW1iZXInXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgVGhlIG5hbWUgb2YgdGhlIHZhcmlhYmxlIGJlaW5nIHRlc3RlZFxuICogQHBhcmFtIHsqfSB0ZXN0IFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gdGVzdCBtdXN0IGJlIHR5cGVvZiAnbnVtYmVyJ1xuICovXG5DaGVjay50eXBlT2YubnVtYmVyID0gZnVuY3Rpb24gKG5hbWUsIHRlc3QpIHtcbiAgaWYgKHR5cGVvZiB0ZXN0ICE9PSBcIm51bWJlclwiKSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFxuICAgICAgZ2V0RmFpbGVkVHlwZUVycm9yTWVzc2FnZSh0eXBlb2YgdGVzdCwgXCJudW1iZXJcIiwgbmFtZSlcbiAgICApO1xuICB9XG59O1xuXG4vKipcbiAqIFRocm93cyBpZiB0ZXN0IGlzIG5vdCB0eXBlb2YgJ251bWJlcicgYW5kIGxlc3MgdGhhbiBsaW1pdFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSB2YXJpYWJsZSBiZWluZyB0ZXN0ZWRcbiAqIEBwYXJhbSB7Kn0gdGVzdCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHBhcmFtIHtOdW1iZXJ9IGxpbWl0IFRoZSBsaW1pdCB2YWx1ZSB0byBjb21wYXJlIGFnYWluc3RcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSB0ZXN0IG11c3QgYmUgdHlwZW9mICdudW1iZXInIGFuZCBsZXNzIHRoYW4gbGltaXRcbiAqL1xuQ2hlY2sudHlwZU9mLm51bWJlci5sZXNzVGhhbiA9IGZ1bmN0aW9uIChuYW1lLCB0ZXN0LCBsaW1pdCkge1xuICBDaGVjay50eXBlT2YubnVtYmVyKG5hbWUsIHRlc3QpO1xuICBpZiAodGVzdCA+PSBsaW1pdCkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIFwiRXhwZWN0ZWQgXCIgK1xuICAgICAgICBuYW1lICtcbiAgICAgICAgXCIgdG8gYmUgbGVzcyB0aGFuIFwiICtcbiAgICAgICAgbGltaXQgK1xuICAgICAgICBcIiwgYWN0dWFsIHZhbHVlIHdhcyBcIiArXG4gICAgICAgIHRlc3RcbiAgICApO1xuICB9XG59O1xuXG4vKipcbiAqIFRocm93cyBpZiB0ZXN0IGlzIG5vdCB0eXBlb2YgJ251bWJlcicgYW5kIGxlc3MgdGhhbiBvciBlcXVhbCB0byBsaW1pdFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSB2YXJpYWJsZSBiZWluZyB0ZXN0ZWRcbiAqIEBwYXJhbSB7Kn0gdGVzdCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHBhcmFtIHtOdW1iZXJ9IGxpbWl0IFRoZSBsaW1pdCB2YWx1ZSB0byBjb21wYXJlIGFnYWluc3RcbiAqIEBleGNlcHRpb24ge0RldmVsb3BlckVycm9yfSB0ZXN0IG11c3QgYmUgdHlwZW9mICdudW1iZXInIGFuZCBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gbGltaXRcbiAqL1xuQ2hlY2sudHlwZU9mLm51bWJlci5sZXNzVGhhbk9yRXF1YWxzID0gZnVuY3Rpb24gKG5hbWUsIHRlc3QsIGxpbWl0KSB7XG4gIENoZWNrLnR5cGVPZi5udW1iZXIobmFtZSwgdGVzdCk7XG4gIGlmICh0ZXN0ID4gbGltaXQpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIkV4cGVjdGVkIFwiICtcbiAgICAgICAgbmFtZSArXG4gICAgICAgIFwiIHRvIGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byBcIiArXG4gICAgICAgIGxpbWl0ICtcbiAgICAgICAgXCIsIGFjdHVhbCB2YWx1ZSB3YXMgXCIgK1xuICAgICAgICB0ZXN0XG4gICAgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBUaHJvd3MgaWYgdGVzdCBpcyBub3QgdHlwZW9mICdudW1iZXInIGFuZCBncmVhdGVyIHRoYW4gbGltaXRcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBUaGUgbmFtZSBvZiB0aGUgdmFyaWFibGUgYmVpbmcgdGVzdGVkXG4gKiBAcGFyYW0geyp9IHRlc3QgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEBwYXJhbSB7TnVtYmVyfSBsaW1pdCBUaGUgbGltaXQgdmFsdWUgdG8gY29tcGFyZSBhZ2FpbnN0XG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gdGVzdCBtdXN0IGJlIHR5cGVvZiAnbnVtYmVyJyBhbmQgZ3JlYXRlciB0aGFuIGxpbWl0XG4gKi9cbkNoZWNrLnR5cGVPZi5udW1iZXIuZ3JlYXRlclRoYW4gPSBmdW5jdGlvbiAobmFtZSwgdGVzdCwgbGltaXQpIHtcbiAgQ2hlY2sudHlwZU9mLm51bWJlcihuYW1lLCB0ZXN0KTtcbiAgaWYgKHRlc3QgPD0gbGltaXQpIHtcbiAgICB0aHJvdyBuZXcgRGV2ZWxvcGVyRXJyb3IoXG4gICAgICBcIkV4cGVjdGVkIFwiICtcbiAgICAgICAgbmFtZSArXG4gICAgICAgIFwiIHRvIGJlIGdyZWF0ZXIgdGhhbiBcIiArXG4gICAgICAgIGxpbWl0ICtcbiAgICAgICAgXCIsIGFjdHVhbCB2YWx1ZSB3YXMgXCIgK1xuICAgICAgICB0ZXN0XG4gICAgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBUaHJvd3MgaWYgdGVzdCBpcyBub3QgdHlwZW9mICdudW1iZXInIGFuZCBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gbGltaXRcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBUaGUgbmFtZSBvZiB0aGUgdmFyaWFibGUgYmVpbmcgdGVzdGVkXG4gKiBAcGFyYW0geyp9IHRlc3QgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEBwYXJhbSB7TnVtYmVyfSBsaW1pdCBUaGUgbGltaXQgdmFsdWUgdG8gY29tcGFyZSBhZ2FpbnN0XG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gdGVzdCBtdXN0IGJlIHR5cGVvZiAnbnVtYmVyJyBhbmQgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIGxpbWl0XG4gKi9cbkNoZWNrLnR5cGVPZi5udW1iZXIuZ3JlYXRlclRoYW5PckVxdWFscyA9IGZ1bmN0aW9uIChuYW1lLCB0ZXN0LCBsaW1pdCkge1xuICBDaGVjay50eXBlT2YubnVtYmVyKG5hbWUsIHRlc3QpO1xuICBpZiAodGVzdCA8IGxpbWl0KSB7XG4gICAgdGhyb3cgbmV3IERldmVsb3BlckVycm9yKFxuICAgICAgXCJFeHBlY3RlZCBcIiArXG4gICAgICAgIG5hbWUgK1xuICAgICAgICBcIiB0byBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gXCIgK1xuICAgICAgICBsaW1pdCArXG4gICAgICAgIFwiLCBhY3R1YWwgdmFsdWUgd2FzIFwiICtcbiAgICAgICAgdGVzdFxuICAgICk7XG4gIH1cbn07XG5cbi8qKlxuICogVGhyb3dzIGlmIHRlc3QgaXMgbm90IHR5cGVvZiAnb2JqZWN0J1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSB2YXJpYWJsZSBiZWluZyB0ZXN0ZWRcbiAqIEBwYXJhbSB7Kn0gdGVzdCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IHRlc3QgbXVzdCBiZSB0eXBlb2YgJ29iamVjdCdcbiAqL1xuQ2hlY2sudHlwZU9mLm9iamVjdCA9IGZ1bmN0aW9uIChuYW1lLCB0ZXN0KSB7XG4gIGlmICh0eXBlb2YgdGVzdCAhPT0gXCJvYmplY3RcIikge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIGdldEZhaWxlZFR5cGVFcnJvck1lc3NhZ2UodHlwZW9mIHRlc3QsIFwib2JqZWN0XCIsIG5hbWUpXG4gICAgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBUaHJvd3MgaWYgdGVzdCBpcyBub3QgdHlwZW9mICdib29sZWFuJ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSB2YXJpYWJsZSBiZWluZyB0ZXN0ZWRcbiAqIEBwYXJhbSB7Kn0gdGVzdCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IHRlc3QgbXVzdCBiZSB0eXBlb2YgJ2Jvb2xlYW4nXG4gKi9cbkNoZWNrLnR5cGVPZi5ib29sID0gZnVuY3Rpb24gKG5hbWUsIHRlc3QpIHtcbiAgaWYgKHR5cGVvZiB0ZXN0ICE9PSBcImJvb2xlYW5cIikge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIGdldEZhaWxlZFR5cGVFcnJvck1lc3NhZ2UodHlwZW9mIHRlc3QsIFwiYm9vbGVhblwiLCBuYW1lKVxuICAgICk7XG4gIH1cbn07XG5cbi8qKlxuICogVGhyb3dzIGlmIHRlc3QgaXMgbm90IHR5cGVvZiAnYmlnaW50J1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSB2YXJpYWJsZSBiZWluZyB0ZXN0ZWRcbiAqIEBwYXJhbSB7Kn0gdGVzdCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQGV4Y2VwdGlvbiB7RGV2ZWxvcGVyRXJyb3J9IHRlc3QgbXVzdCBiZSB0eXBlb2YgJ2JpZ2ludCdcbiAqL1xuQ2hlY2sudHlwZU9mLmJpZ2ludCA9IGZ1bmN0aW9uIChuYW1lLCB0ZXN0KSB7XG4gIGlmICh0eXBlb2YgdGVzdCAhPT0gXCJiaWdpbnRcIikge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIGdldEZhaWxlZFR5cGVFcnJvck1lc3NhZ2UodHlwZW9mIHRlc3QsIFwiYmlnaW50XCIsIG5hbWUpXG4gICAgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBUaHJvd3MgaWYgdGVzdDEgYW5kIHRlc3QyIGlzIG5vdCB0eXBlb2YgJ251bWJlcicgYW5kIG5vdCBlcXVhbCBpbiB2YWx1ZVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lMSBUaGUgbmFtZSBvZiB0aGUgZmlyc3QgdmFyaWFibGUgYmVpbmcgdGVzdGVkXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZTIgVGhlIG5hbWUgb2YgdGhlIHNlY29uZCB2YXJpYWJsZSBiZWluZyB0ZXN0ZWQgYWdhaW5zdFxuICogQHBhcmFtIHsqfSB0ZXN0MSBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHBhcmFtIHsqfSB0ZXN0MiBUaGUgdmFsdWUgdG8gdGVzdCBhZ2FpbnN0XG4gKiBAZXhjZXB0aW9uIHtEZXZlbG9wZXJFcnJvcn0gdGVzdDEgYW5kIHRlc3QyIHNob3VsZCBiZSB0eXBlIG9mICdudW1iZXInIGFuZCBiZSBlcXVhbCBpbiB2YWx1ZVxuICovXG5DaGVjay50eXBlT2YubnVtYmVyLmVxdWFscyA9IGZ1bmN0aW9uIChuYW1lMSwgbmFtZTIsIHRlc3QxLCB0ZXN0Mikge1xuICBDaGVjay50eXBlT2YubnVtYmVyKG5hbWUxLCB0ZXN0MSk7XG4gIENoZWNrLnR5cGVPZi5udW1iZXIobmFtZTIsIHRlc3QyKTtcbiAgaWYgKHRlc3QxICE9PSB0ZXN0Mikge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcbiAgICAgIG5hbWUxICtcbiAgICAgICAgXCIgbXVzdCBiZSBlcXVhbCB0byBcIiArXG4gICAgICAgIG5hbWUyICtcbiAgICAgICAgXCIsIHRoZSBhY3R1YWwgdmFsdWVzIGFyZSBcIiArXG4gICAgICAgIHRlc3QxICtcbiAgICAgICAgXCIgYW5kIFwiICtcbiAgICAgICAgdGVzdDJcbiAgICApO1xuICB9XG59O1xuZXhwb3J0IGRlZmF1bHQgQ2hlY2s7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///66553\n')},83163:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82982);\n/* harmony import */ var _EllipseGeometry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59359);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50491);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(67252);\n\n\n\n\n\n\n\n\n/**\n * A description of a circle on the ellipsoid. Circle geometry can be rendered with both {@link Primitive} and {@link GroundPrimitive}.\n *\n * @alias CircleGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3} options.center The circle\'s center point in the fixed frame.\n * @param {Number} options.radius The radius in meters.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid the circle will be on.\n * @param {Number} [options.height=0.0] The distance in meters between the circle and the ellipsoid surface.\n * @param {Number} [options.granularity=0.02] The angular distance between points on the circle in radians.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {Number} [options.extrudedHeight=0.0] The distance in meters between the circle\'s extruded face and the ellipsoid surface.\n * @param {Number} [options.stRotation=0.0] The rotation of the texture coordinates, in radians. A positive rotation is counter-clockwise.\n *\n * @exception {DeveloperError} radius must be greater than zero.\n * @exception {DeveloperError} granularity must be greater than zero.\n *\n * @see CircleGeometry.createGeometry\n * @see Packable\n *\n * @example\n * // Create a circle.\n * var circle = new Cesium.CircleGeometry({\n *   center : Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883),\n *   radius : 100000.0\n * });\n * var geometry = Cesium.CircleGeometry.createGeometry(circle);\n */\nfunction CircleGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var radius = options.radius;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number */ .Z.typeOf.number("radius", radius);\n  //>>includeEnd(\'debug\');\n\n  var ellipseGeometryOptions = {\n    center: options.center,\n    semiMajorAxis: radius,\n    semiMinorAxis: radius,\n    ellipsoid: options.ellipsoid,\n    height: options.height,\n    extrudedHeight: options.extrudedHeight,\n    granularity: options.granularity,\n    vertexFormat: options.vertexFormat,\n    stRotation: options.stRotation,\n    shadowVolume: options.shadowVolume,\n  };\n  this._ellipseGeometry = new _EllipseGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(ellipseGeometryOptions);\n  this._workerName = "createCircleGeometry";\n}\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nCircleGeometry.packedLength = _EllipseGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {CircleGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nCircleGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  //>>includeEnd(\'debug\');\n  return _EllipseGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(value._ellipseGeometry, array, startingIndex);\n};\n\nvar scratchEllipseGeometry = new _EllipseGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z({\n  center: new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  semiMajorAxis: 1.0,\n  semiMinorAxis: 1.0,\n});\nvar scratchOptions = {\n  center: new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  radius: undefined,\n  ellipsoid: _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE),\n  height: undefined,\n  extrudedHeight: undefined,\n  granularity: undefined,\n  vertexFormat: new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(),\n  stRotation: undefined,\n  semiMajorAxis: undefined,\n  semiMinorAxis: undefined,\n  shadowVolume: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {CircleGeometry} [result] The object into which to store the result.\n * @returns {CircleGeometry} The modified result parameter or a new CircleGeometry instance if one was not provided.\n */\nCircleGeometry.unpack = function (array, startingIndex, result) {\n  var ellipseGeometry = _EllipseGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchEllipseGeometry\n  );\n  scratchOptions.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n    ellipseGeometry._center,\n    scratchOptions.center\n  );\n  scratchOptions.ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(\n    ellipseGeometry._ellipsoid,\n    scratchOptions.ellipsoid\n  );\n  scratchOptions.height = ellipseGeometry._height;\n  scratchOptions.extrudedHeight = ellipseGeometry._extrudedHeight;\n  scratchOptions.granularity = ellipseGeometry._granularity;\n  scratchOptions.vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].clone */ .Z.clone(\n    ellipseGeometry._vertexFormat,\n    scratchOptions.vertexFormat\n  );\n  scratchOptions.stRotation = ellipseGeometry._stRotation;\n  scratchOptions.shadowVolume = ellipseGeometry._shadowVolume;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(result)) {\n    scratchOptions.radius = ellipseGeometry._semiMajorAxis;\n    return new CircleGeometry(scratchOptions);\n  }\n\n  scratchOptions.semiMajorAxis = ellipseGeometry._semiMajorAxis;\n  scratchOptions.semiMinorAxis = ellipseGeometry._semiMinorAxis;\n  result._ellipseGeometry = new _EllipseGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(scratchOptions);\n  return result;\n};\n\n/**\n * Computes the geometric representation of a circle on an ellipsoid, including its vertices, indices, and a bounding sphere.\n *\n * @param {CircleGeometry} circleGeometry A description of the circle.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nCircleGeometry.createGeometry = function (circleGeometry) {\n  return _EllipseGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].createGeometry */ .Z.createGeometry(circleGeometry._ellipseGeometry);\n};\n\n/**\n * @private\n */\nCircleGeometry.createShadowVolume = function (\n  circleGeometry,\n  minHeightFunc,\n  maxHeightFunc\n) {\n  var granularity = circleGeometry._ellipseGeometry._granularity;\n  var ellipsoid = circleGeometry._ellipseGeometry._ellipsoid;\n\n  var minHeight = minHeightFunc(granularity, ellipsoid);\n  var maxHeight = maxHeightFunc(granularity, ellipsoid);\n\n  return new CircleGeometry({\n    center: circleGeometry._ellipseGeometry._center,\n    radius: circleGeometry._ellipseGeometry._semiMajorAxis,\n    ellipsoid: ellipsoid,\n    stRotation: circleGeometry._ellipseGeometry._stRotation,\n    granularity: granularity,\n    extrudedHeight: minHeight,\n    height: maxHeight,\n    vertexFormat: _VertexFormat_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].POSITION_ONLY */ .Z.POSITION_ONLY,\n    shadowVolume: true,\n  });\n};\n\nObject.defineProperties(CircleGeometry.prototype, {\n  /**\n   * @private\n   */\n  rectangle: {\n    get: function () {\n      return this._ellipseGeometry.rectangle;\n    },\n  },\n  /**\n   * For remapping texture coordinates when rendering CircleGeometries as GroundPrimitives.\n   * @private\n   */\n  textureCoordinateRotationPoints: {\n    get: function () {\n      return this._ellipseGeometry.textureCoordinateRotationPoints;\n    },\n  },\n});\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (CircleGeometry)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///83163\n')},13511:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82982);\n/* harmony import */ var _EllipseOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(27337);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50491);\n\n\n\n\n\n\n\n/**\n * A description of the outline of a circle on the ellipsoid.\n *\n * @alias CircleOutlineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3} options.center The circle\'s center point in the fixed frame.\n * @param {Number} options.radius The radius in meters.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid the circle will be on.\n * @param {Number} [options.height=0.0] The distance in meters between the circle and the ellipsoid surface.\n * @param {Number} [options.granularity=0.02] The angular distance between points on the circle in radians.\n * @param {Number} [options.extrudedHeight=0.0] The distance in meters between the circle\'s extruded face and the ellipsoid surface.\n * @param {Number} [options.numberOfVerticalLines=16] Number of lines to draw between the top and bottom of an extruded circle.\n *\n * @exception {DeveloperError} radius must be greater than zero.\n * @exception {DeveloperError} granularity must be greater than zero.\n *\n * @see CircleOutlineGeometry.createGeometry\n * @see Packable\n *\n * @example\n * // Create a circle.\n * var circle = new Cesium.CircleOutlineGeometry({\n *   center : Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883),\n *   radius : 100000.0\n * });\n * var geometry = Cesium.CircleOutlineGeometry.createGeometry(circle);\n */\nfunction CircleOutlineGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var radius = options.radius;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.number */ .Z.typeOf.number("radius", radius);\n  //>>includeEnd(\'debug\');\n\n  var ellipseGeometryOptions = {\n    center: options.center,\n    semiMajorAxis: radius,\n    semiMinorAxis: radius,\n    ellipsoid: options.ellipsoid,\n    height: options.height,\n    extrudedHeight: options.extrudedHeight,\n    granularity: options.granularity,\n    numberOfVerticalLines: options.numberOfVerticalLines,\n  };\n  this._ellipseGeometry = new _EllipseOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(ellipseGeometryOptions);\n  this._workerName = "createCircleOutlineGeometry";\n}\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nCircleOutlineGeometry.packedLength = _EllipseOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {CircleOutlineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nCircleOutlineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  //>>includeEnd(\'debug\');\n  return _EllipseOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(\n    value._ellipseGeometry,\n    array,\n    startingIndex\n  );\n};\n\nvar scratchEllipseGeometry = new _EllipseOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z({\n  center: new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  semiMajorAxis: 1.0,\n  semiMinorAxis: 1.0,\n});\nvar scratchOptions = {\n  center: new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(),\n  radius: undefined,\n  ellipsoid: _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE),\n  height: undefined,\n  extrudedHeight: undefined,\n  granularity: undefined,\n  numberOfVerticalLines: undefined,\n  semiMajorAxis: undefined,\n  semiMinorAxis: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {CircleOutlineGeometry} [result] The object into which to store the result.\n * @returns {CircleOutlineGeometry} The modified result parameter or a new CircleOutlineGeometry instance if one was not provided.\n */\nCircleOutlineGeometry.unpack = function (array, startingIndex, result) {\n  var ellipseGeometry = _EllipseOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchEllipseGeometry\n  );\n  scratchOptions.center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(\n    ellipseGeometry._center,\n    scratchOptions.center\n  );\n  scratchOptions.ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(\n    ellipseGeometry._ellipsoid,\n    scratchOptions.ellipsoid\n  );\n  scratchOptions.height = ellipseGeometry._height;\n  scratchOptions.extrudedHeight = ellipseGeometry._extrudedHeight;\n  scratchOptions.granularity = ellipseGeometry._granularity;\n  scratchOptions.numberOfVerticalLines = ellipseGeometry._numberOfVerticalLines;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(result)) {\n    scratchOptions.radius = ellipseGeometry._semiMajorAxis;\n    return new CircleOutlineGeometry(scratchOptions);\n  }\n\n  scratchOptions.semiMajorAxis = ellipseGeometry._semiMajorAxis;\n  scratchOptions.semiMinorAxis = ellipseGeometry._semiMinorAxis;\n  result._ellipseGeometry = new _EllipseOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(scratchOptions);\n  return result;\n};\n\n/**\n * Computes the geometric representation of an outline of a circle on an ellipsoid, including its vertices, indices, and a bounding sphere.\n *\n * @param {CircleOutlineGeometry} circleGeometry A description of the circle.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nCircleOutlineGeometry.createGeometry = function (circleGeometry) {\n  return _EllipseOutlineGeometry_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].createGeometry */ .Z.createGeometry(circleGeometry._ellipseGeometry);\n};\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (CircleOutlineGeometry)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13511\n')},95884:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _ClockRange_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(44159);\n/* harmony import */ var _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(96627);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n/* harmony import */ var _Event_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14459);\n/* harmony import */ var _getTimestamp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59081);\n/* harmony import */ var _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(55293);\n\n\n\n\n\n\n\n\n\n/**\n * A simple clock for keeping track of simulated time.\n *\n * @alias Clock\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {JulianDate} [options.startTime] The start time of the clock.\n * @param {JulianDate} [options.stopTime] The stop time of the clock.\n * @param {JulianDate} [options.currentTime] The current time.\n * @param {Number} [options.multiplier=1.0] Determines how much time advances when {@link Clock#tick} is called, negative values allow for advancing backwards.\n * @param {ClockStep} [options.clockStep=ClockStep.SYSTEM_CLOCK_MULTIPLIER] Determines if calls to {@link Clock#tick} are frame dependent or system clock dependent.\n * @param {ClockRange} [options.clockRange=ClockRange.UNBOUNDED] Determines how the clock should behave when {@link Clock#startTime} or {@link Clock#stopTime} is reached.\n * @param {Boolean} [options.canAnimate=true] Indicates whether {@link Clock#tick} can advance time.  This could be false if data is being buffered, for example.  The clock will only tick when both {@link Clock#canAnimate} and {@link Clock#shouldAnimate} are true.\n * @param {Boolean} [options.shouldAnimate=false] Indicates whether {@link Clock#tick} should attempt to advance time.  The clock will only tick when both {@link Clock#canAnimate} and {@link Clock#shouldAnimate} are true.\n *\n * @exception {DeveloperError} startTime must come before stopTime.\n *\n *\n * @example\n * // Create a clock that loops on Christmas day 2013 and runs in real-time.\n * var clock = new Cesium.Clock({\n *    startTime : Cesium.JulianDate.fromIso8601("2013-12-25"),\n *    currentTime : Cesium.JulianDate.fromIso8601("2013-12-25"),\n *    stopTime : Cesium.JulianDate.fromIso8601("2013-12-26"),\n *    clockRange : Cesium.ClockRange.LOOP_STOP,\n *    clockStep : Cesium.ClockStep.SYSTEM_CLOCK_MULTIPLIER\n * });\n *\n * @see ClockStep\n * @see ClockRange\n * @see JulianDate\n */\nfunction Clock(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var currentTime = options.currentTime;\n  var startTime = options.startTime;\n  var stopTime = options.stopTime;\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(currentTime)) {\n    // if not specified, current time is the start time,\n    // or if that is not specified, 1 day before the stop time,\n    // or if that is not specified, then now.\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startTime)) {\n      currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(startTime);\n    } else if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(stopTime)) {\n      currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].addDays */ .Z.addDays(stopTime, -1.0, new _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z());\n    } else {\n      currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].now */ .Z.now();\n    }\n  } else {\n    currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(currentTime);\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(startTime)) {\n    // if not specified, start time is the current time\n    // (as determined above)\n    startTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(currentTime);\n  } else {\n    startTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(startTime);\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(stopTime)) {\n    // if not specified, stop time is 1 day after the start time\n    // (as determined above)\n    stopTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].addDays */ .Z.addDays(startTime, 1.0, new _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z());\n  } else {\n    stopTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(stopTime);\n  }\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (_JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].greaterThan */ .Z.greaterThan(startTime, stopTime)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("startTime must come before stopTime.");\n  }\n  //>>includeEnd(\'debug\');\n\n  /**\n   * The start time of the clock.\n   * @type {JulianDate}\n   */\n  this.startTime = startTime;\n\n  /**\n   * The stop time of the clock.\n   * @type {JulianDate}\n   */\n  this.stopTime = stopTime;\n\n  /**\n   * Determines how the clock should behave when\n   * {@link Clock#startTime} or {@link Clock#stopTime}\n   * is reached.\n   * @type {ClockRange}\n   * @default {@link ClockRange.UNBOUNDED}\n   */\n  this.clockRange = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.clockRange, _ClockRange_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].UNBOUNDED */ .Z.UNBOUNDED);\n\n  /**\n   * Indicates whether {@link Clock#tick} can advance time.  This could be false if data is being buffered,\n   * for example.  The clock will only advance time when both\n   * {@link Clock#canAnimate} and {@link Clock#shouldAnimate} are true.\n   * @type {Boolean}\n   * @default true\n   */\n  this.canAnimate = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.canAnimate, true);\n\n  /**\n   * An {@link Event} that is fired whenever {@link Clock#tick} is called.\n   * @type {Event}\n   */\n  this.onTick = new _Event_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n  /**\n   * An {@link Event} that is fired whenever {@link Clock#stopTime} is reached.\n   * @type {Event}\n   */\n  this.onStop = new _Event_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\n  this._currentTime = undefined;\n  this._multiplier = undefined;\n  this._clockStep = undefined;\n  this._shouldAnimate = undefined;\n  this._lastSystemTime = (0,_getTimestamp_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();\n\n  // set values using the property setters to\n  // make values consistent.\n\n  this.currentTime = currentTime;\n  this.multiplier = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.multiplier, 1.0);\n  this.shouldAnimate = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(options.shouldAnimate, false);\n  this.clockStep = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(\n    options.clockStep,\n    _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK_MULTIPLIER */ .Z.SYSTEM_CLOCK_MULTIPLIER\n  );\n}\n\nObject.defineProperties(Clock.prototype, {\n  /**\n   * The current time.\n   * Changing this property will change\n   * {@link Clock#clockStep} from {@link ClockStep.SYSTEM_CLOCK} to\n   * {@link ClockStep.SYSTEM_CLOCK_MULTIPLIER}.\n   * @memberof Clock.prototype\n   * @type {JulianDate}\n   */\n  currentTime: {\n    get: function () {\n      return this._currentTime;\n    },\n    set: function (value) {\n      if (_JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equals */ .Z.equals(this._currentTime, value)) {\n        return;\n      }\n\n      if (this._clockStep === _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK */ .Z.SYSTEM_CLOCK) {\n        this._clockStep = _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK_MULTIPLIER */ .Z.SYSTEM_CLOCK_MULTIPLIER;\n      }\n\n      this._currentTime = value;\n    },\n  },\n\n  /**\n   * Gets or sets how much time advances when {@link Clock#tick} is called. Negative values allow for advancing backwards.\n   * If {@link Clock#clockStep} is set to {@link ClockStep.TICK_DEPENDENT}, this is the number of seconds to advance.\n   * If {@link Clock#clockStep} is set to {@link ClockStep.SYSTEM_CLOCK_MULTIPLIER}, this value is multiplied by the\n   * elapsed system time since the last call to {@link Clock#tick}.\n   * Changing this property will change\n   * {@link Clock#clockStep} from {@link ClockStep.SYSTEM_CLOCK} to\n   * {@link ClockStep.SYSTEM_CLOCK_MULTIPLIER}.\n   * @memberof Clock.prototype\n   * @type {Number}\n   * @default 1.0\n   */\n  multiplier: {\n    get: function () {\n      return this._multiplier;\n    },\n    set: function (value) {\n      if (this._multiplier === value) {\n        return;\n      }\n\n      if (this._clockStep === _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK */ .Z.SYSTEM_CLOCK) {\n        this._clockStep = _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK_MULTIPLIER */ .Z.SYSTEM_CLOCK_MULTIPLIER;\n      }\n\n      this._multiplier = value;\n    },\n  },\n\n  /**\n   * Determines if calls to {@link Clock#tick} are frame dependent or system clock dependent.\n   * Changing this property to {@link ClockStep.SYSTEM_CLOCK} will set\n   * {@link Clock#multiplier} to 1.0, {@link Clock#shouldAnimate} to true, and\n   * {@link Clock#currentTime} to the current system clock time.\n   * @memberof Clock.prototype\n   * @type ClockStep\n   * @default {@link ClockStep.SYSTEM_CLOCK_MULTIPLIER}\n   */\n  clockStep: {\n    get: function () {\n      return this._clockStep;\n    },\n    set: function (value) {\n      if (value === _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK */ .Z.SYSTEM_CLOCK) {\n        this._multiplier = 1.0;\n        this._shouldAnimate = true;\n        this._currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].now */ .Z.now();\n      }\n\n      this._clockStep = value;\n    },\n  },\n\n  /**\n   * Indicates whether {@link Clock#tick} should attempt to advance time.\n   * The clock will only advance time when both\n   * {@link Clock#canAnimate} and {@link Clock#shouldAnimate} are true.\n   * Changing this property will change\n   * {@link Clock#clockStep} from {@link ClockStep.SYSTEM_CLOCK} to\n   * {@link ClockStep.SYSTEM_CLOCK_MULTIPLIER}.\n   * @memberof Clock.prototype\n   * @type {Boolean}\n   * @default false\n   */\n  shouldAnimate: {\n    get: function () {\n      return this._shouldAnimate;\n    },\n    set: function (value) {\n      if (this._shouldAnimate === value) {\n        return;\n      }\n\n      if (this._clockStep === _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK */ .Z.SYSTEM_CLOCK) {\n        this._clockStep = _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK_MULTIPLIER */ .Z.SYSTEM_CLOCK_MULTIPLIER;\n      }\n\n      this._shouldAnimate = value;\n    },\n  },\n});\n\n/**\n * Advances the clock from the current time based on the current configuration options.\n * tick should be called every frame, regardless of whether animation is taking place\n * or not.  To control animation, use the {@link Clock#shouldAnimate} property.\n *\n * @returns {JulianDate} The new value of the {@link Clock#currentTime} property.\n */\nClock.prototype.tick = function () {\n  var currentSystemTime = (0,_getTimestamp_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();\n  var currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(this._currentTime);\n\n  if (this.canAnimate && this._shouldAnimate) {\n    var clockStep = this._clockStep;\n    if (clockStep === _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].SYSTEM_CLOCK */ .Z.SYSTEM_CLOCK) {\n      currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].now */ .Z.now(currentTime);\n    } else {\n      var multiplier = this._multiplier;\n\n      if (clockStep === _ClockStep_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].TICK_DEPENDENT */ .Z.TICK_DEPENDENT) {\n        currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].addSeconds */ .Z.addSeconds(\n          currentTime,\n          multiplier,\n          currentTime\n        );\n      } else {\n        var milliseconds = currentSystemTime - this._lastSystemTime;\n        currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].addSeconds */ .Z.addSeconds(\n          currentTime,\n          multiplier * (milliseconds / 1000.0),\n          currentTime\n        );\n      }\n\n      var clockRange = this.clockRange;\n      var startTime = this.startTime;\n      var stopTime = this.stopTime;\n\n      if (clockRange === _ClockRange_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].CLAMPED */ .Z.CLAMPED) {\n        if (_JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].lessThan */ .Z.lessThan(currentTime, startTime)) {\n          currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(startTime, currentTime);\n        } else if (_JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].greaterThan */ .Z.greaterThan(currentTime, stopTime)) {\n          currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(stopTime, currentTime);\n          this.onStop.raiseEvent(this);\n        }\n      } else if (clockRange === _ClockRange_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].LOOP_STOP */ .Z.LOOP_STOP) {\n        if (_JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].lessThan */ .Z.lessThan(currentTime, startTime)) {\n          currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(startTime, currentTime);\n        }\n        while (_JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].greaterThan */ .Z.greaterThan(currentTime, stopTime)) {\n          currentTime = _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].addSeconds */ .Z.addSeconds(\n            startTime,\n            _JulianDate_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].secondsDifference */ .Z.secondsDifference(currentTime, stopTime),\n            currentTime\n          );\n          this.onStop.raiseEvent(this);\n        }\n      }\n    }\n  }\n\n  this._currentTime = currentTime;\n  this._lastSystemTime = currentSystemTime;\n  this.onTick.raiseEvent(this);\n  return currentTime;\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Clock);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///95884\n')},44159:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Constants used by {@link Clock#tick} to determine behavior\n * when {@link Clock#startTime} or {@link Clock#stopTime} is reached.\n *\n * @enum {Number}\n *\n * @see Clock\n * @see ClockStep\n */\nvar ClockRange = {\n  /**\n   * {@link Clock#tick} will always advances the clock in its current direction.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNBOUNDED: 0,\n\n  /**\n   * When {@link Clock#startTime} or {@link Clock#stopTime} is reached,\n   * {@link Clock#tick} will not advance {@link Clock#currentTime} any further.\n   *\n   * @type {Number}\n   * @constant\n   */\n  CLAMPED: 1,\n\n  /**\n   * When {@link Clock#stopTime} is reached, {@link Clock#tick} will advance\n   * {@link Clock#currentTime} to the opposite end of the interval.  When\n   * time is moving backwards, {@link Clock#tick} will not advance past\n   * {@link Clock#startTime}\n   *\n   * @type {Number}\n   * @constant\n   */\n  LOOP_STOP: 2,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(ClockRange));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQxNTkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxzQkFBc0Isa0JBQWtCO0FBQ3hDLFNBQVMsdUJBQXVCLElBQUksc0JBQXNCO0FBQzFEO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sa0JBQWtCO0FBQ3hCO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsdUJBQXVCLElBQUksc0JBQXNCO0FBQzVELE1BQU0sa0JBQWtCLGtCQUFrQix5QkFBeUI7QUFDbkU7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxzQkFBc0IsYUFBYSxrQkFBa0I7QUFDaEUsTUFBTSx5QkFBeUI7QUFDL0IsZ0NBQWdDLGtCQUFrQjtBQUNsRCxNQUFNO0FBQ047QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBZSx5QkFBeUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL0Nsb2NrUmFuZ2UuanM/MTYyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnN0YW50cyB1c2VkIGJ5IHtAbGluayBDbG9jayN0aWNrfSB0byBkZXRlcm1pbmUgYmVoYXZpb3JcbiAqIHdoZW4ge0BsaW5rIENsb2NrI3N0YXJ0VGltZX0gb3Ige0BsaW5rIENsb2NrI3N0b3BUaW1lfSBpcyByZWFjaGVkLlxuICpcbiAqIEBlbnVtIHtOdW1iZXJ9XG4gKlxuICogQHNlZSBDbG9ja1xuICogQHNlZSBDbG9ja1N0ZXBcbiAqL1xudmFyIENsb2NrUmFuZ2UgPSB7XG4gIC8qKlxuICAgKiB7QGxpbmsgQ2xvY2sjdGlja30gd2lsbCBhbHdheXMgYWR2YW5jZXMgdGhlIGNsb2NrIGluIGl0cyBjdXJyZW50IGRpcmVjdGlvbi5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBVTkJPVU5ERUQ6IDAsXG5cbiAgLyoqXG4gICAqIFdoZW4ge0BsaW5rIENsb2NrI3N0YXJ0VGltZX0gb3Ige0BsaW5rIENsb2NrI3N0b3BUaW1lfSBpcyByZWFjaGVkLFxuICAgKiB7QGxpbmsgQ2xvY2sjdGlja30gd2lsbCBub3QgYWR2YW5jZSB7QGxpbmsgQ2xvY2sjY3VycmVudFRpbWV9IGFueSBmdXJ0aGVyLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIENMQU1QRUQ6IDEsXG5cbiAgLyoqXG4gICAqIFdoZW4ge0BsaW5rIENsb2NrI3N0b3BUaW1lfSBpcyByZWFjaGVkLCB7QGxpbmsgQ2xvY2sjdGlja30gd2lsbCBhZHZhbmNlXG4gICAqIHtAbGluayBDbG9jayNjdXJyZW50VGltZX0gdG8gdGhlIG9wcG9zaXRlIGVuZCBvZiB0aGUgaW50ZXJ2YWwuICBXaGVuXG4gICAqIHRpbWUgaXMgbW92aW5nIGJhY2t3YXJkcywge0BsaW5rIENsb2NrI3RpY2t9IHdpbGwgbm90IGFkdmFuY2UgcGFzdFxuICAgKiB7QGxpbmsgQ2xvY2sjc3RhcnRUaW1lfVxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIExPT1BfU1RPUDogMixcbn07XG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKENsb2NrUmFuZ2UpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///44159\n')},96627:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Constants to determine how much time advances with each call\n * to {@link Clock#tick}.\n *\n * @enum {Number}\n *\n * @see Clock\n * @see ClockRange\n */\nvar ClockStep = {\n  /**\n   * {@link Clock#tick} advances the current time by a fixed step,\n   * which is the number of seconds specified by {@link Clock#multiplier}.\n   *\n   * @type {Number}\n   * @constant\n   */\n  TICK_DEPENDENT: 0,\n\n  /**\n   * {@link Clock#tick} advances the current time by the amount of system\n   * time elapsed since the previous call multiplied by {@link Clock#multiplier}.\n   *\n   * @type {Number}\n   * @constant\n   */\n  SYSTEM_CLOCK_MULTIPLIER: 1,\n\n  /**\n   * {@link Clock#tick} sets the clock to the current system time;\n   * ignoring all other settings.\n   *\n   * @type {Number}\n   * @constant\n   */\n  SYSTEM_CLOCK: 2,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(ClockStep));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTY2MjcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLE9BQU8saUJBQWlCO0FBQ3hCO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sa0JBQWtCO0FBQ3hCLGtEQUFrRCx1QkFBdUI7QUFDekU7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSxrQkFBa0I7QUFDeEIseURBQXlELHVCQUF1QjtBQUNoRjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLGtCQUFrQjtBQUN4QjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsd0JBQXdCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9DbG9ja1N0ZXAuanM/NDQxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnN0YW50cyB0byBkZXRlcm1pbmUgaG93IG11Y2ggdGltZSBhZHZhbmNlcyB3aXRoIGVhY2ggY2FsbFxuICogdG8ge0BsaW5rIENsb2NrI3RpY2t9LlxuICpcbiAqIEBlbnVtIHtOdW1iZXJ9XG4gKlxuICogQHNlZSBDbG9ja1xuICogQHNlZSBDbG9ja1JhbmdlXG4gKi9cbnZhciBDbG9ja1N0ZXAgPSB7XG4gIC8qKlxuICAgKiB7QGxpbmsgQ2xvY2sjdGlja30gYWR2YW5jZXMgdGhlIGN1cnJlbnQgdGltZSBieSBhIGZpeGVkIHN0ZXAsXG4gICAqIHdoaWNoIGlzIHRoZSBudW1iZXIgb2Ygc2Vjb25kcyBzcGVjaWZpZWQgYnkge0BsaW5rIENsb2NrI211bHRpcGxpZXJ9LlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFRJQ0tfREVQRU5ERU5UOiAwLFxuXG4gIC8qKlxuICAgKiB7QGxpbmsgQ2xvY2sjdGlja30gYWR2YW5jZXMgdGhlIGN1cnJlbnQgdGltZSBieSB0aGUgYW1vdW50IG9mIHN5c3RlbVxuICAgKiB0aW1lIGVsYXBzZWQgc2luY2UgdGhlIHByZXZpb3VzIGNhbGwgbXVsdGlwbGllZCBieSB7QGxpbmsgQ2xvY2sjbXVsdGlwbGllcn0uXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgU1lTVEVNX0NMT0NLX01VTFRJUExJRVI6IDEsXG5cbiAgLyoqXG4gICAqIHtAbGluayBDbG9jayN0aWNrfSBzZXRzIHRoZSBjbG9jayB0byB0aGUgY3VycmVudCBzeXN0ZW0gdGltZTtcbiAgICogaWdub3JpbmcgYWxsIG90aGVyIHNldHRpbmdzLlxuICAgKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFNZU1RFTV9DTE9DSzogMixcbn07XG5leHBvcnQgZGVmYXVsdCBPYmplY3QuZnJlZXplKENsb2NrU3RlcCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///96627\n')},59947:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66553);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82982);\n/* harmony import */ var _FeatureDetection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96037);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(99417);\n\n\n\n\n\n\nfunction hue2rgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  }\n  if (h > 1) {\n    h -= 1;\n  }\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * 6 * h;\n  }\n  if (h * 2 < 1) {\n    return m2;\n  }\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n  return m1;\n}\n\n/**\n * A color, specified using red, green, blue, and alpha values,\n * which range from <code>0</code> (no intensity) to <code>1.0</code> (full intensity).\n * @param {Number} [red=1.0] The red component.\n * @param {Number} [green=1.0] The green component.\n * @param {Number} [blue=1.0] The blue component.\n * @param {Number} [alpha=1.0] The alpha component.\n *\n * @constructor\n * @alias Color\n *\n * @see Packable\n */\nfunction Color(red, green, blue, alpha) {\n  /**\n   * The red component.\n   * @type {Number}\n   * @default 1.0\n   */\n  this.red = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(red, 1.0);\n  /**\n   * The green component.\n   * @type {Number}\n   * @default 1.0\n   */\n  this.green = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(green, 1.0);\n  /**\n   * The blue component.\n   * @type {Number}\n   * @default 1.0\n   */\n  this.blue = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(blue, 1.0);\n  /**\n   * The alpha component.\n   * @type {Number}\n   * @default 1.0\n   */\n  this.alpha = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(alpha, 1.0);\n}\n\n/**\n * Creates a Color instance from a {@link Cartesian4}. <code>x</code>, <code>y</code>, <code>z</code>,\n * and <code>w</code> map to <code>red</code>, <code>green</code>, <code>blue</code>, and <code>alpha</code>, respectively.\n *\n * @param {Cartesian4} cartesian The source cartesian.\n * @param {Color} [result] The object onto which to store the result.\n * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\n */\nColor.fromCartesian4 = function (cartesian, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("cartesian", cartesian);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    return new Color(cartesian.x, cartesian.y, cartesian.z, cartesian.w);\n  }\n\n  result.red = cartesian.x;\n  result.green = cartesian.y;\n  result.blue = cartesian.z;\n  result.alpha = cartesian.w;\n  return result;\n};\n\n/**\n * Creates a new Color specified using red, green, blue, and alpha values\n * that are in the range of 0 to 255, converting them internally to a range of 0.0 to 1.0.\n *\n * @param {Number} [red=255] The red component.\n * @param {Number} [green=255] The green component.\n * @param {Number} [blue=255] The blue component.\n * @param {Number} [alpha=255] The alpha component.\n * @param {Color} [result] The object onto which to store the result.\n * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\n */\nColor.fromBytes = function (red, green, blue, alpha, result) {\n  red = Color.byteToFloat((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(red, 255.0));\n  green = Color.byteToFloat((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(green, 255.0));\n  blue = Color.byteToFloat((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(blue, 255.0));\n  alpha = Color.byteToFloat((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(alpha, 255.0));\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    return new Color(red, green, blue, alpha);\n  }\n\n  result.red = red;\n  result.green = green;\n  result.blue = blue;\n  result.alpha = alpha;\n  return result;\n};\n\n/**\n * Creates a new Color that has the same red, green, and blue components\n * of the specified color, but with the specified alpha value.\n *\n * @param {Color} color The base color\n * @param {Number} alpha The new alpha component.\n * @param {Color} [result] The object onto which to store the result.\n * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\n *\n * @example var translucentRed = Cesium.Color.fromAlpha(Cesium.Color.RED, 0.9);\n */\nColor.fromAlpha = function (color, alpha, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("color", color);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("alpha", alpha);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    return new Color(color.red, color.green, color.blue, alpha);\n  }\n\n  result.red = color.red;\n  result.green = color.green;\n  result.blue = color.blue;\n  result.alpha = alpha;\n  return result;\n};\n\nvar scratchArrayBuffer;\nvar scratchUint32Array;\nvar scratchUint8Array;\nif (_FeatureDetection_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].supportsTypedArrays */ .Z.supportsTypedArrays()) {\n  scratchArrayBuffer = new ArrayBuffer(4);\n  scratchUint32Array = new Uint32Array(scratchArrayBuffer);\n  scratchUint8Array = new Uint8Array(scratchArrayBuffer);\n}\n\n/**\n * Creates a new Color from a single numeric unsigned 32-bit RGBA value, using the endianness\n * of the system.\n *\n * @param {Number} rgba A single numeric unsigned 32-bit RGBA value.\n * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\n * @returns {Color} The color object.\n *\n * @example\n * var color = Cesium.Color.fromRgba(0x67ADDFFF);\n *\n * @see Color#toRgba\n */\nColor.fromRgba = function (rgba, result) {\n  // scratchUint32Array and scratchUint8Array share an underlying array buffer\n  scratchUint32Array[0] = rgba;\n  return Color.fromBytes(\n    scratchUint8Array[0],\n    scratchUint8Array[1],\n    scratchUint8Array[2],\n    scratchUint8Array[3],\n    result\n  );\n};\n\n/**\n * Creates a Color instance from hue, saturation, and lightness.\n *\n * @param {Number} [hue=0] The hue angle 0...1\n * @param {Number} [saturation=0] The saturation value 0...1\n * @param {Number} [lightness=0] The lightness value 0...1\n * @param {Number} [alpha=1.0] The alpha component 0...1\n * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\n * @returns {Color} The color object.\n *\n * @see {@link http://www.w3.org/TR/css3-color/#hsl-color|CSS color values}\n */\nColor.fromHsl = function (hue, saturation, lightness, alpha, result) {\n  hue = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(hue, 0.0) % 1.0;\n  saturation = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(saturation, 0.0);\n  lightness = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(lightness, 0.0);\n  alpha = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(alpha, 1.0);\n\n  var red = lightness;\n  var green = lightness;\n  var blue = lightness;\n\n  if (saturation !== 0) {\n    var m2;\n    if (lightness < 0.5) {\n      m2 = lightness * (1 + saturation);\n    } else {\n      m2 = lightness + saturation - lightness * saturation;\n    }\n\n    var m1 = 2.0 * lightness - m2;\n    red = hue2rgb(m1, m2, hue + 1 / 3);\n    green = hue2rgb(m1, m2, hue);\n    blue = hue2rgb(m1, m2, hue - 1 / 3);\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    return new Color(red, green, blue, alpha);\n  }\n\n  result.red = red;\n  result.green = green;\n  result.blue = blue;\n  result.alpha = alpha;\n  return result;\n};\n\n/**\n * Creates a random color using the provided options. For reproducible random colors, you should\n * call {@link CesiumMath#setRandomNumberSeed} once at the beginning of your application.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Number} [options.red] If specified, the red component to use instead of a randomized value.\n * @param {Number} [options.minimumRed=0.0] The maximum red value to generate if none was specified.\n * @param {Number} [options.maximumRed=1.0] The minimum red value to generate if none was specified.\n * @param {Number} [options.green] If specified, the green component to use instead of a randomized value.\n * @param {Number} [options.minimumGreen=0.0] The maximum green value to generate if none was specified.\n * @param {Number} [options.maximumGreen=1.0] The minimum green value to generate if none was specified.\n * @param {Number} [options.blue] If specified, the blue component to use instead of a randomized value.\n * @param {Number} [options.minimumBlue=0.0] The maximum blue value to generate if none was specified.\n * @param {Number} [options.maximumBlue=1.0] The minimum blue value to generate if none was specified.\n * @param {Number} [options.alpha] If specified, the alpha component to use instead of a randomized value.\n * @param {Number} [options.minimumAlpha=0.0] The maximum alpha value to generate if none was specified.\n * @param {Number} [options.maximumAlpha=1.0] The minimum alpha value to generate if none was specified.\n * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\n * @returns {Color} The modified result parameter or a new instance if result was undefined.\n *\n * @exception {DeveloperError} minimumRed must be less than or equal to maximumRed.\n * @exception {DeveloperError} minimumGreen must be less than or equal to maximumGreen.\n * @exception {DeveloperError} minimumBlue must be less than or equal to maximumBlue.\n * @exception {DeveloperError} minimumAlpha must be less than or equal to maximumAlpha.\n *\n * @example\n * //Create a completely random color\n * var color = Cesium.Color.fromRandom();\n *\n * //Create a random shade of yellow.\n * var color = Cesium.Color.fromRandom({\n *     red : 1.0,\n *     green : 1.0,\n *     alpha : 1.0\n * });\n *\n * //Create a random bright color.\n * var color = Cesium.Color.fromRandom({\n *     minimumRed : 0.75,\n *     minimumGreen : 0.75,\n *     minimumBlue : 0.75,\n *     alpha : 1.0\n * });\n */\nColor.fromRandom = function (options, result) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  var red = options.red;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(red)) {\n    var minimumRed = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.minimumRed, 0);\n    var maximumRed = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.maximumRed, 1.0);\n\n    //>>includeStart(\'debug\', pragmas.debug);\n    _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals("minimumRed", minimumRed, maximumRed);\n    //>>includeEnd(\'debug\');\n\n    red =\n      minimumRed + _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].nextRandomNumber */ .Z.nextRandomNumber() * (maximumRed - minimumRed);\n  }\n\n  var green = options.green;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(green)) {\n    var minimumGreen = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.minimumGreen, 0);\n    var maximumGreen = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.maximumGreen, 1.0);\n\n    //>>includeStart(\'debug\', pragmas.debug);\n    _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n      "minimumGreen",\n      minimumGreen,\n      maximumGreen\n    );\n    //>>includeEnd(\'debug\');\n    green =\n      minimumGreen +\n      _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].nextRandomNumber */ .Z.nextRandomNumber() * (maximumGreen - minimumGreen);\n  }\n\n  var blue = options.blue;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(blue)) {\n    var minimumBlue = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.minimumBlue, 0);\n    var maximumBlue = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.maximumBlue, 1.0);\n\n    //>>includeStart(\'debug\', pragmas.debug);\n    _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n      "minimumBlue",\n      minimumBlue,\n      maximumBlue\n    );\n    //>>includeEnd(\'debug\');\n\n    blue =\n      minimumBlue + _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].nextRandomNumber */ .Z.nextRandomNumber() * (maximumBlue - minimumBlue);\n  }\n\n  var alpha = options.alpha;\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(alpha)) {\n    var minimumAlpha = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.minimumAlpha, 0);\n    var maximumAlpha = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(options.maximumAlpha, 1.0);\n\n    //>>includeStart(\'debug\', pragmas.debug);\n    _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.lessThanOrEquals */ .Z.typeOf.number.lessThanOrEquals(\n      "minumumAlpha",\n      minimumAlpha,\n      maximumAlpha\n    );\n    //>>includeEnd(\'debug\');\n\n    alpha =\n      minimumAlpha +\n      _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].nextRandomNumber */ .Z.nextRandomNumber() * (maximumAlpha - minimumAlpha);\n  }\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    return new Color(red, green, blue, alpha);\n  }\n\n  result.red = red;\n  result.green = green;\n  result.blue = blue;\n  result.alpha = alpha;\n  return result;\n};\n\n//#rgba\nvar rgbaMatcher = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;\n//#rrggbbaa\nvar rrggbbaaMatcher = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;\n//rgb(), rgba(), or rgb%()\nvar rgbParenthesesMatcher = /^rgba?\\(\\s*([0-9.]+%?)\\s*,\\s*([0-9.]+%?)\\s*,\\s*([0-9.]+%?)(?:\\s*,\\s*([0-9.]+))?\\s*\\)$/i;\n//hsl() or hsla()\nvar hslParenthesesMatcher = /^hsla?\\(\\s*([0-9.]+)\\s*,\\s*([0-9.]+%)\\s*,\\s*([0-9.]+%)(?:\\s*,\\s*([0-9.]+))?\\s*\\)$/i;\n\n/**\n * Creates a Color instance from a CSS color value.\n *\n * @param {String} color The CSS color value in #rgb, #rgba, #rrggbb, #rrggbbaa, rgb(), rgba(), hsl(), or hsla() format.\n * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\n * @returns {Color} The color object, or undefined if the string was not a valid CSS color.\n *\n *\n * @example\n * var cesiumBlue = Cesium.Color.fromCssColorString(\'#67ADDF\');\n * var green = Cesium.Color.fromCssColorString(\'green\');\n *\n * @see {@link http://www.w3.org/TR/css3-color|CSS color values}\n */\nColor.fromCssColorString = function (color, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.string */ .Z.typeOf.string("color", color);\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    result = new Color();\n  }\n\n  // Remove all whitespaces from the color string\n  color = color.replace(/\\s/g, "");\n\n  var namedColor = Color[color.toUpperCase()];\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(namedColor)) {\n    Color.clone(namedColor, result);\n    return result;\n  }\n\n  var matches = rgbaMatcher.exec(color);\n  if (matches !== null) {\n    result.red = parseInt(matches[1], 16) / 15;\n    result.green = parseInt(matches[2], 16) / 15.0;\n    result.blue = parseInt(matches[3], 16) / 15.0;\n    result.alpha = parseInt((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(matches[4], "f"), 16) / 15.0;\n    return result;\n  }\n\n  matches = rrggbbaaMatcher.exec(color);\n  if (matches !== null) {\n    result.red = parseInt(matches[1], 16) / 255.0;\n    result.green = parseInt(matches[2], 16) / 255.0;\n    result.blue = parseInt(matches[3], 16) / 255.0;\n    result.alpha = parseInt((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(matches[4], "ff"), 16) / 255.0;\n    return result;\n  }\n\n  matches = rgbParenthesesMatcher.exec(color);\n  if (matches !== null) {\n    result.red =\n      parseFloat(matches[1]) / ("%" === matches[1].substr(-1) ? 100.0 : 255.0);\n    result.green =\n      parseFloat(matches[2]) / ("%" === matches[2].substr(-1) ? 100.0 : 255.0);\n    result.blue =\n      parseFloat(matches[3]) / ("%" === matches[3].substr(-1) ? 100.0 : 255.0);\n    result.alpha = parseFloat((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(matches[4], "1.0"));\n    return result;\n  }\n\n  matches = hslParenthesesMatcher.exec(color);\n  if (matches !== null) {\n    return Color.fromHsl(\n      parseFloat(matches[1]) / 360.0,\n      parseFloat(matches[2]) / 100.0,\n      parseFloat(matches[3]) / 100.0,\n      parseFloat((0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(matches[4], "1.0")),\n      result\n    );\n  }\n\n  result = undefined;\n  return result;\n};\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nColor.packedLength = 4;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {Color} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nColor.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(startingIndex, 0);\n  array[startingIndex++] = value.red;\n  array[startingIndex++] = value.green;\n  array[startingIndex++] = value.blue;\n  array[startingIndex] = value.alpha;\n\n  return array;\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {Color} [result] The object into which to store the result.\n * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\n */\nColor.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(startingIndex, 0);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    result = new Color();\n  }\n  result.red = array[startingIndex++];\n  result.green = array[startingIndex++];\n  result.blue = array[startingIndex++];\n  result.alpha = array[startingIndex];\n  return result;\n};\n\n/**\n * Converts a \'byte\' color component in the range of 0 to 255 into\n * a \'float\' color component in the range of 0 to 1.0.\n *\n * @param {Number} number The number to be converted.\n * @returns {Number} The converted number.\n */\nColor.byteToFloat = function (number) {\n  return number / 255.0;\n};\n\n/**\n * Converts a \'float\' color component in the range of 0 to 1.0 into\n * a \'byte\' color component in the range of 0 to 255.\n *\n * @param {Number} number The number to be converted.\n * @returns {Number} The converted number.\n */\nColor.floatToByte = function (number) {\n  return number === 1.0 ? 255.0 : (number * 256.0) | 0;\n};\n\n/**\n * Duplicates a Color.\n *\n * @param {Color} color The Color to duplicate.\n * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\n * @returns {Color} The modified result parameter or a new instance if result was undefined. (Returns undefined if color is undefined)\n */\nColor.clone = function (color, result) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(color)) {\n    return undefined;\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    return new Color(color.red, color.green, color.blue, color.alpha);\n  }\n  result.red = color.red;\n  result.green = color.green;\n  result.blue = color.blue;\n  result.alpha = color.alpha;\n  return result;\n};\n\n/**\n * Returns true if the first Color equals the second color.\n *\n * @param {Color} left The first Color to compare for equality.\n * @param {Color} right The second Color to compare for equality.\n * @returns {Boolean} <code>true</code> if the Colors are equal; otherwise, <code>false</code>.\n */\nColor.equals = function (left, right) {\n  return (\n    left === right || //\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(left) && //\n      (0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(right) && //\n      left.red === right.red && //\n      left.green === right.green && //\n      left.blue === right.blue && //\n      left.alpha === right.alpha)\n  );\n};\n\n/**\n * @private\n */\nColor.equalsArray = function (color, array, offset) {\n  return (\n    color.red === array[offset] &&\n    color.green === array[offset + 1] &&\n    color.blue === array[offset + 2] &&\n    color.alpha === array[offset + 3]\n  );\n};\n\n/**\n * Returns a duplicate of a Color instance.\n *\n * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\n * @returns {Color} The modified result parameter or a new instance if result was undefined.\n */\nColor.prototype.clone = function (result) {\n  return Color.clone(this, result);\n};\n\n/**\n * Returns true if this Color equals other.\n *\n * @param {Color} other The Color to compare for equality.\n * @returns {Boolean} <code>true</code> if the Colors are equal; otherwise, <code>false</code>.\n */\nColor.prototype.equals = function (other) {\n  return Color.equals(this, other);\n};\n\n/**\n * Returns <code>true</code> if this Color equals other componentwise within the specified epsilon.\n *\n * @param {Color} other The Color to compare for equality.\n * @param {Number} [epsilon=0.0] The epsilon to use for equality testing.\n * @returns {Boolean} <code>true</code> if the Colors are equal within the specified epsilon; otherwise, <code>false</code>.\n */\nColor.prototype.equalsEpsilon = function (other, epsilon) {\n  return (\n    this === other || //\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(other) && //\n      Math.abs(this.red - other.red) <= epsilon && //\n      Math.abs(this.green - other.green) <= epsilon && //\n      Math.abs(this.blue - other.blue) <= epsilon && //\n      Math.abs(this.alpha - other.alpha) <= epsilon)\n  );\n};\n\n/**\n * Creates a string representing this Color in the format \'(red, green, blue, alpha)\'.\n *\n * @returns {String} A string representing this Color in the format \'(red, green, blue, alpha)\'.\n */\nColor.prototype.toString = function () {\n  return (\n    "(" +\n    this.red +\n    ", " +\n    this.green +\n    ", " +\n    this.blue +\n    ", " +\n    this.alpha +\n    ")"\n  );\n};\n\n/**\n * Creates a string containing the CSS color value for this color.\n *\n * @returns {String} The CSS equivalent of this color.\n *\n * @see {@link http://www.w3.org/TR/css3-color/#rgba-color|CSS RGB or RGBA color values}\n */\nColor.prototype.toCssColorString = function () {\n  var red = Color.floatToByte(this.red);\n  var green = Color.floatToByte(this.green);\n  var blue = Color.floatToByte(this.blue);\n  if (this.alpha === 1) {\n    return "rgb(" + red + "," + green + "," + blue + ")";\n  }\n  return "rgba(" + red + "," + green + "," + blue + "," + this.alpha + ")";\n};\n\n/**\n * Creates a string containing CSS hex string color value for this color.\n *\n * @returns {String} The CSS hex string equivalent of this color.\n */\nColor.prototype.toCssHexString = function () {\n  var r = Color.floatToByte(this.red).toString(16);\n  if (r.length < 2) {\n    r = "0" + r;\n  }\n  var g = Color.floatToByte(this.green).toString(16);\n  if (g.length < 2) {\n    g = "0" + g;\n  }\n  var b = Color.floatToByte(this.blue).toString(16);\n  if (b.length < 2) {\n    b = "0" + b;\n  }\n  if (this.alpha < 1) {\n    var hexAlpha = Color.floatToByte(this.alpha).toString(16);\n    if (hexAlpha.length < 2) {\n      hexAlpha = "0" + hexAlpha;\n    }\n    return "#" + r + g + b + hexAlpha;\n  }\n  return "#" + r + g + b;\n};\n\n/**\n * Converts this color to an array of red, green, blue, and alpha values\n * that are in the range of 0 to 255.\n *\n * @param {Number[]} [result] The array to store the result in, if undefined a new instance will be created.\n * @returns {Number[]} The modified result parameter or a new instance if result was undefined.\n */\nColor.prototype.toBytes = function (result) {\n  var red = Color.floatToByte(this.red);\n  var green = Color.floatToByte(this.green);\n  var blue = Color.floatToByte(this.blue);\n  var alpha = Color.floatToByte(this.alpha);\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    return [red, green, blue, alpha];\n  }\n  result[0] = red;\n  result[1] = green;\n  result[2] = blue;\n  result[3] = alpha;\n  return result;\n};\n\n/**\n * Converts this color to a single numeric unsigned 32-bit RGBA value, using the endianness\n * of the system.\n *\n * @returns {Number} A single numeric unsigned 32-bit RGBA value.\n *\n *\n * @example\n * var rgba = Cesium.Color.BLUE.toRgba();\n *\n * @see Color.fromRgba\n */\nColor.prototype.toRgba = function () {\n  // scratchUint32Array and scratchUint8Array share an underlying array buffer\n  scratchUint8Array[0] = Color.floatToByte(this.red);\n  scratchUint8Array[1] = Color.floatToByte(this.green);\n  scratchUint8Array[2] = Color.floatToByte(this.blue);\n  scratchUint8Array[3] = Color.floatToByte(this.alpha);\n  return scratchUint32Array[0];\n};\n\n/**\n * Brightens this color by the provided magnitude.\n *\n * @param {Number} magnitude A positive number indicating the amount to brighten.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n *\n * @example\n * var brightBlue = Cesium.Color.BLUE.brighten(0.5, new Cesium.Color());\n */\nColor.prototype.brighten = function (magnitude, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("magnitude", magnitude);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("magnitude", magnitude, 0.0);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  magnitude = 1.0 - magnitude;\n  result.red = 1.0 - (1.0 - this.red) * magnitude;\n  result.green = 1.0 - (1.0 - this.green) * magnitude;\n  result.blue = 1.0 - (1.0 - this.blue) * magnitude;\n  result.alpha = this.alpha;\n  return result;\n};\n\n/**\n * Darkens this color by the provided magnitude.\n *\n * @param {Number} magnitude A positive number indicating the amount to darken.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n *\n * @example\n * var darkBlue = Cesium.Color.BLUE.darken(0.5, new Cesium.Color());\n */\nColor.prototype.darken = function (magnitude, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("magnitude", magnitude);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number.greaterThanOrEquals */ .Z.typeOf.number.greaterThanOrEquals("magnitude", magnitude, 0.0);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  magnitude = 1.0 - magnitude;\n  result.red = this.red * magnitude;\n  result.green = this.green * magnitude;\n  result.blue = this.blue * magnitude;\n  result.alpha = this.alpha;\n  return result;\n};\n\n/**\n * Creates a new Color that has the same red, green, and blue components\n * as this Color, but with the specified alpha value.\n *\n * @param {Number} alpha The new alpha component.\n * @param {Color} [result] The object onto which to store the result.\n * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\n *\n * @example var translucentRed = Cesium.Color.RED.withAlpha(0.9);\n */\nColor.prototype.withAlpha = function (alpha, result) {\n  return Color.fromAlpha(this, alpha, result);\n};\n\n/**\n * Computes the componentwise sum of two Colors.\n *\n * @param {Color} left The first Color.\n * @param {Color} right The second Color.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n */\nColor.add = function (left, right, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("left", left);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("right", right);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  result.red = left.red + right.red;\n  result.green = left.green + right.green;\n  result.blue = left.blue + right.blue;\n  result.alpha = left.alpha + right.alpha;\n  return result;\n};\n\n/**\n * Computes the componentwise difference of two Colors.\n *\n * @param {Color} left The first Color.\n * @param {Color} right The second Color.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n */\nColor.subtract = function (left, right, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("left", left);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("right", right);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  result.red = left.red - right.red;\n  result.green = left.green - right.green;\n  result.blue = left.blue - right.blue;\n  result.alpha = left.alpha - right.alpha;\n  return result;\n};\n\n/**\n * Computes the componentwise product of two Colors.\n *\n * @param {Color} left The first Color.\n * @param {Color} right The second Color.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n */\nColor.multiply = function (left, right, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("left", left);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("right", right);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  result.red = left.red * right.red;\n  result.green = left.green * right.green;\n  result.blue = left.blue * right.blue;\n  result.alpha = left.alpha * right.alpha;\n  return result;\n};\n\n/**\n * Computes the componentwise quotient of two Colors.\n *\n * @param {Color} left The first Color.\n * @param {Color} right The second Color.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n */\nColor.divide = function (left, right, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("left", left);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("right", right);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  result.red = left.red / right.red;\n  result.green = left.green / right.green;\n  result.blue = left.blue / right.blue;\n  result.alpha = left.alpha / right.alpha;\n  return result;\n};\n\n/**\n * Computes the componentwise modulus of two Colors.\n *\n * @param {Color} left The first Color.\n * @param {Color} right The second Color.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n */\nColor.mod = function (left, right, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("left", left);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("right", right);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  result.red = left.red % right.red;\n  result.green = left.green % right.green;\n  result.blue = left.blue % right.blue;\n  result.alpha = left.alpha % right.alpha;\n  return result;\n};\n\n/**\n * Computes the linear interpolation or extrapolation at t between the provided colors.\n *\n * @param {Color} start The color corresponding to t at 0.0.\n * @param {Color} end The color corresponding to t at 1.0.\n * @param {Number} t The point along t at which to interpolate.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n */\nColor.lerp = function (start, end, t, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("start", start);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("end", end);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("t", t);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  result.red = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].lerp */ .Z.lerp(start.red, end.red, t);\n  result.green = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].lerp */ .Z.lerp(start.green, end.green, t);\n  result.blue = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].lerp */ .Z.lerp(start.blue, end.blue, t);\n  result.alpha = _Math_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].lerp */ .Z.lerp(start.alpha, end.alpha, t);\n  return result;\n};\n\n/**\n * Multiplies the provided Color componentwise by the provided scalar.\n *\n * @param {Color} color The Color to be scaled.\n * @param {Number} scalar The scalar to multiply with.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n */\nColor.multiplyByScalar = function (color, scalar, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("color", color);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("scalar", scalar);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  result.red = color.red * scalar;\n  result.green = color.green * scalar;\n  result.blue = color.blue * scalar;\n  result.alpha = color.alpha * scalar;\n  return result;\n};\n\n/**\n * Divides the provided Color componentwise by the provided scalar.\n *\n * @param {Color} color The Color to be divided.\n * @param {Number} scalar The scalar to divide with.\n * @param {Color} result The object onto which to store the result.\n * @returns {Color} The modified result parameter.\n */\nColor.divideByScalar = function (color, scalar, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("color", color);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.number */ .Z.typeOf.number("scalar", scalar);\n  _Check_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].typeOf.object */ .Z.typeOf.object("result", result);\n  //>>includeEnd(\'debug\');\n\n  result.red = color.red / scalar;\n  result.green = color.green / scalar;\n  result.blue = color.blue / scalar;\n  result.alpha = color.alpha / scalar;\n  return result;\n};\n\n/**\n * An immutable Color instance initialized to CSS color #F0F8FF\n * <span class="colorSwath" style="background: #F0F8FF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.ALICEBLUE = Object.freeze(Color.fromCssColorString("#F0F8FF"));\n\n/**\n * An immutable Color instance initialized to CSS color #FAEBD7\n * <span class="colorSwath" style="background: #FAEBD7;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.ANTIQUEWHITE = Object.freeze(Color.fromCssColorString("#FAEBD7"));\n\n/**\n * An immutable Color instance initialized to CSS color #00FFFF\n * <span class="colorSwath" style="background: #00FFFF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.AQUA = Object.freeze(Color.fromCssColorString("#00FFFF"));\n\n/**\n * An immutable Color instance initialized to CSS color #7FFFD4\n * <span class="colorSwath" style="background: #7FFFD4;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.AQUAMARINE = Object.freeze(Color.fromCssColorString("#7FFFD4"));\n\n/**\n * An immutable Color instance initialized to CSS color #F0FFFF\n * <span class="colorSwath" style="background: #F0FFFF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.AZURE = Object.freeze(Color.fromCssColorString("#F0FFFF"));\n\n/**\n * An immutable Color instance initialized to CSS color #F5F5DC\n * <span class="colorSwath" style="background: #F5F5DC;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.BEIGE = Object.freeze(Color.fromCssColorString("#F5F5DC"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFE4C4\n * <span class="colorSwath" style="background: #FFE4C4;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.BISQUE = Object.freeze(Color.fromCssColorString("#FFE4C4"));\n\n/**\n * An immutable Color instance initialized to CSS color #000000\n * <span class="colorSwath" style="background: #000000;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.BLACK = Object.freeze(Color.fromCssColorString("#000000"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFEBCD\n * <span class="colorSwath" style="background: #FFEBCD;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.BLANCHEDALMOND = Object.freeze(Color.fromCssColorString("#FFEBCD"));\n\n/**\n * An immutable Color instance initialized to CSS color #0000FF\n * <span class="colorSwath" style="background: #0000FF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.BLUE = Object.freeze(Color.fromCssColorString("#0000FF"));\n\n/**\n * An immutable Color instance initialized to CSS color #8A2BE2\n * <span class="colorSwath" style="background: #8A2BE2;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.BLUEVIOLET = Object.freeze(Color.fromCssColorString("#8A2BE2"));\n\n/**\n * An immutable Color instance initialized to CSS color #A52A2A\n * <span class="colorSwath" style="background: #A52A2A;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.BROWN = Object.freeze(Color.fromCssColorString("#A52A2A"));\n\n/**\n * An immutable Color instance initialized to CSS color #DEB887\n * <span class="colorSwath" style="background: #DEB887;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.BURLYWOOD = Object.freeze(Color.fromCssColorString("#DEB887"));\n\n/**\n * An immutable Color instance initialized to CSS color #5F9EA0\n * <span class="colorSwath" style="background: #5F9EA0;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.CADETBLUE = Object.freeze(Color.fromCssColorString("#5F9EA0"));\n/**\n * An immutable Color instance initialized to CSS color #7FFF00\n * <span class="colorSwath" style="background: #7FFF00;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.CHARTREUSE = Object.freeze(Color.fromCssColorString("#7FFF00"));\n\n/**\n * An immutable Color instance initialized to CSS color #D2691E\n * <span class="colorSwath" style="background: #D2691E;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.CHOCOLATE = Object.freeze(Color.fromCssColorString("#D2691E"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF7F50\n * <span class="colorSwath" style="background: #FF7F50;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.CORAL = Object.freeze(Color.fromCssColorString("#FF7F50"));\n\n/**\n * An immutable Color instance initialized to CSS color #6495ED\n * <span class="colorSwath" style="background: #6495ED;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.CORNFLOWERBLUE = Object.freeze(Color.fromCssColorString("#6495ED"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFF8DC\n * <span class="colorSwath" style="background: #FFF8DC;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.CORNSILK = Object.freeze(Color.fromCssColorString("#FFF8DC"));\n\n/**\n * An immutable Color instance initialized to CSS color #DC143C\n * <span class="colorSwath" style="background: #DC143C;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.CRIMSON = Object.freeze(Color.fromCssColorString("#DC143C"));\n\n/**\n * An immutable Color instance initialized to CSS color #00FFFF\n * <span class="colorSwath" style="background: #00FFFF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.CYAN = Object.freeze(Color.fromCssColorString("#00FFFF"));\n\n/**\n * An immutable Color instance initialized to CSS color #00008B\n * <span class="colorSwath" style="background: #00008B;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKBLUE = Object.freeze(Color.fromCssColorString("#00008B"));\n\n/**\n * An immutable Color instance initialized to CSS color #008B8B\n * <span class="colorSwath" style="background: #008B8B;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKCYAN = Object.freeze(Color.fromCssColorString("#008B8B"));\n\n/**\n * An immutable Color instance initialized to CSS color #B8860B\n * <span class="colorSwath" style="background: #B8860B;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKGOLDENROD = Object.freeze(Color.fromCssColorString("#B8860B"));\n\n/**\n * An immutable Color instance initialized to CSS color #A9A9A9\n * <span class="colorSwath" style="background: #A9A9A9;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKGRAY = Object.freeze(Color.fromCssColorString("#A9A9A9"));\n\n/**\n * An immutable Color instance initialized to CSS color #006400\n * <span class="colorSwath" style="background: #006400;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKGREEN = Object.freeze(Color.fromCssColorString("#006400"));\n\n/**\n * An immutable Color instance initialized to CSS color #A9A9A9\n * <span class="colorSwath" style="background: #A9A9A9;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKGREY = Color.DARKGRAY;\n\n/**\n * An immutable Color instance initialized to CSS color #BDB76B\n * <span class="colorSwath" style="background: #BDB76B;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKKHAKI = Object.freeze(Color.fromCssColorString("#BDB76B"));\n\n/**\n * An immutable Color instance initialized to CSS color #8B008B\n * <span class="colorSwath" style="background: #8B008B;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKMAGENTA = Object.freeze(Color.fromCssColorString("#8B008B"));\n\n/**\n * An immutable Color instance initialized to CSS color #556B2F\n * <span class="colorSwath" style="background: #556B2F;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKOLIVEGREEN = Object.freeze(Color.fromCssColorString("#556B2F"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF8C00\n * <span class="colorSwath" style="background: #FF8C00;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKORANGE = Object.freeze(Color.fromCssColorString("#FF8C00"));\n\n/**\n * An immutable Color instance initialized to CSS color #9932CC\n * <span class="colorSwath" style="background: #9932CC;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKORCHID = Object.freeze(Color.fromCssColorString("#9932CC"));\n\n/**\n * An immutable Color instance initialized to CSS color #8B0000\n * <span class="colorSwath" style="background: #8B0000;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKRED = Object.freeze(Color.fromCssColorString("#8B0000"));\n\n/**\n * An immutable Color instance initialized to CSS color #E9967A\n * <span class="colorSwath" style="background: #E9967A;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKSALMON = Object.freeze(Color.fromCssColorString("#E9967A"));\n\n/**\n * An immutable Color instance initialized to CSS color #8FBC8F\n * <span class="colorSwath" style="background: #8FBC8F;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKSEAGREEN = Object.freeze(Color.fromCssColorString("#8FBC8F"));\n\n/**\n * An immutable Color instance initialized to CSS color #483D8B\n * <span class="colorSwath" style="background: #483D8B;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKSLATEBLUE = Object.freeze(Color.fromCssColorString("#483D8B"));\n\n/**\n * An immutable Color instance initialized to CSS color #2F4F4F\n * <span class="colorSwath" style="background: #2F4F4F;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKSLATEGRAY = Object.freeze(Color.fromCssColorString("#2F4F4F"));\n\n/**\n * An immutable Color instance initialized to CSS color #2F4F4F\n * <span class="colorSwath" style="background: #2F4F4F;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKSLATEGREY = Color.DARKSLATEGRAY;\n\n/**\n * An immutable Color instance initialized to CSS color #00CED1\n * <span class="colorSwath" style="background: #00CED1;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKTURQUOISE = Object.freeze(Color.fromCssColorString("#00CED1"));\n\n/**\n * An immutable Color instance initialized to CSS color #9400D3\n * <span class="colorSwath" style="background: #9400D3;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DARKVIOLET = Object.freeze(Color.fromCssColorString("#9400D3"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF1493\n * <span class="colorSwath" style="background: #FF1493;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DEEPPINK = Object.freeze(Color.fromCssColorString("#FF1493"));\n\n/**\n * An immutable Color instance initialized to CSS color #00BFFF\n * <span class="colorSwath" style="background: #00BFFF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DEEPSKYBLUE = Object.freeze(Color.fromCssColorString("#00BFFF"));\n\n/**\n * An immutable Color instance initialized to CSS color #696969\n * <span class="colorSwath" style="background: #696969;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DIMGRAY = Object.freeze(Color.fromCssColorString("#696969"));\n\n/**\n * An immutable Color instance initialized to CSS color #696969\n * <span class="colorSwath" style="background: #696969;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DIMGREY = Color.DIMGRAY;\n\n/**\n * An immutable Color instance initialized to CSS color #1E90FF\n * <span class="colorSwath" style="background: #1E90FF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.DODGERBLUE = Object.freeze(Color.fromCssColorString("#1E90FF"));\n\n/**\n * An immutable Color instance initialized to CSS color #B22222\n * <span class="colorSwath" style="background: #B22222;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.FIREBRICK = Object.freeze(Color.fromCssColorString("#B22222"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFFAF0\n * <span class="colorSwath" style="background: #FFFAF0;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.FLORALWHITE = Object.freeze(Color.fromCssColorString("#FFFAF0"));\n\n/**\n * An immutable Color instance initialized to CSS color #228B22\n * <span class="colorSwath" style="background: #228B22;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.FORESTGREEN = Object.freeze(Color.fromCssColorString("#228B22"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF00FF\n * <span class="colorSwath" style="background: #FF00FF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.FUCHSIA = Object.freeze(Color.fromCssColorString("#FF00FF"));\n\n/**\n * An immutable Color instance initialized to CSS color #DCDCDC\n * <span class="colorSwath" style="background: #DCDCDC;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.GAINSBORO = Object.freeze(Color.fromCssColorString("#DCDCDC"));\n\n/**\n * An immutable Color instance initialized to CSS color #F8F8FF\n * <span class="colorSwath" style="background: #F8F8FF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.GHOSTWHITE = Object.freeze(Color.fromCssColorString("#F8F8FF"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFD700\n * <span class="colorSwath" style="background: #FFD700;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.GOLD = Object.freeze(Color.fromCssColorString("#FFD700"));\n\n/**\n * An immutable Color instance initialized to CSS color #DAA520\n * <span class="colorSwath" style="background: #DAA520;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.GOLDENROD = Object.freeze(Color.fromCssColorString("#DAA520"));\n\n/**\n * An immutable Color instance initialized to CSS color #808080\n * <span class="colorSwath" style="background: #808080;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.GRAY = Object.freeze(Color.fromCssColorString("#808080"));\n\n/**\n * An immutable Color instance initialized to CSS color #008000\n * <span class="colorSwath" style="background: #008000;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.GREEN = Object.freeze(Color.fromCssColorString("#008000"));\n\n/**\n * An immutable Color instance initialized to CSS color #ADFF2F\n * <span class="colorSwath" style="background: #ADFF2F;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.GREENYELLOW = Object.freeze(Color.fromCssColorString("#ADFF2F"));\n\n/**\n * An immutable Color instance initialized to CSS color #808080\n * <span class="colorSwath" style="background: #808080;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.GREY = Color.GRAY;\n\n/**\n * An immutable Color instance initialized to CSS color #F0FFF0\n * <span class="colorSwath" style="background: #F0FFF0;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.HONEYDEW = Object.freeze(Color.fromCssColorString("#F0FFF0"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF69B4\n * <span class="colorSwath" style="background: #FF69B4;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.HOTPINK = Object.freeze(Color.fromCssColorString("#FF69B4"));\n\n/**\n * An immutable Color instance initialized to CSS color #CD5C5C\n * <span class="colorSwath" style="background: #CD5C5C;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.INDIANRED = Object.freeze(Color.fromCssColorString("#CD5C5C"));\n\n/**\n * An immutable Color instance initialized to CSS color #4B0082\n * <span class="colorSwath" style="background: #4B0082;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.INDIGO = Object.freeze(Color.fromCssColorString("#4B0082"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFFFF0\n * <span class="colorSwath" style="background: #FFFFF0;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.IVORY = Object.freeze(Color.fromCssColorString("#FFFFF0"));\n\n/**\n * An immutable Color instance initialized to CSS color #F0E68C\n * <span class="colorSwath" style="background: #F0E68C;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.KHAKI = Object.freeze(Color.fromCssColorString("#F0E68C"));\n\n/**\n * An immutable Color instance initialized to CSS color #E6E6FA\n * <span class="colorSwath" style="background: #E6E6FA;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LAVENDER = Object.freeze(Color.fromCssColorString("#E6E6FA"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFF0F5\n * <span class="colorSwath" style="background: #FFF0F5;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LAVENDAR_BLUSH = Object.freeze(Color.fromCssColorString("#FFF0F5"));\n\n/**\n * An immutable Color instance initialized to CSS color #7CFC00\n * <span class="colorSwath" style="background: #7CFC00;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LAWNGREEN = Object.freeze(Color.fromCssColorString("#7CFC00"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFFACD\n * <span class="colorSwath" style="background: #FFFACD;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LEMONCHIFFON = Object.freeze(Color.fromCssColorString("#FFFACD"));\n\n/**\n * An immutable Color instance initialized to CSS color #ADD8E6\n * <span class="colorSwath" style="background: #ADD8E6;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTBLUE = Object.freeze(Color.fromCssColorString("#ADD8E6"));\n\n/**\n * An immutable Color instance initialized to CSS color #F08080\n * <span class="colorSwath" style="background: #F08080;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTCORAL = Object.freeze(Color.fromCssColorString("#F08080"));\n\n/**\n * An immutable Color instance initialized to CSS color #E0FFFF\n * <span class="colorSwath" style="background: #E0FFFF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTCYAN = Object.freeze(Color.fromCssColorString("#E0FFFF"));\n\n/**\n * An immutable Color instance initialized to CSS color #FAFAD2\n * <span class="colorSwath" style="background: #FAFAD2;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTGOLDENRODYELLOW = Object.freeze(Color.fromCssColorString("#FAFAD2"));\n\n/**\n * An immutable Color instance initialized to CSS color #D3D3D3\n * <span class="colorSwath" style="background: #D3D3D3;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTGRAY = Object.freeze(Color.fromCssColorString("#D3D3D3"));\n\n/**\n * An immutable Color instance initialized to CSS color #90EE90\n * <span class="colorSwath" style="background: #90EE90;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTGREEN = Object.freeze(Color.fromCssColorString("#90EE90"));\n\n/**\n * An immutable Color instance initialized to CSS color #D3D3D3\n * <span class="colorSwath" style="background: #D3D3D3;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTGREY = Color.LIGHTGRAY;\n\n/**\n * An immutable Color instance initialized to CSS color #FFB6C1\n * <span class="colorSwath" style="background: #FFB6C1;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTPINK = Object.freeze(Color.fromCssColorString("#FFB6C1"));\n\n/**\n * An immutable Color instance initialized to CSS color #20B2AA\n * <span class="colorSwath" style="background: #20B2AA;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTSEAGREEN = Object.freeze(Color.fromCssColorString("#20B2AA"));\n\n/**\n * An immutable Color instance initialized to CSS color #87CEFA\n * <span class="colorSwath" style="background: #87CEFA;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTSKYBLUE = Object.freeze(Color.fromCssColorString("#87CEFA"));\n\n/**\n * An immutable Color instance initialized to CSS color #778899\n * <span class="colorSwath" style="background: #778899;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTSLATEGRAY = Object.freeze(Color.fromCssColorString("#778899"));\n\n/**\n * An immutable Color instance initialized to CSS color #778899\n * <span class="colorSwath" style="background: #778899;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTSLATEGREY = Color.LIGHTSLATEGRAY;\n\n/**\n * An immutable Color instance initialized to CSS color #B0C4DE\n * <span class="colorSwath" style="background: #B0C4DE;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTSTEELBLUE = Object.freeze(Color.fromCssColorString("#B0C4DE"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFFFE0\n * <span class="colorSwath" style="background: #FFFFE0;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIGHTYELLOW = Object.freeze(Color.fromCssColorString("#FFFFE0"));\n\n/**\n * An immutable Color instance initialized to CSS color #00FF00\n * <span class="colorSwath" style="background: #00FF00;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIME = Object.freeze(Color.fromCssColorString("#00FF00"));\n\n/**\n * An immutable Color instance initialized to CSS color #32CD32\n * <span class="colorSwath" style="background: #32CD32;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LIMEGREEN = Object.freeze(Color.fromCssColorString("#32CD32"));\n\n/**\n * An immutable Color instance initialized to CSS color #FAF0E6\n * <span class="colorSwath" style="background: #FAF0E6;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.LINEN = Object.freeze(Color.fromCssColorString("#FAF0E6"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF00FF\n * <span class="colorSwath" style="background: #FF00FF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MAGENTA = Object.freeze(Color.fromCssColorString("#FF00FF"));\n\n/**\n * An immutable Color instance initialized to CSS color #800000\n * <span class="colorSwath" style="background: #800000;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MAROON = Object.freeze(Color.fromCssColorString("#800000"));\n\n/**\n * An immutable Color instance initialized to CSS color #66CDAA\n * <span class="colorSwath" style="background: #66CDAA;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMAQUAMARINE = Object.freeze(Color.fromCssColorString("#66CDAA"));\n\n/**\n * An immutable Color instance initialized to CSS color #0000CD\n * <span class="colorSwath" style="background: #0000CD;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMBLUE = Object.freeze(Color.fromCssColorString("#0000CD"));\n\n/**\n * An immutable Color instance initialized to CSS color #BA55D3\n * <span class="colorSwath" style="background: #BA55D3;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMORCHID = Object.freeze(Color.fromCssColorString("#BA55D3"));\n\n/**\n * An immutable Color instance initialized to CSS color #9370DB\n * <span class="colorSwath" style="background: #9370DB;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMPURPLE = Object.freeze(Color.fromCssColorString("#9370DB"));\n\n/**\n * An immutable Color instance initialized to CSS color #3CB371\n * <span class="colorSwath" style="background: #3CB371;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMSEAGREEN = Object.freeze(Color.fromCssColorString("#3CB371"));\n\n/**\n * An immutable Color instance initialized to CSS color #7B68EE\n * <span class="colorSwath" style="background: #7B68EE;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMSLATEBLUE = Object.freeze(Color.fromCssColorString("#7B68EE"));\n\n/**\n * An immutable Color instance initialized to CSS color #00FA9A\n * <span class="colorSwath" style="background: #00FA9A;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMSPRINGGREEN = Object.freeze(Color.fromCssColorString("#00FA9A"));\n\n/**\n * An immutable Color instance initialized to CSS color #48D1CC\n * <span class="colorSwath" style="background: #48D1CC;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMTURQUOISE = Object.freeze(Color.fromCssColorString("#48D1CC"));\n\n/**\n * An immutable Color instance initialized to CSS color #C71585\n * <span class="colorSwath" style="background: #C71585;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MEDIUMVIOLETRED = Object.freeze(Color.fromCssColorString("#C71585"));\n\n/**\n * An immutable Color instance initialized to CSS color #191970\n * <span class="colorSwath" style="background: #191970;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MIDNIGHTBLUE = Object.freeze(Color.fromCssColorString("#191970"));\n\n/**\n * An immutable Color instance initialized to CSS color #F5FFFA\n * <span class="colorSwath" style="background: #F5FFFA;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MINTCREAM = Object.freeze(Color.fromCssColorString("#F5FFFA"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFE4E1\n * <span class="colorSwath" style="background: #FFE4E1;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MISTYROSE = Object.freeze(Color.fromCssColorString("#FFE4E1"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFE4B5\n * <span class="colorSwath" style="background: #FFE4B5;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.MOCCASIN = Object.freeze(Color.fromCssColorString("#FFE4B5"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFDEAD\n * <span class="colorSwath" style="background: #FFDEAD;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.NAVAJOWHITE = Object.freeze(Color.fromCssColorString("#FFDEAD"));\n\n/**\n * An immutable Color instance initialized to CSS color #000080\n * <span class="colorSwath" style="background: #000080;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.NAVY = Object.freeze(Color.fromCssColorString("#000080"));\n\n/**\n * An immutable Color instance initialized to CSS color #FDF5E6\n * <span class="colorSwath" style="background: #FDF5E6;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.OLDLACE = Object.freeze(Color.fromCssColorString("#FDF5E6"));\n\n/**\n * An immutable Color instance initialized to CSS color #808000\n * <span class="colorSwath" style="background: #808000;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.OLIVE = Object.freeze(Color.fromCssColorString("#808000"));\n\n/**\n * An immutable Color instance initialized to CSS color #6B8E23\n * <span class="colorSwath" style="background: #6B8E23;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.OLIVEDRAB = Object.freeze(Color.fromCssColorString("#6B8E23"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFA500\n * <span class="colorSwath" style="background: #FFA500;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.ORANGE = Object.freeze(Color.fromCssColorString("#FFA500"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF4500\n * <span class="colorSwath" style="background: #FF4500;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.ORANGERED = Object.freeze(Color.fromCssColorString("#FF4500"));\n\n/**\n * An immutable Color instance initialized to CSS color #DA70D6\n * <span class="colorSwath" style="background: #DA70D6;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.ORCHID = Object.freeze(Color.fromCssColorString("#DA70D6"));\n\n/**\n * An immutable Color instance initialized to CSS color #EEE8AA\n * <span class="colorSwath" style="background: #EEE8AA;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PALEGOLDENROD = Object.freeze(Color.fromCssColorString("#EEE8AA"));\n\n/**\n * An immutable Color instance initialized to CSS color #98FB98\n * <span class="colorSwath" style="background: #98FB98;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PALEGREEN = Object.freeze(Color.fromCssColorString("#98FB98"));\n\n/**\n * An immutable Color instance initialized to CSS color #AFEEEE\n * <span class="colorSwath" style="background: #AFEEEE;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PALETURQUOISE = Object.freeze(Color.fromCssColorString("#AFEEEE"));\n\n/**\n * An immutable Color instance initialized to CSS color #DB7093\n * <span class="colorSwath" style="background: #DB7093;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PALEVIOLETRED = Object.freeze(Color.fromCssColorString("#DB7093"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFEFD5\n * <span class="colorSwath" style="background: #FFEFD5;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PAPAYAWHIP = Object.freeze(Color.fromCssColorString("#FFEFD5"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFDAB9\n * <span class="colorSwath" style="background: #FFDAB9;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PEACHPUFF = Object.freeze(Color.fromCssColorString("#FFDAB9"));\n\n/**\n * An immutable Color instance initialized to CSS color #CD853F\n * <span class="colorSwath" style="background: #CD853F;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PERU = Object.freeze(Color.fromCssColorString("#CD853F"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFC0CB\n * <span class="colorSwath" style="background: #FFC0CB;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PINK = Object.freeze(Color.fromCssColorString("#FFC0CB"));\n\n/**\n * An immutable Color instance initialized to CSS color #DDA0DD\n * <span class="colorSwath" style="background: #DDA0DD;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PLUM = Object.freeze(Color.fromCssColorString("#DDA0DD"));\n\n/**\n * An immutable Color instance initialized to CSS color #B0E0E6\n * <span class="colorSwath" style="background: #B0E0E6;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.POWDERBLUE = Object.freeze(Color.fromCssColorString("#B0E0E6"));\n\n/**\n * An immutable Color instance initialized to CSS color #800080\n * <span class="colorSwath" style="background: #800080;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.PURPLE = Object.freeze(Color.fromCssColorString("#800080"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF0000\n * <span class="colorSwath" style="background: #FF0000;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.RED = Object.freeze(Color.fromCssColorString("#FF0000"));\n\n/**\n * An immutable Color instance initialized to CSS color #BC8F8F\n * <span class="colorSwath" style="background: #BC8F8F;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.ROSYBROWN = Object.freeze(Color.fromCssColorString("#BC8F8F"));\n\n/**\n * An immutable Color instance initialized to CSS color #4169E1\n * <span class="colorSwath" style="background: #4169E1;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.ROYALBLUE = Object.freeze(Color.fromCssColorString("#4169E1"));\n\n/**\n * An immutable Color instance initialized to CSS color #8B4513\n * <span class="colorSwath" style="background: #8B4513;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SADDLEBROWN = Object.freeze(Color.fromCssColorString("#8B4513"));\n\n/**\n * An immutable Color instance initialized to CSS color #FA8072\n * <span class="colorSwath" style="background: #FA8072;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SALMON = Object.freeze(Color.fromCssColorString("#FA8072"));\n\n/**\n * An immutable Color instance initialized to CSS color #F4A460\n * <span class="colorSwath" style="background: #F4A460;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SANDYBROWN = Object.freeze(Color.fromCssColorString("#F4A460"));\n\n/**\n * An immutable Color instance initialized to CSS color #2E8B57\n * <span class="colorSwath" style="background: #2E8B57;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SEAGREEN = Object.freeze(Color.fromCssColorString("#2E8B57"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFF5EE\n * <span class="colorSwath" style="background: #FFF5EE;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SEASHELL = Object.freeze(Color.fromCssColorString("#FFF5EE"));\n\n/**\n * An immutable Color instance initialized to CSS color #A0522D\n * <span class="colorSwath" style="background: #A0522D;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SIENNA = Object.freeze(Color.fromCssColorString("#A0522D"));\n\n/**\n * An immutable Color instance initialized to CSS color #C0C0C0\n * <span class="colorSwath" style="background: #C0C0C0;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SILVER = Object.freeze(Color.fromCssColorString("#C0C0C0"));\n\n/**\n * An immutable Color instance initialized to CSS color #87CEEB\n * <span class="colorSwath" style="background: #87CEEB;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SKYBLUE = Object.freeze(Color.fromCssColorString("#87CEEB"));\n\n/**\n * An immutable Color instance initialized to CSS color #6A5ACD\n * <span class="colorSwath" style="background: #6A5ACD;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SLATEBLUE = Object.freeze(Color.fromCssColorString("#6A5ACD"));\n\n/**\n * An immutable Color instance initialized to CSS color #708090\n * <span class="colorSwath" style="background: #708090;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SLATEGRAY = Object.freeze(Color.fromCssColorString("#708090"));\n\n/**\n * An immutable Color instance initialized to CSS color #708090\n * <span class="colorSwath" style="background: #708090;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SLATEGREY = Color.SLATEGRAY;\n\n/**\n * An immutable Color instance initialized to CSS color #FFFAFA\n * <span class="colorSwath" style="background: #FFFAFA;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SNOW = Object.freeze(Color.fromCssColorString("#FFFAFA"));\n\n/**\n * An immutable Color instance initialized to CSS color #00FF7F\n * <span class="colorSwath" style="background: #00FF7F;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.SPRINGGREEN = Object.freeze(Color.fromCssColorString("#00FF7F"));\n\n/**\n * An immutable Color instance initialized to CSS color #4682B4\n * <span class="colorSwath" style="background: #4682B4;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.STEELBLUE = Object.freeze(Color.fromCssColorString("#4682B4"));\n\n/**\n * An immutable Color instance initialized to CSS color #D2B48C\n * <span class="colorSwath" style="background: #D2B48C;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.TAN = Object.freeze(Color.fromCssColorString("#D2B48C"));\n\n/**\n * An immutable Color instance initialized to CSS color #008080\n * <span class="colorSwath" style="background: #008080;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.TEAL = Object.freeze(Color.fromCssColorString("#008080"));\n\n/**\n * An immutable Color instance initialized to CSS color #D8BFD8\n * <span class="colorSwath" style="background: #D8BFD8;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.THISTLE = Object.freeze(Color.fromCssColorString("#D8BFD8"));\n\n/**\n * An immutable Color instance initialized to CSS color #FF6347\n * <span class="colorSwath" style="background: #FF6347;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.TOMATO = Object.freeze(Color.fromCssColorString("#FF6347"));\n\n/**\n * An immutable Color instance initialized to CSS color #40E0D0\n * <span class="colorSwath" style="background: #40E0D0;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.TURQUOISE = Object.freeze(Color.fromCssColorString("#40E0D0"));\n\n/**\n * An immutable Color instance initialized to CSS color #EE82EE\n * <span class="colorSwath" style="background: #EE82EE;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.VIOLET = Object.freeze(Color.fromCssColorString("#EE82EE"));\n\n/**\n * An immutable Color instance initialized to CSS color #F5DEB3\n * <span class="colorSwath" style="background: #F5DEB3;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.WHEAT = Object.freeze(Color.fromCssColorString("#F5DEB3"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFFFFF\n * <span class="colorSwath" style="background: #FFFFFF;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.WHITE = Object.freeze(Color.fromCssColorString("#FFFFFF"));\n\n/**\n * An immutable Color instance initialized to CSS color #F5F5F5\n * <span class="colorSwath" style="background: #F5F5F5;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.WHITESMOKE = Object.freeze(Color.fromCssColorString("#F5F5F5"));\n\n/**\n * An immutable Color instance initialized to CSS color #FFFF00\n * <span class="colorSwath" style="background: #FFFF00;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.YELLOW = Object.freeze(Color.fromCssColorString("#FFFF00"));\n\n/**\n * An immutable Color instance initialized to CSS color #9ACD32\n * <span class="colorSwath" style="background: #9ACD32;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.YELLOWGREEN = Object.freeze(Color.fromCssColorString("#9ACD32"));\n\n/**\n * An immutable Color instance initialized to CSS transparent.\n * <span class="colorSwath" style="background: transparent;"></span>\n *\n * @constant\n * @type {Color}\n */\nColor.TRANSPARENT = Object.freeze(new Color(0, 0, 0, 0));\n/* harmony default export */ __webpack_exports__["Z"] = (Color);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///59947\n')},92062:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59947);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84828);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12572);\n\n\n\n\n\n\n/**\n * Value and type information for per-instance geometry color.\n *\n * @alias ColorGeometryInstanceAttribute\n * @constructor\n *\n * @param {Number} [red=1.0] The red component.\n * @param {Number} [green=1.0] The green component.\n * @param {Number} [blue=1.0] The blue component.\n * @param {Number} [alpha=1.0] The alpha component.\n *\n *\n * @example\n * var instance = new Cesium.GeometryInstance({\n *   geometry : Cesium.BoxGeometry.fromDimensions({\n *     dimensions : new Cesium.Cartesian3(1000000.0, 1000000.0, 500000.0)\n *   }),\n *   modelMatrix : Cesium.Matrix4.multiplyByTranslation(Cesium.Transforms.eastNorthUpToFixedFrame(\n *     Cesium.Cartesian3.fromDegrees(0.0, 0.0)), new Cesium.Cartesian3(0.0, 0.0, 1000000.0), new Cesium.Matrix4()),\n *   id : \'box\',\n *   attributes : {\n *     color : new Cesium.ColorGeometryInstanceAttribute(red, green, blue, alpha)\n *   }\n * });\n *\n * @see GeometryInstance\n * @see GeometryInstanceAttribute\n */\nfunction ColorGeometryInstanceAttribute(red, green, blue, alpha) {\n  red = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(red, 1.0);\n  green = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(green, 1.0);\n  blue = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(blue, 1.0);\n  alpha = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(alpha, 1.0);\n\n  /**\n   * The values for the attributes stored in a typed array.\n   *\n   * @type Uint8Array\n   *\n   * @default [255, 255, 255, 255]\n   */\n  this.value = new Uint8Array([\n    _Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].floatToByte */ .Z.floatToByte(red),\n    _Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].floatToByte */ .Z.floatToByte(green),\n    _Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].floatToByte */ .Z.floatToByte(blue),\n    _Color_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].floatToByte */ .Z.floatToByte(alpha),\n  ]);\n}\n\nObject.defineProperties(ColorGeometryInstanceAttribute.prototype, {\n  /**\n   * The datatype of each component in the attribute, e.g., individual elements in\n   * {@link ColorGeometryInstanceAttribute#value}.\n   *\n   * @memberof ColorGeometryInstanceAttribute.prototype\n   *\n   * @type {ComponentDatatype}\n   * @readonly\n   *\n   * @default {@link ComponentDatatype.UNSIGNED_BYTE}\n   */\n  componentDatatype: {\n    get: function () {\n      return _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE;\n    },\n  },\n\n  /**\n   * The number of components in the attributes, i.e., {@link ColorGeometryInstanceAttribute#value}.\n   *\n   * @memberof ColorGeometryInstanceAttribute.prototype\n   *\n   * @type {Number}\n   * @readonly\n   *\n   * @default 4\n   */\n  componentsPerAttribute: {\n    get: function () {\n      return 4;\n    },\n  },\n\n  /**\n   * When <code>true</code> and <code>componentDatatype</code> is an integer format,\n   * indicate that the components should be mapped to the range [0, 1] (unsigned)\n   * or [-1, 1] (signed) when they are accessed as floating-point for rendering.\n   *\n   * @memberof ColorGeometryInstanceAttribute.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  normalize: {\n    get: function () {\n      return true;\n    },\n  },\n});\n\n/**\n * Creates a new {@link ColorGeometryInstanceAttribute} instance given the provided {@link Color}.\n *\n * @param {Color} color The color.\n * @returns {ColorGeometryInstanceAttribute} The new {@link ColorGeometryInstanceAttribute} instance.\n *\n * @example\n * var instance = new Cesium.GeometryInstance({\n *   geometry : geometry,\n *   attributes : {\n *     color : Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.CORNFLOWERBLUE),\n *   }\n * });\n */\nColorGeometryInstanceAttribute.fromColor = function (color) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(color)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("color is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return new ColorGeometryInstanceAttribute(\n    color.red,\n    color.green,\n    color.blue,\n    color.alpha\n  );\n};\n\n/**\n * Converts a color to a typed array that can be used to assign a color attribute.\n *\n * @param {Color} color The color.\n * @param {Uint8Array} [result] The array to store the result in, if undefined a new instance will be created.\n *\n * @returns {Uint8Array} The modified result parameter or a new instance if result was undefined.\n *\n * @example\n * var attributes = primitive.getGeometryInstanceAttributes(\'an id\');\n * attributes.color = Cesium.ColorGeometryInstanceAttribute.toValue(Cesium.Color.AQUA, attributes.color);\n */\nColorGeometryInstanceAttribute.toValue = function (color, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(color)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z("color is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(result)) {\n    return new Uint8Array(color.toBytes());\n  }\n  return color.toBytes(result);\n};\n\n/**\n * Compares the provided ColorGeometryInstanceAttributes and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {ColorGeometryInstanceAttribute} [left] The first ColorGeometryInstanceAttribute.\n * @param {ColorGeometryInstanceAttribute} [right] The second ColorGeometryInstanceAttribute.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nColorGeometryInstanceAttribute.equals = function (left, right) {\n  return (\n    left === right ||\n    ((0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(left) &&\n      (0,_defined_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(right) &&\n      left.value[0] === right.value[0] &&\n      left.value[1] === right.value[1] &&\n      left.value[2] === right.value[2] &&\n      left.value[3] === right.value[3])\n  );\n};\n/* harmony default export */ __webpack_exports__["Z"] = (ColorGeometryInstanceAttribute);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIwNjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7QUFDd0I7QUFDVjtBQUNWO0FBQ2M7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFFQUFZO0FBQ3BCLFVBQVUscUVBQVk7QUFDdEIsU0FBUyxxRUFBWTtBQUNyQixVQUFVLHFFQUFZOztBQUV0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxrRkFBaUI7QUFDckIsSUFBSSxrRkFBaUI7QUFDckIsSUFBSSxrRkFBaUI7QUFDckIsSUFBSSxrRkFBaUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDJDQUEyQztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtHQUErQjtBQUM1QyxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBLHdEQUF3RCwyQ0FBMkM7QUFDbkc7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQSxrQkFBa0Isc0NBQXNDLDZCQUE2QixZQUFZO0FBQ2pHO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsZ0NBQWdDLFNBQVMsc0NBQXNDO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsWUFBWTtBQUN2QjtBQUNBLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0VBQU87QUFDZCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7O0FBRUEsT0FBTyxnRUFBTztBQUNkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnQ0FBZ0M7QUFDM0MsV0FBVyxnQ0FBZ0M7QUFDM0MsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxnRUFBTztBQUNaLE1BQU0sZ0VBQU87QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBZSw4QkFBOEIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL0NvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5qcz9lNWQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2xvciBmcm9tIFwiLi9Db2xvci5qc1wiO1xuaW1wb3J0IENvbXBvbmVudERhdGF0eXBlIGZyb20gXCIuL0NvbXBvbmVudERhdGF0eXBlLmpzXCI7XG5pbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gXCIuL2RlZmF1bHRWYWx1ZS5qc1wiO1xuaW1wb3J0IGRlZmluZWQgZnJvbSBcIi4vZGVmaW5lZC5qc1wiO1xuaW1wb3J0IERldmVsb3BlckVycm9yIGZyb20gXCIuL0RldmVsb3BlckVycm9yLmpzXCI7XG5cbi8qKlxuICogVmFsdWUgYW5kIHR5cGUgaW5mb3JtYXRpb24gZm9yIHBlci1pbnN0YW5jZSBnZW9tZXRyeSBjb2xvci5cbiAqXG4gKiBAYWxpYXMgQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlXG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gW3JlZD0xLjBdIFRoZSByZWQgY29tcG9uZW50LlxuICogQHBhcmFtIHtOdW1iZXJ9IFtncmVlbj0xLjBdIFRoZSBncmVlbiBjb21wb25lbnQuXG4gKiBAcGFyYW0ge051bWJlcn0gW2JsdWU9MS4wXSBUaGUgYmx1ZSBjb21wb25lbnQuXG4gKiBAcGFyYW0ge051bWJlcn0gW2FscGhhPTEuMF0gVGhlIGFscGhhIGNvbXBvbmVudC5cbiAqXG4gKlxuICogQGV4YW1wbGVcbiAqIHZhciBpbnN0YW5jZSA9IG5ldyBDZXNpdW0uR2VvbWV0cnlJbnN0YW5jZSh7XG4gKiAgIGdlb21ldHJ5IDogQ2VzaXVtLkJveEdlb21ldHJ5LmZyb21EaW1lbnNpb25zKHtcbiAqICAgICBkaW1lbnNpb25zIDogbmV3IENlc2l1bS5DYXJ0ZXNpYW4zKDEwMDAwMDAuMCwgMTAwMDAwMC4wLCA1MDAwMDAuMClcbiAqICAgfSksXG4gKiAgIG1vZGVsTWF0cml4IDogQ2VzaXVtLk1hdHJpeDQubXVsdGlwbHlCeVRyYW5zbGF0aW9uKENlc2l1bS5UcmFuc2Zvcm1zLmVhc3ROb3J0aFVwVG9GaXhlZEZyYW1lKFxuICogICAgIENlc2l1bS5DYXJ0ZXNpYW4zLmZyb21EZWdyZWVzKDAuMCwgMC4wKSksIG5ldyBDZXNpdW0uQ2FydGVzaWFuMygwLjAsIDAuMCwgMTAwMDAwMC4wKSwgbmV3IENlc2l1bS5NYXRyaXg0KCkpLFxuICogICBpZCA6ICdib3gnLFxuICogICBhdHRyaWJ1dGVzIDoge1xuICogICAgIGNvbG9yIDogbmV3IENlc2l1bS5Db2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUocmVkLCBncmVlbiwgYmx1ZSwgYWxwaGEpXG4gKiAgIH1cbiAqIH0pO1xuICpcbiAqIEBzZWUgR2VvbWV0cnlJbnN0YW5jZVxuICogQHNlZSBHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlXG4gKi9cbmZ1bmN0aW9uIENvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZShyZWQsIGdyZWVuLCBibHVlLCBhbHBoYSkge1xuICByZWQgPSBkZWZhdWx0VmFsdWUocmVkLCAxLjApO1xuICBncmVlbiA9IGRlZmF1bHRWYWx1ZShncmVlbiwgMS4wKTtcbiAgYmx1ZSA9IGRlZmF1bHRWYWx1ZShibHVlLCAxLjApO1xuICBhbHBoYSA9IGRlZmF1bHRWYWx1ZShhbHBoYSwgMS4wKTtcblxuICAvKipcbiAgICogVGhlIHZhbHVlcyBmb3IgdGhlIGF0dHJpYnV0ZXMgc3RvcmVkIGluIGEgdHlwZWQgYXJyYXkuXG4gICAqXG4gICAqIEB0eXBlIFVpbnQ4QXJyYXlcbiAgICpcbiAgICogQGRlZmF1bHQgWzI1NSwgMjU1LCAyNTUsIDI1NV1cbiAgICovXG4gIHRoaXMudmFsdWUgPSBuZXcgVWludDhBcnJheShbXG4gICAgQ29sb3IuZmxvYXRUb0J5dGUocmVkKSxcbiAgICBDb2xvci5mbG9hdFRvQnl0ZShncmVlbiksXG4gICAgQ29sb3IuZmxvYXRUb0J5dGUoYmx1ZSksXG4gICAgQ29sb3IuZmxvYXRUb0J5dGUoYWxwaGEpLFxuICBdKTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlLnByb3RvdHlwZSwge1xuICAvKipcbiAgICogVGhlIGRhdGF0eXBlIG9mIGVhY2ggY29tcG9uZW50IGluIHRoZSBhdHRyaWJ1dGUsIGUuZy4sIGluZGl2aWR1YWwgZWxlbWVudHMgaW5cbiAgICoge0BsaW5rIENvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSN2YWx1ZX0uXG4gICAqXG4gICAqIEBtZW1iZXJvZiBDb2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUucHJvdG90eXBlXG4gICAqXG4gICAqIEB0eXBlIHtDb21wb25lbnREYXRhdHlwZX1cbiAgICogQHJlYWRvbmx5XG4gICAqXG4gICAqIEBkZWZhdWx0IHtAbGluayBDb21wb25lbnREYXRhdHlwZS5VTlNJR05FRF9CWVRFfVxuICAgKi9cbiAgY29tcG9uZW50RGF0YXR5cGU6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBDb21wb25lbnREYXRhdHlwZS5VTlNJR05FRF9CWVRFO1xuICAgIH0sXG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoZSBudW1iZXIgb2YgY29tcG9uZW50cyBpbiB0aGUgYXR0cmlidXRlcywgaS5lLiwge0BsaW5rIENvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSN2YWx1ZX0uXG4gICAqXG4gICAqIEBtZW1iZXJvZiBDb2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUucHJvdG90eXBlXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEByZWFkb25seVxuICAgKlxuICAgKiBAZGVmYXVsdCA0XG4gICAqL1xuICBjb21wb25lbnRzUGVyQXR0cmlidXRlOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gNDtcbiAgICB9LFxuICB9LFxuXG4gIC8qKlxuICAgKiBXaGVuIDxjb2RlPnRydWU8L2NvZGU+IGFuZCA8Y29kZT5jb21wb25lbnREYXRhdHlwZTwvY29kZT4gaXMgYW4gaW50ZWdlciBmb3JtYXQsXG4gICAqIGluZGljYXRlIHRoYXQgdGhlIGNvbXBvbmVudHMgc2hvdWxkIGJlIG1hcHBlZCB0byB0aGUgcmFuZ2UgWzAsIDFdICh1bnNpZ25lZClcbiAgICogb3IgWy0xLCAxXSAoc2lnbmVkKSB3aGVuIHRoZXkgYXJlIGFjY2Vzc2VkIGFzIGZsb2F0aW5nLXBvaW50IGZvciByZW5kZXJpbmcuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBDb2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUucHJvdG90eXBlXG4gICAqXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAcmVhZG9ubHlcbiAgICpcbiAgICogQGRlZmF1bHQgdHJ1ZVxuICAgKi9cbiAgbm9ybWFsaXplOiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICB9LFxufSk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyB7QGxpbmsgQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlfSBpbnN0YW5jZSBnaXZlbiB0aGUgcHJvdmlkZWQge0BsaW5rIENvbG9yfS5cbiAqXG4gKiBAcGFyYW0ge0NvbG9yfSBjb2xvciBUaGUgY29sb3IuXG4gKiBAcmV0dXJucyB7Q29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlfSBUaGUgbmV3IHtAbGluayBDb2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGV9IGluc3RhbmNlLlxuICpcbiAqIEBleGFtcGxlXG4gKiB2YXIgaW5zdGFuY2UgPSBuZXcgQ2VzaXVtLkdlb21ldHJ5SW5zdGFuY2Uoe1xuICogICBnZW9tZXRyeSA6IGdlb21ldHJ5LFxuICogICBhdHRyaWJ1dGVzIDoge1xuICogICAgIGNvbG9yIDogQ2VzaXVtLkNvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5mcm9tQ29sb3IoQ2VzaXVtLkNvbG9yLkNPUk5GTE9XRVJCTFVFKSxcbiAqICAgfVxuICogfSk7XG4gKi9cbkNvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5mcm9tQ29sb3IgPSBmdW5jdGlvbiAoY29sb3IpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGNvbG9yKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImNvbG9yIGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICByZXR1cm4gbmV3IENvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZShcbiAgICBjb2xvci5yZWQsXG4gICAgY29sb3IuZ3JlZW4sXG4gICAgY29sb3IuYmx1ZSxcbiAgICBjb2xvci5hbHBoYVxuICApO1xufTtcblxuLyoqXG4gKiBDb252ZXJ0cyBhIGNvbG9yIHRvIGEgdHlwZWQgYXJyYXkgdGhhdCBjYW4gYmUgdXNlZCB0byBhc3NpZ24gYSBjb2xvciBhdHRyaWJ1dGUuXG4gKlxuICogQHBhcmFtIHtDb2xvcn0gY29sb3IgVGhlIGNvbG9yLlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBbcmVzdWx0XSBUaGUgYXJyYXkgdG8gc3RvcmUgdGhlIHJlc3VsdCBpbiwgaWYgdW5kZWZpbmVkIGEgbmV3IGluc3RhbmNlIHdpbGwgYmUgY3JlYXRlZC5cbiAqXG4gKiBAcmV0dXJucyB7VWludDhBcnJheX0gVGhlIG1vZGlmaWVkIHJlc3VsdCBwYXJhbWV0ZXIgb3IgYSBuZXcgaW5zdGFuY2UgaWYgcmVzdWx0IHdhcyB1bmRlZmluZWQuXG4gKlxuICogQGV4YW1wbGVcbiAqIHZhciBhdHRyaWJ1dGVzID0gcHJpbWl0aXZlLmdldEdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzKCdhbiBpZCcpO1xuICogYXR0cmlidXRlcy5jb2xvciA9IENlc2l1bS5Db2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUudG9WYWx1ZShDZXNpdW0uQ29sb3IuQVFVQSwgYXR0cmlidXRlcy5jb2xvcik7XG4gKi9cbkNvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS50b1ZhbHVlID0gZnVuY3Rpb24gKGNvbG9yLCByZXN1bHQpIHtcbiAgLy8+PmluY2x1ZGVTdGFydCgnZGVidWcnLCBwcmFnbWFzLmRlYnVnKTtcbiAgaWYgKCFkZWZpbmVkKGNvbG9yKSkge1xuICAgIHRocm93IG5ldyBEZXZlbG9wZXJFcnJvcihcImNvbG9yIGlzIHJlcXVpcmVkLlwiKTtcbiAgfVxuICAvLz4+aW5jbHVkZUVuZCgnZGVidWcnKTtcblxuICBpZiAoIWRlZmluZWQocmVzdWx0KSkge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShjb2xvci50b0J5dGVzKCkpO1xuICB9XG4gIHJldHVybiBjb2xvci50b0J5dGVzKHJlc3VsdCk7XG59O1xuXG4vKipcbiAqIENvbXBhcmVzIHRoZSBwcm92aWRlZCBDb2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzIGFuZCByZXR1cm5zXG4gKiA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGV5IGFyZSBlcXVhbCwgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge0NvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZX0gW2xlZnRdIFRoZSBmaXJzdCBDb2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUuXG4gKiBAcGFyYW0ge0NvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZX0gW3JpZ2h0XSBUaGUgc2Vjb25kIENvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5cbiAqIEByZXR1cm5zIHtCb29sZWFufSA8Y29kZT50cnVlPC9jb2RlPiBpZiBsZWZ0IGFuZCByaWdodCBhcmUgZXF1YWwsIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuXG4gKi9cbkNvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5lcXVhbHMgPSBmdW5jdGlvbiAobGVmdCwgcmlnaHQpIHtcbiAgcmV0dXJuIChcbiAgICBsZWZ0ID09PSByaWdodCB8fFxuICAgIChkZWZpbmVkKGxlZnQpICYmXG4gICAgICBkZWZpbmVkKHJpZ2h0KSAmJlxuICAgICAgbGVmdC52YWx1ZVswXSA9PT0gcmlnaHQudmFsdWVbMF0gJiZcbiAgICAgIGxlZnQudmFsdWVbMV0gPT09IHJpZ2h0LnZhbHVlWzFdICYmXG4gICAgICBsZWZ0LnZhbHVlWzJdID09PSByaWdodC52YWx1ZVsyXSAmJlxuICAgICAgbGVmdC52YWx1ZVszXSA9PT0gcmlnaHQudmFsdWVbM10pXG4gICk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///92062\n')},84828:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82982);\n/* harmony import */ var _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12572);\n/* harmony import */ var _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52200);\n\n\n\n\n\n/**\n * WebGL component datatypes.  Components are intrinsics,\n * which form attributes, which form vertices.\n *\n * @enum {Number}\n */\nvar ComponentDatatype = {\n  /**\n   * 8-bit signed byte corresponding to <code>gl.BYTE</code> and the type\n   * of an element in <code>Int8Array</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  BYTE: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].BYTE */ .Z.BYTE,\n\n  /**\n   * 8-bit unsigned byte corresponding to <code>UNSIGNED_BYTE</code> and the type\n   * of an element in <code>Uint8Array</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNSIGNED_BYTE: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n\n  /**\n   * 16-bit signed short corresponding to <code>SHORT</code> and the type\n   * of an element in <code>Int16Array</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  SHORT: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].SHORT */ .Z.SHORT,\n\n  /**\n   * 16-bit unsigned short corresponding to <code>UNSIGNED_SHORT</code> and the type\n   * of an element in <code>Uint16Array</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNSIGNED_SHORT: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_SHORT */ .Z.UNSIGNED_SHORT,\n\n  /**\n   * 32-bit signed int corresponding to <code>INT</code> and the type\n   * of an element in <code>Int32Array</code>.\n   *\n   * @memberOf ComponentDatatype\n   *\n   * @type {Number}\n   * @constant\n   */\n  INT: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].INT */ .Z.INT,\n\n  /**\n   * 32-bit unsigned int corresponding to <code>UNSIGNED_INT</code> and the type\n   * of an element in <code>Uint32Array</code>.\n   *\n   * @memberOf ComponentDatatype\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNSIGNED_INT: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].UNSIGNED_INT */ .Z.UNSIGNED_INT,\n\n  /**\n   * 32-bit floating-point corresponding to <code>FLOAT</code> and the type\n   * of an element in <code>Float32Array</code>.\n   *\n   * @type {Number}\n   * @constant\n   */\n  FLOAT: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].FLOAT */ .Z.FLOAT,\n\n  /**\n   * 64-bit floating-point corresponding to <code>gl.DOUBLE</code> (in Desktop OpenGL;\n   * this is not supported in WebGL, and is emulated in Cesium via {@link GeometryPipeline.encodeAttribute})\n   * and the type of an element in <code>Float64Array</code>.\n   *\n   * @memberOf ComponentDatatype\n   *\n   * @type {Number}\n   * @constant\n   * @default 0x140A\n   */\n  DOUBLE: _WebGLConstants_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].DOUBLE */ .Z.DOUBLE,\n};\n\n/**\n * Returns the size, in bytes, of the corresponding datatype.\n *\n * @param {ComponentDatatype} componentDatatype The component datatype to get the size of.\n * @returns {Number} The size in bytes.\n *\n * @exception {DeveloperError} componentDatatype is not a valid value.\n *\n * @example\n * // Returns Int8Array.BYTES_PER_ELEMENT\n * var size = Cesium.ComponentDatatype.getSizeInBytes(Cesium.ComponentDatatype.BYTE);\n */\nComponentDatatype.getSizeInBytes = function (componentDatatype) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(componentDatatype)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("value is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  switch (componentDatatype) {\n    case ComponentDatatype.BYTE:\n      return Int8Array.BYTES_PER_ELEMENT;\n    case ComponentDatatype.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case ComponentDatatype.SHORT:\n      return Int16Array.BYTES_PER_ELEMENT;\n    case ComponentDatatype.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case ComponentDatatype.INT:\n      return Int32Array.BYTES_PER_ELEMENT;\n    case ComponentDatatype.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case ComponentDatatype.FLOAT:\n      return Float32Array.BYTES_PER_ELEMENT;\n    case ComponentDatatype.DOUBLE:\n      return Float64Array.BYTES_PER_ELEMENT;\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("componentDatatype is not a valid value.");\n    //>>includeEnd(\'debug\');\n  }\n};\n\n/**\n * Gets the {@link ComponentDatatype} for the provided TypedArray instance.\n *\n * @param {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} array The typed array.\n * @returns {ComponentDatatype} The ComponentDatatype for the provided array, or undefined if the array is not a TypedArray.\n */\nComponentDatatype.fromTypedArray = function (array) {\n  if (array instanceof Int8Array) {\n    return ComponentDatatype.BYTE;\n  }\n  if (array instanceof Uint8Array) {\n    return ComponentDatatype.UNSIGNED_BYTE;\n  }\n  if (array instanceof Int16Array) {\n    return ComponentDatatype.SHORT;\n  }\n  if (array instanceof Uint16Array) {\n    return ComponentDatatype.UNSIGNED_SHORT;\n  }\n  if (array instanceof Int32Array) {\n    return ComponentDatatype.INT;\n  }\n  if (array instanceof Uint32Array) {\n    return ComponentDatatype.UNSIGNED_INT;\n  }\n  if (array instanceof Float32Array) {\n    return ComponentDatatype.FLOAT;\n  }\n  if (array instanceof Float64Array) {\n    return ComponentDatatype.DOUBLE;\n  }\n};\n\n/**\n * Validates that the provided component datatype is a valid {@link ComponentDatatype}\n *\n * @param {ComponentDatatype} componentDatatype The component datatype to validate.\n * @returns {Boolean} <code>true</code> if the provided component datatype is a valid value; otherwise, <code>false</code>.\n *\n * @example\n * if (!Cesium.ComponentDatatype.validate(componentDatatype)) {\n *   throw new Cesium.DeveloperError(\'componentDatatype must be a valid value.\');\n * }\n */\nComponentDatatype.validate = function (componentDatatype) {\n  return (\n    (0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(componentDatatype) &&\n    (componentDatatype === ComponentDatatype.BYTE ||\n      componentDatatype === ComponentDatatype.UNSIGNED_BYTE ||\n      componentDatatype === ComponentDatatype.SHORT ||\n      componentDatatype === ComponentDatatype.UNSIGNED_SHORT ||\n      componentDatatype === ComponentDatatype.INT ||\n      componentDatatype === ComponentDatatype.UNSIGNED_INT ||\n      componentDatatype === ComponentDatatype.FLOAT ||\n      componentDatatype === ComponentDatatype.DOUBLE)\n  );\n};\n\n/**\n * Creates a typed array corresponding to component data type.\n *\n * @param {ComponentDatatype} componentDatatype The component data type.\n * @param {Number|Array} valuesOrLength The length of the array to create or an array.\n * @returns {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} A typed array.\n *\n * @exception {DeveloperError} componentDatatype is not a valid value.\n *\n * @example\n * // creates a Float32Array with length of 100\n * var typedArray = Cesium.ComponentDatatype.createTypedArray(Cesium.ComponentDatatype.FLOAT, 100);\n */\nComponentDatatype.createTypedArray = function (\n  componentDatatype,\n  valuesOrLength\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(componentDatatype)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("componentDatatype is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(valuesOrLength)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("valuesOrLength is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  switch (componentDatatype) {\n    case ComponentDatatype.BYTE:\n      return new Int8Array(valuesOrLength);\n    case ComponentDatatype.UNSIGNED_BYTE:\n      return new Uint8Array(valuesOrLength);\n    case ComponentDatatype.SHORT:\n      return new Int16Array(valuesOrLength);\n    case ComponentDatatype.UNSIGNED_SHORT:\n      return new Uint16Array(valuesOrLength);\n    case ComponentDatatype.INT:\n      return new Int32Array(valuesOrLength);\n    case ComponentDatatype.UNSIGNED_INT:\n      return new Uint32Array(valuesOrLength);\n    case ComponentDatatype.FLOAT:\n      return new Float32Array(valuesOrLength);\n    case ComponentDatatype.DOUBLE:\n      return new Float64Array(valuesOrLength);\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("componentDatatype is not a valid value.");\n    //>>includeEnd(\'debug\');\n  }\n};\n\n/**\n * Creates a typed view of an array of bytes.\n *\n * @param {ComponentDatatype} componentDatatype The type of the view to create.\n * @param {ArrayBuffer} buffer The buffer storage to use for the view.\n * @param {Number} [byteOffset] The offset, in bytes, to the first element in the view.\n * @param {Number} [length] The number of elements in the view.\n * @returns {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} A typed array view of the buffer.\n *\n * @exception {DeveloperError} componentDatatype is not a valid value.\n */\nComponentDatatype.createArrayBufferView = function (\n  componentDatatype,\n  buffer,\n  byteOffset,\n  length\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(componentDatatype)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("componentDatatype is required.");\n  }\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(buffer)) {\n    throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("buffer is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  byteOffset = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(byteOffset, 0);\n  length = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    length,\n    (buffer.byteLength - byteOffset) /\n      ComponentDatatype.getSizeInBytes(componentDatatype)\n  );\n\n  switch (componentDatatype) {\n    case ComponentDatatype.BYTE:\n      return new Int8Array(buffer, byteOffset, length);\n    case ComponentDatatype.UNSIGNED_BYTE:\n      return new Uint8Array(buffer, byteOffset, length);\n    case ComponentDatatype.SHORT:\n      return new Int16Array(buffer, byteOffset, length);\n    case ComponentDatatype.UNSIGNED_SHORT:\n      return new Uint16Array(buffer, byteOffset, length);\n    case ComponentDatatype.INT:\n      return new Int32Array(buffer, byteOffset, length);\n    case ComponentDatatype.UNSIGNED_INT:\n      return new Uint32Array(buffer, byteOffset, length);\n    case ComponentDatatype.FLOAT:\n      return new Float32Array(buffer, byteOffset, length);\n    case ComponentDatatype.DOUBLE:\n      return new Float64Array(buffer, byteOffset, length);\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("componentDatatype is not a valid value.");\n    //>>includeEnd(\'debug\');\n  }\n};\n\n/**\n * Get the ComponentDatatype from its name.\n *\n * @param {String} name The name of the ComponentDatatype.\n * @returns {ComponentDatatype} The ComponentDatatype.\n *\n * @exception {DeveloperError} name is not a valid value.\n */\nComponentDatatype.fromName = function (name) {\n  switch (name) {\n    case "BYTE":\n      return ComponentDatatype.BYTE;\n    case "UNSIGNED_BYTE":\n      return ComponentDatatype.UNSIGNED_BYTE;\n    case "SHORT":\n      return ComponentDatatype.SHORT;\n    case "UNSIGNED_SHORT":\n      return ComponentDatatype.UNSIGNED_SHORT;\n    case "INT":\n      return ComponentDatatype.INT;\n    case "UNSIGNED_INT":\n      return ComponentDatatype.UNSIGNED_INT;\n    case "FLOAT":\n      return ComponentDatatype.FLOAT;\n    case "DOUBLE":\n      return ComponentDatatype.DOUBLE;\n    //>>includeStart(\'debug\', pragmas.debug);\n    default:\n      throw new _DeveloperError_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z("name is not a valid value.");\n    //>>includeEnd(\'debug\');\n  }\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(ComponentDatatype));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84828\n')},67167:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82982);\n\n\n/**\n * Describes a compressed texture and contains a compressed texture buffer.\n * @alias CompressedTextureBuffer\n * @constructor\n *\n * @param {PixelFormat} internalFormat The pixel format of the compressed texture.\n * @param {PixelDatatype} pixelDatatype The pixel datatype of the compressed texture.\n * @param {Number} width The width of the texture.\n * @param {Number} height The height of the texture.\n * @param {Uint8Array} buffer The compressed texture buffer.\n */\nfunction CompressedTextureBuffer(\n  internalFormat,\n  pixelDatatype,\n  width,\n  height,\n  buffer\n) {\n  this._format = internalFormat;\n  this._datatype = pixelDatatype;\n  this._width = width;\n  this._height = height;\n  this._buffer = buffer;\n}\n\nObject.defineProperties(CompressedTextureBuffer.prototype, {\n  /**\n   * The format of the compressed texture.\n   * @type PixelFormat\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  internalFormat: {\n    get: function () {\n      return this._format;\n    },\n  },\n  /**\n   * The datatype of the compressed texture.\n   * @type PixelDatatype\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  pixelDatatype: {\n    get: function () {\n      return this._datatype;\n    },\n  },\n  /**\n   * The width of the texture.\n   * @type Number\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  width: {\n    get: function () {\n      return this._width;\n    },\n  },\n  /**\n   * The height of the texture.\n   * @type Number\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  height: {\n    get: function () {\n      return this._height;\n    },\n  },\n  /**\n   * The compressed texture buffer.\n   * @type Uint8Array\n   * @readonly\n   * @memberof CompressedTextureBuffer.prototype\n   */\n  bufferView: {\n    get: function () {\n      return this._buffer;\n    },\n  },\n});\n\n/**\n * Creates a shallow clone of a compressed texture buffer.\n *\n * @param {CompressedTextureBuffer} object The compressed texture buffer to be cloned.\n * @return {CompressedTextureBuffer} A shallow clone of the compressed texture buffer.\n */\nCompressedTextureBuffer.clone = function (object) {\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(object)) {\n    return undefined;\n  }\n\n  return new CompressedTextureBuffer(\n    object._format,\n    object._datatype,\n    object._width,\n    object._height,\n    object._buffer\n  );\n};\n\n/**\n * Creates a shallow clone of this compressed texture buffer.\n *\n * @return {CompressedTextureBuffer} A shallow clone of the compressed texture buffer.\n */\nCompressedTextureBuffer.prototype.clone = function () {\n  return CompressedTextureBuffer.clone(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CompressedTextureBuffer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcxNjcuanMiLCJtYXBwaW5ncyI6IjtBQUFtQzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLGVBQWU7QUFDMUIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUJBQXlCO0FBQ3BDLFlBQVkseUJBQXlCO0FBQ3JDO0FBQ0E7QUFDQSxPQUFPLGdFQUFPO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUJBQXlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9Db21wcmVzc2VkVGV4dHVyZUJ1ZmZlci5qcz8yZGVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZpbmVkIGZyb20gXCIuL2RlZmluZWQuanNcIjtcblxuLyoqXG4gKiBEZXNjcmliZXMgYSBjb21wcmVzc2VkIHRleHR1cmUgYW5kIGNvbnRhaW5zIGEgY29tcHJlc3NlZCB0ZXh0dXJlIGJ1ZmZlci5cbiAqIEBhbGlhcyBDb21wcmVzc2VkVGV4dHVyZUJ1ZmZlclxuICogQGNvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHtQaXhlbEZvcm1hdH0gaW50ZXJuYWxGb3JtYXQgVGhlIHBpeGVsIGZvcm1hdCBvZiB0aGUgY29tcHJlc3NlZCB0ZXh0dXJlLlxuICogQHBhcmFtIHtQaXhlbERhdGF0eXBlfSBwaXhlbERhdGF0eXBlIFRoZSBwaXhlbCBkYXRhdHlwZSBvZiB0aGUgY29tcHJlc3NlZCB0ZXh0dXJlLlxuICogQHBhcmFtIHtOdW1iZXJ9IHdpZHRoIFRoZSB3aWR0aCBvZiB0aGUgdGV4dHVyZS5cbiAqIEBwYXJhbSB7TnVtYmVyfSBoZWlnaHQgVGhlIGhlaWdodCBvZiB0aGUgdGV4dHVyZS5cbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYnVmZmVyIFRoZSBjb21wcmVzc2VkIHRleHR1cmUgYnVmZmVyLlxuICovXG5mdW5jdGlvbiBDb21wcmVzc2VkVGV4dHVyZUJ1ZmZlcihcbiAgaW50ZXJuYWxGb3JtYXQsXG4gIHBpeGVsRGF0YXR5cGUsXG4gIHdpZHRoLFxuICBoZWlnaHQsXG4gIGJ1ZmZlclxuKSB7XG4gIHRoaXMuX2Zvcm1hdCA9IGludGVybmFsRm9ybWF0O1xuICB0aGlzLl9kYXRhdHlwZSA9IHBpeGVsRGF0YXR5cGU7XG4gIHRoaXMuX3dpZHRoID0gd2lkdGg7XG4gIHRoaXMuX2hlaWdodCA9IGhlaWdodDtcbiAgdGhpcy5fYnVmZmVyID0gYnVmZmVyO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhDb21wcmVzc2VkVGV4dHVyZUJ1ZmZlci5wcm90b3R5cGUsIHtcbiAgLyoqXG4gICAqIFRoZSBmb3JtYXQgb2YgdGhlIGNvbXByZXNzZWQgdGV4dHVyZS5cbiAgICogQHR5cGUgUGl4ZWxGb3JtYXRcbiAgICogQHJlYWRvbmx5XG4gICAqIEBtZW1iZXJvZiBDb21wcmVzc2VkVGV4dHVyZUJ1ZmZlci5wcm90b3R5cGVcbiAgICovXG4gIGludGVybmFsRm9ybWF0OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZm9ybWF0O1xuICAgIH0sXG4gIH0sXG4gIC8qKlxuICAgKiBUaGUgZGF0YXR5cGUgb2YgdGhlIGNvbXByZXNzZWQgdGV4dHVyZS5cbiAgICogQHR5cGUgUGl4ZWxEYXRhdHlwZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQG1lbWJlcm9mIENvbXByZXNzZWRUZXh0dXJlQnVmZmVyLnByb3RvdHlwZVxuICAgKi9cbiAgcGl4ZWxEYXRhdHlwZToge1xuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2RhdGF0eXBlO1xuICAgIH0sXG4gIH0sXG4gIC8qKlxuICAgKiBUaGUgd2lkdGggb2YgdGhlIHRleHR1cmUuXG4gICAqIEB0eXBlIE51bWJlclxuICAgKiBAcmVhZG9ubHlcbiAgICogQG1lbWJlcm9mIENvbXByZXNzZWRUZXh0dXJlQnVmZmVyLnByb3RvdHlwZVxuICAgKi9cbiAgd2lkdGg6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl93aWR0aDtcbiAgICB9LFxuICB9LFxuICAvKipcbiAgICogVGhlIGhlaWdodCBvZiB0aGUgdGV4dHVyZS5cbiAgICogQHR5cGUgTnVtYmVyXG4gICAqIEByZWFkb25seVxuICAgKiBAbWVtYmVyb2YgQ29tcHJlc3NlZFRleHR1cmVCdWZmZXIucHJvdG90eXBlXG4gICAqL1xuICBoZWlnaHQ6IHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9oZWlnaHQ7XG4gICAgfSxcbiAgfSxcbiAgLyoqXG4gICAqIFRoZSBjb21wcmVzc2VkIHRleHR1cmUgYnVmZmVyLlxuICAgKiBAdHlwZSBVaW50OEFycmF5XG4gICAqIEByZWFkb25seVxuICAgKiBAbWVtYmVyb2YgQ29tcHJlc3NlZFRleHR1cmVCdWZmZXIucHJvdG90eXBlXG4gICAqL1xuICBidWZmZXJWaWV3OiB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fYnVmZmVyO1xuICAgIH0sXG4gIH0sXG59KTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc2hhbGxvdyBjbG9uZSBvZiBhIGNvbXByZXNzZWQgdGV4dHVyZSBidWZmZXIuXG4gKlxuICogQHBhcmFtIHtDb21wcmVzc2VkVGV4dHVyZUJ1ZmZlcn0gb2JqZWN0IFRoZSBjb21wcmVzc2VkIHRleHR1cmUgYnVmZmVyIHRvIGJlIGNsb25lZC5cbiAqIEByZXR1cm4ge0NvbXByZXNzZWRUZXh0dXJlQnVmZmVyfSBBIHNoYWxsb3cgY2xvbmUgb2YgdGhlIGNvbXByZXNzZWQgdGV4dHVyZSBidWZmZXIuXG4gKi9cbkNvbXByZXNzZWRUZXh0dXJlQnVmZmVyLmNsb25lID0gZnVuY3Rpb24gKG9iamVjdCkge1xuICBpZiAoIWRlZmluZWQob2JqZWN0KSkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICByZXR1cm4gbmV3IENvbXByZXNzZWRUZXh0dXJlQnVmZmVyKFxuICAgIG9iamVjdC5fZm9ybWF0LFxuICAgIG9iamVjdC5fZGF0YXR5cGUsXG4gICAgb2JqZWN0Ll93aWR0aCxcbiAgICBvYmplY3QuX2hlaWdodCxcbiAgICBvYmplY3QuX2J1ZmZlclxuICApO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc2hhbGxvdyBjbG9uZSBvZiB0aGlzIGNvbXByZXNzZWQgdGV4dHVyZSBidWZmZXIuXG4gKlxuICogQHJldHVybiB7Q29tcHJlc3NlZFRleHR1cmVCdWZmZXJ9IEEgc2hhbGxvdyBjbG9uZSBvZiB0aGUgY29tcHJlc3NlZCB0ZXh0dXJlIGJ1ZmZlci5cbiAqL1xuQ29tcHJlc3NlZFRleHR1cmVCdWZmZXIucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gQ29tcHJlc3NlZFRleHR1cmVCdWZmZXIuY2xvbmUodGhpcyk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQ29tcHJlc3NlZFRleHR1cmVCdWZmZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///67167\n')},28240:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32378);\n/* harmony import */ var _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88108);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84828);\n/* harmony import */ var _CoplanarPolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(5737);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(82982);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(50491);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(26865);\n/* harmony import */ var _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(57552);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(68201);\n/* harmony import */ var _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(38425);\n/* harmony import */ var _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(78284);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(97264);\n/* harmony import */ var _Quaternion_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(87811);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(67252);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar scratchPosition = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchBR = new _BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar stScratch = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar textureCoordinatesOrigin = new _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchNormal = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchTangent = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchBitangent = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar centerScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar axis1Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar axis2Scratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar quaternionScratch = new _Quaternion_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z();\nvar textureMatrixScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z();\nvar tangentRotationScratch = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z();\nvar surfaceNormalScratch = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nfunction createGeometryFromPolygon(\n  polygon,\n  vertexFormat,\n  boundingRectangle,\n  stRotation,\n  projectPointTo2D,\n  normal,\n  tangent,\n  bitangent\n) {\n  var positions = polygon.positions;\n  var indices = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"].triangulate */ .Z.triangulate(polygon.positions2D, polygon.holes);\n\n  /* If polygon is completely unrenderable, just use the first three vertices */\n  if (indices.length < 3) {\n    indices = [0, 1, 2];\n  }\n\n  var newIndices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    positions.length,\n    indices.length\n  );\n  newIndices.set(indices);\n\n  var textureMatrix = textureMatrixScratch;\n  if (stRotation !== 0.0) {\n    var rotation = _Quaternion_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(\n      normal,\n      stRotation,\n      quaternionScratch\n    );\n    textureMatrix = _Matrix3_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].fromQuaternion */ .Z.fromQuaternion(rotation, textureMatrix);\n\n    if (vertexFormat.tangent || vertexFormat.bitangent) {\n      rotation = _Quaternion_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(\n        normal,\n        -stRotation,\n        quaternionScratch\n      );\n      var tangentRotation = _Matrix3_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].fromQuaternion */ .Z.fromQuaternion(\n        rotation,\n        tangentRotationScratch\n      );\n\n      tangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].normalize */ .Z.normalize(\n        _Matrix3_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].multiplyByVector */ .Z.multiplyByVector(tangentRotation, tangent, tangent),\n        tangent\n      );\n      if (vertexFormat.bitangent) {\n        bitangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].normalize */ .Z.normalize(\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].cross */ .Z.cross(normal, tangent, bitangent),\n          bitangent\n        );\n      }\n    }\n  } else {\n    textureMatrix = _Matrix3_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].clone */ .Z.clone(_Matrix3_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].IDENTITY */ .Z.IDENTITY, textureMatrix);\n  }\n\n  var stOrigin = textureCoordinatesOrigin;\n  if (vertexFormat.st) {\n    stOrigin.x = boundingRectangle.x;\n    stOrigin.y = boundingRectangle.y;\n  }\n\n  var length = positions.length;\n  var size = length * 3;\n  var flatPositions = new Float64Array(size);\n  var normals = vertexFormat.normal ? new Float32Array(size) : undefined;\n  var tangents = vertexFormat.tangent ? new Float32Array(size) : undefined;\n  var bitangents = vertexFormat.bitangent ? new Float32Array(size) : undefined;\n  var textureCoordinates = vertexFormat.st\n    ? new Float32Array(length * 2)\n    : undefined;\n\n  var positionIndex = 0;\n  var normalIndex = 0;\n  var bitangentIndex = 0;\n  var tangentIndex = 0;\n  var stIndex = 0;\n\n  for (var i = 0; i < length; i++) {\n    var position = positions[i];\n    flatPositions[positionIndex++] = position.x;\n    flatPositions[positionIndex++] = position.y;\n    flatPositions[positionIndex++] = position.z;\n\n    if (vertexFormat.st) {\n      var p = _Matrix3_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].multiplyByVector */ .Z.multiplyByVector(\n        textureMatrix,\n        position,\n        scratchPosition\n      );\n      var st = projectPointTo2D(p, stScratch);\n      _Cartesian2_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(st, stOrigin, st);\n\n      var stx = _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].clamp */ .Z.clamp(st.x / boundingRectangle.width, 0, 1);\n      var sty = _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].clamp */ .Z.clamp(st.y / boundingRectangle.height, 0, 1);\n      textureCoordinates[stIndex++] = stx;\n      textureCoordinates[stIndex++] = sty;\n    }\n\n    if (vertexFormat.normal) {\n      normals[normalIndex++] = normal.x;\n      normals[normalIndex++] = normal.y;\n      normals[normalIndex++] = normal.z;\n    }\n\n    if (vertexFormat.tangent) {\n      tangents[tangentIndex++] = tangent.x;\n      tangents[tangentIndex++] = tangent.y;\n      tangents[tangentIndex++] = tangent.z;\n    }\n\n    if (vertexFormat.bitangent) {\n      bitangents[bitangentIndex++] = bitangent.x;\n      bitangents[bitangentIndex++] = bitangent.y;\n      bitangents[bitangentIndex++] = bitangent.z;\n    }\n  }\n\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\n\n  if (vertexFormat.position) {\n    attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].DOUBLE */ .Z.DOUBLE,\n      componentsPerAttribute: 3,\n      values: flatPositions,\n    });\n  }\n\n  if (vertexFormat.normal) {\n    attributes.normal = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: normals,\n    });\n  }\n\n  if (vertexFormat.tangent) {\n    attributes.tangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: tangents,\n    });\n  }\n\n  if (vertexFormat.bitangent) {\n    attributes.bitangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: bitangents,\n    });\n  }\n\n  if (vertexFormat.st) {\n    attributes.st = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 2,\n      values: textureCoordinates,\n    });\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: newIndices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n  });\n}\n\n/**\n * A description of a polygon composed of arbitrary coplanar positions.\n *\n * @alias CoplanarPolygonGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {PolygonHierarchy} options.polygonHierarchy A polygon hierarchy that can include holes.\n * @param {Number} [options.stRotation=0.0] The rotation of the texture coordinates, in radians. A positive rotation is counter-clockwise.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n *\n * @example\n * var polygonGeometry = new Cesium.CoplanarPolygonGeometry({\n *  polygonHierarchy: new Cesium.PolygonHierarchy(\n *     Cesium.Cartesian3.fromDegreesArrayHeights([\n *      -90.0, 30.0, 0.0,\n *      -90.0, 30.0, 300000.0,\n *      -80.0, 30.0, 300000.0,\n *      -80.0, 30.0, 0.0\n *   ]))\n * });\n *\n */\nfunction CoplanarPolygonGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var polygonHierarchy = options.polygonHierarchy;\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("options.polygonHierarchy", polygonHierarchy);\n  //>>includeEnd(\'debug\');\n\n  var vertexFormat = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.vertexFormat, _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].DEFAULT */ .Z.DEFAULT);\n  this._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].clone */ .Z.clone(vertexFormat);\n  this._polygonHierarchy = polygonHierarchy;\n  this._stRotation = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.stRotation, 0.0);\n  this._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].WGS84 */ .Z.WGS84)\n  );\n  this._workerName = "createCoplanarPolygonGeometry";\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength =\n    _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].computeHierarchyPackedLength */ .Z.computeHierarchyPackedLength(polygonHierarchy) +\n    _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].packedLength */ .Z.packedLength +\n    _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength +\n    2;\n}\n\n/**\n * A description of a coplanar polygon from an array of positions.\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of positions that defined the corner points of the polygon.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {Number} [options.stRotation=0.0] The rotation of the texture coordinates, in radians. A positive rotation is counter-clockwise.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @returns {CoplanarPolygonGeometry}\n *\n * @example\n * // create a polygon from points\n * var polygon = Cesium.CoplanarPolygonGeometry.fromPositions({\n *   positions : Cesium.Cartesian3.fromDegreesArray([\n *     -72.0, 40.0,\n *     -70.0, 35.0,\n *     -75.0, 30.0,\n *     -70.0, 30.0,\n *     -68.0, 40.0\n *   ])\n * });\n * var geometry = Cesium.PolygonGeometry.createGeometry(polygon);\n *\n * @see PolygonGeometry#createGeometry\n */\nCoplanarPolygonGeometry.fromPositions = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("options.positions", options.positions);\n  //>>includeEnd(\'debug\');\n\n  var newOptions = {\n    polygonHierarchy: {\n      positions: options.positions,\n    },\n    vertexFormat: options.vertexFormat,\n    stRotation: options.stRotation,\n    ellipsoid: options.ellipsoid,\n  };\n  return new CoplanarPolygonGeometry(newOptions);\n};\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {CoplanarPolygonGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nCoplanarPolygonGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(startingIndex, 0);\n\n  startingIndex = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].packPolygonHierarchy */ .Z.packPolygonHierarchy(\n    value._polygonHierarchy,\n    array,\n    startingIndex\n  );\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength;\n\n  _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].pack */ .Z.pack(value._vertexFormat, array, startingIndex);\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._stRotation;\n  array[startingIndex] = value.packedLength;\n\n  return array;\n};\n\nvar scratchEllipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE);\nvar scratchVertexFormat = new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"] */ .Z();\nvar scratchOptions = {\n  polygonHierarchy: {},\n};\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {CoplanarPolygonGeometry} [result] The object into which to store the result.\n * @returns {CoplanarPolygonGeometry} The modified result parameter or a new CoplanarPolygonGeometry instance if one was not provided.\n */\nCoplanarPolygonGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var polygonHierarchy = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].unpackPolygonHierarchy */ .Z.unpackPolygonHierarchy(\n    array,\n    startingIndex\n  );\n  startingIndex = polygonHierarchy.startingIndex;\n  delete polygonHierarchy.startingIndex;\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchEllipsoid);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength;\n\n  var vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchVertexFormat\n  );\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].packedLength */ .Z.packedLength;\n\n  var stRotation = array[startingIndex++];\n  var packedLength = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_23__/* ["default"] */ .Z)(result)) {\n    result = new CoplanarPolygonGeometry(scratchOptions);\n  }\n\n  result._polygonHierarchy = polygonHierarchy;\n  result._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(ellipsoid, result._ellipsoid);\n  result._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_22__/* ["default"].clone */ .Z.clone(vertexFormat, result._vertexFormat);\n  result._stRotation = stRotation;\n  result.packedLength = packedLength;\n  return result;\n};\n\n/**\n * Computes the geometric representation of an arbitrary coplanar polygon, including its vertices, indices, and a bounding sphere.\n *\n * @param {CoplanarPolygonGeometry} polygonGeometry A description of the polygon.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nCoplanarPolygonGeometry.createGeometry = function (polygonGeometry) {\n  var vertexFormat = polygonGeometry._vertexFormat;\n  var polygonHierarchy = polygonGeometry._polygonHierarchy;\n  var stRotation = polygonGeometry._stRotation;\n\n  var outerPositions = polygonHierarchy.positions;\n  outerPositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    outerPositions,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon,\n    true\n  );\n  if (outerPositions.length < 3) {\n    return;\n  }\n\n  var normal = scratchNormal;\n  var tangent = scratchTangent;\n  var bitangent = scratchBitangent;\n  var axis1 = axis1Scratch;\n  var axis2 = axis2Scratch;\n\n  var validGeometry = _CoplanarPolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].computeProjectTo2DArguments */ .Z.computeProjectTo2DArguments(\n    outerPositions,\n    centerScratch,\n    axis1,\n    axis2\n  );\n  if (!validGeometry) {\n    return undefined;\n  }\n\n  normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].cross */ .Z.cross(axis1, axis2, normal);\n  normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].normalize */ .Z.normalize(normal, normal);\n\n  if (\n    !_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n      centerScratch,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].ZERO */ .Z.ZERO,\n      _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].EPSILON6 */ .Z.EPSILON6\n    )\n  ) {\n    var surfaceNormal = polygonGeometry._ellipsoid.geodeticSurfaceNormal(\n      centerScratch,\n      surfaceNormalScratch\n    );\n    if (_Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].dot */ .Z.dot(normal, surfaceNormal) < 0) {\n      normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].negate */ .Z.negate(normal, normal);\n      axis1 = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].negate */ .Z.negate(axis1, axis1);\n    }\n  }\n\n  var projectPoints = _CoplanarPolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].createProjectPointsTo2DFunction */ .Z.createProjectPointsTo2DFunction(\n    centerScratch,\n    axis1,\n    axis2\n  );\n  var projectPoint = _CoplanarPolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].createProjectPointTo2DFunction */ .Z.createProjectPointTo2DFunction(\n    centerScratch,\n    axis1,\n    axis2\n  );\n\n  if (vertexFormat.tangent) {\n    tangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(axis1, tangent);\n  }\n  if (vertexFormat.bitangent) {\n    bitangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].clone */ .Z.clone(axis2, bitangent);\n  }\n\n  var results = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].polygonsFromHierarchy */ .Z.polygonsFromHierarchy(\n    polygonHierarchy,\n    projectPoints,\n    false\n  );\n  var hierarchy = results.hierarchy;\n  var polygons = results.polygons;\n\n  if (hierarchy.length === 0) {\n    return;\n  }\n  outerPositions = hierarchy[0].outerRing;\n\n  var boundingSphere = _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromPoints */ .Z.fromPoints(outerPositions);\n  var boundingRectangle = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].computeBoundingRectangle */ .Z.computeBoundingRectangle(\n    normal,\n    projectPoint,\n    outerPositions,\n    stRotation,\n    scratchBR\n  );\n\n  var geometries = [];\n  for (var i = 0; i < polygons.length; i++) {\n    var geometryInstance = new _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z({\n      geometry: createGeometryFromPolygon(\n        polygons[i],\n        vertexFormat,\n        boundingRectangle,\n        stRotation,\n        projectPoint,\n        normal,\n        tangent,\n        bitangent\n      ),\n    });\n\n    geometries.push(geometryInstance);\n  }\n\n  var geometry = _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].combineInstances */ .Z.combineInstances(geometries)[0];\n  geometry.attributes.position.values = new Float64Array(\n    geometry.attributes.position.values\n  );\n  geometry.indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    geometry.attributes.position.values.length / 3,\n    geometry.indices\n  );\n\n  var attributes = geometry.attributes;\n  if (!vertexFormat.position) {\n    delete attributes.position;\n  }\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: geometry.indices,\n    primitiveType: geometry.primitiveType,\n    boundingSphere: boundingSphere,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CoplanarPolygonGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28240\n')},5737:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60838);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66553);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(68201);\n/* harmony import */ var _OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(25405);\n\n\n\n\n\n\n/**\n * @private\n */\nvar CoplanarPolygonGeometryLibrary = {};\n\nvar scratchIntersectionPoint = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchXAxis = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchYAxis = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchZAxis = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar obbScratch = new _OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nCoplanarPolygonGeometryLibrary.validOutline = function (positions) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("positions", positions);\n  //>>includeEnd(\'debug\');\n\n  var orientedBoundingBox = _OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromPoints */ .Z.fromPoints(\n    positions,\n    obbScratch\n  );\n  var halfAxes = orientedBoundingBox.halfAxes;\n  var xAxis = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 0, scratchXAxis);\n  var yAxis = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 1, scratchYAxis);\n  var zAxis = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 2, scratchZAxis);\n\n  var xMag = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].magnitude */ .Z.magnitude(xAxis);\n  var yMag = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].magnitude */ .Z.magnitude(yAxis);\n  var zMag = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].magnitude */ .Z.magnitude(zAxis);\n\n  // If all the points are on a line return undefined because we can\'t draw a polygon\n  return !(\n    (xMag === 0 && (yMag === 0 || zMag === 0)) ||\n    (yMag === 0 && zMag === 0)\n  );\n};\n\n// call after removeDuplicates\nCoplanarPolygonGeometryLibrary.computeProjectTo2DArguments = function (\n  positions,\n  centerResult,\n  planeAxis1Result,\n  planeAxis2Result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("positions", positions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("centerResult", centerResult);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("planeAxis1Result", planeAxis1Result);\n  _Check_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].defined */ .Z.defined("planeAxis2Result", planeAxis2Result);\n  //>>includeEnd(\'debug\');\n\n  var orientedBoundingBox = _OrientedBoundingBox_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].fromPoints */ .Z.fromPoints(\n    positions,\n    obbScratch\n  );\n  var halfAxes = orientedBoundingBox.halfAxes;\n  var xAxis = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 0, scratchXAxis);\n  var yAxis = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 1, scratchYAxis);\n  var zAxis = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].getColumn */ .Z.getColumn(halfAxes, 2, scratchZAxis);\n\n  var xMag = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].magnitude */ .Z.magnitude(xAxis);\n  var yMag = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].magnitude */ .Z.magnitude(yAxis);\n  var zMag = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].magnitude */ .Z.magnitude(zAxis);\n  var min = Math.min(xMag, yMag, zMag);\n\n  // If all the points are on a line return undefined because we can\'t draw a polygon\n  if (\n    (xMag === 0 && (yMag === 0 || zMag === 0)) ||\n    (yMag === 0 && zMag === 0)\n  ) {\n    return false;\n  }\n\n  var planeAxis1;\n  var planeAxis2;\n\n  if (min === yMag || min === zMag) {\n    planeAxis1 = xAxis;\n  }\n  if (min === xMag) {\n    planeAxis1 = yAxis;\n  } else if (min === zMag) {\n    planeAxis2 = yAxis;\n  }\n  if (min === xMag || min === yMag) {\n    planeAxis2 = zAxis;\n  }\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(planeAxis1, planeAxis1Result);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].normalize */ .Z.normalize(planeAxis2, planeAxis2Result);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(orientedBoundingBox.center, centerResult);\n  return true;\n};\n\nfunction projectTo2D(position, center, axis1, axis2, result) {\n  var v = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].subtract */ .Z.subtract(position, center, scratchIntersectionPoint);\n  var x = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(axis1, v);\n  var y = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].dot */ .Z.dot(axis2, v);\n\n  return _Cartesian2_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromElements */ .Z.fromElements(x, y, result);\n}\n\nCoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction = function (\n  center,\n  axis1,\n  axis2\n) {\n  return function (positions) {\n    var positionResults = new Array(positions.length);\n    for (var i = 0; i < positions.length; i++) {\n      positionResults[i] = projectTo2D(positions[i], center, axis1, axis2);\n    }\n\n    return positionResults;\n  };\n};\n\nCoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction = function (\n  center,\n  axis1,\n  axis2\n) {\n  return function (position, result) {\n    return projectTo2D(position, center, axis1, axis2, result);\n  };\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CoplanarPolygonGeometryLibrary);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTczNy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUNBO0FBQ1Y7QUFDSTtBQUN3Qjs7QUFFM0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUNBQW1DLCtEQUFVO0FBQzdDLHVCQUF1QiwrREFBVTtBQUNqQyx1QkFBdUIsK0RBQVU7QUFDakMsdUJBQXVCLCtEQUFVO0FBQ2pDLHFCQUFxQix3RUFBbUI7O0FBRXhDO0FBQ0E7QUFDQSxFQUFFLDBFQUFhO0FBQ2Y7O0FBRUEsNEJBQTRCLDhGQUE4QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0ZBQWlCO0FBQy9CLGNBQWMsZ0ZBQWlCO0FBQy9CLGNBQWMsZ0ZBQWlCOztBQUUvQixhQUFhLG1GQUFvQjtBQUNqQyxhQUFhLG1GQUFvQjtBQUNqQyxhQUFhLG1GQUFvQjs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDBFQUFhO0FBQ2YsRUFBRSwwRUFBYTtBQUNmLEVBQUUsMEVBQWE7QUFDZixFQUFFLDBFQUFhO0FBQ2Y7O0FBRUEsNEJBQTRCLDhGQUE4QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0ZBQWlCO0FBQy9CLGNBQWMsZ0ZBQWlCO0FBQy9CLGNBQWMsZ0ZBQWlCOztBQUUvQixhQUFhLG1GQUFvQjtBQUNqQyxhQUFhLG1GQUFvQjtBQUNqQyxhQUFhLG1GQUFvQjtBQUNqQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLG1GQUFvQjtBQUN0QixFQUFFLG1GQUFvQjtBQUN0QixFQUFFLDJFQUFnQjtBQUNsQjtBQUNBOztBQUVBO0FBQ0EsVUFBVSxpRkFBbUI7QUFDN0IsVUFBVSx1RUFBYztBQUN4QixVQUFVLHVFQUFjOztBQUV4QixTQUFTLHlGQUF1QjtBQUNoQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQWUsOEJBQThCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92dWUzLXdlYnBhY2s1Ly4vbm9kZV9tb2R1bGVzL2Nlc2l1bS9Tb3VyY2UvQ29yZS9Db3BsYW5hclBvbHlnb25HZW9tZXRyeUxpYnJhcnkuanM/ZGE1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2FydGVzaWFuMiBmcm9tIFwiLi9DYXJ0ZXNpYW4yLmpzXCI7XG5pbXBvcnQgQ2FydGVzaWFuMyBmcm9tIFwiLi9DYXJ0ZXNpYW4zLmpzXCI7XG5pbXBvcnQgQ2hlY2sgZnJvbSBcIi4vQ2hlY2suanNcIjtcbmltcG9ydCBNYXRyaXgzIGZyb20gXCIuL01hdHJpeDMuanNcIjtcbmltcG9ydCBPcmllbnRlZEJvdW5kaW5nQm94IGZyb20gXCIuL09yaWVudGVkQm91bmRpbmdCb3guanNcIjtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG52YXIgQ29wbGFuYXJQb2x5Z29uR2VvbWV0cnlMaWJyYXJ5ID0ge307XG5cbnZhciBzY3JhdGNoSW50ZXJzZWN0aW9uUG9pbnQgPSBuZXcgQ2FydGVzaWFuMygpO1xudmFyIHNjcmF0Y2hYQXhpcyA9IG5ldyBDYXJ0ZXNpYW4zKCk7XG52YXIgc2NyYXRjaFlBeGlzID0gbmV3IENhcnRlc2lhbjMoKTtcbnZhciBzY3JhdGNoWkF4aXMgPSBuZXcgQ2FydGVzaWFuMygpO1xudmFyIG9iYlNjcmF0Y2ggPSBuZXcgT3JpZW50ZWRCb3VuZGluZ0JveCgpO1xuXG5Db3BsYW5hclBvbHlnb25HZW9tZXRyeUxpYnJhcnkudmFsaWRPdXRsaW5lID0gZnVuY3Rpb24gKHBvc2l0aW9ucykge1xuICAvLz4+aW5jbHVkZVN0YXJ0KCdkZWJ1ZycsIHByYWdtYXMuZGVidWcpO1xuICBDaGVjay5kZWZpbmVkKFwicG9zaXRpb25zXCIsIHBvc2l0aW9ucyk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBvcmllbnRlZEJvdW5kaW5nQm94ID0gT3JpZW50ZWRCb3VuZGluZ0JveC5mcm9tUG9pbnRzKFxuICAgIHBvc2l0aW9ucyxcbiAgICBvYmJTY3JhdGNoXG4gICk7XG4gIHZhciBoYWxmQXhlcyA9IG9yaWVudGVkQm91bmRpbmdCb3guaGFsZkF4ZXM7XG4gIHZhciB4QXhpcyA9IE1hdHJpeDMuZ2V0Q29sdW1uKGhhbGZBeGVzLCAwLCBzY3JhdGNoWEF4aXMpO1xuICB2YXIgeUF4aXMgPSBNYXRyaXgzLmdldENvbHVtbihoYWxmQXhlcywgMSwgc2NyYXRjaFlBeGlzKTtcbiAgdmFyIHpBeGlzID0gTWF0cml4My5nZXRDb2x1bW4oaGFsZkF4ZXMsIDIsIHNjcmF0Y2haQXhpcyk7XG5cbiAgdmFyIHhNYWcgPSBDYXJ0ZXNpYW4zLm1hZ25pdHVkZSh4QXhpcyk7XG4gIHZhciB5TWFnID0gQ2FydGVzaWFuMy5tYWduaXR1ZGUoeUF4aXMpO1xuICB2YXIgek1hZyA9IENhcnRlc2lhbjMubWFnbml0dWRlKHpBeGlzKTtcblxuICAvLyBJZiBhbGwgdGhlIHBvaW50cyBhcmUgb24gYSBsaW5lIHJldHVybiB1bmRlZmluZWQgYmVjYXVzZSB3ZSBjYW4ndCBkcmF3IGEgcG9seWdvblxuICByZXR1cm4gIShcbiAgICAoeE1hZyA9PT0gMCAmJiAoeU1hZyA9PT0gMCB8fCB6TWFnID09PSAwKSkgfHxcbiAgICAoeU1hZyA9PT0gMCAmJiB6TWFnID09PSAwKVxuICApO1xufTtcblxuLy8gY2FsbCBhZnRlciByZW1vdmVEdXBsaWNhdGVzXG5Db3BsYW5hclBvbHlnb25HZW9tZXRyeUxpYnJhcnkuY29tcHV0ZVByb2plY3RUbzJEQXJndW1lbnRzID0gZnVuY3Rpb24gKFxuICBwb3NpdGlvbnMsXG4gIGNlbnRlclJlc3VsdCxcbiAgcGxhbmVBeGlzMVJlc3VsdCxcbiAgcGxhbmVBeGlzMlJlc3VsdFxuKSB7XG4gIC8vPj5pbmNsdWRlU3RhcnQoJ2RlYnVnJywgcHJhZ21hcy5kZWJ1Zyk7XG4gIENoZWNrLmRlZmluZWQoXCJwb3NpdGlvbnNcIiwgcG9zaXRpb25zKTtcbiAgQ2hlY2suZGVmaW5lZChcImNlbnRlclJlc3VsdFwiLCBjZW50ZXJSZXN1bHQpO1xuICBDaGVjay5kZWZpbmVkKFwicGxhbmVBeGlzMVJlc3VsdFwiLCBwbGFuZUF4aXMxUmVzdWx0KTtcbiAgQ2hlY2suZGVmaW5lZChcInBsYW5lQXhpczJSZXN1bHRcIiwgcGxhbmVBeGlzMlJlc3VsdCk7XG4gIC8vPj5pbmNsdWRlRW5kKCdkZWJ1ZycpO1xuXG4gIHZhciBvcmllbnRlZEJvdW5kaW5nQm94ID0gT3JpZW50ZWRCb3VuZGluZ0JveC5mcm9tUG9pbnRzKFxuICAgIHBvc2l0aW9ucyxcbiAgICBvYmJTY3JhdGNoXG4gICk7XG4gIHZhciBoYWxmQXhlcyA9IG9yaWVudGVkQm91bmRpbmdCb3guaGFsZkF4ZXM7XG4gIHZhciB4QXhpcyA9IE1hdHJpeDMuZ2V0Q29sdW1uKGhhbGZBeGVzLCAwLCBzY3JhdGNoWEF4aXMpO1xuICB2YXIgeUF4aXMgPSBNYXRyaXgzLmdldENvbHVtbihoYWxmQXhlcywgMSwgc2NyYXRjaFlBeGlzKTtcbiAgdmFyIHpBeGlzID0gTWF0cml4My5nZXRDb2x1bW4oaGFsZkF4ZXMsIDIsIHNjcmF0Y2haQXhpcyk7XG5cbiAgdmFyIHhNYWcgPSBDYXJ0ZXNpYW4zLm1hZ25pdHVkZSh4QXhpcyk7XG4gIHZhciB5TWFnID0gQ2FydGVzaWFuMy5tYWduaXR1ZGUoeUF4aXMpO1xuICB2YXIgek1hZyA9IENhcnRlc2lhbjMubWFnbml0dWRlKHpBeGlzKTtcbiAgdmFyIG1pbiA9IE1hdGgubWluKHhNYWcsIHlNYWcsIHpNYWcpO1xuXG4gIC8vIElmIGFsbCB0aGUgcG9pbnRzIGFyZSBvbiBhIGxpbmUgcmV0dXJuIHVuZGVmaW5lZCBiZWNhdXNlIHdlIGNhbid0IGRyYXcgYSBwb2x5Z29uXG4gIGlmIChcbiAgICAoeE1hZyA9PT0gMCAmJiAoeU1hZyA9PT0gMCB8fCB6TWFnID09PSAwKSkgfHxcbiAgICAoeU1hZyA9PT0gMCAmJiB6TWFnID09PSAwKVxuICApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgcGxhbmVBeGlzMTtcbiAgdmFyIHBsYW5lQXhpczI7XG5cbiAgaWYgKG1pbiA9PT0geU1hZyB8fCBtaW4gPT09IHpNYWcpIHtcbiAgICBwbGFuZUF4aXMxID0geEF4aXM7XG4gIH1cbiAgaWYgKG1pbiA9PT0geE1hZykge1xuICAgIHBsYW5lQXhpczEgPSB5QXhpcztcbiAgfSBlbHNlIGlmIChtaW4gPT09IHpNYWcpIHtcbiAgICBwbGFuZUF4aXMyID0geUF4aXM7XG4gIH1cbiAgaWYgKG1pbiA9PT0geE1hZyB8fCBtaW4gPT09IHlNYWcpIHtcbiAgICBwbGFuZUF4aXMyID0gekF4aXM7XG4gIH1cblxuICBDYXJ0ZXNpYW4zLm5vcm1hbGl6ZShwbGFuZUF4aXMxLCBwbGFuZUF4aXMxUmVzdWx0KTtcbiAgQ2FydGVzaWFuMy5ub3JtYWxpemUocGxhbmVBeGlzMiwgcGxhbmVBeGlzMlJlc3VsdCk7XG4gIENhcnRlc2lhbjMuY2xvbmUob3JpZW50ZWRCb3VuZGluZ0JveC5jZW50ZXIsIGNlbnRlclJlc3VsdCk7XG4gIHJldHVybiB0cnVlO1xufTtcblxuZnVuY3Rpb24gcHJvamVjdFRvMkQocG9zaXRpb24sIGNlbnRlciwgYXhpczEsIGF4aXMyLCByZXN1bHQpIHtcbiAgdmFyIHYgPSBDYXJ0ZXNpYW4zLnN1YnRyYWN0KHBvc2l0aW9uLCBjZW50ZXIsIHNjcmF0Y2hJbnRlcnNlY3Rpb25Qb2ludCk7XG4gIHZhciB4ID0gQ2FydGVzaWFuMy5kb3QoYXhpczEsIHYpO1xuICB2YXIgeSA9IENhcnRlc2lhbjMuZG90KGF4aXMyLCB2KTtcblxuICByZXR1cm4gQ2FydGVzaWFuMi5mcm9tRWxlbWVudHMoeCwgeSwgcmVzdWx0KTtcbn1cblxuQ29wbGFuYXJQb2x5Z29uR2VvbWV0cnlMaWJyYXJ5LmNyZWF0ZVByb2plY3RQb2ludHNUbzJERnVuY3Rpb24gPSBmdW5jdGlvbiAoXG4gIGNlbnRlcixcbiAgYXhpczEsXG4gIGF4aXMyXG4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChwb3NpdGlvbnMpIHtcbiAgICB2YXIgcG9zaXRpb25SZXN1bHRzID0gbmV3IEFycmF5KHBvc2l0aW9ucy5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcG9zaXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBwb3NpdGlvblJlc3VsdHNbaV0gPSBwcm9qZWN0VG8yRChwb3NpdGlvbnNbaV0sIGNlbnRlciwgYXhpczEsIGF4aXMyKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcG9zaXRpb25SZXN1bHRzO1xuICB9O1xufTtcblxuQ29wbGFuYXJQb2x5Z29uR2VvbWV0cnlMaWJyYXJ5LmNyZWF0ZVByb2plY3RQb2ludFRvMkRGdW5jdGlvbiA9IGZ1bmN0aW9uIChcbiAgY2VudGVyLFxuICBheGlzMSxcbiAgYXhpczJcbikge1xuICByZXR1cm4gZnVuY3Rpb24gKHBvc2l0aW9uLCByZXN1bHQpIHtcbiAgICByZXR1cm4gcHJvamVjdFRvMkQocG9zaXRpb24sIGNlbnRlciwgYXhpczEsIGF4aXMyLCByZXN1bHQpO1xuICB9O1xufTtcbmV4cG9ydCBkZWZhdWx0IENvcGxhbmFyUG9seWdvbkdlb21ldHJ5TGlicmFyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5737\n')},27753:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32378);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84828);\n/* harmony import */ var _CoplanarPolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5737);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82982);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(26865);\n/* harmony import */ var _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(57552);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(22832);\n/* harmony import */ var _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(38425);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(97264);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction createGeometryFromPositions(positions) {\n  var length = positions.length;\n  var flatPositions = new Float64Array(length * 3);\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].createTypedArray */ .Z.createTypedArray(length, length * 2);\n\n  var positionIndex = 0;\n  var index = 0;\n\n  for (var i = 0; i < length; i++) {\n    var position = positions[i];\n    flatPositions[positionIndex++] = position.x;\n    flatPositions[positionIndex++] = position.y;\n    flatPositions[positionIndex++] = position.z;\n\n    indices[index++] = i;\n    indices[index++] = (i + 1) % length;\n  }\n\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z({\n    position: new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].DOUBLE */ .Z.DOUBLE,\n      componentsPerAttribute: 3,\n      values: flatPositions,\n    }),\n  });\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].LINES */ .Z.LINES,\n  });\n}\n\n/**\n * A description of the outline of a polygon composed of arbitrary coplanar positions.\n *\n * @alias CoplanarPolygonOutlineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {PolygonHierarchy} options.polygonHierarchy A polygon hierarchy that can include holes.\n *\n * @see CoplanarPolygonOutlineGeometry.createGeometry\n *\n * @example\n * var polygonOutline = new Cesium.CoplanarPolygonOutlineGeometry({\n *   positions : Cesium.Cartesian3.fromDegreesArrayHeights([\n *      -90.0, 30.0, 0.0,\n *      -90.0, 30.0, 1000.0,\n *      -80.0, 30.0, 1000.0,\n *      -80.0, 30.0, 0.0\n *   ])\n * });\n * var geometry = Cesium.CoplanarPolygonOutlineGeometry.createGeometry(polygonOutline);\n */\nfunction CoplanarPolygonOutlineGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var polygonHierarchy = options.polygonHierarchy;\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("options.polygonHierarchy", polygonHierarchy);\n  //>>includeEnd(\'debug\');\n\n  this._polygonHierarchy = polygonHierarchy;\n  this._workerName = "createCoplanarPolygonOutlineGeometry";\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength =\n    _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].computeHierarchyPackedLength */ .Z.computeHierarchyPackedLength(polygonHierarchy) + 1;\n}\n\n/**\n * A description of a coplanar polygon outline from an array of positions.\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of positions that defined the corner points of the polygon.\n * @returns {CoplanarPolygonOutlineGeometry}\n */\nCoplanarPolygonOutlineGeometry.fromPositions = function (options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("options.positions", options.positions);\n  //>>includeEnd(\'debug\');\n\n  var newOptions = {\n    polygonHierarchy: {\n      positions: options.positions,\n    },\n  };\n  return new CoplanarPolygonOutlineGeometry(newOptions);\n};\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {CoplanarPolygonOutlineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nCoplanarPolygonOutlineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(startingIndex, 0);\n\n  startingIndex = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].packPolygonHierarchy */ .Z.packPolygonHierarchy(\n    value._polygonHierarchy,\n    array,\n    startingIndex\n  );\n\n  array[startingIndex] = value.packedLength;\n\n  return array;\n};\n\nvar scratchOptions = {\n  polygonHierarchy: {},\n};\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {CoplanarPolygonOutlineGeometry} [result] The object into which to store the result.\n * @returns {CoplanarPolygonOutlineGeometry} The modified result parameter or a new CoplanarPolygonOutlineGeometry instance if one was not provided.\n */\nCoplanarPolygonOutlineGeometry.unpack = function (\n  array,\n  startingIndex,\n  result\n) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var polygonHierarchy = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].unpackPolygonHierarchy */ .Z.unpackPolygonHierarchy(\n    array,\n    startingIndex\n  );\n  startingIndex = polygonHierarchy.startingIndex;\n  delete polygonHierarchy.startingIndex;\n  var packedLength = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z)(result)) {\n    result = new CoplanarPolygonOutlineGeometry(scratchOptions);\n  }\n\n  result._polygonHierarchy = polygonHierarchy;\n  result.packedLength = packedLength;\n\n  return result;\n};\n\n/**\n * Computes the geometric representation of an arbitrary coplanar polygon, including its vertices, indices, and a bounding sphere.\n *\n * @param {CoplanarPolygonOutlineGeometry} polygonGeometry A description of the polygon.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nCoplanarPolygonOutlineGeometry.createGeometry = function (polygonGeometry) {\n  var polygonHierarchy = polygonGeometry._polygonHierarchy;\n\n  var outerPositions = polygonHierarchy.positions;\n  outerPositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(\n    outerPositions,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon,\n    true\n  );\n  if (outerPositions.length < 3) {\n    return;\n  }\n  var isValid = _CoplanarPolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].validOutline */ .Z.validOutline(outerPositions);\n  if (!isValid) {\n    return undefined;\n  }\n\n  var polygons = _PolygonGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].polygonOutlinesFromHierarchy */ .Z.polygonOutlinesFromHierarchy(\n    polygonHierarchy,\n    false\n  );\n\n  if (polygons.length === 0) {\n    return undefined;\n  }\n\n  var geometries = [];\n\n  for (var i = 0; i < polygons.length; i++) {\n    var geometryInstance = new _GeometryInstance_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n      geometry: createGeometryFromPositions(polygons[i]),\n    });\n    geometries.push(geometryInstance);\n  }\n\n  var geometry = _GeometryPipeline_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].combineInstances */ .Z.combineInstances(geometries)[0];\n  var boundingSphere = _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].fromPoints */ .Z.fromPoints(polygonHierarchy.positions);\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z({\n    attributes: geometry.attributes,\n    indices: geometry.indices,\n    primitiveType: geometry.primitiveType,\n    boundingSphere: boundingSphere,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CoplanarPolygonOutlineGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27753\n')},56439:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Style options for corners.\n *\n * @demo The {@link https://sandcastle.cesium.com/index.html?src=Corridor.html&label=Geometries|Corridor Demo}\n * demonstrates the three corner types, as used by {@link CorridorGraphics}.\n *\n * @enum {Number}\n */\nvar CornerType = {\n  /**\n   * <img src="Images/CornerTypeRounded.png" style="vertical-align: middle;" width="186" height="189" />\n   *\n   * Corner has a smooth edge.\n   * @type {Number}\n   * @constant\n   */\n  ROUNDED: 0,\n\n  /**\n   * <img src="Images/CornerTypeMitered.png" style="vertical-align: middle;" width="186" height="189" />\n   *\n   * Corner point is the intersection of adjacent edges.\n   * @type {Number}\n   * @constant\n   */\n  MITERED: 1,\n\n  /**\n   * <img src="Images/CornerTypeBeveled.png" style="vertical-align: middle;" width="186" height="189" />\n   *\n   * Corner is clipped.\n   * @type {Number}\n   * @constant\n   */\n  BEVELED: 2,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(CornerType));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY0MzkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLG9EQUFvRCx1QkFBdUI7QUFDM0U7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFO0FBQzNFO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkVBQTJFO0FBQzNFO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkVBQTJFO0FBQzNFO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBZSx5QkFBeUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Z1ZTMtd2VicGFjazUvLi9ub2RlX21vZHVsZXMvY2VzaXVtL1NvdXJjZS9Db3JlL0Nvcm5lclR5cGUuanM/YzI0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN0eWxlIG9wdGlvbnMgZm9yIGNvcm5lcnMuXG4gKlxuICogQGRlbW8gVGhlIHtAbGluayBodHRwczovL3NhbmRjYXN0bGUuY2VzaXVtLmNvbS9pbmRleC5odG1sP3NyYz1Db3JyaWRvci5odG1sJmxhYmVsPUdlb21ldHJpZXN8Q29ycmlkb3IgRGVtb31cbiAqIGRlbW9uc3RyYXRlcyB0aGUgdGhyZWUgY29ybmVyIHR5cGVzLCBhcyB1c2VkIGJ5IHtAbGluayBDb3JyaWRvckdyYXBoaWNzfS5cbiAqXG4gKiBAZW51bSB7TnVtYmVyfVxuICovXG52YXIgQ29ybmVyVHlwZSA9IHtcbiAgLyoqXG4gICAqIDxpbWcgc3JjPVwiSW1hZ2VzL0Nvcm5lclR5cGVSb3VuZGVkLnBuZ1wiIHN0eWxlPVwidmVydGljYWwtYWxpZ246IG1pZGRsZTtcIiB3aWR0aD1cIjE4NlwiIGhlaWdodD1cIjE4OVwiIC8+XG4gICAqXG4gICAqIENvcm5lciBoYXMgYSBzbW9vdGggZWRnZS5cbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBST1VOREVEOiAwLFxuXG4gIC8qKlxuICAgKiA8aW1nIHNyYz1cIkltYWdlcy9Db3JuZXJUeXBlTWl0ZXJlZC5wbmdcIiBzdHlsZT1cInZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XCIgd2lkdGg9XCIxODZcIiBoZWlnaHQ9XCIxODlcIiAvPlxuICAgKlxuICAgKiBDb3JuZXIgcG9pbnQgaXMgdGhlIGludGVyc2VjdGlvbiBvZiBhZGphY2VudCBlZGdlcy5cbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBNSVRFUkVEOiAxLFxuXG4gIC8qKlxuICAgKiA8aW1nIHNyYz1cIkltYWdlcy9Db3JuZXJUeXBlQmV2ZWxlZC5wbmdcIiBzdHlsZT1cInZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XCIgd2lkdGg9XCIxODZcIiBoZWlnaHQ9XCIxODlcIiAvPlxuICAgKlxuICAgKiBDb3JuZXIgaXMgY2xpcHBlZC5cbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBCRVZFTEVEOiAyLFxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoQ29ybmVyVHlwZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56439\n')},34122:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23401);\n/* harmony import */ var _arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(32378);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60216);\n/* harmony import */ var _Cartographic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51688);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84828);\n/* harmony import */ var _CornerType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(56439);\n/* harmony import */ var _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(85293);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(82982);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(50491);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(87379);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(99417);\n/* harmony import */ var _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(78284);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(97264);\n/* harmony import */ var _Rectangle_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(96190);\n/* harmony import */ var _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(67252);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar cartesian1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar cartesian2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar cartesian3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar cartesian4 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar cartesian5 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar cartesian6 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nvar scratch1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratch2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nfunction scaleToSurface(positions, ellipsoid) {\n  for (var i = 0; i < positions.length; i++) {\n    positions[i] = ellipsoid.scaleToGeodeticSurface(positions[i], positions[i]);\n  }\n  return positions;\n}\n\nfunction addNormals(attr, normal, left, front, back, vertexFormat) {\n  var normals = attr.normals;\n  var tangents = attr.tangents;\n  var bitangents = attr.bitangents;\n  var forward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].cross */ .Z.cross(left, normal, scratch1),\n    scratch1\n  );\n  if (vertexFormat.normal) {\n    _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(normals, normal, front, back);\n  }\n  if (vertexFormat.tangent) {\n    _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(tangents, forward, front, back);\n  }\n  if (vertexFormat.bitangent) {\n    _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(bitangents, left, front, back);\n  }\n}\n\nfunction combine(computedPositions, vertexFormat, ellipsoid) {\n  var positions = computedPositions.positions;\n  var corners = computedPositions.corners;\n  var endPositions = computedPositions.endPositions;\n  var computedLefts = computedPositions.lefts;\n  var computedNormals = computedPositions.normals;\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z();\n  var corner;\n  var leftCount = 0;\n  var rightCount = 0;\n  var i;\n  var indicesLength = 0;\n  var length;\n  for (i = 0; i < positions.length; i += 2) {\n    length = positions[i].length - 3;\n    leftCount += length; //subtracting 3 to account for duplicate points at corners\n    indicesLength += length * 2;\n    rightCount += positions[i + 1].length - 3;\n  }\n  leftCount += 3; //add back count for end positions\n  rightCount += 3;\n  for (i = 0; i < corners.length; i++) {\n    corner = corners[i];\n    var leftSide = corners[i].leftPositions;\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(leftSide)) {\n      length = leftSide.length;\n      leftCount += length;\n      indicesLength += length;\n    } else {\n      length = corners[i].rightPositions.length;\n      rightCount += length;\n      indicesLength += length;\n    }\n  }\n\n  var addEndPositions = (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(endPositions);\n  var endPositionLength;\n  if (addEndPositions) {\n    endPositionLength = endPositions[0].length - 3;\n    leftCount += endPositionLength;\n    rightCount += endPositionLength;\n    endPositionLength /= 3;\n    indicesLength += endPositionLength * 6;\n  }\n  var size = leftCount + rightCount;\n  var finalPositions = new Float64Array(size);\n  var normals = vertexFormat.normal ? new Float32Array(size) : undefined;\n  var tangents = vertexFormat.tangent ? new Float32Array(size) : undefined;\n  var bitangents = vertexFormat.bitangent ? new Float32Array(size) : undefined;\n  var attr = {\n    normals: normals,\n    tangents: tangents,\n    bitangents: bitangents,\n  };\n  var front = 0;\n  var back = size - 1;\n  var UL, LL, UR, LR;\n  var normal = cartesian1;\n  var left = cartesian2;\n  var rightPos, leftPos;\n  var halfLength = endPositionLength / 2;\n\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createTypedArray */ .Z.createTypedArray(size / 3, indicesLength);\n  var index = 0;\n  if (addEndPositions) {\n    // add rounded end\n    leftPos = cartesian3;\n    rightPos = cartesian4;\n    var firstEndPositions = endPositions[0];\n    normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(computedNormals, 0, normal);\n    left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(computedLefts, 0, left);\n    for (i = 0; i < halfLength; i++) {\n      leftPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        firstEndPositions,\n        (halfLength - 1 - i) * 3,\n        leftPos\n      );\n      rightPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        firstEndPositions,\n        (halfLength + i) * 3,\n        rightPos\n      );\n      _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(finalPositions, rightPos, front);\n      _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n        finalPositions,\n        leftPos,\n        undefined,\n        back\n      );\n      addNormals(attr, normal, left, front, back, vertexFormat);\n\n      LL = front / 3;\n      LR = LL + 1;\n      UL = (back - 2) / 3;\n      UR = UL - 1;\n      indices[index++] = UL;\n      indices[index++] = LL;\n      indices[index++] = UR;\n      indices[index++] = UR;\n      indices[index++] = LL;\n      indices[index++] = LR;\n\n      front += 3;\n      back -= 3;\n    }\n  }\n\n  var posIndex = 0;\n  var compIndex = 0;\n  var rightEdge = positions[posIndex++]; //add first two edges\n  var leftEdge = positions[posIndex++];\n  finalPositions.set(rightEdge, front);\n  finalPositions.set(leftEdge, back - leftEdge.length + 1);\n\n  left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(computedLefts, compIndex, left);\n  var rightNormal;\n  var leftNormal;\n  length = leftEdge.length - 3;\n  for (i = 0; i < length; i += 3) {\n    rightNormal = ellipsoid.geodeticSurfaceNormal(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(rightEdge, i, scratch1),\n      scratch1\n    );\n    leftNormal = ellipsoid.geodeticSurfaceNormal(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(leftEdge, length - i, scratch2),\n      scratch2\n    );\n    normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(rightNormal, leftNormal, normal),\n      normal\n    );\n    addNormals(attr, normal, left, front, back, vertexFormat);\n\n    LL = front / 3;\n    LR = LL + 1;\n    UL = (back - 2) / 3;\n    UR = UL - 1;\n    indices[index++] = UL;\n    indices[index++] = LL;\n    indices[index++] = UR;\n    indices[index++] = UR;\n    indices[index++] = LL;\n    indices[index++] = LR;\n\n    front += 3;\n    back -= 3;\n  }\n\n  rightNormal = ellipsoid.geodeticSurfaceNormal(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(rightEdge, length, scratch1),\n    scratch1\n  );\n  leftNormal = ellipsoid.geodeticSurfaceNormal(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(leftEdge, length, scratch2),\n    scratch2\n  );\n  normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(rightNormal, leftNormal, normal),\n    normal\n  );\n  compIndex += 3;\n  for (i = 0; i < corners.length; i++) {\n    var j;\n    corner = corners[i];\n    var l = corner.leftPositions;\n    var r = corner.rightPositions;\n    var pivot;\n    var start;\n    var outsidePoint = cartesian6;\n    var previousPoint = cartesian3;\n    var nextPoint = cartesian4;\n    normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(computedNormals, compIndex, normal);\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(l)) {\n      addNormals(attr, normal, left, undefined, back, vertexFormat);\n      back -= 3;\n      pivot = LR;\n      start = UR;\n      for (j = 0; j < l.length / 3; j++) {\n        outsidePoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(l, j * 3, outsidePoint);\n        indices[index++] = pivot;\n        indices[index++] = start - j - 1;\n        indices[index++] = start - j;\n        _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n          finalPositions,\n          outsidePoint,\n          undefined,\n          back\n        );\n        previousPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n          finalPositions,\n          (start - j - 1) * 3,\n          previousPoint\n        );\n        nextPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(finalPositions, pivot * 3, nextPoint);\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(previousPoint, nextPoint, left),\n          left\n        );\n        addNormals(attr, normal, left, undefined, back, vertexFormat);\n        back -= 3;\n      }\n      outsidePoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        finalPositions,\n        pivot * 3,\n        outsidePoint\n      );\n      previousPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(finalPositions, start * 3, previousPoint),\n        outsidePoint,\n        previousPoint\n      );\n      nextPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(finalPositions, (start - j) * 3, nextPoint),\n        outsidePoint,\n        nextPoint\n      );\n      left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(previousPoint, nextPoint, left),\n        left\n      );\n      addNormals(attr, normal, left, front, undefined, vertexFormat);\n      front += 3;\n    } else {\n      addNormals(attr, normal, left, front, undefined, vertexFormat);\n      front += 3;\n      pivot = UR;\n      start = LR;\n      for (j = 0; j < r.length / 3; j++) {\n        outsidePoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(r, j * 3, outsidePoint);\n        indices[index++] = pivot;\n        indices[index++] = start + j;\n        indices[index++] = start + j + 1;\n        _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n          finalPositions,\n          outsidePoint,\n          front\n        );\n        previousPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n          finalPositions,\n          pivot * 3,\n          previousPoint\n        );\n        nextPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n          finalPositions,\n          (start + j) * 3,\n          nextPoint\n        );\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(previousPoint, nextPoint, left),\n          left\n        );\n        addNormals(attr, normal, left, front, undefined, vertexFormat);\n        front += 3;\n      }\n      outsidePoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        finalPositions,\n        pivot * 3,\n        outsidePoint\n      );\n      previousPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(finalPositions, (start + j) * 3, previousPoint),\n        outsidePoint,\n        previousPoint\n      );\n      nextPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(finalPositions, start * 3, nextPoint),\n        outsidePoint,\n        nextPoint\n      );\n      left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].negate */ .Z.negate(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(nextPoint, previousPoint, left), left),\n        left\n      );\n      addNormals(attr, normal, left, undefined, back, vertexFormat);\n      back -= 3;\n    }\n    rightEdge = positions[posIndex++];\n    leftEdge = positions[posIndex++];\n    rightEdge.splice(0, 3); //remove duplicate points added by corner\n    leftEdge.splice(leftEdge.length - 3, 3);\n    finalPositions.set(rightEdge, front);\n    finalPositions.set(leftEdge, back - leftEdge.length + 1);\n    length = leftEdge.length - 3;\n\n    compIndex += 3;\n    left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(computedLefts, compIndex, left);\n    for (j = 0; j < leftEdge.length; j += 3) {\n      rightNormal = ellipsoid.geodeticSurfaceNormal(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(rightEdge, j, scratch1),\n        scratch1\n      );\n      leftNormal = ellipsoid.geodeticSurfaceNormal(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(leftEdge, length - j, scratch2),\n        scratch2\n      );\n      normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(rightNormal, leftNormal, normal),\n        normal\n      );\n      addNormals(attr, normal, left, front, back, vertexFormat);\n\n      LR = front / 3;\n      LL = LR - 1;\n      UR = (back - 2) / 3;\n      UL = UR + 1;\n      indices[index++] = UL;\n      indices[index++] = LL;\n      indices[index++] = UR;\n      indices[index++] = UR;\n      indices[index++] = LL;\n      indices[index++] = LR;\n\n      front += 3;\n      back -= 3;\n    }\n    front -= 3;\n    back += 3;\n  }\n  normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n    computedNormals,\n    computedNormals.length - 3,\n    normal\n  );\n  addNormals(attr, normal, left, front, back, vertexFormat);\n\n  if (addEndPositions) {\n    // add rounded end\n    front += 3;\n    back -= 3;\n    leftPos = cartesian3;\n    rightPos = cartesian4;\n    var lastEndPositions = endPositions[1];\n    for (i = 0; i < halfLength; i++) {\n      leftPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        lastEndPositions,\n        (endPositionLength - i - 1) * 3,\n        leftPos\n      );\n      rightPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(lastEndPositions, i * 3, rightPos);\n      _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n        finalPositions,\n        leftPos,\n        undefined,\n        back\n      );\n      _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(finalPositions, rightPos, front);\n      addNormals(attr, normal, left, front, back, vertexFormat);\n\n      LR = front / 3;\n      LL = LR - 1;\n      UR = (back - 2) / 3;\n      UL = UR + 1;\n      indices[index++] = UL;\n      indices[index++] = LL;\n      indices[index++] = UR;\n      indices[index++] = UR;\n      indices[index++] = LL;\n      indices[index++] = LR;\n\n      front += 3;\n      back -= 3;\n    }\n  }\n\n  attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: finalPositions,\n  });\n\n  if (vertexFormat.st) {\n    var st = new Float32Array((size / 3) * 2);\n    var rightSt;\n    var leftSt;\n    var stIndex = 0;\n    if (addEndPositions) {\n      leftCount /= 3;\n      rightCount /= 3;\n      var theta = Math.PI / (endPositionLength + 1);\n      leftSt = 1 / (leftCount - endPositionLength + 1);\n      rightSt = 1 / (rightCount - endPositionLength + 1);\n      var a;\n      var halfEndPos = endPositionLength / 2;\n      for (i = halfEndPos + 1; i < endPositionLength + 1; i++) {\n        // lower left rounded end\n        a = _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO + theta * i;\n        st[stIndex++] = rightSt * (1 + Math.cos(a));\n        st[stIndex++] = 0.5 * (1 + Math.sin(a));\n      }\n      for (i = 1; i < rightCount - endPositionLength + 1; i++) {\n        // bottom edge\n        st[stIndex++] = i * rightSt;\n        st[stIndex++] = 0;\n      }\n      for (i = endPositionLength; i > halfEndPos; i--) {\n        // lower right rounded end\n        a = _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO - i * theta;\n        st[stIndex++] = 1 - rightSt * (1 + Math.cos(a));\n        st[stIndex++] = 0.5 * (1 + Math.sin(a));\n      }\n      for (i = halfEndPos; i > 0; i--) {\n        // upper right rounded end\n        a = _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO - theta * i;\n        st[stIndex++] = 1 - leftSt * (1 + Math.cos(a));\n        st[stIndex++] = 0.5 * (1 + Math.sin(a));\n      }\n      for (i = leftCount - endPositionLength; i > 0; i--) {\n        // top edge\n        st[stIndex++] = i * leftSt;\n        st[stIndex++] = 1;\n      }\n      for (i = 1; i < halfEndPos + 1; i++) {\n        // upper left rounded end\n        a = _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].PI_OVER_TWO */ .Z.PI_OVER_TWO + theta * i;\n        st[stIndex++] = leftSt * (1 + Math.cos(a));\n        st[stIndex++] = 0.5 * (1 + Math.sin(a));\n      }\n    } else {\n      leftCount /= 3;\n      rightCount /= 3;\n      leftSt = 1 / (leftCount - 1);\n      rightSt = 1 / (rightCount - 1);\n      for (i = 0; i < rightCount; i++) {\n        // bottom edge\n        st[stIndex++] = i * rightSt;\n        st[stIndex++] = 0;\n      }\n      for (i = leftCount; i > 0; i--) {\n        // top edge\n        st[stIndex++] = (i - 1) * leftSt;\n        st[stIndex++] = 1;\n      }\n    }\n\n    attributes.st = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 2,\n      values: st,\n    });\n  }\n\n  if (vertexFormat.normal) {\n    attributes.normal = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: attr.normals,\n    });\n  }\n\n  if (vertexFormat.tangent) {\n    attributes.tangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: attr.tangents,\n    });\n  }\n\n  if (vertexFormat.bitangent) {\n    attributes.bitangent = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: attr.bitangents,\n    });\n  }\n\n  return {\n    attributes: attributes,\n    indices: indices,\n  };\n}\n\nfunction extrudedAttributes(attributes, vertexFormat) {\n  if (\n    !vertexFormat.normal &&\n    !vertexFormat.tangent &&\n    !vertexFormat.bitangent &&\n    !vertexFormat.st\n  ) {\n    return attributes;\n  }\n  var positions = attributes.position.values;\n  var topNormals;\n  var topBitangents;\n  if (vertexFormat.normal || vertexFormat.bitangent) {\n    topNormals = attributes.normal.values;\n    topBitangents = attributes.bitangent.values;\n  }\n  var size = attributes.position.values.length / 18;\n  var threeSize = size * 3;\n  var twoSize = size * 2;\n  var sixSize = threeSize * 2;\n  var i;\n  if (vertexFormat.normal || vertexFormat.bitangent || vertexFormat.tangent) {\n    var normals = vertexFormat.normal\n      ? new Float32Array(threeSize * 6)\n      : undefined;\n    var tangents = vertexFormat.tangent\n      ? new Float32Array(threeSize * 6)\n      : undefined;\n    var bitangents = vertexFormat.bitangent\n      ? new Float32Array(threeSize * 6)\n      : undefined;\n    var topPosition = cartesian1;\n    var bottomPosition = cartesian2;\n    var previousPosition = cartesian3;\n    var normal = cartesian4;\n    var tangent = cartesian5;\n    var bitangent = cartesian6;\n    var attrIndex = sixSize;\n    for (i = 0; i < threeSize; i += 3) {\n      var attrIndexOffset = attrIndex + sixSize;\n      topPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(positions, i, topPosition);\n      bottomPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        positions,\n        i + threeSize,\n        bottomPosition\n      );\n      previousPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        positions,\n        (i + 3) % threeSize,\n        previousPosition\n      );\n      bottomPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(\n        bottomPosition,\n        topPosition,\n        bottomPosition\n      );\n      previousPosition = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(\n        previousPosition,\n        topPosition,\n        previousPosition\n      );\n      normal = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].cross */ .Z.cross(bottomPosition, previousPosition, normal),\n        normal\n      );\n      if (vertexFormat.normal) {\n        _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(normals, normal, attrIndexOffset);\n        _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n          normals,\n          normal,\n          attrIndexOffset + 3\n        );\n        _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(normals, normal, attrIndex);\n        _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(normals, normal, attrIndex + 3);\n      }\n      if (vertexFormat.tangent || vertexFormat.bitangent) {\n        bitangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(topNormals, i, bitangent);\n        if (vertexFormat.bitangent) {\n          _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n            bitangents,\n            bitangent,\n            attrIndexOffset\n          );\n          _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n            bitangents,\n            bitangent,\n            attrIndexOffset + 3\n          );\n          _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n            bitangents,\n            bitangent,\n            attrIndex\n          );\n          _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n            bitangents,\n            bitangent,\n            attrIndex + 3\n          );\n        }\n\n        if (vertexFormat.tangent) {\n          tangent = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].cross */ .Z.cross(bitangent, normal, tangent),\n            tangent\n          );\n          _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n            tangents,\n            tangent,\n            attrIndexOffset\n          );\n          _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n            tangents,\n            tangent,\n            attrIndexOffset + 3\n          );\n          _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(tangents, tangent, attrIndex);\n          _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].addAttribute */ .Z.addAttribute(\n            tangents,\n            tangent,\n            attrIndex + 3\n          );\n        }\n      }\n      attrIndex += 6;\n    }\n\n    if (vertexFormat.normal) {\n      normals.set(topNormals); //top\n      for (i = 0; i < threeSize; i += 3) {\n        //bottom normals\n        normals[i + threeSize] = -topNormals[i];\n        normals[i + threeSize + 1] = -topNormals[i + 1];\n        normals[i + threeSize + 2] = -topNormals[i + 2];\n      }\n      attributes.normal.values = normals;\n    } else {\n      attributes.normal = undefined;\n    }\n\n    if (vertexFormat.bitangent) {\n      bitangents.set(topBitangents); //top\n      bitangents.set(topBitangents, threeSize); //bottom\n      attributes.bitangent.values = bitangents;\n    } else {\n      attributes.bitangent = undefined;\n    }\n\n    if (vertexFormat.tangent) {\n      var topTangents = attributes.tangent.values;\n      tangents.set(topTangents); //top\n      tangents.set(topTangents, threeSize); //bottom\n      attributes.tangent.values = tangents;\n    }\n  }\n  if (vertexFormat.st) {\n    var topSt = attributes.st.values;\n    var st = new Float32Array(twoSize * 6);\n    st.set(topSt); //top\n    st.set(topSt, twoSize); //bottom\n    var index = twoSize * 2;\n\n    for (var j = 0; j < 2; j++) {\n      st[index++] = topSt[0];\n      st[index++] = topSt[1];\n      for (i = 2; i < twoSize; i += 2) {\n        var s = topSt[i];\n        var t = topSt[i + 1];\n        st[index++] = s;\n        st[index++] = t;\n        st[index++] = s;\n        st[index++] = t;\n      }\n      st[index++] = topSt[0];\n      st[index++] = topSt[1];\n    }\n    attributes.st.values = st;\n  }\n\n  return attributes;\n}\n\nfunction addWallPositions(positions, index, wallPositions) {\n  wallPositions[index++] = positions[0];\n  wallPositions[index++] = positions[1];\n  wallPositions[index++] = positions[2];\n  for (var i = 3; i < positions.length; i += 3) {\n    var x = positions[i];\n    var y = positions[i + 1];\n    var z = positions[i + 2];\n    wallPositions[index++] = x;\n    wallPositions[index++] = y;\n    wallPositions[index++] = z;\n    wallPositions[index++] = x;\n    wallPositions[index++] = y;\n    wallPositions[index++] = z;\n  }\n  wallPositions[index++] = positions[0];\n  wallPositions[index++] = positions[1];\n  wallPositions[index++] = positions[2];\n\n  return wallPositions;\n}\n\nfunction computePositionsExtruded(params, vertexFormat) {\n  var topVertexFormat = new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z({\n    position: vertexFormat.position,\n    normal:\n      vertexFormat.normal || vertexFormat.bitangent || params.shadowVolume,\n    tangent: vertexFormat.tangent,\n    bitangent: vertexFormat.normal || vertexFormat.bitangent,\n    st: vertexFormat.st,\n  });\n  var ellipsoid = params.ellipsoid;\n  var computedPositions = _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].computePositions */ .Z.computePositions(params);\n  var attr = combine(computedPositions, topVertexFormat, ellipsoid);\n  var height = params.height;\n  var extrudedHeight = params.extrudedHeight;\n  var attributes = attr.attributes;\n  var indices = attr.indices;\n  var positions = attributes.position.values;\n  var length = positions.length;\n  var newPositions = new Float64Array(length * 6);\n  var extrudedPositions = new Float64Array(length);\n  extrudedPositions.set(positions);\n  var wallPositions = new Float64Array(length * 4);\n\n  positions = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n    positions,\n    height,\n    ellipsoid\n  );\n  wallPositions = addWallPositions(positions, 0, wallPositions);\n  extrudedPositions = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n    extrudedPositions,\n    extrudedHeight,\n    ellipsoid\n  );\n  wallPositions = addWallPositions(\n    extrudedPositions,\n    length * 2,\n    wallPositions\n  );\n  newPositions.set(positions);\n  newPositions.set(extrudedPositions, length);\n  newPositions.set(wallPositions, length * 2);\n  attributes.position.values = newPositions;\n\n  attributes = extrudedAttributes(attributes, vertexFormat);\n  var i;\n  var size = length / 3;\n  if (params.shadowVolume) {\n    var topNormals = attributes.normal.values;\n    length = topNormals.length;\n\n    var extrudeNormals = new Float32Array(length * 6);\n    for (i = 0; i < length; i++) {\n      topNormals[i] = -topNormals[i];\n    }\n    //only get normals for bottom layer that\'s going to be pushed down\n    extrudeNormals.set(topNormals, length); //bottom face\n    extrudeNormals = addWallPositions(topNormals, length * 4, extrudeNormals); //bottom wall\n    attributes.extrudeDirection = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].FLOAT */ .Z.FLOAT,\n      componentsPerAttribute: 3,\n      values: extrudeNormals,\n    });\n    if (!vertexFormat.normal) {\n      attributes.normal = undefined;\n    }\n  }\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(params.offsetAttribute)) {\n    var applyOffset = new Uint8Array(size * 6);\n    if (params.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].TOP */ .Z.TOP) {\n      applyOffset = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, 1, 0, size); // top face\n      applyOffset = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, 1, size * 2, size * 4); // top wall\n    } else {\n      var applyOffsetValue =\n        params.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].NONE */ .Z.NONE ? 0 : 1;\n      applyOffset = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, applyOffsetValue);\n    }\n    attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 1,\n      values: applyOffset,\n    });\n  }\n\n  var iLength = indices.length;\n  var twoSize = size + size;\n  var newIndices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    newPositions.length / 3,\n    iLength * 2 + twoSize * 3\n  );\n  newIndices.set(indices);\n  var index = iLength;\n  for (i = 0; i < iLength; i += 3) {\n    // bottom indices\n    var v0 = indices[i];\n    var v1 = indices[i + 1];\n    var v2 = indices[i + 2];\n    newIndices[index++] = v2 + size;\n    newIndices[index++] = v1 + size;\n    newIndices[index++] = v0 + size;\n  }\n\n  var UL, LL, UR, LR;\n\n  for (i = 0; i < twoSize; i += 2) {\n    //wall indices\n    UL = i + twoSize;\n    LL = UL + twoSize;\n    UR = UL + 1;\n    LR = LL + 1;\n    newIndices[index++] = UL;\n    newIndices[index++] = LL;\n    newIndices[index++] = UR;\n    newIndices[index++] = UR;\n    newIndices[index++] = LL;\n    newIndices[index++] = LR;\n  }\n\n  return {\n    attributes: attributes,\n    indices: newIndices,\n  };\n}\n\nvar scratchCartesian1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchCartesian2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchCartographic = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nfunction computeOffsetPoints(\n  position1,\n  position2,\n  ellipsoid,\n  halfWidth,\n  min,\n  max\n) {\n  // Compute direction of offset the point\n  var direction = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(position2, position1, scratchCartesian1);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(direction, direction);\n  var normal = ellipsoid.geodeticSurfaceNormal(position1, scratchCartesian2);\n  var offsetDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].cross */ .Z.cross(direction, normal, scratchCartesian1);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(offsetDirection, halfWidth, offsetDirection);\n\n  var minLat = min.latitude;\n  var minLon = min.longitude;\n  var maxLat = max.latitude;\n  var maxLon = max.longitude;\n\n  // Compute 2 offset points\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(position1, offsetDirection, scratchCartesian2);\n  ellipsoid.cartesianToCartographic(scratchCartesian2, scratchCartographic);\n\n  var lat = scratchCartographic.latitude;\n  var lon = scratchCartographic.longitude;\n  minLat = Math.min(minLat, lat);\n  minLon = Math.min(minLon, lon);\n  maxLat = Math.max(maxLat, lat);\n  maxLon = Math.max(maxLon, lon);\n\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(position1, offsetDirection, scratchCartesian2);\n  ellipsoid.cartesianToCartographic(scratchCartesian2, scratchCartographic);\n\n  lat = scratchCartographic.latitude;\n  lon = scratchCartographic.longitude;\n  minLat = Math.min(minLat, lat);\n  minLon = Math.min(minLon, lon);\n  maxLat = Math.max(maxLat, lat);\n  maxLon = Math.max(maxLon, lon);\n\n  min.latitude = minLat;\n  min.longitude = minLon;\n  max.latitude = maxLat;\n  max.longitude = maxLon;\n}\n\nvar scratchCartesianOffset = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchCartesianEnds = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar scratchCartographicMin = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\nvar scratchCartographicMax = new _Cartographic_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z();\n\nfunction computeRectangle(positions, ellipsoid, width, cornerType, result) {\n  positions = scaleToSurface(positions, ellipsoid);\n  var cleanPositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    positions,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon\n  );\n  var length = cleanPositions.length;\n  if (length < 2 || width <= 0) {\n    return new _Rectangle_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n  }\n  var halfWidth = width * 0.5;\n\n  scratchCartographicMin.latitude = Number.POSITIVE_INFINITY;\n  scratchCartographicMin.longitude = Number.POSITIVE_INFINITY;\n  scratchCartographicMax.latitude = Number.NEGATIVE_INFINITY;\n  scratchCartographicMax.longitude = Number.NEGATIVE_INFINITY;\n\n  var lat, lon;\n  if (cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ROUNDED */ .Z.ROUNDED) {\n    // Compute start cap\n    var first = cleanPositions[0];\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(first, cleanPositions[1], scratchCartesianOffset);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(scratchCartesianOffset, scratchCartesianOffset);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n      scratchCartesianOffset,\n      halfWidth,\n      scratchCartesianOffset\n    );\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(first, scratchCartesianOffset, scratchCartesianEnds);\n\n    ellipsoid.cartesianToCartographic(\n      scratchCartesianEnds,\n      scratchCartographic\n    );\n    lat = scratchCartographic.latitude;\n    lon = scratchCartographic.longitude;\n    scratchCartographicMin.latitude = Math.min(\n      scratchCartographicMin.latitude,\n      lat\n    );\n    scratchCartographicMin.longitude = Math.min(\n      scratchCartographicMin.longitude,\n      lon\n    );\n    scratchCartographicMax.latitude = Math.max(\n      scratchCartographicMax.latitude,\n      lat\n    );\n    scratchCartographicMax.longitude = Math.max(\n      scratchCartographicMax.longitude,\n      lon\n    );\n  }\n\n  // Compute the rest\n  for (var i = 0; i < length - 1; ++i) {\n    computeOffsetPoints(\n      cleanPositions[i],\n      cleanPositions[i + 1],\n      ellipsoid,\n      halfWidth,\n      scratchCartographicMin,\n      scratchCartographicMax\n    );\n  }\n\n  // Compute ending point\n  var last = cleanPositions[length - 1];\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].subtract */ .Z.subtract(last, cleanPositions[length - 2], scratchCartesianOffset);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].normalize */ .Z.normalize(scratchCartesianOffset, scratchCartesianOffset);\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n    scratchCartesianOffset,\n    halfWidth,\n    scratchCartesianOffset\n  );\n  _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].add */ .Z.add(last, scratchCartesianOffset, scratchCartesianEnds);\n  computeOffsetPoints(\n    last,\n    scratchCartesianEnds,\n    ellipsoid,\n    halfWidth,\n    scratchCartographicMin,\n    scratchCartographicMax\n  );\n\n  if (cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ROUNDED */ .Z.ROUNDED) {\n    // Compute end cap\n    ellipsoid.cartesianToCartographic(\n      scratchCartesianEnds,\n      scratchCartographic\n    );\n    lat = scratchCartographic.latitude;\n    lon = scratchCartographic.longitude;\n    scratchCartographicMin.latitude = Math.min(\n      scratchCartographicMin.latitude,\n      lat\n    );\n    scratchCartographicMin.longitude = Math.min(\n      scratchCartographicMin.longitude,\n      lon\n    );\n    scratchCartographicMax.latitude = Math.max(\n      scratchCartographicMax.latitude,\n      lat\n    );\n    scratchCartographicMax.longitude = Math.max(\n      scratchCartographicMax.longitude,\n      lon\n    );\n  }\n\n  var rectangle = (0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(result) ? result : new _Rectangle_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z();\n  rectangle.north = scratchCartographicMax.latitude;\n  rectangle.south = scratchCartographicMin.latitude;\n  rectangle.east = scratchCartographicMax.longitude;\n  rectangle.west = scratchCartographicMin.longitude;\n\n  return rectangle;\n}\n\n/**\n * A description of a corridor. Corridor geometry can be rendered with both {@link Primitive} and {@link GroundPrimitive}.\n *\n * @alias CorridorGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of positions that define the center of the corridor.\n * @param {Number} options.width The distance between the edges of the corridor in meters.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Number} [options.height=0] The distance in meters between the ellipsoid surface and the positions.\n * @param {Number} [options.extrudedHeight] The distance in meters between the ellipsoid surface and the extruded face.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n * @param {CornerType} [options.cornerType=CornerType.ROUNDED] Determines the style of the corners.\n *\n * @see CorridorGeometry.createGeometry\n * @see Packable\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Corridor.html|Cesium Sandcastle Corridor Demo}\n *\n * @example\n * var corridor = new Cesium.CorridorGeometry({\n *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY,\n *   positions : Cesium.Cartesian3.fromDegreesArray([-72.0, 40.0, -70.0, 35.0]),\n *   width : 100000\n * });\n */\nfunction CorridorGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var positions = options.positions;\n  var width = options.width;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("options.positions", positions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("options.width", width);\n  //>>includeEnd(\'debug\');\n\n  var height = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.height, 0.0);\n  var extrudedHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.extrudedHeight, height);\n\n  this._positions = positions;\n  this._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].WGS84 */ .Z.WGS84)\n  );\n  this._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.vertexFormat, _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].DEFAULT */ .Z.DEFAULT)\n  );\n  this._width = width;\n  this._height = Math.max(height, extrudedHeight);\n  this._extrudedHeight = Math.min(height, extrudedHeight);\n  this._cornerType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.cornerType, _CornerType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ROUNDED */ .Z.ROUNDED);\n  this._granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  this._shadowVolume = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.shadowVolume, false);\n  this._workerName = "createCorridorGeometry";\n  this._offsetAttribute = options.offsetAttribute;\n  this._rectangle = undefined;\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength =\n    1 +\n    positions.length * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength +\n    _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].packedLength */ .Z.packedLength +\n    _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].packedLength */ .Z.packedLength +\n    7;\n}\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {CorridorGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nCorridorGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var positions = value._positions;\n  var length = positions.length;\n  array[startingIndex++] = length;\n\n  for (var i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(positions[i], array, startingIndex);\n  }\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].packedLength */ .Z.packedLength;\n\n  _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].pack */ .Z.pack(value._vertexFormat, array, startingIndex);\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._width;\n  array[startingIndex++] = value._height;\n  array[startingIndex++] = value._extrudedHeight;\n  array[startingIndex++] = value._cornerType;\n  array[startingIndex++] = value._granularity;\n  array[startingIndex++] = value._shadowVolume ? 1.0 : 0.0;\n  array[startingIndex] = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(value._offsetAttribute, -1);\n\n  return array;\n};\n\nvar scratchEllipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE);\nvar scratchVertexFormat = new _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"] */ .Z();\nvar scratchOptions = {\n  positions: undefined,\n  ellipsoid: scratchEllipsoid,\n  vertexFormat: scratchVertexFormat,\n  width: undefined,\n  height: undefined,\n  extrudedHeight: undefined,\n  cornerType: undefined,\n  granularity: undefined,\n  shadowVolume: undefined,\n  offsetAttribute: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {CorridorGeometry} [result] The object into which to store the result.\n * @returns {CorridorGeometry} The modified result parameter or a new CorridorGeometry instance if one was not provided.\n */\nCorridorGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var length = array[startingIndex++];\n  var positions = new Array(length);\n\n  for (var i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    positions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchEllipsoid);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].packedLength */ .Z.packedLength;\n\n  var vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].unpack */ .Z.unpack(\n    array,\n    startingIndex,\n    scratchVertexFormat\n  );\n  startingIndex += _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].packedLength */ .Z.packedLength;\n\n  var width = array[startingIndex++];\n  var height = array[startingIndex++];\n  var extrudedHeight = array[startingIndex++];\n  var cornerType = array[startingIndex++];\n  var granularity = array[startingIndex++];\n  var shadowVolume = array[startingIndex++] === 1.0;\n  var offsetAttribute = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(result)) {\n    scratchOptions.positions = positions;\n    scratchOptions.width = width;\n    scratchOptions.height = height;\n    scratchOptions.extrudedHeight = extrudedHeight;\n    scratchOptions.cornerType = cornerType;\n    scratchOptions.granularity = granularity;\n    scratchOptions.shadowVolume = shadowVolume;\n    scratchOptions.offsetAttribute =\n      offsetAttribute === -1 ? undefined : offsetAttribute;\n\n    return new CorridorGeometry(scratchOptions);\n  }\n\n  result._positions = positions;\n  result._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].clone */ .Z.clone(ellipsoid, result._ellipsoid);\n  result._vertexFormat = _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].clone */ .Z.clone(vertexFormat, result._vertexFormat);\n  result._width = width;\n  result._height = height;\n  result._extrudedHeight = extrudedHeight;\n  result._cornerType = cornerType;\n  result._granularity = granularity;\n  result._shadowVolume = shadowVolume;\n  result._offsetAttribute =\n    offsetAttribute === -1 ? undefined : offsetAttribute;\n\n  return result;\n};\n\n/**\n * Computes the bounding rectangle given the provided options\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of positions that define the center of the corridor.\n * @param {Number} options.width The distance between the edges of the corridor in meters.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {CornerType} [options.cornerType=CornerType.ROUNDED] Determines the style of the corners.\n * @param {Rectangle} [result] An object in which to store the result.\n *\n * @returns {Rectangle} The result rectangle.\n */\nCorridorGeometry.computeRectangle = function (options, result) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var positions = options.positions;\n  var width = options.width;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("options.positions", positions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].defined */ .Z.defined("options.width", width);\n  //>>includeEnd(\'debug\');\n\n  var ellipsoid = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].WGS84 */ .Z.WGS84);\n  var cornerType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(options.cornerType, _CornerType_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].ROUNDED */ .Z.ROUNDED);\n\n  return computeRectangle(positions, ellipsoid, width, cornerType, result);\n};\n\n/**\n * Computes the geometric representation of a corridor, including its vertices, indices, and a bounding sphere.\n *\n * @param {CorridorGeometry} corridorGeometry A description of the corridor.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nCorridorGeometry.createGeometry = function (corridorGeometry) {\n  var positions = corridorGeometry._positions;\n  var width = corridorGeometry._width;\n  var ellipsoid = corridorGeometry._ellipsoid;\n\n  positions = scaleToSurface(positions, ellipsoid);\n  var cleanPositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    positions,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon\n  );\n\n  if (cleanPositions.length < 2 || width <= 0) {\n    return;\n  }\n\n  var height = corridorGeometry._height;\n  var extrudedHeight = corridorGeometry._extrudedHeight;\n  var extrude = !_Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n    height,\n    extrudedHeight,\n    0,\n    _Math_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].EPSILON2 */ .Z.EPSILON2\n  );\n\n  var vertexFormat = corridorGeometry._vertexFormat;\n  var params = {\n    ellipsoid: ellipsoid,\n    positions: cleanPositions,\n    width: width,\n    cornerType: corridorGeometry._cornerType,\n    granularity: corridorGeometry._granularity,\n    saveAttributes: true,\n  };\n  var attr;\n  if (extrude) {\n    params.height = height;\n    params.extrudedHeight = extrudedHeight;\n    params.shadowVolume = corridorGeometry._shadowVolume;\n    params.offsetAttribute = corridorGeometry._offsetAttribute;\n    attr = computePositionsExtruded(params, vertexFormat);\n  } else {\n    var computedPositions = _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].computePositions */ .Z.computePositions(params);\n    attr = combine(computedPositions, vertexFormat, ellipsoid);\n    attr.attributes.position.values = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n      attr.attributes.position.values,\n      height,\n      ellipsoid\n    );\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(corridorGeometry._offsetAttribute)) {\n      var applyOffsetValue =\n        corridorGeometry._offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].NONE */ .Z.NONE\n          ? 0\n          : 1;\n      var length = attr.attributes.position.values.length;\n      var applyOffset = new Uint8Array(length / 3);\n      (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, applyOffsetValue);\n      attr.attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n        componentsPerAttribute: 1,\n        values: applyOffset,\n      });\n    }\n  }\n  var attributes = attr.attributes;\n  var boundingSphere = _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromVertices */ .Z.fromVertices(\n    attributes.position.values,\n    undefined,\n    3\n  );\n  if (!vertexFormat.position) {\n    attr.attributes.position.values = undefined;\n  }\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: attr.indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"].TRIANGLES */ .Z.TRIANGLES,\n    boundingSphere: boundingSphere,\n    offsetAttribute: corridorGeometry._offsetAttribute,\n  });\n};\n\n/**\n * @private\n */\nCorridorGeometry.createShadowVolume = function (\n  corridorGeometry,\n  minHeightFunc,\n  maxHeightFunc\n) {\n  var granularity = corridorGeometry._granularity;\n  var ellipsoid = corridorGeometry._ellipsoid;\n\n  var minHeight = minHeightFunc(granularity, ellipsoid);\n  var maxHeight = maxHeightFunc(granularity, ellipsoid);\n\n  return new CorridorGeometry({\n    positions: corridorGeometry._positions,\n    width: corridorGeometry._width,\n    cornerType: corridorGeometry._cornerType,\n    ellipsoid: ellipsoid,\n    granularity: granularity,\n    extrudedHeight: minHeight,\n    height: maxHeight,\n    vertexFormat: _VertexFormat_js__WEBPACK_IMPORTED_MODULE_20__/* ["default"].POSITION_ONLY */ .Z.POSITION_ONLY,\n    shadowVolume: true,\n  });\n};\n\nObject.defineProperties(CorridorGeometry.prototype, {\n  /**\n   * @private\n   */\n  rectangle: {\n    get: function () {\n      if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_21__/* ["default"] */ .Z)(this._rectangle)) {\n        this._rectangle = computeRectangle(\n          this._positions,\n          this._ellipsoid,\n          this._width,\n          this._cornerType\n        );\n      }\n      return this._rectangle;\n    },\n  },\n  /**\n   * For remapping texture coordinates when rendering CorridorGeometries as GroundPrimitives.\n   *\n   * Corridors don\'t support stRotation,\n   * so just return the corners of the original system.\n   * @private\n   */\n  textureCoordinateRotationPoints: {\n    get: function () {\n      return [0, 0, 0, 1, 1, 0];\n    },\n  },\n});\n/* harmony default export */ __webpack_exports__["Z"] = (CorridorGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///34122\n')},85293:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60216);\n/* harmony import */ var _CornerType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56439);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82982);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(99417);\n/* harmony import */ var _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(68201);\n/* harmony import */ var _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(61733);\n/* harmony import */ var _PolylineVolumeGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39534);\n/* harmony import */ var _Quaternion_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87811);\n\n\n\n\n\n\n\n\n\n/**\n * @private\n */\nvar CorridorGeometryLibrary = {};\n\nvar scratch1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratch2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratch3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratch4 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nvar scaleArray2 = [new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(), new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z()];\n\nvar cartesian1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian4 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian5 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian6 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian7 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian8 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian9 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar cartesian10 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\nvar quaterion = new _Quaternion_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();\nvar rotMatrix = new _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nfunction computeRoundCorner(\n  cornerPoint,\n  startPoint,\n  endPoint,\n  cornerType,\n  leftIsOutside\n) {\n  var angle = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].angleBetween */ .Z.angleBetween(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(startPoint, cornerPoint, scratch1),\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(endPoint, cornerPoint, scratch2)\n  );\n  var granularity =\n    cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].BEVELED */ .Z.BEVELED\n      ? 1\n      : Math.ceil(angle / _Math_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].toRadians */ .Z.toRadians(5)) + 1;\n\n  var size = granularity * 3;\n  var array = new Array(size);\n\n  array[size - 3] = endPoint.x;\n  array[size - 2] = endPoint.y;\n  array[size - 1] = endPoint.z;\n\n  var m;\n  if (leftIsOutside) {\n    m = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromQuaternion */ .Z.fromQuaternion(\n      _Quaternion_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(\n        _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(cornerPoint, scratch1),\n        angle / granularity,\n        quaterion\n      ),\n      rotMatrix\n    );\n  } else {\n    m = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromQuaternion */ .Z.fromQuaternion(\n      _Quaternion_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].fromAxisAngle */ .Z.fromAxisAngle(cornerPoint, angle / granularity, quaterion),\n      rotMatrix\n    );\n  }\n\n  var index = 0;\n  startPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(startPoint, scratch1);\n  for (var i = 0; i < granularity; i++) {\n    startPoint = _Matrix3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].multiplyByVector */ .Z.multiplyByVector(m, startPoint, startPoint);\n    array[index++] = startPoint.x;\n    array[index++] = startPoint.y;\n    array[index++] = startPoint.z;\n  }\n\n  return array;\n}\n\nfunction addEndCaps(calculatedPositions) {\n  var cornerPoint = cartesian1;\n  var startPoint = cartesian2;\n  var endPoint = cartesian3;\n\n  var leftEdge = calculatedPositions[1];\n  startPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromArray */ .Z.fromArray(\n    calculatedPositions[1],\n    leftEdge.length - 3,\n    startPoint\n  );\n  endPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromArray */ .Z.fromArray(calculatedPositions[0], 0, endPoint);\n  cornerPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].midpoint */ .Z.midpoint(startPoint, endPoint, cornerPoint);\n  var firstEndCap = computeRoundCorner(\n    cornerPoint,\n    startPoint,\n    endPoint,\n    _CornerType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ROUNDED */ .Z.ROUNDED,\n    false\n  );\n\n  var length = calculatedPositions.length - 1;\n  var rightEdge = calculatedPositions[length - 1];\n  leftEdge = calculatedPositions[length];\n  startPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromArray */ .Z.fromArray(\n    rightEdge,\n    rightEdge.length - 3,\n    startPoint\n  );\n  endPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromArray */ .Z.fromArray(leftEdge, 0, endPoint);\n  cornerPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].midpoint */ .Z.midpoint(startPoint, endPoint, cornerPoint);\n  var lastEndCap = computeRoundCorner(\n    cornerPoint,\n    startPoint,\n    endPoint,\n    _CornerType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ROUNDED */ .Z.ROUNDED,\n    false\n  );\n\n  return [firstEndCap, lastEndCap];\n}\n\nfunction computeMiteredCorner(\n  position,\n  leftCornerDirection,\n  lastPoint,\n  leftIsOutside\n) {\n  var cornerPoint = scratch1;\n  if (leftIsOutside) {\n    cornerPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(position, leftCornerDirection, cornerPoint);\n  } else {\n    leftCornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(\n      leftCornerDirection,\n      leftCornerDirection\n    );\n    cornerPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(position, leftCornerDirection, cornerPoint);\n  }\n  return [\n    cornerPoint.x,\n    cornerPoint.y,\n    cornerPoint.z,\n    lastPoint.x,\n    lastPoint.y,\n    lastPoint.z,\n  ];\n}\n\nfunction addShiftedPositions(positions, left, scalar, calculatedPositions) {\n  var rightPositions = new Array(positions.length);\n  var leftPositions = new Array(positions.length);\n  var scaledLeft = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, scalar, scratch1);\n  var scaledRight = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(scaledLeft, scratch2);\n  var rightIndex = 0;\n  var leftIndex = positions.length - 1;\n\n  for (var i = 0; i < positions.length; i += 3) {\n    var pos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].fromArray */ .Z.fromArray(positions, i, scratch3);\n    var rightPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(pos, scaledRight, scratch4);\n    rightPositions[rightIndex++] = rightPos.x;\n    rightPositions[rightIndex++] = rightPos.y;\n    rightPositions[rightIndex++] = rightPos.z;\n\n    var leftPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(pos, scaledLeft, scratch4);\n    leftPositions[leftIndex--] = leftPos.z;\n    leftPositions[leftIndex--] = leftPos.y;\n    leftPositions[leftIndex--] = leftPos.x;\n  }\n  calculatedPositions.push(rightPositions, leftPositions);\n\n  return calculatedPositions;\n}\n\n/**\n * @private\n */\nCorridorGeometryLibrary.addAttribute = function (\n  attribute,\n  value,\n  front,\n  back\n) {\n  var x = value.x;\n  var y = value.y;\n  var z = value.z;\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(front)) {\n    attribute[front] = x;\n    attribute[front + 1] = y;\n    attribute[front + 2] = z;\n  }\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(back)) {\n    attribute[back] = z;\n    attribute[back - 1] = y;\n    attribute[back - 2] = x;\n  }\n};\n\nvar scratchForwardProjection = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\nvar scratchBackwardProjection = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n\n/**\n * @private\n */\nCorridorGeometryLibrary.computePositions = function (params) {\n  var granularity = params.granularity;\n  var positions = params.positions;\n  var ellipsoid = params.ellipsoid;\n  var width = params.width / 2;\n  var cornerType = params.cornerType;\n  var saveAttributes = params.saveAttributes;\n  var normal = cartesian1;\n  var forward = cartesian2;\n  var backward = cartesian3;\n  var left = cartesian4;\n  var cornerDirection = cartesian5;\n  var startPoint = cartesian6;\n  var previousPos = cartesian7;\n  var rightPos = cartesian8;\n  var leftPos = cartesian9;\n  var center = cartesian10;\n  var calculatedPositions = [];\n  var calculatedLefts = saveAttributes ? [] : undefined;\n  var calculatedNormals = saveAttributes ? [] : undefined;\n  var position = positions[0]; //add first point\n  var nextPosition = positions[1];\n\n  forward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(nextPosition, position, forward),\n    forward\n  );\n  normal = ellipsoid.geodeticSurfaceNormal(position, normal);\n  left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(normal, forward, left), left);\n  if (saveAttributes) {\n    calculatedLefts.push(left.x, left.y, left.z);\n    calculatedNormals.push(normal.x, normal.y, normal.z);\n  }\n  previousPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(position, previousPos);\n  position = nextPosition;\n  backward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(forward, backward);\n\n  var subdividedPositions;\n  var corners = [];\n  var i;\n  var length = positions.length;\n  for (i = 1; i < length - 1; i++) {\n    // add middle points and corners\n    normal = ellipsoid.geodeticSurfaceNormal(position, normal);\n    nextPosition = positions[i + 1];\n    forward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(nextPosition, position, forward),\n      forward\n    );\n    cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(forward, backward, cornerDirection),\n      cornerDirection\n    );\n\n    var forwardProjection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n      normal,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(forward, normal),\n      scratchForwardProjection\n    );\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(forward, forwardProjection, forwardProjection);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(forwardProjection, forwardProjection);\n\n    var backwardProjection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n      normal,\n      _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(backward, normal),\n      scratchBackwardProjection\n    );\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].subtract */ .Z.subtract(backward, backwardProjection, backwardProjection);\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(backwardProjection, backwardProjection);\n\n    var doCorner = !_Math_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n      Math.abs(_Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].dot */ .Z.dot(forwardProjection, backwardProjection)),\n      1.0,\n      _Math_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].EPSILON7 */ .Z.EPSILON7\n    );\n\n    if (doCorner) {\n      cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(\n        cornerDirection,\n        normal,\n        cornerDirection\n      );\n      cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(\n        normal,\n        cornerDirection,\n        cornerDirection\n      );\n      cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(cornerDirection, cornerDirection);\n      var scalar =\n        width /\n        Math.max(\n          0.25,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].magnitude */ .Z.magnitude(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(cornerDirection, backward, scratch1)\n          )\n        );\n      var leftIsOutside = _PolylineVolumeGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].angleIsGreaterThanPi */ .Z.angleIsGreaterThanPi(\n        forward,\n        backward,\n        position,\n        ellipsoid\n      );\n      cornerDirection = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(\n        cornerDirection,\n        scalar,\n        cornerDirection\n      );\n      if (leftIsOutside) {\n        rightPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(position, cornerDirection, rightPos);\n        center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(\n          rightPos,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width, center),\n          center\n        );\n        leftPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(\n          rightPos,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width * 2, leftPos),\n          leftPos\n        );\n        scaleArray2[0] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(previousPos, scaleArray2[0]);\n        scaleArray2[1] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(center, scaleArray2[1]);\n        subdividedPositions = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].generateArc */ .Z.generateArc({\n          positions: scaleArray2,\n          granularity: granularity,\n          ellipsoid: ellipsoid,\n        });\n        calculatedPositions = addShiftedPositions(\n          subdividedPositions,\n          left,\n          width,\n          calculatedPositions\n        );\n        if (saveAttributes) {\n          calculatedLefts.push(left.x, left.y, left.z);\n          calculatedNormals.push(normal.x, normal.y, normal.z);\n        }\n        startPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(leftPos, startPoint);\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(normal, forward, left),\n          left\n        );\n        leftPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(\n          rightPos,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width * 2, leftPos),\n          leftPos\n        );\n        previousPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(\n          rightPos,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width, previousPos),\n          previousPos\n        );\n        if (\n          cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ROUNDED */ .Z.ROUNDED ||\n          cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].BEVELED */ .Z.BEVELED\n        ) {\n          corners.push({\n            leftPositions: computeRoundCorner(\n              rightPos,\n              startPoint,\n              leftPos,\n              cornerType,\n              leftIsOutside\n            ),\n          });\n        } else {\n          corners.push({\n            leftPositions: computeMiteredCorner(\n              position,\n              _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(cornerDirection, cornerDirection),\n              leftPos,\n              leftIsOutside\n            ),\n          });\n        }\n      } else {\n        leftPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(position, cornerDirection, leftPos);\n        center = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(\n          leftPos,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width, center),\n            center\n          ),\n          center\n        );\n        rightPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(\n          leftPos,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width * 2, rightPos),\n            rightPos\n          ),\n          rightPos\n        );\n        scaleArray2[0] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(previousPos, scaleArray2[0]);\n        scaleArray2[1] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(center, scaleArray2[1]);\n        subdividedPositions = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].generateArc */ .Z.generateArc({\n          positions: scaleArray2,\n          granularity: granularity,\n          ellipsoid: ellipsoid,\n        });\n        calculatedPositions = addShiftedPositions(\n          subdividedPositions,\n          left,\n          width,\n          calculatedPositions\n        );\n        if (saveAttributes) {\n          calculatedLefts.push(left.x, left.y, left.z);\n          calculatedNormals.push(normal.x, normal.y, normal.z);\n        }\n        startPoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(rightPos, startPoint);\n        left = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].normalize */ .Z.normalize(\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].cross */ .Z.cross(normal, forward, left),\n          left\n        );\n        rightPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(\n          leftPos,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width * 2, rightPos),\n            rightPos\n          ),\n          rightPos\n        );\n        previousPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].add */ .Z.add(\n          leftPos,\n          _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(\n            _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].multiplyByScalar */ .Z.multiplyByScalar(left, width, previousPos),\n            previousPos\n          ),\n          previousPos\n        );\n        if (\n          cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ROUNDED */ .Z.ROUNDED ||\n          cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].BEVELED */ .Z.BEVELED\n        ) {\n          corners.push({\n            rightPositions: computeRoundCorner(\n              leftPos,\n              startPoint,\n              rightPos,\n              cornerType,\n              leftIsOutside\n            ),\n          });\n        } else {\n          corners.push({\n            rightPositions: computeMiteredCorner(\n              position,\n              cornerDirection,\n              rightPos,\n              leftIsOutside\n            ),\n          });\n        }\n      }\n      backward = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].negate */ .Z.negate(forward, backward);\n    }\n    position = nextPosition;\n  }\n\n  normal = ellipsoid.geodeticSurfaceNormal(position, normal);\n  scaleArray2[0] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(previousPos, scaleArray2[0]);\n  scaleArray2[1] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].clone */ .Z.clone(position, scaleArray2[1]);\n  subdividedPositions = _PolylinePipeline_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].generateArc */ .Z.generateArc({\n    positions: scaleArray2,\n    granularity: granularity,\n    ellipsoid: ellipsoid,\n  });\n  calculatedPositions = addShiftedPositions(\n    subdividedPositions,\n    left,\n    width,\n    calculatedPositions\n  );\n  if (saveAttributes) {\n    calculatedLefts.push(left.x, left.y, left.z);\n    calculatedNormals.push(normal.x, normal.y, normal.z);\n  }\n\n  var endPositions;\n  if (cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ROUNDED */ .Z.ROUNDED) {\n    endPositions = addEndCaps(calculatedPositions);\n  }\n\n  return {\n    positions: calculatedPositions,\n    corners: corners,\n    lefts: calculatedLefts,\n    normals: calculatedNormals,\n    endPositions: endPositions,\n  };\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CorridorGeometryLibrary);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///85293\n')},34364:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _arrayFill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23401);\n/* harmony import */ var _arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(32378);\n/* harmony import */ var _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48243);\n/* harmony import */ var _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60216);\n/* harmony import */ var _Check_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(66553);\n/* harmony import */ var _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84828);\n/* harmony import */ var _CornerType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(56439);\n/* harmony import */ var _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(85293);\n/* harmony import */ var _defaultValue_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(62200);\n/* harmony import */ var _defined_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(82982);\n/* harmony import */ var _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(50491);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(82408);\n/* harmony import */ var _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(13616);\n/* harmony import */ var _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(56652);\n/* harmony import */ var _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(87379);\n/* harmony import */ var _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(22832);\n/* harmony import */ var _Math_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(99417);\n/* harmony import */ var _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(78284);\n/* harmony import */ var _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(97264);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar cartesian1 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar cartesian2 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\nvar cartesian3 = new _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();\n\nfunction scaleToSurface(positions, ellipsoid) {\n  for (var i = 0; i < positions.length; i++) {\n    positions[i] = ellipsoid.scaleToGeodeticSurface(positions[i], positions[i]);\n  }\n  return positions;\n}\n\nfunction combine(computedPositions, cornerType) {\n  var wallIndices = [];\n  var positions = computedPositions.positions;\n  var corners = computedPositions.corners;\n  var endPositions = computedPositions.endPositions;\n  var attributes = new _GeometryAttributes_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z();\n  var corner;\n  var leftCount = 0;\n  var rightCount = 0;\n  var i;\n  var indicesLength = 0;\n  var length;\n  for (i = 0; i < positions.length; i += 2) {\n    length = positions[i].length - 3;\n    leftCount += length; //subtracting 3 to account for duplicate points at corners\n    indicesLength += (length / 3) * 4;\n    rightCount += positions[i + 1].length - 3;\n  }\n  leftCount += 3; //add back count for end positions\n  rightCount += 3;\n  for (i = 0; i < corners.length; i++) {\n    corner = corners[i];\n    var leftSide = corners[i].leftPositions;\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(leftSide)) {\n      length = leftSide.length;\n      leftCount += length;\n      indicesLength += (length / 3) * 2;\n    } else {\n      length = corners[i].rightPositions.length;\n      rightCount += length;\n      indicesLength += (length / 3) * 2;\n    }\n  }\n\n  var addEndPositions = (0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(endPositions);\n  var endPositionLength;\n  if (addEndPositions) {\n    endPositionLength = endPositions[0].length - 3;\n    leftCount += endPositionLength;\n    rightCount += endPositionLength;\n    endPositionLength /= 3;\n    indicesLength += endPositionLength * 4;\n  }\n  var size = leftCount + rightCount;\n  var finalPositions = new Float64Array(size);\n  var front = 0;\n  var back = size - 1;\n  var UL, LL, UR, LR;\n  var rightPos, leftPos;\n  var halfLength = endPositionLength / 2;\n\n  var indices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].createTypedArray */ .Z.createTypedArray(size / 3, indicesLength + 4);\n  var index = 0;\n\n  indices[index++] = front / 3;\n  indices[index++] = (back - 2) / 3;\n  if (addEndPositions) {\n    // add rounded end\n    wallIndices.push(front / 3);\n    leftPos = cartesian1;\n    rightPos = cartesian2;\n    var firstEndPositions = endPositions[0];\n    for (i = 0; i < halfLength; i++) {\n      leftPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        firstEndPositions,\n        (halfLength - 1 - i) * 3,\n        leftPos\n      );\n      rightPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        firstEndPositions,\n        (halfLength + i) * 3,\n        rightPos\n      );\n      _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].addAttribute */ .Z.addAttribute(finalPositions, rightPos, front);\n      _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].addAttribute */ .Z.addAttribute(\n        finalPositions,\n        leftPos,\n        undefined,\n        back\n      );\n\n      LL = front / 3;\n      LR = LL + 1;\n      UL = (back - 2) / 3;\n      UR = UL - 1;\n      indices[index++] = UL;\n      indices[index++] = UR;\n      indices[index++] = LL;\n      indices[index++] = LR;\n\n      front += 3;\n      back -= 3;\n    }\n  }\n\n  var posIndex = 0;\n  var rightEdge = positions[posIndex++]; //add first two edges\n  var leftEdge = positions[posIndex++];\n  finalPositions.set(rightEdge, front);\n  finalPositions.set(leftEdge, back - leftEdge.length + 1);\n\n  length = leftEdge.length - 3;\n  wallIndices.push(front / 3, (back - 2) / 3);\n  for (i = 0; i < length; i += 3) {\n    LL = front / 3;\n    LR = LL + 1;\n    UL = (back - 2) / 3;\n    UR = UL - 1;\n    indices[index++] = UL;\n    indices[index++] = UR;\n    indices[index++] = LL;\n    indices[index++] = LR;\n\n    front += 3;\n    back -= 3;\n  }\n\n  for (i = 0; i < corners.length; i++) {\n    var j;\n    corner = corners[i];\n    var l = corner.leftPositions;\n    var r = corner.rightPositions;\n    var start;\n    var outsidePoint = cartesian3;\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(l)) {\n      back -= 3;\n      start = UR;\n      wallIndices.push(LR);\n      for (j = 0; j < l.length / 3; j++) {\n        outsidePoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(l, j * 3, outsidePoint);\n        indices[index++] = start - j - 1;\n        indices[index++] = start - j;\n        _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].addAttribute */ .Z.addAttribute(\n          finalPositions,\n          outsidePoint,\n          undefined,\n          back\n        );\n        back -= 3;\n      }\n      wallIndices.push(start - Math.floor(l.length / 6));\n      if (cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].BEVELED */ .Z.BEVELED) {\n        wallIndices.push((back - 2) / 3 + 1);\n      }\n      front += 3;\n    } else {\n      front += 3;\n      start = LR;\n      wallIndices.push(UR);\n      for (j = 0; j < r.length / 3; j++) {\n        outsidePoint = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(r, j * 3, outsidePoint);\n        indices[index++] = start + j;\n        indices[index++] = start + j + 1;\n        _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].addAttribute */ .Z.addAttribute(\n          finalPositions,\n          outsidePoint,\n          front\n        );\n        front += 3;\n      }\n      wallIndices.push(start + Math.floor(r.length / 6));\n      if (cornerType === _CornerType_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].BEVELED */ .Z.BEVELED) {\n        wallIndices.push(front / 3 - 1);\n      }\n      back -= 3;\n    }\n    rightEdge = positions[posIndex++];\n    leftEdge = positions[posIndex++];\n    rightEdge.splice(0, 3); //remove duplicate points added by corner\n    leftEdge.splice(leftEdge.length - 3, 3);\n    finalPositions.set(rightEdge, front);\n    finalPositions.set(leftEdge, back - leftEdge.length + 1);\n    length = leftEdge.length - 3;\n\n    for (j = 0; j < leftEdge.length; j += 3) {\n      LR = front / 3;\n      LL = LR - 1;\n      UR = (back - 2) / 3;\n      UL = UR + 1;\n      indices[index++] = UL;\n      indices[index++] = UR;\n      indices[index++] = LL;\n      indices[index++] = LR;\n      front += 3;\n      back -= 3;\n    }\n    front -= 3;\n    back += 3;\n    wallIndices.push(front / 3, (back - 2) / 3);\n  }\n\n  if (addEndPositions) {\n    // add rounded end\n    front += 3;\n    back -= 3;\n    leftPos = cartesian1;\n    rightPos = cartesian2;\n    var lastEndPositions = endPositions[1];\n    for (i = 0; i < halfLength; i++) {\n      leftPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(\n        lastEndPositions,\n        (endPositionLength - i - 1) * 3,\n        leftPos\n      );\n      rightPos = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].fromArray */ .Z.fromArray(lastEndPositions, i * 3, rightPos);\n      _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].addAttribute */ .Z.addAttribute(\n        finalPositions,\n        leftPos,\n        undefined,\n        back\n      );\n      _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].addAttribute */ .Z.addAttribute(finalPositions, rightPos, front);\n\n      LR = front / 3;\n      LL = LR - 1;\n      UR = (back - 2) / 3;\n      UL = UR + 1;\n      indices[index++] = UL;\n      indices[index++] = UR;\n      indices[index++] = LL;\n      indices[index++] = LR;\n\n      front += 3;\n      back -= 3;\n    }\n\n    wallIndices.push(front / 3);\n  } else {\n    wallIndices.push(front / 3, (back - 2) / 3);\n  }\n  indices[index++] = front / 3;\n  indices[index++] = (back - 2) / 3;\n\n  attributes.position = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n    componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].DOUBLE */ .Z.DOUBLE,\n    componentsPerAttribute: 3,\n    values: finalPositions,\n  });\n\n  return {\n    attributes: attributes,\n    indices: indices,\n    wallIndices: wallIndices,\n  };\n}\n\nfunction computePositionsExtruded(params) {\n  var ellipsoid = params.ellipsoid;\n  var computedPositions = _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].computePositions */ .Z.computePositions(params);\n  var attr = combine(computedPositions, params.cornerType);\n  var wallIndices = attr.wallIndices;\n  var height = params.height;\n  var extrudedHeight = params.extrudedHeight;\n  var attributes = attr.attributes;\n  var indices = attr.indices;\n  var positions = attributes.position.values;\n  var length = positions.length;\n  var extrudedPositions = new Float64Array(length);\n  extrudedPositions.set(positions);\n  var newPositions = new Float64Array(length * 2);\n\n  positions = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n    positions,\n    height,\n    ellipsoid\n  );\n  extrudedPositions = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n    extrudedPositions,\n    extrudedHeight,\n    ellipsoid\n  );\n  newPositions.set(positions);\n  newPositions.set(extrudedPositions, length);\n  attributes.position.values = newPositions;\n\n  length /= 3;\n  if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(params.offsetAttribute)) {\n    var applyOffset = new Uint8Array(length * 2);\n    if (params.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TOP */ .Z.TOP) {\n      applyOffset = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, 1, 0, length);\n    } else {\n      var applyOffsetValue =\n        params.offsetAttribute === _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].NONE */ .Z.NONE ? 0 : 1;\n      applyOffset = (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, applyOffsetValue);\n    }\n\n    attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n      componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n      componentsPerAttribute: 1,\n      values: applyOffset,\n    });\n  }\n\n  var i;\n  var iLength = indices.length;\n  var newIndices = _IndexDatatype_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].createTypedArray */ .Z.createTypedArray(\n    newPositions.length / 3,\n    (iLength + wallIndices.length) * 2\n  );\n  newIndices.set(indices);\n  var index = iLength;\n  for (i = 0; i < iLength; i += 2) {\n    // bottom indices\n    var v0 = indices[i];\n    var v1 = indices[i + 1];\n    newIndices[index++] = v0 + length;\n    newIndices[index++] = v1 + length;\n  }\n\n  var UL, LL;\n  for (i = 0; i < wallIndices.length; i++) {\n    //wall indices\n    UL = wallIndices[i];\n    LL = UL + length;\n    newIndices[index++] = UL;\n    newIndices[index++] = LL;\n  }\n\n  return {\n    attributes: attributes,\n    indices: newIndices,\n  };\n}\n\n/**\n * A description of a corridor outline.\n *\n * @alias CorridorOutlineGeometry\n * @constructor\n *\n * @param {Object} options Object with the following properties:\n * @param {Cartesian3[]} options.positions An array of positions that define the center of the corridor outline.\n * @param {Number} options.width The distance between the edges of the corridor outline.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid to be used as a reference.\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n * @param {Number} [options.height=0] The distance in meters between the positions and the ellipsoid surface.\n * @param {Number} [options.extrudedHeight] The distance in meters between the extruded face and the ellipsoid surface.\n * @param {CornerType} [options.cornerType=CornerType.ROUNDED] Determines the style of the corners.\n *\n * @see CorridorOutlineGeometry.createGeometry\n *\n * @example\n * var corridor = new Cesium.CorridorOutlineGeometry({\n *   positions : Cesium.Cartesian3.fromDegreesArray([-72.0, 40.0, -70.0, 35.0]),\n *   width : 100000\n * });\n */\nfunction CorridorOutlineGeometry(options) {\n  options = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options, _defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n  var positions = options.positions;\n  var width = options.width;\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.object */ .Z.typeOf.object("options.positions", positions);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.number */ .Z.typeOf.number("options.width", width);\n  //>>includeEnd(\'debug\');\n\n  var height = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.height, 0.0);\n  var extrudedHeight = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.extrudedHeight, height);\n\n  this._positions = positions;\n  this._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(\n    (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.ellipsoid, _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].WGS84 */ .Z.WGS84)\n  );\n  this._width = width;\n  this._height = Math.max(height, extrudedHeight);\n  this._extrudedHeight = Math.min(height, extrudedHeight);\n  this._cornerType = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(options.cornerType, _CornerType_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].ROUNDED */ .Z.ROUNDED);\n  this._granularity = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(\n    options.granularity,\n    _Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].RADIANS_PER_DEGREE */ .Z.RADIANS_PER_DEGREE\n  );\n  this._offsetAttribute = options.offsetAttribute;\n  this._workerName = "createCorridorOutlineGeometry";\n\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  this.packedLength =\n    1 + positions.length * _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength + _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength + 6;\n}\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {CorridorOutlineGeometry} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nCorridorOutlineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.object */ .Z.typeOf.object("value", value);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.object */ .Z.typeOf.object("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var positions = value._positions;\n  var length = positions.length;\n  array[startingIndex++] = length;\n\n  for (var i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].pack */ .Z.pack(positions[i], array, startingIndex);\n  }\n\n  _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].pack */ .Z.pack(value._ellipsoid, array, startingIndex);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength;\n\n  array[startingIndex++] = value._width;\n  array[startingIndex++] = value._height;\n  array[startingIndex++] = value._extrudedHeight;\n  array[startingIndex++] = value._cornerType;\n  array[startingIndex++] = value._granularity;\n  array[startingIndex] = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(value._offsetAttribute, -1);\n\n  return array;\n};\n\nvar scratchEllipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(_Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].UNIT_SPHERE */ .Z.UNIT_SPHERE);\nvar scratchOptions = {\n  positions: undefined,\n  ellipsoid: scratchEllipsoid,\n  width: undefined,\n  height: undefined,\n  extrudedHeight: undefined,\n  cornerType: undefined,\n  granularity: undefined,\n  offsetAttribute: undefined,\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {CorridorOutlineGeometry} [result] The object into which to store the result.\n * @returns {CorridorOutlineGeometry} The modified result parameter or a new CorridorOutlineGeometry instance if one was not provided.\n */\nCorridorOutlineGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  _Check_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].typeOf.object */ .Z.typeOf.object("array", array);\n  //>>includeEnd(\'debug\');\n\n  startingIndex = (0,_defaultValue_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(startingIndex, 0);\n\n  var length = array[startingIndex++];\n  var positions = new Array(length);\n\n  for (var i = 0; i < length; ++i, startingIndex += _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].packedLength */ .Z.packedLength) {\n    positions[i] = _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].unpack */ .Z.unpack(array, startingIndex);\n  }\n\n  var ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].unpack */ .Z.unpack(array, startingIndex, scratchEllipsoid);\n  startingIndex += _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].packedLength */ .Z.packedLength;\n\n  var width = array[startingIndex++];\n  var height = array[startingIndex++];\n  var extrudedHeight = array[startingIndex++];\n  var cornerType = array[startingIndex++];\n  var granularity = array[startingIndex++];\n  var offsetAttribute = array[startingIndex];\n\n  if (!(0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(result)) {\n    scratchOptions.positions = positions;\n    scratchOptions.width = width;\n    scratchOptions.height = height;\n    scratchOptions.extrudedHeight = extrudedHeight;\n    scratchOptions.cornerType = cornerType;\n    scratchOptions.granularity = granularity;\n    scratchOptions.offsetAttribute =\n      offsetAttribute === -1 ? undefined : offsetAttribute;\n    return new CorridorOutlineGeometry(scratchOptions);\n  }\n\n  result._positions = positions;\n  result._ellipsoid = _Ellipsoid_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].clone */ .Z.clone(ellipsoid, result._ellipsoid);\n  result._width = width;\n  result._height = height;\n  result._extrudedHeight = extrudedHeight;\n  result._cornerType = cornerType;\n  result._granularity = granularity;\n  result._offsetAttribute =\n    offsetAttribute === -1 ? undefined : offsetAttribute;\n\n  return result;\n};\n\n/**\n * Computes the geometric representation of a corridor, including its vertices, indices, and a bounding sphere.\n *\n * @param {CorridorOutlineGeometry} corridorOutlineGeometry A description of the corridor.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nCorridorOutlineGeometry.createGeometry = function (corridorOutlineGeometry) {\n  var positions = corridorOutlineGeometry._positions;\n  var width = corridorOutlineGeometry._width;\n  var ellipsoid = corridorOutlineGeometry._ellipsoid;\n\n  positions = scaleToSurface(positions, ellipsoid);\n  var cleanPositions = (0,_arrayRemoveDuplicates_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(\n    positions,\n    _Cartesian3_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon\n  );\n\n  if (cleanPositions.length < 2 || width <= 0) {\n    return;\n  }\n\n  var height = corridorOutlineGeometry._height;\n  var extrudedHeight = corridorOutlineGeometry._extrudedHeight;\n  var extrude = !_Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].equalsEpsilon */ .Z.equalsEpsilon(\n    height,\n    extrudedHeight,\n    0,\n    _Math_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"].EPSILON2 */ .Z.EPSILON2\n  );\n\n  var params = {\n    ellipsoid: ellipsoid,\n    positions: cleanPositions,\n    width: width,\n    cornerType: corridorOutlineGeometry._cornerType,\n    granularity: corridorOutlineGeometry._granularity,\n    saveAttributes: false,\n  };\n  var attr;\n  if (extrude) {\n    params.height = height;\n    params.extrudedHeight = extrudedHeight;\n    params.offsetAttribute = corridorOutlineGeometry._offsetAttribute;\n    attr = computePositionsExtruded(params);\n  } else {\n    var computedPositions = _CorridorGeometryLibrary_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].computePositions */ .Z.computePositions(params);\n    attr = combine(computedPositions, params.cornerType);\n    attr.attributes.position.values = _PolygonPipeline_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].scaleToGeodeticHeight */ .Z.scaleToGeodeticHeight(\n      attr.attributes.position.values,\n      height,\n      ellipsoid\n    );\n\n    if ((0,_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(corridorOutlineGeometry._offsetAttribute)) {\n      var length = attr.attributes.position.values.length;\n      var applyOffset = new Uint8Array(length / 3);\n      var offsetValue =\n        corridorOutlineGeometry._offsetAttribute ===\n        _GeometryOffsetAttribute_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].NONE */ .Z.NONE\n          ? 0\n          : 1;\n      (0,_arrayFill_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(applyOffset, offsetValue);\n      attr.attributes.applyOffset = new _GeometryAttribute_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z({\n        componentDatatype: _ComponentDatatype_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"].UNSIGNED_BYTE */ .Z.UNSIGNED_BYTE,\n        componentsPerAttribute: 1,\n        values: applyOffset,\n      });\n    }\n  }\n  var attributes = attr.attributes;\n  var boundingSphere = _BoundingSphere_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].fromVertices */ .Z.fromVertices(\n    attributes.position.values,\n    undefined,\n    3\n  );\n\n  return new _Geometry_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z({\n    attributes: attributes,\n    indices: attr.indices,\n    primitiveType: _PrimitiveType_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"].LINES */ .Z.LINES,\n    boundingSphere: boundingSphere,\n    offsetAttribute: corridorOutlineGeometry._offsetAttribute,\n  });\n};\n/* harmony default export */ __webpack_exports__["Z"] = (CorridorOutlineGeometry);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///34364\n')}}]);