"use strict";(self["webpackChunkvue3_webpack5"]=self["webpackChunkvue3_webpack5"]||[]).push([[7090],{73705:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(60216);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(82982);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12572);\n/* harmony import */ var _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(47861);\n/* harmony import */ var _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(15720);\n/* harmony import */ var _Billboard_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(80349);\n/* harmony import */ var _HeightReference_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(4260);\n/* harmony import */ var _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(62919);\n/* harmony import */ var _LabelStyle_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(81208);\n/* harmony import */ var _SDFSettings_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(36191);\n/* harmony import */ var _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(60473);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar fontInfoCache = {};\nvar fontInfoCacheLength = 0;\nvar fontInfoCacheMaxSize = 256;\nvar defaultBackgroundColor = new _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z(0.165, 0.165, 0.165, 0.8);\nvar defaultBackgroundPadding = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(7, 5);\n\nvar textTypes = Object.freeze({\n  LTR: 0,\n  RTL: 1,\n  WEAK: 2,\n  BRACKETS: 3,\n});\n\nfunction rebindAllGlyphs(label) {\n  if (!label._rebindAllGlyphs && !label._repositionAllGlyphs) {\n    // only push label if it\'s not already been marked dirty\n    label._labelCollection._labelsToUpdate.push(label);\n  }\n  label._rebindAllGlyphs = true;\n}\n\nfunction repositionAllGlyphs(label) {\n  if (!label._rebindAllGlyphs && !label._repositionAllGlyphs) {\n    // only push label if it\'s not already been marked dirty\n    label._labelCollection._labelsToUpdate.push(label);\n  }\n  label._repositionAllGlyphs = true;\n}\n\nfunction getCSSValue(element, property) {\n  return document.defaultView\n    .getComputedStyle(element, null)\n    .getPropertyValue(property);\n}\n\nfunction parseFont(label) {\n  var fontInfo = fontInfoCache[label._font];\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(fontInfo)) {\n    var div = document.createElement("div");\n    div.style.position = "absolute";\n    div.style.opacity = 0;\n    div.style.font = label._font;\n    document.body.appendChild(div);\n\n    var lineHeight = parseFloat(getCSSValue(div, "line-height"));\n    if (isNaN(lineHeight)) {\n      // line-height isn\'t a number, i.e. \'normal\'; apply default line-spacing\n      lineHeight = undefined;\n    }\n\n    fontInfo = {\n      family: getCSSValue(div, "font-family"),\n      size: getCSSValue(div, "font-size").replace("px", ""),\n      style: getCSSValue(div, "font-style"),\n      weight: getCSSValue(div, "font-weight"),\n      lineHeight: lineHeight,\n    };\n\n    document.body.removeChild(div);\n    if (fontInfoCacheLength < fontInfoCacheMaxSize) {\n      fontInfoCache[label._font] = fontInfo;\n      fontInfoCacheLength++;\n    }\n  }\n  label._fontFamily = fontInfo.family;\n  label._fontSize = fontInfo.size;\n  label._fontStyle = fontInfo.style;\n  label._fontWeight = fontInfo.weight;\n  label._lineHeight = fontInfo.lineHeight;\n}\n\n/**\n * A Label draws viewport-aligned text positioned in the 3D scene.  This constructor\n * should not be used directly, instead create labels by calling {@link LabelCollection#add}.\n *\n * @alias Label\n * @internalConstructor\n * @class\n *\n * @exception {DeveloperError} translucencyByDistance.far must be greater than translucencyByDistance.near\n * @exception {DeveloperError} pixelOffsetScaleByDistance.far must be greater than pixelOffsetScaleByDistance.near\n * @exception {DeveloperError} distanceDisplayCondition.far must be greater than distanceDisplayCondition.near\n *\n * @see LabelCollection\n * @see LabelCollection#add\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Labels.html|Cesium Sandcastle Labels Demo}\n */\nfunction Label(options, labelCollection) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(options.disableDepthTestDistance) &&\n    options.disableDepthTestDistance < 0.0\n  ) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n      "disableDepthTestDistance must be greater than 0.0."\n    );\n  }\n  //>>includeEnd(\'debug\');\n\n  var translucencyByDistance = options.translucencyByDistance;\n  var pixelOffsetScaleByDistance = options.pixelOffsetScaleByDistance;\n  var scaleByDistance = options.scaleByDistance;\n  var distanceDisplayCondition = options.distanceDisplayCondition;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(translucencyByDistance)) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (translucencyByDistance.far <= translucencyByDistance.near) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n        "translucencyByDistance.far must be greater than translucencyByDistance.near."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    translucencyByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(translucencyByDistance);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(pixelOffsetScaleByDistance)) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (pixelOffsetScaleByDistance.far <= pixelOffsetScaleByDistance.near) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n        "pixelOffsetScaleByDistance.far must be greater than pixelOffsetScaleByDistance.near."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    pixelOffsetScaleByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(\n      pixelOffsetScaleByDistance\n    );\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(scaleByDistance)) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (scaleByDistance.far <= scaleByDistance.near) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n        "scaleByDistance.far must be greater than scaleByDistance.near."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    scaleByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(scaleByDistance);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(distanceDisplayCondition)) {\n    //>>includeStart(\'debug\', pragmas.debug);\n    if (distanceDisplayCondition.far <= distanceDisplayCondition.near) {\n      throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n        "distanceDisplayCondition.far must be greater than distanceDisplayCondition.near."\n      );\n    }\n    //>>includeEnd(\'debug\');\n    distanceDisplayCondition = _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(\n      distanceDisplayCondition\n    );\n  }\n\n  this._renderedText = undefined;\n  this._text = undefined;\n  this._show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.show, true);\n  this._font = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.font, "30px sans-serif");\n  this._fillColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone((0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.fillColor, _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].WHITE */ .Z.WHITE));\n  this._outlineColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.outlineColor, _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].BLACK */ .Z.BLACK)\n  );\n  this._outlineWidth = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.outlineWidth, 1.0);\n  this._showBackground = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.showBackground, false);\n  this._backgroundColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.backgroundColor, defaultBackgroundColor)\n  );\n  this._backgroundPadding = _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.backgroundPadding, defaultBackgroundPadding)\n  );\n  this._style = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.style, _LabelStyle_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].FILL */ .Z.FILL);\n  this._verticalOrigin = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    options.verticalOrigin,\n    _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].BASELINE */ .Z.BASELINE\n  );\n  this._horizontalOrigin = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    options.horizontalOrigin,\n    _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].LEFT */ .Z.LEFT\n  );\n  this._pixelOffset = _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.pixelOffset, _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ZERO */ .Z.ZERO)\n  );\n  this._eyeOffset = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.eyeOffset, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO)\n  );\n  this._position = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.position, _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].ZERO */ .Z.ZERO)\n  );\n  this._scale = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.scale, 1.0);\n  this._id = options.id;\n  this._translucencyByDistance = translucencyByDistance;\n  this._pixelOffsetScaleByDistance = pixelOffsetScaleByDistance;\n  this._scaleByDistance = scaleByDistance;\n  this._heightReference = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(\n    options.heightReference,\n    _HeightReference_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].NONE */ .Z.NONE\n  );\n  this._distanceDisplayCondition = distanceDisplayCondition;\n  this._disableDepthTestDistance = options.disableDepthTestDistance;\n\n  this._labelCollection = labelCollection;\n  this._glyphs = [];\n  this._backgroundBillboard = undefined;\n  this._batchIndex = undefined; // Used only by Vector3DTilePoints and BillboardCollection\n\n  this._rebindAllGlyphs = true;\n  this._repositionAllGlyphs = true;\n\n  this._actualClampedPosition = undefined;\n  this._removeCallbackFunc = undefined;\n  this._mode = undefined;\n\n  this._clusterShow = true;\n\n  this.text = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(options.text, "");\n\n  this._relativeSize = 1.0;\n\n  parseFont(this);\n\n  this._updateClamping();\n}\n\nObject.defineProperties(Label.prototype, {\n  /**\n   * Determines if this label will be shown.  Use this to hide or show a label, instead\n   * of removing it and re-adding it to the collection.\n   * @memberof Label.prototype\n   * @type {Boolean}\n   * @default true\n   */\n  show: {\n    get: function () {\n      return this._show;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._show !== value) {\n        this._show = value;\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var billboard = glyphs[i].billboard;\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(billboard)) {\n            billboard.show = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.show = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the Cartesian position of this label.\n   * @memberof Label.prototype\n   * @type {Cartesian3}\n   */\n  position: {\n    get: function () {\n      return this._position;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var position = this._position;\n      if (!_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(position, value)) {\n        _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(value, position);\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var billboard = glyphs[i].billboard;\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(billboard)) {\n            billboard.position = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.position = value;\n        }\n\n        this._updateClamping();\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the height reference of this billboard.\n   * @memberof Label.prototype\n   * @type {HeightReference}\n   * @default HeightReference.NONE\n   */\n  heightReference: {\n    get: function () {\n      return this._heightReference;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (value !== this._heightReference) {\n        this._heightReference = value;\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var billboard = glyphs[i].billboard;\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(billboard)) {\n            billboard.heightReference = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.heightReference = value;\n        }\n\n        repositionAllGlyphs(this);\n\n        this._updateClamping();\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the text of this label.\n   * @memberof Label.prototype\n   * @type {String}\n   */\n  text: {\n    get: function () {\n      return this._text;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._text !== value) {\n        this._text = value;\n\n        // Strip soft-hyphen (auto-wrap) characters from input string\n        var renderedValue = value.replace(/\\u00ad/g, "");\n        this._renderedText = Label.enableRightToLeftDetection\n          ? reverseRtl(renderedValue)\n          : renderedValue;\n        rebindAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the font used to draw this label. Fonts are specified using the same syntax as the CSS \'font\' property.\n   * @memberof Label.prototype\n   * @type {String}\n   * @default \'30px sans-serif\'\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles|HTML canvas 2D context text styles}\n   */\n  font: {\n    get: function () {\n      return this._font;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._font !== value) {\n        this._font = value;\n        rebindAllGlyphs(this);\n        parseFont(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the fill color of this label.\n   * @memberof Label.prototype\n   * @type {Color}\n   * @default Color.WHITE\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#fill-and-stroke-styles|HTML canvas 2D context fill and stroke styles}\n   */\n  fillColor: {\n    get: function () {\n      return this._fillColor;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var fillColor = this._fillColor;\n      if (!_Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(fillColor, value)) {\n        _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(value, fillColor);\n        rebindAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the outline color of this label.\n   * @memberof Label.prototype\n   * @type {Color}\n   * @default Color.BLACK\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#fill-and-stroke-styles|HTML canvas 2D context fill and stroke styles}\n   */\n  outlineColor: {\n    get: function () {\n      return this._outlineColor;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var outlineColor = this._outlineColor;\n      if (!_Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(outlineColor, value)) {\n        _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(value, outlineColor);\n        rebindAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the outline width of this label.\n   * @memberof Label.prototype\n   * @type {Number}\n   * @default 1.0\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#fill-and-stroke-styles|HTML canvas 2D context fill and stroke styles}\n   */\n  outlineWidth: {\n    get: function () {\n      return this._outlineWidth;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._outlineWidth !== value) {\n        this._outlineWidth = value;\n        rebindAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Determines if a background behind this label will be shown.\n   * @memberof Label.prototype\n   * @default false\n   * @type {Boolean}\n   */\n  showBackground: {\n    get: function () {\n      return this._showBackground;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._showBackground !== value) {\n        this._showBackground = value;\n        rebindAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the background color of this label.\n   * @memberof Label.prototype\n   * @type {Color}\n   * @default new Color(0.165, 0.165, 0.165, 0.8)\n   */\n  backgroundColor: {\n    get: function () {\n      return this._backgroundColor;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var backgroundColor = this._backgroundColor;\n      if (!_Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(backgroundColor, value)) {\n        _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].clone */ .Z.clone(value, backgroundColor);\n\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.color = backgroundColor;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the background padding, in pixels, of this label.  The <code>x</code> value\n   * controls horizontal padding, and the <code>y</code> value controls vertical padding.\n   * @memberof Label.prototype\n   * @type {Cartesian2}\n   * @default new Cartesian2(7, 5)\n   */\n  backgroundPadding: {\n    get: function () {\n      return this._backgroundPadding;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var backgroundPadding = this._backgroundPadding;\n      if (!_Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equals */ .Z.equals(backgroundPadding, value)) {\n        _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(value, backgroundPadding);\n        repositionAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the style of this label.\n   * @memberof Label.prototype\n   * @type {LabelStyle}\n   * @default LabelStyle.FILL\n   */\n  style: {\n    get: function () {\n      return this._style;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._style !== value) {\n        this._style = value;\n        rebindAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the pixel offset in screen space from the origin of this label.  This is commonly used\n   * to align multiple labels and billboards at the same position, e.g., an image and text.  The\n   * screen space origin is the top, left corner of the canvas; <code>x</code> increases from\n   * left to right, and <code>y</code> increases from top to bottom.\n   * <br /><br />\n   * <div align=\'center\'>\n   * <table border=\'0\' cellpadding=\'5\'><tr>\n   * <td align=\'center\'><code>default</code><br/><img src=\'Images/Label.setPixelOffset.default.png\' width=\'250\' height=\'188\' /></td>\n   * <td align=\'center\'><code>l.pixeloffset = new Cartesian2(25, 75);</code><br/><img src=\'Images/Label.setPixelOffset.x50y-25.png\' width=\'250\' height=\'188\' /></td>\n   * </tr></table>\n   * The label\'s origin is indicated by the yellow point.\n   * </div>\n   * @memberof Label.prototype\n   * @type {Cartesian2}\n   * @default Cartesian2.ZERO\n   */\n  pixelOffset: {\n    get: function () {\n      return this._pixelOffset;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var pixelOffset = this._pixelOffset;\n      if (!_Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equals */ .Z.equals(pixelOffset, value)) {\n        _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(value, pixelOffset);\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.pixelOffset = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.pixelOffset = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets near and far translucency properties of a Label based on the Label\'s distance from the camera.\n   * A label\'s translucency will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label\'s translucency remains clamped to the nearest bound.  If undefined,\n   * translucencyByDistance will be disabled.\n   * @memberof Label.prototype\n   * @type {NearFarScalar}\n   *\n   * @example\n   * // Example 1.\n   * // Set a label\'s translucencyByDistance to 1.0 when the\n   * // camera is 1500 meters from the label and disappear as\n   * // the camera distance approaches 8.0e6 meters.\n   * text.translucencyByDistance = new Cesium.NearFarScalar(1.5e2, 1.0, 8.0e6, 0.0);\n   *\n   * @example\n   * // Example 2.\n   * // disable translucency by distance\n   * text.translucencyByDistance = undefined;\n   */\n  translucencyByDistance: {\n    get: function () {\n      return this._translucencyByDistance;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value) && value.far <= value.near) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n          "far distance must be greater than near distance."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      var translucencyByDistance = this._translucencyByDistance;\n      if (!_Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(translucencyByDistance, value)) {\n        this._translucencyByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(\n          value,\n          translucencyByDistance\n        );\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.translucencyByDistance = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.translucencyByDistance = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets near and far pixel offset scaling properties of a Label based on the Label\'s distance from the camera.\n   * A label\'s pixel offset will be scaled between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label\'s pixel offset scaling remains clamped to the nearest bound.  If undefined,\n   * pixelOffsetScaleByDistance will be disabled.\n   * @memberof Label.prototype\n   * @type {NearFarScalar}\n   *\n   * @example\n   * // Example 1.\n   * // Set a label\'s pixel offset scale to 0.0 when the\n   * // camera is 1500 meters from the label and scale pixel offset to 10.0 pixels\n   * // in the y direction the camera distance approaches 8.0e6 meters.\n   * text.pixelOffset = new Cesium.Cartesian2(0.0, 1.0);\n   * text.pixelOffsetScaleByDistance = new Cesium.NearFarScalar(1.5e2, 0.0, 8.0e6, 10.0);\n   *\n   * @example\n   * // Example 2.\n   * // disable pixel offset by distance\n   * text.pixelOffsetScaleByDistance = undefined;\n   */\n  pixelOffsetScaleByDistance: {\n    get: function () {\n      return this._pixelOffsetScaleByDistance;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value) && value.far <= value.near) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n          "far distance must be greater than near distance."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      var pixelOffsetScaleByDistance = this._pixelOffsetScaleByDistance;\n      if (!_Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(pixelOffsetScaleByDistance, value)) {\n        this._pixelOffsetScaleByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(\n          value,\n          pixelOffsetScaleByDistance\n        );\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.pixelOffsetScaleByDistance = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.pixelOffsetScaleByDistance = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets near and far scaling properties of a Label based on the label\'s distance from the camera.\n   * A label\'s scale will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label\'s scale remains clamped to the nearest bound.  If undefined,\n   * scaleByDistance will be disabled.\n   * @memberof Label.prototype\n   * @type {NearFarScalar}\n   *\n   * @example\n   * // Example 1.\n   * // Set a label\'s scaleByDistance to scale by 1.5 when the\n   * // camera is 1500 meters from the label and disappear as\n   * // the camera distance approaches 8.0e6 meters.\n   * label.scaleByDistance = new Cesium.NearFarScalar(1.5e2, 1.5, 8.0e6, 0.0);\n   *\n   * @example\n   * // Example 2.\n   * // disable scaling by distance\n   * label.scaleByDistance = undefined;\n   */\n  scaleByDistance: {\n    get: function () {\n      return this._scaleByDistance;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value) && value.far <= value.near) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n          "far distance must be greater than near distance."\n        );\n      }\n      //>>includeEnd(\'debug\');\n\n      var scaleByDistance = this._scaleByDistance;\n      if (!_Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(scaleByDistance, value)) {\n        this._scaleByDistance = _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].clone */ .Z.clone(value, scaleByDistance);\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.scaleByDistance = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.scaleByDistance = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets and sets the 3D Cartesian offset applied to this label in eye coordinates.  Eye coordinates is a left-handed\n   * coordinate system, where <code>x</code> points towards the viewer\'s right, <code>y</code> points up, and\n   * <code>z</code> points into the screen.  Eye coordinates use the same scale as world and model coordinates,\n   * which is typically meters.\n   * <br /><br />\n   * An eye offset is commonly used to arrange multiple label or objects at the same position, e.g., to\n   * arrange a label above its corresponding 3D model.\n   * <br /><br />\n   * Below, the label is positioned at the center of the Earth but an eye offset makes it always\n   * appear on top of the Earth regardless of the viewer\'s or Earth\'s orientation.\n   * <br /><br />\n   * <div align=\'center\'>\n   * <table border=\'0\' cellpadding=\'5\'><tr>\n   * <td align=\'center\'><img src=\'Images/Billboard.setEyeOffset.one.png\' width=\'250\' height=\'188\' /></td>\n   * <td align=\'center\'><img src=\'Images/Billboard.setEyeOffset.two.png\' width=\'250\' height=\'188\' /></td>\n   * </tr></table>\n   * <code>l.eyeOffset = new Cartesian3(0.0, 8000000.0, 0.0);</code><br /><br />\n   * </div>\n   * @memberof Label.prototype\n   * @type {Cartesian3}\n   * @default Cartesian3.ZERO\n   */\n  eyeOffset: {\n    get: function () {\n      return this._eyeOffset;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      var eyeOffset = this._eyeOffset;\n      if (!_Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(eyeOffset, value)) {\n        _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(value, eyeOffset);\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.eyeOffset = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.eyeOffset = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the horizontal origin of this label, which determines if the label is drawn\n   * to the left, center, or right of its anchor position.\n   * <br /><br />\n   * <div align=\'center\'>\n   * <img src=\'Images/Billboard.setHorizontalOrigin.png\' width=\'648\' height=\'196\' /><br />\n   * </div>\n   * @memberof Label.prototype\n   * @type {HorizontalOrigin}\n   * @default HorizontalOrigin.LEFT\n   * @example\n   * // Use a top, right origin\n   * l.horizontalOrigin = Cesium.HorizontalOrigin.RIGHT;\n   * l.verticalOrigin = Cesium.VerticalOrigin.TOP;\n   */\n  horizontalOrigin: {\n    get: function () {\n      return this._horizontalOrigin;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._horizontalOrigin !== value) {\n        this._horizontalOrigin = value;\n        repositionAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the vertical origin of this label, which determines if the label is\n   * to the above, below, or at the center of its anchor position.\n   * <br /><br />\n   * <div align=\'center\'>\n   * <img src=\'Images/Billboard.setVerticalOrigin.png\' width=\'695\' height=\'175\' /><br />\n   * </div>\n   * @memberof Label.prototype\n   * @type {VerticalOrigin}\n   * @default VerticalOrigin.BASELINE\n   * @example\n   * // Use a top, right origin\n   * l.horizontalOrigin = Cesium.HorizontalOrigin.RIGHT;\n   * l.verticalOrigin = Cesium.VerticalOrigin.TOP;\n   */\n  verticalOrigin: {\n    get: function () {\n      return this._verticalOrigin;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._verticalOrigin !== value) {\n        this._verticalOrigin = value;\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.verticalOrigin = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.verticalOrigin = value;\n        }\n\n        repositionAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the uniform scale that is multiplied with the label\'s size in pixels.\n   * A scale of <code>1.0</code> does not change the size of the label; a scale greater than\n   * <code>1.0</code> enlarges the label; a positive scale less than <code>1.0</code> shrinks\n   * the label.\n   * <br /><br />\n   * Applying a large scale value may pixelate the label.  To make text larger without pixelation,\n   * use a larger font size when calling {@link Label#font} instead.\n   * <br /><br />\n   * <div align=\'center\'>\n   * <img src=\'Images/Label.setScale.png\' width=\'400\' height=\'300\' /><br/>\n   * From left to right in the above image, the scales are <code>0.5</code>, <code>1.0</code>,\n   * and <code>2.0</code>.\n   * </div>\n   * @memberof Label.prototype\n   * @type {Number}\n   * @default 1.0\n   */\n  scale: {\n    get: function () {\n      return this._scale;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value)) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("value is required.");\n      }\n      //>>includeEnd(\'debug\');\n\n      if (this._scale !== value) {\n        this._scale = value;\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.scale = value * this._relativeSize;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.scale = value * this._relativeSize;\n        }\n\n        repositionAllGlyphs(this);\n      }\n    },\n  },\n\n  /**\n   * Gets the total scale of the label, which is the label\'s scale multiplied by the computed relative size\n   * of the desired font compared to the generated glyph size.\n   * @memberof Label.prototype\n   * @type {Number}\n   * @default 1.0\n   */\n  totalScale: {\n    get: function () {\n      return this._scale * this._relativeSize;\n    },\n  },\n\n  /**\n   * Gets or sets the condition specifying at what distance from the camera that this label will be displayed.\n   * @memberof Label.prototype\n   * @type {DistanceDisplayCondition}\n   * @default undefined\n   */\n  distanceDisplayCondition: {\n    get: function () {\n      return this._distanceDisplayCondition;\n    },\n    set: function (value) {\n      //>>includeStart(\'debug\', pragmas.debug);\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value) && value.far <= value.near) {\n        throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("far must be greater than near");\n      }\n      //>>includeEnd(\'debug\');\n      if (\n        !_Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equals */ .Z.equals(value, this._distanceDisplayCondition)\n      ) {\n        this._distanceDisplayCondition = _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(\n          value,\n          this._distanceDisplayCondition\n        );\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.distanceDisplayCondition = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.distanceDisplayCondition = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the distance from the camera at which to disable the depth test to, for example, prevent clipping against terrain.\n   * When set to zero, the depth test is always applied. When set to Number.POSITIVE_INFINITY, the depth test is never applied.\n   * @memberof Label.prototype\n   * @type {Number}\n   */\n  disableDepthTestDistance: {\n    get: function () {\n      return this._disableDepthTestDistance;\n    },\n    set: function (value) {\n      if (this._disableDepthTestDistance !== value) {\n        //>>includeStart(\'debug\', pragmas.debug);\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(value) && value < 0.0) {\n          throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z(\n            "disableDepthTestDistance must be greater than 0.0."\n          );\n        }\n        //>>includeEnd(\'debug\');\n        this._disableDepthTestDistance = value;\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.disableDepthTestDistance = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.disableDepthTestDistance = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the user-defined value returned when the label is picked.\n   * @memberof Label.prototype\n   * @type {*}\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n    set: function (value) {\n      if (this._id !== value) {\n        this._id = value;\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.id = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.id = value;\n        }\n      }\n    },\n  },\n\n  /**\n   * @private\n   */\n  pickId: {\n    get: function () {\n      if (this._glyphs.length === 0 || !(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(this._glyphs[0].billboard)) {\n        return undefined;\n      }\n      return this._glyphs[0].billboard.pickId;\n    },\n  },\n\n  /**\n   * Keeps track of the position of the label based on the height reference.\n   * @memberof Label.prototype\n   * @type {Cartesian3}\n   * @private\n   */\n  _clampedPosition: {\n    get: function () {\n      return this._actualClampedPosition;\n    },\n    set: function (value) {\n      this._actualClampedPosition = _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(\n        value,\n        this._actualClampedPosition\n      );\n\n      var glyphs = this._glyphs;\n      for (var i = 0, len = glyphs.length; i < len; i++) {\n        var glyph = glyphs[i];\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n          // Set all the private values here, because we already clamped to ground\n          //  so we don\'t want to do it again for every glyph\n          glyph.billboard._clampedPosition = value;\n        }\n      }\n      var backgroundBillboard = this._backgroundBillboard;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n        backgroundBillboard._clampedPosition = value;\n      }\n    },\n  },\n\n  /**\n   * Determines whether or not this label will be shown or hidden because it was clustered.\n   * @memberof Label.prototype\n   * @type {Boolean}\n   * @default true\n   * @private\n   */\n  clusterShow: {\n    get: function () {\n      return this._clusterShow;\n    },\n    set: function (value) {\n      if (this._clusterShow !== value) {\n        this._clusterShow = value;\n\n        var glyphs = this._glyphs;\n        for (var i = 0, len = glyphs.length; i < len; i++) {\n          var glyph = glyphs[i];\n          if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(glyph.billboard)) {\n            glyph.billboard.clusterShow = value;\n          }\n        }\n        var backgroundBillboard = this._backgroundBillboard;\n        if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n          backgroundBillboard.clusterShow = value;\n        }\n      }\n    },\n  },\n});\n\nLabel.prototype._updateClamping = function () {\n  _Billboard_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"]._updateClamping */ .Z._updateClamping(this._labelCollection, this);\n};\n\n/**\n * Computes the screen-space position of the label\'s origin, taking into account eye and pixel offsets.\n * The screen space origin is the top, left corner of the canvas; <code>x</code> increases from\n * left to right, and <code>y</code> increases from top to bottom.\n *\n * @param {Scene} scene The scene the label is in.\n * @param {Cartesian2} [result] The object onto which to store the result.\n * @returns {Cartesian2} The screen-space position of the label.\n *\n *\n * @example\n * console.log(l.computeScreenSpacePosition(scene).toString());\n *\n * @see Label#eyeOffset\n * @see Label#pixelOffset\n */\nLabel.prototype.computeScreenSpacePosition = function (scene, result) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(scene)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("scene is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(result)) {\n    result = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n  }\n\n  var labelCollection = this._labelCollection;\n  var modelMatrix = labelCollection.modelMatrix;\n  var actualPosition = (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(this._actualClampedPosition)\n    ? this._actualClampedPosition\n    : this._position;\n\n  var windowCoordinates = _Billboard_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"]._computeScreenSpacePosition */ .Z._computeScreenSpacePosition(\n    modelMatrix,\n    actualPosition,\n    this._eyeOffset,\n    this._pixelOffset,\n    scene,\n    result\n  );\n  return windowCoordinates;\n};\n\n/**\n * Gets a label\'s screen space bounding box centered around screenSpacePosition.\n * @param {Label} label The label to get the screen space bounding box for.\n * @param {Cartesian2} screenSpacePosition The screen space center of the label.\n * @param {BoundingRectangle} [result] The object onto which to store the result.\n * @returns {BoundingRectangle} The screen space bounding box.\n *\n * @private\n */\nLabel.getScreenSpaceBoundingBox = function (\n  label,\n  screenSpacePosition,\n  result\n) {\n  var x = 0;\n  var y = 0;\n  var width = 0;\n  var height = 0;\n  var scale = label.totalScale;\n\n  var backgroundBillboard = label._backgroundBillboard;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(backgroundBillboard)) {\n    x = screenSpacePosition.x + backgroundBillboard._translate.x;\n    y = screenSpacePosition.y - backgroundBillboard._translate.y;\n    width = backgroundBillboard.width * scale;\n    height = backgroundBillboard.height * scale;\n\n    if (\n      label.verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].BOTTOM */ .Z.BOTTOM ||\n      label.verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].BASELINE */ .Z.BASELINE\n    ) {\n      y -= height;\n    } else if (label.verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].CENTER */ .Z.CENTER) {\n      y -= height * 0.5;\n    }\n  } else {\n    x = Number.POSITIVE_INFINITY;\n    y = Number.POSITIVE_INFINITY;\n    var maxX = 0;\n    var maxY = 0;\n    var glyphs = label._glyphs;\n    var length = glyphs.length;\n    for (var i = 0; i < length; ++i) {\n      var glyph = glyphs[i];\n      var billboard = glyph.billboard;\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(billboard)) {\n        continue;\n      }\n\n      var glyphX = screenSpacePosition.x + billboard._translate.x;\n      var glyphY = screenSpacePosition.y - billboard._translate.y;\n      var glyphWidth = glyph.dimensions.width * scale;\n      var glyphHeight = glyph.dimensions.height * scale;\n\n      if (\n        label.verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].BOTTOM */ .Z.BOTTOM ||\n        label.verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].BASELINE */ .Z.BASELINE\n      ) {\n        glyphY -= glyphHeight;\n      } else if (label.verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].CENTER */ .Z.CENTER) {\n        glyphY -= glyphHeight * 0.5;\n      }\n\n      if (label._verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].TOP */ .Z.TOP) {\n        glyphY += _SDFSettings_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].PADDING */ .Z.PADDING * scale;\n      } else if (\n        label._verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].BOTTOM */ .Z.BOTTOM ||\n        label._verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].BASELINE */ .Z.BASELINE\n      ) {\n        glyphY -= _SDFSettings_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"].PADDING */ .Z.PADDING * scale;\n      }\n\n      x = Math.min(x, glyphX);\n      y = Math.min(y, glyphY);\n      maxX = Math.max(maxX, glyphX + glyphWidth);\n      maxY = Math.max(maxY, glyphY + glyphHeight);\n    }\n\n    width = maxX - x;\n    height = maxY - y;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(result)) {\n    result = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z();\n  }\n\n  result.x = x;\n  result.y = y;\n  result.width = width;\n  result.height = height;\n\n  return result;\n};\n\n/**\n * Determines if this label equals another label.  Labels are equal if all their properties\n * are equal.  Labels in different collections can be equal.\n *\n * @param {Label} other The label to compare for equality.\n * @returns {Boolean} <code>true</code> if the labels are equal; otherwise, <code>false</code>.\n */\nLabel.prototype.equals = function (other) {\n  return (\n    this === other ||\n    ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z)(other) &&\n      this._show === other._show &&\n      this._scale === other._scale &&\n      this._outlineWidth === other._outlineWidth &&\n      this._showBackground === other._showBackground &&\n      this._style === other._style &&\n      this._verticalOrigin === other._verticalOrigin &&\n      this._horizontalOrigin === other._horizontalOrigin &&\n      this._heightReference === other._heightReference &&\n      this._renderedText === other._renderedText &&\n      this._font === other._font &&\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(this._position, other._position) &&\n      _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(this._fillColor, other._fillColor) &&\n      _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(this._outlineColor, other._outlineColor) &&\n      _Core_Color_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].equals */ .Z.equals(this._backgroundColor, other._backgroundColor) &&\n      _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equals */ .Z.equals(this._backgroundPadding, other._backgroundPadding) &&\n      _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].equals */ .Z.equals(this._pixelOffset, other._pixelOffset) &&\n      _Core_Cartesian3_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].equals */ .Z.equals(this._eyeOffset, other._eyeOffset) &&\n      _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(\n        this._translucencyByDistance,\n        other._translucencyByDistance\n      ) &&\n      _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(\n        this._pixelOffsetScaleByDistance,\n        other._pixelOffsetScaleByDistance\n      ) &&\n      _Core_NearFarScalar_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"].equals */ .Z.equals(this._scaleByDistance, other._scaleByDistance) &&\n      _Core_DistanceDisplayCondition_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].equals */ .Z.equals(\n        this._distanceDisplayCondition,\n        other._distanceDisplayCondition\n      ) &&\n      this._disableDepthTestDistance === other._disableDepthTestDistance &&\n      this._id === other._id)\n  );\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n */\nLabel.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Determines whether or not run the algorithm, that match the text of the label to right-to-left languages\n * @memberof Label\n * @type {Boolean}\n * @default false\n *\n * @example\n * // Example 1.\n * // Set a label\'s rightToLeft before init\n * Cesium.Label.enableRightToLeftDetection = true;\n * var myLabelEntity = viewer.entities.add({\n *   label: {\n *     id: \'my label\',\n *     text: \'זה טקסט בעברית \\n ועכשיו יורדים שורה\',\n *   }\n * });\n *\n * @example\n * // Example 2.\n * var myLabelEntity = viewer.entities.add({\n *   label: {\n *     id: \'my label\',\n *     text: \'English text\'\n *   }\n * });\n * // Set a label\'s rightToLeft after init\n * Cesium.Label.enableRightToLeftDetection = true;\n * myLabelEntity.text = \'טקסט חדש\';\n */\nLabel.enableRightToLeftDetection = false;\n\nfunction convertTextToTypes(text, rtlChars) {\n  var ltrChars = /[a-zA-Z0-9]/;\n  var bracketsChars = /[()[\\]{}<>]/;\n  var parsedText = [];\n  var word = "";\n  var lastType = textTypes.LTR;\n  var currentType = "";\n  var textLength = text.length;\n  for (var textIndex = 0; textIndex < textLength; ++textIndex) {\n    var character = text.charAt(textIndex);\n    if (rtlChars.test(character)) {\n      currentType = textTypes.RTL;\n    } else if (ltrChars.test(character)) {\n      currentType = textTypes.LTR;\n    } else if (bracketsChars.test(character)) {\n      currentType = textTypes.BRACKETS;\n    } else {\n      currentType = textTypes.WEAK;\n    }\n\n    if (textIndex === 0) {\n      lastType = currentType;\n    }\n\n    if (lastType === currentType && currentType !== textTypes.BRACKETS) {\n      word += character;\n    } else {\n      if (word !== "") {\n        parsedText.push({ Type: lastType, Word: word });\n      }\n      lastType = currentType;\n      word = character;\n    }\n  }\n  parsedText.push({ Type: currentType, Word: word });\n  return parsedText;\n}\n\nfunction reverseWord(word) {\n  return word.split("").reverse().join("");\n}\n\nfunction spliceWord(result, pointer, word) {\n  return result.slice(0, pointer) + word + result.slice(pointer);\n}\n\nfunction reverseBrackets(bracket) {\n  switch (bracket) {\n    case "(":\n      return ")";\n    case ")":\n      return "(";\n    case "[":\n      return "]";\n    case "]":\n      return "[";\n    case "{":\n      return "}";\n    case "}":\n      return "{";\n    case "<":\n      return ">";\n    case ">":\n      return "<";\n  }\n}\n\n//To add another language, simply add its Unicode block range(s) to the below regex.\nvar hebrew = "\\u05D0-\\u05EA";\nvar arabic = "\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF";\nvar rtlChars = new RegExp("[" + hebrew + arabic + "]");\n\n/**\n *\n * @param {String} value the text to parse and reorder\n * @returns {String} the text as rightToLeft direction\n * @private\n */\nfunction reverseRtl(value) {\n  var texts = value.split("\\n");\n  var result = "";\n  for (var i = 0; i < texts.length; i++) {\n    var text = texts[i];\n    // first character of the line is a RTL character, so need to manage different cases\n    var rtlDir = rtlChars.test(text.charAt(0));\n    var parsedText = convertTextToTypes(text, rtlChars);\n\n    var splicePointer = 0;\n    var line = "";\n    for (var wordIndex = 0; wordIndex < parsedText.length; ++wordIndex) {\n      var subText = parsedText[wordIndex];\n      var reverse =\n        subText.Type === textTypes.BRACKETS\n          ? reverseBrackets(subText.Word)\n          : reverseWord(subText.Word);\n      if (rtlDir) {\n        if (subText.Type === textTypes.RTL) {\n          line = reverse + line;\n          splicePointer = 0;\n        } else if (subText.Type === textTypes.LTR) {\n          line = spliceWord(line, splicePointer, subText.Word);\n          splicePointer += subText.Word.length;\n        } else if (\n          subText.Type === textTypes.WEAK ||\n          subText.Type === textTypes.BRACKETS\n        ) {\n          // current word is weak, last one was bracket\n          if (\n            subText.Type === textTypes.WEAK &&\n            parsedText[wordIndex - 1].Type === textTypes.BRACKETS\n          ) {\n            line = reverse + line;\n          }\n          // current word is weak or bracket, last one was rtl\n          else if (parsedText[wordIndex - 1].Type === textTypes.RTL) {\n            line = reverse + line;\n            splicePointer = 0;\n          }\n          // current word is weak or bracket, there is at least one more word\n          else if (parsedText.length > wordIndex + 1) {\n            // next word is rtl\n            if (parsedText[wordIndex + 1].Type === textTypes.RTL) {\n              line = reverse + line;\n              splicePointer = 0;\n            } else {\n              line = spliceWord(line, splicePointer, subText.Word);\n              splicePointer += subText.Word.length;\n            }\n          }\n          // current word is weak or bracket, and it the last in this line\n          else {\n            line = spliceWord(line, 0, reverse);\n          }\n        }\n      }\n      // ltr line, rtl word\n      else if (subText.Type === textTypes.RTL) {\n        line = spliceWord(line, splicePointer, reverse);\n      }\n      // ltr line, ltr word\n      else if (subText.Type === textTypes.LTR) {\n        line += subText.Word;\n        splicePointer = line.length;\n      }\n      // ltr line, weak or bracket word\n      else if (\n        subText.Type === textTypes.WEAK ||\n        subText.Type === textTypes.BRACKETS\n      ) {\n        // not first word in line\n        if (wordIndex > 0) {\n          // last word was rtl\n          if (parsedText[wordIndex - 1].Type === textTypes.RTL) {\n            // there is at least one more word\n            if (parsedText.length > wordIndex + 1) {\n              // next word is rtl\n              if (parsedText[wordIndex + 1].Type === textTypes.RTL) {\n                line = spliceWord(line, splicePointer, reverse);\n              } else {\n                line += subText.Word;\n                splicePointer = line.length;\n              }\n            } else {\n              line += subText.Word;\n            }\n          } else {\n            line += subText.Word;\n            splicePointer = line.length;\n          }\n        } else {\n          line += subText.Word;\n          splicePointer = line.length;\n        }\n      }\n    }\n\n    result += line;\n    if (i < texts.length - 1) {\n      result += "\\n";\n    }\n  }\n  return result;\n}\n/* harmony default export */ __webpack_exports__["Z"] = (Label);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///73705\n')},7017:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88108);\n/* harmony import */ var _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60838);\n/* harmony import */ var _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59947);\n/* harmony import */ var _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62200);\n/* harmony import */ var _Core_defined_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(82982);\n/* harmony import */ var _Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86511);\n/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12572);\n/* harmony import */ var _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(72248);\n/* harmony import */ var _Core_writeTextToCanvas_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(36051);\n/* harmony import */ var _ThirdParty_bitmap_sdf_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(56932);\n/* harmony import */ var _BillboardCollection_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(8044);\n/* harmony import */ var _BlendOption_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(27384);\n/* harmony import */ var _HeightReference_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(4260);\n/* harmony import */ var _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(62919);\n/* harmony import */ var _Label_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(73705);\n/* harmony import */ var _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(81208);\n/* harmony import */ var _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(36191);\n/* harmony import */ var _TextureAtlas_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(54230);\n/* harmony import */ var _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(60473);\n/* harmony import */ var _ThirdParty_grapheme_splitter_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(93042);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// A glyph represents a single character in a particular label.  It may or may\n// not have a billboard, depending on whether the texture info has an index into\n// the the label collection\'s texture atlas.  Invisible characters have no texture, and\n// no billboard.  However, it always has a valid dimensions object.\nfunction Glyph() {\n  this.textureInfo = undefined;\n  this.dimensions = undefined;\n  this.billboard = undefined;\n}\n\n// GlyphTextureInfo represents a single character, drawn in a particular style,\n// shared and reference counted across all labels.  It may or may not have an\n// index into the label collection\'s texture atlas, depending on whether the character\n// has both width and height, but it always has a valid dimensions object.\nfunction GlyphTextureInfo(labelCollection, index, dimensions) {\n  this.labelCollection = labelCollection;\n  this.index = index;\n  this.dimensions = dimensions;\n}\n\n// Traditionally, leading is %20 of the font size.\nvar defaultLineSpacingPercent = 1.2;\n\nvar whitePixelCanvasId = "ID_WHITE_PIXEL";\nvar whitePixelSize = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(4, 4);\nvar whitePixelBoundingRegion = new _Core_BoundingRectangle_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z(1, 1, 1, 1);\n\nfunction addWhitePixelCanvas(textureAtlas, labelCollection) {\n  var canvas = document.createElement("canvas");\n  canvas.width = whitePixelSize.x;\n  canvas.height = whitePixelSize.y;\n\n  var context2D = canvas.getContext("2d");\n  context2D.fillStyle = "#fff";\n  context2D.fillRect(0, 0, canvas.width, canvas.height);\n\n  textureAtlas.addImage(whitePixelCanvasId, canvas).then(function (index) {\n    labelCollection._whitePixelIndex = index;\n  });\n}\n\n// reusable object for calling writeTextToCanvas\nvar writeTextToCanvasParameters = {};\nfunction createGlyphCanvas(\n  character,\n  font,\n  fillColor,\n  outlineColor,\n  outlineWidth,\n  style,\n  verticalOrigin\n) {\n  writeTextToCanvasParameters.font = font;\n  writeTextToCanvasParameters.fillColor = fillColor;\n  writeTextToCanvasParameters.strokeColor = outlineColor;\n  writeTextToCanvasParameters.strokeWidth = outlineWidth;\n  // Setting the padding to something bigger is necessary to get enough space for the outlining.\n  writeTextToCanvasParameters.padding = _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].PADDING */ .Z.PADDING;\n\n  if (verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].CENTER */ .Z.CENTER) {\n    writeTextToCanvasParameters.textBaseline = "middle";\n  } else if (verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].TOP */ .Z.TOP) {\n    writeTextToCanvasParameters.textBaseline = "top";\n  } else {\n    // VerticalOrigin.BOTTOM and VerticalOrigin.BASELINE\n    writeTextToCanvasParameters.textBaseline = "bottom";\n  }\n\n  writeTextToCanvasParameters.fill =\n    style === _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].FILL */ .Z.FILL || style === _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].FILL_AND_OUTLINE */ .Z.FILL_AND_OUTLINE;\n  writeTextToCanvasParameters.stroke =\n    style === _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].OUTLINE */ .Z.OUTLINE || style === _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].FILL_AND_OUTLINE */ .Z.FILL_AND_OUTLINE;\n  writeTextToCanvasParameters.backgroundColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].BLACK */ .Z.BLACK;\n\n  return (0,_Core_writeTextToCanvas_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(character, writeTextToCanvasParameters);\n}\n\nfunction unbindGlyph(labelCollection, glyph) {\n  glyph.textureInfo = undefined;\n  glyph.dimensions = undefined;\n\n  var billboard = glyph.billboard;\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(billboard)) {\n    billboard.show = false;\n    billboard.image = undefined;\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(billboard._removeCallbackFunc)) {\n      billboard._removeCallbackFunc();\n      billboard._removeCallbackFunc = undefined;\n    }\n    labelCollection._spareBillboards.push(billboard);\n    glyph.billboard = undefined;\n  }\n}\n\nfunction addGlyphToTextureAtlas(textureAtlas, id, canvas, glyphTextureInfo) {\n  textureAtlas.addImage(id, canvas).then(function (index) {\n    glyphTextureInfo.index = index;\n  });\n}\n\nvar splitter = new _ThirdParty_grapheme_splitter_js__WEBPACK_IMPORTED_MODULE_17__/* ["default"] */ .Z();\n\nfunction rebindAllGlyphs(labelCollection, label) {\n  var text = label._renderedText;\n  var graphemes = splitter.splitGraphemes(text);\n  var textLength = graphemes.length;\n  var glyphs = label._glyphs;\n  var glyphsLength = glyphs.length;\n\n  var glyph;\n  var glyphIndex;\n  var textIndex;\n\n  // Compute a font size scale relative to the sdf font generated size.\n  label._relativeSize = label._fontSize / _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].FONT_SIZE */ .Z.FONT_SIZE;\n\n  // if we have more glyphs than needed, unbind the extras.\n  if (textLength < glyphsLength) {\n    for (glyphIndex = textLength; glyphIndex < glyphsLength; ++glyphIndex) {\n      unbindGlyph(labelCollection, glyphs[glyphIndex]);\n    }\n  }\n\n  // presize glyphs to match the new text length\n  glyphs.length = textLength;\n\n  var showBackground =\n    label._showBackground && text.split("\\n").join("").length > 0;\n  var backgroundBillboard = label._backgroundBillboard;\n  var backgroundBillboardCollection =\n    labelCollection._backgroundBillboardCollection;\n  if (!showBackground) {\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(backgroundBillboard)) {\n      backgroundBillboardCollection.remove(backgroundBillboard);\n      label._backgroundBillboard = backgroundBillboard = undefined;\n    }\n  } else {\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(backgroundBillboard)) {\n      backgroundBillboard = backgroundBillboardCollection.add({\n        collection: labelCollection,\n        image: whitePixelCanvasId,\n        imageSubRegion: whitePixelBoundingRegion,\n      });\n      label._backgroundBillboard = backgroundBillboard;\n    }\n\n    backgroundBillboard.color = label._backgroundColor;\n    backgroundBillboard.show = label._show;\n    backgroundBillboard.position = label._position;\n    backgroundBillboard.eyeOffset = label._eyeOffset;\n    backgroundBillboard.pixelOffset = label._pixelOffset;\n    backgroundBillboard.horizontalOrigin = _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].LEFT */ .Z.LEFT;\n    backgroundBillboard.verticalOrigin = label._verticalOrigin;\n    backgroundBillboard.heightReference = label._heightReference;\n    backgroundBillboard.scale = label.totalScale;\n    backgroundBillboard.pickPrimitive = label;\n    backgroundBillboard.id = label._id;\n    backgroundBillboard.translucencyByDistance = label._translucencyByDistance;\n    backgroundBillboard.pixelOffsetScaleByDistance =\n      label._pixelOffsetScaleByDistance;\n    backgroundBillboard.scaleByDistance = label._scaleByDistance;\n    backgroundBillboard.distanceDisplayCondition =\n      label._distanceDisplayCondition;\n    backgroundBillboard.disableDepthTestDistance =\n      label._disableDepthTestDistance;\n  }\n\n  var glyphTextureCache = labelCollection._glyphTextureCache;\n\n  // walk the text looking for new characters (creating new glyphs for each)\n  // or changed characters (rebinding existing glyphs)\n  for (textIndex = 0; textIndex < textLength; ++textIndex) {\n    var character = graphemes[textIndex];\n    var verticalOrigin = label._verticalOrigin;\n\n    var id = JSON.stringify([\n      character,\n      label._fontFamily,\n      label._fontStyle,\n      label._fontWeight,\n      +verticalOrigin,\n    ]);\n\n    var glyphTextureInfo = glyphTextureCache[id];\n    if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(glyphTextureInfo)) {\n      var glyphFont =\n        label._fontStyle +\n        " " +\n        label._fontWeight +\n        " " +\n        _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].FONT_SIZE */ .Z.FONT_SIZE +\n        "px " +\n        label._fontFamily;\n\n      var canvas = createGlyphCanvas(\n        character,\n        glyphFont,\n        _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].WHITE */ .Z.WHITE,\n        _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].WHITE */ .Z.WHITE,\n        0.0,\n        _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].FILL */ .Z.FILL,\n        verticalOrigin\n      );\n\n      glyphTextureInfo = new GlyphTextureInfo(\n        labelCollection,\n        -1,\n        canvas.dimensions\n      );\n      glyphTextureCache[id] = glyphTextureInfo;\n\n      if (canvas.width > 0 && canvas.height > 0) {\n        var sdfValues = (0,_ThirdParty_bitmap_sdf_js__WEBPACK_IMPORTED_MODULE_19__/* ["default"] */ .Z)(canvas, {\n          cutoff: _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].CUTOFF */ .Z.CUTOFF,\n          radius: _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].RADIUS */ .Z.RADIUS,\n        });\n\n        var ctx = canvas.getContext("2d");\n        var canvasWidth = canvas.width;\n        var canvasHeight = canvas.height;\n        var imgData = ctx.getImageData(0, 0, canvasWidth, canvasHeight);\n        for (var i = 0; i < canvasWidth; i++) {\n          for (var j = 0; j < canvasHeight; j++) {\n            var baseIndex = j * canvasWidth + i;\n            var alpha = sdfValues[baseIndex] * 255;\n            var imageIndex = baseIndex * 4;\n            imgData.data[imageIndex + 0] = alpha;\n            imgData.data[imageIndex + 1] = alpha;\n            imgData.data[imageIndex + 2] = alpha;\n            imgData.data[imageIndex + 3] = alpha;\n          }\n        }\n        ctx.putImageData(imgData, 0, 0);\n        if (character !== " ") {\n          addGlyphToTextureAtlas(\n            labelCollection._textureAtlas,\n            id,\n            canvas,\n            glyphTextureInfo\n          );\n        }\n      }\n    }\n\n    glyph = glyphs[textIndex];\n\n    if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(glyph)) {\n      // clean up leftover information from the previous glyph\n      if (glyphTextureInfo.index === -1) {\n        // no texture, and therefore no billboard, for this glyph.\n        // so, completely unbind glyph.\n        unbindGlyph(labelCollection, glyph);\n      } else if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(glyph.textureInfo)) {\n        // we have a texture and billboard.  If we had one before, release\n        // our reference to that texture info, but reuse the billboard.\n        glyph.textureInfo = undefined;\n      }\n    } else {\n      // create a glyph object\n      glyph = new Glyph();\n      glyphs[textIndex] = glyph;\n    }\n\n    glyph.textureInfo = glyphTextureInfo;\n    glyph.dimensions = glyphTextureInfo.dimensions;\n\n    // if we have a texture, configure the existing billboard, or obtain one\n    if (glyphTextureInfo.index !== -1) {\n      var billboard = glyph.billboard;\n      var spareBillboards = labelCollection._spareBillboards;\n      if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(billboard)) {\n        if (spareBillboards.length > 0) {\n          billboard = spareBillboards.pop();\n        } else {\n          billboard = labelCollection._billboardCollection.add({\n            collection: labelCollection,\n          });\n          billboard._labelDimensions = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n          billboard._labelTranslate = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n        }\n        glyph.billboard = billboard;\n      }\n\n      billboard.show = label._show;\n      billboard.position = label._position;\n      billboard.eyeOffset = label._eyeOffset;\n      billboard.pixelOffset = label._pixelOffset;\n      billboard.horizontalOrigin = _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].LEFT */ .Z.LEFT;\n      billboard.verticalOrigin = label._verticalOrigin;\n      billboard.heightReference = label._heightReference;\n      billboard.scale = label.totalScale;\n      billboard.pickPrimitive = label;\n      billboard.id = label._id;\n      billboard.image = id;\n      billboard.translucencyByDistance = label._translucencyByDistance;\n      billboard.pixelOffsetScaleByDistance = label._pixelOffsetScaleByDistance;\n      billboard.scaleByDistance = label._scaleByDistance;\n      billboard.distanceDisplayCondition = label._distanceDisplayCondition;\n      billboard.disableDepthTestDistance = label._disableDepthTestDistance;\n      billboard._batchIndex = label._batchIndex;\n      billboard.outlineColor = label.outlineColor;\n      if (label.style === _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].FILL_AND_OUTLINE */ .Z.FILL_AND_OUTLINE) {\n        billboard.color = label._fillColor;\n        billboard.outlineWidth = label.outlineWidth;\n      } else if (label.style === _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].FILL */ .Z.FILL) {\n        billboard.color = label._fillColor;\n        billboard.outlineWidth = 0.0;\n      } else if (label.style === _LabelStyle_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"].OUTLINE */ .Z.OUTLINE) {\n        billboard.color = _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].TRANSPARENT */ .Z.TRANSPARENT;\n        billboard.outlineWidth = label.outlineWidth;\n      }\n    }\n  }\n\n  // changing glyphs will cause the position of the\n  // glyphs to change, since different characters have different widths\n  label._repositionAllGlyphs = true;\n}\n\nfunction calculateWidthOffset(lineWidth, horizontalOrigin, backgroundPadding) {\n  if (horizontalOrigin === _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].CENTER */ .Z.CENTER) {\n    return -lineWidth / 2;\n  } else if (horizontalOrigin === _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].RIGHT */ .Z.RIGHT) {\n    return -(lineWidth + backgroundPadding.x);\n  }\n  return backgroundPadding.x;\n}\n\n// reusable Cartesian2 instances\nvar glyphPixelOffset = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\nvar scratchBackgroundPadding = new _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z();\n\nfunction repositionAllGlyphs(label) {\n  var glyphs = label._glyphs;\n  var text = label._renderedText;\n  var glyph;\n  var dimensions;\n  var lastLineWidth = 0;\n  var maxLineWidth = 0;\n  var lineWidths = [];\n  var maxGlyphDescent = Number.NEGATIVE_INFINITY;\n  var maxGlyphY = 0;\n  var numberOfLines = 1;\n  var glyphIndex;\n  var glyphLength = glyphs.length;\n\n  var backgroundBillboard = label._backgroundBillboard;\n  var backgroundPadding = _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(backgroundBillboard) ? label._backgroundPadding : _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].ZERO */ .Z.ZERO,\n    scratchBackgroundPadding\n  );\n\n  // We need to scale the background padding, which is specified in pixels by the inverse of the relative size so it is scaled properly.\n  backgroundPadding.x /= label._relativeSize;\n  backgroundPadding.y /= label._relativeSize;\n\n  for (glyphIndex = 0; glyphIndex < glyphLength; ++glyphIndex) {\n    if (text.charAt(glyphIndex) === "\\n") {\n      lineWidths.push(lastLineWidth);\n      ++numberOfLines;\n      lastLineWidth = 0;\n    } else {\n      glyph = glyphs[glyphIndex];\n      dimensions = glyph.dimensions;\n      maxGlyphY = Math.max(maxGlyphY, dimensions.height - dimensions.descent);\n      maxGlyphDescent = Math.max(maxGlyphDescent, dimensions.descent);\n\n      //Computing the line width must also account for the kerning that occurs between letters.\n      lastLineWidth += dimensions.width - dimensions.minx;\n      if (glyphIndex < glyphLength - 1) {\n        lastLineWidth += glyphs[glyphIndex + 1].dimensions.minx;\n      }\n      maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n    }\n  }\n  lineWidths.push(lastLineWidth);\n  var maxLineHeight = maxGlyphY + maxGlyphDescent;\n\n  var scale = label.totalScale;\n  var horizontalOrigin = label._horizontalOrigin;\n  var verticalOrigin = label._verticalOrigin;\n  var lineIndex = 0;\n  var lineWidth = lineWidths[lineIndex];\n  var widthOffset = calculateWidthOffset(\n    lineWidth,\n    horizontalOrigin,\n    backgroundPadding\n  );\n  var lineSpacing =\n    ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(label._lineHeight)\n      ? label._lineHeight\n      : defaultLineSpacingPercent * label._fontSize) / label._relativeSize;\n  var otherLinesHeight = lineSpacing * (numberOfLines - 1);\n  var totalLineWidth = maxLineWidth;\n  var totalLineHeight = maxLineHeight + otherLinesHeight;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(backgroundBillboard)) {\n    totalLineWidth += backgroundPadding.x * 2;\n    totalLineHeight += backgroundPadding.y * 2;\n    backgroundBillboard._labelHorizontalOrigin = horizontalOrigin;\n  }\n\n  glyphPixelOffset.x = widthOffset * scale;\n  glyphPixelOffset.y = 0;\n\n  var firstCharOfLine = true;\n\n  var lineOffsetY = 0;\n  for (glyphIndex = 0; glyphIndex < glyphLength; ++glyphIndex) {\n    if (text.charAt(glyphIndex) === "\\n") {\n      ++lineIndex;\n      lineOffsetY += lineSpacing;\n      lineWidth = lineWidths[lineIndex];\n      widthOffset = calculateWidthOffset(\n        lineWidth,\n        horizontalOrigin,\n        backgroundPadding\n      );\n      glyphPixelOffset.x = widthOffset * scale;\n      firstCharOfLine = true;\n    } else {\n      glyph = glyphs[glyphIndex];\n      dimensions = glyph.dimensions;\n\n      if (verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].TOP */ .Z.TOP) {\n        glyphPixelOffset.y =\n          dimensions.height - maxGlyphY - backgroundPadding.y;\n        glyphPixelOffset.y += _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].PADDING */ .Z.PADDING;\n      } else if (verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].CENTER */ .Z.CENTER) {\n        glyphPixelOffset.y =\n          (otherLinesHeight + dimensions.height - maxGlyphY) / 2;\n      } else if (verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].BASELINE */ .Z.BASELINE) {\n        glyphPixelOffset.y = otherLinesHeight;\n        glyphPixelOffset.y -= _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].PADDING */ .Z.PADDING;\n      } else {\n        // VerticalOrigin.BOTTOM\n        glyphPixelOffset.y =\n          otherLinesHeight + maxGlyphDescent + backgroundPadding.y;\n        glyphPixelOffset.y -= _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].PADDING */ .Z.PADDING;\n      }\n      glyphPixelOffset.y =\n        (glyphPixelOffset.y - dimensions.descent - lineOffsetY) * scale;\n\n      // Handle any offsets for the first character of the line since the bounds might not be right on the bottom left pixel.\n      if (firstCharOfLine) {\n        glyphPixelOffset.x -= _SDFSettings_js__WEBPACK_IMPORTED_MODULE_14__/* ["default"].PADDING */ .Z.PADDING * scale;\n        firstCharOfLine = false;\n      }\n\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(glyph.billboard)) {\n        glyph.billboard._setTranslate(glyphPixelOffset);\n        glyph.billboard._labelDimensions.x = totalLineWidth;\n        glyph.billboard._labelDimensions.y = totalLineHeight;\n        glyph.billboard._labelHorizontalOrigin = horizontalOrigin;\n      }\n\n      //Compute the next x offset taking into account the kerning performed\n      //on both the current letter as well as the next letter to be drawn\n      //as well as any applied scale.\n      if (glyphIndex < glyphLength - 1) {\n        var nextGlyph = glyphs[glyphIndex + 1];\n        glyphPixelOffset.x +=\n          (dimensions.width - dimensions.minx + nextGlyph.dimensions.minx) *\n          scale;\n      }\n    }\n  }\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(backgroundBillboard) && text.split("\\n").join("").length > 0) {\n    if (horizontalOrigin === _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].CENTER */ .Z.CENTER) {\n      widthOffset = -maxLineWidth / 2 - backgroundPadding.x;\n    } else if (horizontalOrigin === _HorizontalOrigin_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"].RIGHT */ .Z.RIGHT) {\n      widthOffset = -(maxLineWidth + backgroundPadding.x * 2);\n    } else {\n      widthOffset = 0;\n    }\n    glyphPixelOffset.x = widthOffset * scale;\n\n    if (verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].TOP */ .Z.TOP) {\n      glyphPixelOffset.y = maxLineHeight - maxGlyphY - maxGlyphDescent;\n    } else if (verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].CENTER */ .Z.CENTER) {\n      glyphPixelOffset.y = (maxLineHeight - maxGlyphY) / 2 - maxGlyphDescent;\n    } else if (verticalOrigin === _VerticalOrigin_js__WEBPACK_IMPORTED_MODULE_16__/* ["default"].BASELINE */ .Z.BASELINE) {\n      glyphPixelOffset.y = -backgroundPadding.y - maxGlyphDescent;\n    } else {\n      // VerticalOrigin.BOTTOM\n      glyphPixelOffset.y = 0;\n    }\n    glyphPixelOffset.y = glyphPixelOffset.y * scale;\n\n    backgroundBillboard.width = totalLineWidth;\n    backgroundBillboard.height = totalLineHeight;\n    backgroundBillboard._setTranslate(glyphPixelOffset);\n    backgroundBillboard._labelTranslate = _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n      glyphPixelOffset,\n      backgroundBillboard._labelTranslate\n    );\n  }\n\n  if (label.heightReference === _HeightReference_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"].CLAMP_TO_GROUND */ .Z.CLAMP_TO_GROUND) {\n    for (glyphIndex = 0; glyphIndex < glyphLength; ++glyphIndex) {\n      glyph = glyphs[glyphIndex];\n      var billboard = glyph.billboard;\n      if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(billboard)) {\n        billboard._labelTranslate = _Core_Cartesian2_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"].clone */ .Z.clone(\n          glyphPixelOffset,\n          billboard._labelTranslate\n        );\n      }\n    }\n  }\n}\n\nfunction destroyLabel(labelCollection, label) {\n  var glyphs = label._glyphs;\n  for (var i = 0, len = glyphs.length; i < len; ++i) {\n    unbindGlyph(labelCollection, glyphs[i]);\n  }\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(label._backgroundBillboard)) {\n    labelCollection._backgroundBillboardCollection.remove(\n      label._backgroundBillboard\n    );\n    label._backgroundBillboard = undefined;\n  }\n  label._labelCollection = undefined;\n\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(label._removeCallbackFunc)) {\n    label._removeCallbackFunc();\n  }\n\n  (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(label);\n}\n\n/**\n * A renderable collection of labels.  Labels are viewport-aligned text positioned in the 3D scene.\n * Each label can have a different font, color, scale, etc.\n * <br /><br />\n * <div align=\'center\'>\n * <img src=\'Images/Label.png\' width=\'400\' height=\'300\' /><br />\n * Example labels\n * </div>\n * <br /><br />\n * Labels are added and removed from the collection using {@link LabelCollection#add}\n * and {@link LabelCollection#remove}.\n *\n * @alias LabelCollection\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 transformation matrix that transforms each label from model to world coordinates.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Determines if this primitive\'s commands\' bounding spheres are shown.\n * @param {Scene} [options.scene] Must be passed in for labels that use the height reference property or will be depth tested against the globe.\n * @param {BlendOption} [options.blendOption=BlendOption.OPAQUE_AND_TRANSLUCENT] The label blending option. The default\n * is used for rendering both opaque and translucent labels. However, if either all of the labels are completely opaque or all are completely translucent,\n * setting the technique to BlendOption.OPAQUE or BlendOption.TRANSLUCENT can improve performance by up to 2x.\n * @param {Boolean} [options.show=true] Determines if the labels in the collection will be shown.\n *\n * @performance For best performance, prefer a few collections, each with many labels, to\n * many collections with only a few labels each.  Avoid having collections where some\n * labels change every frame and others do not; instead, create one or more collections\n * for static labels, and one or more collections for dynamic labels.\n *\n * @see LabelCollection#add\n * @see LabelCollection#remove\n * @see Label\n * @see BillboardCollection\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Labels.html|Cesium Sandcastle Labels Demo}\n *\n * @example\n * // Create a label collection with two labels\n * var labels = scene.primitives.add(new Cesium.LabelCollection());\n * labels.add({\n *   position : new Cesium.Cartesian3(1.0, 2.0, 3.0),\n *   text : \'A label\'\n * });\n * labels.add({\n *   position : new Cesium.Cartesian3(4.0, 5.0, 6.0),\n *   text : \'Another label\'\n * });\n */\nfunction LabelCollection(options) {\n  options = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options, _Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"].EMPTY_OBJECT */ .Z.EMPTY_OBJECT);\n\n  this._scene = options.scene;\n  this._batchTable = options.batchTable;\n\n  this._textureAtlas = undefined;\n  this._backgroundTextureAtlas = undefined;\n  this._whitePixelIndex = undefined;\n\n  this._backgroundBillboardCollection = new _BillboardCollection_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n    scene: this._scene,\n  });\n  this._backgroundBillboardCollection.destroyTextureAtlas = false;\n\n  this._billboardCollection = new _BillboardCollection_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z({\n    scene: this._scene,\n    batchTable: this._batchTable,\n  });\n  this._billboardCollection.destroyTextureAtlas = false;\n  this._billboardCollection._sdf = true;\n\n  this._spareBillboards = [];\n  this._glyphTextureCache = {};\n  this._labels = [];\n  this._labelsToUpdate = [];\n  this._totalGlyphCount = 0;\n\n  this._highlightColor = _Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].clone */ .Z.clone(_Core_Color_js__WEBPACK_IMPORTED_MODULE_2__/* ["default"].WHITE */ .Z.WHITE); // Only used by Vector3DTilePoints\n\n  /**\n   * Determines if labels in this collection will be shown.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.show = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.show, true);\n\n  /**\n   * The 4x4 transformation matrix that transforms each label in this collection from model to world coordinates.\n   * When this is the identity matrix, the labels are drawn in world coordinates, i.e., Earth\'s WGS84 coordinates.\n   * Local reference frames can be used by providing a different transformation matrix, like that returned\n   * by {@link Transforms.eastNorthUpToFixedFrame}.\n   *\n   * @type Matrix4\n   * @default {@link Matrix4.IDENTITY}\n   *\n   * @example\n   * var center = Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883);\n   * labels.modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(center);\n   * labels.add({\n   *   position : new Cesium.Cartesian3(0.0, 0.0, 0.0),\n   *   text     : \'Center\'\n   * });\n   * labels.add({\n   *   position : new Cesium.Cartesian3(1000000.0, 0.0, 0.0),\n   *   text     : \'East\'\n   * });\n   * labels.add({\n   *   position : new Cesium.Cartesian3(0.0, 1000000.0, 0.0),\n   *   text     : \'North\'\n   * });\n   * labels.add({\n   *   position : new Cesium.Cartesian3(0.0, 0.0, 1000000.0),\n   *   text     : \'Up\'\n   * });\n   */\n  this.modelMatrix = _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].clone */ .Z.clone(\n    (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(options.modelMatrix, _Core_Matrix4_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"].IDENTITY */ .Z.IDENTITY)\n  );\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the primitive.\n   * </p>\n   *\n   * @type {Boolean}\n   *\n   * @default false\n   */\n  this.debugShowBoundingVolume = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(\n    options.debugShowBoundingVolume,\n    false\n  );\n\n  /**\n   * The label blending option. The default is used for rendering both opaque and translucent labels.\n   * However, if either all of the labels are completely opaque or all are completely translucent,\n   * setting the technique to BlendOption.OPAQUE or BlendOption.TRANSLUCENT can improve\n   * performance by up to 2x.\n   * @type {BlendOption}\n   * @default BlendOption.OPAQUE_AND_TRANSLUCENT\n   */\n  this.blendOption = (0,_Core_defaultValue_js__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(\n    options.blendOption,\n    _BlendOption_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].OPAQUE_AND_TRANSLUCENT */ .Z.OPAQUE_AND_TRANSLUCENT\n  );\n}\n\nObject.defineProperties(LabelCollection.prototype, {\n  /**\n   * Returns the number of labels in this collection.  This is commonly used with\n   * {@link LabelCollection#get} to iterate over all the labels\n   * in the collection.\n   * @memberof LabelCollection.prototype\n   * @type {Number}\n   */\n  length: {\n    get: function () {\n      return this._labels.length;\n    },\n  },\n});\n\n/**\n * Creates and adds a label with the specified initial properties to the collection.\n * The added label is returned so it can be modified or removed from the collection later.\n *\n * @param {Object} [options] A template describing the label\'s properties as shown in Example 1.\n * @returns {Label} The label that was added to the collection.\n *\n * @performance Calling <code>add</code> is expected constant time.  However, the collection\'s vertex buffer\n * is rewritten; this operations is <code>O(n)</code> and also incurs\n * CPU to GPU overhead.  For best performance, add as many billboards as possible before\n * calling <code>update</code>.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * // Example 1:  Add a label, specifying all the default values.\n * var l = labels.add({\n *   show : true,\n *   position : Cesium.Cartesian3.ZERO,\n *   text : \'\',\n *   font : \'30px sans-serif\',\n *   fillColor : Cesium.Color.WHITE,\n *   outlineColor : Cesium.Color.BLACK,\n *   outlineWidth : 1.0,\n *   showBackground : false,\n *   backgroundColor : new Cesium.Color(0.165, 0.165, 0.165, 0.8),\n *   backgroundPadding : new Cesium.Cartesian2(7, 5),\n *   style : Cesium.LabelStyle.FILL,\n *   pixelOffset : Cesium.Cartesian2.ZERO,\n *   eyeOffset : Cesium.Cartesian3.ZERO,\n *   horizontalOrigin : Cesium.HorizontalOrigin.LEFT,\n *   verticalOrigin : Cesium.VerticalOrigin.BASELINE,\n *   scale : 1.0,\n *   translucencyByDistance : undefined,\n *   pixelOffsetScaleByDistance : undefined,\n *   heightReference : HeightReference.NONE,\n *   distanceDisplayCondition : undefined\n * });\n *\n * @example\n * // Example 2:  Specify only the label\'s cartographic position,\n * // text, and font.\n * var l = labels.add({\n *   position : Cesium.Cartesian3.fromRadians(longitude, latitude, height),\n *   text : \'Hello World\',\n *   font : \'24px Helvetica\',\n * });\n *\n * @see LabelCollection#remove\n * @see LabelCollection#removeAll\n */\nLabelCollection.prototype.add = function (options) {\n  var label = new _Label_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z(options, this);\n\n  this._labels.push(label);\n  this._labelsToUpdate.push(label);\n\n  return label;\n};\n\n/**\n * Removes a label from the collection.  Once removed, a label is no longer usable.\n *\n * @param {Label} label The label to remove.\n * @returns {Boolean} <code>true</code> if the label was removed; <code>false</code> if the label was not found in the collection.\n *\n * @performance Calling <code>remove</code> is expected constant time.  However, the collection\'s vertex buffer\n * is rewritten - an <code>O(n)</code> operation that also incurs CPU to GPU overhead.  For\n * best performance, remove as many labels as possible before calling <code>update</code>.\n * If you intend to temporarily hide a label, it is usually more efficient to call\n * {@link Label#show} instead of removing and re-adding the label.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * var l = labels.add(...);\n * labels.remove(l);  // Returns true\n *\n * @see LabelCollection#add\n * @see LabelCollection#removeAll\n * @see Label#show\n */\nLabelCollection.prototype.remove = function (label) {\n  if ((0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(label) && label._labelCollection === this) {\n    var index = this._labels.indexOf(label);\n    if (index !== -1) {\n      this._labels.splice(index, 1);\n      destroyLabel(this, label);\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Removes all labels from the collection.\n *\n * @performance <code>O(n)</code>.  It is more efficient to remove all the labels\n * from a collection and then add new ones than to create a new collection entirely.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * labels.add(...);\n * labels.add(...);\n * labels.removeAll();\n *\n * @see LabelCollection#add\n * @see LabelCollection#remove\n */\nLabelCollection.prototype.removeAll = function () {\n  var labels = this._labels;\n\n  for (var i = 0, len = labels.length; i < len; ++i) {\n    destroyLabel(this, labels[i]);\n  }\n\n  labels.length = 0;\n};\n\n/**\n * Check whether this collection contains a given label.\n *\n * @param {Label} label The label to check for.\n * @returns {Boolean} true if this collection contains the label, false otherwise.\n *\n * @see LabelCollection#get\n *\n */\nLabelCollection.prototype.contains = function (label) {\n  return (0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(label) && label._labelCollection === this;\n};\n\n/**\n * Returns the label in the collection at the specified index.  Indices are zero-based\n * and increase as labels are added.  Removing a label shifts all labels after\n * it to the left, changing their indices.  This function is commonly used with\n * {@link LabelCollection#length} to iterate over all the labels\n * in the collection.\n *\n * @param {Number} index The zero-based index of the billboard.\n *\n * @returns {Label} The label at the specified index.\n *\n * @performance Expected constant time.  If labels were removed from the collection and\n * {@link Scene#render} was not called, an implicit <code>O(n)</code>\n * operation is performed.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * // Toggle the show property of every label in the collection\n * var len = labels.length;\n * for (var i = 0; i < len; ++i) {\n *   var l = billboards.get(i);\n *   l.show = !l.show;\n * }\n *\n * @see LabelCollection#length\n */\nLabelCollection.prototype.get = function (index) {\n  //>>includeStart(\'debug\', pragmas.debug);\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(index)) {\n    throw new _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z("index is required.");\n  }\n  //>>includeEnd(\'debug\');\n\n  return this._labels[index];\n};\n\n/**\n * @private\n *\n */\nLabelCollection.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  var billboardCollection = this._billboardCollection;\n  var backgroundBillboardCollection = this._backgroundBillboardCollection;\n\n  billboardCollection.modelMatrix = this.modelMatrix;\n  billboardCollection.debugShowBoundingVolume = this.debugShowBoundingVolume;\n  backgroundBillboardCollection.modelMatrix = this.modelMatrix;\n  backgroundBillboardCollection.debugShowBoundingVolume = this.debugShowBoundingVolume;\n\n  var context = frameState.context;\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(this._textureAtlas)) {\n    this._textureAtlas = new _TextureAtlas_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n      context: context,\n    });\n    billboardCollection.textureAtlas = this._textureAtlas;\n  }\n\n  if (!(0,_Core_defined_js__WEBPACK_IMPORTED_MODULE_18__/* ["default"] */ .Z)(this._backgroundTextureAtlas)) {\n    this._backgroundTextureAtlas = new _TextureAtlas_js__WEBPACK_IMPORTED_MODULE_15__/* ["default"] */ .Z({\n      context: context,\n      initialSize: whitePixelSize,\n    });\n    backgroundBillboardCollection.textureAtlas = this._backgroundTextureAtlas;\n    addWhitePixelCanvas(this._backgroundTextureAtlas, this);\n  }\n\n  var len = this._labelsToUpdate.length;\n  for (var i = 0; i < len; ++i) {\n    var label = this._labelsToUpdate[i];\n    if (label.isDestroyed()) {\n      continue;\n    }\n\n    var preUpdateGlyphCount = label._glyphs.length;\n\n    if (label._rebindAllGlyphs) {\n      rebindAllGlyphs(this, label);\n      label._rebindAllGlyphs = false;\n    }\n\n    if (label._repositionAllGlyphs) {\n      repositionAllGlyphs(label);\n      label._repositionAllGlyphs = false;\n    }\n\n    var glyphCountDifference = label._glyphs.length - preUpdateGlyphCount;\n    this._totalGlyphCount += glyphCountDifference;\n  }\n\n  var blendOption =\n    backgroundBillboardCollection.length > 0\n      ? _BlendOption_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"].TRANSLUCENT */ .Z.TRANSLUCENT\n      : this.blendOption;\n  billboardCollection.blendOption = blendOption;\n  backgroundBillboardCollection.blendOption = blendOption;\n\n  billboardCollection._highlightColor = this._highlightColor;\n  backgroundBillboardCollection._highlightColor = this._highlightColor;\n\n  this._labelsToUpdate.length = 0;\n  backgroundBillboardCollection.update(frameState);\n  billboardCollection.update(frameState);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n *\n * @see LabelCollection#destroy\n */\nLabelCollection.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * labels = labels && labels.destroy();\n *\n * @see LabelCollection#isDestroyed\n */\nLabelCollection.prototype.destroy = function () {\n  this.removeAll();\n  this._billboardCollection = this._billboardCollection.destroy();\n  this._textureAtlas = this._textureAtlas && this._textureAtlas.destroy();\n  this._backgroundBillboardCollection = this._backgroundBillboardCollection.destroy();\n  this._backgroundTextureAtlas =\n    this._backgroundTextureAtlas && this._backgroundTextureAtlas.destroy();\n\n  return (0,_Core_destroyObject_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(this);\n};\n/* harmony default export */ __webpack_exports__["Z"] = (LabelCollection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7017\n')},81208:function(__unused_webpack___webpack_module__,__webpack_exports__){eval('/**\n * Describes how to draw a label.\n *\n * @enum {Number}\n *\n * @see Label#style\n */\nvar LabelStyle = {\n  /**\n   * Fill the text of the label, but do not outline.\n   *\n   * @type {Number}\n   * @constant\n   */\n  FILL: 0,\n\n  /**\n   * Outline the text of the label, but do not fill.\n   *\n   * @type {Number}\n   * @constant\n   */\n  OUTLINE: 1,\n\n  /**\n   * Fill and outline the text of the label.\n   *\n   * @type {Number}\n   * @constant\n   */\n  FILL_AND_OUTLINE: 2,\n};\n/* harmony default export */ __webpack_exports__["Z"] = (Object.freeze(LabelStyle));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEyMDguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUFlLHlCQUF5QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL0xhYmVsU3R5bGUuanM/NGJjMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlc2NyaWJlcyBob3cgdG8gZHJhdyBhIGxhYmVsLlxuICpcbiAqIEBlbnVtIHtOdW1iZXJ9XG4gKlxuICogQHNlZSBMYWJlbCNzdHlsZVxuICovXG52YXIgTGFiZWxTdHlsZSA9IHtcbiAgLyoqXG4gICAqIEZpbGwgdGhlIHRleHQgb2YgdGhlIGxhYmVsLCBidXQgZG8gbm90IG91dGxpbmUuXG4gICAqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgRklMTDogMCxcblxuICAvKipcbiAgICogT3V0bGluZSB0aGUgdGV4dCBvZiB0aGUgbGFiZWwsIGJ1dCBkbyBub3QgZmlsbC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBPVVRMSU5FOiAxLFxuXG4gIC8qKlxuICAgKiBGaWxsIGFuZCBvdXRsaW5lIHRoZSB0ZXh0IG9mIHRoZSBsYWJlbC5cbiAgICpcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGNvbnN0YW50XG4gICAqL1xuICBGSUxMX0FORF9PVVRMSU5FOiAyLFxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoTGFiZWxTdHlsZSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81208\n')},23436:function(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__){eval('/* harmony import */ var _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12572);\n\n\n/**\n * A light source. This type describes an interface and is not intended to be instantiated directly. Together, <code>color</code> and <code>intensity</code> produce a high-dynamic-range light color. <code>intensity</code> can also be used individually to dim or brighten the light without changing the hue.\n *\n * @alias Light\n * @constructor\n *\n * @see DirectionalLight\n * @see SunLight\n */\nfunction Light() {}\n\nObject.defineProperties(Light.prototype, {\n  /**\n   * The color of the light.\n   * @memberof Light.prototype\n   * @type {Color}\n   */\n  color: {\n    get: _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError,\n  },\n\n  /**\n   * The intensity controls the strength of the light. <code>intensity</code> has a minimum value of 0.0 and no maximum value.\n   * @memberof Light.prototype\n   * @type {Number}\n   */\n  intensity: {\n    get: _Core_DeveloperError_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"].throwInstantiationError */ .Z.throwInstantiationError,\n  },\n});\n\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (Light)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM0MzYuanMiLCJtYXBwaW5ncyI6IjtBQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFNBQVMsd0hBQXNDO0FBQy9DLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxTQUFTLHdIQUFzQztBQUMvQyxHQUFHO0FBQ0gsQ0FBQzs7QUFFRCxzRUFBZSxxREFBSyxJQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdnVlMy13ZWJwYWNrNS8uL25vZGVfbW9kdWxlcy9jZXNpdW0vU291cmNlL1NjZW5lL0xpZ2h0LmpzPzQ0YTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERldmVsb3BlckVycm9yIGZyb20gXCIuLi9Db3JlL0RldmVsb3BlckVycm9yLmpzXCI7XG5cbi8qKlxuICogQSBsaWdodCBzb3VyY2UuIFRoaXMgdHlwZSBkZXNjcmliZXMgYW4gaW50ZXJmYWNlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgaW5zdGFudGlhdGVkIGRpcmVjdGx5LiBUb2dldGhlciwgPGNvZGU+Y29sb3I8L2NvZGU+IGFuZCA8Y29kZT5pbnRlbnNpdHk8L2NvZGU+IHByb2R1Y2UgYSBoaWdoLWR5bmFtaWMtcmFuZ2UgbGlnaHQgY29sb3IuIDxjb2RlPmludGVuc2l0eTwvY29kZT4gY2FuIGFsc28gYmUgdXNlZCBpbmRpdmlkdWFsbHkgdG8gZGltIG9yIGJyaWdodGVuIHRoZSBsaWdodCB3aXRob3V0IGNoYW5naW5nIHRoZSBodWUuXG4gKlxuICogQGFsaWFzIExpZ2h0XG4gKiBAY29uc3RydWN0b3JcbiAqXG4gKiBAc2VlIERpcmVjdGlvbmFsTGlnaHRcbiAqIEBzZWUgU3VuTGlnaHRcbiAqL1xuZnVuY3Rpb24gTGlnaHQoKSB7fVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhMaWdodC5wcm90b3R5cGUsIHtcbiAgLyoqXG4gICAqIFRoZSBjb2xvciBvZiB0aGUgbGlnaHQuXG4gICAqIEBtZW1iZXJvZiBMaWdodC5wcm90b3R5cGVcbiAgICogQHR5cGUge0NvbG9yfVxuICAgKi9cbiAgY29sb3I6IHtcbiAgICBnZXQ6IERldmVsb3BlckVycm9yLnRocm93SW5zdGFudGlhdGlvbkVycm9yLFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgaW50ZW5zaXR5IGNvbnRyb2xzIHRoZSBzdHJlbmd0aCBvZiB0aGUgbGlnaHQuIDxjb2RlPmludGVuc2l0eTwvY29kZT4gaGFzIGEgbWluaW11bSB2YWx1ZSBvZiAwLjAgYW5kIG5vIG1heGltdW0gdmFsdWUuXG4gICAqIEBtZW1iZXJvZiBMaWdodC5wcm90b3R5cGVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIGludGVuc2l0eToge1xuICAgIGdldDogRGV2ZWxvcGVyRXJyb3IudGhyb3dJbnN0YW50aWF0aW9uRXJyb3IsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTGlnaHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///23436\n')}}]);